{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/handlebars/lib/handlebars.js","node_modules/handlebars/lib/handlebars.runtime.js","node_modules/handlebars/lib/handlebars/base.js","node_modules/handlebars/lib/handlebars/compiler/ast.js","node_modules/handlebars/lib/handlebars/compiler/base.js","node_modules/handlebars/lib/handlebars/compiler/code-gen.js","node_modules/handlebars/lib/handlebars/compiler/compiler.js","node_modules/handlebars/lib/handlebars/compiler/helpers.js","node_modules/handlebars/lib/handlebars/compiler/javascript-compiler.js","node_modules/handlebars/lib/handlebars/compiler/parser.js","node_modules/handlebars/lib/handlebars/compiler/printer.js","node_modules/handlebars/lib/handlebars/compiler/visitor.js","node_modules/handlebars/lib/handlebars/compiler/whitespace-control.js","node_modules/handlebars/lib/handlebars/decorators.js","node_modules/handlebars/lib/handlebars/decorators/inline.js","node_modules/handlebars/lib/handlebars/exception.js","node_modules/handlebars/lib/handlebars/helpers.js","node_modules/handlebars/lib/handlebars/helpers/block-helper-missing.js","node_modules/handlebars/lib/handlebars/helpers/each.js","node_modules/handlebars/lib/handlebars/helpers/helper-missing.js","node_modules/handlebars/lib/handlebars/helpers/if.js","node_modules/handlebars/lib/handlebars/helpers/log.js","node_modules/handlebars/lib/handlebars/helpers/lookup.js","node_modules/handlebars/lib/handlebars/helpers/with.js","node_modules/handlebars/lib/handlebars/logger.js","node_modules/handlebars/dist/cjs/handlebars/node_modules/handlebars/lib/handlebars/no-conflict.js","node_modules/handlebars/lib/handlebars/runtime.js","node_modules/handlebars/lib/handlebars/safe-string.js","node_modules/handlebars/lib/handlebars/utils.js","node_modules/handlebars/lib/index.js","node_modules/handlebars/node_modules/source-map/lib/array-set.js","node_modules/handlebars/node_modules/source-map/lib/base64-vlq.js","node_modules/handlebars/node_modules/source-map/lib/base64.js","node_modules/handlebars/node_modules/source-map/lib/binary-search.js","node_modules/handlebars/node_modules/source-map/lib/mapping-list.js","node_modules/handlebars/node_modules/source-map/lib/quick-sort.js","node_modules/handlebars/node_modules/source-map/lib/source-map-consumer.js","node_modules/handlebars/node_modules/source-map/lib/source-map-generator.js","node_modules/handlebars/node_modules/source-map/lib/source-node.js","node_modules/handlebars/node_modules/source-map/lib/util.js","node_modules/handlebars/node_modules/source-map/source-map.js","node_modules/jquery/dist/jquery.js","node_modules/lodash/_DataView.js","node_modules/lodash/_Hash.js","node_modules/lodash/_LazyWrapper.js","node_modules/lodash/_ListCache.js","node_modules/lodash/_LodashWrapper.js","node_modules/lodash/_Map.js","node_modules/lodash/_MapCache.js","node_modules/lodash/_Promise.js","node_modules/lodash/_Set.js","node_modules/lodash/_SetCache.js","node_modules/lodash/_Stack.js","node_modules/lodash/_Symbol.js","node_modules/lodash/_Uint8Array.js","node_modules/lodash/_WeakMap.js","node_modules/lodash/_apply.js","node_modules/lodash/_arrayEach.js","node_modules/lodash/_arrayFilter.js","node_modules/lodash/_arrayIncludes.js","node_modules/lodash/_arrayIncludesWith.js","node_modules/lodash/_arrayLikeKeys.js","node_modules/lodash/_arrayMap.js","node_modules/lodash/_arrayPush.js","node_modules/lodash/_arrayReduce.js","node_modules/lodash/_arraySome.js","node_modules/lodash/_asciiSize.js","node_modules/lodash/_asciiToArray.js","node_modules/lodash/_asciiWords.js","node_modules/lodash/_assignValue.js","node_modules/lodash/_assocIndexOf.js","node_modules/lodash/_baseAssign.js","node_modules/lodash/_baseAssignIn.js","node_modules/lodash/_baseAssignValue.js","node_modules/lodash/_baseClamp.js","node_modules/lodash/_baseClone.js","node_modules/lodash/_baseCreate.js","node_modules/lodash/_baseDifference.js","node_modules/lodash/_baseEach.js","node_modules/lodash/_baseFilter.js","node_modules/lodash/_baseFindIndex.js","node_modules/lodash/_baseFindKey.js","node_modules/lodash/_baseFlatten.js","node_modules/lodash/_baseFor.js","node_modules/lodash/_baseForOwn.js","node_modules/lodash/_baseGet.js","node_modules/lodash/_baseGetAllKeys.js","node_modules/lodash/_baseGetTag.js","node_modules/lodash/_baseHas.js","node_modules/lodash/_baseHasIn.js","node_modules/lodash/_baseInRange.js","node_modules/lodash/_baseIndexOf.js","node_modules/lodash/_baseIntersection.js","node_modules/lodash/_baseIsArguments.js","node_modules/lodash/_baseIsEqual.js","node_modules/lodash/_baseIsEqualDeep.js","node_modules/lodash/_baseIsMap.js","node_modules/lodash/_baseIsMatch.js","node_modules/lodash/_baseIsNaN.js","node_modules/lodash/_baseIsNative.js","node_modules/lodash/_baseIsSet.js","node_modules/lodash/_baseIsTypedArray.js","node_modules/lodash/_baseIteratee.js","node_modules/lodash/_baseKeys.js","node_modules/lodash/_baseKeysIn.js","node_modules/lodash/_baseLodash.js","node_modules/lodash/_baseMap.js","node_modules/lodash/_baseMatches.js","node_modules/lodash/_baseMatchesProperty.js","node_modules/lodash/_baseProperty.js","node_modules/lodash/_basePropertyDeep.js","node_modules/lodash/_basePropertyOf.js","node_modules/lodash/_baseRandom.js","node_modules/lodash/_baseReduce.js","node_modules/lodash/_baseRepeat.js","node_modules/lodash/_baseRest.js","node_modules/lodash/_baseSetToString.js","node_modules/lodash/_baseSlice.js","node_modules/lodash/_baseTimes.js","node_modules/lodash/_baseToString.js","node_modules/lodash/_baseTrim.js","node_modules/lodash/_baseUnary.js","node_modules/lodash/_baseUniq.js","node_modules/lodash/_baseValues.js","node_modules/lodash/_cacheHas.js","node_modules/lodash/_castArrayLikeObject.js","node_modules/lodash/_castFunction.js","node_modules/lodash/_castPath.js","node_modules/lodash/_castSlice.js","node_modules/lodash/_cloneArrayBuffer.js","node_modules/lodash/_cloneBuffer.js","node_modules/lodash/_cloneDataView.js","node_modules/lodash/_cloneRegExp.js","node_modules/lodash/_cloneSymbol.js","node_modules/lodash/_cloneTypedArray.js","node_modules/lodash/_copyArray.js","node_modules/lodash/_copyObject.js","node_modules/lodash/_copySymbols.js","node_modules/lodash/_copySymbolsIn.js","node_modules/lodash/_coreJsData.js","node_modules/lodash/_createBaseEach.js","node_modules/lodash/_createBaseFor.js","node_modules/lodash/_createCompounder.js","node_modules/lodash/_createFind.js","node_modules/lodash/_createFlow.js","node_modules/lodash/_createPadding.js","node_modules/lodash/_createRound.js","node_modules/lodash/_createSet.js","node_modules/lodash/_deburrLetter.js","node_modules/lodash/_defineProperty.js","node_modules/lodash/_equalArrays.js","node_modules/lodash/_equalByTag.js","node_modules/lodash/_equalObjects.js","node_modules/lodash/_flatRest.js","node_modules/lodash/_freeGlobal.js","node_modules/lodash/_getAllKeys.js","node_modules/lodash/_getAllKeysIn.js","node_modules/lodash/_getData.js","node_modules/lodash/_getFuncName.js","node_modules/lodash/_getMapData.js","node_modules/lodash/_getMatchData.js","node_modules/lodash/_getNative.js","node_modules/lodash/_getPrototype.js","node_modules/lodash/_getRawTag.js","node_modules/lodash/_getSymbols.js","node_modules/lodash/_getSymbolsIn.js","node_modules/lodash/_getTag.js","node_modules/lodash/_getValue.js","node_modules/lodash/_hasPath.js","node_modules/lodash/_hasUnicode.js","node_modules/lodash/_hasUnicodeWord.js","node_modules/lodash/_hashClear.js","node_modules/lodash/_hashDelete.js","node_modules/lodash/_hashGet.js","node_modules/lodash/_hashHas.js","node_modules/lodash/_hashSet.js","node_modules/lodash/_initCloneArray.js","node_modules/lodash/_initCloneByTag.js","node_modules/lodash/_initCloneObject.js","node_modules/lodash/_isFlattenable.js","node_modules/lodash/_isIndex.js","node_modules/lodash/_isIterateeCall.js","node_modules/lodash/_isKey.js","node_modules/lodash/_isKeyable.js","node_modules/lodash/_isLaziable.js","node_modules/lodash/_isMasked.js","node_modules/lodash/_isPrototype.js","node_modules/lodash/_isStrictComparable.js","node_modules/lodash/_listCacheClear.js","node_modules/lodash/_listCacheDelete.js","node_modules/lodash/_listCacheGet.js","node_modules/lodash/_listCacheHas.js","node_modules/lodash/_listCacheSet.js","node_modules/lodash/_mapCacheClear.js","node_modules/lodash/_mapCacheDelete.js","node_modules/lodash/_mapCacheGet.js","node_modules/lodash/_mapCacheHas.js","node_modules/lodash/_mapCacheSet.js","node_modules/lodash/_mapToArray.js","node_modules/lodash/_matchesStrictComparable.js","node_modules/lodash/_memoizeCapped.js","node_modules/lodash/_metaMap.js","node_modules/lodash/_nativeCreate.js","node_modules/lodash/_nativeKeys.js","node_modules/lodash/_nativeKeysIn.js","node_modules/lodash/_nodeUtil.js","node_modules/lodash/_objectToString.js","node_modules/lodash/_overArg.js","node_modules/lodash/_overRest.js","node_modules/lodash/_realNames.js","node_modules/lodash/_root.js","node_modules/lodash/_setCacheAdd.js","node_modules/lodash/_setCacheHas.js","node_modules/lodash/_setToArray.js","node_modules/lodash/_setToString.js","node_modules/lodash/_shortOut.js","node_modules/lodash/_stackClear.js","node_modules/lodash/_stackDelete.js","node_modules/lodash/_stackGet.js","node_modules/lodash/_stackHas.js","node_modules/lodash/_stackSet.js","node_modules/lodash/_strictIndexOf.js","node_modules/lodash/_stringSize.js","node_modules/lodash/_stringToArray.js","node_modules/lodash/_stringToPath.js","node_modules/lodash/_toKey.js","node_modules/lodash/_toSource.js","node_modules/lodash/_trimmedEndIndex.js","node_modules/lodash/_unicodeSize.js","node_modules/lodash/_unicodeToArray.js","node_modules/lodash/_unicodeWords.js","node_modules/lodash/_wrapperClone.js","node_modules/lodash/ceil.js","node_modules/lodash/chunk.js","node_modules/lodash/clamp.js","node_modules/lodash/clone.js","node_modules/lodash/cloneDeep.js","node_modules/lodash/compact.js","node_modules/lodash/constant.js","node_modules/lodash/deburr.js","node_modules/lodash/defaultTo.js","node_modules/lodash/difference.js","node_modules/lodash/eq.js","node_modules/lodash/filter.js","node_modules/lodash/find.js","node_modules/lodash/findIndex.js","node_modules/lodash/findKey.js","node_modules/lodash/findLast.js","node_modules/lodash/findLastIndex.js","node_modules/lodash/first.js","node_modules/lodash/flatten.js","node_modules/lodash/floor.js","node_modules/lodash/flow.js","node_modules/lodash/forEach.js","node_modules/lodash/get.js","node_modules/lodash/has.js","node_modules/lodash/hasIn.js","node_modules/lodash/head.js","node_modules/lodash/identity.js","node_modules/lodash/inRange.js","node_modules/lodash/includes.js","node_modules/lodash/intersection.js","node_modules/lodash/isArguments.js","node_modules/lodash/isArray.js","node_modules/lodash/isArrayLike.js","node_modules/lodash/isArrayLikeObject.js","node_modules/lodash/isBuffer.js","node_modules/lodash/isEmpty.js","node_modules/lodash/isEqual.js","node_modules/lodash/isFunction.js","node_modules/lodash/isLength.js","node_modules/lodash/isMap.js","node_modules/lodash/isNaN.js","node_modules/lodash/isNil.js","node_modules/lodash/isNumber.js","node_modules/lodash/isObject.js","node_modules/lodash/isObjectLike.js","node_modules/lodash/isSet.js","node_modules/lodash/isString.js","node_modules/lodash/isSymbol.js","node_modules/lodash/isTypedArray.js","node_modules/lodash/keys.js","node_modules/lodash/keysIn.js","node_modules/lodash/last.js","node_modules/lodash/lowerCase.js","node_modules/lodash/map.js","node_modules/lodash/mapValues.js","node_modules/lodash/memoize.js","node_modules/lodash/noop.js","node_modules/lodash/padEnd.js","node_modules/lodash/property.js","node_modules/lodash/random.js","node_modules/lodash/reduce.js","node_modules/lodash/round.js","node_modules/lodash/startsWith.js","node_modules/lodash/stubArray.js","node_modules/lodash/stubFalse.js","node_modules/lodash/tail.js","node_modules/lodash/toFinite.js","node_modules/lodash/toInteger.js","node_modules/lodash/toLower.js","node_modules/lodash/toNumber.js","node_modules/lodash/toString.js","node_modules/lodash/uniq.js","node_modules/lodash/uniqueId.js","node_modules/lodash/values.js","node_modules/lodash/without.js","node_modules/lodash/words.js","node_modules/lodash/wrapperLodash.js","node_modules/performance-now/lib/performance-now.js","node_modules/process/browser.js","node_modules/raf/index.js","src/assets/scripts/client/App.js","src/assets/scripts/client/AppController.js","src/assets/scripts/client/EventTracker.js","src/assets/scripts/client/InputController.js","src/assets/scripts/client/LoadingView.js","src/assets/scripts/client/aircraft/AircraftCommander.js","src/assets/scripts/client/aircraft/AircraftConflict.js","src/assets/scripts/client/aircraft/AircraftController.js","src/assets/scripts/client/aircraft/AircraftModel.js","src/assets/scripts/client/aircraft/AircraftTypeDefinitionCollection.js","src/assets/scripts/client/aircraft/AircraftTypeDefinitionModel.js","src/assets/scripts/client/aircraft/FlightManagementSystem/Fms.js","src/assets/scripts/client/aircraft/FlightManagementSystem/LegModel.js","src/assets/scripts/client/aircraft/FlightManagementSystem/RouteModel.js","src/assets/scripts/client/aircraft/FlightManagementSystem/WaypointModel.js","src/assets/scripts/client/aircraft/ModeControl/ModeController.js","src/assets/scripts/client/aircraft/ModeControl/modeControlConstants.js","src/assets/scripts/client/aircraft/Pilot/Pilot.js","src/assets/scripts/client/aircraft/StripView/StripViewCollection.js","src/assets/scripts/client/aircraft/StripView/StripViewController.js","src/assets/scripts/client/aircraft/StripView/StripViewModel.js","src/assets/scripts/client/aircraft/StripView/stripViewTemplate.js","src/assets/scripts/client/airline/AirlineCollection.js","src/assets/scripts/client/airline/AirlineController.js","src/assets/scripts/client/airline/AirlineModel.js","src/assets/scripts/client/airline/airlineHelpers.js","src/assets/scripts/client/airline/buildFlightNumber.js","src/assets/scripts/client/airport/AirportController.js","src/assets/scripts/client/airport/AirportModel.js","src/assets/scripts/client/airport/AirspaceModel.js","src/assets/scripts/client/airport/MapCollection.js","src/assets/scripts/client/airport/MapModel.js","src/assets/scripts/client/airport/runway/RunwayCollection.js","src/assets/scripts/client/airport/runway/RunwayModel.js","src/assets/scripts/client/airport/runway/RunwayRelationshipModel.js","src/assets/scripts/client/airportGuide/AirportGuideView.js","src/assets/scripts/client/airportGuide/AirportGuideViewController.js","src/assets/scripts/client/base/BaseCollection.js","src/assets/scripts/client/base/BaseModel.js","src/assets/scripts/client/base/DynamicPositionModel.js","src/assets/scripts/client/base/StaticPositionModel.js","src/assets/scripts/client/base/positionModelHelpers.js","src/assets/scripts/client/base/staticPositionToDynamicPositionHelper.js","src/assets/scripts/client/canvas/CanvasController.js","src/assets/scripts/client/canvas/CanvasStageModel.js","src/assets/scripts/client/changelog/ChangelogController.js","src/assets/scripts/client/commands/ParsedCommand.js","src/assets/scripts/client/commands/aircraftCommand/AircraftCommandModel.js","src/assets/scripts/client/commands/aircraftCommand/aircraftCommandDefinitions.js","src/assets/scripts/client/commands/aircraftCommand/aircraftCommandMap.js","src/assets/scripts/client/commands/parsers/CommandParser.js","src/assets/scripts/client/commands/parsers/argumentParsers.js","src/assets/scripts/client/commands/parsers/argumentValidators.js","src/assets/scripts/client/commands/parsers/parserMessages.js","src/assets/scripts/client/commands/scopeCommand/ScopeCommandModel.js","src/assets/scripts/client/commands/scopeCommand/scopeCommandMap.js","src/assets/scripts/client/constants/aircraftConstants.js","src/assets/scripts/client/constants/airlineConstants.js","src/assets/scripts/client/constants/airportConstants.js","src/assets/scripts/client/constants/autocompleteConstants.js","src/assets/scripts/client/constants/canvasConstants.js","src/assets/scripts/client/constants/environmentConstants.js","src/assets/scripts/client/constants/eventNames.js","src/assets/scripts/client/constants/gameOptionConstants.js","src/assets/scripts/client/constants/globalConstants.js","src/assets/scripts/client/constants/inputConstants.js","src/assets/scripts/client/constants/logLevel.js","src/assets/scripts/client/constants/positionConstants.js","src/assets/scripts/client/constants/routeConstants.js","src/assets/scripts/client/constants/scopeConstants.js","src/assets/scripts/client/constants/selectors.js","src/assets/scripts/client/constants/speechConstants.js","src/assets/scripts/client/constants/storageKeys.js","src/assets/scripts/client/constants/themes.js","src/assets/scripts/client/constants/themes/celestial/color.js","src/assets/scripts/client/constants/themes/celestial/modules/dataBlock.js","src/assets/scripts/client/constants/themes/celestial/modules/radarTarget.js","src/assets/scripts/client/constants/themes/celestial/modules/scope.js","src/assets/scripts/client/constants/themes/celestial/modules/terrain.js","src/assets/scripts/client/constants/themes/celestial/modules/windVane.js","src/assets/scripts/client/constants/themes/celestial/theme.js","src/assets/scripts/client/constants/themes/classic/color.js","src/assets/scripts/client/constants/themes/classic/modules/dataBlock.js","src/assets/scripts/client/constants/themes/classic/modules/radarTarget.js","src/assets/scripts/client/constants/themes/classic/modules/scope.js","src/assets/scripts/client/constants/themes/classic/modules/terrain.js","src/assets/scripts/client/constants/themes/classic/modules/windVane.js","src/assets/scripts/client/constants/themes/classic/theme.js","src/assets/scripts/client/constants/themes/default/color.js","src/assets/scripts/client/constants/themes/default/modules/dataBlock.js","src/assets/scripts/client/constants/themes/default/modules/radarTarget.js","src/assets/scripts/client/constants/themes/default/modules/scope.js","src/assets/scripts/client/constants/themes/default/modules/terrain.js","src/assets/scripts/client/constants/themes/default/modules/windVane.js","src/assets/scripts/client/constants/themes/default/theme.js","src/assets/scripts/client/constants/trackableEvents.js","src/assets/scripts/client/constants/waypointConstants.js","src/assets/scripts/client/contentQueue/ContentQueue.js","src/assets/scripts/client/contentQueue/LoadableContentModel.js","src/assets/scripts/client/engine/TimeKeeper.js","src/assets/scripts/client/game/GameController.js","src/assets/scripts/client/game/GameOptions.js","src/assets/scripts/client/game/ScoreController.js","src/assets/scripts/client/index.js","src/assets/scripts/client/info/AirportInfoController.js","src/assets/scripts/client/info/SimClockController.js","src/assets/scripts/client/info/airportInfoTemplate.js","src/assets/scripts/client/lib/EventBus.js","src/assets/scripts/client/lib/EventModel.js","src/assets/scripts/client/math/circle.js","src/assets/scripts/client/math/core.js","src/assets/scripts/client/math/distance.js","src/assets/scripts/client/math/flightMath.js","src/assets/scripts/client/math/vector.js","src/assets/scripts/client/measurement/MeasureLegModel.js","src/assets/scripts/client/measurement/MeasurePath.js","src/assets/scripts/client/measurement/MeasureTool.js","src/assets/scripts/client/navigationLibrary/AirwayModel.js","src/assets/scripts/client/navigationLibrary/FixCollection.js","src/assets/scripts/client/navigationLibrary/FixModel.js","src/assets/scripts/client/navigationLibrary/HoldCollection.js","src/assets/scripts/client/navigationLibrary/HoldModel.js","src/assets/scripts/client/navigationLibrary/NavigationLibrary.js","src/assets/scripts/client/navigationLibrary/ProcedureModel.js","src/assets/scripts/client/scope/RadarTargetCollection.js","src/assets/scripts/client/scope/RadarTargetModel.js","src/assets/scripts/client/scope/ScopeModel.js","src/assets/scripts/client/speech.js","src/assets/scripts/client/trafficGenerator/SpawnPatternCollection.js","src/assets/scripts/client/trafficGenerator/SpawnPatternModel.js","src/assets/scripts/client/trafficGenerator/SpawnScheduler.js","src/assets/scripts/client/trafficGenerator/buildPreSpawnAircraft.js","src/assets/scripts/client/trafficGenerator/spawnPatternModelJsonValidator.js","src/assets/scripts/client/ui/SettingsController.js","src/assets/scripts/client/ui/TrafficRateController.js","src/assets/scripts/client/ui/TutorialStep.js","src/assets/scripts/client/ui/TutorialView.js","src/assets/scripts/client/ui/UiController.js","src/assets/scripts/client/ui/VideoMapController.js","src/assets/scripts/client/ui/autocomplete/AutocompleteArgumentTemplate.js","src/assets/scripts/client/ui/autocomplete/AutocompleteCommandTemplate.js","src/assets/scripts/client/ui/autocomplete/AutocompleteController.js","src/assets/scripts/client/ui/autocomplete/RegexGroup.js","src/assets/scripts/client/util.js","src/assets/scripts/client/utilities/generalUtilities.js","src/assets/scripts/client/utilities/navigationUtilities.js","src/assets/scripts/client/utilities/radioUtilities.js","src/assets/scripts/client/utilities/transponderUtilities.js","src/assets/scripts/client/utilities/unitConverters.js","src/assets/scripts/client/utilities/validatorUtilities.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","_create","_handlebarsRuntime2","create","hb","compile","input","options","_handlebarsCompilerCompiler","precompile","AST","_handlebarsCompilerAst2","Compiler","JavaScriptCompiler","_handlebarsCompilerJavascriptCompiler2","Parser","_handlebarsCompilerBase","parser","parse","inst","_handlebarsNoConflict2","Visitor","_handlebarsCompilerVisitor2","base","_interopRequireWildcard","Utils","runtime","HandlebarsEnvironment","extend","SafeString","_handlebarsSafeString2","Exception","_handlebarsException2","escapeExpression","VM","template","spec","2","3","4","5","6","7","helpers","partials","decorators","this","_helpers","registerDefaultHelpers","_decorators","registerDefaultDecorators","prototype","constructor","logger","_logger2","log","registerHelper","name","fn","_utils","toString","_exception2","unregisterHelper","registerPartial","partial","unregisterPartial","registerDecorator","unregisterDecorator","createFrame","helperExpression","node","type","params","hash","scopedId","path","test","original","simpleId","parts","depth","_parser2","yy","locInfo","SourceLocation","srcName","_whitespaceControl2","accept","Helpers","SourceNode","undefined","define","amd","SourceMap","err","castChunk","chunk","codeGen","loc","isArray","ret","len","push","wrap","CodeGen","srcFile","source","line","column","chunks","src","add","join","prepend","toStringWithSourceMap","isEmpty","unshift","merge","empty","each","iter","currentLocation","start","arguments","functionCall","generateList","quotedString","str","replace","objectLiteral","obj","pairs","key","hasOwnProperty","value","entries","generateArray","env","data","compat","useDepths","ast","environment","compiled","compileInput","templateSpec","context","execOptions","_setup","setupOptions","_child","blockParams","depths","slice","argEquals","b","transformLiteralToPath","sexpr","literal","compiler","equals","other","opcodes","opcode","otherOpcode","args","children","guid","program","sourceNode","stringParams","trackIds","knownHelpers","helperMissing","blockHelperMissing","if","unless","with","lookup","_name","compileProgram","result","usePartial","shift","Program","body","bodyLength","isSimple","BlockStatement","block","inverse","classifySexpr","helperSexpr","simpleSexpr","ambiguousSexpr","DecoratorBlock","decorator","setupFullMustacheParams","useDecorators","PartialStatement","explicitPartialContext","partialName","isDynamic","indent","preventIndent","PartialBlockStatement","partialBlock","MustacheStatement","mustache","SubExpression","escaped","noEscape","Decorator","ContentStatement","content","CommentStatement","isBlock","strict","knownHelpersOnly","falsy","_ast2","PathExpression","addDepth","scoped","blockParamId","blockParamIndex","StringLiteral","string","NumberLiteral","number","BooleanLiteral","bool","UndefinedLiteral","NullLiteral","Hash","l","pushParam","isBlockParam","isHelper","isEligible","_name2","pushParams","val","blockParamChild","omitEmpty","param","indexOf","first_line","first_column","end","last_line","last_column","token","substring","open","close","charAt","comment","dig","part","isLiteral","separator","strip","escapeFlag","openRawBlock","contents","validateClose","openStrip","inverseStrip","closeStrip","openBlock","inverseAndProgram","inverted","chain","statements","firstLoc","lastLoc","errorNode","Literal","nameLookup","parent","isValidJavaScriptVariableName","JSON","stringify","depthedLookup","aliasable","compilerInfo","revision","_base","COMPILER_REVISION","REVISION_CHANGES","appendToBuffer","location","explicit","initializeBuffer","asObject","isChild","programs","environments","preamble","stackSlot","stackVars","aliases","registers","list","hashes","compileStack","inlineStack","compileChildren","useBlockParams","apply","pushSource","Function","createFunctionContext","main","main_d","_context","useData","compilerOptions","file","destName","map","lastContext","_codeGen2","varDeclarations","locals","concat","aliasCount","alias","referenceCount","mergeSource","appendOnly","forceBuffer","appendFirst","sourceSeen","bufferStart","bufferEnd","blockValue","contextName","setupHelperArgs","blockName","popStack","splice","ambiguousBlockValue","flushInline","current","topStack","lastHelper","appendContent","pendingContent","pendingLocation","append","isInline","replaceStack","local","appendEscaped","getContext","pushContext","pushStackLiteral","lookupOnContext","resolvePath","lookupBlockParam","lookupData","assumeObjects","requireTerminal","stack","strictLookup","_this","resolvePossibleLambda","pushStringParam","pushString","emptyHash","pushHash","values","types","contexts","ids","popHash","pop","pushLiteral","pushProgram","programExpression","paramSize","foundDecorator","invokeHelper","nonHelper","helper","setupHelper","simple","callParams","invokeKnownHelper","invokeAmbiguous","helperCall","useRegister","paramsInit","invokePartial","setupParams","assignToHash","id","pushId","child","existing","matchExistingProgram","index","programParams","expr","item","callback","prefix","createdStack","usedLiteral","top","incrStack","topStackName","entry","wrapped","inline","blockHelper","objectArgs","hashIds","hashTypes","hashContexts","reservedWords","split","compilerWords","RESERVED_WORDS","handlebars","trace","symbols_","error","root","EOF","program_repetition0","statement","rawBlock","COMMENT","CONTENT","rawBlock_repetition_plus0","END_RAW_BLOCK","OPEN_RAW_BLOCK","helperName","openRawBlock_repetition0","openRawBlock_option0","CLOSE_RAW_BLOCK","block_option0","closeBlock","openInverse","block_option1","OPEN_BLOCK","openBlock_repetition0","openBlock_option0","openBlock_option1","CLOSE","OPEN_INVERSE","openInverse_repetition0","openInverse_option0","openInverse_option1","openInverseChain","OPEN_INVERSE_CHAIN","openInverseChain_repetition0","openInverseChain_option0","openInverseChain_option1","INVERSE","inverseChain","inverseChain_option0","OPEN_ENDBLOCK","OPEN","mustache_repetition0","mustache_option0","OPEN_UNESCAPED","mustache_repetition1","mustache_option1","CLOSE_UNESCAPED","OPEN_PARTIAL","partial_repetition0","partial_option0","openPartialBlock","OPEN_PARTIAL_BLOCK","openPartialBlock_repetition0","openPartialBlock_option0","OPEN_SEXPR","sexpr_repetition0","sexpr_option0","CLOSE_SEXPR","hash_repetition_plus0","hashSegment","ID","EQUALS","OPEN_BLOCK_PARAMS","blockParams_repetition_plus0","CLOSE_BLOCK_PARAMS","dataName","STRING","NUMBER","BOOLEAN","UNDEFINED","NULL","DATA","pathSegments","SEP","$accept","$end","terminals_","14","15","18","19","23","29","33","34","39","44","47","48","51","54","55","60","65","68","72","73","75","77","80","81","82","83","84","85","87","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","$","prepareProgram","stripComment","stripFlags","prepareRawBlock","prepareBlock","chained","prepareMustache","preparePartialBlock","Number","preparePath","table","8","9","10","11","12","13","16","24","27","59","20","78","79","86","17","56","64","49","52","25","38","43","45","28","57","26","30","35","21","61","50","63","69","70","71","53","58","66","31","36","22","62","46","40","67","32","74","37","41","76","42","defaultActions","91","102","105","111","112","117","120","123","124","136","137","parseError","self","vstack","lstack","recovering","lexer","setInput","yylloc","yyloc","ranges","symbol","preErrorSymbol","state","action","newState","expected","yyval","lex","errStr","showPosition","text","match","Array","range","_input","_more","_less","done","matched","conditionStack","offset","ch","unput","lines","substr","oldLines","more","less","pastInput","past","upcomingInput","next","pre","tempMatch","rules","_currentRules","flex","matches","begin","condition","popState","conditions","topState","pushState","yy_","$avoiding_name_collisions","YY_START","mu","inclusive","emu","com","raw","INITIAL","PrintVisitor","padding","_visitor2","pad","out","paramStrings","joinedPairs","HashPair","pair","parents","visitSubExpression","acceptRequired","acceptArray","acceptKey","visitBlock","visitPartial","mutating","array","object","WhitespaceControl","isPrevWhitespace","isRoot","prev","sibling","isNextWhitespace","omitRight","multiple","rightStripped","omitLeft","leftStripped","doStandalone","ignoreStandalone","isRootSeen","_isPrevWhitespace","_isNextWhitespace","openStandalone","closeStandalone","inlineStandalone","exec","firstInverse","lastInverse","instance","_decoratorsInline2","props","container","errorProps","message","tmp","idx","captureStackTrace","lineNumber","Object","defineProperty","enumerable","nop","_helpersBlockHelperMissing2","_helpersEach2","_helpersHelperMissing2","_helpersIf2","_helpersLog2","_helpersLookup2","_helpersWith2","contextPath","appendContextPath","execIteration","field","last","first","isFunction","j","priorKey","conditional","includeZero","level","propertyIsEnumerable","methodMap","lookupLevel","levelMap","toLowerCase","parseInt","console","method","_len","_key","Handlebars","global","window","$Handlebars","noConflict","compilerRevision","currentRevision","runtimeVersions","compilerVersions","checkRevision","lambda","resolvePartial","declaredBlockParams","programWrapper","wrapProgram","_parent","common","nullContext","seal","noop","initData","executeDecorators","isTop","currentPartialBlock","prog","currentDepths","toHTML","possible","badChars","escapeChar","frame","escape","&","<",">","\"","'","`","=","chr","printer","extension","filename","templateString","readFileSync","print","extensions","util","has","hasNativeMap","Map","ArraySet","_array","_set","fromArray","aArray","aAllowDuplicates","set","size","getOwnPropertyNames","aStr","sStr","toSetString","isDuplicate","get","at","aIdx","toArray","base64","encode","aValue","digit","encoded","vlq","toVLQSigned","VLQ_BASE","decode","aIndex","aOutParam","continuation","shifted","strLen","charCodeAt","rest","intToCharMap","TypeError","charCode","GREATEST_LOWER_BOUND","LEAST_UPPER_BOUND","search","aNeedle","aHaystack","aCompare","aBias","recursiveSearch","aLow","aHigh","mid","Math","floor","cmp","MappingList","_sorted","_last","generatedLine","generatedColumn","unsortedForEach","aCallback","aThisArg","forEach","aMapping","mappingA","mappingB","lineA","lineB","columnA","columnB","compareByGeneratedPositionsInflated","sort","swap","ary","x","y","temp","doQuickSort","comparator","low","high","round","random","pivot","q","quickSort","binarySearch","base64VLQ","SourceMapConsumer","aSourceMap","aSourceMapURL","sourceMap","parseSourceMapInput","sections","IndexedSourceMapConsumer","BasicSourceMapConsumer","version","getArg","sources","names","sourceRoot","sourcesContent","mappings","_version","normalize","String","isAbsolute","relative","_names","_sources","_absoluteSources","s","computeSourceURL","_mappings","_sourceMapURL","Mapping","originalLine","originalColumn","lastOffset","_sections","url","offsetLine","offsetColumn","generatedOffset","consumer","fromSourceMap","__generatedMappings","configurable","_parseMappings","__originalMappings","_charIsMappingSeparator","aSourceRoot","GENERATED_ORDER","ORIGINAL_ORDER","eachMapping","aContext","aOrder","_generatedMappings","_originalMappings","mapping","allGeneratedPositionsFor","aArgs","needle","_findSourceIndex","_findMapping","compareByOriginalPositions","lastColumn","aSource","relativeSource","smc","_sourceRoot","_generateSourcesContent","_file","generatedMappings","destGeneratedMappings","destOriginalMappings","srcMapping","destMapping","segment","previousGeneratedColumn","previousOriginalLine","previousOriginalColumn","previousSource","previousName","cachedSegments","originalMappings","compareByGeneratedPositionsDeflated","aMappings","aLineName","aColumnName","aComparator","computeColumnSpans","nextMapping","lastGeneratedColumn","Infinity","originalPositionFor","hasContentsOfAllSources","some","sc","sourceContentFor","nullOnMissing","urlParse","fileUriAbsPath","scheme","generatedPositionFor","sectionIndex","section","bias","every","generatedPosition","sectionMappings","adjustedMapping","SourceMapGenerator","_skipValidation","_sourcesContents","aSourceMapConsumer","generator","newMapping","generated","addMapping","sourceFile","sourceRelative","setSourceContent","_validateMapping","aSourceFile","aSourceContent","keys","applySourceMap","aSourceMapPath","newSources","newNames","aGenerated","aOriginal","aName","_serializeMappings","nameIdx","sourceIdx","previousGeneratedLine","aSources","toJSON","REGEX_NEWLINE","isSourceNode","aLine","aColumn","aChunks","sourceContents","fromStringWithSourceMap","aGeneratedCode","aRelativePath","remainingLines","remainingLinesIndex","shiftNextLine","getNextLine","lastGeneratedLine","lastMapping","nextLine","addMappingWithCode","aChunk","walk","aFn","aSep","newChildren","replaceRight","aPattern","aReplacement","lastChild","walkSourceContents","fromSetString","sourceMappingActive","lastOriginalSource","lastOriginalLine","lastOriginalColumn","lastOriginalName","sourceContent","aDefaultValue","urlRegexp","dataUrlRegexp","aUrl","auth","host","port","urlGenerate","aParsedUrl","aPath","up","aRoot","aPathUrl","aRootUrl","joined","lastIndexOf","supportsNullProto","identity","isProtoString","strcmp","aStr1","aStr2","onlyCompareOriginal","onlyCompareGenerated","sourceURL","sourceMapURL","parsed","factory","document","w","noGlobal","arr","getProto","getPrototypeOf","flat","class2type","hasOwn","fnToString","ObjectFunctionString","support","nodeType","isWindow","preservedScriptAttributes","nonce","noModule","DOMEval","doc","script","createElement","getAttribute","setAttribute","head","appendChild","parentNode","removeChild","toType","jQuery","selector","init","isArrayLike","jquery","num","pushStack","elems","prevObject","elem","eq","even","grep","_elem","odd","copy","copyIsArray","clone","target","deep","isPlainObject","expando","isReady","msg","proto","Ctor","isEmptyObject","globalEval","makeArray","results","inArray","second","invert","callbackExpect","arg","Symbol","iterator","_i","Sizzle","Expr","getText","isXML","tokenize","select","outermostContext","sortInput","hasDuplicate","setDocument","docElem","documentIsHTML","rbuggyQSA","rbuggyMatches","contains","Date","preferredDoc","dirruns","classCache","createCache","tokenCache","compilerCache","nonnativeSelectorCache","sortOrder","pushNative","booleans","whitespace","identifier","attributes","pseudos","rwhitespace","RegExp","rtrim","rcomma","rcombinators","rdescend","rpseudo","ridentifier","matchExpr","CLASS","TAG","ATTR","PSEUDO","CHILD","needsContext","rhtml","rinputs","rheader","rnative","rquickExpr","rsibling","runescape","funescape","nonHex","fromCharCode","rcssescape","fcssescape","asCodePoint","unloadHandler","inDisabledFieldset","addCombinator","disabled","nodeName","dir","childNodes","els","seed","m","nid","groups","newSelector","newContext","ownerDocument","getElementById","getElementsByTagName","getElementsByClassName","qsa","testContext","scope","toSelector","querySelectorAll","qsaError","removeAttribute","cache","cacheLength","markFunction","assert","el","addHandle","attrs","handler","attrHandle","siblingCheck","cur","diff","sourceIndex","nextSibling","createInputPseudo","createButtonPseudo","createDisabledPseudo","isDisabled","createPositionalPseudo","argument","matchIndexes","namespace","namespaceURI","documentElement","hasCompare","subWindow","defaultView","addEventListener","attachEvent","className","createComment","getById","getElementsByName","filter","attrId","find","getAttributeNode","tag","innerHTML","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","disconnectedMatch","compareDocumentPosition","adown","bup","compare","sortDetached","aup","ap","bp","elements","attr","specified","sel","uniqueSort","duplicates","detectDuplicates","sortStable","textContent","firstChild","nodeValue","selectors","createPseudo"," ","+","~","preFilter","excess","unquoted","nodeNameSelector","pattern","operator","check","what","_argument","forward","ofType","xml","uniqueCache","outerCache","nodeIndex","useCache","uniqueID","pseudo","setFilters","not","matcher","unmatched","lang","elemLang","focus","activeElement","hasFocus","href","tabIndex","enabled","checked","selected","selectedIndex","header","button","_matchIndexes","lt","gt","radio","checkbox","password","image","submit","reset","tokens","combinator","skip","checkNonElements","doneName","oldCache","newCache","elementMatcher","matchers","condense","newUnmatched","mapped","setMatcher","postFilter","postFinder","postSelector","preMap","postMap","preexisting","multipleContexts","matcherIn","matcherOut","matcherFromTokens","checkContext","leadingRelative","implicitRelative","matchContext","matchAnyContext","filters","parseOnly","soFar","preFilters","cached","setMatchers","elementMatchers","bySet","byElement","superMatcher","outermost","matchedCount","setMatched","contextBackup","dirrunsUnique","matcherFromGroupMatchers","defaultValue","unique","isXMLDoc","escapeSelector","until","truncate","is","siblings","rneedsContext","rsingleTag","winnow","qualifier","rootjQuery","ready","parseHTML","rparentsprev","guaranteedUnique","targets","closest","prevAll","addBack","parentsUntil","nextAll","nextUntil","prevUntil","contentDocument","reverse","rnothtmlwhite","Identity","v","Thrower","ex","adoptValue","resolve","reject","noValue","promise","fail","then","Callbacks","_","flag","createOptions","firing","memory","fired","locked","queue","firingIndex","fire","once","stopOnFalse","remove","disable","lock","fireWith","Deferred","func","tuples","always","deferred","catch","pipe","fns","newDefer","tuple","returned","progress","notify","onFulfilled","onRejected","onProgress","maxDepth","special","that","mightThrow","notifyWith","resolveWith","process","exceptionHook","stackTrace","rejectWith","getStackHook","setTimeout","stateString","when","singleValue","remaining","resolveContexts","resolveValues","master","updateFunc","rerrorNames","warn","readyException","readyList","completed","removeEventListener","readyWait","wait","readyState","doScroll","access","chainable","emptyGet","bulk","rmsPrefix","rdashAlpha","fcamelCase","_all","letter","toUpperCase","camelCase","acceptData","owner","Data","uid","prop","hasData","dataPriv","dataUser","rbrace","rmultiDash","dataAttr","getData","removeData","_data","_removeData","dequeue","startLength","hooks","_queueHooks","stop","setter","clearQueue","count","defer","pnum","rcssNum","cssExpand","isAttached","composed","getRootNode","isHiddenWithinTree","style","display","css","adjustCSS","valueParts","tween","adjusted","scale","maxIterations","currentValue","initial","unit","cssNumber","initialInUnit","defaultDisplayMap","getDefaultDisplay","showHide","show","hide","toggle","div","rcheckableType","rtagName","rscriptType","createDocumentFragment","checkClone","cloneNode","noCloneChecked","option","wrapMap","thead","col","tr","td","_default","getAll","setGlobalEval","refElements","tbody","tfoot","colgroup","caption","th","optgroup","buildFragment","scripts","selection","ignored","attached","fragment","nodes","htmlPrefilter","createTextNode","rkeyEvent","rmouseEvent","rtypenamespace","returnTrue","returnFalse","expectSync","safeActiveElement","on","one","origFn","event","off","leverageNative","notAsync","saved","isTrigger","delegateType","stopPropagation","stopImmediatePropagation","preventDefault","trigger","Event","handleObjIn","eventHandle","events","handleObj","handlers","namespaces","origType","elemData","handle","triggered","dispatch","bindType","delegateCount","setup","mappedTypes","origCount","teardown","removeEvent","nativeEvent","handlerQueue","fix","delegateTarget","preDispatch","isPropagationStopped","currentTarget","isImmediatePropagationStopped","rnamespace","postDispatch","matchedHandlers","matchedSelectors","addProp","hook","originalEvent","writable","load","noBubble","click","beforeunload","returnValue","isDefaultPrevented","defaultPrevented","relatedTarget","timeStamp","now","isSimulated","altKey","bubbles","cancelable","changedTouches","ctrlKey","detail","eventPhase","metaKey","pageX","pageY","shiftKey","view","char","keyCode","buttons","clientX","clientY","offsetX","offsetY","pointerId","pointerType","screenX","screenY","targetTouches","toElement","touches","which","blur","mouseenter","mouseleave","pointerenter","pointerleave","orig","related","rnoInnerhtml","rchecked","rcleanScript","manipulationTarget","disableScript","restoreScript","cloneCopyEvent","dest","udataOld","udataCur","domManip","collection","hasScripts","iNoClone","valueIsFunction","html","_evalUrl","keepData","cleanData","dataAndEvents","deepDataAndEvents","srcElements","destElements","inPage","detach","insertBefore","before","after","replaceWith","replaceChild","appendTo","prependTo","insertAfter","replaceAll","insert","rnumnonpx","getStyles","opener","getComputedStyle","old","rboxStyle","curCSS","computed","width","minWidth","maxWidth","getPropertyValue","pixelBoxStyles","addGetHookIf","conditionFn","hookFn","computeStyleTests","cssText","divStyle","pixelPositionVal","reliableMarginLeftVal","roundPixelMeasures","marginLeft","right","pixelBoxStylesVal","boxSizingReliableVal","position","scrollboxSizeVal","offsetWidth","measure","parseFloat","reliableTrDimensionsVal","backgroundClip","clearCloneStyle","boxSizingReliable","pixelPosition","reliableMarginLeft","scrollboxSize","reliableTrDimensions","trChild","trStyle","height","cssPrefixes","emptyStyle","vendorProps","finalPropName","final","cssProps","capName","vendorPropName","rdisplayswap","rcustomProp","cssShow","visibility","cssNormalTransform","letterSpacing","fontWeight","setPositiveNumber","subtract","max","boxModelAdjustment","dimension","box","isBorderBox","styles","computedVal","extra","delta","ceil","getWidthOrHeight","valueIsBorderBox","offsetProp","getClientRects","Tween","easing","cssHooks","opacity","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","gridArea","gridColumn","gridColumnEnd","gridColumnStart","gridRow","gridRowEnd","gridRowStart","lineHeight","order","orphans","widows","zIndex","zoom","origName","isCustomProp","setProperty","isFinite","getBoundingClientRect","scrollboxSizeBuggy","left","margin","border","suffix","expand","expanded","propHooks","run","percent","eased","duration","pos","step","fx","scrollTop","scrollLeft","linear","swing","cos","PI","fxNow","inProgress","rfxtypes","rrun","schedule","hidden","requestAnimationFrame","interval","tick","createFxNow","genFx","includeWidth","createTween","animation","Animation","tweeners","properties","stopped","prefilters","currentTime","startTime","tweens","opts","specialEasing","originalProperties","originalOptions","gotoEnd","propFilter","bind","complete","timer","anim","*","tweener","oldfire","propTween","restoreDisplay","isBox","dataShow","unqueued","overflow","overflowX","overflowY","prefilter","speed","opt","speeds","fadeTo","to","animate","optall","doAnimation","finish","stopQueue","timers","cssFn","slideDown","slideUp","slideToggle","fadeIn","fadeOut","fadeToggle","slow","fast","delay","time","timeout","clearTimeout","checkOn","optSelected","radioValue","boolHook","removeAttr","nType","attrHooks","attrNames","getter","lowercaseName","rfocusable","rclickable","stripAndCollapse","getClass","classesToArray","removeProp","propFix","tabindex","for","class","addClass","classes","curValue","clazz","finalValue","removeClass","toggleClass","stateVal","isValidValue","classNames","hasClass","rreturn","valHooks","optionSet","focusin","rfocusMorph","stopPropagationCallback","onlyHandlers","bubbleType","ontype","lastElement","eventPath","parentWindow","simulate","triggerHandler","attaches","rquery","parseXML","DOMParser","parseFromString","rbracket","rCRLF","rsubmitterTypes","rsubmittable","buildParams","traditional","valueOrFunction","encodeURIComponent","serialize","serializeArray","r20","rhash","rantiCache","rheaders","rnoContent","rprotocol","transports","allTypes","originAnchor","addToPrefiltersOrTransports","structure","dataTypeExpression","dataType","dataTypes","inspectPrefiltersOrTransports","jqXHR","inspected","seekingTransport","inspect","prefilterOrFactory","dataTypeOrTransport","ajaxExtend","flatOptions","ajaxSettings","active","lastModified","etag","isLocal","protocol","processData","async","contentType","accepts","json","responseFields","converters","* text","text html","text json","text xml","ajaxSetup","settings","ajaxPrefilter","ajaxTransport","ajax","transport","cacheURL","responseHeadersString","responseHeaders","timeoutTimer","urlAnchor","fireGlobals","uncached","callbackContext","globalEventContext","completeDeferred","statusCode","requestHeaders","requestHeadersNames","strAbort","getResponseHeader","getAllResponseHeaders","setRequestHeader","overrideMimeType","mimeType","status","abort","statusText","finalText","crossDomain","hasContent","ifModified","headers","beforeSend","success","send","nativeStatusText","responses","isSuccess","response","modified","ct","finalDataType","firstDataType","ajaxHandleResponses","conv2","conv","dataFilter","throws","ajaxConvert","getJSON","getScript","text script","wrapAll","firstElementChild","wrapInner","htmlIsFunction","unwrap","visible","offsetHeight","xhr","XMLHttpRequest","xhrSuccessStatus","0","1223","xhrSupported","cors","errorCallback","username","xhrFields","onload","onerror","onabort","ontimeout","onreadystatechange","responseType","responseText","binary","scriptAttrs","charset","scriptCharset","evt","oldCallbacks","rjsonp","jsonp","jsonpCallback","originalSettings","callbackName","overwritten","responseContainer","jsonProp","createHTMLDocument","implementation","keepScripts","animated","setOffset","curPosition","curLeft","curCSSTop","curTop","curOffset","curCSSLeft","curElem","using","rect","win","pageYOffset","pageXOffset","offsetParent","parentOffset","scrollTo","Height","Width","","defaultExtra","funcName","unbind","delegate","undelegate","hover","fnOver","fnOut","proxy","holdReady","hold","parseJSON","isNumeric","isNaN","trim","_jQuery","DataView","getNative","hashClear","hashDelete","hashGet","hashHas","hashSet","clear","baseCreate","baseLodash","LazyWrapper","__wrapped__","__actions__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","LodashWrapper","chainAll","__chain__","__index__","__values__","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","MapCache","Promise","Set","setCacheAdd","setCacheHas","SetCache","__data__","stackClear","stackDelete","stackGet","stackHas","stackSet","Stack","Uint8Array","WeakMap","thisArg","iteratee","predicate","resIndex","baseIndexOf","baseTimes","isArguments","isBuffer","isIndex","isTypedArray","inherited","isArr","isArg","isBuff","isType","skipIndexes","accumulator","initAccum","asciiSize","baseProperty","reAsciiWord","baseAssignValue","objValue","copyObject","keysIn","lower","upper","arrayEach","assignValue","baseAssign","baseAssignIn","cloneBuffer","copyArray","copySymbols","copySymbolsIn","getAllKeys","getAllKeysIn","getTag","initCloneArray","initCloneByTag","initCloneObject","isMap","isObject","isSet","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","argsTag","funcTag","genTag","objectTag","cloneableTags","baseClone","bitmask","customizer","isDeep","isFlat","isFull","isFunc","stacked","subValue","objectCreate","arrayIncludes","arrayIncludesWith","arrayMap","baseUnary","cacheHas","includes","isCommon","valuesLength","outer","valuesIndex","baseForOwn","baseEach","createBaseEach","fromIndex","fromRight","eachFunc","arrayPush","isFlattenable","baseFlatten","isStrict","baseFor","createBaseFor","castPath","toKey","keysFunc","symbolsFunc","getRawTag","objectToString","symToStringTag","toStringTag","nativeMax","nativeMin","min","baseFindIndex","baseIsNaN","strictIndexOf","arrays","othLength","othIndex","caches","maxLength","seen","baseGetTag","isObjectLike","baseIsEqualDeep","baseIsEqual","equalArrays","equalByTag","equalObjects","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","matchData","noCustomizer","srcValue","COMPARE_PARTIAL_FLAG","isMasked","toSource","reIsHostCtor","funcProto","objectProto","funcToString","reIsNative","isLength","typedArrayTags","baseMatches","baseMatchesProperty","property","isPrototype","nativeKeys","nativeKeysIn","isProto","baseIsMatch","getMatchData","matchesStrictComparable","hasIn","isKey","isStrictComparable","baseGet","nativeFloor","nativeRandom","overRest","setToString","constant","baseSetToString","isSymbol","INFINITY","symbolProto","symbolToString","baseToString","trimmedEndIndex","reTrimStart","createSet","setToArray","seenIndex","isArrayLikeObject","stringToPath","baseSlice","arrayBuffer","byteLength","freeExports","freeModule","Buffer","allocUnsafe","buffer","cloneArrayBuffer","dataView","byteOffset","reFlags","regexp","lastIndex","symbolValueOf","valueOf","typedArray","isNew","newValue","getSymbols","getSymbolsIn","coreJsData","iterable","arrayReduce","deburr","words","reApos","baseIteratee","findIndexFunc","flatRest","getFuncName","isLaziable","funcs","prereq","thru","wrapper","plant","baseRepeat","castSlice","hasUnicode","stringSize","stringToArray","nativeCeil","chars","charsLength","toInteger","toNumber","nativeIsFinite","methodName","precision","deburrLetter","basePropertyOf","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","Ā","Ă","Ą","ā","ă","ą","Ć","Ĉ","Ċ","Č","ć","ĉ","ċ","č","Ď","Đ","ď","đ","Ē","Ĕ","Ė","Ę","Ě","ē","ĕ","ė","ę","ě","Ĝ","Ğ","Ġ","Ģ","ĝ","ğ","ġ","ģ","Ĥ","Ħ","ĥ","ħ","Ĩ","Ī","Ĭ","Į","İ","ĩ","ī","ĭ","į","ı","Ĵ","ĵ","Ķ","ķ","ĸ","Ĺ","Ļ","Ľ","Ŀ","Ł","ĺ","ļ","ľ","ŀ","ł","Ń","Ņ","Ň","Ŋ","ń","ņ","ň","ŋ","Ō","Ŏ","Ő","ō","ŏ","ő","Ŕ","Ŗ","Ř","ŕ","ŗ","ř","Ś","Ŝ","Ş","Š","ś","ŝ","ş","š","Ţ","Ť","Ŧ","ţ","ť","ŧ","Ũ","Ū","Ŭ","Ů","Ű","Ų","ũ","ū","ŭ","ů","ű","ų","Ŵ","ŵ","Ŷ","ŷ","Ÿ","Ź","Ż","Ž","ź","ż","ž","Ĳ","ĳ","Œ","œ","ŉ","ſ","arraySome","isPartial","arrLength","arrStacked","othStacked","arrValue","othValue","compared","mapToArray","convert","objProps","objLength","objStacked","skipCtor","objCtor","othCtor","flatten","freeGlobal","baseGetAllKeys","metaMap","realNames","otherFunc","isKeyable","baseIsNative","getValue","getPrototype","overArg","nativeObjectToString","isOwn","unmasked","arrayFilter","stubArray","nativeGetSymbols","getOwnPropertySymbols","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ArrayBuffer","ctorString","hasFunc","reHasUnicode","reHasUnicodeWord","nativeCreate","cloneDataView","cloneRegExp","cloneSymbol","cloneTypedArray","spreadableSymbol","isConcatSpreadable","reIsUint","reIsDeepProp","reIsPlainProp","lodash","maskSrcKey","IE_PROTO","assocIndexOf","getMapData","memoize","freeProcess","nodeUtil","binding","transform","otherArgs","freeSelf","shortOut","nativeNow","lastCalled","stamp","LARGE_ARRAY_SIZE","unicodeSize","asciiToArray","unicodeToArray","memoizeCapped","rePropName","reEscapeChar","quote","subString","reWhitespace","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsSeq","rsSymbol","reUnicode","rsBreakRange","rsMathOpRange","rsBreak","rsDigits","rsDingbat","rsLower","rsMisc","rsUpper","rsMiscLower","rsMiscUpper","rsModifier","rsEmoji","reUnicodeWord","createRound","isIterateeCall","guard","baseClamp","reLatin","reComboMark","baseDifference","baseRest","difference","baseFilter","createFind","baseFindKey","findLast","flow","createFlow","castFunction","baseHas","hasPath","baseHasIn","baseInRange","toFinite","isString","baseIntersection","castArrayLikeObject","intersection","baseIsArguments","stubFalse","baseKeys","baseIsMap","nodeIsMap","isNumber","baseIsSet","nodeIsSet","baseIsTypedArray","nodeIsTypedArray","arrayLikeKeys","baseKeysIn","lowerCase","createCompounder","word","baseMap","FUNC_ERROR_TEXT","resolver","memoized","Cache","createPadding","strLength","basePropertyDeep","baseRandom","freeParseFloat","floating","rand","baseReduce","remainder","baseTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","isBinary","baseUniq","idCounter","baseValues","without","asciiWords","hasUnicodeWord","unicodeWords","wrapperClone","getNanoSeconds","hrtime","loadTime","moduleLoadTime","nodeLoadTime","upTime","performance","hr","uptime","getTime","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","marker","runClearTimeout","Item","nextTick","title","browser","argv","versions","addListener","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","cwd","chdir","umask","vendors","raf","caf","_now","cp","cancelled","cancel","polyfill","cancelAnimationFrame","_jquery","_interopRequireDefault","_isNil2","_lowerCase2","_AppController","_EventBus","_TimeKeeper","_airportConstants","_storageKeys","_eventNames","_logLevel","zlsa","atc","UPDATE","App","element","_classCallCheck","$element","_appController","eventBus","LOG","DEBUG","loaded","setupHandlers","_fetchAirportLoadList","onAirportLoadListFetchedHandler","airportLoadList","airport","initialAirportToLoad","_getInitialAirport","loadInitialAirport","icao","airportName","DEFAULT_AIRPORT_ICAO","previousAirportIcaoFromLocalStorage","localStorage","STORAGE_KEY","ATC_LAST_AIRPORT","_isAirportIcaoInLoadList","_onAirportLoadListFetched","loadDefaultAiportAfterStorageIcaoFailureHandler","loadDefaultAiportAfterStorageIcaoFailure","loadAirlinesAndAircraftHandler","loadAirlinesAndAircraft","setupChildrenHandler","setupChildren","onPauseHandler","_onPause","onUpdateHandler","update","EVENT","PAUSE_UPDATE_LOOP","_this2","initialAirportIcao","_this3","defaultAirportResponse","initialAirportResponse","_this4","airlineListPromise","aircraftListPromise","airportGuideListPromise","airlineResponse","aircraftResponse","airportGuideResponse","airlines","aircraft","initialAirportData","airlineList","aircraftTypeDefinitionList","airportGuides","enable","init_pre","destroy","resize","updatePre","updatePost","shouldUpdate","_AircraftController","_AirlineController","_AirportController","_AirportGuideViewController","_CanvasController","_AirportInfoController","_ChangelogController","_ContentQueue","_EventTracker","_GameController","_InputController","_LoadingView","_NavigationLibrary","_ScopeModel","_SpawnPatternCollection","_SpawnScheduler","_UiController","_ScoreController","_speech","_selectors","_trackableEvents","AppController","$canvasesElement","_eventBus","loadingView","contentQueue","airlineCollection","airportGuideController","inputController","canvasController","changelogController","_init","onAirportChangeHandler","onAirportChange","onTrafficResetHandler","onTrafficReset","AIRPORT_CHANGE","TRAFFIC_RESET","airportGuideData","recordEvent","TRACKABLE_EVENT","AIRPORTS","SELECTORS","DOM_SELECTORS","CANVASES","loadAsset","airlineController","scopeModel","aircraftController","scoreController","airportInfoController","updateViewControls","input_init_pre","speech_init","canvas_init","ui_init","canvas_resize","canvas_complete","ui_complete","updateClock","update_pre","canvasUpdatePost","updateAircraftStrips","nextAirportJson","aircraft_remove_all","radarTargetCollection","destroyTimers","startScheduler","resetAllRunwayQueues","createPreSpawnDepartures","resetAirborneTraffic","MARK_SHALLOW_RENDER","TOGGLE_RESTRICTED_AREAS","restricted_areas","TOGGLE_SIDS","hasSids","TOGGLE_TERRAIN","has_terrain","EventTracker","_isEnabled","_gtag","gtag","category","label","event_category","event_action","event_label","OUTBOUND","transport_type","_has2","_includes2","_AutocompleteController","_CanvasStageModel","_DynamicPositionModel","_CommandParser","_ScopeCommandModel","_MeasureTool","_FixCollection","_core","_gameOptionConstants","_globalConstants","_inputConstants","InputController","_defineProperty","aircraftModel","isControllable","callsign","$commandInput","SELECT_AIRCRAFT","deselectAircraft","_aircraftController","findAircraftByCallsign","selectAircraft","$body","$window","$canvases","_scopeModel","_autocompleteController","history","history_item","_mouseDownScreenPosition","isMouseDown","commandBarContext","COMMAND_CONTEXT","AIRCRAFT","COMMAND","onKeydownHandler","_onKeydown","onKeyupHandler","_onKeyup","onMouseScrollHandler","_onMouseScroll","onMouseClickAndDragHandler","_onMouseClickAndDrag","onMouseUpHandler","_onMouseUp","onMouseDownHandler","_onMouseDown","onMouseDblclickHandler","_onMouseDblclick","STRIP_CLICK","selectAircraftByCallsign","DESELECT_AIRCRAFT","shouldReplaceLastPoint","mouseCanvasPosition","calculateCanvasPositionFromPagePosition","relativePosition","calculateRelativePositionFromCanvasPosition","_toConsumableArray","distance","nearestModel","_this$_findClosestAir2","_slicedToArray","_findClosestAircraftAndDistanceToCanvasPosition","distanceFromAircraft","_this$_findClosestFix2","_findClosestFixAndDistanceToCanvasPosition","fixModel","distanceFromFix","translatePixelsToKilometers","hasStarted","updateLastPoint","addPoint","removePreviousPoint","hasPaths","isMeasuring","startNewPath","endPath","wheelDelta","zoomIn","zoomOut","_addMeasurePoint","nextXPan","nextYPan","updatePan","MOUSE_EVENT_CODE","LEFT_PRESS","_onLeftMouseButtonPress","MIDDLE_PRESS","zoomReset","RIGHT_PRESS","_onRightMousePress","SCROLL_TO_AIRCRAFT","isEscape","KEY_CODES","ESCAPE","LEGACY_KEY_CODES","_isDialog","currentCommandInputValue","CONTROL_LEFT","CONTROL_RIGHT","_startMeasuring","ENTER","NUM_ENTER","processCommand","PAGE_UP","selectPreviousAircraft","PAGE_DOWN","selectNextAircraft","LEFT_ARROW","_isArrowControlMethod","RIGHT_ARROW","UP_ARROW","DOWN_ARROW","NUM_DIVIDE","NUM_MULTIPLY","NUM_ADD","NUM_SUBTRACT","F1","decreasePtlLength","F2","increasePtlLength","F7","SCOPE","BACKQUOTE","_toggleCommandBarContext","TAB","activate","_resetMeasuring","closeAllDialogs","hasCallsign","hasOnlyCallsign","hasSelectedCallsign","_stopMeasuring","classList","CLASSNAMES","DIALOG","parentElement","clamp","input_history_clamp","game","getOptionByName","GAME_OPTION_NAMES","CONTROL_METHOD","COMMAND_SCOPE_MODE","cmd","userCommand","ui_log","parsedCommand","command","PARSED_COMMAND_NAME","TRANSMIT","processSystemCommand","processTransmitCommand","processAircraftCommand","processScopeCommand","scopeCommandModel","_this$_scopeModel$run2","runScopeCommand","successful","isWarning","TUTORIAL","onToggleTutorial","AUTO","PAUSE","game_pause_toggle","TIMEWARP","nextTimewarpValue","updateTimescale","OPTIONS","CLEAR","reload","AIRPORT","airportIcao","airports","airport_set","AIRAC","_airportIcao","airacCycle","getAiracCycle","RATE","INVALID_NUMBER","matchCallsign","aircraftCommander","runCommands","canvasPosition","aircraft_get_nearest","getNearestFix","latLonCoordinates","coordinateText","coord","toFixed","navigator","clipboard","writeText","_removePreviousMeasurePoint","_calculateRelativePositionFromEvent","referencePosition","positionModel","calculateGpsCoordinatesFromRelativePosition","_logAndCopyCoordinates","_markMousePressed","MOUSE_BUTTON_NAMES","RIGHT","mouseCanvasPos","_this$_findClosestAir4","LEFT","mouseButton","getGameOption","MOUSE_CLICK_DRAG","mousePositionX","_panX","mousePositionY","_panY","LoadingView","_setupChildren","LOADING_VIEW","_map2","_round2","_modeControlConstants","_aircraftConstants","_circle","_aircraftCommandMap","_radioUtilities","_unitConverters","AircraftCommander","onChangeTransponderCode","findAircraftById","_findAircraftById","_onChangeTransponderCode","commands","isPreSpawn","response_end","redResponse","FLIGHT_PHASE","TAKEOFF","retval","say","_command","_args","_retval","r_log","r_say","speech_say","pilotVoice","functionName","AIRCRAFT_COMMAND_MAP","altitudeRequested","expediteRequested","shouldUseSoftCeiling","airport_get","pilot","maintainAltitude","direction","heading","incremental","readback","maintainHeading","turn","hasApproachClearance","cancelApproachClearance","clearedAsFiled","altitude","climbViaSid","crossFix","descendViaStar","nextSpeed","maintainSpeed","turnDirection","legLength","fixName","radial","findFixByName","fallbackInboundHeading","holdParameters","inboundHeading","radians_normalize","degreesToRadians","bearingFromPosition","initiateHoldingPattern","cancelHoldingPattern","proceedDirect","airportModel","runwayName","runwayModel","getRunway","previousRunwayModel","fms","arrivalRunwayModel","radio_runway","getRadioName","updateStarLegForArrivalRunway","flightPhase","APRON","TAXI","maintainPresentHeading","runway","departureRunwayModel","sayRoute","routeString","applyDepartureProcedure","applyArrivalProcedure","applyPartialRouteAmendment","replaceFlightPlanWithNewRoute","mcp","setHeadingLnav","altitudeChangeString","trend","radio_altitude","heading_to_string","radio_heading","headingMode","MCP_MODE","HEADING","HOLD","radio_spellOut","speedMode","SPEED","requestedRunwayName","taxiToRunway","_readback","spotInQueue","getAircraftQueuePosition","isInQueue","aircraftAhead","wind","getWindAtAltitude","roundedWindAngleInDegrees","radiansToDegrees","angle","roundedWindSpeed","isAirborne","getRadioCallsign","hasDepartureClearance","isRunwayModelValidForSid","removeAircraftFromQueue","takeoff","getSidIcao","getSidName","conductInstrumentApproach","squawk","REMOVE_AIRCRAFT","_filter2","_vector","AircraftConflict","vlen","vsub","distance_delta","abs","collided","conflicts","violations","isAlreadyKnown","REMOVE_AIRCRAFT_CONFLICT","hasConflict","hasViolation","distanceAtLastUpdate","shouldBeRemoved","_recalculateLateralAndVerticalDistances","checkCollision","airportElevation","elevation","gameTime","accumulatedDeltaTime","takeoffTime","checkProximity","isOnGround","isInsideAirspace","events_recordNew","GAME_EVENTS","COLLISION","hit","SEPARATION","VERTICAL_FT","proximityConflict","proximityViolation","conflict","violation","disableNotices","a1","a2","applicableLatSepMin","STANDARD_LATERAL_KM","isEstablishedOnCourse","runwayRelationship","getRunwayRelationshipForRunwayNames","parallel","separationMinimum","hdg_difference","angle_offset","minHdgDifference","currentLeg","isSidLeg","ad","vturn","groundTrack","bd","dx","dy","det","_findInstancesOfThisConflictInAircraftController","_isOutsideBoundingBox","MAX_KM","_find2","_get2","_without2","_AircraftTypeDefinitionCollection","_AircraftModel","_AircraftCommander","_AircraftConflict","_StripViewController","_airlineHelpers","_staticPositionToDynamicPositionHelper","_distance","_transponderUtilities","_validatorUtilities","AircraftController","spawnPatternModel","initializationProps","_buildAircraftProps","_createAircraftWithInitializationProps","preSpawnAircraftList","preSpawnHeadingAndPosition","baseAircraftProps","assign","removeConflict","transponderCode","isValidTransponderCode","_isTransponderCodeInUse","_removeTransponderCodeFromUse","_addTransponderCodeToInUse","_stripViewController","selectStripView","findAndDeselectActiveStripView","scrollToStripView","REQUEST_TO_CENTER_POINT_IN_VIEW","_typeof","isEmptyOrNotArray","_airlineController","_aircraftCommander","onRequestToChangeTransponderCode","aircraftTypeDefinitionCollection","_transponderCodesInUse","auto","_setupHandlers","_onRemoveAircraftHandler","aircraft_remove","ADD_AIRCRAFT","addItem","STRIP_DOUBLE_CLICK","_onStripDoubleClickHandler","_onSelectAircraft","_onDeselectAircraft","_onScrollToAircraft","nearest","_aircraft","d","distance2d","isVisible","factor","visibleDistance","ctr_radius","removeAircraftFromAllRunwayQueues","removeFlightNumberFromList","removeAircraftModelFromList","removeAllAircraftConflictsForAircraft","removeStripView","removeRadarTargetModelForAircraftModel","updateWarning","isTaxiing","_updateAircraftConflicts","_updateAircraftVisibility","normalizedCallsign","otherAircraft","addConflict","airlineId","_ref","otherAircraftCallsign","isDeparture","isArrival","isAutoTower","TOWER_CONTROLLER","runwayCommands","_runCommandOnPreSpawnAircraft","createStripView","moveToRunway","addAircraftToQueue","setFlightPhase","WAITING","shouldTakeOffWhenRunwayIsClear","getRandomAirlineForSpawn","_airlineNameAndFleetH","airlineNameAndFleetHelper","fleet","airlineModel","findAirlineById","flightNumber","generateFlightNumberWithAirlineModel","aircraftTypeDefinition","_getRandomAircraftTypeDefinitionForAirlineId","FLIGHT_CATEGORY","ARRIVAL","dynamicPositionModel","convertStaticPositionToDynamic","_generateUniqueTransponderCode","origin","destination","airline","airlineCallsign","radioName","model","waypoints","commandString","getCallsign","getAircraftDefinitionForAirlineId","generateTransponderCode","isDiscreteTransponderCode","_ref2","INVALID_INDEX","comparisonAircraftModel","boundingBoxLength","km","currentUpdateIndex","otherAircraftModel","hasConflictWithAircraftModel","_shouldAddNewConflict","isStopped","AIRCRAFT_EVENT","FULLSTOP","isAircraftVisible","isRemovable","_ceil2","_defaultTo2","_findIndex2","_floor2","_forEach2","_isEmpty2","_isEqual2","_uniqueId2","_Fms","_ModeController","_Pilot","_flightMath","_environmentConstants","FLIGHT_RULES","AircraftModel","randomizePilotVoice","groundSpeed","trueAirspeed","restricted","warning","taxi_start","taxi_time","terrain_ranges","_isEstablishedOnHoldingPattern","projected","relativePositionHistory","_targetHeading","_targetGroundTrack","buildCurrentTerrainRanges","buildRestrictedAreaLinks","DEPARTURE","OVERFLIGHT","bottomAltitude","getBottomAltitude","airspaceCeiling","maxAssignableAltitude","initializeForAirborneFlight","terrain","terrain_level","terrainRange","k","restrictedAreas","area","inside","targetHeading","assignedAltitude","flightPlanAltitude","UNIT_CONVERSION_CONSTANTS","FT_FL","insideCenter","icaoWithWeightClass","arrivalAirportId","departureAirportId","flightPlan","getFullRouteStringWithoutAirportsWithSpaces","callsignToMatch","weight","getRadioWeightClass","groupNumbers","serviceCeilingClimbRate","cr_uncorr","rate","climb","ceiling","engines","ENGINE_TYPE","JET","pow","cancelFix","missedApproachAltitude","nextIfrAltitudeBelow","nextAltitudeToMaintain","radioMessage","setAltitudeFieldValue","setAltitudeHold","setHeadingFieldValue","setHeadingHold","DESCENT","radioCall","AIRPORT_CONTROL_POSITION_NAME","APPROACH","waypointModel","waypointSpeed","speedMaximum","waypointDistance","distanceToPosition","decelerationTime","decelerate","TIME","ONE_HOUR_IN_SECONDS","targetAltitude","targetPosition","descentTime","descent","PERFORMANCE","TYPICAL_DESCENT_FACTOR","ONE_HOUR_IN_MINUTES","_calculateArrivalRunwayModelGlideslopeAltitude","MAXIMUM_ALTITUDE_DIFFERENCE_CONSIDERED_ESTABLISHED_ON_GLIDEPATH","isOnApproachCourse","isOnCorrectApproachGroundTrack","glideslopeAltitude","isPointWithinAirspace","nav1Datum","AIRPORT_CONSTANTS","FINAL_APPROACH_FIX_DISTANCE_NM","isOverflight","departureAirportModel","arrivalAirportModel","isAtOrBelowRunwayAltitude","isAtOrBelowAirportAltitude","isStalling","isAircraftNextInQueue","crosswindAngle","calculateCrosswindAngle","cross","sin","setCoordinates","gps","sectorType","alert","writtenCallsign","spokenCallsign","logMessage","alt_log","alt_say","altdiff","alt","digits_decimal","app","twr","setDepartureRunway","cruiseSpeed","cruise","initialAltitude","getInitialClimbClearance","_prepareMcpForTakeoff","lastDepartedAircraftModel","altitudeMode","ALTITUDE","OFF","setSpeedFieldValue","setSpeedN1","_calculateTargetedAltitude","_updateTargetedDirectionality","_calculateTargetedSpeed","overrideTarget","CLIMB","CRUISE","LANDING","MAX_SPEED_BELOW_10K_FEET","phase","iAmTheNextDeparture","lastDeparture","nm_ft","distanceToAircraft","calculateSameRunwaySeparationDistanceInFeet","TAKEOFF_TURN_ALTITUDE","raiseLandingGearAndActivateAutopilot","isOnFinal","isEstablishedOnGlidepath","cancelLanding","FINAL_APPROACH","distanceOnFinalKm","getOffset","getGlideslopeAltitude","groundTrackHeading","windVector","getWindVectorAtAltitude","angleDifference","vradial","asin","headingVector","vscale","vectorize2dFromRadians","vadd","autopilotMode","AUTOPILOT","ON","LNAV","targetGroundTrack","_calculateTargetedGroundTrackLnav","VOR_LOC","_calculateTargetedHeadingToInterceptCourse","_calculateTargetedGroundTrackDuringLanding","_calculateTargetedSpeedDuringLanding","_calculateLegalSpeed","N1","VNAV","vnavSpeed","_calculateTargetedSpeedVnav","MCP_MODE_NAME","_calculateTargetedAltitudeDuringLanding","_calculateTargetedAltitudeToInterceptGlidepath","_calculateTargetedAltitudeVnav","_this$mcp","course","courseOffset","lateralDistanceFromCourseNm","nm","headingDifference","angleAwayFromLocalizer","bearingToPosition","turnTimeInSeconds","TURN_RATE","distanceCoveredDuringTurn","ONE_SECOND_IN_HOURS","distanceToLocalizer","shouldAttemptIntercept","inTheWindow","interceptAngle","minimumInterceptAngle","isAlignedWithCourse","MAXIMUM_DISTANCE_CONSIDERED_ESTABLISHED_ON_APPROACH_COURSE_NM","interceptHeading","spread","currentWaypoint","isVectorWaypoint","getVector","isHoldWaypoint","_calculateTargetedHeadingHold","waypointPosition","distanceToWaypoint","groundTrackToWaypoint","isTimeToStartTurning","calculateTurnInitiationDistance","closeToBeingOverFix","MAXIMUM_DISTANCE_TO_PASS_WAYPOINT_NM","shouldFlyByFix","MAXIMUM_DISTANCE_TO_FLY_BY_WAYPOINT_NM","shouldMoveToNextFix","isFlyOverWaypoint","hasNextWaypoint","moveToNextWaypoint","nextWaypointPosition","waypointRelativePosition","bearingToHoldFix","outboundHeading","isPastFix","isTimerSet","isTimerExpired","nextTargetHeading","MAXIMUM_ANGLE_CONSIDERED_ESTABLISHED_ON_HOLD_COURSE","holdLegDurationInSeconds","ONE_MINUTE_IN_SECONDS","setHoldTimer","resetHoldTimer","altitudeMaximumWaypoint","findNextWaypointWithMaximumAltitudeRestriction","altitudeMinimumWaypoint","findNextWaypointWithMinimumAltitudeRestriction","maximumAltitudeExists","minimumAltitudeExists","altitudeMaximum","_altitudeMaximum","_calculateTargetedAltitudeVnavDescent","_altitudeMinimum","altitudeMinimum","_findFirstWaypoint","_calculateTargetedAltitudeVnavClimb","waypointA","waypointB","waypoint","waypointWithMinimumAltitudeRestriction","isBeyondTopOfDescentForWaypointModel","startSpeed","distanceOnFinal_nm","stableApproachTimeHours","STABLE_APPROACH_TIME_SECONDS","stableApproachDistance","landing","extrapolate_range_clamp","nextSpeedMaximumWaypoint","findNextWaypointWithMaximumSpeedAtOrBelow","nextSpeedMinimumWaypoint","findNextWaypointWithMinimumSpeedAtOrAbove","hasMaximumSpeed","hasMinimumSpeed","_calculateTargetedSpeedVnavDeceleration","_calculateTargetedSpeedVnavAcceleration","waypointWithMinimumSpeedRestriction","waypointMinimumSpeed","speedMinimum","waypointWithMaximumSpeedRestriction","waypointMaximumSpeed","isBeyondDecelerationPointForWaypointModel","getDeltaTimeForGameStateAndTimewarp","updateAircraftTurnPhysics","updateAltitudePhysics","updateSpeedPhysics","offsetGameTime","game_speedup","updateGroundSpeedPhysics","secondsElapsed","angle_diff","angle_change","decreaseAircraftAltitude","increaseAircraftAltitude","altitude_diff","descentRate","shouldExpediteAltitudeChange","feetDescended","ONE_SECOND_IN_MINUTES","climbRate","getClimbRate","TYPICAL_CLIMB_FACTOR","isTakeoff","feetClimbed","speedChange","differenceBetweenPresentAndTargetSpeeds","DECELERATION_FACTOR_DUE_TO_GROUND_BRAKING","accelerate","ENVIRONMENT","DENSITY_ALT_INCREASE_FACTOR_PER_FT","flightThroughAirVector","flightPathVector","distanceTraveled_nm","setCoordinatesByBearingAndDistance","new_inside","point_in_poly","poly","AIRSPACE_BUST","distance_to_poly","prev_level","ele","curr_ranges","lev","point_to_mpoly","updateFlightPhase","updateTarget","updatePhysics","_updateAircraftControllability","conflictingAircraft","conflictingAircraftModel","callUp","setIsRemovable","AIRSPACE_EXIT","_contactAircraftAfterControllabilityChange","anotherAircraftModel","nextAltitude","isAbleToMaintainAltitude","minAssignableAltitude","minimumAltitude","_readback3","isAbleToMaintainSpeed","_calculateCrabHeadingForGroundTrack","_calculateGroundTrackForHeading","currentPhase","_BaseCollection2","_AircraftTypeDefinitionModel","AircraftTypeDefinitionCollection","_possibleConstructorReturn","_getPrototypeOf","definitionList","_buildAircraftTypeDefinitionModelList","aircraftType","getRandomAircraftType","aircraftDefinition","_BaseModel2","AircraftTypeDefinitionModel","isEmptyOrNotObject","weightClass","capability","_buildTypeForStripView","_Object$values$find","aircraftIcao","wtc","WAKE_TURBULENCE_CATEGORY","WTC","LETTER","APPEND","HEAVY","SUPER","previousTypeModel","isSameRunwaySeparationCatThree","SRS_REDUCED_MINIMA_FEET","CAT3","srs","CAT1","CAT2","_Object$values$find2","SPOKEN","_findLast2","_RouteModel","_RunwayModel","_routeConstants","Fms","aircraftInitProps","_routeModel","nextFix","_verifyRouteContainsMultipleWaypoints","_initializeFlightPhaseForCategory","_initializeAirportsAndRunways","_initializeFlightPlanAltitude","_initializePositionInRouteToBeginAtFixName","originLowerCase","destinationLowerCase","_initializeDepartureAirport","_initializeDepartureRunway","_initializeArrivalAirport","_initializeArrivalRunway","destinationIcao","arrivalRunwayName","getArrivalRunwayName","setArrivalRunway","originIcao","departureRunwayName","getDepartureRunwayName","hasWaypointName","skipToWaypointName","waypointName","activateHoldForWaypointName","getFixSpokenName","nextRouteModel","absorbRouteModel","hasMaximumAltitudeAtOrBelow","hasAltiudeMaximumRestriction","hasMaximumSpeedAtOrBelow","hasMinimumAltitudeAtOrAbove","hasAltiudeMinimumRestriction","hasMinimumSpeedAtOrAbove","getAltitudeRestrictedWaypoints","getFlightPlanEntry","nextWaypoint","hasRestriction","getRouteString","getRouteStringWithSpaces","hasSpeedRestriction","getTopAltitude","isRunwayModelValidForStar","routeStringElements","PROCEDURE_OR_AIRWAY_SEGMENT_DIVIDER","procedureId","hasProcedure","replaceArrivalProcedure","_updateArrivalRunwayFromRoute","sidModel","getProcedure","exitPoint","hasExit","expectedRunwayModel","entryPoint","hasEntry","getFirstEntryPoint","nextRouteString","replaceDepartureProcedure","_updateDepartureRunwayFromRoute","currentWaypointName","nextRunwayModel","updateSidLegForDepartureRunwayModel","currentArrivalRunway","_readback2","getStarIcao","getStarName","updateStarLegForArrivalRunwayModel","getArrivalRunwayModel","getDepartureRunwayModel","getSpeedRestrictedWaypoints","getRestrictedWaypoints","_WaypointModel","LegModel","_airwayModel","_legType","_procedureModel","_previousWaypointCollection","_routeString","_waypointCollection","_routeString$split2","entryOrFixName","airwayOrProcedureName","exit","_ensureRouteStringIsSingleSegment","_determineLegType","getAirway","_generateWaypointCollection","_resetWaypointCollection","LEG_TYPE","DIRECT","hasAirway","AIRWAY","PROCEDURE","findHoldParametersByFix","setDefaultHoldParameters","_generateWaypoint","_verifyAirwayAndEntryAndExitAreValid","getWaypointModelsForEntryAndExit","_verifyProcedureAndEntryAndExitAreValid","waypointIndex","_findIndexOfWaypointName","setHoldParametersAndActivateHold","isAirwayLeg","indexOfWaypointName","copyOfWaypointCollection","isStarLeg","isProcedureLeg","minimumAltitudes","positiveValueRestrictionList","isDirectLeg","procedure","_elements","_procedure","maximumAltitudes","topAltitude","waypointModelToMove","entryName","exitName","_this$_previousWaypoi","_this$_previousWaypoi2","numberOfWaypointsToMove","waypointModelsToMove","routeStringComponents","currentEntryName","currentExitName","currentRunwayName","nextRunwayName","nextEntryName","nextExitName","skipAllWaypointsInLeg","airwayIcao","hasFixName","procedureIcao","procedureType","PROCEDURE_TYPE","SID","STAR","_chunk2","_first2","_intersection2","_isString2","_last4","_reduce2","_LegModel","_navigationUtilities","RouteModel","_legCollection","_previousLegCollection","_generateLegsFromRouteString","routeModel","firstWaypointName","lastWaypointName","routesConverge","routesDiverge","_overwriteRouteBetweenWaypointNames","_prependRouteModelEndingAtWaypointName","_appendRouteModelBeginningAtWaypointName","legIndex","_findIndexOfLegContainingWaypointName","legModel","reduce","wpt","lastWpt","hasAltitudeRestriction","hasStarLeg","starLegIndex","_findStarLegIndex","getArrivalRunwayAirportIcao","getArrivalRunwayAirportModel","hasSidLeg","_findSidLeg","getDepartureRunwayAirportIcao","getDepartureRunwayAirportModel","minAltitudesFromLegs","leg","pastAndPresentLegModels","_getPastAndPresentLegModels","pastAndPresentLegRouteStrings","_combineRouteStrings","legRouteStringsWithoutAirports","getRouteStringWithoutAirports","REGEX","DOUBLE_DOT","SINGLE_DOT","getFullRouteString","legRouteStrings","getExitFixName","getProcedureIcao","getProcedureName","sidLegModel","initial_alt","maxAltitudesFromLegs","hasNextLeg","nextLeg","_findSidLegIndex","departureAirportIcao","procedureHasEntry","starLegModel","arrivalAirportIcao","procedureHasExit","moveToNextLeg","_this$_previousLegCol","legToMove","_this$_previousLegCol2","legModelsToMove","originalCurrentWaypointName","amendedStarLegModel","_createAmendedStarLegUsingDifferentExitName","divergentWaypointName","indexOfDivergentLeg","divergentLeg","_appendRouteModelOutOfAirwayLeg","_appendRouteModelOutOfDirectLeg","_appendRouteModelOutOfSidLeg","_appendRouteModelOutOfStarLeg","legType","amendedAirwayLeg","_createAmendedAirwayLegUsingDifferentExitName","legCollection","remainingLegWaypointsAsLegs","_createLegsFromSidWaypointsBeforeWaypointName","amendedStarLeg","_createLegsFromStarWaypointsBeforeWaypointName","directRouteSegments","exitOfPreviousLeg","legEntry","indexOfPreviousLeg","legRouteStringWithoutEntry","DIRECT_SEGMENT_DIVIDER","entryFixName","convergentLegModel","airwayName","getAirwayName","exitFixName","amendedAirwayRouteString","assembleProceduralRouteString","getEntryFixName","indexOfConvergentLegModel","endWaypointName","_createAmendedAirwayLegUsingDifferentEntryName","_createLegsFromSidWaypointsAfterWaypointName","_createAmendedStarLegUsingDifferentEntryName","_createLegsFromStarWaypointsAfterWaypointName","indexOfDivergentLegModel","startWaypointName","divergentLegModel","waypointModels","getAllWaypointModelsBeforeWaypointName","_createLegModelsFromWaypointModels","getAllWaypointModelsAfterWaypointName","amendedStarRouteString","chainedRouteStrings","segmentRouteStrings","elementsInChain","firstSegment","segments","exitOfPreviousSegment","procedureAndExitOfSegment","currentRouteWaypointNames","nextRouteWaypointNames","_divideRouteStringIntoSegments","segmentRouteString","amendedDivergentLegModels","_createAmendedDivergentLeg","amendedConvergentLegModels","_createAmendedConvergentLeg","endingLegCollection","beginningLegCollection","convergentWaypointName","_prependRouteModelIntoAirwayLeg","_prependRouteModelIntoDirectLeg","_prependRouteModelIntoSidLeg","_prependRouteModelIntoStarLeg","waypointList","_isArray2","_isNumber2","_waypointConstants","WaypointModel","_speedMaximum","_speedMinimum","_defaultHoldParameters","DEFAULT_HOLD_PARAMETERS","_holdParameters","_isFlyOverWaypoint","_isHoldWaypoint","_isVectorWaypoint","_positionModel","restrictions","_initSpecialWaypoint","_applyRestrictions","_initializePosition","_initVectorWaypoint","_initHoldWaypoint","_initFlyOverWaypoint","_ensureNonVectorWaypointsForThisAndWaypoint","RNAV_WAYPOINT_PREFIX","RNAV_WAYPOINT_DISPLAY_NAME","fixNameWithOutPoundSign","headingInDegrees","DECIMAL_RADIX","speedMax","setSpeedMinimum","setSpeedMaximum","setAltitudeMaximum","setAltitudeMinimum","setHoldParameters","activateHold","expirationTime","restriction","_parseAltitudeRestric2","parseAltitudeRestriction","limit","restrictionCollection","_applyAltitudeRestriction","_applySpeedRestriction","_parseSpeedRestrictio2","parseSpeedRestriction","fixPosition","getPositionModelForFixName","hasSpeedMaximumRestriction","hasSpeedMinimumRestriction","ModeController","isEnabled","descentAngle","_setModeSelectorMode","datum","_setFieldValue","MCP_FIELD_NAME","COURSE","currentAltitude","currentHeading","currentSpeed","descentAltitude","setAltitudeVnav","setSpeedVnav","fieldName","modeSelector","mode","MCP_ALTITUDE_MODE","LEVEL_CHANGE","VERTICAL_SPEED","MCP_AUTOPILOT_MODE","MCP_HEADING_MODE","MCP_SPEED_MODE","Pilot","modeController","_fms","_mcp","expedite","validateNextAltitude","clampedAltitude","clampWithinAssignableAltitudes","readbackAltitude","altitudeInstruction","radio_trend","altitudeVerbal","expediteReadback","nextHeadingInRadians","correctedHeading","headingStr","runwayOrPresent","instruction","setSpeedHold","_this$_fms$replaceArr2","_this$_fms$replaceDep2","sidIcao","sidName","altitudeToMaintain","holdWaypointModel","findWaypoint","deactivateHold","getDisplayName","maximumAltitude","altitudeCheck","_altitudeCheck","setAltitude","_speedCheck","validateNextSpeed","setSpeed","speedCheck","setNav1Datum","setCourseFieldValue","setHeadingVorLoc","setDescentAngle","setAltitudeApproach","approachType","minimumGlideslopeInterceptAltitude","getMinimumGlideslopeInterceptAltitude","_readback8","ils","glideslopeGradient","lateralGuidance","_interceptCourse","verticalGuidance","_interceptGlidepath","_this$_fms$activateHo2","responseValue","radialText","cardinalDirectionFromFix","getRadioCardinalDirectionNameForHeading","holdParametersReadback","radialReadbackLog","radialReadbackSay","bearing","StripViewCollection","_items","stripViewModel","isActive","aircraftId","_random2","_StripViewCollection","_StripViewModel","StripViewController","$stripView","STRIP_VIEW_IS_HIDDEN","_collection","STRIP_VIEW","$stripViewListArrivals","STRIP_VIEW_ARRIVALS_LIST","$stripViewListDepartures","STRIP_VIEW_DEPARTURES_LIST","$stripListTrigger","STRIP_VIEW_TRIGGER","_cidNumbersInUse","_onStripListToggle","_onStripListClickOutsideStripViewModel","findStripByAircraftId","aircraftList","stripViewCid","_generateCidNumber","_addViewToStripList","stripModel","addActiveState","removeActiveState","scrollIntoView","activeStripViewModel","findActiveStripViewModel","deselectStripView","_removeCidFromUse","cid","removeItem","listView","scrollPosition","HEIGHT","nextCid","_stripViewTemplate","_generalUtilities","StripViewModel","cidValue","_categoryClassName","_callsign","$callsignView","_aircraftType","$aircraftTypeView","cidString","leftPad","$cidView","_transponder","$transponderView","_assignedAltitude","$assignedAltitudeView","_flightPlanAltitude","$flightPlanAltitudeView","_arrivalAirport","$arrivalAirportView","_departureAirport","$departureAirportView","_alternateAirport","$alternateAirportView","_flightPlan","$flightPlanView","_remarks","$remarks","_runwayInformation","$runway","_createChildren","_enable","_layout","_redraw","_aircraftModel$getVie","getViewModel","_buildClassnameForFlightCategory","_buildRunwayInformation","STRIP_VIEW_TEMPLATE","STRIP_VIEW_CALLSIGN","STRIP_VIEW_AIRCRAFT_TYPE","STRIP_VIEW_CID","STRIP_VIEW_TRANSPONDER","STRIP_VIEW_ASSIGNED_ALTITUDE","STRIP_VIEW_FLIGHT_PLAN_ALTITUDE","STRIP_VIEW_ARRIVAL_AIRPORT_ID","STRIP_VIEW_DEPARTURE_AIRPORT_ID","STRIP_VIEW_ALTERNATE_AIRPORT_ID","STRIP_VIEW_FLIGHT_PLAN","STRIP_VIEW_REMARKS","STRIP_VIEW_RUNWAY","_onClickHandler","_onClick","_onDoubleClickHandler","_onDoubleClick","_shouldUpdate","_updateStripView","ACTIVE","behavior","hasRunwayAssigned","isApron","_aircraftModel$getVie2","runwayInfo","_aircraftModel$getVie3","STRIP_VIEW_PREPLANNING","_flatten2","_AirlineModel","_airlineConstants","AirlineCollection","airlineDefinition","_buildAirlineModels","airlineToAdd","AIRLINE_NAME_FLEET_SEPARATOR","flightNumberList","flightNumbers","_AirlineCollection","AirlineController","generateFlightNumber","_isActiveFlightNumber","addFlightNumberToInUse","removeFlightNumber","_head2","_uniq2","_buildFlightNumber","AirlineModel","flightNumberGeneration","callsignFormats","DEFAULT_CALLSIGN_FORMAT","fleets","default","activeFlightNumbers","_transformFleetNamesToLowerCase","_deactivateFlightNumber","_getRandomAircraftTypeFromAllFleets","_getRandomAircraftTypeFromFleet","buildFlightNumber","fleetName","_hasFleet","aircraftInFleet","fleetAircraft","airlineNameAndFleet","_extractNameAndFleetFromCurrentAirline","FIRST_INDEX","choose_weight","_toLower2","SECOND_INDEX","selectedAirline","nameAndFleet","validatedFormats","defaultCallsignFormats","_validateCallsignFormats","chosenFormat","choose","CALLSIGN_RANDOM_DIGIT_CHARACTER","_generateRandomDigit","CALLSIGN_RANDOM_LETTER_CHARACTER","ALPHA","NUMERIC","_AirportModel","AirportController","_airportListToLoad","airport_load","hasAirport","airport_add","airportJson","hasStoredIcao","nextAirportModel","airac","_clamp2","_AirspaceModel","_MapCollection","_RunwayCollection","_StaticPositionModel","_positionModelHelpers","DEFAULT_RANGE_RINGS","radius_nm","center","AirportModel","loading","textStatus","_runwayCollection","mapCollection","airspace","departure","defaultWind","ctr_ceiling","rangeRings","setCurrentPosition","magnetic_north","runways","maps","defaultMaps","magneticNorth","_initRangeRings","loadTerrain","buildAirspace","setActiveRunwaysFromNames","arrivalRunway","departureRunway","buildRestrictedAreas","updateCurrentWind","WIND_CHANGE","rangeRingData","gpsCoordinates","isValidGpsCoordinatePair","airspaceSection","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","airspaceModel","vertexPosition","areaData","restrictedArea","parseElevation","calculateRelativePosition","coords_max","coords_min","labelRelativePositions","labelPositions","currentWind","game_reset_score_and_events","windTravelSpeedAtAltitude","WIND_INCREASE_FACTOR_PER_FT","calculateCrosswindAngleForRunway","_this$getWindAtAltitu","windTravelDirection","primaryRunwayName","comparatorRunwayName","findRunwayModelByName","resetQueue","GEOMETRY_TYPE","apt","features","multipoly","geometry","coordinates","terrainAtElevation","line_string","point","latLongPoint","immediate","parseTerrain","errorThrown","_this5","onLoadIntialAirportFromJson","onLoadAirportSuccess","onLoadAirportError","isPointInside","INSTRUMENT_APPROACH_MINIMUM_DESCENT_ALTITUDE","AirspaceModel","airportPosition","relativePoly","airspace_class","convertToThousands","_buildPolyPositionModels","_initLabelPositions","centerRelativePosition","_calculateAirspaceCenterRelativePosition","_this$relativePoly$","minX","minY","_this$relativePoly$2","maxX","maxY","isPointInside2D","polyList","polyPositionModels","firstIndexRelativePosition","lastIndexRelativePosition","_MapModel","MapCollection","mapJson","airportPositionModel","_buildMapModels","sum","isHidden","MapModel","_buildMapLines","airportPositionAndDeclination","lineStartCoordinates","lineEndCoordinates","startPosition","endPosition","_RunwayRelationshipModel","RunwayCollection","runwayJson","_airportPositionModel","_runwayRelationships","_buildRunwayModels","_buildRunwayRelationships","getCurrentWindProps","bestRunway","bestRunwayHeadwind","headwind","_runway","_addRunwayToCollection","primaryRunway","_buildRunwayRelationshipsForRunway","comparatorRunway","RunwayModel","loc_maxDist","sepFromAdjacent","farSideIndex","thisSide","farSide","ils_distance","glideslope","rise","tan","km_ft","altitudeAtFinalApproachFix","getGlideslopeAltitudeAtFinalApproachFix","windAngle","approachOffset","isNotPastRunwayThreshold","aircraftGroundTrack","MAXIMUM_ANGLE_CONSIDERED_ESTABLISHED_ON_APPROACH_COURSE","RunwayRelationshipModel","_id","lateral_dist","straight_dist","converging","calculateRelationshipValues","raysIntersect","calculateSeparationMinimums","runwaySeparationDistanceFeet","AirportGuideView","_airportGuideMarkup","_$airportGuideView","_$element","AIRPORT_GUIDE_CONTAINER","AIRPORT_GUIDE_VIEW","nextAirportMarkup","_AirportGuideView","AirportGuideViewController","initialIcao","_airportGuideView","_guideData","_initialIcao","_onAirportChangeHandler","TOGGLE_AIRPORT_GUIDE","_onToggleViewHandler","_initAirportGuideView","_resetHandlers","activeAirportGuide","getAirportGuide","_onAirportChange","_onToggleView","nextIcao","hasAirportGuide","airportGuideMarkupString","toggleView","BaseCollection","BaseModel","modelName","optionalIdPrefix","_buildIdPrefix","_positionConstants","DynamicPositionModel","reference","latitude","longitude","_referencePosition","_magneticNorth","parseCoordinate","GPS_COORDINATE_INDEX","LATITUDE","LONGITUDE","ELEVATION","φ1","φ2","Δλ","θ","atan2","R","PHYSICS_CONSTANTS","EARTH_RADIUS_NM","Δφ","sqrt","_this$generateCoordin2","generateCoordinatesFromBearingAndDistance","δ","λ1","λ2","nextCoordinates","_hasReferencePosition","DEFAULT_SCREEN_POSITION","_calculateRelativePosition","RELATIVE_POSITION_OFFSET_INDEX","LONGITUDINAL","LATITUDINAL","canvasPositionX","calculateDistanceToPointForX","canvasPositionY","calculateDistanceToPointForY","_adjustForMagneticNor","adjustForMagneticNorth","offsetKm","magneticBearing","_DynamicPositionModel2","StaticPositionModel","_relativePosition","_initializeRelativePosition","coordinate","COMPASS_DIRECTION","distanceToPoint","originalX","originalY","hasTwoOrThreeElements","firstTwoElementsHaveSameType","latFirstCharIsNorthOrSouth","lonFirstCharIsEastOrWest","staticPositionModel","_cloneDeep2","_inRange2","_canvasConstants","_themes","CanvasController","_shouldResize","_shouldShallowRender","_shouldDeepRender","_shouldDrawAirspace","_shouldDrawFixLabels","_shouldDrawRestrictedAreas","_shouldDrawSidMap","_shouldDrawStarMap","_shouldDrawTerrain","_hasSeenTerrainWarning","theme","_setTheme","THEME","_onSelectAircraftHandler","_onDeselectAircraftHandler","_onCenterPointInViewHandler","_onCenterPointInView","_onChangeViewportPanHandler","_onChangeViewportPan","_onChangeViewportZoomHandler","_onChangeViewportZoom","_onMarkDirtyCanvasHandler","_onMarkDirtyCanvas","_onToggleAirspaceHandler","_onToggleAirspace","_onToggleLabelsHandler","_onToggleLabels","_onToggleRestrictedAreasHandler","_onToggleRestrictedAreas","_onToggleSidMapHandler","_onToggleSidMap","_onToggleStarMapHandler","_onToggleStarMap","_onToggleTerrainHandler","_onToggleTerrain","_onToggleVideoMapHandler","_onToggleVideoMap","_onRangeRingsChangeHandler","_onRangeRingsChange","_onResizeHandler","_setThemeHandler","PAN_VIEWPORT","ZOOM_VIEWPORT","TOGGLE_AIRSPACE","TOGGLE_LABELS","TOGGLE_SID_MAP","TOGGLE_STAR_MAP","TOGGLE_VIDEO_MAP","RANGE_RINGS_CHANGE","SET_THEME","CLASSNAME","_addCanvas","CANVAS_NAME","STATIC","DYNAMIC","_markDeepRender","canvasName","updateHeightAndWidth","canvas","_adjustHidpi","staticCanvasCtx","_getCanvasContextByName","_clearCanvasContext","_drawVideoMap","_drawTerrain","_drawRestrictedAirspace","_drawRunways","_drawAirportFixesAndLabels","_drawSids","_drawStars","_drawAirspaceAndRangeRings","_drawAirspaceShelvesAndLabels","_drawRunwayLabels","_drawCurrentScale","dynamicCanvasCtx","_drawSelectedAircraftCompass","_drawRadarTargetList","_drawAircraftDataBlocks","_drawMeasureTool","gameTimeMilliseconds","canvasTemplate","devicePixelRatio","canvasContext","$canvasElement","cc","clearRect","runwayLength","_translateKilometersToPixels","runwayCanvasPosition","calculateRoundedCanvasPositionFromRelativePosition","save","translate","rotate","restore","strokeStyle","RUNWAY_EXTENDED_CENTERLINE","lineWidth","beginPath","moveTo","lineTo","stroke","length2","textAlign","textBaseline","fillText","_ccTranslateFromCanvasOriginToAirportCenter","font","RUNWAY","fillStyle","_drawSingleRunway","RUNWAY_LABELS","_drawRunwayLabel","lengthNm","lengthKm","px_length","widthLessOffset","TOP_ROW_TEXT","fixCanvasPosition","FIX_FILL","globalCompositeOperation","closePath","fill","FIX_TEXT","lineJoin","BASE_CANVAS_FONT","realFixes","_drawSingleFixAndLabel","textAtFix","sidLines","getProcedureLines","setLineDash","sid","shouldDrawProcedureName","_drawPolyLineFromRelativePositions","_j","exits","lastFixName","textItemsToPrint","getFixRelativePosition","_drawText","starLines","star","firstFixName","relativePositions","lineStartPosition","labels","textItem","drawCanvasPositionX","drawCanvasPositionY","shouldUseTrailingSeparationIndicator","oppositeOfRunwayHeading","oppositeAngle","aircraftCanvasPosition","RADAR_TARGET","TRAILING_SEPARATION_INDICATOR","pixelsInTrail","radarTargetModel","aircraftAlerts","getAlerts","RING_CONFLICT","RING_VIOLATION","arc","tau","hasHalo","radiusNm","haloRadius","HALO","HISTORY_DOT_OUTSIDE_RANGE","HISTORY_DOT_INSIDE_RANGE_ARRIVAL","HISTORY_DOT_INSIDE_RANGE_DEPARTURE","positionHistory","calculatePreciseCanvasPositionFromRelativePosition","HISTORY_DOT_RADIUS_KM","HISTORY_LENGTH","_drawSeparationIndicator","_drawAircraftFuturePath","_drawAircraftVectorLines","_drawAircraftHalo","_drawAircraftConflictRings","radarTargetRadiusKm","RADIUS_KM","RADIUS_SELECTED_KM","PROJECTED_TRACK_LINES","lineLengthInHours","ptlLength","ONE_MINUTE_IN_HOURS","lineLength_km","groundTrackVector","scaledGroundTrackVector","screenPositionOffsetX","screenPositionOffsetY","simulationRate","was_locked","future_track","fms_twin","twin","saveDeltaTimeBeforeFutureTrackCalculation","ils_locked","restoreDeltaTimeAfterFutureTrackCalculation","PROJECTION_ARRIVAL_ALL","PROJECTION_DEPARTURE","PROJECTION_DEPARTURE_ALL","PROJECTION_ARRIVAL","_i2","track","_ils_locked","trackPosition","PROJECTION_ESTABLISHED_ON_APPROACH","pathInfoList","buildPathInfo","pathInfo","_drawMeasureToolPath","_drawMeasureToolLabels","firstLeg","midPoint","MEASURE_BACKGROUND","DATA_BLOCK","TEXT_FONT","lastWidth","newWidth","measureText","fillRect","MEASURE_TEXT","initialTurn","firstPoint","startPoint","firstMidPoint","MEASURE_LINE","isRHT","entryAngle","exitAngle","turnRadius","radius","_radius","position1","endPoint","position2","arcTo","radarTargetModels","items","_drawSingleRadarTarget","white","TEXT_IN_RANGE","TEXT_OUT_OF_RANGE","TEXT_SELECTED","dataBlockLeaderDirection","LEADER_DIRECTION","offsetComponent","radarTargetPosition","leaderLength","_calculateLeaderLength","dataBlockLeaderLength","leaderStart","LEADER_PADDING_FROM_TARGET_PX","leaderEnd","LEADER_PADDING_FROM_BLOCK_PX","leaderIntersectionWithBlock","dataBlockCenterCanvasPosition","calculateDataBlockCenter","_drawLegacyDatablock","row1text","buildDataBlockRowOne","row2text","buildDataBlockRowTwoPrimaryInfo","shouldShowSecondaryDataBlock","buildDataBlockRowTwoSecondaryInfo","HALF_WIDTH","gap","HAS_FILL","WIDTH","halfWidth","halfHeight","HALF_HEIGHT","lock_size","lock_offset","point1","barWidth","clipping_mask_angle","atan","pi_slice","red","ARRIVAL_BAR_OUT_OF_RANGE","green","BACKGROUND_OUT_OF_RANGE","blue","DEPARTURE_BAR_OUT_OF_RANGE","ARRIVAL_BAR_IN_RANGE","BACKGROUND_IN_RANGE","DEPARTURE_BAR_IN_RANGE","ARRIVAL_BAR_SELECTED","BACKGROUND_SELECTED","DEPARTURE_BAR_SELECTED","_drawSingleAircraftDataBlock","_drawAirspaceBorder","_drawRangeRings","centerCanvasPosition","ringRadiusKm","_calculateRangeRingRadiusKm","linewidth","RANGE_RING_COLOR","AIRSPACE_PERIMETER","AIRSPACE_FILL","_drawRelativePoly","bottomFlightLevel","topFlightLevel","labelRelativePosition","userValue","RANGE_RINGS","useDefault","defaultRangeRings","pointRelativePos","pointCanvasPos","terrainLevel","color","TERRAIN","COLOR","BORDER_OPACITY","FILL_OPACITY","terrainGroup","terrainItem","max_elevation","box_width","labeledAltitudes","airportTerrain","_drawTerrainAtElevation","_drawTerrainElevationLegend","RESTRICTED_AIRSPACE","areaRelativePositions","linePaddingPx","nameLineCanvasPosition","altLineCanvasPosition","hasVisibleMaps","VIDEO_MAP","getVisibleMapLines","mapItem","startRelativePos","startCanvasPos","endRelativePos","endCanvasPos","game_paused","canvasOrigin","canvasSize","aircraftPosition","_toCanvasPosition","COMPASS_HASH","COMPASS_TEXT","rayUnitVector","vectorize2dFromDegrees","positive_intersection_with_rect","markLen","markWeight","markVector","markStartPoint","markEndPoint","padStart","textWidth","positionFromScope","scopePositionRelativeToView","viewPositionRelativeToCanvasOrigin","scopePositionRelativeToCanvasOrigin","LEADER_LENGTH_INCREMENT_PIXELS","LEADER_LENGTH_ADJUSTMENT_PIXELS","_markShallowRender","mapNames","setVisibleMaps","newPanX","newPanY","themeName","CanvasStageModel","_height","_width","_defaultScale","_scaleMax","_scaleMin","_scale","DEFAULT_CANVAS_SIZE","PAN","X","Y","SCALE","DEFAULT","MIN","MAX","_retrieveZoomLevelFromStorageOrDefault","kilometerValue","pixelValue","precisePosition","nextHeight","nextWidth","FOTTER_HEIGHT_OFFSET","_updateZoom","_storeZoomLevel","ZOOM_LEVEL","getItem","setItem","isZoomIn","CHANGE_FACTOR","previousX","previousY","_updateScale","nextPanX","nextPanY","ChangelogController","$changelogContainer","$changelogData","$changelogToggle","_createHandlers","loadChangelogContent","TOGGLE_CHANGELOG","_onChangelogToggleHandler","CHANGELOG_CONTAINER","CHANGELOG_CONTENT","_onChangelogToggle","changelog","onLoadComplete","isLoaded","_shouldShowOnLoad","lastPlayedVersion","ATC_LAST_VERSION","currentVersion","shouldDisplayChangelog","ParsedCommand","commandList","nameAndArgs","_aircraftCommandDefinitions","AircraftCommandModel","_commandDefinition","AIRCRAFT_COMMAND_DEFINITION","validate","_argumentValidators","_argumentParsers","strToNumArray","convertStringToNumber","_objectSpread","zeroArgumentsValidator","pause","tutorial","delete","flyPresentHeading","sayAltitude","sayAssignedAltitude","sayHeading","sayAssignedHeading","sayIndicatedAirspeed","sayAssignedSpeed","singleArgumentValidator","direct","expectArrivalRunway","ilsParser","land","zeroOrOneArgumentValidator","moveDataBlock","reroute","route","taxi","cancelHold","altitudeValidator","altitudeParser","crossingValidator","crossingParser","fixValidator","headingValidator","headingParser","holdValidator","holdParser","squawkValidator","timewarp","timewarpParser","optionalAltitudeValidator","optionalAltitudeParser","commandAlias","_findKey2","isSystemCommand","_compact2","_tail2","_AircraftCommandModel","_ParsedCommand","CommandParser","rawCommandWithArgs","_extractCommandsAndArgs","commandArgSegmentsWithCallsign","callsignOrSystemCommandName","commandArgSegments","_isSystemCommand","_buildSystemCommandModel","_buildTransmitAircraftCommandModels","commandName","findCommandNameWithAlias","commandArgs","aircraftCommandModel","_validateAndParseCommandArguments","_buildCommandList","commandOrArg","validationErrors","_validateCommandArguments","validatedCommandList","errorMessage","validateArgs","parseArgs","HOLD_COMMAND_ARG_NAMES","directionNormalizer","normalizedDirection","isIncremental","isLegLengthArg","HOLD_DISTANCE","findHoldCommandByType","isValidDirectionString","isValidCourseString","_isNaN2","_parserMessages","ERROR_MESSAGE","ZERO_ARG_LENGTH","SINGLE_ARG_LENGTH","ZERO_OR_ONE_ARG_LENGTH","oneOrTwoArgumentValidator","ONE_OR_TWO_ARG_LENGTH","ONE_TO_THREE_ARG_LENGTH","ONE_OR_THREE_ARG_LENGTH","TWO_OR_THREE_ARG_LENGTH","hasLengthError","numberFromString","ALTITUDE_MUST_BE_NUMBER","EXPEDITE","ALTITUDE_EXPEDITE_ARG","hasTypeError","ONE_OR_MORE_ARG_LENGTH","MUST_BE_STRING","THREE_DIGIT_NUMBER","HEADING_MUST_BE_VALID_COURSE","INVALID_DIRECTION_STRING","HEADING_MUST_BE_NUMBER","INCREMENTAL_HEADING_MUST_BE_POSITIVE","ZERO_TO_FOUR_ARG_LENGTH","TRANSPONDER_CODE","INVALID_SQUAWK","SPEED_MUST_BE_NUMBER","INVALID_ARG","INVALID_ARG_LENGTH","TWO_ARG_LENGTH","THREE_ARG_LENGTH","ZERO_TO_THREE_ARG_LENGTH","HEADING_ACCEPTS_BOOLEAN_AS_THIRD_ARG","_last2","_values2","_scopeCommandMap","_scopeConstants","SECTOR_HANDOFF_CODES","ScopeCommandModel","aircraftReference","commandArguments","commandFunction","pieces","_extractCommandFunction","_extractCommandArguments","IMPLIED_COMMANDS","firstElement","EXPLICIT_COMMANDS","COMMAND_FUNCTIONS","INITIATE_HANDOFF","SCRATCHPAD","DATA_BLOCK_DIRECTION_LENGTH_SEPARATOR","MOVE_DATA_BLOCK","ACCEPT_HANDOFF","QP","QP_J","QU","QZ","DEFAULT_ALTIMETER_IN_INHG","LIGHT","MEDIUM","ELECTRIC","PISTON","ROCKET","TURBOPROP","DEFAULT_SPAWN_ALTITUDE_MIN","DEFAULT_SPAWN_ALTITUDE_MAX","DEFAULT_SPAWN_AIRCRAFT_SPEED_KTS","MIN_ENTRAIL_DISTANCE_NM","TOWER","SYSTEM","AUTOCOMPLETE_STATE","COMMANDS","NO_MATCHES","MATCHES","HIGHLIGHT","PARAMS","INVALID","VALID","AUTOCOMPLETE_COMMAND_STATES","PARAM","CANDIDATE","WHITESPACE","FIRST_TOKEN","TOKEN_MID","TOKEN_END","CHAT_LOG_DURATION_CHANGE","MEASURE_TOOL_STYLE_CHANGE","PTL_DECREASE_LENGTH","PTL_INCREASE_LENGTH","TIMEWARP_TOGGLE","TOGGLE_PAUSE","TOGGLE_TRAFFIC","TOGGLE_TUTORIAL","UNPAUSE","CHAT_LOG_DURATION","DRAW_PROJECTED_PATHS","DRAW_ILS_DISTANCE_SEPARATOR","MEASURE_TOOL_PATH","PROJECTED_TRACK_LINE_LENGTHS","SOFT_CEILING","GAME_OPTION_VALUES","description","onChangeEventHandler","optionList","displayLabel","help","MEASURE_TOOL_STYLE","STRAIGHT","ARC_TO_NEXT","ALL_ARCED","validationHandler","newVal","output","ONE_HOUR_IN_MILLISECONDS","ONE_MINUTE_IN_MILLISECONDS","ONE_SECOND_IN_MILLISECONDS","ONE_MILLISECOND_IN_HOURS","ONE_MILLISECOND_IN_MINUTES","ONE_MILLISECOND_IN_SECONDS","ALTITUDE_RESTRICTION","LAT_LONG","SPEED_RESTRICTION","SW","UNICODE","EARTH_RADIUS_KM","GRAVITATIONAL_MAGNITUDE","SHIFT_LEFT","SHIFT_RIGHT","F3","F4","F5","F6","F8","F9","F10","F11","F12","MIDDLE","INFO","WARNING","ERROR","FATAL","_mapValues2","AIRPORT_LIST","AIRPORT_LIST_ITEM","AIRPORT_LIST_ITEM_IS_ACTIVE","AIRPORT_SEARCH","ALL_SET","BLACKBOX","CALLSIGN","CHANGELOG_VERSION","CONTROL","DESTINATION","DIALOG_BODY","FAST_FORWARDS","FOLLOWING_STAR","FORM_VALUE","HIDDEN","LOOKING_GOOD","MESSAGE","NEGATIVE","NEXT","NOT_SELECTABLE","OPTIONS_DIALOG","TRAFFIC_DIALOG","TRAFFIC_DEFAULT_BUTTON","TRAFFIC_RESTART_BUTTON","PAUSED","PREV","SPEED_2","SPEED_5","STRIP","SWITCH_AIRPORT","TOGGLE_SPEECH","TOGGLE_STARS","WARN","WARNING_BUTTON","IDS","AIRPORT_GUIDE","AIRPORT_SWITCH","AUTOCOMPLETE","AUTOCOMPLETE_INPUT","AUTOCOMPLETE_OUTPUT","AUTOCOMPLETE_SPACER","AUTOCOMPLETE_SUGGESTS","CLOCK","LOADING","NAVAIDS_CANVAS","TOGGLE_OPTIONS","GITHUB_EXTERNAL_LINK","SCORE","SCORE_LOG","SIDEBAR","ATC_SPEECH_ENABLED","FIRST_RUN_TIME","_theme","_theme2","_theme3","CLASSIC","THEME_CLASSIC","THEME_DEFAULT","CELESTIAL","THEME_CELESTIAL","BLUE_VERY_LIGHT","BLUE_VERY_LIGHT_02","BLUE_LIGHT","BLUE_MEDIUM_LIGHT","BLUE_MEDIUM","BLUE_MEDIUM_DARK","BLUE_MEDIUM_DARK_01","BLUE_DARK","BLUE_VERY_DARK","BLUE_01","BLUE_02","GREEN_LIGHT","GREEN_DARK","GRAY_VERY_VERY_DARK","GRAY_BRIGHT","GRAY_DIM","GRAY_DIMMER","RED_BRIGHT","RED","RED_02","WHITE","WHITE_05","TRANSPARENT","_color","DATA_BLOCK_THEME","AIRCRAFT_MODEL_ICAO_CHARACTER_LIMIT","LEADER_LENGTH","SCRATCHPAD_CHARACTER_LIMIT","RADAR_TARGET_THEME","HISTORY_DOT_INSIDE_RANGE","TRAILING_SEPARATION_INDICATOR_ENABLED","SCOPE_THEME","BACKGROUND","BLACK_07","CROSSHAIR_STROKE","HALO_DEFAULT_RADIUS_NM","HALO_MAX_RADIUS_NM","1000","2000","3000","4000","5000","6000","7000","8000","9000","10000","11000","12000","13000","14000","15000","16000","17000","18000","19000","20000","21000","22000","23000","24000","25000","WIND_VANE_THEME","DIRECTION_LINE_GUSTY","DIRECTION_LINE","INNER_RING_STROKE","OUTER_RING_FILL","WIND_SPEED_TEXT","_dataBlock","_radarTarget","_scope","_terrain","_windVane","TERRAIN_THEME","WIND_VANE","BLUE_05","BLUE_06","BLUE_09","BLUE_LIGHT_SOFT_03","GRAY_LIGHT","GRAY","GREEN_02","GREEN_05","GREEN_09","GREEN_LIGHT_PALE_002","GREEN_LIGHT_PALE_01","GREEN_LIGHT_PALE_025","GREEN_MEDIUM","RED_05","RED_06","RED_08","RED_09","RED_BRIGHT_07","WHITE_02","WHITE_04","WHITE_07","WHITE_08","WHITE_09","GREEN_01","RED_01","CHANGE_SPAWN_PATTERN","SETTINGS","UI_LOG","_LoadableContentModel","ContentQueueClass","isLoading","lowPriorityQueue","highPriorityQueue","queuedContent","startLoad","LoadableContentModel","TimeKeeper","_accumulatedDeltaTime","_elapsedFrameCount","_frameDeltaTime","_frameStartTimestamp","_frameStep","_futureTrackDeltaTimeCache","_isPaused","_previousFrameTimestamp","_startTimestamp","_simulationRate","isPaused","_isReturningFromPauseAndNotFutureTrack","deltaTime","nextPause","gameTimeSeconds","_incrementFrame","_calculateNextDeltaTime","_calculateFrameStep","nextTimewarp","deltaTimeOffsetBySimulationRate","_GameOptions","GAME_EVENTS_POINT_VALUES","EXTREME_CROSSWIND_OPERATION","EXTREME_TAILWIND_OPERATION","GO_AROUND","HIGH_CROSSWIND_OPERATION","HIGH_TAILWIND_OPERATION","ILLEGAL_APPROACH_CLEARANCE","LOCALIZER_INTERCEPT_ABOVE_GLIDESLOPE","NOT_CLEARED_ON_ROUTE","SEPARATION_LOSS","NO_TAKEOFF_SEPARATION","GAME_EVENTS_DESCRIPTION","GameController","focused","frequency","timeouts","last_score","score","createChildren","_onWindowBlurHandler","_onWindowBlur","_onWindowFocusHandler","_onWindowFocus","visibilityState","initializeEventCount","gameEvent","game_updateScore","updateScoreHistory","hoursPlayed","nextValue","updateSimulationRate","$fastForwards","game_timewarp_toggle","setPause","$pauseToggleElement","game_unpause","game_pause","functionToCall","gameTimeout","$scoreElement","points","scrollHeight","$htmlElement","updateTimers","currentGameTime","willRemoveTimerFromList","delayFireTime","callbackArguments","delayInterval","shouldRepeat","optionName","userSettingsValue","isIndicatorEnabled","GameOptions","_options","addGameOptions","addOption","optionProps","optionStorageKey","buildStorageName","storedOptionValue","optionValue","ScoreController","_onApproachHandler","_onApproach","_onLandingHandler","_onLanding","_onExitAirspaceHandler","_onExitAirspace","_penalizeLocalizerInterceptAltitude","_scoreWind","_scoreRunwaySeparation","_onAirspaceExitForArrival","_onAirspaceExitWithClearance","_onAirspaceExitWithoutClearance","getWindComponents","previousAircraft","isAboveGlidepath","_App","_SimClockController","_airportInfoTemplate","INFO_VIEW_SELECTORS","AirportInfoController","$template","$altimeterView","$clockView","$elevationView","$windView","altimeter","simClockController","AIRPORT_INFO_TEMPLATE","_onWindChangeHandler","onWindChange","_buildWindAndGustReadout","_generateHighAltimeterReading","_render","readout","buildClockReadout","newAngle","newSpeed","gustStrength","gustSpeed","windSpeed","SimClockController","realWorldCurrentZuluTime","elapsedTimeInMilliseconds","clockDate","hours","digits_integer","getHours","minutes","getMinutes","seconds","getSeconds","date","getTimezoneOffset","_EventModel","EventBus","_events","eventName","addObserver","_addObserver","_removeObserver","observers","_removeEventKey","removeObserver","EventModel","observer","hasObserver","mod","degrees","radians","startLatitude","startLongitude","endLatitude","endLongitude","startLatitudeRadians","endLatitudeRadians","distanceLatitude","distanceLongitude","expectedValue","lowerBound","EPSILON","upperBound","isWithin","firstValue","secondValue","lowerLimit","upperLimit","averageOfLimits","range1Min","targetValue","range1Max","range2Min","range2Max","range1_min","target_val","range1_max","range2_min","range2_max","randomOctal","limit1","limit2","oldLimit1","valueToClamp","bankAngle","headingThruTarget","vector","bearingToTarget","currentWaypointPosition","nextWaypointModel","turnRate","nominalNewCourse","nextWaypointRelativePosition","currentWaypointRelativePosition","_calculateNominalNewCourse","courseChange","_calculateCourseChangeInRadians","calcTurnInitiationDistanceNm","runwayAngle","calcTurnRadiusByTurnRate","v1","v2","vnorm","heading_angle","vectors","vdet","v3","vcp","cs","sn","pos1","dir1","pos2","dir2","deg_allowance","t_norm","u_norm","dists","vertex1","vertex2","edge","norm","x1","x2","x3","x4","y1","y2","y3","y4","vs","xi","yi","xj","yj","mpoly","ring","area_to_poly","rectPos","rectSize","bottom","MeasureLegModel","previousLeg","_bearing","_midPoint","_next","_previous","_calculateLegParameters","bearingToPoint","halfLength","angularDifference","_hasValidRadius","_MeasureLegModel","_FixModel","MeasurePath","_points","_style","_throwIfPointInvalid","hasLegs","_buildInitialTurnParameters","pointsList","hasStyleArced","initialValues","totalDistance","totalDuration","lastPoint","_getRelativePosition","initialLeg","lastValues","arcLength","_buildLabel","hasStyleInitialTurn","turnAngle","_getRelativePositionAtIndex","bearingToFix","bearingToCenter","centerToFixBearing","centerToFixDistance","outboundCourse","toPrecision","_MeasurePath","MeasureTool","_currentPath","_paths","setStyle","_onMeasureTooltyleChangeHandler","_onMeasureTooltyleChange","_throwIfNotMeasuring","removeLastPoint","isValid","AirwayModel","fixNames","_fixNameCollection","_icao","_verifyFixNamesExistInNavigationLibrary","indexOfEntryFix","indexOfExitFix","_getFixNamesFromIndexToIndex","startIndex","endIndex","numberOfFixes","fixList","removeItems","_buildFixModelsFromList","_resetFixModels","fixToAdd","spoken","hiddenFixes","lastResult","_lastResult","isRealFix","fixData","addFixToCollection","FixModel","_spoken","_fixData","lat","lon","_isObject2","_HoldModel","HoldCollection","holdJson","populateHolds","holds","containsHoldForFix","HoldModel","holdString","_buildHoldParameters","_AirwayModel","_HoldCollection","_ProcedureModel","NavigationLibrary","_airwayCollection","_holdCollection","_procedureCollection","_procedureLines","airways","fixes","sids","stars","_initializeReferencePosition","_initializeFixCollection","_initializeAirwayCollection","_initializeHoldCollection","_initializeProcedureCollection","_initializeSidLines","_initializeStarLines","_showConsoleWarningForUndefinedFixes","addItems","sidId","starId","getProceduresByType","_buildProcedureLine","procedures","procedureLines","mostRecentFixName","draw","positions","airwayId","procedureModel","fixOrNull","missingFixes","_getAllFixNamesInUse","airwayFixes","airwayModel","fixNameCollection","fixGroups","getAllFixNamesInUse","findRealFixes","ProcedureModel","_body","_draw","_entryPoints","_exitPoints","_procedureType","_altitude","_initEntriesAndExitsForSid","_initEntriesAndExitsForStar","rwy","exitPoints","entryPoints","entryFixNames","_getFixNamesFromEntries","bodyFixNames","_getFixNamesFromBody","exitFixNames","_getFixNamesFromExits","drawFixNames","_getFixNamesFromDraw","allFixNames","exitNames","maxIndex","entryNames","entryWaypointModels","_generateWaypointsForEntry","bodyWaypointModels","_generateWaypointsForBody","exitWaypointModels","_generateWaypointsForExit","restrictedFix","_getFixNameFromRestrictedFixArray","lineSegment","fixesInSegment","_this6","_RadarTargetModel","RadarTargetCollection","_assertThisInitialized","addRadarTargetModel","collectionWithAircraftRemoved","addRadarTargetModelForAircraftModel","_padEnd2","RadarTargetModel","_cruiseAltitude","_dataBlockLeaderDirection","_dataBlockLeaderLength","_hasFullDataBlock","_haloRadius","_hasSuppressedDataBlock","_interimAltitude","_isUnderOurControl","_scratchPadText","setDefaultScratchpad","dataBlockRowOne","aircraftAltitude","aircraftSpeed","paddedScratchPadText","scratchPadText","paddedAircraftModelIcao","aircraftModelIcao","leaderEndToBlockCenter","ctr","360","90","135","180","225","270","315","desiredDirection","desiredLength","argumentPieces","DATA_BLOCK_POSITION_MAP","removeHalo","_RadarTargetCollection","ScopeModel","_ptlLength","_sectorCollection","amendAltitude","validValues","nextIndex","sign","changePtlLength","functionArguments","findRadarTargetModelForAircraftReference","setScratchpad","haloDefaultRadius","haloMaxRadius","setHalo","_speechConstants","speech","synthesis","speechSynthesis","voice","VOICES","pitch","LOWER_PITCH","HIGHER_PITCH","NORMAL_SPEED","FASTER_SPEED","sentence","textToSay","singleSentence","utterance","SpeechSynthesisUtterance","getVoices","speak","$speechToggleElement","_SpawnPatternModel","_buildSpawnPatternModels","spawnPatterns","resetRate","itemToAdd","spawnPatternsByDepartureRunway","departureModels","spawnPattern","unknownRunway","departureRunwayId","spawnPatternsToPreSpawn","_Object$keys","rateMap","rateTotal","randomPosition","flightCategory","_buildPreSpawnAircraft2","_spawnPatternModelJsonValidator","SPAWN_METHOD","SpawnPatternModel","spawnPatternJson","scheduleId","_weightedAirlineList","_minimumAltitude","_maximumAltitude","defaultRate","cycleStartTime","period","variation","entrail","_aircraftPerHourUp","_aircraftPerHourDown","_uptime","spawnPatternModelJsonValidator","_extractSpeedFromJson","_generateSelfReferencedAirportPositionModel","_assembleAirlineNamesAndFrequencyForSpawn","_buildWeightedAirlineList","_buildPreSpawnAircraft","_calculateSurgePatternInitialDelayValues","_setCyclePeriodAndOffset","_initializePositionAndHeadingForAirborneAircraft","_setMinMaxAltitude","_findRandomIndexForList","_calculateRandomDelayPeriod","_calculateNextCyclicDelayPeriod","_calculateNextSurgeDelayPeriod","_calculateNextWaveDelayPeriod","isAirborneAtSpawn","createPreSpawnAircraftWithSpawnPatternModel","reducedSpawnRate","convertMinutesToSeconds","minimumDelay","_calculateMinimumDelayFromSpeed","averageDelay","maximumDelay","totalTime","progressInPeriod","intervalUp","intervalDown","timeRemaining","spawnPatternAirlines","spawnPatternAirline","weightedAirlineList","buildPreSpawnAircraft","_calculateSpawnHeading","firstWaypointPositionModel","secondWaypointPositionModel","SpawnScheduler","createAircraftWithSpawnPatternModel","createNextSchedule","createSchedulesFromList","spawnPatternModels","cycleStart","createPreSpawnAircraft","resetTimer","departureModelsToPreSpawn","getDepartureModelsForPreSpawn","getNextDelayValue","_createTimeout","timePassed","destroyTimer","timerStart","nextDelay","game_timeout","createAircraftAndRegisterNextTimeout","_calculateOffsetsToEachWaypointInRoute","waypointModelList","waypointOffsetMap","totalDistanceTraveled","previousWaypointModel","calculateDistanceToWaypoint","_calculateAltitudeOffsets","altitudeOffsets","altitudes","_calculateAltitudeAtOffset","offsetDistance","indexOfNextAltitudeRestriction","altitudeOffset","indexOfPreviousAltitudeRestriction","previousAltitudeRestriction","nextAltitudeRestriction","distanceBetweenRestrictions","altitudeChangeFromPreviousRestriction","_calculateIdealSpawnAltitudeAtOffset","spawnSpeed","spawnAltitude","firstAltitudeRestriction","minutesToFirstAltitudeRestriction","highestAcceptableAltitude","_preSpawn","spawnRate","entrailDistance","avg","previousWaypoint","distanceBetweenWaypoints","distanceToBoundary","distanceToAirspace","_calculateTotalDistanceAlongRoute","spawnOffsets","spawnPositionsAndAltitudes","_loop","spawnOffset","nextWaypointIndex","previousWaypointIndex","distanceFromPreviousWaypointToSpawnPoint","calculateBearingToWaypoint","spawnPositionModel","generateDynamicPositionFromBearingAndDistance","_calculateSpawnPositionsAndAltitudes","offsetClosestToAirspace","clampedEntrailDistance","smallestIntervalNm","largestIntervalNm","distanceAlongRoute","_assembleSpawnOffsets","currentAirport","_difference2","_keys2","ACCEPTED_KEYS","ACCEPTED_OPTIONAL_KEYS","ALL_KEYS","jsonKeys","unsupportedKeys","SettingsController","$dialog","$dialogBody","descriptions","getDescriptions","$container","_buildTextInputTemplate","_buildSelectInputTemplate","$version","_buildVersionTemplate","$label","$optionSelector","$selector","selectedOption","$optionSelectTempalate","_buildSelectOptionTemplate","change","$currentTarget","setOptionByName","optionData","$unit","$value","simulatorVersion","GLOBAL","VERSION","TrafficRateController","_rates","_wind","_buildDialogBody","_onFormResetHandler","_onTrafficResetHandler","_onChangeWindDirectionHandler","onChangeWindDirection","_onChangeWindSpeedHandler","onChangeWindSpeed","onFormReset","resetRates","$windDirSlider","_buildWindDirectionSlider","$windSpdSlider","_buildWindSpeedSlider","_Object$values","$formElement","_buildSlider","_onChangeFlightCategoryRate","_Object$values2","findSpawnPatternsByCategory","_buildInputField","_onChangeSpawnPatternRate","onChangeMethod","onChangeHandler","rateKey","$target","$nextDirection","$nextSpeed","$output","$childOutput","_updateRate","nextRate","INIT_POSITION_PADDING","TutorialStep","side","_flow2","_TutorialStep","TutorialView","$tutorialView","$tutorialPrevious","$tutorialNext","$toggleTutorial","layout","steps","liverefs","_onTutorialToggleHandler","tutorial_toggle","tutorial_prev","tutorial_next","tutorial_update_content","departureAircraft","_loadTutorialStep","jqxhr","tutorial_step","replacement","objFetcher","propFetcher","_getPropFetcher","propPath","replaceFunc","findWhat","desc","isTutorialDialogOpen","tutorial_close","tutorial_open","tutorial_get","outerWidth","outerHeight","tutorial_move","gameTimeInSeconds","_SettingsController","_TrafficRateController","_VideoMapController","_TutorialView","UiController","tutorialView","settingsController","trafficRateController","videoMapController","$airportDialog","$airportDialogBody","$airportGuideDialog","$airportSearch","$changelogDialog","$githubLinkElement","$log","chatLogDuration","$pausedImg","$switchAirport","$toggleAirportGuide","$toggleAirspace","$toggleChangelog","$toggleLabels","$toggleOptions","$togglePause","$toggleRestrictedAreas","$toggleSids","$toggleSpeech","$toggleStars","$toggleTerrain","$toggleTraffic","$toggleVideoMap","$tutorialDialog","onChatLogDurationChangeHandler","onChatLogDurationChange","_onInitiateAirportSearch","onClickGithubLink","onToggleAirportList","onToggleAirportGuide","onToggleAirspace","onToggleChangelog","onToggleLabels","onToggleOptions","onToggleRestrictedAreas","onToggleSids","speech_toggle","onToggleStars","onToggleTerrain","onToggleTraffic","onToggleVideoMap","tutorial_init_pre","_buildAirportList","uiLogView","isAirportGuideDialogOpen","isAirportSelectionDialogOpen","isChangelogDialogOpen","isDialogOpen","_onClickCloseAirportDialog","difficulty","_AirportController$ai","_buildAirportListIconForDifficultyLevel","$airportListItem","_buildAirportListItemTemplate","difficultyLevel","icon","repeat","$previousActiveAirport","_onClickOpenAirportDialog","toggleDialog","recordClickOnOutboundLink","VideoMapController","_selectedMaps","_onChangeSelectedMapsHandler","onChangeSelectedMaps","getMapNames","getVisibleMapNames","mapName","isChecked","_buildRow","_addMap","_removeMap","_RegexGroup","_autocompleteConstants","_AutocompleteCommandTemplate","_AutocompleteArgumentTemplate","AutocompleteController","$autocomplete","$autocompleteInput","$autocompleteOutput","$autocompleteSpacer","$autocompleteSuggests","_inputController","commandDefs","commandType","AUTOCOMPLETE_COMMAND_TYPE","initialRange","targetRange","highlighted","inputRevert","commandTemplate","AUTOCOMPLETE_COMMAND_TEMPLATE","argumentTemplate","AUTOCOMPLETE_ARGUMENT_TEMPLATE","_fetchConfig","onConfigFetchedHandler","_onConfigFetched","onAutocompleteInputChangeHandler","_onAutocompleteInputChange","onSuggestionClickHandler","_onSuggestionClick","commandDef","variants","variant","paramsets","paramset","candidate","_buildRegexOrGroup","regexStrs","flags","cmdstr","reversePrefix","AUTOCOMPLETE_REGEXP","_AUTOCOMPLETE_REGEXP$2","_growTargetRangeLeft","_AUTOCOMPLETE_REGEXP$","leftBoundary","_growTargetRangeRight","firstChar","firstToken","extraPad","startWithoutCallsign","_updateState","AUTOCOMPLETE_INPUT_PLACEHOLDER","$highlightOld","$highlightNew","$highlightOldPrev","$highlightOldNext","trimRight","trimLeft","paramstr","highlightPrev","highlightNext","selectCommand","commit","revert","currentAutocompleteInputValue","inputLength","_matchCommands","_validateArgs","_findCandidateCommands","findAndHighlight","$highlight","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","startsWith","explanation","explain","altkeys","validity","AUTOCOMPLETE_PARAMS_VALIDITY","RegexGroup","regexes","regexStr","regex","AudioContext","webkitAudioContext","fromCodePoint","units","_char","randomWeight","entryFix","procedureOrAirway","exitFix","_parseRestriction","restrictionText","multiplier","_match","_clone2","CARDINAL_DIRECTION","radio_names","g","h","z","-",".","radio_cardinalDir_names","nw","sw","se","ne","radio_runway_names","digits","force","shorten","trailingDigits","getGrouping","groupable","digit1","digit2","firstDigit","_s","thisIsDigit","lastWasDigit","letterOrNumber","alphanumeric","alt_s","CATEGORIES","getCardinalDirection","cardinalDirection","TRANSPONDER_CODES","reserved","_isReserved","_getCodes","testAgainst","_isMatch","randint","endsWith","_startsWith2","NM_FT","NM_KM","M_FT","KM_FT","KN_MS","FL_FT","NUMBER_CONSTANTS","FULL_CIRCLE_DEGREES","m_ft","decimalDegrees","parsedElevation","elevationUnit"],"mappings":"CAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,EAAA,OAAAA,EAAAJ,GAAA,GAAA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAAA,MAAAK,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAX,EAAAG,GAAA,CAAAS,QAAA,IAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,OAAAI,EAAAH,EAAAI,GAAA,GAAAL,IAAAA,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAS,QAAA,IAAA,IAAAL,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,CAAA,CAAAa,EAAA,CAAA,SAAAT,QAAAU,OAAAJ,+NCAoB,gFAGJ,8DACwB,kEACM,wGACf,yGACX,wFAEG,6BAEnBK,QAAUC,oBAAA,QAAQC,OACtB,SAASA,SACP,IAAIC,GAAKH,UAeT,OAbAG,GAAGC,QAAU,SAASC,MAAOC,SAC3B,OAAOC,4BAAAH,QAAQC,MAAOC,QAASH,KAEjCA,GAAGK,WAAa,SAASH,MAAOC,SAC9B,OAAOC,4BAAAC,WAAWH,MAAOC,QAASH,KAGpCA,GAAGM,IAAGC,wBAAA,QACNP,GAAGQ,SAAQJ,4BAAAI,SACXR,GAAGS,mBAAkBC,uCAAA,QACrBV,GAAGW,OAAMC,wBAAAC,OACTb,GAAGc,MAAKF,wBAAAE,MAEDd,GAGT,IAAIe,KAAOhB,SACXgB,KAAKhB,OAASA,OAEdiB,uBAAA,QAAWD,MAEXA,KAAKE,QAAOC,4BAAA,QAEZH,KAAc,QAAIA,qBAEHA,2oBCxCHI,KAAIC,gCAAM,4EAIC,kFACD,2BACVC,MAAKD,gCAAM,uBACXE,QAAOF,gCAAM,+EAEF,6BAGvB,SAASrB,SACP,IAAIC,GAAK,IAAImB,KAAKI,sBAalB,OAXAF,MAAMG,OAAOxB,GAAImB,MACjBnB,GAAGyB,WAAUC,uBAAA,QACb1B,GAAG2B,UAASC,sBAAA,QACZ5B,GAAGqB,MAAQA,MACXrB,GAAG6B,iBAAmBR,MAAMQ,iBAE5B7B,GAAG8B,GAAKR,QACRtB,GAAG+B,SAAW,SAASC,MACrB,OAAOV,QAAQS,SAASC,KAAMhC,KAGzBA,GAGT,IAAIe,KAAOhB,SACXgB,KAAKhB,OAASA,OAEdiB,uBAAA,QAAWD,MAEXA,KAAc,QAAIA,qBAEHA,waCpC6B,sDACtB,iCACe,iCACG,wDACrB,6BAEI,kCACU,2BAED,CAC9BpB,EAAG,cACHsC,EAAG,gBACHC,EAAG,gBACHC,EAAG,WACHC,EAAG,mBACHC,EAAG,kBACHC,EAAG,YAKE,SAASf,sBAAsBgB,QAASC,SAAUC,YACvDC,KAAKH,QAAUA,SAAW,GAC1BG,KAAKF,SAAWA,UAAY,GAC5BE,KAAKD,WAAaA,YAAc,GAEhCE,SAAAC,uBAAuBF,MACvBG,YAAAC,0BAA0BJ,MAG5BnB,sBAAsBwB,UAAY,CAChCC,YAAazB,sBAEb0B,OAAMC,SAAA,QACNC,IAAKD,SAAA,QAAOC,IAEZC,eAAgB,SAASC,KAAMC,IAC7B,GAlBe,oBAkBXC,OAAAC,SAAS/D,KAAK4D,MAAsB,CACtC,GAAIC,GAAM,MAAM,IAAAG,YAAA,QAAc,2CAC9BF,OAAA/B,OAAOkB,KAAKH,QAASc,WAErBX,KAAKH,QAAQc,MAAQC,IAGzBI,iBAAkB,SAASL,aAClBX,KAAKH,QAAQc,OAGtBM,gBAAiB,SAASN,KAAMO,SAC9B,GA9Be,oBA8BXL,OAAAC,SAAS/D,KAAK4D,MAChBE,OAAA/B,OAAOkB,KAAKF,SAAUa,UACjB,CACL,QAAuB,IAAZO,QACT,MAAM,IAAAH,YAAA,QAAA,4CAA0DJ,KAAI,kBAEtEX,KAAKF,SAASa,MAAQO,UAG1BC,kBAAmB,SAASR,aACnBX,KAAKF,SAASa,OAGvBS,kBAAmB,SAAST,KAAMC,IAChC,GA5Ce,oBA4CXC,OAAAC,SAAS/D,KAAK4D,MAAsB,CACtC,GAAIC,GAAM,MAAM,IAAAG,YAAA,QAAc,8CAC9BF,OAAA/B,OAAOkB,KAAKD,WAAYY,WAExBX,KAAKD,WAAWY,MAAQC,IAG5BS,oBAAqB,SAASV,aACrBX,KAAKD,WAAWY,QAIpB,IAAIF,IAAMD,SAAA,QAAOC,4BAEhBa,YAAWT,OAAAS,oBAAEf,OAAMC,SAAA,gKC7E3B,IAAI5C,IAAM,CAERiC,QAAS,CAIP0B,iBAAkB,SAASC,MACzB,MAAsB,kBAAfA,KAAMC,OACU,sBAAdD,KAAKC,MAA8C,mBAAdD,KAAKC,UACvCD,KAAME,QAAUF,KAAKE,OAAO1E,QAAWwE,KAAKG,OAG1DC,SAAU,SAASC,MACjB,MAAO,aAAeC,KAAKD,KAAKE,WAKlCC,SAAU,SAASH,MACjB,OAA6B,IAAtBA,KAAKI,MAAMjF,SAAiBY,IAAIiC,QAAQ+B,SAASC,QAAUA,KAAKK,yBAQ9DtE,+MCjBR,SAAeJ,MAAOC,SAE3B,MAAmB,YAAfD,MAAMiE,OAEVU,SAAA,QAAOC,GAAKA,IAGTC,QAAU,SAASA,SACpB,OAAO,IAAID,GAAGE,eAAe7E,SAAWA,QAAQ8E,QAASF,UAG/C,IAAAG,oBAAA,QAAsB/E,SACrBgF,OAAON,SAAA,QAAO/D,MAAMZ,SAVMA,mDAZtB,gEACW,yBAClBkF,6MAAOhE,SAAM,6BACF,oBAEdP,OAAMgE,SAAA,QAEf,IAAIC,GAAK,GACTvB,OAAA/B,OAAOsD,GAAIM,2KCPW,YAElBC,gBAAUC,EAEd,IAEE,GAAsB,mBAAXC,SAA0BA,OAAOC,IAAK,CAG/C,IAAIC,UAAYvG,QAAQ,cACxBmG,WAAaI,UAAUJ,YAEzB,MAAOK,MAoCT,SAASC,UAAUC,MAAOC,QAASC,KACjC,GAAIvC,OAAAwC,QAAQH,OAAQ,CAGlB,IAFA,IAAII,IAAM,GAEDjH,EAAI,EAAGkH,IAAML,MAAMlG,OAAQX,EAAIkH,IAAKlH,IAC3CiH,IAAIE,KAAKL,QAAQM,KAAKP,MAAM7G,GAAI+G,MAElC,OAAOE,IACF,MAAqB,kBAAVJ,OAAwC,iBAAVA,MAEvCA,MAAQ,GAEVA,MAIT,SAASQ,QAAQC,SACf3D,KAAK2D,QAAUA,QACf3D,KAAK4D,OAAS,GAjDXjB,cACHA,WAAa,SAASkB,KAAMC,OAAQH,QAASI,QAC3C/D,KAAKgE,IAAM,GACPD,QACF/D,KAAKiE,IAAIF,UAIF1D,UAAY,CACrB4D,IAAK,SAASF,QACRlD,OAAAwC,QAAQU,UACVA,OAASA,OAAOG,KAAK,KAEvBlE,KAAKgE,KAAOD,QAEdI,QAAS,SAASJ,QACZlD,OAAAwC,QAAQU,UACVA,OAASA,OAAOG,KAAK,KAEvBlE,KAAKgE,IAAMD,OAAS/D,KAAKgE,KAE3BI,sBAAuB,WACrB,MAAO,CAACxH,KAAMoD,KAAKc,aAErBA,SAAU,WACR,OAAOd,KAAKgE,OA2BlBN,QAAQrD,UAAY,CAClBgE,QAAO,WACL,OAAQrE,KAAK4D,OAAO5G,QAEtBmH,QAAS,SAASP,OAAQR,KACxBpD,KAAK4D,OAAOU,QAAQtE,KAAKyD,KAAKG,OAAQR,OAExCI,KAAM,SAASI,OAAQR,KACrBpD,KAAK4D,OAAOJ,KAAKxD,KAAKyD,KAAKG,OAAQR,OAGrCmB,MAAO,WACL,IAAIX,OAAS5D,KAAKwE,QAIlB,OAHAxE,KAAKyE,KAAK,SAASZ,MACjBD,OAAOK,IAAI,CAAC,KAAMJ,KAAM,SAEnBD,QAGTa,KAAM,SAASC,MACb,IAAK,IAAIrI,EAAI,EAAGkH,IAAMvD,KAAK4D,OAAO5G,OAAQX,EAAIkH,IAAKlH,IACjDqI,KAAK1E,KAAK4D,OAAOvH,KAIrBmI,MAAO,WACL,IAAIpB,IAAMpD,KAAK2E,iBAAmB,CAACC,MAAO,IAC1C,OAAO,IAAIjC,WAAWS,IAAIwB,MAAMf,KAAMT,IAAIwB,MAAMd,OAAQ9D,KAAK2D,UAE/DF,KAAM,SAASP,WAAOE,IAAGyB,UAAA7H,QAAA,QAAA4F,IAAAiC,UAAA,GAAG7E,KAAK2E,iBAAmB,CAACC,MAAO,IAAGC,UAAA,GAC7D,OAAI3B,iBAAiBP,WACZO,OAGTA,MAAQD,UAAUC,MAAOlD,KAAMoD,KAExB,IAAIT,WAAWS,IAAIwB,MAAMf,KAAMT,IAAIwB,MAAMd,OAAQ9D,KAAK2D,QAAST,SAGxE4B,aAAc,SAASlE,GAAIa,KAAMC,QAE/B,OADAA,OAAS1B,KAAK+E,aAAarD,QACpB1B,KAAKyD,KAAK,CAAC7C,GAAIa,KAAO,IAAMA,KAAO,IAAM,IAAKC,OAAQ,OAG/DsD,aAAc,SAASC,KACrB,MAAO,KAAOA,IAAM,IACjBC,QAAQ,MAAO,QACfA,QAAQ,KAAM,OACdA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,UAAW,WACnBA,QAAQ,UAAW,WAAa,KAGrCC,cAAe,SAASC,KACtB,IAAIC,MAAQ,GAEZ,IAAK,IAAIC,OAAOF,IACd,GAAIA,IAAIG,eAAeD,KAAM,CAC3B,IAAIE,MAAQvC,UAAUmC,IAAIE,KAAMtF,MAClB,cAAVwF,OACFH,MAAM7B,KAAK,CAACxD,KAAKgF,aAAaM,KAAM,IAAKE,QAK/C,IAAIlC,IAAMtD,KAAK+E,aAAaM,OAG5B,OAFA/B,IAAIa,QAAQ,KACZb,IAAIW,IAAI,KACDX,KAITyB,aAAc,SAASU,SAGrB,IAFA,IAAInC,IAAMtD,KAAKwE,QAENnI,EAAI,EAAGkH,IAAMkC,QAAQzI,OAAQX,EAAIkH,IAAKlH,IACzCA,GACFiH,IAAIW,IAAI,KAGVX,IAAIW,IAAIhB,UAAUwC,QAAQpJ,GAAI2D,OAGhC,OAAOsD,KAGToC,cAAe,SAASD,SACtB,IAAInC,IAAMtD,KAAK+E,aAAaU,SAI5B,OAHAnC,IAAIa,QAAQ,KACZb,IAAIW,IAAI,KAEDX,sBAIII,+QC6SR,SAAoBlG,MAAOC,QAASkI,KACzC,GAAa,MAATnI,OAAmC,iBAAVA,OAAqC,YAAfA,MAAMiE,KACvD,MAAM,IAAAV,YAAA,QAAc,iFAAmFvD,OAInG,SADNC,QAAUA,SAAW,MAEnBA,QAAQmI,MAAO,GAEbnI,QAAQoI,SACVpI,QAAQqI,WAAY,GAGtB,IAAIC,IAAMJ,IAAIvH,MAAMZ,MAAOC,SACvBuI,aAAc,IAAIL,IAAI7H,UAAWP,QAAQwI,IAAKtI,SAClD,OAAO,IAAIkI,IAAI5H,oBAAqBR,QAAQyI,YAAavI,0BAGpD,SAAiBD,MAAOC,QAAckI,UAAP/C,IAAPnF,UAAAA,QAAU,IACvC,GAAa,MAATD,OAAmC,iBAAVA,OAAqC,YAAfA,MAAMiE,KACvD,MAAM,IAAAV,YAAA,QAAc,8EAAgFvD,OAIhG,SADNC,QAAUoD,OAAA/B,OAAO,GAAIrB,YAEnBA,QAAQmI,MAAO,GAEbnI,QAAQoI,SACVpI,QAAQqI,WAAY,GAGtB,IAAIG,cAAQrD,EAEZ,SAASsD,eACP,IAAIH,IAAMJ,IAAIvH,MAAMZ,MAAOC,SACvBuI,aAAc,IAAIL,IAAI7H,UAAWP,QAAQwI,IAAKtI,SAC9C0I,cAAe,IAAIR,IAAI5H,oBAAqBR,QAAQyI,YAAavI,aAASmF,GAAW,GACzF,OAAO+C,IAAItG,SAAS8G,cAItB,SAAS7C,IAAI8C,QAASC,aAIpB,OAHKJ,WACHA,SAAWC,gBAEND,SAASlJ,KAAKiD,KAAMoG,QAASC,aActC,OAZA/C,IAAIgD,OAAS,SAASC,cAIpB,OAHKN,WACHA,SAAWC,gBAEND,SAASK,OAAOC,eAEzBjD,IAAIkD,OAAS,SAASnK,EAAGuJ,KAAMa,YAAaC,QAI1C,OAHKT,WACHA,SAAWC,gBAEND,SAASO,OAAOnK,EAAGuJ,KAAMa,YAAaC,SAExCpD,oDA5gBa,gCACiB,iDACvB,UAEVqD,MAAQ,GAAGA,MAEV,SAAS7I,YAygBhB,SAAS8I,UAAUlK,EAAGmK,GACpB,GAAInK,IAAMmK,EACR,OAAO,EAGT,GAAIhG,OAAAwC,QAAQ3G,IAAMmE,OAAAwC,QAAQwD,IAAMnK,EAAEM,SAAW6J,EAAE7J,OAAQ,CACrD,IAAK,IAAIX,EAAI,EAAGA,EAAIK,EAAEM,OAAQX,IAC5B,IAAKuK,UAAUlK,EAAEL,GAAIwK,EAAExK,IACrB,OAAO,EAGX,OAAO,GAIX,SAASyK,uBAAuBC,OAC9B,IAAKA,MAAMlF,KAAKI,MAAO,CACrB,IAAI+E,QAAUD,MAAMlF,KAGpBkF,MAAMlF,KAAO,CACXJ,KAAM,iBACNmE,MAAM,EACN1D,MAAO,EACPD,MAAO,CAAC+E,QAAQjF,SAAW,IAC3BA,SAAUiF,QAAQjF,SAAW,GAC7BqB,IAAK4D,QAAQ5D,MA5hBnBtF,SAASuC,UAAY,CACnB4G,SAAUnJ,SAEVoJ,OAAQ,SAASC,OACf,IAAI5D,IAAMvD,KAAKoH,QAAQpK,OACvB,GAAImK,MAAMC,QAAQpK,SAAWuG,IAC3B,OAAO,EAGT,IAAK,IAAIlH,EAAI,EAAGA,EAAIkH,IAAKlH,IAAK,CAC5B,IAAIgL,OAASrH,KAAKoH,QAAQ/K,GACtBiL,YAAcH,MAAMC,QAAQ/K,GAChC,GAAIgL,OAAOA,SAAWC,YAAYD,SAAWT,UAAUS,OAAOE,KAAMD,YAAYC,MAC9E,OAAO,EAMXhE,IAAMvD,KAAKwH,SAASxK,OACpB,IAASX,EAAI,EAAGA,EAAIkH,IAAKlH,IACvB,IAAK2D,KAAKwH,SAASnL,GAAG6K,OAAOC,MAAMK,SAASnL,IAC1C,OAAO,EAIX,OAAO,GAGToL,KAAM,EAENlK,QAAS,SAASmK,QAASjK,SACzBuC,KAAK2H,WAAa,GAClB3H,KAAKoH,QAAU,GACfpH,KAAKwH,SAAW,GAChBxH,KAAKvC,QAAUA,QACfuC,KAAK4H,aAAenK,QAAQmK,aAC5B5H,KAAK6H,SAAWpK,QAAQoK,SAExBpK,QAAQgJ,YAAchJ,QAAQgJ,aAAe,GAG7C,IAAIqB,aAAerK,QAAQqK,aAW3B,GAVArK,QAAQqK,aAAe,CACrBC,eAAiB,EACjBC,oBAAsB,EACtBvD,MAAQ,EACRwD,IAAM,EACNC,QAAU,EACVC,MAAQ,EACR1H,KAAO,EACP2H,QAAU,GAERN,aAIF,IAAK,IAAIO,SAAQP,aACb9H,KAAKvC,QAAQqK,aAAaO,OAAQP,aAAaO,OAIrD,OAAOrI,KAAKyC,OAAOiF,UAGrBY,eAAgB,SAASZ,SACvB,IACIa,QADgB,IAAIvI,KAAKiH,UACF1J,QAAQmK,QAAS1H,KAAKvC,SAC7CgK,KAAOzH,KAAKyH,OAOhB,OALAzH,KAAKwI,WAAaxI,KAAKwI,YAAcD,OAAOC,WAE5CxI,KAAKwH,SAASC,MAAQc,OACtBvI,KAAK8F,UAAY9F,KAAK8F,WAAayC,OAAOzC,UAEnC2B,MAGThF,OAAQ,SAASjB,MAEf,IAAKxB,KAAKwB,KAAKC,MACb,MAAM,IAAAV,YAAA,QAAc,iBAAmBS,KAAKC,KAAMD,MAGpDxB,KAAK2H,WAAWrD,QAAQ9C,MACxB,IAAI8B,IAAMtD,KAAKwB,KAAKC,MAAMD,MAE1B,OADAxB,KAAK2H,WAAWc,QACTnF,KAGToF,QAAS,SAAShB,SAChB1H,KAAKvC,QAAQgJ,YAAYnC,QAAQoD,QAAQjB,aAIzC,IAFA,IAAIkC,KAAOjB,QAAQiB,KACfC,WAAaD,KAAK3L,OACbX,EAAI,EAAGA,EAAIuM,WAAYvM,IAC9B2D,KAAKyC,OAAOkG,KAAKtM,IAQnB,OALA2D,KAAKvC,QAAQgJ,YAAYgC,QAEzBzI,KAAK6I,SAA0B,IAAfD,WAChB5I,KAAKyG,YAAciB,QAAQjB,YAAciB,QAAQjB,YAAYzJ,OAAS,EAE/DgD,MAGT8I,eAAgB,SAASC,OACvBjC,uBAAuBiC,OAEvB,IAAIrB,QAAUqB,MAAMrB,QAChBsB,QAAUD,MAAMC,QAEpBtB,QAAUA,SAAW1H,KAAKsI,eAAeZ,SACzCsB,QAAUA,SAAWhJ,KAAKsI,eAAeU,SAEzC,IAAIvH,KAAOzB,KAAKiJ,cAAcF,OAEjB,WAATtH,KACFzB,KAAKkJ,YAAYH,MAAOrB,QAASsB,SACf,WAATvH,MACTzB,KAAKmJ,YAAYJ,OAIjB/I,KAAKqH,OAAO,cAAeK,SAC3B1H,KAAKqH,OAAO,cAAe2B,SAC3BhJ,KAAKqH,OAAO,aACZrH,KAAKqH,OAAO,aAAc0B,MAAMlH,KAAKE,YAErC/B,KAAKoJ,eAAeL,MAAOrB,QAASsB,SAIpChJ,KAAKqH,OAAO,cAAeK,SAC3B1H,KAAKqH,OAAO,cAAe2B,SAC3BhJ,KAAKqH,OAAO,aACZrH,KAAKqH,OAAO,wBAGdrH,KAAKqH,OAAO,WAGdgC,eAAc,SAACC,WACb,IAAI5B,QAAU4B,UAAU5B,SAAW1H,KAAKsI,eAAegB,UAAU5B,SAC7DhG,OAAS1B,KAAKuJ,wBAAwBD,UAAW5B,aAAS9E,GAC1Df,KAAOyH,UAAUzH,KAErB7B,KAAKwJ,eAAgB,EACrBxJ,KAAKqH,OAAO,oBAAqB3F,OAAO1E,OAAQ6E,KAAKE,WAGvD0H,iBAAkB,SAASvI,SACzBlB,KAAKwI,YAAa,EAElB,IAAId,QAAUxG,QAAQwG,QAClBA,UACFA,QAAU1H,KAAKsI,eAAepH,QAAQwG,UAGxC,IAAIhG,OAASR,QAAQQ,OACrB,GAAoB,EAAhBA,OAAO1E,OACT,MAAM,IAAA+D,YAAA,QAAc,4CAA8CW,OAAO1E,OAAQkE,SACvEQ,OAAO1E,SACbgD,KAAKvC,QAAQiM,uBACf1J,KAAKqH,OAAO,cAAe,aAE3B3F,OAAO8B,KAAK,CAAC/B,KAAM,iBAAkBQ,MAAO,GAAIC,MAAO,KAI3D,IAAIyH,YAAczI,QAAQP,KAAKoB,SAC3B6H,UAAkC,kBAAtB1I,QAAQP,KAAKc,KACzBmI,WACF5J,KAAKyC,OAAOvB,QAAQP,MAGtBX,KAAKuJ,wBAAwBrI,QAASwG,aAAS9E,GAAW,GAE1D,IAAIiH,OAAS3I,QAAQ2I,QAAU,GAC3B7J,KAAKvC,QAAQqM,eAAiBD,SAChC7J,KAAKqH,OAAO,gBAAiBwC,QAC7BA,OAAS,IAGX7J,KAAKqH,OAAO,gBAAiBuC,UAAWD,YAAaE,QACrD7J,KAAKqH,OAAO,WAEd0C,sBAAuB,SAASC,cAC9BhK,KAAKyJ,iBAAiBO,eAGxBC,kBAAmB,SAASC,UAC1BlK,KAAKmK,cAAcD,UAEfA,SAASE,UAAYpK,KAAKvC,QAAQ4M,SACpCrK,KAAKqH,OAAO,iBAEZrH,KAAKqH,OAAO,WAGhBiD,UAAS,SAAChB,WACRtJ,KAAKqJ,eAAeC,YAItBiB,iBAAkB,SAASC,SACrBA,QAAQhF,OACVxF,KAAKqH,OAAO,gBAAiBmD,QAAQhF,QAIzCiF,iBAAkB,aAElBN,cAAe,SAASpD,OACtBD,uBAAuBC,OACvB,IAAItF,KAAOzB,KAAKiJ,cAAclC,OAEjB,WAATtF,KACFzB,KAAKmJ,YAAYpC,OACC,WAATtF,KACTzB,KAAKkJ,YAAYnC,OAEjB/G,KAAKoJ,eAAerC,QAGxBqC,eAAgB,SAASrC,MAAOW,QAASsB,SACvC,IAAInH,KAAOkF,MAAMlF,KACblB,KAAOkB,KAAKI,MAAM,GAClByI,QAAqB,MAAXhD,SAA8B,MAAXsB,QAEjChJ,KAAKqH,OAAO,aAAcxF,KAAKK,OAE/BlC,KAAKqH,OAAO,cAAeK,SAC3B1H,KAAKqH,OAAO,cAAe2B,SAE3BnH,KAAK8I,QAAS,EACd3K,KAAKyC,OAAOZ,MAEZ7B,KAAKqH,OAAO,kBAAmB1G,KAAM+J,UAGvCvB,YAAa,SAASpC,OACpB,IAAIlF,KAAOkF,MAAMlF,KACjBA,KAAK8I,QAAS,EACd3K,KAAKyC,OAAOZ,MACZ7B,KAAKqH,OAAO,0BAGd6B,YAAa,SAASnC,MAAOW,QAASsB,SACpC,IAAItH,OAAS1B,KAAKuJ,wBAAwBxC,MAAOW,QAASsB,SACtDnH,KAAOkF,MAAMlF,KACblB,KAAOkB,KAAKI,MAAM,GAEtB,GAAIjC,KAAKvC,QAAQqK,aAAanH,MAC5BX,KAAKqH,OAAO,oBAAqB3F,OAAO1E,OAAQ2D,UAC3C,CAAA,GAAIX,KAAKvC,QAAQmN,iBACtB,MAAM,IAAA7J,YAAA,QAAc,+DAAiEJ,KAAMoG,OAE3FlF,KAAK8I,QAAS,EACd9I,KAAKgJ,OAAQ,EAEb7K,KAAKyC,OAAOZ,MACZ7B,KAAKqH,OAAO,eAAgB3F,OAAO1E,OAAQ6E,KAAKE,SAAU+I,MAAA,QAAIjL,QAAQmC,SAASH,SAInFkJ,eAAgB,SAASlJ,MACvB7B,KAAKgL,SAASnJ,KAAKK,OACnBlC,KAAKqH,OAAO,aAAcxF,KAAKK,OAE/B,IAAIvB,KAAOkB,KAAKI,MAAM,GAClBgJ,OAASH,MAAA,QAAIjL,QAAQ+B,SAASC,MAC9BqJ,cAAgBrJ,KAAKK,QAAU+I,QAAUjL,KAAKmL,gBAAgBxK,MAE9DuK,aACFlL,KAAKqH,OAAO,mBAAoB6D,aAAcrJ,KAAKI,OACzCtB,KAGDkB,KAAK+D,MACd5F,KAAKvC,QAAQmI,MAAO,EACpB5F,KAAKqH,OAAO,aAAcxF,KAAKK,MAAOL,KAAKI,MAAOJ,KAAK8I,SAEvD3K,KAAKqH,OAAO,kBAAmBxF,KAAKI,MAAOJ,KAAKgJ,MAAOhJ,KAAK8I,OAAQM,QALpEjL,KAAKqH,OAAO,gBAShB+D,cAAe,SAASC,QACtBrL,KAAKqH,OAAO,aAAcgE,OAAO7F,QAGnC8F,cAAe,SAASC,QACtBvL,KAAKqH,OAAO,cAAekE,OAAO/F,QAGpCgG,eAAgB,SAASC,MACvBzL,KAAKqH,OAAO,cAAeoE,KAAKjG,QAGlCkG,iBAAkB,WAChB1L,KAAKqH,OAAO,cAAe,cAG7BsE,YAAa,WACX3L,KAAKqH,OAAO,cAAe,SAG7BuE,KAAM,SAASjK,MACb,IAAI0D,MAAQ1D,KAAK0D,MACbhJ,EAAI,EACJwP,EAAIxG,MAAMrI,OAId,IAFAgD,KAAKqH,OAAO,YAELhL,EAAIwP,EAAGxP,IACZ2D,KAAK8L,UAAUzG,MAAMhJ,GAAGmJ,OAE1B,KAAOnJ,KACL2D,KAAKqH,OAAO,eAAgBhC,MAAMhJ,GAAGiJ,KAEvCtF,KAAKqH,OAAO,YAIdA,OAAQ,SAAS1G,MACfX,KAAKoH,QAAQ5D,KAAK,CAAE6D,OAAQ1G,KAAM4G,KAAMZ,MAAM5J,KAAK8H,UAAW,GAAIzB,IAAKpD,KAAK2H,WAAW,GAAGvE,OAG5F4H,SAAU,SAAS9I,OACZA,QAILlC,KAAK8F,WAAY,IAGnBmD,cAAe,SAASlC,OACtB,IAAI8B,SAAWiC,MAAA,QAAIjL,QAAQmC,SAAS+E,MAAMlF,MAEtCkK,aAAelD,YAAc7I,KAAKmL,gBAAgBpE,MAAMlF,KAAKI,MAAM,IAInE+J,UAAYD,cAAgBjB,MAAA,QAAIjL,QAAQ0B,iBAAiBwF,OAKzDkF,YAAcF,eAAiBC,UAAYnD,UAI/C,GAAIoD,aAAeD,SAAU,CAC3B,IAAIE,OAAOnF,MAAMlF,KAAKI,MAAM,GACxBxE,QAAUuC,KAAKvC,QAEfA,QAAQqK,aAAaoE,QACvBF,UAAW,EACFvO,QAAQmN,mBACjBqB,YAAa,GAIjB,OAAID,SACK,SACEC,WACF,YAEA,UAIXE,WAAY,SAASzK,QACnB,IAAK,IAAIrF,EAAI,EAAGwP,EAAInK,OAAO1E,OAAQX,EAAIwP,EAAGxP,IACxC2D,KAAK8L,UAAUpK,OAAOrF,KAI1ByP,UAAW,SAASM,KAClB,IAAI5G,MAAqB,MAAb4G,IAAI5G,MAAgB4G,IAAI5G,MAAQ4G,IAAIrK,UAAY,GAE5D,GAAI/B,KAAK4H,aACHpC,MAAMN,UACRM,MAAQA,MACHN,QAAQ,eAAgB,IACxBA,QAAQ,MAAO,MAGlBkH,IAAIlK,OACNlC,KAAKgL,SAASoB,IAAIlK,OAEpBlC,KAAKqH,OAAO,aAAc+E,IAAIlK,OAAS,GACvClC,KAAKqH,OAAO,kBAAmB7B,MAAO4G,IAAI3K,MAEzB,kBAAb2K,IAAI3K,MAGNzB,KAAKyC,OAAO2J,SAET,CACL,GAAIpM,KAAK6H,SAAU,CACjB,IAAIsD,qBAAevI,EAInB,IAHIwJ,IAAInK,OAAU6I,MAAA,QAAIjL,QAAQ+B,SAASwK,MAASA,IAAIlK,QACjDiJ,gBAAkBnL,KAAKmL,gBAAgBiB,IAAInK,MAAM,KAEhDkJ,gBAAiB,CACnB,IAAIkB,gBAAkBD,IAAInK,MAAM0E,MAAM,GAAGzC,KAAK,KAC9ClE,KAAKqH,OAAO,SAAU,aAAc8D,gBAAiBkB,sBAErD7G,MAAQ4G,IAAIrK,UAAYyD,OACdN,UACRM,MAAQA,MACHN,QAAQ,gBAAiB,IACzBA,QAAQ,QAAS,IACjBA,QAAQ,OAAQ,KAGvBlF,KAAKqH,OAAO,SAAU+E,IAAI3K,KAAM+D,OAGpCxF,KAAKyC,OAAO2J,OAIhB7C,wBAAyB,SAASxC,MAAOW,QAASsB,QAASsD,WACzD,IAAI5K,OAASqF,MAAMrF,OAYnB,OAXA1B,KAAKmM,WAAWzK,QAEhB1B,KAAKqH,OAAO,cAAeK,SAC3B1H,KAAKqH,OAAO,cAAe2B,SAEvBjC,MAAMpF,KACR3B,KAAKyC,OAAOsE,MAAMpF,MAElB3B,KAAKqH,OAAO,YAAaiF,WAGpB5K,QAGTyJ,gBAAiB,SAASxK,MACxB,IAAK,IAAIuB,MAAQ,EAAGqB,IAAMvD,KAAKvC,QAAQgJ,YAAYzJ,OAAQkF,MAAQqB,IAAKrB,QAAS,CAC/E,IAAIuE,YAAczG,KAAKvC,QAAQgJ,YAAYvE,OACvCqK,MAAQ9F,aAAe5F,OAAA2L,QAAQ/F,YAAa9F,MAChD,GAAI8F,aAAwB,GAAT8F,MACjB,MAAO,CAACrK,MAAOqK,sJCjchB,SAAwB3I,OAAQvB,SACrCrC,KAAK4D,OAASA,OACd5D,KAAK4E,MAAQ,CACXf,KAAMxB,QAAQoK,WACd3I,OAAQzB,QAAQqK,cAElB1M,KAAK2M,IAAM,CACT9I,KAAMxB,QAAQuK,UACd9I,OAAQzB,QAAQwK,yBAIb,SAAYC,OACjB,MAAI,WAAWhL,KAAKgL,OACXA,MAAMC,UAAU,EAAGD,MAAM9P,OAAS,GAElC8P,0BAIJ,SAAoBE,KAAMC,OAC/B,MAAO,CACLD,KAAyB,MAAnBA,KAAKE,OAAO,GAClBD,MAA0C,MAAnCA,MAAMC,OAAOD,MAAMjQ,OAAS,0BAIhC,SAAsBmQ,SAC3B,OAAOA,QAAQjI,QAAQ,eAAgB,IACxBA,QAAQ,cAAe,yBAGjC,SAAqBU,KAAM3D,MAAOmB,KACvCA,IAAMpD,KAAKqC,QAAQe,KAMnB,IAJA,IAAIrB,SAAW6D,KAAO,IAAM,GACxBwH,IAAM,GACNlL,MAAQ,EAEH7F,EAAI,EAAGwP,EAAI5J,MAAMjF,OAAQX,EAAIwP,EAAGxP,IAAK,CAC5C,IAAIgR,KAAOpL,MAAM5F,GAAGgR,KAGhBC,UAAYrL,MAAM5F,GAAG0F,WAAasL,KAGtC,GAFAtL,WAAaE,MAAM5F,GAAGkR,WAAa,IAAMF,KAEpCC,WAAuB,OAATD,MAA0B,MAATA,MAAyB,SAATA,KAOlDD,IAAI5J,KAAK6J,UAP2D,CACpE,GAAiB,EAAbD,IAAIpQ,OACN,MAAM,IAAA+D,YAAA,QAAc,iBAAmBgB,SAAU,CAACqB,IAAAA,MAChC,OAATiK,MACTnL,SAON,MAAO,CACLT,KAAM,iBACNmE,KAAAA,KACA1D,MAAAA,MACAD,MAAOmL,IACPrL,SAAAA,SACAqB,IAAAA,8BAIG,SAAyBvB,KAAMH,OAAQC,KAAMqL,KAAMQ,MAAOnL,SAE/D,IAAIoL,WAAaT,KAAKE,OAAO,IAAMF,KAAKE,OAAO,GAC3C9C,QAAyB,MAAfqD,YAAqC,MAAfA,WAGpC,MAAO,CACLhM,KAFe,KAAKK,KAAKkL,MAEP,YAAc,oBAChCnL,KAAAA,KACAH,OAAAA,OACAC,KAAAA,KACAyI,QAAAA,QACAoD,MAAAA,MACApK,IAAKpD,KAAKqC,QAAQA,mCAIf,SAAyBqL,aAAcC,SAAUV,MAAO5K,SAC7DuL,cAAcF,aAAcT,OAE5B5K,QAAUrC,KAAKqC,QAAQA,SACvB,IAAIqF,QAAU,CACZjG,KAAM,UACNkH,KAAMgF,SACNH,MAAO,GACPpK,IAAKf,SAGP,MAAO,CACLZ,KAAM,iBACNI,KAAM6L,aAAa7L,KACnBH,OAAQgM,aAAahM,OACrBC,KAAM+L,aAAa/L,KACnB+F,QAAAA,QACAmG,UAAW,GACXC,aAAc,GACdC,WAAY,GACZ3K,IAAKf,+BAIF,SAAsB2L,UAAWtG,QAASuG,kBAAmBhB,MAAOiB,SAAU7L,SAC/E4K,OAASA,MAAMpL,MACjB+L,cAAcI,UAAWf,OAG3B,IAAI3D,UAAa,KAAKxH,KAAKkM,UAAUhB,MAErCtF,QAAQjB,YAAcuH,UAAUvH,YAEhC,IAAIuC,aAAOpG,EACPkL,kBAAYlL,EAEhB,GAAIqL,kBAAmB,CACrB,GAAI3E,UACF,MAAM,IAAAvI,YAAA,QAAc,wCAAyCkN,mBAG3DA,kBAAkBE,QACpBF,kBAAkBvG,QAAQiB,KAAK,GAAGoF,WAAad,MAAMO,OAGvDM,aAAeG,kBAAkBT,MACjCxE,QAAUiF,kBAAkBvG,QAG1BwG,WACFA,SAAWlF,QACXA,QAAUtB,QACVA,QAAUwG,UAGZ,MAAO,CACLzM,KAAM6H,UAAY,iBAAmB,iBACrCzH,KAAMmM,UAAUnM,KAChBH,OAAQsM,UAAUtM,OAClBC,KAAMqM,UAAUrM,KAChB+F,QAAAA,QACAsB,QAAAA,QACA6E,UAAWG,UAAUR,MACrBM,aAAAA,aACAC,WAAYd,OAASA,MAAMO,MAC3BpK,IAAKpD,KAAKqC,QAAQA,kCAIf,SAAwB+L,WAAYhL,KACzC,IAAKA,KAAOgL,WAAWpR,OAAQ,CAC7B,IAAMqR,SAAWD,WAAW,GAAGhL,IACzBkL,QAAUF,WAAWA,WAAWpR,OAAS,GAAGoG,IAG9CiL,UAAYC,UACdlL,IAAM,CACJQ,OAAQyK,SAASzK,OACjBgB,MAAO,CACLf,KAAMwK,SAASzJ,MAAMf,KACrBC,OAAQuK,SAASzJ,MAAMd,QAEzB6I,IAAK,CACH9I,KAAMyK,QAAQ3B,IAAI9I,KAClBC,OAAQwK,QAAQ3B,IAAI7I,UAM5B,MAAO,CACLrC,KAAM,UACNkH,KAAMyF,WACNZ,MAAO,GACPpK,IAAKA,kCAKF,SAA6B4J,KAAMtF,QAASuF,MAAO5K,SAGxD,OAFAuL,cAAcZ,KAAMC,OAEb,CACLxL,KAAM,wBACNd,KAAMqM,KAAKnL,KACXH,OAAQsL,KAAKtL,OACbC,KAAMqL,KAAKrL,KACX+F,QAAAA,QACAmG,UAAWb,KAAKQ,MAChBO,WAAYd,OAASA,MAAMO,MAC3BpK,IAAKpD,KAAKqC,QAAQA,sCA9MA,+EAEtB,SAASuL,cAAcZ,KAAMC,OAG3B,GAFAA,MAAQA,MAAMpL,KAAOoL,MAAMpL,KAAKE,SAAWkL,MAEvCD,KAAKnL,KAAKE,WAAakL,MAAO,CAChC,IAAIsB,UAAY,CAACnL,IAAK4J,KAAKnL,KAAKuB,KAEhC,MAAM,IAAArC,YAAA,QAAciM,KAAKnL,KAAKE,SAAW,kBAAoBkL,MAAOsB,+MCRpB,sDAC9B,gCACA,qDACF,eAEpB,SAASC,QAAQhJ,OACfxF,KAAKwF,MAAQA,MAGf,SAASzH,sBAETA,mBAAmBsC,UAAY,CAG7BoO,WAAY,SAASC,OAAQ/N,MAC3B,MAAa,gBAATA,KACK,CAAC,IAAK+N,OAAQ,0CAA6CA,OAAQ,2BAA4B,KAEpG3Q,mBAAmB4Q,8BAA8BhO,MAC5C,CAAC+N,OAAQ,IAAK/N,MAEd,CAAC+N,OAAQ,IAAKE,KAAKC,UAAUlO,MAAO,MAG/CmO,cAAe,SAASnO,MACtB,MAAO,CAACX,KAAK+O,UAAU,oBAAqB,aAAcpO,KAAM,OAGlEqO,aAAc,WACZ,IAAMC,SAAQC,MAAAC,kBAEd,MAAO,CAACF,SADSC,MAAAE,iBAAiBH,YAIpCI,eAAgB,SAASzL,OAAQ0L,SAAUC,UAOzC,OALK1O,OAAAwC,QAAQO,UACXA,OAAS,CAACA,SAEZA,OAAS5D,KAAK4D,OAAOH,KAAKG,OAAQ0L,UAE9BtP,KAAKgG,YAAY6C,SACZ,CAAC,UAAWjF,OAAQ,KAClB2L,SAIF,CAAC,aAAc3L,OAAQ,MAE9BA,OAAOyL,gBAAiB,EACjBzL,SAIX4L,iBAAkB,WAChB,OAAOxP,KAAKgF,aAAa,KAI3BzH,QAAS,SAASyI,YAAavI,QAAS2I,QAASqJ,UAC/CzP,KAAKgG,YAAcA,YACnBhG,KAAKvC,QAAUA,QACfuC,KAAK4H,aAAe5H,KAAKvC,QAAQmK,aACjC5H,KAAK6H,SAAW7H,KAAKvC,QAAQoK,SAC7B7H,KAAKrC,YAAc8R,SAEnBzP,KAAKW,KAAOX,KAAKgG,YAAYrF,KAC7BX,KAAK0P,UAAYtJ,QACjBpG,KAAKoG,QAAUA,SAAW,CACxBrG,WAAY,GACZ4P,SAAU,GACVC,aAAc,IAGhB5P,KAAK6P,WAEL7P,KAAK8P,UAAY,EACjB9P,KAAK+P,UAAY,GACjB/P,KAAKgQ,QAAU,GACfhQ,KAAKiQ,UAAY,CAAEC,KAAM,IACzBlQ,KAAKmQ,OAAS,GACdnQ,KAAKoQ,aAAe,GACpBpQ,KAAKqQ,YAAc,GACnBrQ,KAAKyG,YAAc,GAEnBzG,KAAKsQ,gBAAgBtK,YAAavI,SAElCuC,KAAK8F,UAAY9F,KAAK8F,WAAaE,YAAYF,WAAaE,YAAYwD,eAAiBxJ,KAAKvC,QAAQoI,OACtG7F,KAAKuQ,eAAiBvQ,KAAKuQ,gBAAkBvK,YAAYuK,eAEzD,IAAInJ,QAAUpB,YAAYoB,QACtBC,YAAMzE,EACNyL,cAAQzL,EACRvG,OAACuG,EACDiJ,OAACjJ,EAEL,IAAKvG,EAAI,EAAGwP,EAAIzE,QAAQpK,OAAQX,EAAIwP,EAAGxP,IACrCgL,OAASD,QAAQ/K,GAEjB2D,KAAK4D,OAAOe,gBAAkB0C,OAAOjE,IACrCiL,SAAWA,UAAYhH,OAAOjE,IAC9BpD,KAAKqH,OAAOA,QAAQmJ,MAAMxQ,KAAMqH,OAAOE,MAQzC,GAJAvH,KAAK4D,OAAOe,gBAAkB0J,SAC9BrO,KAAKyQ,WAAW,IAGZzQ,KAAK8P,WAAa9P,KAAKqQ,YAAYrT,QAAUgD,KAAKoQ,aAAapT,OACjE,MAAM,IAAA+D,YAAA,QAAc,gDAGjBf,KAAKD,WAAWsE,UAcnBrE,KAAKD,gBAAa6C,GAblB5C,KAAKwJ,eAAgB,EAErBxJ,KAAKD,WAAWoE,QAAQ,4CACxBnE,KAAKD,WAAWyD,KAAK,cAGnBxD,KAAKD,WADH0P,SACgBiB,SAASF,MAAMxQ,KAAM,CAAC,KAAM,QAAS,YAAa,SAAU,OAAQ,cAAe,SAAUA,KAAKD,WAAWwE,WAE/HvE,KAAKD,WAAWoE,QAAQ,yEACxBnE,KAAKD,WAAWyD,KAAK,OACHxD,KAAKD,WAAWwE,UAMtC,IAAI3D,GAAKZ,KAAK2Q,sBAAsBlB,UACpC,GAAKzP,KAAK0P,QAwDR,OAAO9O,GAvDP,IAAI0C,IAAM,CACR2D,SAAUjH,KAAKgP,eACf4B,KAAMhQ,IAGJZ,KAAKD,aACPuD,IAAIuN,OAAS7Q,KAAKD,WAClBuD,IAAIkG,eAAgB,gBAGOxJ,KAAKoG,QAA7BuJ,SAAQmB,SAARnB,SAAU5P,WAAU+Q,SAAV/Q,WACf,IAAK1D,EAAI,EAAGwP,EAAI8D,SAAS3S,OAAQX,EAAIwP,EAAGxP,IAClCsT,SAAStT,KACXiH,IAAIjH,GAAKsT,SAAStT,GACd0D,WAAW1D,KACbiH,IAAIjH,EAAI,MAAQ0D,WAAW1D,GAC3BiH,IAAIkG,eAAgB,IAqC1B,OAhCIxJ,KAAKgG,YAAYwC,aACnBlF,IAAIkF,YAAa,GAEfxI,KAAKvC,QAAQmI,OACftC,IAAIyN,SAAU,GAEZ/Q,KAAK8F,YACPxC,IAAIwC,WAAY,GAEd9F,KAAKuQ,iBACPjN,IAAIiN,gBAAiB,GAEnBvQ,KAAKvC,QAAQoI,SACfvC,IAAIuC,QAAS,GAGV4J,SAaHnM,IAAI0N,gBAAkBhR,KAAKvC,SAZ3B6F,IAAI2D,SAAW2H,KAAKC,UAAUvL,IAAI2D,UAElCjH,KAAK4D,OAAOe,gBAAkB,CAACC,MAAO,CAACf,KAAM,EAAGC,OAAQ,IACxDR,IAAMtD,KAAKmF,cAAc7B,KAErB7F,QAAQ8E,SACVe,IAAMA,IAAIc,sBAAsB,CAAC6M,KAAMxT,QAAQyT,YAC3CC,IAAM7N,IAAI6N,KAAO7N,IAAI6N,IAAIrQ,WAE7BwC,IAAMA,IAAIxC,YAMPwC,KAMXuM,SAAU,WAGR7P,KAAKoR,YAAc,EACnBpR,KAAK4D,OAAS,IAAAyN,UAAA,QAAYrR,KAAKvC,QAAQ8E,SACvCvC,KAAKD,WAAa,IAAAsR,UAAA,QAAYrR,KAAKvC,QAAQ8E,UAG7CoO,sBAAuB,SAASlB,UAC9B,IAAI6B,gBAAkB,GAElBC,OAASvR,KAAK+P,UAAUyB,OAAOxR,KAAKiQ,UAAUC,MAC9B,EAAhBqB,OAAOvU,SACTsU,iBAAmB,KAAOC,OAAOrN,KAAK,OASxC,IAAIuN,WAAa,EACjB,IAAK,IAAIC,SAAS1R,KAAKgQ,QAAS,CAC9B,IAAIxO,KAAOxB,KAAKgQ,QAAQ0B,OAEpB1R,KAAKgQ,QAAQzK,eAAemM,QAAUlQ,KAAKgG,UAAkC,EAAtBhG,KAAKmQ,iBAC9DL,iBAAmB,aAAeG,WAAc,IAAMC,MACtDlQ,KAAKgG,SAAS,GAAK,QAAUiK,YAIjC,IAAI/P,OAAS,CAAC,YAAa,SAAU,UAAW,WAAY,SAExD1B,KAAKuQ,gBAAkBvQ,KAAK8F,YAC9BpE,OAAO8B,KAAK,eAEVxD,KAAK8F,WACPpE,OAAO8B,KAAK,UAId,IAAII,OAAS5D,KAAK4R,YAAYN,iBAE9B,OAAI7B,UACF/N,OAAO8B,KAAKI,QAEL8M,SAASF,MAAMxQ,KAAM0B,SAErB1B,KAAK4D,OAAOH,KAAK,CAAC,YAAa/B,OAAOwC,KAAK,KAAM,UAAWN,OAAQ,OAG/EgO,YAAa,SAASN,iBACpB,IAAIzI,SAAW7I,KAAKgG,YAAY6C,SAC5BgJ,YAAc7R,KAAK8R,YACnBC,iBAAWnP,EAEXoP,gBAAUpP,EACVqP,iBAAWrP,EACXsP,eAAStP,EAkDb,OAjDA5C,KAAK4D,OAAOa,KAAK,SAACZ,MACZA,KAAKwL,gBACH4C,YACFpO,KAAKM,QAAQ,QAEb8N,YAAcpO,KAEhBqO,UAAYrO,OAERoO,cACGD,WAGHC,YAAY9N,QAAQ,cAFpB4N,aAAc,EAIhBG,UAAUjO,IAAI,KACdgO,YAAcC,eAAYtP,GAG5BoP,YAAa,EACRnJ,WACHgJ,YAAa,MAMfA,WACEI,aACFA,YAAY9N,QAAQ,WACpB+N,UAAUjO,IAAI,MACJ+N,YACVhS,KAAK4D,OAAOJ,KAAK,eAGnB8N,iBAAmB,eAAiBS,YAAc,GAAK/R,KAAKwP,oBAExDyC,aACFA,YAAY9N,QAAQ,oBACpB+N,UAAUjO,IAAI,MAEdjE,KAAK4D,OAAOJ,KAAK,mBAIjB8N,iBACFtR,KAAK4D,OAAOO,QAAQ,OAASmN,gBAAgBvE,UAAU,IAAMgF,YAAc,GAAK,QAG3E/R,KAAK4D,OAAOW,SAYrB4N,WAAY,SAASxR,MACnB,IAAIqH,mBAAqBhI,KAAK+O,UAAU,8BACpCrN,OAAS,CAAC1B,KAAKoS,YAAY,IAC/BpS,KAAKqS,gBAAgB1R,KAAM,EAAGe,QAE9B,IAAI4Q,UAAYtS,KAAKuS,WACrB7Q,OAAO8Q,OAAO,EAAG,EAAGF,WAEpBtS,KAAKwD,KAAKxD,KAAK4D,OAAOkB,aAAakD,mBAAoB,OAAQtG,UASjE+Q,oBAAqB,WAEnB,IAAIzK,mBAAqBhI,KAAK+O,UAAU,8BACpCrN,OAAS,CAAC1B,KAAKoS,YAAY,IAC/BpS,KAAKqS,gBAAgB,GAAI,EAAG3Q,QAAQ,GAEpC1B,KAAK0S,cAEL,IAAIC,QAAU3S,KAAK4S,WACnBlR,OAAO8Q,OAAO,EAAG,EAAGG,SAEpB3S,KAAKyQ,WAAW,CACZ,QAASzQ,KAAK6S,WAAY,OACxBF,QAAS,MAAO3S,KAAK4D,OAAOkB,aAAakD,mBAAoB,OAAQtG,QACvE,OASNoR,cAAe,SAAStI,SAClBxK,KAAK+S,eACPvI,QAAUxK,KAAK+S,eAAiBvI,QAEhCxK,KAAKgT,gBAAkBhT,KAAK4D,OAAOe,gBAGrC3E,KAAK+S,eAAiBvI,SAYxByI,OAAQ,WACN,GAAIjT,KAAKkT,WACPlT,KAAKmT,aAAa,SAACR,eAAY,CAAC,cAAeA,QAAS,WAExD3S,KAAKyQ,WAAWzQ,KAAKqP,eAAerP,KAAKuS,iBACpC,CACL,IAAIa,MAAQpT,KAAKuS,WACjBvS,KAAKyQ,WAAW,CAAC,OAAQ2C,MAAO,eAAgBpT,KAAKqP,eAAe+D,WAAOxQ,GAAW,GAAO,OACzF5C,KAAKgG,YAAY6C,UACnB7I,KAAKyQ,WAAW,CAAC,UAAWzQ,KAAKqP,eAAe,UAAMzM,GAAW,GAAO,SAW9EyQ,cAAe,WACbrT,KAAKyQ,WAAWzQ,KAAKqP,eACjB,CAACrP,KAAK+O,UAAU,8BAA+B,IAAK/O,KAAKuS,WAAY,QAU3Ee,WAAY,SAASpR,OACnBlC,KAAKoR,YAAclP,OASrBqR,YAAa,WACXvT,KAAKwT,iBAAiBxT,KAAKoS,YAAYpS,KAAKoR,eAU9CqC,gBAAiB,SAASxR,MAAO4I,MAAOF,OAAQM,QAC9C,IAAI5O,EAAI,EAEH4O,SAAUjL,KAAKvC,QAAQoI,QAAW7F,KAAKoR,YAK1CpR,KAAKuT,cAFLvT,KAAKwD,KAAKxD,KAAK8O,cAAc7M,MAAM5F,OAKrC2D,KAAK0T,YAAY,UAAWzR,MAAO5F,EAAGwO,MAAOF,SAU/CgJ,iBAAkB,SAASzI,aAAcjJ,OACvCjC,KAAKuQ,gBAAiB,EAEtBvQ,KAAKwD,KAAK,CAAC,eAAgB0H,aAAa,GAAI,KAAMA,aAAa,GAAI,MACnElL,KAAK0T,YAAY,UAAWzR,MAAO,IASrC2R,WAAY,SAAS1R,MAAOD,MAAO0I,QAC5BzI,MAGHlC,KAAKwT,iBAAiB,wBAA0BtR,MAAQ,KAFxDlC,KAAKwT,iBAAiB,QAKxBxT,KAAK0T,YAAY,OAAQzR,MAAO,GAAG,EAAM0I,SAG3C+I,YAAa,SAASjS,KAAMQ,MAAO5F,EAAGwO,MAAOF,uBAC3C,GAAI3K,KAAKvC,QAAQkN,QAAU3K,KAAKvC,QAAQoW,cACtC7T,KAAKwD,KA0oBX,SAAsBsQ,gBAAiB7M,SAAUhF,MAAOR,MACtD,IAAIsS,MAAQ9M,SAASsL,WACjBlW,EAAI,EACJkH,IAAMtB,MAAMjF,OACZ8W,iBACFvQ,MAGF,KAAOlH,EAAIkH,IAAKlH,IACd0X,MAAQ9M,SAASwH,WAAWsF,MAAO9R,MAAM5F,GAAIoF,MAG/C,OAAIqS,gBACK,CAAC7M,SAAS8H,UAAU,oBAAqB,IAAKgF,MAAO,KAAM9M,SAASjC,aAAa/C,MAAM5F,IAAK,KAE5F0X,MAzpBKC,CAAahU,KAAKvC,QAAQkN,QAAUA,OAAQ3K,KAAMiC,MAAOR,YAKrE,IADA,IAAI8B,IAAMtB,MAAMjF,OACTX,EAAIkH,IAAKlH,IAEd2D,KAAKmT,aAAa,SAACR,SACjB,IAAIvK,OAAS6L,MAAKxF,WAAWkE,QAAS1Q,MAAM5F,GAAIoF,MAGhD,OAAKoJ,MAII,CAAC,OAAQzC,QAHT,CAAC,cAAeA,OAAQ,MAAOuK,YAiB9CuB,sBAAuB,WACrBlU,KAAKwD,KAAK,CAACxD,KAAK+O,UAAU,oBAAqB,IAAK/O,KAAKuS,WAAY,KAAMvS,KAAKoS,YAAY,GAAI,OAWlG+B,gBAAiB,SAAS9I,OAAQ5J,MAChCzB,KAAKuT,cACLvT,KAAKoU,WAAW3S,MAIH,kBAATA,OACoB,iBAAX4J,OACTrL,KAAKoU,WAAW/I,QAEhBrL,KAAKwT,iBAAiBnI,UAK5BgJ,UAAW,SAAS/H,WACdtM,KAAK6H,UACP7H,KAAKwD,KAAK,MAERxD,KAAK4H,eACP5H,KAAKwD,KAAK,MACVxD,KAAKwD,KAAK,OAEZxD,KAAKwT,iBAAiBlH,UAAY,YAAc,OAElDgI,SAAU,WACJtU,KAAK2B,MACP3B,KAAKmQ,OAAO3M,KAAKxD,KAAK2B,MAExB3B,KAAK2B,KAAO,CAAC4S,OAAQ,GAAIC,MAAO,GAAIC,SAAU,GAAIC,IAAK,KAEzDC,QAAS,WACP,IAAIhT,KAAO3B,KAAK2B,KAChB3B,KAAK2B,KAAO3B,KAAKmQ,OAAOyE,MAEpB5U,KAAK6H,UACP7H,KAAKwD,KAAKxD,KAAKmF,cAAcxD,KAAK+S,MAEhC1U,KAAK4H,eACP5H,KAAKwD,KAAKxD,KAAKmF,cAAcxD,KAAK8S,WAClCzU,KAAKwD,KAAKxD,KAAKmF,cAAcxD,KAAK6S,SAGpCxU,KAAKwD,KAAKxD,KAAKmF,cAAcxD,KAAK4S,UASpCH,WAAY,SAAS/I,QACnBrL,KAAKwT,iBAAiBxT,KAAKgF,aAAaqG,UAW1CwJ,YAAa,SAASrP,OACpBxF,KAAKwT,iBAAiBhO,QAWxBsP,YAAa,SAASrN,MACR,MAARA,KACFzH,KAAKwT,iBAAiBxT,KAAK+U,kBAAkBtN,OAE7CzH,KAAKwT,iBAAiB,OAW1BpS,kBAAiB,SAAC4T,UAAWrU,MAC3B,IAAIsU,eAAiBjV,KAAKyO,WAAW,aAAc9N,KAAM,aACrDlD,QAAUuC,KAAKqS,gBAAgB1R,KAAMqU,WAEzChV,KAAKD,WAAWyD,KAAK,CACnB,QACAxD,KAAKD,WAAW+E,aAAamQ,eAAgB,GAAI,CAAC,KAAM,QAAS,YAAaxX,UAC9E,aAaJyX,aAAc,SAASF,UAAWrU,KAAMkI,UACtC,IAAIsM,UAAYnV,KAAKuS,WACjB6C,OAASpV,KAAKqV,YAAYL,UAAWrU,MACrC2U,OAASzM,SAAW,CAACuM,OAAOzU,KAAM,QAAU,GAE5CyH,OAAS,CAAC,KAAKoJ,OAAO8D,OAAQH,WAC7BnV,KAAKvC,QAAQkN,QAChBvC,OAAO5E,KAAK,OAAQxD,KAAK+O,UAAU,0BAErC3G,OAAO5E,KAAK,KAEZxD,KAAKwD,KAAKxD,KAAK4D,OAAOkB,aAAasD,OAAQ,OAAQgN,OAAOG,cAU5DC,kBAAmB,SAASR,UAAWrU,MACrC,IAAIyU,OAASpV,KAAKqV,YAAYL,UAAWrU,MACzCX,KAAKwD,KAAKxD,KAAK4D,OAAOkB,aAAasQ,OAAOzU,KAAM,OAAQyU,OAAOG,cAejEE,gBAAiB,SAAS9U,KAAM+U,YAC9B1V,KAAK2V,YAAY,UAEjB,IAAIR,UAAYnV,KAAKuS,WAErBvS,KAAKqU,YACL,IAAIe,OAASpV,KAAKqV,YAAY,EAAG1U,KAAM+U,YAInCtN,OAAS,CAAC,IAAK,aAFFpI,KAAK6S,WAAa7S,KAAKyO,WAAW,UAAW9N,KAAM,UAEvB,OAAQwU,UAAW,KAC3DnV,KAAKvC,QAAQkN,SAChBvC,OAAO,GAAK,aACZA,OAAO5E,KACL,uBACAxD,KAAK+O,UAAU,2BAInB/O,KAAKwD,KAAK,CACN,IAAK4E,OACJgN,OAAOQ,WAAa,CAAC,MAAOR,OAAOQ,YAAc,GAAK,KACvD,sBAAuB5V,KAAK+O,UAAU,cAAe,MACrD/O,KAAK4D,OAAOkB,aAAa,SAAU,OAAQsQ,OAAOG,YAAa,iBAWrEM,cAAe,SAASjM,UAAWjJ,KAAMkJ,QACvC,IAAInI,OAAS,GACTjE,QAAUuC,KAAK8V,YAAYnV,KAAM,EAAGe,QAEpCkI,YACFjJ,KAAOX,KAAKuS,kBACL9U,QAAQkD,MAGbkJ,SACFpM,QAAQoM,OAAS+E,KAAKC,UAAUhF,SAElCpM,QAAQoC,QAAU,UAClBpC,QAAQqC,SAAW,WACnBrC,QAAQsC,WAAa,uBAEhB6J,UAGHlI,OAAO4C,QAAQ3D,MAFfe,OAAO4C,QAAQtE,KAAKyO,WAAW,WAAY9N,KAAM,YAK/CX,KAAKvC,QAAQoI,SACfpI,QAAQiJ,OAAS,UAEnBjJ,QAAUuC,KAAKmF,cAAc1H,SAC7BiE,OAAO8B,KAAK/F,SAEZuC,KAAKwD,KAAKxD,KAAK4D,OAAOkB,aAAa,0BAA2B,GAAIpD,UASpEqU,aAAc,SAASzQ,KACrB,IAAIE,MAAQxF,KAAKuS,WACbnM,aAAOxD,EACPnB,UAAImB,EACJoT,QAAEpT,EAEF5C,KAAK6H,WACPmO,GAAKhW,KAAKuS,YAERvS,KAAK4H,eACPnG,KAAOzB,KAAKuS,WACZnM,QAAUpG,KAAKuS,YAGjB,IAAI5Q,KAAO3B,KAAK2B,KACZyE,UACFzE,KAAK8S,SAASnP,KAAOc,SAEnB3E,OACFE,KAAK6S,MAAMlP,KAAO7D,MAEhBuU,KACFrU,KAAK+S,IAAIpP,KAAO0Q,IAElBrU,KAAK4S,OAAOjP,KAAOE,OAGrByQ,OAAQ,SAASxU,KAAMd,KAAMuV,OACd,eAATzU,KACFzB,KAAKwT,iBACD,eAAiB7S,KAAK,GAAK,UAAYA,KAAK,GAAK,KAC9CuV,MAAQ,MAAQtH,KAAKC,UAAU,IAAMqH,OAAS,KACnC,mBAATzU,KACTzB,KAAKoU,WAAWzT,MACE,kBAATc,KACTzB,KAAKwT,iBAAiB,QAEtBxT,KAAKwT,iBAAiB,SAM1BvM,SAAUlJ,mBAEVuS,gBAAiB,SAAStK,YAAavI,SAGrC,IAFA,IAAI+J,SAAWxB,YAAYwB,SAAU0O,WAAKtT,EAAEqE,cAAQrE,EAE3CvG,EAAI,EAAGwP,EAAIrE,SAASxK,OAAQX,EAAIwP,EAAGxP,IAAK,CAC/C6Z,MAAQ1O,SAASnL,GACjB4K,SAAW,IAAIjH,KAAKiH,SAEpB,IAAIkP,SAAWnW,KAAKoW,qBAAqBF,OAEzC,GAAgB,MAAZC,SAAkB,CACpBnW,KAAKoG,QAAQuJ,SAASnM,KAAK,IAC3B,IAAI6S,MAAQrW,KAAKoG,QAAQuJ,SAAS3S,OAClCkZ,MAAMG,MAAQA,MACdH,MAAMvV,KAAO,UAAY0V,MACzBrW,KAAKoG,QAAQuJ,SAAS0G,OAASpP,SAAS1J,QAAQ2Y,MAAOzY,QAASuC,KAAKoG,SAAUpG,KAAKrC,YACpFqC,KAAKoG,QAAQrG,WAAWsW,OAASpP,SAASlH,WAC1CC,KAAKoG,QAAQwJ,aAAayG,OAASH,MAEnClW,KAAK8F,UAAY9F,KAAK8F,WAAamB,SAASnB,UAC5C9F,KAAKuQ,eAAiBvQ,KAAKuQ,gBAAkBtJ,SAASsJ,eACtD2F,MAAMpQ,UAAY9F,KAAK8F,UACvBoQ,MAAM3F,eAAiBvQ,KAAKuQ,oBAE5B2F,MAAMG,MAAQF,SAASE,MACvBH,MAAMvV,KAAO,UAAYwV,SAASE,MAElCrW,KAAK8F,UAAY9F,KAAK8F,WAAaqQ,SAASrQ,UAC5C9F,KAAKuQ,eAAiBvQ,KAAKuQ,gBAAkB4F,SAAS5F,iBAI5D6F,qBAAsB,SAASF,OAC7B,IAAK,IAAI7Z,EAAI,EAAGkH,IAAMvD,KAAKoG,QAAQwJ,aAAa5S,OAAQX,EAAIkH,IAAKlH,IAAK,CACpE,IAAI2J,YAAchG,KAAKoG,QAAQwJ,aAAavT,GAC5C,GAAI2J,aAAeA,YAAYkB,OAAOgP,OACpC,OAAOlQ,cAKb+O,kBAAmB,SAAStN,MAC1B,IAAIyO,MAAQlW,KAAKgG,YAAYwB,SAASC,MAClC6O,cAAgB,CAACJ,MAAMG,MAAO,OAAQH,MAAMzP,aAShD,OAPIzG,KAAKuQ,gBAAkBvQ,KAAK8F,YAC9BwQ,cAAc9S,KAAK,eAEjBxD,KAAK8F,WACPwQ,cAAc9S,KAAK,UAGd,qBAAuB8S,cAAcpS,KAAK,MAAQ,KAG3DyR,YAAa,SAAShV,MACfX,KAAKiQ,UAAUtP,QAClBX,KAAKiQ,UAAUtP,OAAQ,EACvBX,KAAKiQ,UAAUC,KAAK1M,KAAK7C,QAI7B6C,KAAM,SAAS+S,MAMb,OALMA,gBAAgB/H,UACpB+H,KAAOvW,KAAK4D,OAAOH,KAAK8S,OAG1BvW,KAAKqQ,YAAY7M,KAAK+S,MACfA,MAGT/C,iBAAkB,SAASgD,MACzBxW,KAAKwD,KAAK,IAAIgL,QAAQgI,QAGxB/F,WAAY,SAAS7M,QACf5D,KAAK+S,iBACP/S,KAAK4D,OAAOJ,KACRxD,KAAKqP,eAAerP,KAAK4D,OAAOoB,aAAahF,KAAK+S,gBAAiB/S,KAAKgT,kBAC5EhT,KAAK+S,oBAAiBnQ,GAGpBgB,QACF5D,KAAK4D,OAAOJ,KAAKI,SAIrBuP,aAAc,SAASsD,UACrB,IAAIC,OAAS,CAAC,KACV3C,WAAKnR,EACL+T,kBAAY/T,EACZgU,iBAAWhU,EAGf,IAAK5C,KAAKkT,WACR,MAAM,IAAAnS,YAAA,QAAc,8BAItB,IAAI8V,IAAM7W,KAAKuS,UAAS,GAExB,GAAIsE,eAAerI,QAGjBkI,OAAS,CAAC,IADV3C,MAAQ,CAAC8C,IAAIrR,QAEboR,aAAc,MACT,CAELD,cAAe,EACf,IAAItO,MAAOrI,KAAK8W,YAEhBJ,OAAS,CAAC,KAAM1W,KAAKwD,KAAK6E,OAAO,MAAOwO,IAAK,KAC7C9C,MAAQ/T,KAAK4S,WAGf,IAAI4D,KAAOC,SAAS1Z,KAAKiD,KAAM+T,OAE1B6C,aACH5W,KAAKuS,WAEHoE,cACF3W,KAAK8P,YAEP9P,KAAKwD,KAAKkT,OAAOlF,OAAOgF,KAAM,OAGhCM,UAAW,WAGT,OAFA9W,KAAK8P,YACD9P,KAAK8P,UAAY9P,KAAK+P,UAAU/S,QAAUgD,KAAK+P,UAAUvM,KAAK,QAAUxD,KAAK8P,WAC1E9P,KAAK+W,gBAEdA,aAAc,WACZ,MAAO,QAAU/W,KAAK8P,WAExB4C,YAAa,WACX,IAAIrC,YAAcrQ,KAAKqQ,YACvBrQ,KAAKqQ,YAAc,GACnB,IAAK,IAAIhU,EAAI,EAAGkH,IAAM8M,YAAYrT,OAAQX,EAAIkH,IAAKlH,IAAK,CACtD,IAAI2a,MAAQ3G,YAAYhU,GAExB,GAAI2a,iBAAiBxI,QACnBxO,KAAKoQ,aAAa5M,KAAKwT,WAClB,CACL,IAAIjD,MAAQ/T,KAAK8W,YACjB9W,KAAKyQ,WAAW,CAACsD,MAAO,MAAOiD,MAAO,MACtChX,KAAKoQ,aAAa5M,KAAKuQ,UAI7Bb,SAAU,WACR,OAAOlT,KAAKqQ,YAAYrT,QAG1BuV,SAAU,SAAS0E,SACjB,IAAIC,OAASlX,KAAKkT,WACdsD,MAAQU,OAASlX,KAAKqQ,YAAcrQ,KAAKoQ,cAAcwE,MAE3D,IAAKqC,SAAYT,gBAAgBhI,QAC/B,OAAOgI,KAAKhR,MAEZ,IAAK0R,OAAQ,CAEX,IAAKlX,KAAK8P,UACR,MAAM,IAAA/O,YAAA,QAAc,qBAEtBf,KAAK8P,YAEP,OAAO0G,MAIX5D,SAAU,WACR,IAAImB,MAAS/T,KAAKkT,WAAalT,KAAKqQ,YAAcrQ,KAAKoQ,aACnDoG,KAAOzC,MAAMA,MAAM/W,OAAS,GAGhC,OAAIwZ,gBAAgBhI,QACXgI,KAAKhR,MAELgR,MAIXpE,YAAa,SAAShM,SACpB,OAAIpG,KAAK8F,WAAaM,QACb,UAAYA,QAAU,IAEtB,QAAUA,SAIrBpB,aAAc,SAASC,KACrB,OAAOjF,KAAK4D,OAAOoB,aAAaC,MAGlCE,cAAe,SAASC,KACtB,OAAOpF,KAAK4D,OAAOuB,cAAcC,MAGnC2J,UAAW,SAASpO,MAClB,IAAI2C,IAAMtD,KAAKgQ,QAAQrP,MACvB,OAAI2C,IACFA,IAAIqO,mBAINrO,IAAMtD,KAAKgQ,QAAQrP,MAAQX,KAAK4D,OAAOH,KAAK9C,OACxCoO,WAAY,EAChBzL,IAAIqO,eAAiB,GALZrO,KAUX+R,YAAa,SAASL,UAAWrU,KAAMwW,aACrC,IAAIzV,OAAS,GAKb,MAAO,CACLA,OAAQA,OACRkU,WANe5V,KAAKqS,gBAAgB1R,KAAMqU,UAAWtT,OAAQyV,aAO7DxW,KANgBX,KAAKyO,WAAW,UAAW9N,KAAM,UAOjD4U,WAAY,CANIvV,KAAK+O,UAAa/O,KAAKoS,YAAY,GAAE,cAAcpS,KAAKoS,YAAY,GAAE,qCAM5DZ,OAAO9P,UAIrCoU,YAAa,SAASV,OAAQJ,UAAWtT,QACvC,IAAIjE,QAAU,GACVgX,SAAW,GACXD,MAAQ,GACRE,IAAM,GACN0C,YAAc1V,OACd6K,WAAK3J,EAELwU,aACF1V,OAAS,IAGXjE,QAAQkD,KAAOX,KAAKgF,aAAaoQ,QACjC3X,QAAQkE,KAAO3B,KAAKuS,WAEhBvS,KAAK6H,WACPpK,QAAQ4Z,QAAUrX,KAAKuS,YAErBvS,KAAK4H,eACPnK,QAAQ6Z,UAAYtX,KAAKuS,WACzB9U,QAAQ8Z,aAAevX,KAAKuS,YAG9B,IAAIvJ,QAAUhJ,KAAKuS,WACf7K,QAAU1H,KAAKuS,YAIf7K,SAAWsB,WACbvL,QAAQmD,GAAK8G,SAAW,iBACxBjK,QAAQuL,QAAUA,SAAW,kBAM/B,IADA,IAAI3M,EAAI2Y,UACD3Y,KACLkQ,MAAQvM,KAAKuS,WACb7Q,OAAOrF,GAAKkQ,MAERvM,KAAK6H,WACP6M,IAAIrY,GAAK2D,KAAKuS,YAEZvS,KAAK4H,eACP4M,MAAMnY,GAAK2D,KAAKuS,WAChBkC,SAASpY,GAAK2D,KAAKuS,YAsBvB,OAlBI6E,aACF3Z,QAAQ8J,KAAOvH,KAAK4D,OAAO8B,cAAchE,SAGvC1B,KAAK6H,WACPpK,QAAQiX,IAAM1U,KAAK4D,OAAO8B,cAAcgP,MAEtC1U,KAAK4H,eACPnK,QAAQ+W,MAAQxU,KAAK4D,OAAO8B,cAAc8O,OAC1C/W,QAAQgX,SAAWzU,KAAK4D,OAAO8B,cAAc+O,WAG3CzU,KAAKvC,QAAQmI,OACfnI,QAAQmI,KAAO,QAEb5F,KAAKuQ,iBACP9S,QAAQgJ,YAAc,eAEjBhJ,SAGT4U,gBAAiB,SAAS+C,OAAQJ,UAAWtT,OAAQiU,aACnD,IAAIlY,QAAUuC,KAAK8V,YAAYV,OAAQJ,UAAWtT,QAElD,OADAjE,QAAUuC,KAAKmF,cAAc1H,SACzBkY,aACF3V,KAAK2V,YAAY,WACjBjU,OAAO8B,KAAK,WACL,CAAC,WAAY/F,UACXiE,QACTA,OAAO8B,KAAK/F,SACL,IAEAA,UAMb,WAsBE,IArBA,IAAM+Z,cAAgB,wZAiBpBC,MAAM,KAEFC,cAAgB3Z,mBAAmB4Z,eAAiB,GAEjDtb,EAAI,EAAGwP,EAAI2L,cAAcxa,OAAQX,EAAIwP,EAAGxP,IAC/Cqb,cAAcF,cAAcnb,KAAM,EAvBtC,GA2BA0B,mBAAmB4Q,8BAAgC,SAAShO,MAC1D,OAAQ5C,mBAAmB4Z,eAAehX,OAAS,6BAA+BmB,KAAKnB,uBAsB1E5C,yLCjnCf,IAAI6Z,WAAa,WACjB,IAAIzZ,OAAS,CAAC0Z,MAAO,aACrBzV,GAAI,GACJ0V,SAAU,CAACC,MAAQ,EAAEC,KAAO,EAAEtQ,QAAU,EAAEuQ,IAAM,EAAEC,oBAAsB,EAAEC,UAAY,EAAEjO,SAAW,EAAEnB,MAAQ,EAAEqP,SAAW,GAAGlX,QAAU,GAAG8I,aAAe,GAAGQ,QAAU,GAAG6N,QAAU,GAAGC,QAAU,GAAG5K,aAAe,GAAG6K,0BAA4B,GAAGC,cAAgB,GAAGC,eAAiB,GAAGC,WAAa,GAAGC,yBAA2B,GAAGC,qBAAuB,GAAGC,gBAAkB,GAAG7K,UAAY,GAAG8K,cAAgB,GAAGC,WAAa,GAAGC,YAAc,GAAGC,cAAgB,GAAGC,WAAa,GAAGC,sBAAwB,GAAGC,kBAAoB,GAAGC,kBAAoB,GAAGC,MAAQ,GAAGC,aAAe,GAAGC,wBAA0B,GAAGC,oBAAsB,GAAGC,oBAAsB,GAAGC,iBAAmB,GAAGC,mBAAqB,GAAGC,6BAA+B,GAAGC,yBAA2B,GAAGC,yBAA2B,GAAG9L,kBAAoB,GAAG+L,QAAU,GAAGC,aAAe,GAAGC,qBAAuB,GAAGC,cAAgB,GAAGC,KAAO,GAAGC,qBAAuB,GAAGC,iBAAmB,GAAGC,eAAiB,GAAGC,qBAAuB,GAAGC,iBAAmB,GAAGC,gBAAkB,GAAGC,aAAe,GAAGhR,YAAc,GAAGiR,oBAAsB,GAAGC,gBAAkB,GAAGC,iBAAmB,GAAGC,mBAAqB,GAAGC,6BAA+B,GAAGC,yBAA2B,GAAG1O,MAAQ,GAAGxF,MAAQ,GAAGmU,WAAa,GAAGC,kBAAoB,GAAGC,cAAgB,GAAGC,YAAc,GAAG1Z,KAAO,GAAG2Z,sBAAwB,GAAGC,YAAc,GAAGC,GAAK,GAAGC,OAAS,GAAGhV,YAAc,GAAGiV,kBAAoB,GAAGC,6BAA+B,GAAGC,mBAAqB,GAAG/Z,KAAO,GAAGga,SAAW,GAAGC,OAAS,GAAGC,OAAS,GAAGC,QAAU,GAAGC,UAAY,GAAGC,KAAO,GAAGC,KAAO,GAAGC,aAAe,GAAGC,IAAM,GAAGC,QAAU,EAAEC,KAAO,GAC/mDC,WAAY,CAACjd,EAAE,QAAQG,EAAE,MAAM+c,GAAG,UAAUC,GAAG,UAAUC,GAAG,gBAAgBC,GAAG,iBAAiBC,GAAG,kBAAkBC,GAAG,aAAaC,GAAG,QAAQC,GAAG,eAAeC,GAAG,qBAAqBC,GAAG,UAAUC,GAAG,gBAAgBC,GAAG,OAAOC,GAAG,iBAAiBC,GAAG,kBAAkBC,GAAG,eAAeC,GAAG,qBAAqBC,GAAG,aAAaC,GAAG,cAAcC,GAAG,KAAKC,GAAG,SAASC,GAAG,oBAAoBC,GAAG,qBAAqBC,GAAG,SAASC,GAAG,SAASC,GAAG,UAAUC,GAAG,YAAYC,GAAG,OAAOC,GAAG,OAAOC,GAAG,OACteC,aAAclsBC,cAAe,SAAmBC,OAAOC,OAAOC,SAAStc,GAAGuc,QAAQC,GAAGC,IAGvE,IAAIC,GAAKF,GAAG5hB,OAAS,EACrB,OAAQ2hB,SACR,KAAK,EAAG,OAAOC,GAAGE,GAAG,GACf,KACD,EAAE9e,KAAK+e,EAAI3c,GAAG4c,eAAeJ,GAAGE,KACrC,MAAM,KACD,EACC,KACD,EACC,KACD,EACC,KACD,EACC,KACD,EACC,KACD,EAAE9e,KAAK+e,EAAIH,GAAGE,IACnB,MAAM,KACD,EACD9e,KAAK+e,EAAI,CACPtd,KAAM,mBACN+D,MAAOpD,GAAG6c,aAAaL,GAAGE,KAC1BtR,MAAOpL,GAAG8c,WAAWN,GAAGE,IAAKF,GAAGE,KAChC1b,IAAKhB,GAAGC,QAAQrC,KAAK6e,KAG3B,MAAM,KACD,GACD7e,KAAK+e,EAAI,CACPtd,KAAM,mBACNM,SAAU6c,GAAGE,IACbtZ,MAAOoZ,GAAGE,IACV1b,IAAKhB,GAAGC,QAAQrC,KAAK6e,KAG3B,MAAM,KACD,GAAG7e,KAAK+e,EAAI3c,GAAG+c,gBAAgBP,GAAGE,GAAG,GAAIF,GAAGE,GAAG,GAAIF,GAAGE,IAAK9e,KAAK6e,IACrE,MAAM,KACD,GAAG7e,KAAK+e,EAAI,CAAEld,KAAM+c,GAAGE,GAAG,GAAIpd,OAAQkd,GAAGE,GAAG,GAAInd,KAAMid,GAAGE,GAAG,IACjE,MAAM,KACD,GAAG9e,KAAK+e,EAAI3c,GAAGgd,aAAaR,GAAGE,GAAG,GAAIF,GAAGE,GAAG,GAAIF,GAAGE,GAAG,GAAIF,GAAGE,KAAK,EAAO9e,KAAK6e,IACnF,MAAM,KACD,GAAG7e,KAAK+e,EAAI3c,GAAGgd,aAAaR,GAAGE,GAAG,GAAIF,GAAGE,GAAG,GAAIF,GAAGE,GAAG,GAAIF,GAAGE,KAAK,EAAM9e,KAAK6e,IAClF,MAAM,KACD,GAAG7e,KAAK+e,EAAI,CAAE/R,KAAM4R,GAAGE,GAAG,GAAIjd,KAAM+c,GAAGE,GAAG,GAAIpd,OAAQkd,GAAGE,GAAG,GAAInd,KAAMid,GAAGE,GAAG,GAAIrY,YAAamY,GAAGE,GAAG,GAAItR,MAAOpL,GAAG8c,WAAWN,GAAGE,GAAG,GAAIF,GAAGE,MAC9I,MAAM,KACD,GACC,KACD,GAAG9e,KAAK+e,EAAI,CAAEld,KAAM+c,GAAGE,GAAG,GAAIpd,OAAQkd,GAAGE,GAAG,GAAInd,KAAMid,GAAGE,GAAG,GAAIrY,YAAamY,GAAGE,GAAG,GAAItR,MAAOpL,GAAG8c,WAAWN,GAAGE,GAAG,GAAIF,GAAGE,MAC9H,MAAM,KACD,GAAG9e,KAAK+e,EAAI,CAAEvR,MAAOpL,GAAG8c,WAAWN,GAAGE,GAAG,GAAIF,GAAGE,GAAG,IAAKpX,QAASkX,GAAGE,KACzE,MAAM,KACD,GACD,IAAI9V,QAAU5G,GAAGgd,aAAaR,GAAGE,GAAG,GAAIF,GAAGE,GAAG,GAAIF,GAAGE,IAAKF,GAAGE,KAAK,EAAO9e,KAAK6e,IAC1EnX,QAAUtF,GAAG4c,eAAe,CAAChW,SAAU4V,GAAGE,GAAG,GAAG1b,KACpDsE,QAAQ2X,SAAU,EAElBrf,KAAK+e,EAAI,CAAEvR,MAAOoR,GAAGE,GAAG,GAAGtR,MAAO9F,QAASA,QAASyG,OAAO,GAE/D,MAAM,KACD,GAAGnO,KAAK+e,EAAIH,GAAGE,IACpB,MAAM,KACD,GAAG9e,KAAK+e,EAAI,CAACld,KAAM+c,GAAGE,GAAG,GAAItR,MAAOpL,GAAG8c,WAAWN,GAAGE,GAAG,GAAIF,GAAGE,MACpE,MAAM,KACD,GACC,KACD,GAAG9e,KAAK+e,EAAI3c,GAAGkd,gBAAgBV,GAAGE,GAAG,GAAIF,GAAGE,GAAG,GAAIF,GAAGE,GAAG,GAAIF,GAAGE,GAAG,GAAI1c,GAAG8c,WAAWN,GAAGE,GAAG,GAAIF,GAAGE,KAAM9e,KAAK6e,IAClH,MAAM,KACD,GACD7e,KAAK+e,EAAI,CACPtd,KAAM,mBACNd,KAAMie,GAAGE,GAAG,GACZpd,OAAQkd,GAAGE,GAAG,GACdnd,KAAMid,GAAGE,GAAG,GACZjV,OAAQ,GACR2D,MAAOpL,GAAG8c,WAAWN,GAAGE,GAAG,GAAIF,GAAGE,KAClC1b,IAAKhB,GAAGC,QAAQrC,KAAK6e,KAG3B,MAAM,KACD,GAAG7e,KAAK+e,EAAI3c,GAAGmd,oBAAoBX,GAAGE,GAAG,GAAIF,GAAGE,GAAG,GAAIF,GAAGE,IAAK9e,KAAK6e,IACzE,MAAM,KACD,GAAG7e,KAAK+e,EAAI,CAAEld,KAAM+c,GAAGE,GAAG,GAAIpd,OAAQkd,GAAGE,GAAG,GAAInd,KAAMid,GAAGE,GAAG,GAAItR,MAAOpL,GAAG8c,WAAWN,GAAGE,GAAG,GAAIF,GAAGE,MACvG,MAAM,KACD,GACC,KACD,GAAG9e,KAAK+e,EAAIH,GAAGE,IACpB,MAAM,KACD,GACD9e,KAAK+e,EAAI,CACPtd,KAAM,gBACNI,KAAM+c,GAAGE,GAAG,GACZpd,OAAQkd,GAAGE,GAAG,GACdnd,KAAMid,GAAGE,GAAG,GACZ1b,IAAKhB,GAAGC,QAAQrC,KAAK6e,KAG3B,MAAM,KACD,GAAG7e,KAAK+e,EAAI,CAACtd,KAAM,OAAQ4D,MAAOuZ,GAAGE,IAAK1b,IAAKhB,GAAGC,QAAQrC,KAAK6e,KACpE,MAAM,KACD,GAAG7e,KAAK+e,EAAI,CAACtd,KAAM,WAAY6D,IAAKlD,GAAG4T,GAAG4I,GAAGE,GAAG,IAAKtZ,MAAOoZ,GAAGE,IAAK1b,IAAKhB,GAAGC,QAAQrC,KAAK6e,KAC9F,MAAM,KACD,GAAG7e,KAAK+e,EAAI3c,GAAG4T,GAAG4I,GAAGE,GAAG,IAC7B,MAAM,KACD,GACC,KACD,GAAG9e,KAAK+e,EAAIH,GAAGE,IACpB,MAAM,KACD,GAAG9e,KAAK+e,EAAI,CAACtd,KAAM,gBAAiB+D,MAAOoZ,GAAGE,IAAK/c,SAAU6c,GAAGE,IAAK1b,IAAKhB,GAAGC,QAAQrC,KAAK6e,KAC/F,MAAM,KACD,GAAG7e,KAAK+e,EAAI,CAACtd,KAAM,gBAAiB+D,MAAOga,OAAOZ,GAAGE,KAAM/c,SAAUyd,OAAOZ,GAAGE,KAAM1b,IAAKhB,GAAGC,QAAQrC,KAAK6e,KAC/G,MAAM,KACD,GAAG7e,KAAK+e,EAAI,CAACtd,KAAM,iBAAkB+D,MAAkB,SAAXoZ,GAAGE,IAAgB/c,SAAqB,SAAX6c,GAAGE,IAAgB1b,IAAKhB,GAAGC,QAAQrC,KAAK6e,KACtH,MAAM,KACD,GAAG7e,KAAK+e,EAAI,CAACtd,KAAM,mBAAoBM,cAAUa,EAAW4C,WAAO5C,EAAWQ,IAAKhB,GAAGC,QAAQrC,KAAK6e,KACxG,MAAM,KACD,GAAG7e,KAAK+e,EAAI,CAACtd,KAAM,cAAeM,SAAU,KAAMyD,MAAO,KAAMpC,IAAKhB,GAAGC,QAAQrC,KAAK6e,KACzF,MAAM,KACD,GACC,KACD,GAAG7e,KAAK+e,EAAIH,GAAGE,IACpB,MAAM,KACD,GAAG9e,KAAK+e,EAAI3c,GAAGqd,aAAY,EAAMb,GAAGE,IAAK9e,KAAK6e,IACnD,MAAM,KACD,GAAG7e,KAAK+e,EAAI3c,GAAGqd,aAAY,EAAOb,GAAGE,IAAK9e,KAAK6e,IACpD,MAAM,KACD,GAAID,GAAGE,GAAG,GAAGtb,KAAK,CAAC6J,KAAMjL,GAAG4T,GAAG4I,GAAGE,KAAM/c,SAAU6c,GAAGE,IAAKvR,UAAWqR,GAAGE,GAAG,KAAK9e,KAAM+e,EAAIH,GAAGE,GAAG,GACrG,MAAM,KACD,GAAG9e,KAAK+e,EAAI,CAAC,CAAC1R,KAAMjL,GAAG4T,GAAG4I,GAAGE,KAAM/c,SAAU6c,GAAGE,MACrD,MAAM,KACD,GAAG9e,KAAK+e,EAAI,GACjB,MAAM,KACD,GAAGH,GAAGE,GAAG,GAAGtb,KAAKob,GAAGE,KACzB,MAAM,KACD,GAAG9e,KAAK+e,EAAI,CAACH,GAAGE,KACrB,MAAM,KACD,GAAGF,GAAGE,GAAG,GAAGtb,KAAKob,GAAGE,KACzB,MAAM,KACD,GAAG9e,KAAK+e,EAAI,GACjB,MAAM,KACD,GAAGH,GAAGE,GAAG,GAAGtb,KAAKob,GAAGE,KACzB,MAAM,KACD,GAAG9e,KAAK+e,EAAI,GACjB,MAAM,KACD,GAAGH,GAAGE,GAAG,GAAGtb,KAAKob,GAAGE,KACzB,MAAM,KACD,GAAG9e,KAAK+e,EAAI,GACjB,MAAM,KACD,GAAGH,GAAGE,GAAG,GAAGtb,KAAKob,GAAGE,KACzB,MAAM,KACD,GAAG9e,KAAK+e,EAAI,GACjB,MAAM,KACD,GAAGH,GAAGE,GAAG,GAAGtb,KAAKob,GAAGE,KACzB,MAAM,KACD,GAAG9e,KAAK+e,EAAI,GACjB,MAAM,KACD,GAAGH,GAAGE,GAAG,GAAGtb,KAAKob,GAAGE,KACzB,MAAM,KACD,GAAG9e,KAAK+e,EAAI,GACjB,MAAM,KACD,GAAGH,GAAGE,GAAG,GAAGtb,KAAKob,GAAGE,KACzB,MAAM,KACD,GAAG9e,KAAK+e,EAAI,GACjB,MAAM,KACD,GAAGH,GAAGE,GAAG,GAAGtb,KAAKob,GAAGE,KACzB,MAAM,KACD,GAAG9e,KAAK+e,EAAI,GACjB,MAAM,KACD,GAAGH,GAAGE,GAAG,GAAGtb,KAAKob,GAAGE,KACzB,MAAM,KACD,GAAG9e,KAAK+e,EAAI,GACjB,MAAM,KACD,GAAGH,GAAGE,GAAG,GAAGtb,KAAKob,GAAGE,KACzB,MAAM,KACD,GAAG9e,KAAK+e,EAAI,CAACH,GAAGE,KACrB,MAAM,KACD,GAAGF,GAAGE,GAAG,GAAGtb,KAAKob,GAAGE,KACzB,MAAM,KACD,IAAI9e,KAAK+e,EAAI,CAACH,GAAGE,KACtB,MAAM,KACD,IAAIF,GAAGE,GAAG,GAAGtb,KAAKob,GAAGE,OAI1BY,MAAO,CAAC,CAAClgB,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC,EAAE,IAAIC,EAAE,EAAE8c,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAII,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACvgB,EAAE,CAAC,IAAI,CAACyC,EAAE,CAAC,EAAE,IAAI,CAACA,EAAE,CAAC,EAAE,GAAGE,EAAE,EAAE+f,EAAE,EAAEC,EAAE,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,GAAGC,GAAG,GAAGvD,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIuD,GAAG,GAAGrD,GAAG,CAAC,EAAE,IAAIsD,GAAG,GAAGC,GAAG,GAAGrD,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAI6C,GAAG,GAAG5C,GAAG,CAAC,EAAE,KAAK,CAACvgB,EAAE,CAAC,EAAE,IAAI,CAACyC,EAAE,CAAC,EAAE,IAAI+c,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAAC9d,EAAE,CAAC,EAAE,GAAG+c,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGE,GAAG,CAAC,EAAE,GAAGE,GAAG,CAAC,EAAE,GAAGE,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGE,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,IAAI,CAAC9d,EAAE,CAAC,EAAE,GAAG+c,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGE,GAAG,CAAC,EAAE,GAAGE,GAAG,CAAC,EAAE,GAAGE,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGE,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,IAAI,CAAC9d,EAAE,CAAC,EAAE,GAAG+c,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGE,GAAG,CAAC,EAAE,GAAGE,GAAG,CAAC,EAAE,GAAGE,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGE,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,IAAI,CAAC9d,EAAE,CAAC,EAAE,GAAG+c,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGE,GAAG,CAAC,EAAE,GAAGE,GAAG,CAAC,EAAE,GAAGE,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGE,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,IAAI,CAAC9d,EAAE,CAAC,EAAE,GAAG+c,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGE,GAAG,CAAC,EAAE,GAAGE,GAAG,CAAC,EAAE,GAAGE,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGE,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,IAAI,CAAC9d,EAAE,CAAC,EAAE,GAAG+c,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGE,GAAG,CAAC,EAAE,GAAGE,GAAG,CAAC,EAAE,GAAGE,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGE,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,IAAI,CAAC9d,EAAE,CAAC,EAAE,GAAG+c,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGE,GAAG,CAAC,EAAE,GAAGE,GAAG,CAAC,EAAE,GAAGE,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGE,GAAG,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,IAAI,CAAC6C,GAAG,GAAG1C,GAAG,CAAC,EAAE,IAAI2C,GAAG,GAAGC,GAAG,GAAGxC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIoC,GAAG,IAAI,CAACH,GAAG,GAAG1C,GAAG,CAAC,EAAE,IAAI2C,GAAG,GAAGC,GAAG,GAAGxC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIoC,GAAG,IAAI,CAAC/gB,EAAE,GAAGE,EAAE,EAAE8c,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAAC/d,EAAE,GAAGE,EAAE,EAAE8c,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACwC,GAAG,GAAGtD,GAAG,CAAC,EAAE,IAAI+D,GAAG,IAAI,CAACJ,GAAG,GAAGK,GAAG,GAAGC,GAAG,GAAGlD,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAI2C,GAAG,GAAGC,GAAG,GAAGxC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIoC,GAAG,IAAI,CAAC/gB,EAAE,GAAGE,EAAE,EAAE8c,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIG,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAAC9d,EAAE,CAAC,EAAE,IAAI+c,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAAC6C,GAAG,GAAG1C,GAAG,CAAC,EAAE,IAAI2C,GAAG,GAAGC,GAAG,GAAGxC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIoC,GAAG,IAAI,CAACH,GAAG,GAAG1C,GAAG,CAAC,EAAE,IAAI2C,GAAG,GAAGC,GAAG,GAAGxC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIoC,GAAG,IAAI,CAACH,GAAG,GAAG1C,GAAG,CAAC,EAAE,IAAI2C,GAAG,GAAGC,GAAG,GAAGxC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIoC,GAAG,IAAI,CAACH,GAAG,GAAGK,GAAG,GAAGC,GAAG,GAAGlD,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAI2C,GAAG,GAAGC,GAAG,GAAGxC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIoC,GAAG,IAAI,CAACzD,GAAG,CAAC,EAAE,IAAI6D,GAAG,GAAGnD,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAII,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACvB,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIO,GAAG,CAAC,EAAE,IAAIG,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACvB,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIO,GAAG,CAAC,EAAE,IAAIG,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACvB,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIO,GAAG,CAAC,EAAE,IAAIG,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACvB,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIO,GAAG,CAAC,EAAE,IAAIG,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACvB,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIO,GAAG,CAAC,EAAE,IAAIG,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACvB,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIO,GAAG,CAAC,EAAE,IAAIG,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACvB,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIO,GAAG,CAAC,EAAE,IAAIG,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACvB,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIO,GAAG,CAAC,EAAE,IAAIG,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACV,GAAG,CAAC,EAAE,IAAI6C,GAAG,IAAI,CAAC3D,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIO,GAAG,CAAC,EAAE,IAAIG,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACwC,GAAG,GAAGvD,GAAG,CAAC,EAAE,IAAIG,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAII,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAAC0C,GAAG,GAAGC,GAAG,GAAG9D,GAAG,CAAC,EAAE,IAAI+D,GAAG,GAAG9D,GAAG,CAAC,EAAE,IAAI+D,GAAG,GAAG9D,GAAG,CAAC,EAAE,KAAK,CAAC+D,GAAG,GAAGF,GAAG,GAAG9D,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAAC6C,GAAG,GAAGtD,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACD,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACI,GAAG,CAAC,EAAE,IAAIoE,GAAG,GAAG1D,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAII,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACrB,GAAG,CAAC,EAAE,IAAIU,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAII,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACrB,GAAG,CAAC,EAAE,IAAIU,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAII,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACiC,GAAG,GAAG1C,GAAG,CAAC,EAAE,IAAI2C,GAAG,GAAGC,GAAG,GAAGxC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIoC,GAAG,IAAI,CAACY,GAAG,GAAGjE,GAAG,CAAC,EAAE,KAAK,CAACkE,GAAG,GAAGtE,GAAG,CAAC,EAAE,IAAIU,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACrB,GAAG,CAAC,EAAE,IAAIuE,GAAG,GAAG7D,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACmD,GAAG,GAAG1E,GAAG,CAAC,EAAE,IAAIY,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAII,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACrB,GAAG,CAAC,EAAE,IAAIyE,GAAG,GAAG/D,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAII,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACiC,GAAG,GAAGtD,GAAG,CAAC,EAAE,IAAI0E,GAAG,GAAGC,GAAG,GAAGf,GAAG,GAAGlD,GAAG,CAAC,EAAE,IAAIkE,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGlE,GAAG,CAAC,EAAE,IAAI2C,GAAG,GAAGC,GAAG,GAAGxC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIoC,GAAG,IAAI,CAAC7C,GAAG,CAAC,EAAE,KAAK,CAACd,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIO,GAAG,CAAC,EAAE,IAAIG,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACgC,GAAG,GAAGyB,GAAG,GAAGxE,GAAG,CAAC,EAAE,IAAIoE,GAAG,GAAGf,GAAG,GAAGlD,GAAG,CAAC,EAAE,IAAIkE,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGlE,GAAG,CAAC,EAAE,IAAI2C,GAAG,GAAGC,GAAG,GAAGxC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIoC,GAAG,IAAI,CAACY,GAAG,GAAGjE,GAAG,CAAC,EAAE,KAAK,CAACA,GAAG,CAAC,EAAE,KAAK,CAAC1d,EAAE,GAAGE,EAAE,EAAE8c,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACL,GAAG,CAAC,EAAE,KAAK,CAACkD,GAAG,GAAG1C,GAAG,CAAC,EAAE,IAAI2C,GAAG,GAAGC,GAAG,GAAGxC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIoC,GAAG,IAAI,CAAC/gB,EAAE,GAAGE,EAAE,EAAE8c,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIG,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAAC4D,GAAG,GAAGjE,GAAG,CAAC,EAAE,KAAK,CAACA,GAAG,CAAC,EAAE,KAAK,CAACzd,EAAE,CAAC,EAAE,IAAI+c,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACd,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAAC0D,GAAG,GAAGtD,GAAG,CAAC,EAAE,IAAIgF,GAAG,GAAGL,GAAG,GAAGf,GAAG,GAAGlD,GAAG,CAAC,EAAE,IAAIkE,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGlE,GAAG,CAAC,EAAE,IAAI2C,GAAG,GAAGC,GAAG,GAAGxC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIoC,GAAG,IAAI,CAAC/C,GAAG,CAAC,EAAE,IAAIuE,GAAG,GAAGtE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAII,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAAC1e,EAAE,CAAC,EAAE,IAAI+c,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAAC6C,GAAG,GAAG1C,GAAG,CAAC,EAAE,IAAI2C,GAAG,GAAGC,GAAG,GAAGxC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIoC,GAAG,IAAI,CAACH,GAAG,GAAG4B,GAAG,GAAGlF,GAAG,CAAC,EAAE,IAAI2E,GAAG,GAAGf,GAAG,GAAGlD,GAAG,CAAC,EAAE,IAAIkE,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGlE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIyC,GAAG,GAAGC,GAAG,GAAGxC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIoC,GAAG,IAAI,CAACH,GAAG,GAAGtD,GAAG,CAAC,EAAE,IAAImF,GAAG,GAAGR,GAAG,GAAGf,GAAG,GAAGlD,GAAG,CAAC,EAAE,IAAIkE,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGlE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIyC,GAAG,GAAGC,GAAG,GAAGxC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIoC,GAAG,IAAI,CAACH,GAAG,GAAG8B,GAAG,IAAItF,GAAG,CAAC,EAAE,IAAI6E,GAAG,IAAIf,GAAG,GAAGlD,GAAG,CAAC,EAAE,IAAIkE,GAAG,IAAIC,GAAG,GAAGC,GAAG,GAAGlE,GAAG,CAAC,EAAE,IAAI2C,GAAG,GAAGC,GAAG,GAAGxC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIoC,GAAG,IAAI,CAACH,GAAG,GAAGtD,GAAG,CAAC,EAAE,IAAIqF,GAAG,IAAIV,GAAG,IAAIf,GAAG,GAAGlD,GAAG,CAAC,EAAE,IAAIkE,GAAG,IAAIC,GAAG,GAAGC,GAAG,GAAGlE,GAAG,CAAC,EAAE,IAAI2C,GAAG,GAAGC,GAAG,GAAGxC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIoC,GAAG,IAAI,CAACzD,GAAG,CAAC,EAAE,MAAM,CAACA,GAAG,CAAC,EAAE,IAAIU,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAII,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACrB,GAAG,CAAC,EAAE,KAAK,CAACF,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIO,GAAG,CAAC,EAAE,IAAIG,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACvB,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIO,GAAG,CAAC,EAAE,IAAIG,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACvB,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIO,GAAG,CAAC,EAAE,IAAII,GAAG,CAAC,EAAE,IAAImE,GAAG,IAAIlE,GAAG,CAAC,EAAE,KAAKE,GAAG,CAAC,EAAE,KAAK,CAAChB,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIO,GAAG,CAAC,EAAE,IAAII,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,KAAK,CAAChB,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIO,GAAG,CAAC,EAAE,IAAIG,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAKC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACxB,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIO,GAAG,CAAC,EAAE,IAAIG,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACf,GAAG,CAAC,EAAE,MAAM,CAACA,GAAG,CAAC,EAAE,IAAIG,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAII,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACd,GAAG,CAAC,EAAE,KAAK,CAAC5d,EAAE,CAAC,EAAE,IAAI+c,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACuD,GAAG,GAAG9D,GAAG,CAAC,EAAE,IAAI+D,GAAG,GAAG9D,GAAG,CAAC,EAAE,IAAI+D,GAAG,IAAIoB,GAAG,IAAIlF,GAAG,CAAC,EAAE,KAAK,CAACJ,GAAG,CAAC,EAAE,IAAIuF,GAAG,IAAI7E,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACjB,GAAG,CAAC,EAAE,KAAK,CAACzd,EAAE,CAAC,EAAE,IAAI+c,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACT,GAAG,CAAC,EAAE,MAAM,CAACA,GAAG,CAAC,EAAE,IAAIU,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAII,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACrB,GAAG,CAAC,EAAE,KAAK,CAACsD,GAAG,GAAGqB,GAAG,IAAIf,GAAG,GAAGlD,GAAG,CAAC,EAAE,IAAI8E,GAAG,IAAI7E,GAAG,CAAC,EAAE,IAAIiE,GAAG,IAAIC,GAAG,GAAGC,GAAG,GAAGlE,GAAG,CAAC,EAAE,IAAI2C,GAAG,GAAGC,GAAG,GAAGxC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIoC,GAAG,IAAI,CAACzD,GAAG,CAAC,EAAE,MAAM,CAACyF,GAAG,IAAIzF,GAAG,CAAC,EAAE,IAAI0F,GAAG,IAAI5E,GAAG,CAAC,EAAE,MAAM,CAACd,GAAG,CAAC,EAAE,IAAIU,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACrB,GAAG,CAAC,EAAE,IAAIc,GAAG,CAAC,EAAE,KAAK,CAACd,GAAG,CAAC,EAAE,IAAI2F,GAAG,IAAID,GAAG,IAAI5E,GAAG,CAAC,EAAE,MAAM,CAACd,GAAG,CAAC,EAAE,IAAIU,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACrB,GAAG,CAAC,EAAE,IAAIc,GAAG,CAAC,EAAE,KAAK,CAAChB,GAAG,CAAC,EAAE,MAAM,CAACA,GAAG,CAAC,EAAE,IAAIY,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAII,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACvB,GAAG,CAAC,EAAE,KAAK,CAACE,GAAG,CAAC,EAAE,MAAM,CAACA,GAAG,CAAC,EAAE,IAAIU,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAII,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACrB,GAAG,CAAC,EAAE,KAAK,CAACrd,EAAE,CAAC,EAAE,IAAI+c,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACX,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIO,GAAG,CAAC,EAAE,IAAII,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,KAAK,CAACD,GAAG,CAAC,EAAE,MAAM,CAACyC,GAAG,GAAGqB,GAAG,IAAIf,GAAG,GAAGlD,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAI2C,GAAG,GAAGC,GAAG,GAAGxC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIoC,GAAG,IAAI,CAAC9gB,EAAE,CAAC,EAAE,IAAI+c,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACL,GAAG,CAAC,EAAE,KAAK,CAACA,GAAG,CAAC,EAAE,KAAK,CAACkD,GAAG,GAAGtD,GAAG,CAAC,EAAE,IAAI4F,GAAG,IAAIjB,GAAG,IAAIf,GAAG,GAAGlD,GAAG,CAAC,EAAE,IAAIkE,GAAG,IAAIC,GAAG,GAAGC,GAAG,GAAGlE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIyC,GAAG,GAAGC,GAAG,GAAGxC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIoC,GAAG,IAAI,CAAC9gB,EAAE,CAAC,EAAE,IAAI+c,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACE,GAAG,CAAC,EAAE,MAAM,CAACD,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAII,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACV,GAAG,CAAC,EAAE,KAAK,CAAChe,EAAE,CAAC,EAAE,IAAI+c,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACT,GAAG,CAAC,EAAE,MAAM,CAACA,GAAG,CAAC,EAAE,KAAK,CAACY,GAAG,CAAC,EAAE,KAAKiF,GAAG,KAAK,CAAC7F,GAAG,CAAC,EAAE,MAAM,CAACA,GAAG,CAAC,EAAE,KAAK,CAACL,GAAG,CAAC,EAAE,KAAK,CAACD,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIG,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACX,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIO,GAAG,CAAC,EAAE,IAAII,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,KAAK,CAACd,GAAG,CAAC,EAAE,IAAI8F,GAAG,IAAIJ,GAAG,IAAI5E,GAAG,CAAC,EAAE,MAAM,CAACd,GAAG,CAAC,EAAE,IAAIU,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACrB,GAAG,CAAC,EAAE,IAAIc,GAAG,CAAC,EAAE,KAAK,CAAChB,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIO,GAAG,CAAC,EAAE,IAAIG,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAAC3B,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACG,GAAG,CAAC,EAAE,KAAKG,GAAG,CAAC,EAAE,MAAM,CAACH,GAAG,CAAC,EAAE,KAAKG,GAAG,CAAC,EAAE,MAAM,CAACrB,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACT,GAAG,CAAC,EAAE,MAAM,CAACA,GAAG,CAAC,EAAE,KAAK,CAACA,GAAG,CAAC,EAAE,KAAK,CAACY,GAAG,CAAC,EAAE,KAAKG,GAAG,CAAC,EAAE,MAAM,CAACrB,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,MACngWsF,eAAgB,CAACrjB,EAAE,CAAC,EAAE,GAAG8d,GAAG,CAAC,EAAE,IAAI4D,GAAG,CAAC,EAAE,IAAIK,GAAG,CAAC,EAAE,IAAIiB,GAAG,CAAC,EAAE,IAAIvE,GAAG,CAAC,EAAE,IAAIG,GAAG,CAAC,EAAE,IAAI0E,GAAG,CAAC,EAAE,IAAIC,IAAI,CAAC,EAAE,IAAIC,IAAI,CAAC,EAAE,IAAIC,IAAI,CAAC,EAAE,IAAIC,IAAI,CAAC,EAAE,IAAIC,IAAI,CAAC,EAAE,IAAIC,IAAI,CAAC,EAAE,IAAIC,IAAI,CAAC,EAAE,IAAIC,IAAI,CAAC,EAAE,IAAIC,IAAI,CAAC,EAAE,IAAIC,IAAI,CAAC,EAAE,KACzMC,WAAY,SAAqBze,IAAKtD,MAClC,MAAM,IAAIhF,MAAMsI,MAEpB7G,MAAO,SAAeZ,OAClB,IAAImmB,KAAO3jB,KAAM+T,MAAQ,CAAC,GAAI6P,OAAS,CAAC,MAAOC,OAAS,GAAInE,MAAQ1f,KAAK0f,MAAOlB,OAAS,GAAIE,SAAW,EAAGD,OAAS,EAAGqF,WAAa,EACpI9jB,KAAK+jB,MAAMC,SAASxmB,OACpBwC,KAAK+jB,MAAM3hB,GAAKpC,KAAKoC,GACrBpC,KAAKoC,GAAG2hB,MAAQ/jB,KAAK+jB,WAEW,KADhC/jB,KAAKoC,GAAGjE,OAAS6B,MACD+jB,MAAME,SAClBjkB,KAAK+jB,MAAME,OAAS,IACxB,IAAIC,MAAQlkB,KAAK+jB,MAAME,OACvBJ,OAAOrgB,KAAK0gB,OACZ,IAAIC,OAASnkB,KAAK+jB,MAAMtmB,SAAWuC,KAAK+jB,MAAMtmB,QAAQ0mB,OACpB,mBAAvBnkB,KAAKoC,GAAGshB,aACf1jB,KAAK0jB,WAAa1jB,KAAKoC,GAAGshB,YAe9B,IADA,IAAIU,OAAQC,eAAgBC,MAAOC,OAAWvoB,EAAea,EAAG0G,IAAKihB,SAAUC,SAPvE3X,MAOyC4X,MAAQ,KAC5C,CAUT,GATAJ,MAAQvQ,MAAMA,MAAM/W,OAAS,QASP,KAPlBunB,OADAvkB,KAAK8iB,eAAewB,OACXtkB,KAAK8iB,eAAewB,QAEzBF,MAAAA,SAbJtX,WAAAA,EAEiB,iBADrBA,MAAQ6W,KAAKI,MAAMY,OAAS,KAExB7X,MAAQ6W,KAAK7L,SAAShL,QAAUA,OAW5BsX,OATDtX,OAWM4S,MAAM4E,QAAU5E,MAAM4E,OAAOF,YAEJG,OAAOvnB,SAAWunB,OAAO,GAAI,CAC/D,IAAIK,OAAS,GACb,IAAKd,WAAY,CAEb,IAAKjnB,KADL4nB,SAAW,GACD/E,MAAM4E,OACRtkB,KAAKwc,WAAW3f,IAAU,EAAJA,GACtB4nB,SAASjhB,KAAK,IAAMxD,KAAKwc,WAAW3f,GAAK,KAG7C+nB,OADA5kB,KAAK+jB,MAAMc,aACF,wBAA0BnG,SAAW,GAAK,MAAQ1e,KAAK+jB,MAAMc,eAAiB,eAAiBJ,SAASvgB,KAAK,MAAQ,WAAalE,KAAKwc,WAAW4H,SAAWA,QAAU,IAEvK,wBAA0B1F,SAAW,GAAK,iBAA6B,GAAV0F,OAAY,eAAe,KAAOpkB,KAAKwc,WAAW4H,SAAWA,QAAU,KAEjJpkB,KAAK0jB,WAAWkB,OAAQ,CAACE,KAAM9kB,KAAK+jB,MAAMgB,MAAOjY,MAAO9M,KAAKwc,WAAW4H,SAAWA,OAAQvgB,KAAM7D,KAAK+jB,MAAMrF,SAAUtb,IAAK8gB,MAAOO,SAAUA,YAGpJ,GAAIF,OAAO,aAAcS,OAAyB,EAAhBT,OAAOvnB,OACrC,MAAM,IAAIL,MAAM,oDAAsD2nB,MAAQ,YAAcF,QAEhG,OAAQG,OAAO,IACf,KAAK,EACDxQ,MAAMvQ,KAAK4gB,QACXR,OAAOpgB,KAAKxD,KAAK+jB,MAAMvF,QACvBqF,OAAOrgB,KAAKxD,KAAK+jB,MAAME,QACvBlQ,MAAMvQ,KAAK+gB,OAAO,IAClBH,OAAS,KACJC,gBAQDD,OAASC,eACTA,eAAiB,OARjB5F,OAASze,KAAK+jB,MAAMtF,OACpBD,OAASxe,KAAK+jB,MAAMvF,OACpBE,SAAW1e,KAAK+jB,MAAMrF,SACtBwF,MAAQlkB,KAAK+jB,MAAME,OACF,EAAbH,YACAA,cAKR,MAAM,KACL,EAQD,GAPAvgB,IAAMvD,KAAKse,aAAaiG,OAAO,IAAI,GACnCG,MAAM3F,EAAI6E,OAAOA,OAAO5mB,OAASuG,KACjCmhB,MAAM7F,GAAK,CAACpS,WAAYoX,OAAOA,OAAO7mB,QAAUuG,KAAO,IAAIkJ,WAAYG,UAAWiX,OAAOA,OAAO7mB,OAAS,GAAG4P,UAAWF,aAAcmX,OAAOA,OAAO7mB,QAAUuG,KAAO,IAAImJ,aAAcG,YAAagX,OAAOA,OAAO7mB,OAAS,GAAG6P,aACzNsX,SACAO,MAAM7F,GAAGoG,MAAQ,CAACpB,OAAOA,OAAO7mB,QAAUuG,KAAO,IAAI0hB,MAAM,GAAIpB,OAAOA,OAAO7mB,OAAS,GAAGioB,MAAM,UAGlF,KADjBjpB,EAAIgE,KAAKue,cAAcxhB,KAAK2nB,MAAOlG,OAAQC,OAAQC,SAAU1e,KAAKoC,GAAImiB,OAAO,GAAIX,OAAQC,SAErF,OAAO7nB,EAEPuH,MACAwQ,MAAQA,MAAMpN,MAAM,GAAI,EAAIpD,IAAM,GAClCqgB,OAASA,OAAOjd,MAAM,GAAI,EAAIpD,KAC9BsgB,OAASA,OAAOld,MAAM,GAAI,EAAIpD,MAElCwQ,MAAMvQ,KAAKxD,KAAKse,aAAaiG,OAAO,IAAI,IACxCX,OAAOpgB,KAAKkhB,MAAM3F,GAClB8E,OAAOrgB,KAAKkhB,MAAM7F,IAClB2F,SAAW9E,MAAM3L,MAAMA,MAAM/W,OAAS,IAAI+W,MAAMA,MAAM/W,OAAS,IAC/D+W,MAAMvQ,KAAKghB,UACX,MAAM,KACL,EACD,OAAO,GAGf,OAAO,IAIPT,MAAQ,WACZ,IAAIA,MAAS,CAAC9L,IAAI,EAClByL,WAAW,SAAoBze,IAAKtD,MAC5B,IAAI3B,KAAKoC,GAAGjE,OAGR,MAAM,IAAIxB,MAAMsI,KAFhBjF,KAAKoC,GAAGjE,OAAOulB,WAAWze,IAAKtD,OAK3CqiB,SAAS,SAAUxmB,OASX,OARAwC,KAAKklB,OAAS1nB,MACdwC,KAAKmlB,MAAQnlB,KAAKolB,MAAQplB,KAAKqlB,MAAO,EACtCrlB,KAAK0e,SAAW1e,KAAKye,OAAS,EAC9Bze,KAAKwe,OAASxe,KAAKslB,QAAUtlB,KAAK+kB,MAAQ,GAC1C/kB,KAAKulB,eAAiB,CAAC,WACvBvlB,KAAKikB,OAAS,CAACxX,WAAW,EAAEC,aAAa,EAAEE,UAAU,EAAEC,YAAY,GAC/D7M,KAAKvC,QAAQ0mB,SAAQnkB,KAAKikB,OAAOgB,MAAQ,CAAC,EAAE,IAChDjlB,KAAKwlB,OAAS,EACPxlB,MAEfxC,MAAM,WACE,IAAIioB,GAAKzlB,KAAKklB,OAAO,GAgBrB,OAfAllB,KAAKwe,QAAUiH,GACfzlB,KAAKye,SACLze,KAAKwlB,SACLxlB,KAAK+kB,OAASU,GACdzlB,KAAKslB,SAAWG,GACJA,GAAGV,MAAM,oBAEjB/kB,KAAK0e,WACL1e,KAAKikB,OAAOrX,aAEZ5M,KAAKikB,OAAOpX,cAEZ7M,KAAKvC,QAAQ0mB,QAAQnkB,KAAKikB,OAAOgB,MAAM,KAE3CjlB,KAAKklB,OAASllB,KAAKklB,OAAOve,MAAM,GACzB8e,IAEfC,MAAM,SAAUD,IACR,IAAIliB,IAAMkiB,GAAGzoB,OACT2oB,MAAQF,GAAGhO,MAAM,iBAErBzX,KAAKklB,OAASO,GAAKzlB,KAAKklB,OACxBllB,KAAKwe,OAASxe,KAAKwe,OAAOoH,OAAO,EAAG5lB,KAAKwe,OAAOxhB,OAAOuG,IAAI,GAE3DvD,KAAKwlB,QAAUjiB,IACf,IAAIsiB,SAAW7lB,KAAK+kB,MAAMtN,MAAM,iBAChCzX,KAAK+kB,MAAQ/kB,KAAK+kB,MAAMa,OAAO,EAAG5lB,KAAK+kB,MAAM/nB,OAAO,GACpDgD,KAAKslB,QAAUtlB,KAAKslB,QAAQM,OAAO,EAAG5lB,KAAKslB,QAAQtoB,OAAO,GAEtD2oB,MAAM3oB,OAAO,IAAGgD,KAAK0e,UAAYiH,MAAM3oB,OAAO,GAClD,IAAIhB,EAAIgE,KAAKikB,OAAOgB,MAapB,OAXAjlB,KAAKikB,OAAS,CAACxX,WAAYzM,KAAKikB,OAAOxX,WACrCG,UAAW5M,KAAK0e,SAAS,EACzBhS,aAAc1M,KAAKikB,OAAOvX,aAC1BG,YAAa8Y,OACRA,MAAM3oB,SAAW6oB,SAAS7oB,OAASgD,KAAKikB,OAAOvX,aAAe,GAAKmZ,SAASA,SAAS7oB,OAAS2oB,MAAM3oB,QAAQA,OAAS2oB,MAAM,GAAG3oB,OAC/HgD,KAAKikB,OAAOvX,aAAenJ,KAG7BvD,KAAKvC,QAAQ0mB,SACbnkB,KAAKikB,OAAOgB,MAAQ,CAACjpB,EAAE,GAAIA,EAAE,GAAKgE,KAAKye,OAASlb,MAE7CvD,MAEf8lB,KAAK,WAEG,OADA9lB,KAAKmlB,OAAQ,EACNnlB,MAEf+lB,KAAK,SAAU7pB,GACP8D,KAAK0lB,MAAM1lB,KAAK+kB,MAAMpe,MAAMzK,KAEpC8pB,UAAU,WACF,IAAIC,KAAOjmB,KAAKslB,QAAQM,OAAO,EAAG5lB,KAAKslB,QAAQtoB,OAASgD,KAAK+kB,MAAM/nB,QACnE,OAAsB,GAAdipB,KAAKjpB,OAAc,MAAM,IAAMipB,KAAKL,QAAQ,IAAI1gB,QAAQ,MAAO,KAE/EghB,cAAc,WACN,IAAIC,KAAOnmB,KAAK+kB,MAIhB,OAHIoB,KAAKnpB,OAAS,KACdmpB,MAAQnmB,KAAKklB,OAAOU,OAAO,EAAG,GAAGO,KAAKnpB,UAElCmpB,KAAKP,OAAO,EAAE,KAAmB,GAAdO,KAAKnpB,OAAc,MAAM,KAAKkI,QAAQ,MAAO,KAEhF2f,aAAa,WACL,IAAIuB,IAAMpmB,KAAKgmB,YACXzpB,EAAI,IAAIyoB,MAAMoB,IAAIppB,OAAS,GAAGkH,KAAK,KACvC,OAAOkiB,IAAMpmB,KAAKkmB,gBAAkB,KAAO3pB,EAAE,KAErD4pB,KAAK,WACG,GAAInmB,KAAKqlB,KACL,OAAOrlB,KAAKiY,IAIhB,IAAInL,MACAiY,MACAsB,UACAhQ,MAEAsP,MAPC3lB,KAAKklB,SAAQllB,KAAKqlB,MAAO,GAQzBrlB,KAAKmlB,QACNnlB,KAAKwe,OAAS,GACdxe,KAAK+kB,MAAQ,IAGjB,IADA,IAAIuB,MAAQtmB,KAAKumB,gBACRlqB,EAAE,EAAEA,EAAIiqB,MAAMtpB,WACnBqpB,UAAYrmB,KAAKklB,OAAOH,MAAM/kB,KAAKsmB,MAAMA,MAAMjqB,OAC5B0oB,SAASsB,UAAU,GAAGrpB,OAAS+nB,MAAM,GAAG/nB,UACvD+nB,MAAQsB,UACRhQ,MAAQha,EACH2D,KAAKvC,QAAQ+oB,OALKnqB,KAQ/B,OAAI0oB,QACAY,MAAQZ,MAAM,GAAGA,MAAM,sBACZ/kB,KAAK0e,UAAYiH,MAAM3oB,QAClCgD,KAAKikB,OAAS,CAACxX,WAAYzM,KAAKikB,OAAOrX,UACxBA,UAAW5M,KAAK0e,SAAS,EACzBhS,aAAc1M,KAAKikB,OAAOpX,YAC1BA,YAAa8Y,MAAQA,MAAMA,MAAM3oB,OAAO,GAAGA,OAAO2oB,MAAMA,MAAM3oB,OAAO,GAAG+nB,MAAM,UAAU,GAAG/nB,OAASgD,KAAKikB,OAAOpX,YAAckY,MAAM,GAAG/nB,QACtJgD,KAAKwe,QAAUuG,MAAM,GACrB/kB,KAAK+kB,OAASA,MAAM,GACpB/kB,KAAKymB,QAAU1B,MACf/kB,KAAKye,OAASze,KAAKwe,OAAOxhB,OACtBgD,KAAKvC,QAAQ0mB,SACbnkB,KAAKikB,OAAOgB,MAAQ,CAACjlB,KAAKwlB,OAAQxlB,KAAKwlB,QAAUxlB,KAAKye,SAE1Dze,KAAKmlB,OAAQ,EACbnlB,KAAKklB,OAASllB,KAAKklB,OAAOve,MAAMoe,MAAM,GAAG/nB,QACzCgD,KAAKslB,SAAWP,MAAM,GACtBjY,MAAQ9M,KAAKue,cAAcxhB,KAAKiD,KAAMA,KAAKoC,GAAIpC,KAAMsmB,MAAMjQ,OAAOrW,KAAKulB,eAAevlB,KAAKulB,eAAevoB,OAAO,IAC7GgD,KAAKqlB,MAAQrlB,KAAKklB,SAAQllB,KAAKqlB,MAAO,GACtCvY,YACC,GAEW,KAAhB9M,KAAKklB,OACEllB,KAAKiY,IAELjY,KAAK0jB,WAAW,0BAA0B1jB,KAAK0e,SAAS,GAAG,yBAAyB1e,KAAK6kB,eACxF,CAACC,KAAM,GAAIhY,MAAO,KAAMjJ,KAAM7D,KAAK0e,YAGvDiG,IAAI,WACI,IAAI3oB,EAAIgE,KAAKmmB,OACb,YAAiB,IAANnqB,EACAA,EAEAgE,KAAK2kB,OAGxB+B,MAAM,SAAgBC,WACd3mB,KAAKulB,eAAe/hB,KAAKmjB,YAEjCC,SAAS,WACD,OAAO5mB,KAAKulB,eAAe3Q,OAEnC2R,cAAc,WACN,OAAOvmB,KAAK6mB,WAAW7mB,KAAKulB,eAAevlB,KAAKulB,eAAevoB,OAAO,IAAIspB,OAElFQ,SAAS,WACD,OAAO9mB,KAAKulB,eAAevlB,KAAKulB,eAAevoB,OAAO,IAE9D+pB,UAAU,SAAgBJ,WAClB3mB,KAAK0mB,MAAMC,YAEnBlpB,QAAgB,GAChB8gB,cAAsB,SAAmBnc,GAAG4kB,IAAIC,0BAA0BC,UAI1E,SAAS1Z,MAAM5I,MAAO+H,KACpB,OAAOqa,IAAIxI,OAASwI,IAAIxI,OAAOzR,UAAUnI,MAAOoiB,IAAIvI,OAAS9R,IAAM/H,OAKrE,OAAOqiB,2BACP,KAAK,EAU8B,GAT4B,SAAzBD,IAAIxI,OAAO7X,OAAO,IACnB6G,MAAM,EAAE,GACRxN,KAAK0mB,MAAM,OACsB,OAAzBM,IAAIxI,OAAO7X,OAAO,IAC1B6G,MAAM,EAAE,GACRxN,KAAK0mB,MAAM,QAEX1mB,KAAK0mB,MAAM,MAEVM,IAAIxI,OAAQ,OAAO,GAEzD,MAAM,KACD,EAAE,OAAO,GACR,KACD,EAE8B,OADAxe,KAAK4mB,WACE,GAEpC,KACD,EAAoB,OAAlB5mB,KAAK0mB,MAAM,OAAe,GAC3B,KACD,EAK6B,OAJA1mB,KAAK4mB,WAIqD,QAAtD5mB,KAAKulB,eAAevlB,KAAKulB,eAAevoB,OAAO,GAC1C,IAEPwQ,MAAM,EAAG,GACF,iBAGrC,KACD,EAAG,OAAO,GACT,KACD,EAEH,OADAxN,KAAK4mB,WACE,GAEH,KACD,EAAE,OAAO,GACR,KACD,EAAE,OAAO,GACR,KACD,EAAG,OAAO,GACT,KACD,GAG6B,OAFA5mB,KAAK4mB,WACL5mB,KAAK0mB,MAAM,OACJ,GAEnC,KACD,GAAG,OAAO,GACT,KACD,GAAG,OAAO,GACT,KACD,GAAG,OAAO,GACT,KACD,GAAG,OAAO,GACT,KACD,GACC,KACD,GAAmB,OAAhB1mB,KAAK4mB,WAAmB,GAC1B,KACD,GAAG,OAAO,GACT,KACD,GAAG,OAAO,GACT,KACD,GAAG,OAAO,GACT,KACD,GAAG,OAAO,GACT,KACD,GACH5mB,KAAK0lB,MAAMsB,IAAIxI,QACfxe,KAAK4mB,WACL5mB,KAAK0mB,MAAM,OAEb,MAAM,KACD,GAEH,OADA1mB,KAAK4mB,WACE,GAEH,KACD,GAAG,OAAO,GACT,KACD,GAAG,OAAO,GACT,KACD,GACC,KACD,GAAG,OAAO,GACT,KACD,GAAG,OAAO,GACT,KACD,GACL,MAAM,KACD,GAAmB,OAAhB5mB,KAAK4mB,WAAmB,GAC1B,KACD,GAAmB,OAAhB5mB,KAAK4mB,WAAmB,GAC1B,KACD,GAA+C,OAA5CI,IAAIxI,OAAShR,MAAM,EAAE,GAAGtI,QAAQ,OAAO,KAAa,GACtD,KACD,GAA+C,OAA5C8hB,IAAIxI,OAAShR,MAAM,EAAE,GAAGtI,QAAQ,OAAO,KAAa,GACtD,KACD,GAAG,OAAO,GACT,KACD,GACC,KACD,GAAG,OAAO,GACT,KACD,GAAG,OAAO,GACT,KACD,GAAG,OAAO,GACT,KACD,GAAG,OAAO,GACT,KACD,GAAG,OAAO,GACT,KACD,GAAG,OAAO,GACT,KACD,GAAG,OAAO,GACT,KACD,GAAuD,OAApD8hB,IAAIxI,OAASwI,IAAIxI,OAAOtZ,QAAQ,cAAc,MAAc,GAC9D,KACD,GAAG,MAAO,UACT,KACD,GAAG,OAAO,IAIfohB,MAAc,CAAC,2BAA2B,gBAAgB,gDAAgD,yBAAyB,qEAAqE,+BAA+B,0BAA0B,UAAU,UAAU,gBAAgB,gBAAgB,iBAAiB,kBAAkB,oBAAoB,kBAAkB,6BAA6B,kCAAkC,kBAAkB,yBAAyB,kBAAkB,iBAAiB,mBAAmB,6BAA6B,mBAAmB,SAAS,YAAY,4BAA4B,aAAa,WAAW,kBAAkB,gBAAgB,uBAAuB,uBAAuB,SAAS,yBAAyB,0BAA0B,8BAA8B,yBAAyB,0CAA0C,eAAe,UAAU,0DAA0D,yBAAyB,SAAS,UACz/BO,WAAmB,CAACM,GAAK,CAACb,MAAQ,CAAC,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIc,WAAY,GAAOC,IAAM,CAACf,MAAQ,CAAC,GAAGc,WAAY,GAAOE,IAAM,CAAChB,MAAQ,CAAC,GAAGc,WAAY,GAAOG,IAAM,CAACjB,MAAQ,CAAC,EAAE,EAAE,GAAGc,WAAY,GAAOI,QAAU,CAAClB,MAAQ,CAAC,EAAE,EAAE,IAAIc,WAAY,KACpU,OAAOrD,MAxTK,GA0TZ,SAAS9lB,SAAY+B,KAAKoC,GAAK,GAC/B,OAFAjE,OAAO4lB,MAAQA,MAER,KAD6B9lB,OAAOoC,UAAYlC,QAAcF,OAASA,QAzmB7D,GA2mBZnB,QAAA,QAAe8a,qIC1mBb,SAAe7R,KACpB,OAAO,IAAI0hB,cAAehlB,OAAOsD,iEAHf,wEAMb,SAAS0hB,eACdznB,KAAK0nB,QAAU,GAGjBD,aAAapnB,UAAY,IAAAsnB,UAAA,SAEFC,IAAM,SAASvc,QAGpC,IAFA,IAAIwc,IAAM,GAEDxrB,EAAI,EAAGwP,EAAI7L,KAAK0nB,QAASrrB,EAAIwP,EAAGxP,IACvCwrB,KAAO,KAIT,OADAA,KAAOxc,OAAS,MAIlBoc,aAAapnB,UAAUqI,QAAU,SAAShB,SACxC,IAAImgB,IAAM,GACNlf,KAAOjB,QAAQiB,KACftM,OAACuG,EAAEiJ,OAACjJ,EAER,GAAI8E,QAAQjB,YAAa,CACvB,IAAIA,YAAc,kBAClB,IAAKpK,EAAI,EAAGwP,EAAInE,QAAQjB,YAAYzJ,OAAQX,EAAIwP,EAAGxP,IAChDoK,aAAe,IAAMiB,QAAQjB,YAAYpK,GAE5CoK,aAAe,KACfohB,KAAO7nB,KAAK4nB,IAAInhB,aAGlB,IAAKpK,EAAI,EAAGwP,EAAIlD,KAAK3L,OAAQX,EAAIwP,EAAGxP,IAClCwrB,KAAO7nB,KAAKyC,OAAOkG,KAAKtM,IAK1B,OAFA2D,KAAK0nB,UAEEG,KAGTJ,aAAapnB,UAAU4J,kBAAoB,SAASC,UAClD,OAAOlK,KAAK4nB,IAAI,MAAQ5nB,KAAKmK,cAAcD,UAAY,QAEzDud,aAAapnB,UAAUiK,UAAY,SAASJ,UAC1C,OAAOlK,KAAK4nB,IAAI,gBAAkB5nB,KAAKmK,cAAcD,UAAY,QAGnEud,aAAapnB,UAAUyI,eACvB2e,aAAapnB,UAAUgJ,eAAiB,SAASN,OAC/C,IAAI8e,IAAM,GAqBV,OAnBAA,KAAO7nB,KAAK4nB,KAAoB,mBAAf7e,MAAMtH,KAA4B,aAAe,IAAM,UACxEzB,KAAK0nB,UACLG,KAAO7nB,KAAK4nB,IAAI5nB,KAAKmK,cAAcpB,QAC/BA,MAAMrB,UACRmgB,KAAO7nB,KAAK4nB,IAAI,YAChB5nB,KAAK0nB,UACLG,KAAO7nB,KAAKyC,OAAOsG,MAAMrB,SACzB1H,KAAK0nB,WAEH3e,MAAMC,UACJD,MAAMrB,SAAW1H,KAAK0nB,UAC1BG,KAAO7nB,KAAK4nB,IAAI,SAChB5nB,KAAK0nB,UACLG,KAAO7nB,KAAKyC,OAAOsG,MAAMC,SACzBhJ,KAAK0nB,UACD3e,MAAMrB,SAAW1H,KAAK0nB,WAE5B1nB,KAAK0nB,UAEEG,KAGTJ,aAAapnB,UAAUoJ,iBAAmB,SAASvI,SACjD,IAAIsJ,QAAU,WAAatJ,QAAQP,KAAKoB,SAOxC,OANIb,QAAQQ,OAAO,KACjB8I,SAAW,IAAMxK,KAAKyC,OAAOvB,QAAQQ,OAAO,KAE1CR,QAAQS,OACV6I,SAAW,IAAMxK,KAAKyC,OAAOvB,QAAQS,OAEhC3B,KAAK4nB,IAAI,OAASpd,QAAU,QAErCid,aAAapnB,UAAU0J,sBAAwB,SAAS7I,SACtD,IAAIsJ,QAAU,iBAAmBtJ,QAAQP,KAAKoB,SAa9C,OAZIb,QAAQQ,OAAO,KACjB8I,SAAW,IAAMxK,KAAKyC,OAAOvB,QAAQQ,OAAO,KAE1CR,QAAQS,OACV6I,SAAW,IAAMxK,KAAKyC,OAAOvB,QAAQS,OAGvC6I,SAAW,IAAMxK,KAAK4nB,IAAI,YAC1B5nB,KAAK0nB,UACLld,SAAWxK,KAAKyC,OAAOvB,QAAQwG,SAC/B1H,KAAK0nB,UAEE1nB,KAAK4nB,IAAI,OAASpd,QAAU,QAGrCid,aAAapnB,UAAUkK,iBAAmB,SAASC,SACjD,OAAOxK,KAAK4nB,IAAI,aAAepd,QAAQhF,MAAQ,QAGjDiiB,aAAapnB,UAAUoK,iBAAmB,SAAS0C,SACjD,OAAOnN,KAAK4nB,IAAI,QAAUza,QAAQ3H,MAAQ,SAG5CiiB,aAAapnB,UAAU8J,cAAgB,SAASpD,OAK9C,IAJA,IAEIpF,KAFAD,OAASqF,MAAMrF,OACfomB,aAAe,GAGVzrB,EAAI,EAAGwP,EAAInK,OAAO1E,OAAQX,EAAIwP,EAAGxP,IACxCyrB,aAAatkB,KAAKxD,KAAKyC,OAAOf,OAAOrF,KAOvC,OAJAqF,OAAS,IAAMomB,aAAa5jB,KAAK,MAAQ,IAEzCvC,KAAOoF,MAAMpF,KAAO,IAAM3B,KAAKyC,OAAOsE,MAAMpF,MAAQ,GAE7C3B,KAAKyC,OAAOsE,MAAMlF,MAAQ,IAAMH,OAASC,MAGlD8lB,aAAapnB,UAAU0K,eAAiB,SAASiL,IAC/C,IAAInU,KAAOmU,GAAG/T,MAAMiC,KAAK,KACzB,OAAQ8R,GAAGpQ,KAAO,IAAM,IAAM,QAAU/D,MAI1C4lB,aAAapnB,UAAU+K,cAAgB,SAASC,QAC9C,MAAO,IAAMA,OAAO7F,MAAQ,KAG9BiiB,aAAapnB,UAAUiL,cAAgB,SAASC,QAC9C,MAAO,UAAYA,OAAO/F,MAAQ,KAGpCiiB,aAAapnB,UAAUmL,eAAiB,SAASC,MAC/C,MAAO,WAAaA,KAAKjG,MAAQ,KAGnCiiB,aAAapnB,UAAUqL,iBAAmB,WACxC,MAAO,aAGT+b,aAAapnB,UAAUsL,YAAc,WACnC,MAAO,QAGT8b,aAAapnB,UAAUuL,KAAO,SAASjK,MAIrC,IAHA,IAAI0D,MAAQ1D,KAAK0D,MACb0iB,YAAc,GAET1rB,EAAI,EAAGwP,EAAIxG,MAAMrI,OAAQX,EAAIwP,EAAGxP,IACvC0rB,YAAYvkB,KAAKxD,KAAKyC,OAAO4C,MAAMhJ,KAGrC,MAAO,QAAU0rB,YAAY7jB,KAAK,MAAQ,KAE5CujB,aAAapnB,UAAU2nB,SAAW,SAASC,MACzC,OAAOA,KAAK3iB,IAAM,IAAMtF,KAAKyC,OAAOwlB,KAAKziB,8HCxKrB,+EAEtB,SAASjH,UACPyB,KAAKkoB,QAAU,GA4GjB,SAASC,mBAAmBje,UAC1BlK,KAAKooB,eAAele,SAAU,QAC9BlK,KAAKqoB,YAAYne,SAASxI,QAC1B1B,KAAKsoB,UAAUpe,SAAU,QAE3B,SAASqe,WAAWxf,OAClBof,mBAAmBprB,KAAKiD,KAAM+I,OAE9B/I,KAAKsoB,UAAUvf,MAAO,WACtB/I,KAAKsoB,UAAUvf,MAAO,WAExB,SAASyf,aAAatnB,SACpBlB,KAAKooB,eAAelnB,QAAS,QAC7BlB,KAAKqoB,YAAYnnB,QAAQQ,QACzB1B,KAAKsoB,UAAUpnB,QAAS,QAvH1B3C,QAAQ8B,UAAY,CAClBC,YAAa/B,QACbkqB,UAAU,EAGVH,UAAW,SAAS9mB,KAAMb,MACxB,IAAI6E,MAAQxF,KAAKyC,OAAOjB,KAAKb,OAC7B,GAAIX,KAAKyoB,SAAU,CAGjB,GAAIjjB,QAAUjH,QAAQ8B,UAAUmF,MAAM/D,MACpC,MAAM,IAAAV,YAAA,QAAc,yBAA2ByE,MAAM/D,KAAO,0BAA4Bd,KAAO,OAASa,KAAKC,MAE/GD,KAAKb,MAAQ6E,QAMjB4iB,eAAgB,SAAS5mB,KAAMb,MAG7B,GAFAX,KAAKsoB,UAAU9mB,KAAMb,OAEhBa,KAAKb,MACR,MAAM,IAAAI,YAAA,QAAcS,KAAKC,KAAO,aAAed,OAMnD0nB,YAAa,SAASK,OACpB,IAAK,IAAIrsB,EAAI,EAAGwP,EAAI6c,MAAM1rB,OAAQX,EAAIwP,EAAGxP,IACvC2D,KAAKsoB,UAAUI,MAAOrsB,GAEjBqsB,MAAMrsB,KACTqsB,MAAMlW,OAAOnW,EAAG,GAChBA,IACAwP,MAKNpJ,OAAQ,SAASkmB,QACf,GAAKA,OAAL,CAKA,IAAK3oB,KAAK2oB,OAAOlnB,MACf,MAAM,IAAAV,YAAA,QAAc,iBAAmB4nB,OAAOlnB,KAAMknB,QAGlD3oB,KAAK2S,SACP3S,KAAKkoB,QAAQ5jB,QAAQtE,KAAK2S,SAE5B3S,KAAK2S,QAAUgW,OAEf,IAAIrlB,IAAMtD,KAAK2oB,OAAOlnB,MAAMknB,QAI5B,OAFA3oB,KAAK2S,QAAU3S,KAAKkoB,QAAQzf,SAEvBzI,KAAKyoB,UAAYnlB,IACbA,KACU,IAARA,IACFqlB,YADF,IAKTjgB,QAAS,SAAShB,SAChB1H,KAAKqoB,YAAY3gB,QAAQiB,OAG3BsB,kBAAmBke,mBACnB7d,UAAW6d,mBAEXrf,eAAgByf,WAChBlf,eAAgBkf,WAEhB9e,iBAAkB+e,aAClBze,sBAAuB,SAAS7I,SAC9BsnB,aAAazrB,KAAKiD,KAAMkB,SAExBlB,KAAKsoB,UAAUpnB,QAAS,YAG1BqJ,iBAAkB,aAClBE,iBAAkB,aAElBN,cAAege,mBAEfpd,eAAgB,aAEhBK,cAAe,aACfE,cAAe,aACfE,eAAgB,aAChBE,iBAAkB,aAClBC,YAAa,aAEbC,KAAM,SAASjK,MACb3B,KAAKqoB,YAAY1mB,KAAK0D,QAExB2iB,SAAU,SAASC,MACjBjoB,KAAKooB,eAAeH,KAAM,2BAqBf1pB,8JChIK,wEAEpB,SAASqqB,wBAAkBnrB,QAAOoH,UAAA7H,QAAA,QAAA4F,IAAAiC,UAAA,GAAG,GAAEA,UAAA,GACrC7E,KAAKvC,QAAUA,QA6IjB,SAASorB,iBAAiBlgB,KAAMtM,EAAGysB,aACvBlmB,IAANvG,IACFA,EAAIsM,KAAK3L,QAKX,IAAI+rB,KAAOpgB,KAAKtM,EAAI,GAChB2sB,QAAUrgB,KAAKtM,EAAI,GACvB,OAAK0sB,KAIa,qBAAdA,KAAKtnB,MACCunB,UAAYF,OAAU,aAAiB,kBAAmBhnB,KAAKinB,KAAKhnB,eAD9E,EAHS+mB,OAOX,SAASG,iBAAiBtgB,KAAMtM,EAAGysB,aACvBlmB,IAANvG,IACFA,GAAK,GAGP,IAAI8pB,KAAOxd,KAAKtM,EAAI,GAChB2sB,QAAUrgB,KAAKtM,EAAI,GACvB,OAAK8pB,KAIa,qBAAdA,KAAK1kB,MACCunB,UAAYF,OAAU,aAAiB,kBAAmBhnB,KAAKqkB,KAAKpkB,eAD9E,EAHS+mB,OAeX,SAASI,UAAUvgB,KAAMtM,EAAG8sB,UAC1B,IAAIxW,QAAUhK,KAAU,MAALtM,EAAY,EAAIA,EAAI,GACvC,GAAKsW,SAA4B,qBAAjBA,QAAQlR,OAAiC0nB,WAAYxW,QAAQyW,eAA7E,CAIA,IAAIrnB,SAAW4Q,QAAQnN,MACvBmN,QAAQnN,MAAQmN,QAAQnN,MAAMN,QAAQikB,SAAY,OAAW,gBAAkB,IAC/ExW,QAAQyW,cAAgBzW,QAAQnN,QAAUzD,UAU5C,SAASsnB,SAAS1gB,KAAMtM,EAAG8sB,UACzB,IAAIxW,QAAUhK,KAAU,MAALtM,EAAYsM,KAAK3L,OAAS,EAAIX,EAAI,GACrD,GAAKsW,SAA4B,qBAAjBA,QAAQlR,OAAiC0nB,WAAYxW,QAAQ2W,cAA7E,CAKA,IAAIvnB,SAAW4Q,QAAQnN,MAGvB,OAFAmN,QAAQnN,MAAQmN,QAAQnN,MAAMN,QAAQikB,SAAY,OAAW,UAAY,IACzExW,QAAQ2W,aAAe3W,QAAQnN,QAAUzD,SAClC4Q,QAAQ2W,eA/MjBV,kBAAkBvoB,UAAY,IAAAsnB,UAAA,SAEFjf,QAAU,SAAShB,SAC7C,IAAM6hB,cAAgBvpB,KAAKvC,QAAQ+rB,iBAE/BV,QAAU9oB,KAAKypB,WACnBzpB,KAAKypB,YAAa,EAGlB,IADA,IAAI9gB,KAAOjB,QAAQiB,KACVtM,EAAI,EAAGwP,EAAIlD,KAAK3L,OAAQX,EAAIwP,EAAGxP,IAAK,CAC3C,IAAIsW,QAAUhK,KAAKtM,GACfmR,MAAQxN,KAAKyC,OAAOkQ,SAExB,GAAKnF,MAAL,CAIA,IAAIkc,kBAAoBb,iBAAiBlgB,KAAMtM,EAAGysB,QAC9Ca,kBAAoBV,iBAAiBtgB,KAAMtM,EAAGysB,QAE9Cc,eAAiBpc,MAAMoc,gBAAkBF,kBACzCG,gBAAkBrc,MAAMqc,iBAAmBF,kBAC3CG,iBAAmBtc,MAAMsc,kBAAoBJ,mBAAqBC,kBAElEnc,MAAMP,OACRic,UAAUvgB,KAAMtM,GAAG,GAEjBmR,MAAMR,MACRqc,SAAS1gB,KAAMtM,GAAG,GAGhBktB,cAAgBO,mBAClBZ,UAAUvgB,KAAMtM,GAEZgtB,SAAS1gB,KAAMtM,IAEI,qBAAjBsW,QAAQlR,OAEVkR,QAAQ9I,OAAS,YAAckgB,KAAKphB,KAAKtM,EAAI,GAAG0F,UAAU,KAI5DwnB,cAAgBK,iBAClBV,WAAWvW,QAAQjL,SAAWiL,QAAQ3J,SAASL,MAG/C0gB,SAAS1gB,KAAMtM,IAEbktB,cAAgBM,kBAElBX,UAAUvgB,KAAMtM,GAEhBgtB,UAAU1W,QAAQ3J,SAAW2J,QAAQjL,SAASiB,QAIlD,OAAOjB,SAGTkhB,kBAAkBvoB,UAAUyI,eAC5B8f,kBAAkBvoB,UAAUgJ,eAC5Buf,kBAAkBvoB,UAAU0J,sBAAwB,SAAShB,OAC3D/I,KAAKyC,OAAOsG,MAAMrB,SAClB1H,KAAKyC,OAAOsG,MAAMC,SAGlB,IAAItB,QAAUqB,MAAMrB,SAAWqB,MAAMC,QACjCA,QAAUD,MAAMrB,SAAWqB,MAAMC,QACjCghB,aAAehhB,QACfihB,YAAcjhB,QAElB,GAAIA,SAAWA,QAAQqW,QAIrB,IAHA2K,aAAehhB,QAAQL,KAAK,GAAGjB,QAGxBuiB,YAAY5K,SACjB4K,YAAcA,YAAYthB,KAAKshB,YAAYthB,KAAK3L,OAAS,GAAG0K,QAIhE,IAAI8F,MAAQ,CACVR,KAAMjE,MAAM8E,UAAUb,KACtBC,MAAOlE,MAAMgF,WAAWd,MAIxB2c,eAAgBX,iBAAiBvhB,QAAQiB,MACzCkhB,gBAAiBhB,kBAAkBmB,cAAgBtiB,SAASiB,OAO9D,GAJII,MAAM8E,UAAUZ,OAClBic,UAAUxhB,QAAQiB,KAAM,MAAM,GAG5BK,QAAS,CACX,IAAI8E,aAAe/E,MAAM+E,aAErBA,aAAad,MACfqc,SAAS3hB,QAAQiB,KAAM,MAAM,GAG3BmF,aAAab,OACfic,UAAUc,aAAarhB,KAAM,MAAM,GAEjCI,MAAMgF,WAAWf,MACnBqc,SAASY,YAAYthB,KAAM,MAAM,IAI9B3I,KAAKvC,QAAQ+rB,kBACXX,iBAAiBnhB,QAAQiB,OACzBsgB,iBAAiBe,aAAarhB,QACnC0gB,SAAS3hB,QAAQiB,MACjBugB,UAAUc,aAAarhB,YAEhBI,MAAMgF,WAAWf,MAC1Bqc,SAAS3hB,QAAQiB,KAAM,MAAM,GAG/B,OAAO6E,OAGTob,kBAAkBvoB,UAAUiK,UAC5Bse,kBAAkBvoB,UAAU4J,kBAAoB,SAASC,UACvD,OAAOA,SAASsD,OAGlBob,kBAAkBvoB,UAAUoJ,iBACxBmf,kBAAkBvoB,UAAUoK,iBAAmB,SAASjJ,MAE1D,IAAIgM,MAAQhM,KAAKgM,OAAS,GAC1B,MAAO,CACLsc,kBAAkB,EAClB9c,KAAMQ,MAAMR,KACZC,MAAOO,MAAMP,wBA4EF2b,8KCrNR,SAAmCsB,UACxCC,mBAAA,QAAeD,6CAHU,4NCAN,4BAEN,SAASA,UACtBA,SAAS9oB,kBAAkB,SAAU,SAASR,GAAIwpB,MAAOC,UAAW5sB,SAClE,IAAI6F,IAAM1C,GAeV,OAdKwpB,MAAMtqB,WACTsqB,MAAMtqB,SAAW,GACjBwD,IAAM,SAAS8C,QAAS3I,SAEtB,IAAIsE,SAAWsoB,UAAUvqB,SACzBuqB,UAAUvqB,SAAWe,OAAA/B,OAAO,GAAIiD,SAAUqoB,MAAMtqB,UAChD,IAAIwD,IAAM1C,GAAGwF,QAAS3I,SAEtB,OADA4sB,UAAUvqB,SAAWiC,SACduB,MAIX8mB,MAAMtqB,SAASrC,QAAQ8J,KAAK,IAAM9J,QAAQmD,GAEnC0C,gIClBX,IAAMgnB,WAAa,CAAC,cAAe,WAAY,aAAc,UAAW,OAAQ,SAAU,SAE1F,SAASrrB,UAAUsrB,QAAS/oB,MAC1B,IAAI4B,IAAM5B,MAAQA,KAAK4B,IACnBS,UAAIjB,EACJkB,YAAMlB,EACNQ,MAIFmnB,SAAW,OAHX1mB,KAAOT,IAAIwB,MAAMf,MAGS,KAF1BC,OAASV,IAAIwB,MAAMd,SAQrB,IAHA,IAAI0mB,IAAM7tB,MAAM0D,UAAUC,YAAYvD,KAAKiD,KAAMuqB,SAGxCE,IAAM,EAAGA,IAAMH,WAAWttB,OAAQytB,MACzCzqB,KAAKsqB,WAAWG,MAAQD,IAAIF,WAAWG,MAIrC9tB,MAAM+tB,mBACR/tB,MAAM+tB,kBAAkB1qB,KAAMf,WAGhC,IACMmE,MACFpD,KAAK2qB,WAAa9mB,KAId+mB,OAAOC,eACTD,OAAOC,eAAe7qB,KAAM,SAAU,CACpCwF,MAAO1B,OACPgnB,YAAY,IAGd9qB,KAAK8D,OAASA,QAGlB,MAAOinB,OAKX9rB,UAAUoB,UAAY,IAAI1D,sBAEXsC,uOCxCR,SAAgCirB,UACrCc,4BAAA,QAA2Bd,UAC3Be,cAAA,QAAaf,UACbgB,uBAAA,QAAsBhB,UACtBiB,YAAA,QAAWjB,UACXkB,aAAA,QAAYlB,UACZmB,gBAAA,QAAenB,UACfoB,cAAA,QAAapB,0EAfwB,gFACd,yEACS,wEACX,6DACC,iEACG,kEACF,uRCN6B,4BAEvC,SAASA,UACtBA,SAASxpB,eAAe,qBAAsB,SAAS0F,QAAS3I,SAC9D,IAAIuL,QAAUvL,QAAQuL,QAClBpI,GAAKnD,QAAQmD,GAEjB,IAAgB,IAAZwF,QACF,OAAOxF,GAAGZ,MACL,IAAgB,IAAZoG,SAAgC,MAAXA,QAC9B,OAAO4C,QAAQhJ,MACV,GAAIa,OAAAwC,QAAQ+C,SACjB,OAAqB,EAAjBA,QAAQpJ,QACNS,QAAQiX,MACVjX,QAAQiX,IAAM,CAACjX,QAAQkD,OAGlBupB,SAASrqB,QAAQ4E,KAAK2B,QAAS3I,UAE/BuL,QAAQhJ,MAGjB,GAAIvC,QAAQmI,MAAQnI,QAAQiX,IAAK,CAC/B,IAAI9O,KAAO/E,OAAAS,YAAY7D,QAAQmI,MAC/BA,KAAK2lB,YAAc1qB,OAAA2qB,kBAAkB/tB,QAAQmI,KAAK2lB,YAAa9tB,QAAQkD,MACvElD,QAAU,CAACmI,KAAMA,MAGnB,OAAOhF,GAAGwF,QAAS3I,4JC5BsD,+BACzD,+FAEP,SAASysB,UACtBA,SAASxpB,eAAe,OAAQ,SAAS0F,QAAS3I,SAChD,IAAKA,QACH,MAAM,IAAAsD,YAAA,QAAc,+BAGtB,IAAIH,GAAKnD,QAAQmD,GACboI,QAAUvL,QAAQuL,QAClB3M,EAAI,EACJiH,IAAM,GACNsC,UAAIhD,EACJ2oB,iBAAW3oB,EAYf,SAAS6oB,cAAcC,MAAOrV,MAAOsV,MAC/B/lB,OACFA,KAAKN,IAAMomB,MACX9lB,KAAKyQ,MAAQA,MACbzQ,KAAKgmB,MAAkB,IAAVvV,MACbzQ,KAAK+lB,OAASA,KAEVJ,cACF3lB,KAAK2lB,YAAcA,YAAcG,QAIrCpoB,KAAY1C,GAAGwF,QAAQslB,OAAQ,CAC7B9lB,KAAMA,KACNa,YAAa5F,OAAA4F,YAAY,CAACL,QAAQslB,OAAQA,OAAQ,CAACH,YAAcG,MAAO,SAI5E,GA5BIjuB,QAAQmI,MAAQnI,QAAQiX,MAC1B6W,YAAc1qB,OAAA2qB,kBAAkB/tB,QAAQmI,KAAK2lB,YAAa9tB,QAAQiX,IAAI,IAAM,KAG1E7T,OAAAgrB,WAAWzlB,WAAYA,QAAUA,QAAQrJ,KAAKiD,OAE9CvC,QAAQmI,OACVA,KAAO/E,OAAAS,YAAY7D,QAAQmI,OAqBzBQ,SAA8B,iBAAZA,QACpB,GAAIvF,OAAAwC,QAAQ+C,SACV,IAAK,IAAI0lB,EAAI1lB,QAAQpJ,OAAQX,EAAIyvB,EAAGzvB,IAC9BA,KAAK+J,SACPqlB,cAAcpvB,EAAGA,EAAGA,IAAM+J,QAAQpJ,OAAS,OAG1C,CACL,IAAI+uB,cAAQnpB,EAEZ,IAAK,IAAI0C,OAAOc,QACVA,QAAQb,eAAeD,YAIR1C,IAAbmpB,UACFN,cAAcM,SAAU1vB,EAAI,GAE9B0vB,SAAWzmB,IACXjJ,UAGauG,IAAbmpB,UACFN,cAAcM,SAAU1vB,EAAI,GAAG,GASrC,OAJU,IAANA,IACFiH,IAAM0F,QAAQhJ,OAGTsD,6KC5EW,+FAEP,SAAS4mB,UACtBA,SAASxpB,eAAe,gBAAiB,WACvC,GAAyB,IAArBmE,UAAU7H,OAKZ,MAAM,IAAA+D,YAAA,QAAc,oBAAsB8D,UAAUA,UAAU7H,OAAS,GAAG2D,KAAO,wJCTrD,4BAEnB,SAASupB,UACtBA,SAASxpB,eAAe,KAAM,SAASsrB,YAAavuB,SAMlD,OALIoD,OAAAgrB,WAAWG,eAAgBA,YAAcA,YAAYjvB,KAAKiD,QAKxDvC,QAAQkE,KAAKsqB,cAAgBD,aAAgBnrB,OAAAwD,QAAQ2nB,aAClDvuB,QAAQuL,QAAQhJ,MAEhBvC,QAAQmD,GAAGZ,QAItBkqB,SAASxpB,eAAe,SAAU,SAASsrB,YAAavuB,SACtD,OAAOysB,SAASrqB,QAAY,GAAE9C,KAAKiD,KAAMgsB,YAAa,CAACprB,GAAInD,QAAQuL,QAASA,QAASvL,QAAQmD,GAAIe,KAAMlE,QAAQkE,mJCjBpG,SAASuoB,UACtBA,SAASxpB,eAAe,MAAO,WAG7B,IAFA,IAAI6G,KAAO,MAAC3E,GACRnF,QAAUoH,UAAUA,UAAU7H,OAAS,GAClCX,EAAI,EAAGA,EAAIwI,UAAU7H,OAAS,EAAGX,IACxCkL,KAAK/D,KAAKqB,UAAUxI,IAGtB,IAAI6vB,MAAQ,EACc,MAAtBzuB,QAAQkE,KAAKuqB,MACfA,MAAQzuB,QAAQkE,KAAKuqB,MACZzuB,QAAQmI,MAA8B,MAAtBnI,QAAQmI,KAAKsmB,QACtCA,MAAQzuB,QAAQmI,KAAKsmB,OAEvB3kB,KAAK,GAAK2kB,MAEVhC,SAASzpB,IAAG+P,MAAZ0Z,SAAiB3iB,qIChBN,SAAS2iB,UACtBA,SAASxpB,eAAe,SAAU,SAAS0E,IAAKsmB,OAC9C,OAAKtmB,IAGS,gBAAVsmB,OAA4BtmB,IAAI+mB,qBAAqBT,OAGlDtmB,IAAIsmB,YAHX,EAFStmB,sICHkE,4BAEhE,SAAS8kB,UACtBA,SAASxpB,eAAe,OAAQ,SAAS0F,QAAS3I,SAC5CoD,OAAAgrB,WAAWzlB,WAAYA,QAAUA,QAAQrJ,KAAKiD,OAElD,IAAIY,GAAKnD,QAAQmD,GAEjB,GAAKC,OAAAwD,QAAQ+B,SAYX,OAAO3I,QAAQuL,QAAQhJ,MAXvB,IAAI4F,KAAOnI,QAAQmI,KAMnB,OALInI,QAAQmI,MAAQnI,QAAQiX,OAC1B9O,KAAO/E,OAAAS,YAAY7D,QAAQmI,OACtB2lB,YAAc1qB,OAAA2qB,kBAAkB/tB,QAAQmI,KAAK2lB,YAAa9tB,QAAQiX,IAAI,KAGtE9T,GAAGwF,QAAS,CACjBR,KAAMA,KACNa,YAAa5F,OAAA4F,YAAY,CAACL,SAAU,CAACR,MAAQA,KAAK2lB,+JCjBpC,WAElBhrB,OAAS,CACX6rB,UAAW,CAAC,QAAS,OAAQ,OAAQ,SACrCF,MAAO,OAGPG,YAAa,SAASH,OACpB,GAAqB,iBAAVA,MAAoB,CAC7B,IAAII,SAAWzrB,OAAA2L,QAAQjM,OAAO6rB,UAAWF,MAAMK,eAE7CL,MADc,GAAZI,SACMA,SAEAE,SAASN,MAAO,IAI5B,OAAOA,OAITzrB,IAAK,SAASyrB,OAGZ,GAFAA,MAAQ3rB,OAAO8rB,YAAYH,OAEJ,oBAAZO,SAA2BlsB,OAAO8rB,YAAY9rB,OAAO2rB,QAAUA,MAAO,CAC/E,IAAIQ,OAASnsB,OAAO6rB,UAAUF,OACzBO,QAAQC,UACXA,OAAS,qCANSnC,QAAOvF,MAAA,EAAA2H,KAAAA,KAAA,EAAA,GAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAPrC,QAAOqC,KAAA,GAAA/nB,UAAA+nB,MAQ3BH,QAAQC,QAAMlc,MAAdic,QAAmBlC,4BAKVhqB,iKCjCA,SAASssB,YAEtB,IAAI7U,UAAyB,IAAX8U,OAAyBA,OAASC,OAChDC,YAAchV,KAAK6U,WAEvBA,WAAWI,WAAa,WAItB,OAHIjV,KAAK6U,aAAeA,aACtB7U,KAAK6U,WAAaG,aAEbH,iQCNJ,SAAuB7d,cAC5B,IAAMke,iBAAmBle,cAAgBA,aAAa,IAAM,EACtDme,gBAAeje,MAAAC,kBAErB,GAAI+d,mBAAqBC,gBAAiB,CACxC,GAAID,iBAAmBC,gBAAiB,CACtC,IAAMC,gBAAkBle,MAAAE,iBAAiB+d,iBACnCE,iBAAmBne,MAAAE,iBAAiB8d,kBAC1C,MAAM,IAAAnsB,YAAA,QAAc,6IAC0CqsB,gBAAkB,oDAAsDC,iBAAmB,MAGzJ,MAAM,IAAAtsB,YAAA,QAAc,wIACsCiO,aAAa,GAAK,yBAK3E,SAAkB7I,aAAcR,KAErC,IAAKA,IACH,MAAM,IAAA5E,YAAA,QAAc,qCAEtB,IAAKoF,eAAiBA,aAAayK,KACjC,MAAM,IAAA7P,YAAA,QAAc,mCAAqCoF,cAG3DA,aAAayK,KAAKtH,UAAYnD,aAAa0K,OAI3ClL,IAAIvG,GAAGkuB,cAAcnnB,aAAac,UAoClC,IAAIojB,UAAY,CACd1f,OAAQ,SAASvF,IAAKzE,MACpB,KAAMA,QAAQyE,KACZ,MAAM,IAAArE,YAAA,QAAc,IAAMJ,KAAO,oBAAsByE,KAEzD,OAAOA,IAAIzE,OAEbyH,OAAQ,SAAS1B,OAAQ/F,MAEvB,IADA,IAAM4C,IAAMmD,OAAO1J,OACVX,EAAI,EAAGA,EAAIkH,IAAKlH,IACvB,GAAIqK,OAAOrK,IAAyB,MAAnBqK,OAAOrK,GAAGsE,MACzB,OAAO+F,OAAOrK,GAAGsE,OAIvB4sB,OAAQ,SAAS5a,QAASvM,SACxB,MAA0B,mBAAZuM,QAAyBA,QAAQ5V,KAAKqJ,SAAWuM,SAGjExT,iBAAkBR,MAAMQ,iBACxB0W,cAtDF,SAA8B3U,QAASkF,QAAS3I,SAC1CA,QAAQkE,OACVyE,QAAUzH,MAAMG,OAAO,GAAIsH,QAAS3I,QAAQkE,MACxClE,QAAQiX,MACVjX,QAAQiX,IAAI,IAAK,IAIrBxT,QAAUyE,IAAIvG,GAAGouB,eAAezwB,KAAKiD,KAAMkB,QAASkF,QAAS3I,SAC7D,IAAI8K,OAAS5C,IAAIvG,GAAGyW,cAAc9Y,KAAKiD,KAAMkB,QAASkF,QAAS3I,SAEjD,MAAV8K,QAAkB5C,IAAIpI,UACxBE,QAAQqC,SAASrC,QAAQkD,MAAQgF,IAAIpI,QAAQ2D,QAASiF,aAAa6K,gBAAiBrL,KACpF4C,OAAS9K,QAAQqC,SAASrC,QAAQkD,MAAMyF,QAAS3I,UAEnD,CAAA,GAAc,MAAV8K,OAcF,MAAM,IAAAxH,YAAA,QAAc,eAAiBtD,QAAQkD,KAAO,4DAbpD,GAAIlD,QAAQoM,OAAQ,CAElB,IADA,IAAI8b,MAAQpd,OAAOkP,MAAM,MAChBpb,EAAI,EAAGwP,EAAI8Z,MAAM3oB,OAAQX,EAAIwP,IAC/B8Z,MAAMtpB,IAAMA,EAAI,IAAMwP,GADYxP,IAKvCspB,MAAMtpB,GAAKoB,QAAQoM,OAAS8b,MAAMtpB,GAEpCkM,OAASod,MAAMzhB,KAAK,MAEtB,OAAOqE,SA6BT3H,GAAI,SAASvE,GACX,IAAIiH,IAAM6C,aAAa9J,GAEvB,OADAiH,IAAIgG,UAAYnD,aAAa9J,EAAI,MAC1BiH,KAGTqM,SAAU,GACVjI,QAAS,SAASrL,EAAGuJ,KAAM6nB,oBAAqBhnB,YAAaC,QAC3D,IAAIgnB,eAAiB1tB,KAAK2P,SAAStT,GAC/BuE,GAAKZ,KAAKY,GAAGvE,GAMjB,OALIuJ,MAAQc,QAAUD,aAAegnB,oBACnCC,eAAiBC,YAAY3tB,KAAM3D,EAAGuE,GAAIgF,KAAM6nB,oBAAqBhnB,YAAaC,QACxEgnB,iBACVA,eAAiB1tB,KAAK2P,SAAStT,GAAKsxB,YAAY3tB,KAAM3D,EAAGuE,KAEpD8sB,gBAGT9nB,KAAM,SAASJ,MAAOtD,OACpB,KAAOsD,OAAStD,SACdsD,MAAQA,MAAMooB,QAEhB,OAAOpoB,OAETjB,MAAO,SAASgI,MAAOshB,QACrB,IAAIzoB,IAAMmH,OAASshB,OAMnB,OAJIthB,OAASshB,QAAWthB,QAAUshB,SAChCzoB,IAAMzG,MAAMG,OAAO,GAAI+uB,OAAQthB,QAG1BnH,KAGT0oB,YAAalD,OAAOmD,KAAK,IAEzBC,KAAMroB,IAAIvG,GAAG4uB,KACbhf,aAAc7I,aAAac,UAG7B,SAAS3D,IAAI8C,aAAS3I,QAAOoH,UAAA7H,QAAA,QAAA4F,IAAAiC,UAAA,GAAG,GAAEA,UAAA,GAC5Be,KAAOnI,QAAQmI,KAEnBtC,IAAIgD,OAAO7I,UACNA,QAAQyD,SAAWiF,aAAa4K,UACnCnL,KA+HN,SAAkBQ,QAASR,MACpBA,MAAU,SAAUA,QACvBA,KAAOA,KAAOsJ,MAAA5N,YAAYsE,MAAQ,IAC7BoS,KAAO5R,SAEd,OAAOR,KApIIqoB,CAAS7nB,QAASR,OAE3B,IAAIc,YAAM9D,EACN6D,YAAcN,aAAaoK,eAAiB,QAAK3N,EASrD,SAASgO,KAAKxK,SACZ,MAAO,GAAKD,aAAayK,KAAKyZ,UAAWjkB,QAASikB,UAAUxqB,QAASwqB,UAAUvqB,SAAU8F,KAAMa,YAAaC,QAG9G,OAZIP,aAAaL,YAEbY,OADEjJ,QAAQiJ,OACDN,SAAW3I,QAAQiJ,OAAO,GAAK,CAACN,SAASoL,OAAO/T,QAAQiJ,QAAUjJ,QAAQiJ,OAE1E,CAACN,WAOdwK,KAAOsd,kBAAkB/nB,aAAayK,KAAMA,KAAMyZ,UAAW5sB,QAAQiJ,QAAU,GAAId,KAAMa,cAC7EL,QAAS3I,SA+BvB,OA7BA6F,IAAI6qB,OAAQ,EAEZ7qB,IAAIgD,OAAS,SAAS7I,SACfA,QAAQyD,SAUXmpB,UAAUxqB,QAAUpC,QAAQoC,QAC5BwqB,UAAUvqB,SAAWrC,QAAQqC,SAC7BuqB,UAAUtqB,WAAatC,QAAQsC,aAX/BsqB,UAAUxqB,QAAUwqB,UAAU9lB,MAAM9G,QAAQoC,QAAS8F,IAAI9F,SAErDsG,aAAaqC,aACf6hB,UAAUvqB,SAAWuqB,UAAU9lB,MAAM9G,QAAQqC,SAAU6F,IAAI7F,YAEzDqG,aAAaqC,YAAcrC,aAAaqD,iBAC1C6gB,UAAUtqB,WAAasqB,UAAU9lB,MAAM9G,QAAQsC,WAAY4F,IAAI5F,eASrEuD,IAAIkD,OAAS,SAASnK,EAAGuJ,KAAMa,YAAaC,QAC1C,GAAIP,aAAaoK,iBAAmB9J,YAClC,MAAM,IAAA1F,YAAA,QAAc,0BAEtB,GAAIoF,aAAaL,YAAcY,OAC7B,MAAM,IAAA3F,YAAA,QAAc,2BAGtB,OAAO4sB,YAAYtD,UAAWhuB,EAAG8J,aAAa9J,GAAIuJ,KAAM,EAAGa,YAAaC,SAEnEpD,4DA0BF,SAAwBpC,QAASkF,QAAS3I,SAC1CyD,QAMOA,QAAQnE,MAASU,QAAQkD,OAEnClD,QAAQkD,KAAOO,QACfA,QAAUzD,QAAQqC,SAASoB,UAPzBA,QADmB,mBAAjBzD,QAAQkD,KACAlD,QAAQmI,KAAK,iBAEbnI,QAAQqC,SAASrC,QAAQkD,MAOvC,OAAOO,+BAGF,SAAuBA,QAASkF,QAAS3I,SAE9C,IAAM2wB,oBAAsB3wB,QAAQmI,MAAQnI,QAAQmI,KAAK,iBACzDnI,QAAQyD,SAAU,EACdzD,QAAQiX,MACVjX,QAAQmI,KAAK2lB,YAAc9tB,QAAQiX,IAAI,IAAMjX,QAAQmI,KAAK2lB,aAG5D,IAAIvhB,kBAAYpH,EACZnF,QAAQmD,IAAMnD,QAAQmD,KAAOotB,iBAC/BvwB,QAAQmI,KAAOsJ,MAAA5N,YAAY7D,QAAQmI,MAEnC,IAAIhF,GAAKnD,QAAQmD,GACjBoJ,aAAevM,QAAQmI,KAAK,iBAAmB,SAA6BQ,aAAS3I,QAAOoH,UAAA7H,QAAA,QAAA4F,IAAAiC,UAAA,GAAG,GAAEA,UAAA,GAM/F,OAFApH,QAAQmI,KAAOsJ,MAAA5N,YAAY7D,QAAQmI,MACnCnI,QAAQmI,KAAK,iBAAmBwoB,oBACzBxtB,GAAGwF,QAAS3I,UAEjBmD,GAAGd,WACLrC,QAAQqC,SAAWnB,MAAMG,OAAO,GAAIrB,QAAQqC,SAAUc,GAAGd,mBAI7C8C,IAAZ1B,SAAyB8I,eAC3B9I,QAAU8I,cAGZ,CAAA,QAAgBpH,IAAZ1B,QACF,MAAM,IAAAH,YAAA,QAAc,eAAiBtD,QAAQkD,KAAO,uBAC/C,GAAIO,mBAAmBwP,SAC5B,OAAOxP,QAAQkF,QAAS3I,qCAnQhBkB,2MAAKD,SAAM,+BACD,4FAC2C,UA0L1D,SAASivB,YAAYtD,UAAWhuB,EAAGuE,GAAIgF,KAAM6nB,oBAAqBhnB,YAAaC,QACpF,SAAS2nB,KAAKjoB,aAAS3I,QAAOoH,UAAA7H,QAAA,QAAA4F,IAAAiC,UAAA,GAAG,GAAEA,UAAA,GAC7BypB,cAAgB5nB,OAKpB,OAJIA,QAAUN,SAAWM,OAAO,IAAQN,UAAYikB,UAAUyD,aAA6B,OAAdpnB,OAAO,KAClF4nB,cAAgB,CAACloB,SAASoL,OAAO9K,SAG5B9F,GAAGypB,UACNjkB,QACAikB,UAAUxqB,QAASwqB,UAAUvqB,SAC7BrC,QAAQmI,MAAQA,KAChBa,aAAe,CAAChJ,QAAQgJ,aAAa+K,OAAO/K,aAC5C6nB,eAQN,OALAD,KAAOH,kBAAkBttB,GAAIytB,KAAMhE,UAAW3jB,OAAQd,KAAMa,cAEvDiB,QAAUrL,EACfgyB,KAAKnsB,MAAQwE,OAASA,OAAO1J,OAAS,EACtCqxB,KAAK5nB,YAAcgnB,qBAAuB,EACnCY,KAuDF,SAASL,OAAS,MAAO,GAUhC,SAASE,kBAAkBttB,GAAIytB,KAAMhE,UAAW3jB,OAAQd,KAAMa,aAC5D,GAAI7F,GAAG0I,UAAW,CAChB,IAAI8gB,MAAQ,GACZiE,KAAOztB,GAAG0I,UAAU+kB,KAAMjE,MAAOC,UAAW3jB,QAAUA,OAAO,GAAId,KAAMa,YAAaC,QACpF/H,MAAMG,OAAOuvB,KAAMjE,OAErB,OAAOiE,qGCtRT,SAAStvB,WAAWsM,QAClBrL,KAAKqL,OAASA,6BAGhBtM,WAAWsB,UAAUS,SAAW/B,WAAWsB,UAAUkuB,OAAS,WAC5D,MAAO,GAAKvuB,KAAKqL,wBAGJtM,6JC4CR,SAAiB2pB,MAAOljB,OAC7B,IAAK,IAAInJ,EAAI,EAAGkH,IAAMmlB,MAAM1rB,OAAQX,EAAIkH,IAAKlH,IAC3C,GAAIqsB,MAAMrsB,KAAOmJ,MACf,OAAOnJ,EAGX,OAAQ,4BAIH,SAA0BgP,QAC/B,GAAsB,iBAAXA,OAAqB,CAE9B,GAAIA,QAAUA,OAAOkjB,OACnB,OAAOljB,OAAOkjB,SACT,GAAc,MAAVljB,OACT,MAAO,GACF,IAAKA,OACV,OAAOA,OAAS,GAMlBA,OAAS,GAAKA,OAGhB,OAAKmjB,SAAS1sB,KAAKuJ,QACZA,OAAOnG,QAAQupB,SAAUC,YADKrjB,wBAIhC,SAAiB7F,OACtB,OAAKA,OAAmB,IAAVA,UAEHnC,QAAQmC,QAA2B,IAAjBA,MAAMxI,6BAO9B,SAAqB2rB,QAC1B,IAAIgG,MAAQ7vB,OAAO,GAAI6pB,QAEvB,OADAgG,MAAMf,QAAUjF,OACTgG,2BAGF,SAAqBjtB,OAAQgT,KAElC,OADAhT,OAAOG,KAAO6S,IACPhT,kCAGF,SAA2B6pB,YAAavV,IAC7C,OAAQuV,YAAcA,YAAc,IAAM,IAAMvV,IA1GlD,IAAM4Y,OAAS,CACbC,IAAK,QACLC,IAAK,OACLC,IAAK,OACLC,IAAK,SACLC,IAAK,SACLC,IAAK,SACLC,IAAK,UAGDV,SAAW,aACXD,SAAW,YAEjB,SAASE,WAAWU,KAClB,OAAOR,OAAOQ,KAGT,SAAStwB,OAAOsG,KACrB,IAAK,IAAI/I,EAAI,EAAGA,EAAIwI,UAAU7H,OAAQX,IACpC,IAAK,IAAIiJ,OAAOT,UAAUxI,GACpBuuB,OAAOvqB,UAAUkF,eAAexI,KAAK8H,UAAUxI,GAAIiJ,OACrDF,IAAIE,KAAOT,UAAUxI,GAAGiJ,MAK9B,OAAOF,IAGF,IAAItE,SAAW8pB,OAAOvqB,UAAUS,mCAKvC,IAAI+qB,WAAa,SAASrmB,OACxB,MAAwB,mBAAVA,OAIZqmB,WAAW,OACb/uB,QAIM+uB,WAJNA,WAAa,SAASrmB,OACpB,MAAwB,mBAAVA,OAAiD,sBAAzB1E,SAAS/D,KAAKyI,iBAGhDqmB,WAAAA,WAID,IAAMxoB,QAAU2hB,MAAM3hB,SAAW,SAASmC,OAC/C,SAAOA,OAA2B,iBAAVA,QAA+C,mBAAzB1E,SAAS/D,KAAKyI,0EC3C9D,IAAAoS,WAAApb,QAAA,0BAAA,QAEA6yB,QAAA7yB,QAAA,2CAOA,SAAA8yB,UAAApyB,OAAAqyB,UACA,IACAC,eADAhzB,QAAA,MACAizB,aAAAF,SAAA,QACAryB,OAAAJ,QAAA8a,WAAAra,QAAAiyB,gBATA5X,WAAA6P,aAAA4H,QAAA5H,aACA7P,WAAA8X,MAAAL,QAAAK,MAEAxyB,OAAAJ,QAAA8a,gBASA,IAAApb,SAAAA,QAAAmzB,aACAnzB,QAAAmzB,WAAA,eAAAL,UACA9yB,QAAAmzB,WAAA,QAAAL,iIChBA,IAAAM,KAAApzB,QAAA,UACAqzB,IAAAjF,OAAAvqB,UAAAkF,eACAuqB,aAAA,oBAAAC,IAQA,SAAAC,WACAhwB,KAAAiwB,OAAA,GACAjwB,KAAAkwB,KAAAJ,aAAA,IAAAC,IAAAnF,OAAAvtB,OAAA,MAMA2yB,SAAAG,UAAA,SAAAC,OAAAC,kBAEA,IADA,IAAAC,IAAA,IAAAN,SACA3zB,EAAA,EAAAkH,IAAA6sB,OAAApzB,OAAAX,EAAAkH,IAAAlH,IACAi0B,IAAArsB,IAAAmsB,OAAA/zB,GAAAg0B,kBAEA,OAAAC,KASAN,SAAA3vB,UAAAkwB,KAAA,WACA,OAAAT,aAAA9vB,KAAAkwB,KAAAK,KAAA3F,OAAA4F,oBAAAxwB,KAAAkwB,MAAAlzB,QAQAgzB,SAAA3vB,UAAA4D,IAAA,SAAAwsB,KAAAJ,kBACA,IAAAK,KAAAZ,aAAAW,KAAAb,KAAAe,YAAAF,MACAG,YAAAd,aAAA9vB,KAAA6vB,IAAAY,MAAAZ,IAAA9yB,KAAAiD,KAAAkwB,KAAAQ,MACAjG,IAAAzqB,KAAAiwB,OAAAjzB,OACA4zB,cAAAP,kBACArwB,KAAAiwB,OAAAzsB,KAAAitB,MAEAG,cACAd,aACA9vB,KAAAkwB,KAAAI,IAAAG,KAAAhG,KAEAzqB,KAAAkwB,KAAAQ,MAAAjG,MAUAuF,SAAA3vB,UAAAwvB,IAAA,SAAAY,MACA,GAAAX,aACA,OAAA9vB,KAAAkwB,KAAAL,IAAAY,MAEA,IAAAC,KAAAd,KAAAe,YAAAF,MACA,OAAAZ,IAAA9yB,KAAAiD,KAAAkwB,KAAAQ,OASAV,SAAA3vB,UAAAmM,QAAA,SAAAikB,MACA,GAAAX,aAAA,CACA,IAAArF,IAAAzqB,KAAAkwB,KAAAW,IAAAJ,MACA,GAAA,GAAAhG,IACA,OAAAA,QAEA,CACA,IAAAiG,KAAAd,KAAAe,YAAAF,MACA,GAAAZ,IAAA9yB,KAAAiD,KAAAkwB,KAAAQ,MACA,OAAA1wB,KAAAkwB,KAAAQ,MAIA,MAAA,IAAA/zB,MAAA,IAAA8zB,KAAA,yBAQAT,SAAA3vB,UAAAywB,GAAA,SAAAC,MACA,GAAA,GAAAA,MAAAA,KAAA/wB,KAAAiwB,OAAAjzB,OACA,OAAAgD,KAAAiwB,OAAAc,MAEA,MAAA,IAAAp0B,MAAA,yBAAAo0B,OAQAf,SAAA3vB,UAAA2wB,QAAA,WACA,OAAAhxB,KAAAiwB,OAAAtpB,SAGA7J,QAAAkzB,SAAAA,8DCnFA,IAAAiB,OAAAz0B,QAAA,YAsDAM,QAAAo0B,OAAA,SAAAC,QAMA,IALA,IACAC,MADAC,QAAA,GAGAC,IA3BA,SAAAH,QACA,OAAAA,OAAA,EACA,IAAAA,QAAA,GACA,GAAAA,QAAA,GAwBAI,CAAAJ,QAGAC,MAzCAI,GAyCAF,IAEA,GADAA,OAhDA,KAoDAF,OAjDA,IAmDAC,SAAAJ,OAAAC,OAAAE,OACA,EAAAE,MAEA,OAAAD,SAOAv0B,QAAA20B,OAAA,SAAAhB,KAAAiB,OAAAC,WACA,IAGAC,aAAAR,MAvCAD,OAEAU,QAkCAC,OAAArB,KAAAzzB,OACAuL,OAAA,EACAE,MAAA,EAGA,EAAA,CACA,GAAAqpB,QAAAJ,OACA,MAAA,IAAA/0B,MAAA,8CAIA,IAAA,KADAy0B,MAAAH,OAAAQ,OAAAhB,KAAAsB,WAAAL,YAEA,MAAA,IAAA/0B,MAAA,yBAAA8zB,KAAAvjB,OAAAwkB,OAAA,IAGAE,gBA7EA,GA6EAR,OAEA7oB,SADA6oB,OA3EAI,KA4EA/oB,MACAA,OAnFA,QAoFAmpB,cAEAD,UAAAnsB,OAvDAqsB,SAFAV,OAyDA5oB,SAvDA,EADA,IAAA,EAAA4oB,SAGAU,QACAA,SAqDAF,UAAAK,KAAAN,+DCnIA,IAAAO,aAAA,mEAAAxa,MAAA,IAKA3a,QAAAo0B,OAAA,SAAA3lB,QACA,GAAA,GAAAA,QAAAA,OAAA0mB,aAAAj1B,OACA,OAAAi1B,aAAA1mB,QAEA,MAAA,IAAA2mB,UAAA,6BAAA3mB,SAOAzO,QAAA20B,OAAA,SAAAU,UAiBA,OAhBA,IAgBAA,UAAAA,UAfA,GAgBAA,SAjBA,GAGA,IAkBAA,UAAAA,UAjBA,IAkBAA,SAnBA,GASA,GANA,IAoBAA,UAAAA,UAnBA,GAoBAA,SArBA,GAOA,GAJA,IAsBAA,SACA,GAtBA,IA0BAA,SACA,IAIA,6CC1DAr1B,QAAAs1B,qBAAA,EACAt1B,QAAAu1B,kBAAA,EAgFAv1B,QAAAw1B,OAAA,SAAAC,QAAAC,UAAAC,SAAAC,OACA,GAAA,IAAAF,UAAAx1B,OACA,OAAA,EAGA,IAAAqZ,MAtEA,SAAAsc,gBAAAC,KAAAC,MAAAN,QAAAC,UAAAC,SAAAC,OAUA,IAAAI,IAAAC,KAAAC,OAAAH,MAAAD,MAAA,GAAAA,KACAK,IAAAR,SAAAF,QAAAC,UAAAM,MAAA,GACA,OAAA,IAAAG,IAEAH,IAEA,EAAAG,IAEA,EAAAJ,MAAAC,IAEAH,gBAAAG,IAAAD,MAAAN,QAAAC,UAAAC,SAAAC,OAKAA,OAAA51B,QAAAu1B,kBACAQ,MAAAL,UAAAx1B,OAAA61B,OAAA,EAEAC,IAKA,EAAAA,IAAAF,KAEAD,gBAAAC,KAAAE,IAAAP,QAAAC,UAAAC,SAAAC,OAIAA,OAAA51B,QAAAu1B,kBACAS,IAEAF,KAAA,GAAA,EAAAA,KA4BAD,EAAA,EAAAH,UAAAx1B,OAAAu1B,QAAAC,UACAC,SAAAC,OAAA51B,QAAAs1B,sBACA,GAAA/b,MAAA,EACA,OAAA,EAMA,KAAA,GAAAA,MAAA,GACA,IAAAoc,SAAAD,UAAAnc,OAAAmc,UAAAnc,MAAA,IAAA,MAGAA,MAGA,OAAAA,iDCtGA,IAAAuZ,KAAApzB,QAAA,UAqBA,SAAA02B,cACAlzB,KAAAiwB,OAAA,GACAjwB,KAAAmzB,SAAA,EAEAnzB,KAAAozB,MAAA,CAAAC,eAAA,EAAAC,gBAAA,GASAJ,YAAA7yB,UAAAkzB,gBACA,SAAAC,UAAAC,UACAzzB,KAAAiwB,OAAAyD,QAAAF,UAAAC,WAQAP,YAAA7yB,UAAA4D,IAAA,SAAA0vB,UAtCA,IAAAC,SAAAC,SAEAC,MACAC,MACAC,QACAC,QALAL,SAuCA5zB,KAAAozB,MAvCAS,SAuCAF,SArCAG,MAAAF,SAAAP,cACAU,MAAAF,SAAAR,cACAW,QAAAJ,SAAAN,gBACAW,QAAAJ,SAAAP,gBACAQ,MAAAC,OAAAA,OAAAD,OAAAE,SAAAC,SACArE,KAAAsE,oCAAAN,SAAAC,WAAA,EAiCA7zB,KAAAozB,MAAAO,SAGA3zB,KAAAmzB,SAAA,EAFAnzB,KAAAiwB,OAAAzsB,KAAAmwB,WAgBAT,YAAA7yB,UAAA2wB,QAAA,WAKA,OAJAhxB,KAAAmzB,UACAnzB,KAAAiwB,OAAAkE,KAAAvE,KAAAsE,qCACAl0B,KAAAmzB,SAAA,GAEAnzB,KAAAiwB,QAGAnzB,QAAAo2B,YAAAA,iECnDA,SAAAkB,KAAAC,IAAAC,EAAAC,GACA,IAAAC,KAAAH,IAAAC,GACAD,IAAAC,GAAAD,IAAAE,GACAF,IAAAE,GAAAC,KA2BA,SAAAC,YAAAJ,IAAAK,WAAA73B,EAAAb,GAKA,GAAAa,EAAAb,EAAA,CAYA,IACAK,EAAAQ,EAAA,EAEAu3B,KAAAC,KApCAM,IAiCA93B,EAjCA+3B,KAiCA54B,EAhCA+2B,KAAA8B,MAAAF,IAAA5B,KAAA+B,UAAAF,KAAAD,OAmCA34B,GASA,IARA,IAAA+4B,MAAAV,IAAAr4B,GAQA8vB,EAAAjvB,EAAAivB,EAAA9vB,EAAA8vB,IACA4I,WAAAL,IAAAvI,GAAAiJ,QAAA,GAEAX,KAAAC,IADAh4B,GAAA,EACAyvB,GAIAsI,KAAAC,IAAAh4B,EAAA,EAAAyvB,GACA,IAAAkJ,EAAA34B,EAAA,EAIAo4B,YAAAJ,IAAAK,WAAA73B,EAAAm4B,EAAA,GACAP,YAAAJ,IAAAK,WAAAM,EAAA,EAAAh5B,GA1DA,IAAA24B,IAAAC,KAsEA93B,QAAAm4B,UAAA,SAAAZ,IAAAK,YACAD,YAAAJ,IAAAK,WAAA,EAAAL,IAAAr3B,OAAA,8CCzGA,IAAA4yB,KAAApzB,QAAA,UACA04B,aAAA14B,QAAA,mBACAwzB,SAAAxzB,QAAA,eAAAwzB,SACAmF,UAAA34B,QAAA,gBACAy4B,UAAAz4B,QAAA,gBAAAy4B,UAEA,SAAAG,kBAAAC,WAAAC,eACA,IAAAC,UAAAF,WAKA,MAJA,iBAAAA,aACAE,UAAA3F,KAAA4F,oBAAAH,aAGA,MAAAE,UAAAE,SACA,IAAAC,yBAAAH,UAAAD,eACA,IAAAK,uBAAAJ,UAAAD,eA0QA,SAAAK,uBAAAN,WAAAC,eACA,IAAAC,UAAAF,WACA,iBAAAA,aACAE,UAAA3F,KAAA4F,oBAAAH,aAGA,IAAAO,QAAAhG,KAAAiG,OAAAN,UAAA,WACAO,QAAAlG,KAAAiG,OAAAN,UAAA,WAGAQ,MAAAnG,KAAAiG,OAAAN,UAAA,QAAA,IACAS,WAAApG,KAAAiG,OAAAN,UAAA,aAAA,MACAU,eAAArG,KAAAiG,OAAAN,UAAA,iBAAA,MACAW,SAAAtG,KAAAiG,OAAAN,UAAA,YACAtkB,KAAA2e,KAAAiG,OAAAN,UAAA,OAAA,MAIA,GAAAK,SAAA51B,KAAAm2B,SACA,MAAA,IAAAx5B,MAAA,wBAAAi5B,SAGAI,aACAA,WAAApG,KAAAwG,UAAAJ,aAGAF,QAAAA,QACA3kB,IAAAklB,QAIAllB,IAAAye,KAAAwG,WAKAjlB,IAAA,SAAAvN,QACA,OAAAoyB,YAAApG,KAAA0G,WAAAN,aAAApG,KAAA0G,WAAA1yB,QACAgsB,KAAA2G,SAAAP,WAAApyB,QACAA,SAOA5D,KAAAw2B,OAAAxG,SAAAG,UAAA4F,MAAA5kB,IAAAklB,SAAA,GACAr2B,KAAAy2B,SAAAzG,SAAAG,UAAA2F,SAAA,GAEA91B,KAAA02B,iBAAA12B,KAAAy2B,SAAAzF,UAAA7f,IAAA,SAAAwlB,GACA,OAAA/G,KAAAgH,iBAAAZ,WAAAW,EAAArB,iBAGAt1B,KAAAg2B,WAAAA,WACAh2B,KAAAi2B,eAAAA,eACAj2B,KAAA62B,UAAAX,SACAl2B,KAAA82B,cAAAxB,cACAt1B,KAAAiR,KAAAA,KA4GA,SAAA8lB,UACA/2B,KAAAqzB,cAAA,EACArzB,KAAAszB,gBAAA,EACAtzB,KAAA4D,OAAA,KACA5D,KAAAg3B,aAAA,KACAh3B,KAAAi3B,eAAA,KACAj3B,KAAAW,KAAA,KAkaA,SAAA+0B,yBAAAL,WAAAC,eACA,IAAAC,UAAAF,WACA,iBAAAA,aACAE,UAAA3F,KAAA4F,oBAAAH,aAGA,IAAAO,QAAAhG,KAAAiG,OAAAN,UAAA,WACAE,SAAA7F,KAAAiG,OAAAN,UAAA,YAEA,GAAAK,SAAA51B,KAAAm2B,SACA,MAAA,IAAAx5B,MAAA,wBAAAi5B,SAGA51B,KAAAy2B,SAAA,IAAAzG,SACAhwB,KAAAw2B,OAAA,IAAAxG,SAEA,IAAAkH,WAAA,CACArzB,MAAA,EACAC,OAAA,GAEA9D,KAAAm3B,UAAA1B,SAAAtkB,IAAA,SAAAwlB,GACA,GAAAA,EAAAS,IAGA,MAAA,IAAAz6B,MAAA,sDAEA,IAAA6oB,OAAAoK,KAAAiG,OAAAc,EAAA,UACAU,WAAAzH,KAAAiG,OAAArQ,OAAA,QACA8R,aAAA1H,KAAAiG,OAAArQ,OAAA,UAEA,GAAA6R,WAAAH,WAAArzB,MACAwzB,aAAAH,WAAArzB,MAAAyzB,aAAAJ,WAAApzB,OACA,MAAA,IAAAnH,MAAA,wDAIA,OAFAu6B,WAAA1R,OAEA,CACA+R,gBAAA,CAGAlE,cAAAgE,WAAA,EACA/D,gBAAAgE,aAAA,GAEAE,SAAA,IAAApC,kBAAAxF,KAAAiG,OAAAc,EAAA,OAAArB,kBA/3BAF,kBAAAqC,cAAA,SAAApC,WAAAC,eACA,OAAAK,uBAAA8B,cAAApC,WAAAC,gBAMAF,kBAAA/0B,UAAA81B,SAAA,EAgCAf,kBAAA/0B,UAAAq3B,oBAAA,KACA9M,OAAAC,eAAAuK,kBAAA/0B,UAAA,qBAAA,CACAs3B,cAAA,EACA7M,YAAA,EACA+F,IAAA,WAKA,OAJA7wB,KAAA03B,qBACA13B,KAAA43B,eAAA53B,KAAA62B,UAAA72B,KAAAg2B,YAGAh2B,KAAA03B,uBAIAtC,kBAAA/0B,UAAAw3B,mBAAA,KACAjN,OAAAC,eAAAuK,kBAAA/0B,UAAA,oBAAA,CACAs3B,cAAA,EACA7M,YAAA,EACA+F,IAAA,WAKA,OAJA7wB,KAAA63B,oBACA73B,KAAA43B,eAAA53B,KAAA62B,UAAA72B,KAAAg2B,YAGAh2B,KAAA63B,sBAIAzC,kBAAA/0B,UAAAy3B,wBACA,SAAArH,KAAApa,OACA,IAAA9Z,EAAAk0B,KAAAvjB,OAAAmJ,OACA,MAAA,MAAA9Z,GAAA,MAAAA,GAQA64B,kBAAA/0B,UAAAu3B,eACA,SAAAnH,KAAAsH,aACA,MAAA,IAAAp7B,MAAA,6CAGAy4B,kBAAA4C,gBAAA,EACA5C,kBAAA6C,eAAA,EAEA7C,kBAAAhD,qBAAA,EACAgD,kBAAA/C,kBAAA,EAkBA+C,kBAAA/0B,UAAA63B,YACA,SAAA1E,UAAA2E,SAAAC,QACA,IAGAlC,SAHA9vB,QAAA+xB,UAAA,KAIA,OAHAC,QAAAhD,kBAAA4C,iBAIA,KAAA5C,kBAAA4C,gBACA9B,SAAAl2B,KAAAq4B,mBACA,MACA,KAAAjD,kBAAA6C,eACA/B,SAAAl2B,KAAAs4B,kBACA,MACA,QACA,MAAA,IAAA37B,MAAA,+BAGA,IAAAq5B,WAAAh2B,KAAAg2B,WACAE,SAAA/kB,IAAA,SAAAonB,SACA,IAAA30B,OAAA,OAAA20B,QAAA30B,OAAA,KAAA5D,KAAAy2B,SAAA3F,GAAAyH,QAAA30B,QAEA,MAAA,CACAA,OAFAA,OAAAgsB,KAAAgH,iBAAAZ,WAAApyB,OAAA5D,KAAA82B,eAGAzD,cAAAkF,QAAAlF,cACAC,gBAAAiF,QAAAjF,gBACA0D,aAAAuB,QAAAvB,aACAC,eAAAsB,QAAAtB,eACAt2B,KAAA,OAAA43B,QAAA53B,KAAA,KAAAX,KAAAw2B,OAAA1F,GAAAyH,QAAA53B,QAEAX,MAAA0zB,QAAAF,UAAAptB,UAyBAgvB,kBAAA/0B,UAAAm4B,yBACA,SAAAC,OACA,IAAA50B,KAAA+rB,KAAAiG,OAAA4C,MAAA,QAMAC,OAAA,CACA90B,OAAAgsB,KAAAiG,OAAA4C,MAAA,UACAzB,aAAAnzB,KACAozB,eAAArH,KAAAiG,OAAA4C,MAAA,SAAA,IAIA,GADAC,OAAA90B,OAAA5D,KAAA24B,iBAAAD,OAAA90B,QACA80B,OAAA90B,OAAA,EACA,MAAA,GAGA,IAAAsyB,SAAA,GAEA7f,MAAArW,KAAA44B,aAAAF,OACA14B,KAAAs4B,kBACA,eACA,iBACA1I,KAAAiJ,2BACA3D,aAAA7C,mBACA,GAAA,GAAAhc,MAAA,CACA,IAAAkiB,QAAAv4B,KAAAs4B,kBAAAjiB,OAEA,QAAAzT,IAAA61B,MAAA30B,OAOA,IANA,IAAAkzB,aAAAuB,QAAAvB,aAMAuB,SAAAA,QAAAvB,eAAAA,cACAd,SAAA1yB,KAAA,CACAK,KAAA+rB,KAAAiG,OAAA0C,QAAA,gBAAA,MACAz0B,OAAA8rB,KAAAiG,OAAA0C,QAAA,kBAAA,MACAO,WAAAlJ,KAAAiG,OAAA0C,QAAA,sBAAA,QAGAA,QAAAv4B,KAAAs4B,oBAAAjiB,YASA,IANA,IAAA4gB,eAAAsB,QAAAtB,eAMAsB,SACAA,QAAAvB,eAAAnzB,MACA00B,QAAAtB,gBAAAA,gBACAf,SAAA1yB,KAAA,CACAK,KAAA+rB,KAAAiG,OAAA0C,QAAA,gBAAA,MACAz0B,OAAA8rB,KAAAiG,OAAA0C,QAAA,kBAAA,MACAO,WAAAlJ,KAAAiG,OAAA0C,QAAA,sBAAA,QAGAA,QAAAv4B,KAAAs4B,oBAAAjiB,OAKA,OAAA6f,UAGAp5B,QAAAs4B,kBAAAA,mBAgGAO,uBAAAt1B,UAAAuqB,OAAAvtB,OAAA+3B,kBAAA/0B,YACAm3B,SAAApC,kBAMAO,uBAAAt1B,UAAAs4B,iBAAA,SAAAI,SACA,IAWA18B,EAXA28B,eAAAD,QAKA,GAJA,MAAA/4B,KAAAg2B,aACAgD,eAAApJ,KAAA2G,SAAAv2B,KAAAg2B,WAAAgD,iBAGAh5B,KAAAy2B,SAAA5G,IAAAmJ,gBACA,OAAAh5B,KAAAy2B,SAAAjqB,QAAAwsB,gBAMA,IAAA38B,EAAA,EAAAA,EAAA2D,KAAA02B,iBAAA15B,SAAAX,EACA,GAAA2D,KAAA02B,iBAAAr6B,IAAA08B,QACA,OAAA18B,EAIA,OAAA,GAYAs5B,uBAAA8B,cACA,SAAApC,WAAAC,eACA,IAAA2D,IAAArO,OAAAvtB,OAAAs4B,uBAAAt1B,WAEA01B,MAAAkD,IAAAzC,OAAAxG,SAAAG,UAAAkF,WAAAmB,OAAAxF,WAAA,GACA8E,QAAAmD,IAAAxC,SAAAzG,SAAAG,UAAAkF,WAAAoB,SAAAzF,WAAA,GACAiI,IAAAjD,WAAAX,WAAA6D,YACAD,IAAAhD,eAAAZ,WAAA8D,wBAAAF,IAAAxC,SAAAzF,UACAiI,IAAAjD,YACAiD,IAAAhoB,KAAAokB,WAAA+D,MACAH,IAAAnC,cAAAxB,cACA2D,IAAAvC,iBAAAuC,IAAAxC,SAAAzF,UAAA7f,IAAA,SAAAwlB,GACA,OAAA/G,KAAAgH,iBAAAqC,IAAAjD,WAAAW,EAAArB,iBAYA,IAJA,IAAA+D,kBAAAhE,WAAAwB,UAAA7F,UAAArqB,QACA2yB,sBAAAL,IAAAvB,oBAAA,GACA6B,qBAAAN,IAAApB,mBAAA,GAEAx7B,EAAA,EAAAW,OAAAq8B,kBAAAr8B,OAAAX,EAAAW,OAAAX,IAAA,CACA,IAAAm9B,WAAAH,kBAAAh9B,GACAo9B,YAAA,IAAA1C,QACA0C,YAAApG,cAAAmG,WAAAnG,cACAoG,YAAAnG,gBAAAkG,WAAAlG,gBAEAkG,WAAA51B,SACA61B,YAAA71B,OAAAkyB,QAAAtpB,QAAAgtB,WAAA51B,QACA61B,YAAAzC,aAAAwC,WAAAxC,aACAyC,YAAAxC,eAAAuC,WAAAvC,eAEAuC,WAAA74B,OACA84B,YAAA94B,KAAAo1B,MAAAvpB,QAAAgtB,WAAA74B,OAGA44B,qBAAA/1B,KAAAi2B,cAGAH,sBAAA91B,KAAAi2B,aAKA,OAFAxE,UAAAgE,IAAApB,mBAAAjI,KAAAiJ,4BAEAI,KAMAtD,uBAAAt1B,UAAA81B,SAAA,EAKAvL,OAAAC,eAAA8K,uBAAAt1B,UAAA,UAAA,CACAwwB,IAAA,WACA,OAAA7wB,KAAA02B,iBAAA/vB,WAqBAgvB,uBAAAt1B,UAAAu3B,eACA,SAAAnH,KAAAsH,aAeA,IAdA,IAYAQ,QAAAtzB,IAAAy0B,QAAA/sB,IAAAnH,MAZA6tB,cAAA,EACAsG,wBAAA,EACAC,qBAAA,EACAC,uBAAA,EACAC,eAAA,EACAC,aAAA,EACA/8B,OAAAyzB,KAAAzzB,OACAqZ,MAAA,EACA2jB,eAAA,GACAxF,KAAA,GACAyF,iBAAA,GACAZ,kBAAA,GAGAhjB,MAAArZ,QACA,GAAA,MAAAyzB,KAAAvjB,OAAAmJ,OACAgd,gBACAhd,QACAsjB,wBAAA,OAEA,GAAA,MAAAlJ,KAAAvjB,OAAAmJ,OACAA,YAEA,CASA,KARAkiB,QAAA,IAAAxB,SACA1D,cAAAA,cAOA1mB,IAAA0J,MAAA1J,IAAA3P,SACAgD,KAAA83B,wBAAArH,KAAA9jB,KADAA,OAQA,GADA+sB,QAAAM,eAFA/0B,IAAAwrB,KAAA9pB,MAAA0P,MAAA1J,MAIA0J,OAAApR,IAAAjI,WACA,CAEA,IADA08B,QAAA,GACArjB,MAAA1J,KACAwoB,UAAA1D,OAAAhB,KAAApa,MAAAme,MACAhvB,MAAAgvB,KAAAhvB,MACA6Q,MAAAme,KAAAxC,KACA0H,QAAAl2B,KAAAgC,OAGA,GAAA,IAAAk0B,QAAA18B,OACA,MAAA,IAAAL,MAAA,0CAGA,GAAA,IAAA+8B,QAAA18B,OACA,MAAA,IAAAL,MAAA,0CAGAq9B,eAAA/0B,KAAAy0B,QAIAnB,QAAAjF,gBAAAqG,wBAAAD,QAAA,GACAC,wBAAApB,QAAAjF,gBAEA,EAAAoG,QAAA18B,SAEAu7B,QAAA30B,OAAAk2B,eAAAJ,QAAA,GACAI,gBAAAJ,QAAA,GAGAnB,QAAAvB,aAAA4C,qBAAAF,QAAA,GACAE,qBAAArB,QAAAvB,aAEAuB,QAAAvB,cAAA,EAGAuB,QAAAtB,eAAA4C,uBAAAH,QAAA,GACAG,uBAAAtB,QAAAtB,eAEA,EAAAyC,QAAA18B,SAEAu7B,QAAA53B,KAAAo5B,aAAAL,QAAA,GACAK,cAAAL,QAAA,KAIAL,kBAAA71B,KAAA+0B,SACA,iBAAAA,QAAAvB,cACAiD,iBAAAz2B,KAAA+0B,SAKAtD,UAAAoE,kBAAAzJ,KAAAsK,qCACAl6B,KAAA03B,oBAAA2B,kBAEApE,UAAAgF,iBAAArK,KAAAiJ,4BACA74B,KAAA63B,mBAAAoC,kBAOAtE,uBAAAt1B,UAAAu4B,aACA,SAAArG,QAAA4H,UAAAC,UACAC,YAAAC,YAAA5H,OAMA,GAAAH,QAAA6H,YAAA,EACA,MAAA,IAAAlI,UAAA,gDACAK,QAAA6H,YAEA,GAAA7H,QAAA8H,aAAA,EACA,MAAA,IAAAnI,UAAA,kDACAK,QAAA8H,cAGA,OAAAnF,aAAA5C,OAAAC,QAAA4H,UAAAG,YAAA5H,QAOAiD,uBAAAt1B,UAAAk6B,mBACA,WACA,IAAA,IAAAlkB,MAAA,EAAAA,MAAArW,KAAAq4B,mBAAAr7B,SAAAqZ,MAAA,CACA,IAAAkiB,QAAAv4B,KAAAq4B,mBAAAhiB,OAMA,GAAAA,MAAA,EAAArW,KAAAq4B,mBAAAr7B,OAAA,CACA,IAAAw9B,YAAAx6B,KAAAq4B,mBAAAhiB,MAAA,GAEA,GAAAkiB,QAAAlF,gBAAAmH,YAAAnH,cAAA,CACAkF,QAAAkC,oBAAAD,YAAAlH,gBAAA,EACA,UAKAiF,QAAAkC,oBAAAC,EAAAA,IA4BA/E,uBAAAt1B,UAAAs6B,oBACA,SAAAlC,OACA,IAAAC,OAAA,CACArF,cAAAzD,KAAAiG,OAAA4C,MAAA,QACAnF,gBAAA1D,KAAAiG,OAAA4C,MAAA,WAGApiB,MAAArW,KAAA44B,aACAF,OACA14B,KAAAq4B,mBACA,gBACA,kBACAzI,KAAAsK,oCACAtK,KAAAiG,OAAA4C,MAAA,OAAArD,kBAAAhD,uBAGA,GAAA,GAAA/b,MAAA,CACA,IAAAkiB,QAAAv4B,KAAAq4B,mBAAAhiB,OAEA,GAAAkiB,QAAAlF,gBAAAqF,OAAArF,cAAA,CACA,IAAAzvB,OAAAgsB,KAAAiG,OAAA0C,QAAA,SAAA,MACA,OAAA30B,SACAA,OAAA5D,KAAAy2B,SAAA3F,GAAAltB,QACAA,OAAAgsB,KAAAgH,iBAAA52B,KAAAg2B,WAAApyB,OAAA5D,KAAA82B,gBAEA,IAAAn2B,KAAAivB,KAAAiG,OAAA0C,QAAA,OAAA,MAIA,OAHA,OAAA53B,OACAA,KAAAX,KAAAw2B,OAAA1F,GAAAnwB,OAEA,CACAiD,OAAAA,OACAC,KAAA+rB,KAAAiG,OAAA0C,QAAA,eAAA,MACAz0B,OAAA8rB,KAAAiG,OAAA0C,QAAA,iBAAA,MACA53B,KAAAA,OAKA,MAAA,CACAiD,OAAA,KACAC,KAAA,KACAC,OAAA,KACAnD,KAAA,OAQAg1B,uBAAAt1B,UAAAu6B,wBACA,WACA,QAAA56B,KAAAi2B,iBAGAj2B,KAAAi2B,eAAAj5B,QAAAgD,KAAAy2B,SAAAlG,SACAvwB,KAAAi2B,eAAA4E,KAAA,SAAAC,IAAA,OAAA,MAAAA,OAQAnF,uBAAAt1B,UAAA06B,iBACA,SAAAhC,QAAAiC,eACA,IAAAh7B,KAAAi2B,eACA,OAAA,KAGA,IAAA5f,MAAArW,KAAA24B,iBAAAI,SACA,GAAA,GAAA1iB,MACA,OAAArW,KAAAi2B,eAAA5f,OAGA,IAKA+gB,IALA4B,eAAAD,QAMA,GALA,MAAA/4B,KAAAg2B,aACAgD,eAAApJ,KAAA2G,SAAAv2B,KAAAg2B,WAAAgD,iBAIA,MAAAh5B,KAAAg2B,aACAoB,IAAAxH,KAAAqL,SAAAj7B,KAAAg2B,aAAA,CAKA,IAAAkF,eAAAlC,eAAA9zB,QAAA,aAAA,IACA,GAAA,QAAAkyB,IAAA+D,QACAn7B,KAAAy2B,SAAA5G,IAAAqL,gBACA,OAAAl7B,KAAAi2B,eAAAj2B,KAAAy2B,SAAAjqB,QAAA0uB,iBAGA,KAAA9D,IAAAv1B,MAAA,KAAAu1B,IAAAv1B,OACA7B,KAAAy2B,SAAA5G,IAAA,IAAAmJ,gBACA,OAAAh5B,KAAAi2B,eAAAj2B,KAAAy2B,SAAAjqB,QAAA,IAAAwsB,iBAQA,GAAAgC,cACA,OAAA,KAGA,MAAA,IAAAr+B,MAAA,IAAAq8B,eAAA,+BA2BArD,uBAAAt1B,UAAA+6B,qBACA,SAAA3C,OACA,IAAA70B,OAAAgsB,KAAAiG,OAAA4C,MAAA,UAEA,IADA70B,OAAA5D,KAAA24B,iBAAA/0B,SACA,EACA,MAAA,CACAC,KAAA,KACAC,OAAA,KACAg1B,WAAA,MAIA,IAAAJ,OAAA,CACA90B,OAAAA,OACAozB,aAAApH,KAAAiG,OAAA4C,MAAA,QACAxB,eAAArH,KAAAiG,OAAA4C,MAAA,WAGApiB,MAAArW,KAAA44B,aACAF,OACA14B,KAAAs4B,kBACA,eACA,iBACA1I,KAAAiJ,2BACAjJ,KAAAiG,OAAA4C,MAAA,OAAArD,kBAAAhD,uBAGA,GAAA,GAAA/b,MAAA,CACA,IAAAkiB,QAAAv4B,KAAAs4B,kBAAAjiB,OAEA,GAAAkiB,QAAA30B,SAAA80B,OAAA90B,OACA,MAAA,CACAC,KAAA+rB,KAAAiG,OAAA0C,QAAA,gBAAA,MACAz0B,OAAA8rB,KAAAiG,OAAA0C,QAAA,kBAAA,MACAO,WAAAlJ,KAAAiG,OAAA0C,QAAA,sBAAA,OAKA,MAAA,CACA10B,KAAA,KACAC,OAAA,KACAg1B,WAAA,OAIAh8B,QAAA64B,uBAAAA,wBAmGAD,yBAAAr1B,UAAAuqB,OAAAvtB,OAAA+3B,kBAAA/0B,YACAC,YAAA80B,kBAKAM,yBAAAr1B,UAAA81B,SAAA,EAKAvL,OAAAC,eAAA6K,yBAAAr1B,UAAA,UAAA,CACAwwB,IAAA,WAEA,IADA,IAAAiF,QAAA,GACAz5B,EAAA,EAAAA,EAAA2D,KAAAm3B,UAAAn6B,OAAAX,IACA,IAAA,IAAAyvB,EAAA,EAAAA,EAAA9rB,KAAAm3B,UAAA96B,GAAAm7B,SAAA1B,QAAA94B,OAAA8uB,IACAgK,QAAAtyB,KAAAxD,KAAAm3B,UAAA96B,GAAAm7B,SAAA1B,QAAAhK,IAGA,OAAAgK,WAuBAJ,yBAAAr1B,UAAAs6B,oBACA,SAAAlC,OACA,IAAAC,OAAA,CACArF,cAAAzD,KAAAiG,OAAA4C,MAAA,QACAnF,gBAAA1D,KAAAiG,OAAA4C,MAAA,WAKA4C,aAAAnG,aAAA5C,OAAAoG,OAAA14B,KAAAm3B,UACA,SAAAuB,OAAA4C,SACA,IAAArI,IAAAyF,OAAArF,cAAAiI,QAAA/D,gBAAAlE,cACA,OAAAJ,KAIAyF,OAAApF,gBACAgI,QAAA/D,gBAAAjE,kBAEAgI,QAAAt7B,KAAAm3B,UAAAkE,cAEA,OAAAC,QASAA,QAAA9D,SAAAmD,oBAAA,CACA92B,KAAA60B,OAAArF,eACAiI,QAAA/D,gBAAAlE,cAAA,GACAvvB,OAAA40B,OAAApF,iBACAgI,QAAA/D,gBAAAlE,gBAAAqF,OAAArF,cACAiI,QAAA/D,gBAAAjE,gBAAA,EACA,GACAiI,KAAA9C,MAAA8C,OAfA,CACA33B,OAAA,KACAC,KAAA,KACAC,OAAA,KACAnD,KAAA,OAmBA+0B,yBAAAr1B,UAAAu6B,wBACA,WACA,OAAA56B,KAAAm3B,UAAAqE,MAAA,SAAA7E,GACA,OAAAA,EAAAa,SAAAoD,6BASAlF,yBAAAr1B,UAAA06B,iBACA,SAAAhC,QAAAiC,eACA,IAAA,IAAA3+B,EAAA,EAAAA,EAAA2D,KAAAm3B,UAAAn6B,OAAAX,IAAA,CACA,IAEAmO,QAFAxK,KAAAm3B,UAAA96B,GAEAm7B,SAAAuD,iBAAAhC,SAAA,GACA,GAAAvuB,QACA,OAAAA,QAGA,GAAAwwB,cACA,OAAA,KAGA,MAAA,IAAAr+B,MAAA,IAAAo8B,QAAA,+BAsBArD,yBAAAr1B,UAAA+6B,qBACA,SAAA3C,OACA,IAAA,IAAAp8B,EAAA,EAAAA,EAAA2D,KAAAm3B,UAAAn6B,OAAAX,IAAA,CACA,IAAAi/B,QAAAt7B,KAAAm3B,UAAA96B,GAIA,IAAA,IAAAi/B,QAAA9D,SAAAmB,iBAAA/I,KAAAiG,OAAA4C,MAAA,WAAA,CAGA,IAAAgD,kBAAAH,QAAA9D,SAAA4D,qBAAA3C,OACA,GAAAgD,kBASA,MARA,CACA53B,KAAA43B,kBAAA53B,MACAy3B,QAAA/D,gBAAAlE,cAAA,GACAvvB,OAAA23B,kBAAA33B,QACAw3B,QAAA/D,gBAAAlE,gBAAAoI,kBAAA53B,KACAy3B,QAAA/D,gBAAAjE,gBAAA,EACA,KAMA,MAAA,CACAzvB,KAAA,KACAC,OAAA,OASA4xB,yBAAAr1B,UAAAu3B,eACA,SAAAnH,KAAAsH,aACA/3B,KAAA03B,oBAAA,GACA13B,KAAA63B,mBAAA,GACA,IAAA,IAAAx7B,EAAA,EAAAA,EAAA2D,KAAAm3B,UAAAn6B,OAAAX,IAGA,IAFA,IAAAi/B,QAAAt7B,KAAAm3B,UAAA96B,GACAq/B,gBAAAJ,QAAA9D,SAAAa,mBACAvM,EAAA,EAAAA,EAAA4P,gBAAA1+B,OAAA8uB,IAAA,CACA,IAAAyM,QAAAmD,gBAAA5P,GAEAloB,OAAA03B,QAAA9D,SAAAf,SAAA3F,GAAAyH,QAAA30B,QACAA,OAAAgsB,KAAAgH,iBAAA0E,QAAA9D,SAAAxB,WAAApyB,OAAA5D,KAAA82B,eACA92B,KAAAy2B,SAAAxyB,IAAAL,QACAA,OAAA5D,KAAAy2B,SAAAjqB,QAAA5I,QAEA,IAAAjD,KAAA,KACA43B,QAAA53B,OACAA,KAAA26B,QAAA9D,SAAAhB,OAAA1F,GAAAyH,QAAA53B,MACAX,KAAAw2B,OAAAvyB,IAAAtD,MACAA,KAAAX,KAAAw2B,OAAAhqB,QAAA7L,OAOA,IAAAg7B,gBAAA,CACA/3B,OAAAA,OACAyvB,cAAAkF,QAAAlF,eACAiI,QAAA/D,gBAAAlE,cAAA,GACAC,gBAAAiF,QAAAjF,iBACAgI,QAAA/D,gBAAAlE,gBAAAkF,QAAAlF,cACAiI,QAAA/D,gBAAAjE,gBAAA,EACA,GACA0D,aAAAuB,QAAAvB,aACAC,eAAAsB,QAAAtB,eACAt2B,KAAAA,MAGAX,KAAA03B,oBAAAl0B,KAAAm4B,iBACA,iBAAAA,gBAAA3E,cACAh3B,KAAA63B,mBAAAr0B,KAAAm4B,iBAKA1G,UAAAj1B,KAAA03B,oBAAA9H,KAAAsK,qCACAjF,UAAAj1B,KAAA63B,mBAAAjI,KAAAiJ,6BAGA/7B,QAAA44B,yBAAAA,wJCjnCA,IAAAP,UAAA34B,QAAA,gBACAozB,KAAApzB,QAAA,UACAwzB,SAAAxzB,QAAA,eAAAwzB,SACAkD,YAAA12B,QAAA,kBAAA02B,YAUA,SAAA0I,mBAAAnD,OACAA,QACAA,MAAA,IAEAz4B,KAAAo5B,MAAAxJ,KAAAiG,OAAA4C,MAAA,OAAA,MACAz4B,KAAAk5B,YAAAtJ,KAAAiG,OAAA4C,MAAA,aAAA,MACAz4B,KAAA67B,gBAAAjM,KAAAiG,OAAA4C,MAAA,kBAAA,GACAz4B,KAAAy2B,SAAA,IAAAzG,SACAhwB,KAAAw2B,OAAA,IAAAxG,SACAhwB,KAAA62B,UAAA,IAAA3D,YACAlzB,KAAA87B,iBAAA,KAGAF,mBAAAv7B,UAAA81B,SAAA,EAOAyF,mBAAAnE,cACA,SAAAsE,oBACA,IAAA/F,WAAA+F,mBAAA/F,WACAgG,UAAA,IAAAJ,mBAAA,CACA3qB,KAAA8qB,mBAAA9qB,KACA+kB,WAAAA,aA2CA,OAzCA+F,mBAAA7D,YAAA,SAAAK,SACA,IAAA0D,WAAA,CACAC,UAAA,CACAr4B,KAAA00B,QAAAlF,cACAvvB,OAAAy0B,QAAAjF,kBAIA,MAAAiF,QAAA30B,SACAq4B,WAAAr4B,OAAA20B,QAAA30B,OACA,MAAAoyB,aACAiG,WAAAr4B,OAAAgsB,KAAA2G,SAAAP,WAAAiG,WAAAr4B,SAGAq4B,WAAAl6B,SAAA,CACA8B,KAAA00B,QAAAvB,aACAlzB,OAAAy0B,QAAAtB,gBAGA,MAAAsB,QAAA53B,OACAs7B,WAAAt7B,KAAA43B,QAAA53B,OAIAq7B,UAAAG,WAAAF,cAEAF,mBAAAjG,QAAApC,QAAA,SAAA0I,YACA,IAAAC,eAAAD,WACA,OAAApG,aACAqG,eAAAzM,KAAA2G,SAAAP,WAAAoG,aAGAJ,UAAAvF,SAAA5G,IAAAwM,iBACAL,UAAAvF,SAAAxyB,IAAAo4B,gBAGA,IAAA7xB,QAAAuxB,mBAAAhB,iBAAAqB,YACA,MAAA5xB,SACAwxB,UAAAM,iBAAAF,WAAA5xB,WAGAwxB,WAaAJ,mBAAAv7B,UAAA87B,WACA,SAAA1D,OACA,IAAAyD,UAAAtM,KAAAiG,OAAA4C,MAAA,aACA12B,SAAA6tB,KAAAiG,OAAA4C,MAAA,WAAA,MACA70B,OAAAgsB,KAAAiG,OAAA4C,MAAA,SAAA,MACA93B,KAAAivB,KAAAiG,OAAA4C,MAAA,OAAA,MAEAz4B,KAAA67B,iBACA77B,KAAAu8B,iBAAAL,UAAAn6B,SAAA6B,OAAAjD,MAGA,MAAAiD,SACAA,OAAAyyB,OAAAzyB,QACA5D,KAAAy2B,SAAA5G,IAAAjsB,SACA5D,KAAAy2B,SAAAxyB,IAAAL,SAIA,MAAAjD,OACAA,KAAA01B,OAAA11B,MACAX,KAAAw2B,OAAA3G,IAAAlvB,OACAX,KAAAw2B,OAAAvyB,IAAAtD,OAIAX,KAAA62B,UAAA5yB,IAAA,CACAovB,cAAA6I,UAAAr4B,KACAyvB,gBAAA4I,UAAAp4B,OACAkzB,aAAA,MAAAj1B,UAAAA,SAAA8B,KACAozB,eAAA,MAAAl1B,UAAAA,SAAA+B,OACAF,OAAAA,OACAjD,KAAAA,QAOAi7B,mBAAAv7B,UAAAi8B,iBACA,SAAAE,YAAAC,gBACA,IAAA74B,OAAA44B,YACA,MAAAx8B,KAAAk5B,cACAt1B,OAAAgsB,KAAA2G,SAAAv2B,KAAAk5B,YAAAt1B,SAGA,MAAA64B,gBAGAz8B,KAAA87B,mBACA97B,KAAA87B,iBAAAlR,OAAAvtB,OAAA,OAEA2C,KAAA87B,iBAAAlM,KAAAe,YAAA/sB,SAAA64B,gBACAz8B,KAAA87B,0BAGA97B,KAAA87B,iBAAAlM,KAAAe,YAAA/sB,SACA,IAAAgnB,OAAA8R,KAAA18B,KAAA87B,kBAAA9+B,SACAgD,KAAA87B,iBAAA,QAqBAF,mBAAAv7B,UAAAs8B,eACA,SAAAZ,mBAAAS,YAAAI,gBACA,IAAAR,WAAAI,YAEA,GAAA,MAAAA,YAAA,CACA,GAAA,MAAAT,mBAAA9qB,KACA,MAAA,IAAAtU,MACA,iJAIAy/B,WAAAL,mBAAA9qB,KAEA,IAAA+kB,WAAAh2B,KAAAk5B,YAEA,MAAAlD,aACAoG,WAAAxM,KAAA2G,SAAAP,WAAAoG,aAIA,IAAAS,WAAA,IAAA7M,SACA8M,SAAA,IAAA9M,SAGAhwB,KAAA62B,UAAAtD,gBAAA,SAAAgF,SACA,GAAAA,QAAA30B,SAAAw4B,YAAA,MAAA7D,QAAAvB,aAAA,CAEA,IAAAj1B,SAAAg6B,mBAAApB,oBAAA,CACA92B,KAAA00B,QAAAvB,aACAlzB,OAAAy0B,QAAAtB,iBAEA,MAAAl1B,SAAA6B,SAEA20B,QAAA30B,OAAA7B,SAAA6B,OACA,MAAAg5B,iBACArE,QAAA30B,OAAAgsB,KAAA1rB,KAAA04B,eAAArE,QAAA30B,SAEA,MAAAoyB,aACAuC,QAAA30B,OAAAgsB,KAAA2G,SAAAP,WAAAuC,QAAA30B,SAEA20B,QAAAvB,aAAAj1B,SAAA8B,KACA00B,QAAAtB,eAAAl1B,SAAA+B,OACA,MAAA/B,SAAApB,OACA43B,QAAA53B,KAAAoB,SAAApB,OAKA,IAAAiD,OAAA20B,QAAA30B,OACA,MAAAA,QAAAi5B,WAAAhN,IAAAjsB,SACAi5B,WAAA54B,IAAAL,QAGA,IAAAjD,KAAA43B,QAAA53B,KACA,MAAAA,MAAAm8B,SAAAjN,IAAAlvB,OACAm8B,SAAA74B,IAAAtD,OAGAX,MACAA,KAAAy2B,SAAAoG,WACA78B,KAAAw2B,OAAAsG,SAGAf,mBAAAjG,QAAApC,QAAA,SAAA0I,YACA,IAAA5xB,QAAAuxB,mBAAAhB,iBAAAqB,YACA,MAAA5xB,UACA,MAAAoyB,iBACAR,WAAAxM,KAAA1rB,KAAA04B,eAAAR,aAEA,MAAApG,aACAoG,WAAAxM,KAAA2G,SAAAP,WAAAoG,aAEAp8B,KAAAs8B,iBAAAF,WAAA5xB,WAEAxK,OAcA47B,mBAAAv7B,UAAAk8B,iBACA,SAAAQ,WAAAC,UAAAjE,QACAkE,OAKA,GAAAD,WAAA,iBAAAA,UAAAn5B,MAAA,iBAAAm5B,UAAAl5B,OACA,MAAA,IAAAnH,MACA,gPAMA,MAAAogC,YAAA,SAAAA,YAAA,WAAAA,YACA,EAAAA,WAAAl5B,MAAA,GAAAk5B,WAAAj5B,SACAk5B,WAAAjE,SAAAkE,UAIAF,YAAA,SAAAA,YAAA,WAAAA,YACAC,WAAA,SAAAA,WAAA,WAAAA,WACA,EAAAD,WAAAl5B,MAAA,GAAAk5B,WAAAj5B,QACA,EAAAk5B,UAAAn5B,MAAA,GAAAm5B,UAAAl5B,QACAi1B,SAKA,MAAA,IAAAp8B,MAAA,oBAAAiS,KAAAC,UAAA,CACAqtB,UAAAa,WACAn5B,OAAAm1B,QACAh3B,SAAAi7B,UACAr8B,KAAAs8B,UASArB,mBAAAv7B,UAAA68B,mBACA,WAcA,IAbA,IAOA/W,KACAoS,QACA4E,QACAC,UAVAzD,wBAAA,EACA0D,sBAAA,EACAxD,uBAAA,EACAD,qBAAA,EACAG,aAAA,EACAD,eAAA,EACAvxB,OAAA,GAMA2tB,SAAAl2B,KAAA62B,UAAA7F,UACA30B,EAAA,EAAAkH,IAAA2yB,SAAAl5B,OAAAX,EAAAkH,IAAAlH,IAAA,CAIA,GAFA8pB,KAAA,IADAoS,QAAArC,SAAA75B,IAGAg3B,gBAAAgK,sBAEA,IADA1D,wBAAA,EACApB,QAAAlF,gBAAAgK,uBACAlX,MAAA,IACAkX,6BAIA,GAAA,EAAAhhC,EAAA,CACA,IAAAuzB,KAAAsE,oCAAAqE,QAAArC,SAAA75B,EAAA,IACA,SAEA8pB,MAAA,IAIAA,MAAAgP,UAAAjE,OAAAqH,QAAAjF,gBACAqG,yBACAA,wBAAApB,QAAAjF,gBAEA,MAAAiF,QAAA30B,SACAw5B,UAAAp9B,KAAAy2B,SAAAjqB,QAAA+rB,QAAA30B,QACAuiB,MAAAgP,UAAAjE,OAAAkM,UAAAtD,gBACAA,eAAAsD,UAGAjX,MAAAgP,UAAAjE,OAAAqH,QAAAvB,aAAA,EACA4C,sBACAA,qBAAArB,QAAAvB,aAAA,EAEA7Q,MAAAgP,UAAAjE,OAAAqH,QAAAtB,eACA4C,wBACAA,uBAAAtB,QAAAtB,eAEA,MAAAsB,QAAA53B,OACAw8B,QAAAn9B,KAAAw2B,OAAAhqB,QAAA+rB,QAAA53B,MACAwlB,MAAAgP,UAAAjE,OAAAiM,QAAApD,cACAA,aAAAoD,UAIA50B,QAAA4d,KAGA,OAAA5d,QAGAqzB,mBAAAv7B,UAAA84B,wBACA,SAAAmE,SAAAvF,aACA,OAAAuF,SAAAnsB,IAAA,SAAAvN,QACA,IAAA5D,KAAA87B,iBACA,OAAA,KAEA,MAAA/D,cACAn0B,OAAAgsB,KAAA2G,SAAAwB,YAAAn0B,SAEA,IAAA0B,IAAAsqB,KAAAe,YAAA/sB,QACA,OAAAgnB,OAAAvqB,UAAAkF,eAAAxI,KAAAiD,KAAA87B,iBAAAx2B,KACAtF,KAAA87B,iBAAAx2B,KACA,MACAtF,OAMA47B,mBAAAv7B,UAAAk9B,OACA,WACA,IAAApsB,IAAA,CACAykB,QAAA51B,KAAAm2B,SACAL,QAAA91B,KAAAy2B,SAAAzF,UACA+E,MAAA/1B,KAAAw2B,OAAAxF,UACAkF,SAAAl2B,KAAAk9B,sBAYA,OAVA,MAAAl9B,KAAAo5B,QACAjoB,IAAAF,KAAAjR,KAAAo5B,OAEA,MAAAp5B,KAAAk5B,cACA/nB,IAAA6kB,WAAAh2B,KAAAk5B,aAEAl5B,KAAA87B,mBACA3qB,IAAA8kB,eAAAj2B,KAAAm5B,wBAAAhoB,IAAA2kB,QAAA3kB,IAAA6kB,aAGA7kB,KAMAyqB,mBAAAv7B,UAAAS,SACA,WACA,OAAA8N,KAAAC,UAAA7O,KAAAu9B,WAGAzgC,QAAA8+B,mBAAAA,+HCjaA,IAAAA,mBAAAp/B,QAAA,0BAAAo/B,mBACAhM,KAAApzB,QAAA,UAIAghC,cAAA,UAQAC,aAAA,qBAcA,SAAA96B,WAAA+6B,MAAAC,QAAA5E,QAAA6E,QAAAX,OACAj9B,KAAAwH,SAAA,GACAxH,KAAA69B,eAAA,GACA79B,KAAA6D,KAAA,MAAA65B,MAAA,KAAAA,MACA19B,KAAA8D,OAAA,MAAA65B,QAAA,KAAAA,QACA39B,KAAA4D,OAAA,MAAAm1B,QAAA,KAAAA,QACA/4B,KAAAW,KAAA,MAAAs8B,MAAA,KAAAA,MACAj9B,KAAAy9B,eAAA,EACA,MAAAG,SAAA59B,KAAAiE,IAAA25B,SAWAj7B,WAAAm7B,wBACA,SAAAC,eAAAhC,mBAAAiC,eAGA,IAAAx8B,KAAA,IAAAmB,WAMAs7B,eAAAF,eAAAtmB,MAAA+lB,eACAU,oBAAA,EACAC,cAAA,WAIA,OAHAC,eAEAA,eAAA,IAGA,SAAAA,cACA,OAAAF,oBAAAD,eAAAjhC,OACAihC,eAAAC,4BAAAt7B,IAKAy7B,kBAAA,EAAA5D,oBAAA,EAKA6D,YAAA,KAgEA,OA9DAvC,mBAAA7D,YAAA,SAAAK,SACA,GAAA,OAAA+F,YAAA,CAGA,KAAAD,kBAAA9F,QAAAlF,eAMA,CAIA,IACAz2B,MADA2hC,SAAAN,eAAAC,sBAAA,IACAtY,OAAA,EAAA2S,QAAAjF,gBACAmH,qBAOA,OANAwD,eAAAC,qBAAAK,SAAA3Y,OAAA2S,QAAAjF,gBACAmH,qBACAA,oBAAAlC,QAAAjF,gBACAkL,mBAAAF,YAAA1hC,WAEA0hC,YAAA/F,SAhBAiG,mBAAAF,YAAAH,iBACAE,oBACA5D,oBAAA,EAqBA,KAAA4D,kBAAA9F,QAAAlF,eACA7xB,KAAAyC,IAAAk6B,iBACAE,oBAEA,GAAA5D,oBAAAlC,QAAAjF,gBAAA,CACA,IAAAiL,SAAAN,eAAAC,sBAAA,GACA18B,KAAAyC,IAAAs6B,SAAA3Y,OAAA,EAAA2S,QAAAjF,kBACA2K,eAAAC,qBAAAK,SAAA3Y,OAAA2S,QAAAjF,iBACAmH,oBAAAlC,QAAAjF,gBAEAgL,YAAA/F,SACAv4B,MAEAk+B,oBAAAD,eAAAjhC,SACAshC,aAEAE,mBAAAF,YAAAH,iBAGA38B,KAAAyC,IAAAg6B,eAAAzrB,OAAA0rB,qBAAAh6B,KAAA,MAIA63B,mBAAAjG,QAAApC,QAAA,SAAA0I,YACA,IAAA5xB,QAAAuxB,mBAAAhB,iBAAAqB,YACA,MAAA5xB,UACA,MAAAwzB,gBACA5B,WAAAxM,KAAA1rB,KAAA85B,cAAA5B,aAEA56B,KAAA86B,iBAAAF,WAAA5xB,YAIAhJ,KAEA,SAAAg9B,mBAAAjG,QAAA37B,MACA,GAAA,OAAA27B,cAAA31B,IAAA21B,QAAA30B,OACApC,KAAAyC,IAAArH,UACA,CACA,IAAAgH,OAAAo6B,cACApO,KAAA1rB,KAAA85B,cAAAzF,QAAA30B,QACA20B,QAAA30B,OACApC,KAAAyC,IAAA,IAAAtB,WAAA41B,QAAAvB,aACAuB,QAAAtB,eACArzB,OACAhH,KACA27B,QAAA53B,UAWAgC,WAAAtC,UAAA4D,IAAA,SAAAw6B,QACA,GAAAzZ,MAAA3hB,QAAAo7B,QACAA,OAAA/K,QAAA,SAAAxwB,OACAlD,KAAAiE,IAAAf,QACAlD,UAEA,CAAA,IAAAy+B,OAAAhB,eAAA,iBAAAgB,OAMA,MAAA,IAAAvM,UACA,8EAAAuM,QANAA,QACAz+B,KAAAwH,SAAAhE,KAAAi7B,QAQA,OAAAz+B,MASA2C,WAAAtC,UAAA8D,QAAA,SAAAs6B,QACA,GAAAzZ,MAAA3hB,QAAAo7B,QACA,IAAA,IAAApiC,EAAAoiC,OAAAzhC,OAAA,EAAA,GAAAX,EAAAA,IACA2D,KAAAmE,QAAAs6B,OAAApiC,QAGA,CAAA,IAAAoiC,OAAAhB,eAAA,iBAAAgB,OAIA,MAAA,IAAAvM,UACA,8EAAAuM,QAJAz+B,KAAAwH,SAAAlD,QAAAm6B,QAOA,OAAAz+B,MAUA2C,WAAAtC,UAAAq+B,KAAA,SAAAC,KAEA,IADA,IAAAz7B,MACA7G,EAAA,EAAAkH,IAAAvD,KAAAwH,SAAAxK,OAAAX,EAAAkH,IAAAlH,KACA6G,MAAAlD,KAAAwH,SAAAnL,IACAohC,cACAv6B,MAAAw7B,KAAAC,KAGA,KAAAz7B,OACAy7B,IAAAz7B,MAAA,CAAAU,OAAA5D,KAAA4D,OACAC,KAAA7D,KAAA6D,KACAC,OAAA9D,KAAA8D,OACAnD,KAAAX,KAAAW,QAYAgC,WAAAtC,UAAA6D,KAAA,SAAA06B,MACA,IAAAC,YACAxiC,EACAkH,IAAAvD,KAAAwH,SAAAxK,OACA,GAAA,EAAAuG,IAAA,CAEA,IADAs7B,YAAA,GACAxiC,EAAA,EAAAA,EAAAkH,IAAA,EAAAlH,IACAwiC,YAAAr7B,KAAAxD,KAAAwH,SAAAnL,IACAwiC,YAAAr7B,KAAAo7B,MAEAC,YAAAr7B,KAAAxD,KAAAwH,SAAAnL,IACA2D,KAAAwH,SAAAq3B,YAEA,OAAA7+B,MAUA2C,WAAAtC,UAAAy+B,aAAA,SAAAC,SAAAC,cACA,IAAAC,UAAAj/B,KAAAwH,SAAAxH,KAAAwH,SAAAxK,OAAA,GAUA,OATAiiC,UAAAxB,cACAwB,UAAAH,aAAAC,SAAAC,cAEA,iBAAAC,UACAj/B,KAAAwH,SAAAxH,KAAAwH,SAAAxK,OAAA,GAAAiiC,UAAA/5B,QAAA65B,SAAAC,cAGAh/B,KAAAwH,SAAAhE,KAAA,GAAA0B,QAAA65B,SAAAC,eAEAh/B,MAUA2C,WAAAtC,UAAAi8B,iBACA,SAAAE,YAAAC,gBACAz8B,KAAA69B,eAAAjO,KAAAe,YAAA6L,cAAAC,gBASA95B,WAAAtC,UAAA6+B,mBACA,SAAAP,KACA,IAAA,IAAAtiC,EAAA,EAAAkH,IAAAvD,KAAAwH,SAAAxK,OAAAX,EAAAkH,IAAAlH,IACA2D,KAAAwH,SAAAnL,GAAAohC,eACAz9B,KAAAwH,SAAAnL,GAAA6iC,mBAAAP,KAIA,IAAA7I,QAAAlL,OAAA8R,KAAA18B,KAAA69B,gBACA,IAAAxhC,EAAA,EAAAkH,IAAAuyB,QAAA94B,OAAAX,EAAAkH,IAAAlH,IACAsiC,IAAA/O,KAAAuP,cAAArJ,QAAAz5B,IAAA2D,KAAA69B,eAAA/H,QAAAz5B,MAQAsG,WAAAtC,UAAAS,SAAA,WACA,IAAAmE,IAAA,GAIA,OAHAjF,KAAA0+B,KAAA,SAAAx7B,OACA+B,KAAA/B,QAEA+B,KAOAtC,WAAAtC,UAAA+D,sBAAA,SAAAq0B,OACA,IAAAyD,UAAA,CACAt/B,KAAA,GACAiH,KAAA,EACAC,OAAA,GAEAqN,IAAA,IAAAyqB,mBAAAnD,OACA2G,qBAAA,EACAC,mBAAA,KACAC,iBAAA,KACAC,mBAAA,KACAC,iBAAA,KAqEA,OApEAx/B,KAAA0+B,KAAA,SAAAx7B,MAAAnB,UACAm6B,UAAAt/B,MAAAsG,MACA,OAAAnB,SAAA6B,QACA,OAAA7B,SAAA8B,MACA,OAAA9B,SAAA+B,QACAu7B,qBAAAt9B,SAAA6B,QACA07B,mBAAAv9B,SAAA8B,MACA07B,qBAAAx9B,SAAA+B,QACA07B,mBAAAz9B,SAAApB,MACAwQ,IAAAgrB,WAAA,CACAv4B,OAAA7B,SAAA6B,OACA7B,SAAA,CACA8B,KAAA9B,SAAA8B,KACAC,OAAA/B,SAAA+B,QAEAo4B,UAAA,CACAr4B,KAAAq4B,UAAAr4B,KACAC,OAAAo4B,UAAAp4B,QAEAnD,KAAAoB,SAAApB,OAGA0+B,mBAAAt9B,SAAA6B,OACA07B,iBAAAv9B,SAAA8B,KACA07B,mBAAAx9B,SAAA+B,OACA07B,iBAAAz9B,SAAApB,KACAy+B,qBAAA,GACAA,sBACAjuB,IAAAgrB,WAAA,CACAD,UAAA,CACAr4B,KAAAq4B,UAAAr4B,KACAC,OAAAo4B,UAAAp4B,UAGAu7B,mBAAA,KACAD,qBAAA,GAEA,IAAA,IAAA3U,IAAA,EAAAztB,OAAAkG,MAAAlG,OAAAytB,IAAAztB,OAAAytB,MA3WA,KA4WAvnB,MAAA6uB,WAAAtH,MACAyR,UAAAr4B,OACAq4B,UAAAp4B,OAAA,EAEA2mB,IAAA,IAAAztB,QACAqiC,mBAAA,KACAD,qBAAA,GACAA,qBACAjuB,IAAAgrB,WAAA,CACAv4B,OAAA7B,SAAA6B,OACA7B,SAAA,CACA8B,KAAA9B,SAAA8B,KACAC,OAAA/B,SAAA+B,QAEAo4B,UAAA,CACAr4B,KAAAq4B,UAAAr4B,KACAC,OAAAo4B,UAAAp4B,QAEAnD,KAAAoB,SAAApB,QAIAu7B,UAAAp4B,WAIA9D,KAAAk/B,mBAAA,SAAA9C,WAAAqD,eACAtuB,IAAAmrB,iBAAAF,WAAAqD,iBAGA,CAAA7iC,KAAAs/B,UAAAt/B,KAAAuU,IAAAA,MAGArU,QAAA6F,WAAAA,4FClYA7F,QAAA+4B,OATA,SAAA4C,MAAAwE,MAAAyC,eACA,GAAAzC,SAAAxE,MACA,OAAAA,MAAAwE,OACA,GAAA,IAAAp4B,UAAA7H,OACA,OAAA0iC,cAEA,MAAA,IAAA/iC,MAAA,IAAAsgC,MAAA,8BAKA,IAAA0C,UAAA,iEACAC,cAAA,gBAEA,SAAA3E,SAAA4E,MACA,IAAA9a,MAAA8a,KAAA9a,MAAA4a,WACA,OAAA5a,MAGA,CACAoW,OAAApW,MAAA,GACA+a,KAAA/a,MAAA,GACAgb,KAAAhb,MAAA,GACAib,KAAAjb,MAAA,GACAljB,KAAAkjB,MAAA,IAPA,KAYA,SAAAkb,YAAAC,YACA,IAAA9I,IAAA,GAiBA,OAhBA8I,WAAA/E,SACA/D,KAAA8I,WAAA/E,OAAA,KAEA/D,KAAA,KACA8I,WAAAJ,OACA1I,KAAA8I,WAAAJ,KAAA,KAEAI,WAAAH,OACA3I,KAAA8I,WAAAH,MAEAG,WAAAF,OACA5I,KAAA,IAAA8I,WAAAF,MAEAE,WAAAr+B,OACAu1B,KAAA8I,WAAAr+B,MAEAu1B,IAeA,SAAAhB,UAAA+J,OACA,IAAAt+B,KAAAs+B,MACA/I,IAAA6D,SAAAkF,OACA,GAAA/I,IAAA,CACA,IAAAA,IAAAv1B,KACA,OAAAs+B,MAEAt+B,KAAAu1B,IAAAv1B,KAKA,IAHA,IAGAwL,KAHAipB,WAAAx5B,QAAAw5B,WAAAz0B,MAEAI,MAAAJ,KAAA4V,MAAA,OACA2oB,GAAA,EAAA/jC,EAAA4F,MAAAjF,OAAA,EAAA,GAAAX,EAAAA,IAEA,OADAgR,KAAApL,MAAA5F,IAEA4F,MAAAuQ,OAAAnW,EAAA,GACA,OAAAgR,KACA+yB,KACA,EAAAA,KACA,KAAA/yB,MAIApL,MAAAuQ,OAAAnW,EAAA,EAAA+jC,IACAA,GAAA,IAEAn+B,MAAAuQ,OAAAnW,EAAA,GACA+jC,OAUA,MAJA,MAFAv+B,KAAAI,MAAAiC,KAAA,QAGArC,KAAAy0B,WAAA,IAAA,KAGAc,KACAA,IAAAv1B,KAAAA,KACAo+B,YAAA7I,MAEAv1B,KAoBA,SAAAqC,KAAAm8B,MAAAF,OACA,KAAAE,QACAA,MAAA,KAEA,KAAAF,QACAA,MAAA,KAEA,IAAAG,SAAArF,SAAAkF,OACAI,SAAAtF,SAAAoF,OAMA,GALAE,WACAF,MAAAE,SAAA1+B,MAAA,KAIAy+B,WAAAA,SAAAnF,OAIA,OAHAoF,WACAD,SAAAnF,OAAAoF,SAAApF,QAEA8E,YAAAK,UAGA,GAAAA,UAAAH,MAAApb,MAAA6a,eACA,OAAAO,MAIA,GAAAI,WAAAA,SAAAR,OAAAQ,SAAA1+B,KAEA,OADA0+B,SAAAR,KAAAI,MACAF,YAAAM,UAGA,IAAAC,OAAA,MAAAL,MAAAjzB,OAAA,GACAizB,MACA/J,UAAAiK,MAAAn7B,QAAA,OAAA,IAAA,IAAAi7B,OAEA,OAAAI,UACAA,SAAA1+B,KAAA2+B,OACAP,YAAAM,WAEAC,OAvIA1jC,QAAAm+B,SAAAA,SAsBAn+B,QAAAmjC,YAAAA,YAwDAnjC,QAAAs5B,UAAAA,UA2DAt5B,QAAAoH,KAAAA,KAEApH,QAAAw5B,WAAA,SAAA6J,OACA,MAAA,MAAAA,MAAAjzB,OAAA,IAAAyyB,UAAA79B,KAAAq+B,QAyCArjC,QAAAy5B,SAhCA,SAAA8J,MAAAF,OACA,KAAAE,QACAA,MAAA,KAGAA,MAAAA,MAAAn7B,QAAA,MAAA,IAOA,IADA,IAAAgnB,MAAA,EACA,IAAAiU,MAAA3zB,QAAA6zB,MAAA,MAAA,CACA,IAAAhqB,MAAAgqB,MAAAI,YAAA,KACA,GAAApqB,MAAA,EACA,OAAA8pB,MAOA,IADAE,MAAAA,MAAA15B,MAAA,EAAA0P,QACA0O,MAAA,qBACA,OAAAob,QAGAjU,MAIA,OAAAlH,MAAAkH,MAAA,GAAAhoB,KAAA,OAAAi8B,MAAAva,OAAAya,MAAArjC,OAAA,IAIA,IAAA0jC,oBAEA,cADA9V,OAAAvtB,OAAA,OAIA,SAAAsjC,SAAAhK,GACA,OAAAA,EA8BA,SAAAiK,cAAAjK,GACA,IAAAA,EACA,OAAA,EAGA,IAAA35B,OAAA25B,EAAA35B,OAEA,GAAAA,OAAA,EACA,OAAA,EAGA,GAAA,KAAA25B,EAAA5E,WAAA/0B,OAAA,IACA,KAAA25B,EAAA5E,WAAA/0B,OAAA,IACA,MAAA25B,EAAA5E,WAAA/0B,OAAA,IACA,MAAA25B,EAAA5E,WAAA/0B,OAAA,IACA,MAAA25B,EAAA5E,WAAA/0B,OAAA,IACA,MAAA25B,EAAA5E,WAAA/0B,OAAA,IACA,MAAA25B,EAAA5E,WAAA/0B,OAAA,IACA,KAAA25B,EAAA5E,WAAA/0B,OAAA,IACA,KAAA25B,EAAA5E,WAAA/0B,OAAA,GACA,OAAA,EAGA,IAAA,IAAAX,EAAAW,OAAA,GAAA,GAAAX,EAAAA,IACA,GAAA,KAAAs6B,EAAA5E,WAAA11B,GACA,OAAA,EAIA,OAAA,EAgFA,SAAAwkC,OAAAC,MAAAC,OACA,OAAAD,QAAAC,MACA,EAGA,OAAAD,MACA,EAGA,OAAAC,OACA,EAGAA,MAAAD,MACA,GAGA,EAzIAhkC,QAAA6zB,YAAA+P,kBAAAC,SAPA,SAAAlQ,MACA,OAAAmQ,cAAAnQ,MACA,IAAAA,KAGAA,MAWA3zB,QAAAqiC,cAAAuB,kBAAAC,SAPA,SAAAlQ,MACA,OAAAmQ,cAAAnQ,MACAA,KAAA9pB,MAAA,GAGA8pB,MAwEA3zB,QAAA+7B,2BA5BA,SAAAjF,SAAAC,SAAAmN,qBACA,IAAA/N,IAAA4N,OAAAjN,SAAAhwB,OAAAiwB,SAAAjwB,QACA,OAAA,IAAAqvB,IACAA,IAIA,IADAA,IAAAW,SAAAoD,aAAAnD,SAAAmD,cAEA/D,IAIA,IADAA,IAAAW,SAAAqD,eAAApD,SAAAoD,iBACA+J,oBACA/N,IAIA,IADAA,IAAAW,SAAAN,gBAAAO,SAAAP,iBAEAL,IAIA,IADAA,IAAAW,SAAAP,cAAAQ,SAAAR,eAEAJ,IAGA4N,OAAAjN,SAAAjzB,KAAAkzB,SAAAlzB,OAyCA7D,QAAAo9B,oCA5BA,SAAAtG,SAAAC,SAAAoN,sBACA,IAAAhO,IAAAW,SAAAP,cAAAQ,SAAAR,cACA,OAAA,IAAAJ,IACAA,IAIA,IADAA,IAAAW,SAAAN,gBAAAO,SAAAP,kBACA2N,qBACAhO,IAIA,KADAA,IAAA4N,OAAAjN,SAAAhwB,OAAAiwB,SAAAjwB,SAEAqvB,IAIA,IADAA,IAAAW,SAAAoD,aAAAnD,SAAAmD,cAEA/D,IAIA,IADAA,IAAAW,SAAAqD,eAAApD,SAAAoD,gBAEAhE,IAGA4N,OAAAjN,SAAAjzB,KAAAkzB,SAAAlzB,OAwDA7D,QAAAo3B,oCA5BA,SAAAN,SAAAC,UACA,IAAAZ,IAAAW,SAAAP,cAAAQ,SAAAR,cACA,OAAA,IAAAJ,IACAA,IAIA,IADAA,IAAAW,SAAAN,gBAAAO,SAAAP,iBAEAL,IAIA,KADAA,IAAA4N,OAAAjN,SAAAhwB,OAAAiwB,SAAAjwB,SAEAqvB,IAIA,IADAA,IAAAW,SAAAoD,aAAAnD,SAAAmD,cAEA/D,IAIA,IADAA,IAAAW,SAAAqD,eAAApD,SAAAoD,gBAEAhE,IAGA4N,OAAAjN,SAAAjzB,KAAAkzB,SAAAlzB,OAYA7D,QAAA04B,oBAHA,SAAAvwB,KACA,OAAA2J,KAAAxQ,MAAA6G,IAAAC,QAAA,iBAAA,MAuDApI,QAAA85B,iBA/CA,SAAAZ,WAAAkL,UAAAC,cA8BA,GA7BAD,UAAAA,WAAA,GAEAlL,aAEA,MAAAA,WAAAA,WAAAh5B,OAAA,IAAA,MAAAkkC,UAAA,KACAlL,YAAA,KAOAkL,UAAAlL,WAAAkL,WAiBAC,aAAA,CACA,IAAAC,OAAAnG,SAAAkG,cACA,IAAAC,OACA,MAAA,IAAAzkC,MAAA,oCAEA,GAAAykC,OAAAv/B,KAAA,CAEA,IAAAwU,MAAA+qB,OAAAv/B,KAAA4+B,YAAA,KACA,GAAApqB,QACA+qB,OAAAv/B,KAAAu/B,OAAAv/B,KAAAkL,UAAA,EAAAsJ,MAAA,IAGA6qB,UAAAh9B,KAAA+7B,YAAAmB,QAAAF,WAGA,OAAA9K,UAAA8K,sDCheApkC,QAAA8+B,mBAAAp/B,QAAA,8BAAAo/B,mBACA9+B,QAAAs4B,kBAAA54B,QAAA,6BAAA44B,kBACAt4B,QAAA6F,WAAAnG,QAAA,qBAAAmG,2ICMA,SAAAmqB,OAAAuU,SAEA,aAEA,iBAAAnkC,QAAA,iBAAAA,OAAAJ,QASAI,OAAAJ,QAAAgwB,OAAAwU,SACAD,QAAAvU,QAAA,GACA,SAAAyU,GACA,IAAAA,EAAAD,SACA,MAAA,IAAA3kC,MAAA,4CAEA,OAAA0kC,QAAAE,IAGAF,QAAAvU,QAtBA,CA0BA,oBAAAC,OAAAA,OAAA/sB,KAAA,SAAA+sB,OAAAyU,UAMA,aAEA,IAAAC,IAAA,GAEAC,SAAA9W,OAAA+W,eAEAh7B,MAAA86B,IAAA96B,MAEAi7B,KAAAH,IAAAG,KAAA,SAAAlZ,OACA,OAAA+Y,IAAAG,KAAA7kC,KAAA2rB,QACA,SAAAA,OACA,OAAA+Y,IAAAjwB,OAAAhB,MAAA,GAAAkY,QAIAllB,KAAAi+B,IAAAj+B,KAEAgJ,QAAAi1B,IAAAj1B,QAEAq1B,WAAA,GAEA/gC,SAAA+gC,WAAA/gC,SAEAghC,OAAAD,WAAAt8B,eAEAw8B,WAAAD,OAAAhhC,SAEAkhC,qBAAAD,WAAAhlC,KAAA6tB,QAEAqX,QAAA,GAEApW,WAAA,SAAAzmB,KAMA,MAAA,mBAAAA,KAAA,iBAAAA,IAAA88B,UAIAC,SAAA,SAAA/8B,KACA,OAAA,MAAAA,KAAAA,MAAAA,IAAA2nB,QAIAuU,SAAAvU,OAAAuU,SAIAc,0BAAA,CACA3gC,MAAA,EACAuC,KAAA,EACAq+B,OAAA,EACAC,UAAA,GAGA,SAAAC,QAAA3lC,KAAA4E,KAAAghC,KAGA,IAAAnmC,EAAA+P,IACAq2B,QAHAD,IAAAA,KAAAlB,UAGAoB,cAAA,UAGA,GADAD,OAAA3d,KAAAloB,KACA4E,KACA,IAAAnF,KAAA+lC,2BAYAh2B,IAAA5K,KAAAnF,IAAAmF,KAAAmhC,cAAAnhC,KAAAmhC,aAAAtmC,KAEAomC,OAAAG,aAAAvmC,EAAA+P,KAIAo2B,IAAAK,KAAAC,YAAAL,QAAAM,WAAAC,YAAAP,QAIA,SAAAQ,OAAA79B,KACA,OAAA,MAAAA,IACAA,IAAA,GAIA,iBAAAA,KAAA,mBAAAA,IACAy8B,WAAA/gC,SAAA/D,KAAAqI,OAAA,gBACAA,IAQA,IAIA89B,OAAA,SAAAC,SAAA/8B,SAIA,OAAA,IAAA88B,OAAAtiC,GAAAwiC,KAAAD,SAAA/8B,UA0VA,SAAAi9B,YAAAj+B,KAMA,IAAApI,SAAAoI,KAAA,WAAAA,KAAAA,IAAApI,OACAyE,KAAAwhC,OAAA79B,KAEA,OAAAymB,WAAAzmB,OAAA+8B,SAAA/8B,OAIA,UAAA3D,MAAA,IAAAzE,QACA,iBAAAA,QAAA,EAAAA,QAAAA,OAAA,KAAAoI,KArWA89B,OAAAtiC,GAAAsiC,OAAA7iC,UAAA,CAGAijC,OAbA,QAeAhjC,YAAA4iC,OAGAlmC,OAAA,EAEAg0B,QAAA,WACA,OAAArqB,MAAA5J,KAAAiD,OAKA6wB,IAAA,SAAA0S,KAGA,OAAA,MAAAA,IACA58B,MAAA5J,KAAAiD,MAIAujC,IAAA,EAAAvjC,KAAAujC,IAAAvjC,KAAAhD,QAAAgD,KAAAujC,MAKAC,UAAA,SAAAC,OAGA,IAAAngC,IAAA4/B,OAAA3+B,MAAAvE,KAAAM,cAAAmjC,OAMA,OAHAngC,IAAAogC,WAAA1jC,KAGAsD,KAIAmB,KAAA,SAAAgS,UACA,OAAAysB,OAAAz+B,KAAAzE,KAAAyW,WAGAtF,IAAA,SAAAsF,UACA,OAAAzW,KAAAwjC,UAAAN,OAAA/xB,IAAAnR,KAAA,SAAA2jC,KAAAtnC,GACA,OAAAoa,SAAA1Z,KAAA4mC,KAAAtnC,EAAAsnC,UAIAh9B,MAAA,WACA,OAAA3G,KAAAwjC,UAAA78B,MAAA6J,MAAAxQ,KAAA6E,aAGA+mB,MAAA,WACA,OAAA5rB,KAAA4jC,GAAA,IAGAjY,KAAA,WACA,OAAA3rB,KAAA4jC,IAAA,IAGAC,KAAA,WACA,OAAA7jC,KAAAwjC,UAAAN,OAAAY,KAAA9jC,KAAA,SAAA+jC,MAAA1nC,GACA,OAAAA,EAAA,GAAA,MAIA2nC,IAAA,WACA,OAAAhkC,KAAAwjC,UAAAN,OAAAY,KAAA9jC,KAAA,SAAA+jC,MAAA1nC,GACA,OAAAA,EAAA,MAIAunC,GAAA,SAAAvnC,GACA,IAAAkH,IAAAvD,KAAAhD,OACA8uB,GAAAzvB,GAAAA,EAAA,EAAAkH,IAAA,GACA,OAAAvD,KAAAwjC,UAAA,GAAA1X,GAAAA,EAAAvoB,IAAA,CAAAvD,KAAA8rB,IAAA,KAGAnf,IAAA,WACA,OAAA3M,KAAA0jC,YAAA1jC,KAAAM,eAKAkD,KAAAA,KACA2wB,KAAAsN,IAAAtN,KACA3hB,OAAAivB,IAAAjvB,QAGA0wB,OAAApkC,OAAAokC,OAAAtiC,GAAA9B,OAAA,WACA,IAAArB,QAAAkD,KAAAqD,IAAAigC,KAAAC,YAAAC,MACAC,OAAAv/B,UAAA,IAAA,GACAxI,EAAA,EACAW,OAAA6H,UAAA7H,OACAqnC,MAAA,EAsBA,IAnBA,kBAAAD,SACAC,KAAAD,OAGAA,OAAAv/B,UAAAxI,IAAA,GACAA,KAIA,iBAAA+nC,QAAAvY,WAAAuY,UACAA,OAAA,IAIA/nC,IAAAW,SACAonC,OAAApkC,KACA3D,KAGAA,EAAAW,OAAAX,IAGA,GAAA,OAAAoB,QAAAoH,UAAAxI,IAGA,IAAAsE,QAAAlD,QACAwmC,KAAAxmC,QAAAkD,MAIA,cAAAA,MAAAyjC,SAAAH,OAKAI,MAAAJ,OAAAf,OAAAoB,cAAAL,QACAC,YAAAlf,MAAA3hB,QAAA4gC,SACAjgC,IAAAogC,OAAAzjC,MAIAwjC,MADAD,cAAAlf,MAAA3hB,QAAAW,KACA,GACAkgC,aAAAhB,OAAAoB,cAAAtgC,KAGAA,IAFA,GAIAkgC,aAAA,EAGAE,OAAAzjC,MAAAuiC,OAAApkC,OAAAulC,KAAAF,MAAAF,YAGArhC,IAAAqhC,OACAG,OAAAzjC,MAAAsjC,OAOA,OAAAG,QAGAlB,OAAApkC,OAAA,CAGAylC,QAAA,UAlLA,QAkLAxR,KAAA+B,UAAA5vB,QAAA,MAAA,IAGAs/B,SAAA,EAEAzsB,MAAA,SAAA0sB,KACA,MAAA,IAAA9nC,MAAA8nC,MAGAzW,KAAA,aAEAsW,cAAA,SAAAl/B,KACA,IAAAs/B,MAAAC,KAIA,SAAAv/B,KAAA,oBAAAtE,SAAA/D,KAAAqI,UAIAs/B,MAAAhD,SAAAt8B,OASA,mBADAu/B,KAAA7C,OAAA/kC,KAAA2nC,MAAA,gBAAAA,MAAApkC,cACAyhC,WAAAhlC,KAAA4nC,QAAA3C,uBAGA4C,cAAA,SAAAx/B,KACA,IAAAzE,KAEA,IAAAA,QAAAyE,IACA,OAAA,EAEA,OAAA,GAKAy/B,WAAA,SAAAjoC,KAAAa,QAAA+kC,KACAD,QAAA3lC,KAAA,CAAAylC,MAAA5kC,SAAAA,QAAA4kC,OAAAG,MAGA/9B,KAAA,SAAAW,IAAAqR,UACA,IAAAzZ,OAAAX,EAAA,EAEA,GAAAgnC,YAAAj+B,KAEA,IADApI,OAAAoI,IAAApI,OACAX,EAAAW,SACA,IAAAyZ,SAAA1Z,KAAAqI,IAAA/I,GAAAA,EAAA+I,IAAA/I,IADAA,UAMA,IAAAA,KAAA+I,IACA,IAAA,IAAAqR,SAAA1Z,KAAAqI,IAAA/I,GAAAA,EAAA+I,IAAA/I,IACA,MAKA,OAAA+I,KAIA0/B,UAAA,SAAArD,IAAAsD,SACA,IAAAzhC,IAAAyhC,SAAA,GAaA,OAXA,MAAAtD,MACA4B,YAAAzY,OAAA6W,MACAyB,OAAA3+B,MAAAjB,IACA,iBAAAm+B,IACA,CAAAA,KAAAA,KAGAj+B,KAAAzG,KAAAuG,IAAAm+B,MAIAn+B,KAGA0hC,QAAA,SAAArB,KAAAlC,IAAAplC,GACA,OAAA,MAAAolC,KAAA,EAAAj1B,QAAAzP,KAAA0kC,IAAAkC,KAAAtnC,IAKAkI,MAAA,SAAAqnB,MAAAqZ,QAKA,IAJA,IAAA1hC,KAAA0hC,OAAAjoC,OACA8uB,EAAA,EACAzvB,EAAAuvB,MAAA5uB,OAEA8uB,EAAAvoB,IAAAuoB,IACAF,MAAAvvB,KAAA4oC,OAAAnZ,GAKA,OAFAF,MAAA5uB,OAAAX,EAEAuvB,OAGAkY,KAAA,SAAAL,MAAAhtB,SAAAyuB,QASA,IARA,IACAze,QAAA,GACApqB,EAAA,EACAW,OAAAymC,MAAAzmC,OACAmoC,gBAAAD,OAIA7oC,EAAAW,OAAAX,KACAoa,SAAAgtB,MAAApnC,GAAAA,KACA8oC,gBACA1e,QAAAjjB,KAAAigC,MAAApnC,IAIA,OAAAoqB,SAIAtV,IAAA,SAAAsyB,MAAAhtB,SAAA2uB,KACA,IAAApoC,OAAAwI,MACAnJ,EAAA,EACAiH,IAAA,GAGA,GAAA+/B,YAAAI,OAEA,IADAzmC,OAAAymC,MAAAzmC,OACAX,EAAAW,OAAAX,IAGA,OAFAmJ,MAAAiR,SAAAgtB,MAAApnC,GAAAA,EAAA+oC,OAGA9hC,IAAAE,KAAAgC,YAMA,IAAAnJ,KAAAonC,MAGA,OAFAj+B,MAAAiR,SAAAgtB,MAAApnC,GAAAA,EAAA+oC,OAGA9hC,IAAAE,KAAAgC,OAMA,OAAAo8B,KAAAt+B,MAIAmE,KAAA,EAIAw6B,QAAAA,UAGA,mBAAAoD,SACAnC,OAAAtiC,GAAAykC,OAAAC,UAAA7D,IAAA4D,OAAAC,WAIApC,OAAAz+B,KAAA,uEAAAgT,MAAA,KACA,SAAA8tB,GAAA5kC,MACAkhC,WAAA,WAAAlhC,KAAA,KAAAA,KAAA4rB,gBAmBA,IAAAiZ,OAWA,SAAAzY,QACA,IAAA1wB,EACA4lC,QACAwD,KACAC,QACAC,MACAC,SACAroC,QACAsoC,OACAC,iBACAC,UACAC,aAGAC,YACA3E,SACA4E,QACAC,eACAC,UACAC,cACA5f,QACA6f,SAGA/B,QAAA,SAAA,EAAA,IAAAgC,KACAC,aAAAzZ,OAAAuU,SACAmF,QAAA,EACAphB,KAAA,EACAqhB,WAAAC,cACAC,WAAAD,cACAE,cAAAF,cACAG,uBAAAH,cACAI,UAAA,SAAArqC,EAAAmK,GAIA,OAHAnK,IAAAmK,IACAm/B,cAAA,GAEA,GAIAlE,OAAA,GAAAv8B,eACAk8B,IAAA,GACA7sB,IAAA6sB,IAAA7sB,IACAoyB,WAAAvF,IAAAj+B,KACAA,KAAAi+B,IAAAj+B,KACAmD,MAAA86B,IAAA96B,MAIA6F,QAAA,SAAA0D,KAAAyzB,MAGA,IAFA,IAAAtnC,EAAA,EACAkH,IAAA2M,KAAAlT,OACAX,EAAAkH,IAAAlH,IACA,GAAA6T,KAAA7T,KAAAsnC,KACA,OAAAtnC,EAGA,OAAA,GAGA4qC,SAAA,6HAMAC,WAAA,sBAGAC,WAAA,0BAAAD,WACA,0CAGAE,WAAA,MAAAF,WAAA,KAAAC,WAAA,OAAAD,WAGA,gBAAAA,WAIA,2DAAAC,WAAA,OACAD,WAAA,OAEAG,QAAA,KAAAF,WAAA,wFAOAC,WAAA,eAOAE,YAAA,IAAAC,OAAAL,WAAA,IAAA,KACAM,MAAA,IAAAD,OAAA,IAAAL,WAAA,8BACAA,WAAA,KAAA,KAEAO,OAAA,IAAAF,OAAA,IAAAL,WAAA,KAAAA,WAAA,KACAQ,aAAA,IAAAH,OAAA,IAAAL,WAAA,WAAAA,WAAA,IAAAA,WACA,KACAS,SAAA,IAAAJ,OAAAL,WAAA,MAEAU,QAAA,IAAAL,OAAAF,SACAQ,YAAA,IAAAN,OAAA,IAAAJ,WAAA,KAEAW,UAAA,CACAtsB,GAAA,IAAA+rB,OAAA,MAAAJ,WAAA,KACAY,MAAA,IAAAR,OAAA,QAAAJ,WAAA,KACAa,IAAA,IAAAT,OAAA,KAAAJ,WAAA,SACAc,KAAA,IAAAV,OAAA,IAAAH,YACAc,OAAA,IAAAX,OAAA,IAAAF,SACAc,MAAA,IAAAZ,OAAA,yDACAL,WAAA,+BAAAA,WAAA,cACAA,WAAA,aAAAA,WAAA,SAAA,KACAz7B,KAAA,IAAA87B,OAAA,OAAAN,SAAA,KAAA,KAIAmB,aAAA,IAAAb,OAAA,IAAAL,WACA,mDAAAA,WACA,mBAAAA,WAAA,mBAAA,MAGAmB,MAAA,SACAC,QAAA,sCACAC,QAAA,SAEAC,QAAA,yBAGAC,WAAA,mCAEAC,SAAA,OAIAC,UAAA,IAAApB,OAAA,uBAAAL,WAAA,uBAAA,KACA0B,UAAA,SAAAha,OAAAia,QACA,IAAAjU,KAAA,KAAAhG,OAAAjoB,MAAA,GAAA,MAEA,OAAAkiC,SASAjU,KAAA,EACAyB,OAAAyS,aAAAlU,KAAA,OACAyB,OAAAyS,aAAAlU,MAAA,GAAA,MAAA,KAAAA,KAAA,SAKAmU,WAAA,sDACAC,WAAA,SAAAvjB,GAAAwjB,aACA,OAAAA,YAGA,OAAAxjB,GACA,IAIAA,GAAA9e,MAAA,GAAA,GAAA,KACA8e,GAAAsM,WAAAtM,GAAAzoB,OAAA,GAAA8D,SAAA,IAAA,IAIA,KAAA2kB,IAOAyjB,cAAA,WACAjD,eAGAkD,mBAAAC,cACA,SAAAzF,MACA,OAAA,IAAAA,KAAA0F,UAAA,aAAA1F,KAAA2F,SAAA/c,eAEA,CAAAgd,IAAA,aAAApjB,KAAA,WAIA,IACA3iB,KAAAgN,MACAixB,IAAA96B,MAAA5J,KAAAypC,aAAAgD,YACAhD,aAAAgD,YAMA/H,IAAA+E,aAAAgD,WAAAxsC,QAAAklC,SACA,MAAAjmC,GACAuH,KAAA,CAAAgN,MAAAixB,IAAAzkC,OAGA,SAAAonC,OAAAqF,KACAzC,WAAAx2B,MAAA4zB,OAAAz9B,MAAA5J,KAAA0sC,OAKA,SAAArF,OAAAqF,KAKA,IAJA,IAAA3d,EAAAsY,OAAApnC,OACAX,EAAA,EAGA+nC,OAAAtY,KAAA2d,IAAAptC,OACA+nC,OAAApnC,OAAA8uB,EAAA,IAKA,SAAA0Z,OAAArC,SAAA/8B,QAAA2+B,QAAA2E,MACA,IAAAC,EAAAttC,EAAAsnC,KAAAiG,IAAA7kB,MAAA8kB,OAAAC,YACAC,WAAA3jC,SAAAA,QAAA4jC,cAGA9H,SAAA97B,QAAAA,QAAA87B,SAAA,EAKA,GAHA6C,QAAAA,SAAA,GAGA,iBAAA5B,WAAAA,UACA,IAAAjB,UAAA,IAAAA,UAAA,KAAAA,SAEA,OAAA6C,QAIA,IAAA2E,OACAzD,YAAA7/B,SACAA,QAAAA,SAAAk7B,SAEA6E,gBAAA,CAIA,GAAA,KAAAjE,WAAAnd,MAAA0jB,WAAA1e,KAAAoZ,WAGA,GAAAwG,EAAA5kB,MAAA,IAGA,GAAA,IAAAmd,SAAA,CACA,KAAAyB,KAAAv9B,QAAA6jC,eAAAN,IAUA,OAAA5E,QALA,GAAApB,KAAA3tB,KAAA2zB,EAEA,OADA5E,QAAAvhC,KAAAmgC,MACAoB,aAYA,GAAAgF,aAAApG,KAAAoG,WAAAE,eAAAN,KACArD,SAAAlgC,QAAAu9B,OACAA,KAAA3tB,KAAA2zB,EAGA,OADA5E,QAAAvhC,KAAAmgC,MACAoB,YAKA,CAAA,GAAAhgB,MAAA,GAEA,OADAvhB,KAAAgN,MAAAu0B,QAAA3+B,QAAA8jC,qBAAA/G,WACA4B,QAGA,IAAA4E,EAAA5kB,MAAA,KAAAkd,QAAAkI,wBACA/jC,QAAA+jC,uBAGA,OADA3mC,KAAAgN,MAAAu0B,QAAA3+B,QAAA+jC,uBAAAR,IACA5E,QAKA,GAAA9C,QAAAmI,MACAtD,uBAAA3D,SAAA,QACAiD,YAAAA,UAAAtkC,KAAAqhC,aAIA,IAAAjB,UAAA,WAAA97B,QAAAkjC,SAAA/c,eAAA,CAYA,GAVAud,YAAA3G,SACA4G,WAAA3jC,QASA,IAAA87B,WACAyF,SAAA7lC,KAAAqhC,WAAAuE,aAAA5lC,KAAAqhC,WAAA,CAqBA,KAlBA4G,WAAArB,SAAA5mC,KAAAqhC,WAAAkH,YAAAjkC,QAAA28B,aACA38B,WAIAA,SAAA67B,QAAAqI,SAGAV,IAAAxjC,QAAAu8B,aAAA,OACAiH,IAAAA,IAAA1kC,QAAA6jC,WAAAC,YAEA5iC,QAAAw8B,aAAA,KAAAgH,IAAArF,UAMAloC,GADAwtC,OAAAjE,SAAAzC,WACAnmC,OACAX,KACAwtC,OAAAxtC,IAAAutC,IAAA,IAAAA,IAAA,UAAA,IACAW,WAAAV,OAAAxtC,IAEAytC,YAAAD,OAAA3lC,KAAA,KAGA,IAIA,OAHAV,KAAAgN,MAAAu0B,QACAgF,WAAAS,iBAAAV,cAEA/E,QACA,MAAA0F,UACA3D,uBAAA3D,UAAA,GACA,QACAyG,MAAArF,SACAn+B,QAAAskC,gBAAA,QAQA,OAAA7E,OAAA1C,SAAAj+B,QAAAsiC,MAAA,MAAAphC,QAAA2+B,QAAA2E,MASA,SAAA/C,cACA,IAAAjK,KAAA,GAYA,OAVA,SAAAiO,MAAArlC,IAAAE,OAQA,OALAk3B,KAAAl5B,KAAA8B,IAAA,KAAAmgC,KAAAmF,oBAGAD,MAAAjO,KAAAj0B,SAEAkiC,MAAArlC,IAAA,KAAAE,OASA,SAAAqlC,aAAAjqC,IAEA,OADAA,GAAA2jC,UAAA,EACA3jC,GAOA,SAAAkqC,OAAAlqC,IACA,IAAAmqC,GAAAzJ,SAAAoB,cAAA,YAEA,IACA,QAAA9hC,GAAAmqC,IACA,MAAA9uC,GACA,OAAA,EACA,QAGA8uC,GAAAhI,YACAgI,GAAAhI,WAAAC,YAAA+H,IAIAA,GAAA,MASA,SAAAC,UAAAC,MAAAC,SAIA,IAHA,IAAAzJ,IAAAwJ,MAAAxzB,MAAA,KACApb,EAAAolC,IAAAzkC,OAEAX,KACAopC,KAAA0F,WAAA1J,IAAAplC,IAAA6uC,QAUA,SAAAE,aAAA1uC,EAAAmK,GACA,IAAAwkC,IAAAxkC,GAAAnK,EACA4uC,KAAAD,KAAA,IAAA3uC,EAAAwlC,UAAA,IAAAr7B,EAAAq7B,UACAxlC,EAAA6uC,YAAA1kC,EAAA0kC,YAGA,GAAAD,KACA,OAAAA,KAIA,GAAAD,IACA,KAAAA,IAAAA,IAAAG,aACA,GAAAH,MAAAxkC,EACA,OAAA,EAKA,OAAAnK,EAAA,GAAA,EAOA,SAAA+uC,kBAAAhqC,MACA,OAAA,SAAAkiC,MAEA,MAAA,UADAA,KAAA2F,SAAA/c,eACAoX,KAAAliC,OAAAA,MAQA,SAAAiqC,mBAAAjqC,MACA,OAAA,SAAAkiC,MACA,IAAAhjC,KAAAgjC,KAAA2F,SAAA/c,cACA,OAAA,UAAA5rB,MAAA,WAAAA,OAAAgjC,KAAAliC,OAAAA,MAQA,SAAAkqC,qBAAAtC,UAGA,OAAA,SAAA1F,MAKA,MAAA,SAAAA,KASAA,KAAAZ,aAAA,IAAAY,KAAA0F,SAGA,UAAA1F,KACA,UAAAA,KAAAZ,WACAY,KAAAZ,WAAAsG,WAAAA,SAEA1F,KAAA0F,WAAAA,SAMA1F,KAAAiI,aAAAvC,UAIA1F,KAAAiI,cAAAvC,UACAF,mBAAAxF,QAAA0F,SAGA1F,KAAA0F,WAAAA,SAKA,UAAA1F,MACAA,KAAA0F,WAAAA,UAYA,SAAAwC,uBAAAjrC,IACA,OAAAiqC,aAAA,SAAAiB,UAEA,OADAA,UAAAA,SACAjB,aAAA,SAAAnB,KAAAjjB,SAMA,IALA,IAAAqF,EACAigB,aAAAnrC,GAAA,GAAA8oC,KAAA1sC,OAAA8uC,UACAzvC,EAAA0vC,aAAA/uC,OAGAX,KACAqtC,KAAA5d,EAAAigB,aAAA1vC,MACAqtC,KAAA5d,KAAArF,QAAAqF,GAAA4d,KAAA5d,SAYA,SAAAue,YAAAjkC,SACA,OAAAA,cAAA,IAAAA,QAAA8jC,sBAAA9jC,QAkrCA,IAAA/J,KA9qCA4lC,QAAAuD,OAAAvD,QAAA,GAOA0D,MAAAH,OAAAG,MAAA,SAAAhC,MACA,IAAAqI,UAAArI,KAAAsI,aACA/F,SAAAvC,KAAAqG,eAAArG,MAAAuI,gBAKA,OAAA7D,MAAAvmC,KAAAkqC,WAAA9F,SAAAA,QAAAoD,UAAA,SAQArD,YAAAT,OAAAS,YAAA,SAAAzkC,MACA,IAAA2qC,WAAAC,UACA5J,IAAAhhC,KAAAA,KAAAwoC,eAAAxoC,KAAAglC,aAOA,OAAAhE,KAAAlB,UAAA,IAAAkB,IAAAN,UAAAM,IAAA0J,kBAMAhG,SADA5E,SAAAkB,KACA0J,gBACA/F,gBAAAR,MAAArE,UAQAkF,cAAAlF,WACA8K,UAAA9K,SAAA+K,cAAAD,UAAAv1B,MAAAu1B,YAGAA,UAAAE,iBACAF,UAAAE,iBAAA,SAAApD,eAAA,GAGAkD,UAAAG,aACAH,UAAAG,YAAA,WAAArD,gBASAjH,QAAAqI,MAAAQ,OAAA,SAAAC,IAEA,OADA7E,QAAApD,YAAAiI,IAAAjI,YAAAxB,SAAAoB,cAAA,aACA,IAAAqI,GAAAP,mBACAO,GAAAP,iBAAA,uBAAAxtC,SASAilC,QAAAmF,WAAA0D,OAAA,SAAAC,IAEA,OADAA,GAAAyB,UAAA,KACAzB,GAAApI,aAAA,eAOAV,QAAAiI,qBAAAY,OAAA,SAAAC,IAEA,OADAA,GAAAjI,YAAAxB,SAAAmL,cAAA,MACA1B,GAAAb,qBAAA,KAAAltC,SAIAilC,QAAAkI,uBAAA3B,QAAA1mC,KAAAw/B,SAAA6I,wBAMAlI,QAAAyK,QAAA5B,OAAA,SAAAC,IAEA,OADA7E,QAAApD,YAAAiI,IAAA/0B,GAAAuuB,SACAjD,SAAAqL,oBAAArL,SAAAqL,kBAAApI,SAAAvnC,SAIAilC,QAAAyK,SACAjH,KAAAmH,OAAA,GAAA,SAAA52B,IACA,IAAA62B,OAAA72B,GAAA9Q,QAAAyjC,UAAAC,WACA,OAAA,SAAAjF,MACA,OAAAA,KAAAhB,aAAA,QAAAkK,SAGApH,KAAAqH,KAAA,GAAA,SAAA92B,GAAA5P,SACA,QAAA,IAAAA,QAAA6jC,gBAAA9D,eAAA,CACA,IAAAxC,KAAAv9B,QAAA6jC,eAAAj0B,IACA,OAAA2tB,KAAA,CAAAA,MAAA,OAIA8B,KAAAmH,OAAA,GAAA,SAAA52B,IACA,IAAA62B,OAAA72B,GAAA9Q,QAAAyjC,UAAAC,WACA,OAAA,SAAAjF,MACA,IAAAniC,UAAA,IAAAmiC,KAAAoJ,kBACApJ,KAAAoJ,iBAAA,MACA,OAAAvrC,MAAAA,KAAAgE,QAAAqnC,SAMApH,KAAAqH,KAAA,GAAA,SAAA92B,GAAA5P,SACA,QAAA,IAAAA,QAAA6jC,gBAAA9D,eAAA,CACA,IAAA3kC,KAAAnF,EAAAonC,MACAE,KAAAv9B,QAAA6jC,eAAAj0B,IAEA,GAAA2tB,KAAA,CAIA,IADAniC,KAAAmiC,KAAAoJ,iBAAA,QACAvrC,KAAAgE,QAAAwQ,GACA,MAAA,CAAA2tB,MAMA,IAFAF,MAAAr9B,QAAAumC,kBAAA32B,IACA3Z,EAAA,EACAsnC,KAAAF,MAAApnC,MAEA,IADAmF,KAAAmiC,KAAAoJ,iBAAA,QACAvrC,KAAAgE,QAAAwQ,GACA,MAAA,CAAA2tB,MAKA,MAAA,MAMA8B,KAAAqH,KAAA,IAAA7K,QAAAiI,qBACA,SAAA8C,IAAA5mC,SACA,YAAA,IAAAA,QAAA8jC,qBACA9jC,QAAA8jC,qBAAA8C,KAGA/K,QAAAmI,IACAhkC,QAAAokC,iBAAAwC,UADA,GAKA,SAAAA,IAAA5mC,SACA,IAAAu9B,KACAnZ,IAAA,GACAnuB,EAAA,EAGA0oC,QAAA3+B,QAAA8jC,qBAAA8C,KAGA,GAAA,MAAAA,IASA,OAAAjI,QARA,KAAApB,KAAAoB,QAAA1oC,MACA,IAAAsnC,KAAAzB,UACA1X,IAAAhnB,KAAAmgC,MAIA,OAAAnZ,KAMAib,KAAAqH,KAAA,MAAA7K,QAAAkI,wBAAA,SAAAqC,UAAApmC,SACA,QAAA,IAAAA,QAAA+jC,wBAAAhE,eACA,OAAA//B,QAAA+jC,uBAAAqC,YAUAnG,cAAA,GAOAD,UAAA,IAEAnE,QAAAmI,IAAA5B,QAAA1mC,KAAAw/B,SAAAkJ,qBAIAM,OAAA,SAAAC,IAEA,IAAAvtC,MAOA0oC,QAAApD,YAAAiI,IAAAkC,UAAA,UAAA1I,QAAA,qBACAA,QAAA,kEAOAwG,GAAAP,iBAAA,wBAAAxtC,QACAopC,UAAA5iC,KAAA,SAAA0jC,WAAA,gBAKA6D,GAAAP,iBAAA,cAAAxtC,QACAopC,UAAA5iC,KAAA,MAAA0jC,WAAA,aAAAD,SAAA,KAIA8D,GAAAP,iBAAA,QAAAjG,QAAA,MAAAvnC,QACAopC,UAAA5iC,KAAA,OAQAhG,MAAA8jC,SAAAoB,cAAA,UACAE,aAAA,OAAA,IACAmI,GAAAjI,YAAAtlC,OACAutC,GAAAP,iBAAA,aAAAxtC,QACAopC,UAAA5iC,KAAA,MAAA0jC,WAAA,QAAAA,WAAA,KACAA,WAAA,gBAMA6D,GAAAP,iBAAA,YAAAxtC,QACAopC,UAAA5iC,KAAA,YAMAunC,GAAAP,iBAAA,KAAAjG,QAAA,MAAAvnC,QACAopC,UAAA5iC,KAAA,YAKAunC,GAAAP,iBAAA,QACApE,UAAA5iC,KAAA,iBAGAsnC,OAAA,SAAAC,IACAA,GAAAkC,UAAA,oFAKA,IAAAzvC,MAAA8jC,SAAAoB,cAAA,SACAllC,MAAAolC,aAAA,OAAA,UACAmI,GAAAjI,YAAAtlC,OAAAolC,aAAA,OAAA,KAIAmI,GAAAP,iBAAA,YAAAxtC,QACAopC,UAAA5iC,KAAA,OAAA0jC,WAAA,eAKA,IAAA6D,GAAAP,iBAAA,YAAAxtC,QACAopC,UAAA5iC,KAAA,WAAA,aAKA0iC,QAAApD,YAAAiI,IAAA1B,UAAA,EACA,IAAA0B,GAAAP,iBAAA,aAAAxtC,QACAopC,UAAA5iC,KAAA,WAAA,aAKAunC,GAAAP,iBAAA,QACApE,UAAA5iC,KAAA,YAIAy+B,QAAAiL,gBAAA1E,QAAA1mC,KAAA2kB,QAAAyf,QAAAzf,SACAyf,QAAAiH,uBACAjH,QAAAkH,oBACAlH,QAAAmH,kBACAnH,QAAAoH,qBAEAxC,OAAA,SAAAC,IAIA9I,QAAAsL,kBAAA9mB,QAAA1pB,KAAAguC,GAAA,KAIAtkB,QAAA1pB,KAAAguC,GAAA,aACA1E,cAAA7iC,KAAA,KAAA6jC,WAIAjB,UAAAA,UAAAppC,QAAA,IAAAuqC,OAAAnB,UAAAliC,KAAA,MACAmiC,cAAAA,cAAArpC,QAAA,IAAAuqC,OAAAlB,cAAAniC,KAAA,MAIAioC,WAAA3D,QAAA1mC,KAAAokC,QAAAsH,yBAKAlH,SAAA6F,YAAA3D,QAAA1mC,KAAAokC,QAAAI,UACA,SAAA5pC,EAAAmK,GACA,IAAA4mC,MAAA,IAAA/wC,EAAAwlC,SAAAxlC,EAAAwvC,gBAAAxvC,EACAgxC,IAAA7mC,GAAAA,EAAAk8B,WACA,OAAArmC,IAAAgxC,QAAAA,KAAA,IAAAA,IAAAxL,YACAuL,MAAAnH,SACAmH,MAAAnH,SAAAoH,KACAhxC,EAAA8wC,yBAAA,GAAA9wC,EAAA8wC,wBAAAE,QAGA,SAAAhxC,EAAAmK,GACA,GAAAA,EACA,KAAAA,EAAAA,EAAAk8B,YACA,GAAAl8B,IAAAnK,EACA,OAAA,EAIA,OAAA,GAOAqqC,UAAAoF,WACA,SAAAzvC,EAAAmK,GAGA,GAAAnK,IAAAmK,EAEA,OADAm/B,cAAA,EACA,EAIA,IAAA2H,SAAAjxC,EAAA8wC,yBAAA3mC,EAAA2mC,wBACA,OAAAG,UAgBA,GAPAA,SAAAjxC,EAAAstC,eAAAttC,KAAAmK,EAAAmjC,eAAAnjC,GACAnK,EAAA8wC,wBAAA3mC,GAGA,KAIAo7B,QAAA2L,cAAA/mC,EAAA2mC,wBAAA9wC,KAAAixC,QAOAjxC,GAAA4kC,UAAA5kC,EAAAstC,eAAAxD,cACAF,SAAAE,aAAA9pC,IACA,EAOAmK,GAAAy6B,UAAAz6B,EAAAmjC,eAAAxD,cACAF,SAAAE,aAAA3/B,GACA,EAIAk/B,UACAv5B,QAAAu5B,UAAArpC,GAAA8P,QAAAu5B,UAAAl/B,GACA,EAGA,EAAA8mC,SAAA,EAAA,IAEA,SAAAjxC,EAAAmK,GAGA,GAAAnK,IAAAmK,EAEA,OADAm/B,cAAA,EACA,EAGA,IAAAqF,IACAhvC,EAAA,EACAwxC,IAAAnxC,EAAAqmC,WACA2K,IAAA7mC,EAAAk8B,WACA+K,GAAA,CAAApxC,GACAqxC,GAAA,CAAAlnC,GAGA,IAAAgnC,MAAAH,IAMA,OAAAhxC,GAAA4kC,UAAA,EACAz6B,GAAAy6B,SAAA,EAEAuM,KAAA,EACAH,IAAA,EACA3H,UACAv5B,QAAAu5B,UAAArpC,GAAA8P,QAAAu5B,UAAAl/B,GACA,EAGA,GAAAgnC,MAAAH,IACA,OAAAtC,aAAA1uC,EAAAmK,GAKA,IADAwkC,IAAA3uC,EACA2uC,IAAAA,IAAAtI,YACA+K,GAAAxpC,QAAA+mC,KAGA,IADAA,IAAAxkC,EACAwkC,IAAAA,IAAAtI,YACAgL,GAAAzpC,QAAA+mC,KAIA,KAAAyC,GAAAzxC,KAAA0xC,GAAA1xC,IACAA,IAGA,OAAAA,EAGA+uC,aAAA0C,GAAAzxC,GAAA0xC,GAAA1xC,IAOAyxC,GAAAzxC,IAAAmqC,cAAA,EACAuH,GAAA1xC,IAAAmqC,aAAA,EAEA,IAGAlF,UAGAkE,OAAA/e,QAAA,SAAAlQ,KAAAy3B,UACA,OAAAxI,OAAAjvB,KAAA,KAAA,KAAAy3B,WAGAxI,OAAA0H,gBAAA,SAAAvJ,KAAAptB,MAGA,GAFA0vB,YAAAtC,MAEA1B,QAAAiL,iBAAA/G,iBACAW,uBAAAvwB,KAAA,QACA8vB,gBAAAA,cAAAvkC,KAAAyU,UACA6vB,YAAAA,UAAAtkC,KAAAyU,OAEA,IACA,IAAAjT,IAAAmjB,QAAA1pB,KAAA4mC,KAAAptB,MAGA,GAAAjT,KAAA2+B,QAAAsL,mBAIA5J,KAAArC,UAAA,KAAAqC,KAAArC,SAAAY,SACA,OAAA5+B,IAEA,MAAArH,GACA6qC,uBAAAvwB,MAAA,GAIA,OAAA,EAAAivB,OAAAjvB,KAAA+qB,SAAA,KAAA,CAAAqC,OAAA3mC,QAGAwoC,OAAAc,SAAA,SAAAlgC,QAAAu9B,MAUA,OAHAv9B,QAAA4jC,eAAA5jC,UAAAk7B,UACA2E,YAAA7/B,SAEAkgC,SAAAlgC,QAAAu9B,OAGA6B,OAAAyI,KAAA,SAAAtK,KAAAhjC,OAOAgjC,KAAAqG,eAAArG,OAAArC,UACA2E,YAAAtC,MAGA,IAAA/iC,GAAA6kC,KAAA0F,WAAAxqC,KAAA4rB,eAGAngB,IAAAxL,IAAAkhC,OAAA/kC,KAAA0oC,KAAA0F,WAAAxqC,KAAA4rB,eACA3rB,GAAA+iC,KAAAhjC,MAAAwlC,qBACAvjC,EAEA,YAAAA,IAAAwJ,IACAA,IACA61B,QAAAmF,aAAAjB,eACAxC,KAAAhB,aAAAhiC,OACAyL,IAAAu3B,KAAAoJ,iBAAApsC,QAAAyL,IAAA8hC,UACA9hC,IAAA5G,MACA,MAGAggC,OAAA5W,OAAA,SAAAuf,KACA,OAAAA,IAAA,IAAAjpC,QAAA6jC,WAAAC,aAGAxD,OAAAztB,MAAA,SAAA0sB,KACA,MAAA,IAAA9nC,MAAA,0CAAA8nC,MAOAe,OAAA4I,WAAA,SAAArJ,SACA,IAAApB,KACA0K,WAAA,GACAviB,EAAA,EACAzvB,EAAA,EAOA,GAJA2pC,cAAA/D,QAAAqM,iBACAvI,WAAA9D,QAAAsM,YAAAxJ,QAAAp+B,MAAA,GACAo+B,QAAA5Q,KAAA4S,WAEAf,aAAA,CACA,KAAArC,KAAAoB,QAAA1oC,MACAsnC,OAAAoB,QAAA1oC,KACAyvB,EAAAuiB,WAAA7qC,KAAAnH,IAGA,KAAAyvB,KACAiZ,QAAAvyB,OAAA67B,WAAAviB,GAAA,GAQA,OAFAia,UAAA,KAEAhB,SAOAW,QAAAF,OAAAE,QAAA,SAAA/B,MACA,IAAAniC,KACA8B,IAAA,GACAjH,EAAA,EACA6lC,SAAAyB,KAAAzB,SAEA,GAAAA,UAQA,GAAA,IAAAA,UAAA,IAAAA,UAAA,KAAAA,SAAA,CAIA,GAAA,iBAAAyB,KAAA6K,YACA,OAAA7K,KAAA6K,YAIA,IAAA7K,KAAAA,KAAA8K,WAAA9K,KAAAA,KAAAA,KAAA6H,YACAloC,KAAAoiC,QAAA/B,WAGA,GAAA,IAAAzB,UAAA,IAAAA,SACA,OAAAyB,KAAA+K,eAnBA,KAAAltC,KAAAmiC,KAAAtnC,MAGAiH,KAAAoiC,QAAAlkC,MAqBA,OAAA8B,MAGAmiC,KAAAD,OAAAmJ,UAAA,CAGA/D,YAAA,GAEAgE,aAAA/D,aAEA9lB,MAAA+iB,UAEAqD,WAAA,GAEA2B,KAAA,GAEAvW,SAAA,CACAxH,IAAA,CAAAwa,IAAA,aAAA3d,OAAA,GACAijB,IAAA,CAAAtF,IAAA,cACAuF,IAAA,CAAAvF,IAAA,kBAAA3d,OAAA,GACAmjB,IAAA,CAAAxF,IAAA,oBAGAyF,UAAA,CACA/G,KAAA,SAAAljB,OAWA,OAVAA,MAAA,GAAAA,MAAA,GAAA7f,QAAAyjC,UAAAC,WAGA7jB,MAAA,IAAAA,MAAA,IAAAA,MAAA,IACAA,MAAA,IAAA,IAAA7f,QAAAyjC,UAAAC,WAEA,OAAA7jB,MAAA,KACAA,MAAA,GAAA,IAAAA,MAAA,GAAA,KAGAA,MAAApe,MAAA,EAAA,IAGAwhC,MAAA,SAAApjB,OAiCA,OArBAA,MAAA,GAAAA,MAAA,GAAAwH,cAEA,QAAAxH,MAAA,GAAApe,MAAA,EAAA,IAGAoe,MAAA,IACAygB,OAAAztB,MAAAgN,MAAA,IAKAA,MAAA,KAAAA,MAAA,GACAA,MAAA,IAAAA,MAAA,IAAA,GACA,GAAA,SAAAA,MAAA,IAAA,QAAAA,MAAA,KACAA,MAAA,KAAAA,MAAA,GAAAA,MAAA,IAAA,QAAAA,MAAA,KAGAA,MAAA,IACAygB,OAAAztB,MAAAgN,MAAA,IAGAA,OAGAmjB,OAAA,SAAAnjB,OACA,IAAAkqB,OACAC,UAAAnqB,MAAA,IAAAA,MAAA,GAEA,OAAA+iB,UAAA,MAAAhmC,KAAAijB,MAAA,IACA,MAIAA,MAAA,GACAA,MAAA,GAAAA,MAAA,IAAAA,MAAA,IAAA,GAGAmqB,UAAAtH,QAAA9lC,KAAAotC,YAGAD,OAAArJ,SAAAsJ,UAAA,MAGAD,OAAAC,SAAA1iC,QAAA,IAAA0iC,SAAAlyC,OAAAiyC,QAAAC,SAAAlyC,UAGA+nB,MAAA,GAAAA,MAAA,GAAApe,MAAA,EAAAsoC,QACAlqB,MAAA,GAAAmqB,SAAAvoC,MAAA,EAAAsoC,SAIAlqB,MAAApe,MAAA,EAAA,MAIAimC,OAAA,CAEA5E,IAAA,SAAAmH,kBACA,IAAA7F,SAAA6F,iBAAAjqC,QAAAyjC,UAAAC,WAAArc,cACA,MAAA,MAAA4iB,iBACA,WACA,OAAA,GAEA,SAAAxL,MACA,OAAAA,KAAA2F,UAAA3F,KAAA2F,SAAA/c,gBAAA+c,WAIAvB,MAAA,SAAAyE,WACA,IAAA4C,QAAA1I,WAAA8F,UAAA,KAEA,OAAA4C,UACAA,QAAA,IAAA7H,OAAA,MAAAL,WACA,IAAAsF,UAAA,IAAAtF,WAAA,SAAAR,WACA8F,UAAA,SAAA7I,MACA,OAAAyL,QAAAttC,KACA,iBAAA6hC,KAAA6I,WAAA7I,KAAA6I,gBACA,IAAA7I,KAAAhB,cACAgB,KAAAhB,aAAA,UACA,OAKAsF,KAAA,SAAAtnC,KAAA0uC,SAAAC,OACA,OAAA,SAAA3L,MACA,IAAAp7B,OAAAi9B,OAAAyI,KAAAtK,KAAAhjC,MAEA,OAAA,MAAA4H,OACA,OAAA8mC,UAEAA,WAIA9mC,QAAA,GAIA,MAAA8mC,SAAA9mC,SAAA+mC,MACA,OAAAD,SAAA9mC,SAAA+mC,MACA,OAAAD,SAAAC,OAAA,IAAA/mC,OAAAiE,QAAA8iC,OACA,OAAAD,SAAAC,QAAA,EAAA/mC,OAAAiE,QAAA8iC,OACA,OAAAD,SAAAC,OAAA/mC,OAAA5B,OAAA2oC,MAAAtyC,UAAAsyC,MACA,OAAAD,UAAA,GAAA,IAAA9mC,OAAArD,QAAAoiC,YAAA,KAAA,KAAA96B,QAAA8iC,OACA,OAAAD,WAAA9mC,SAAA+mC,OAAA/mC,OAAA5B,MAAA,EAAA2oC,MAAAtyC,OAAA,KAAAsyC,MAAA,QAOAnH,MAAA,SAAA1mC,KAAA8tC,KAAAC,UAAA5jB,MAAAD,MACA,IAAArW,OAAA,QAAA7T,KAAAkF,MAAA,EAAA,GACA8oC,QAAA,SAAAhuC,KAAAkF,OAAA,GACA+oC,OAAA,YAAAH,KAEA,OAAA,IAAA3jB,OAAA,IAAAD,KAGA,SAAAgY,MACA,QAAAA,KAAAZ,YAGA,SAAAY,KAAA7yB,SAAA6+B,KACA,IAAAhF,MAAAiF,YAAAC,WAAAruC,KAAAsuC,UAAAlrC,MACA2kC,IAAAj0B,SAAAm6B,QAAA,cAAA,kBACA/gC,OAAAi1B,KAAAZ,WACApiC,KAAA+uC,QAAA/L,KAAA2F,SAAA/c,cACAwjB,UAAAJ,MAAAD,OACApE,MAAA,EAEA,GAAA58B,OAAA,CAGA,GAAA4G,OAAA,CACA,KAAAi0B,KAAA,CAEA,IADA/nC,KAAAmiC,KACAniC,KAAAA,KAAA+nC,MACA,GAAAmG,OACAluC,KAAA8nC,SAAA/c,gBAAA5rB,KACA,IAAAa,KAAA0gC,SAEA,OAAA,EAKAt9B,MAAA2kC,IAAA,SAAA9nC,OAAAmD,OAAA,cAEA,OAAA,EAMA,GAHAA,MAAA,CAAA6qC,QAAA/gC,OAAA+/B,WAAA//B,OAAAuwB,WAGAwQ,SAAAM,UAkBA,IAHAzE,MADAwE,WADAnF,OAHAiF,aAJAC,YADAruC,KAAAkN,QACA61B,WAAA/iC,KAAA+iC,SAAA,KAIA/iC,KAAAwuC,YACAH,WAAAruC,KAAAwuC,UAAA,KAEAvuC,OAAA,IACA,KAAAglC,SAAAkE,MAAA,KACAA,MAAA,GACAnpC,KAAAsuC,WAAAphC,OAAA86B,WAAAsG,WAEAtuC,OAAAsuC,WAAAtuC,MAAAA,KAAA+nC,OAGA+B,KAAAwE,UAAA,IAAAlrC,MAAAgQ,OAGA,GAAA,IAAApT,KAAA0gC,YAAAoJ,MAAA9pC,OAAAmiC,KAAA,CACAiM,YAAAnuC,MAAA,CAAAglC,QAAAqJ,UAAAxE,MACA,YAyBA,GAlBAyE,WAaAzE,KADAwE,WADAnF,OAHAiF,aAJAC,YADAruC,KAAAmiC,MACAY,WAAA/iC,KAAA+iC,SAAA,KAIA/iC,KAAAwuC,YACAH,WAAAruC,KAAAwuC,UAAA,KAEAvuC,OAAA,IACA,KAAAglC,SAAAkE,MAAA,KAMA,IAAAW,KAGA,MAAA9pC,OAAAsuC,WAAAtuC,MAAAA,KAAA+nC,OACA+B,KAAAwE,UAAA,IAAAlrC,MAAAgQ,UAEA86B,OACAluC,KAAA8nC,SAAA/c,gBAAA5rB,KACA,IAAAa,KAAA0gC,cACAoJ,OAGAyE,YAMAH,aALAC,WAAAruC,KAAA+iC,WACA/iC,KAAA+iC,SAAA,KAIA/iC,KAAAwuC,YACAH,WAAAruC,KAAAwuC,UAAA,KAEAvuC,MAAA,CAAAglC,QAAA6E,OAGA9pC,OAAAmiC,SAUA,OADA2H,MAAA3f,QACAC,OAAA0f,KAAA1f,OAAA,GAAA,GAAA0f,KAAA1f,SAKAsc,OAAA,SAAA+H,OAAAnE,UAMA,IAAAvkC,KACA3G,GAAA6kC,KAAA4B,QAAA4I,SAAAxK,KAAAyK,WAAAD,OAAA1jB,gBACAiZ,OAAAztB,MAAA,uBAAAk4B,QAKA,OAAArvC,GAAA2jC,SACA3jC,GAAAkrC,UAIA,EAAAlrC,GAAA5D,QACAuK,KAAA,CAAA0oC,OAAAA,OAAA,GAAAnE,UACArG,KAAAyK,WAAA3qC,eAAA0qC,OAAA1jB,eACAse,aAAA,SAAAnB,KAAAjjB,SAIA,IAHA,IAAAgE,IACAnF,QAAA1kB,GAAA8oC,KAAAoC,UACAzvC,EAAAipB,QAAAtoB,OACAX,KAEAqtC,KADAjf,IAAAje,QAAAk9B,KAAApkB,QAAAjpB,OACAoqB,QAAAgE,KAAAnF,QAAAjpB,MAGA,SAAAsnC,MACA,OAAA/iC,GAAA+iC,KAAA,EAAAp8B,QAIA3G,KAIAymC,QAAA,CAGA8I,IAAAtF,aAAA,SAAA1H,UAKA,IAAA3lC,MAAA,GACAunC,QAAA,GACAqL,QAAA7yC,QAAA4lC,SAAAj+B,QAAAsiC,MAAA,OAEA,OAAA4I,QAAA7L,SACAsG,aAAA,SAAAnB,KAAAjjB,QAAA3V,SAAA6+B,KAMA,IALA,IAAAhM,KACA0M,UAAAD,QAAA1G,KAAA,KAAAiG,IAAA,IACAtzC,EAAAqtC,KAAA1sC,OAGAX,MACAsnC,KAAA0M,UAAAh0C,MACAqtC,KAAArtC,KAAAoqB,QAAApqB,GAAAsnC,SAIA,SAAAA,KAAA7yB,SAAA6+B,KAMA,OALAnyC,MAAA,GAAAmmC,KACAyM,QAAA5yC,MAAA,KAAAmyC,IAAA5K,SAGAvnC,MAAA,GAAA,MACAunC,QAAAnwB,SAIAib,IAAAgb,aAAA,SAAA1H,UACA,OAAA,SAAAQ,MACA,OAAA,EAAA6B,OAAArC,SAAAQ,MAAA3mC,UAIAspC,SAAAuE,aAAA,SAAA/lB,MAEA,OADAA,KAAAA,KAAA5f,QAAAyjC,UAAAC,WACA,SAAAjF,MACA,OAAA,GAAAA,KAAA6K,aAAA9I,QAAA/B,OAAAn3B,QAAAsY,SAWAwrB,KAAAzF,aAAA,SAAAyF,MAOA,OAJAzI,YAAA/lC,KAAAwuC,MAAA,KACA9K,OAAAztB,MAAA,qBAAAu4B,MAEAA,KAAAA,KAAAprC,QAAAyjC,UAAAC,WAAArc,cACA,SAAAoX,MACA,IAAA4M,SACA,GACA,GAAAA,SAAApK,eACAxC,KAAA2M,KACA3M,KAAAhB,aAAA,aAAAgB,KAAAhB,aAAA,QAGA,OADA4N,SAAAA,SAAAhkB,iBACA+jB,MAAA,IAAAC,SAAA/jC,QAAA8jC,KAAA,YAEA3M,KAAAA,KAAAZ,aAAA,IAAAY,KAAAzB,UACA,OAAA,KAKAkC,OAAA,SAAAT,MACA,IAAAhiC,KAAAorB,OAAAzd,UAAAyd,OAAAzd,SAAA3N,KACA,OAAAA,MAAAA,KAAAgF,MAAA,KAAAg9B,KAAA3tB,IAGAgC,KAAA,SAAA2rB,MACA,OAAAA,OAAAuC,SAGAsK,MAAA,SAAA7M,MACA,OAAAA,OAAArC,SAAAmP,iBACAnP,SAAAoP,UAAApP,SAAAoP,gBACA/M,KAAAliC,MAAAkiC,KAAAgN,OAAAhN,KAAAiN,WAIAC,QAAAlF,sBAAA,GACAtC,SAAAsC,sBAAA,GAEAmF,QAAA,SAAAnN,MAIA,IAAA2F,SAAA3F,KAAA2F,SAAA/c,cACA,MAAA,UAAA+c,YAAA3F,KAAAmN,SACA,WAAAxH,YAAA3F,KAAAoN,UAGAA,SAAA,SAAApN,MASA,OALAA,KAAAZ,YAEAY,KAAAZ,WAAAiO,eAGA,IAAArN,KAAAoN,UAIAvsC,MAAA,SAAAm/B,MAMA,IAAAA,KAAAA,KAAA8K,WAAA9K,KAAAA,KAAAA,KAAA6H,YACA,GAAA7H,KAAAzB,SAAA,EACA,OAAA,EAGA,OAAA,GAGAxzB,OAAA,SAAAi1B,MACA,OAAA8B,KAAA4B,QAAA,MAAA1D,OAIAsN,OAAA,SAAAtN,MACA,OAAA4E,QAAAzmC,KAAA6hC,KAAA2F,WAGA9rC,MAAA,SAAAmmC,MACA,OAAA2E,QAAAxmC,KAAA6hC,KAAA2F,WAGA4H,OAAA,SAAAvN,MACA,IAAAhjC,KAAAgjC,KAAA2F,SAAA/c,cACA,MAAA,UAAA5rB,MAAA,WAAAgjC,KAAAliC,MAAA,WAAAd,MAGAmkB,KAAA,SAAA6e,MACA,IAAAsK,KACA,MAAA,UAAAtK,KAAA2F,SAAA/c,eACA,SAAAoX,KAAAliC,OAIA,OAAAwsC,KAAAtK,KAAAhB,aAAA,UACA,SAAAsL,KAAA1hB,gBAIAX,MAAAigB,uBAAA,WACA,MAAA,CAAA,KAGAlgB,KAAAkgB,uBAAA,SAAAsF,cAAAn0C,QACA,MAAA,CAAAA,OAAA,KAGA4mC,GAAAiI,uBAAA,SAAAsF,cAAAn0C,OAAA8uC,UACA,MAAA,CAAAA,SAAA,EAAAA,SAAA9uC,OAAA8uC,YAGAjI,KAAAgI,uBAAA,SAAAE,aAAA/uC,QAEA,IADA,IAAAX,EAAA,EACAA,EAAAW,OAAAX,GAAA,EACA0vC,aAAAvoC,KAAAnH,GAEA,OAAA0vC,eAGA/H,IAAA6H,uBAAA,SAAAE,aAAA/uC,QAEA,IADA,IAAAX,EAAA,EACAA,EAAAW,OAAAX,GAAA,EACA0vC,aAAAvoC,KAAAnH,GAEA,OAAA0vC,eAGAqF,GAAAvF,uBAAA,SAAAE,aAAA/uC,OAAA8uC,UAMA,IALA,IAAAzvC,EAAAyvC,SAAA,EACAA,SAAA9uC,OACAA,OAAA8uC,SACA9uC,OACA8uC,SACA,KAAAzvC,GACA0vC,aAAAvoC,KAAAnH,GAEA,OAAA0vC,eAGAsF,GAAAxF,uBAAA,SAAAE,aAAA/uC,OAAA8uC,UAEA,IADA,IAAAzvC,EAAAyvC,SAAA,EAAAA,SAAA9uC,OAAA8uC,WACAzvC,EAAAW,QACA+uC,aAAAvoC,KAAAnH,GAEA,OAAA0vC,kBAKA1E,QAAA,IAAA5B,KAAA4B,QAAA,GAGA,CAAAiK,OAAA,EAAAC,UAAA,EAAAtgC,MAAA,EAAAugC,UAAA,EAAAC,OAAA,GACAhM,KAAA4B,QAAAhrC,GAAAovC,kBAAApvC,GAEA,IAAAA,IAAA,CAAAq1C,QAAA,EAAAC,OAAA,GACAlM,KAAA4B,QAAAhrC,GAAAqvC,mBAAArvC,GAIA,SAAA6zC,cA0EA,SAAA3F,WAAAqH,QAIA,IAHA,IAAAv1C,EAAA,EACAkH,IAAAquC,OAAA50C,OACAmmC,SAAA,GACA9mC,EAAAkH,IAAAlH,IACA8mC,UAAAyO,OAAAv1C,GAAAmJ,MAEA,OAAA29B,SAGA,SAAAiG,cAAAgH,QAAAyB,WAAApzC,MACA,IAAA8qC,IAAAsI,WAAAtI,IACAuI,KAAAD,WAAA1rB,KACA7gB,IAAAwsC,MAAAvI,IACAwI,iBAAAtzC,MAAA,eAAA6G,IACA0sC,SAAA3sB,OAEA,OAAAwsB,WAAAjmB,MAGA,SAAA+X,KAAAv9B,QAAAupC,KACA,KAAAhM,KAAAA,KAAA4F,MACA,GAAA,IAAA5F,KAAAzB,UAAA6P,iBACA,OAAA3B,QAAAzM,KAAAv9B,QAAAupC,KAGA,OAAA,GAIA,SAAAhM,KAAAv9B,QAAAupC,KACA,IAAAsC,SAAArC,YAAAC,WACAqC,SAAA,CAAAzL,QAAAuL,UAGA,GAAArC,KACA,KAAAhM,KAAAA,KAAA4F,MACA,IAAA,IAAA5F,KAAAzB,UAAA6P,mBACA3B,QAAAzM,KAAAv9B,QAAAupC,KACA,OAAA,OAKA,KAAAhM,KAAAA,KAAA4F,MACA,GAAA,IAAA5F,KAAAzB,UAAA6P,iBAQA,GAHAnC,aAJAC,WAAAlM,KAAAY,WAAAZ,KAAAY,SAAA,KAIAZ,KAAAqM,YACAH,WAAAlM,KAAAqM,UAAA,IAEA8B,MAAAA,OAAAnO,KAAA2F,SAAA/c,cACAoX,KAAAA,KAAA4F,MAAA5F,SACA,CAAA,IAAAsO,SAAArC,YAAAtqC,OACA2sC,SAAA,KAAAxL,SAAAwL,SAAA,KAAAD,SAGA,OAAAE,SAAA,GAAAD,SAAA,GAOA,IAHArC,YAAAtqC,KAAA4sC,UAGA,GAAA9B,QAAAzM,KAAAv9B,QAAAupC,KACA,OAAA,EAMA,OAAA,GAIA,SAAAwC,eAAAC,UACA,OAAA,EAAAA,SAAAp1C,OACA,SAAA2mC,KAAAv9B,QAAAupC,KAEA,IADA,IAAAtzC,EAAA+1C,SAAAp1C,OACAX,KACA,IAAA+1C,SAAA/1C,GAAAsnC,KAAAv9B,QAAAupC,KACA,OAAA,EAGA,OAAA,GAEAyC,SAAA,GAYA,SAAAC,SAAAhC,UAAAl/B,IAAAy7B,OAAAxmC,QAAAupC,KAOA,IANA,IAAAhM,KACA2O,aAAA,GACAj2C,EAAA,EACAkH,IAAA8sC,UAAArzC,OACAu1C,OAAA,MAAAphC,IAEA9U,EAAAkH,IAAAlH,KACAsnC,KAAA0M,UAAAh0C,MACAuwC,SAAAA,OAAAjJ,KAAAv9B,QAAAupC,OACA2C,aAAA9uC,KAAAmgC,MACA4O,QACAphC,IAAA3N,KAAAnH,KAMA,OAAAi2C,aAGA,SAAAE,WAAAxD,UAAA7L,SAAAiN,QAAAqC,WAAAC,WAAAC,cAOA,OANAF,aAAAA,WAAAlO,WACAkO,WAAAD,WAAAC,aAEAC,aAAAA,WAAAnO,WACAmO,WAAAF,WAAAE,WAAAC,eAEA9H,aAAA,SAAAnB,KAAA3E,QAAA3+B,QAAAupC,KACA,IAAAnb,KAAAn4B,EAAAsnC,KACAiP,OAAA,GACAC,QAAA,GACAC,YAAA/N,QAAA/nC,OAGAymC,MAAAiG,MA5CA,SAAAvG,SAAA1uB,SAAAswB,SAGA,IAFA,IAAA1oC,EAAA,EACAkH,IAAAkR,SAAAzX,OACAX,EAAAkH,IAAAlH,IACAmpC,OAAArC,SAAA1uB,SAAApY,GAAA0oC,SAEA,OAAAA,QAsCAgO,CACA5P,UAAA,IACA/8B,QAAA87B,SAAA,CAAA97B,SAAAA,QACA,IAIA4sC,WAAAhE,YAAAtF,MAAAvG,SAEAM,MADA4O,SAAA5O,MAAAmP,OAAA5D,UAAA5oC,QAAAupC,KAGAsD,WAAA7C,QAGAsC,aAAAhJ,KAAAsF,UAAA8D,aAAAL,YAGA,GAGA1N,QACAiO,UAQA,GALA5C,SACAA,QAAA4C,UAAAC,WAAA7sC,QAAAupC,KAIA8C,WAMA,IALAje,KAAA6d,SAAAY,WAAAJ,SACAJ,WAAAje,KAAA,GAAApuB,QAAAupC,KAGAtzC,EAAAm4B,KAAAx3B,OACAX,MACAsnC,KAAAnP,KAAAn4B,MACA42C,WAAAJ,QAAAx2C,MAAA22C,UAAAH,QAAAx2C,IAAAsnC,OAKA,GAAA+F,MACA,GAAAgJ,YAAA1D,UAAA,CACA,GAAA0D,WAAA,CAKA,IAFAle,KAAA,GACAn4B,EAAA42C,WAAAj2C,OACAX,MACAsnC,KAAAsP,WAAA52C,KAGAm4B,KAAAhxB,KAAAwvC,UAAA32C,GAAAsnC,MAGA+O,WAAA,KAAAO,WAAA,GAAAze,KAAAmb,KAKA,IADAtzC,EAAA42C,WAAAj2C,OACAX,MACAsnC,KAAAsP,WAAA52C,MACA,GAAAm4B,KAAAke,WAAAlmC,QAAAk9B,KAAA/F,MAAAiP,OAAAv2C,MAEAqtC,KAAAlV,QAAAuQ,QAAAvQ,MAAAmP,aAOAsP,WAAAZ,SACAY,aAAAlO,QACAkO,WAAAzgC,OAAAsgC,YAAAG,WAAAj2C,QACAi2C,YAEAP,WACAA,WAAA,KAAA3N,QAAAkO,WAAAtD,KAEAnsC,KAAAgN,MAAAu0B,QAAAkO,cAMA,SAAAC,kBAAAtB,QAyBA,IAxBA,IAAAuB,aAAA/C,QAAAtkB,EACAvoB,IAAAquC,OAAA50C,OACAo2C,gBAAA3N,KAAAlP,SAAAqb,OAAA,GAAAnwC,MACA4xC,iBAAAD,iBAAA3N,KAAAlP,SAAA,KACAl6B,EAAA+2C,gBAAA,EAAA,EAGAE,aAAAlK,cAAA,SAAAzF,MACA,OAAAA,OAAAwP,cACAE,kBAAA,GACAE,gBAAAnK,cAAA,SAAAzF,MACA,OAAA,EAAAn3B,QAAA2mC,aAAAxP,OACA0P,kBAAA,GACAjB,SAAA,CAAA,SAAAzO,KAAAv9B,QAAAupC,KACA,IAAArsC,KAAA8vC,kBAAAzD,KAAAvpC,UAAA0/B,qBACAqN,aAAA/sC,SAAA87B,SACAoR,aAAA3P,KAAAv9B,QAAAupC,KACA4D,gBAAA5P,KAAAv9B,QAAAupC,MAIA,OADAwD,aAAA,KACA7vC,MAGAjH,EAAAkH,IAAAlH,IACA,GAAA+zC,QAAA3K,KAAAlP,SAAAqb,OAAAv1C,GAAAoF,MACA2wC,SAAA,CAAAhJ,cAAA+I,eAAAC,UAAAhC,cACA,CAIA,IAHAA,QAAA3K,KAAAmH,OAAAgF,OAAAv1C,GAAAoF,MAAA+O,MAAA,KAAAohC,OAAAv1C,GAAAoqB,UAGA8d,SAAA,CAIA,IADAzY,IAAAzvB,EACAyvB,EAAAvoB,MACAkiC,KAAAlP,SAAAqb,OAAA9lB,GAAArqB,MADAqqB,KAKA,OAAA0mB,WACA,EAAAn2C,GAAA81C,eAAAC,UACA,EAAA/1C,GAAAkuC,WAGAqH,OACAjrC,MAAA,EAAAtK,EAAA,GACAmV,OAAA,CAAAhM,MAAA,MAAAosC,OAAAv1C,EAAA,GAAAoF,KAAA,IAAA,MACAyD,QAAAsiC,MAAA,MACA4I,QACA/zC,EAAAyvB,GAAAonB,kBAAAtB,OAAAjrC,MAAAtK,EAAAyvB,IACAA,EAAAvoB,KAAA2vC,kBAAAtB,OAAAA,OAAAjrC,MAAAmlB,IACAA,EAAAvoB,KAAAgnC,WAAAqH,SAGAQ,SAAA5uC,KAAA4sC,SAIA,OAAA+B,eAAAC,UAoTA,OAtpBAlC,WAAA7vC,UAAAolC,KAAA+N,QAAA/N,KAAA4B,QACA5B,KAAAyK,WAAA,IAAAA,WAEAtK,SAAAJ,OAAAI,SAAA,SAAAzC,SAAAsQ,WACA,IAAAnuB,QAAAP,MAAA6sB,OAAAnwC,KACAiyC,MAAA7J,OAAA8J,WACAC,OAAAhN,WAAAzD,SAAA,KAEA,GAAAyQ,OACA,OAAAH,UAAA,EAAAG,OAAAjtC,MAAA,GAOA,IAJA+sC,MAAAvQ,SACA0G,OAAA,GACA8J,WAAAlO,KAAAuJ,UAEA0E,OAAA,CA2BA,IAAAjyC,QAxBA6jB,WAAAP,MAAA0iB,OAAA1d,KAAA2pB,UACA3uB,QAGA2uB,MAAAA,MAAA/sC,MAAAoe,MAAA,GAAA/nB,SAAA02C,OAEA7J,OAAArmC,KAAAouC,OAAA,KAGAtsB,SAAA,GAGAP,MAAA2iB,aAAA3d,KAAA2pB,UACApuB,QAAAP,MAAAtc,QACAmpC,OAAApuC,KAAA,CACAgC,MAAA8f,QAGA7jB,KAAAsjB,MAAA,GAAA7f,QAAAsiC,MAAA,OAEAkM,MAAAA,MAAA/sC,MAAA2e,QAAAtoB,SAIAyoC,KAAAmH,SACA7nB,MAAA+iB,UAAArmC,MAAAsoB,KAAA2pB,SAAAC,WAAAlyC,SACAsjB,MAAA4uB,WAAAlyC,MAAAsjB,UACAO,QAAAP,MAAAtc,QACAmpC,OAAApuC,KAAA,CACAgC,MAAA8f,QACA7jB,KAAAA,KACAglB,QAAA1B,QAEA2uB,MAAAA,MAAA/sC,MAAA2e,QAAAtoB,SAIA,IAAAsoB,QACA,MAOA,OAAAmuB,UACAC,MAAA12C,OACA02C,MACAlO,OAAAztB,MAAAorB,UAGAyD,WAAAzD,SAAA0G,QAAAljC,MAAA,IA4ZApJ,QAAAioC,OAAAjoC,QAAA,SAAA4lC,SAAApe,OACA,IAAA1oB,EACAw3C,YAAA,GACAC,gBAAA,GACAF,OAAA/M,cAAA1D,SAAA,KAEA,IAAAyQ,OAAA,CAOA,IAJA7uB,QACAA,MAAA6gB,SAAAzC,WAEA9mC,EAAA0oB,MAAA/nB,OACAX,MACAu3C,OAAAV,kBAAAnuB,MAAA1oB,KACAkoC,SACAsP,YAAArwC,KAAAowC,QAEAE,gBAAAtwC,KAAAowC,SAKAA,OAAA/M,cACA1D,SArJA,SAAA2Q,gBAAAD,aACA,IAAAE,MAAA,EAAAF,YAAA72C,OACAg3C,UAAA,EAAAF,gBAAA92C,OACAi3C,aAAA,SAAAvK,KAAAtjC,QAAAupC,IAAA5K,QAAAmP,WACA,IAAAvQ,KAAA7X,EAAAskB,QACA+D,aAAA,EACA93C,EAAA,IACAg0C,UAAA3G,MAAA,GACA0K,WAAA,GACAC,cAAAvO,iBAGArC,MAAAiG,MAAAsK,WAAAvO,KAAAqH,KAAA,IAAA,IAAAoH,WAGAI,cAAA7N,SAAA,MAAA4N,cAAA,EAAAthB,KAAA+B,UAAA,GACAvxB,IAAAkgC,MAAAzmC,OAcA,IAZAk3C,YAMApO,iBAAA1/B,SAAAk7B,UAAAl7B,SAAA8tC,WAMA73C,IAAAkH,KAAA,OAAAogC,KAAAF,MAAApnC,IAAAA,IAAA,CACA,GAAA23C,WAAArQ,KAAA,CAWA,IAVA7X,EAAA,EAMA1lB,SAAAu9B,KAAAqG,eAAA1I,WACA2E,YAAAtC,MACAgM,KAAAxJ,gBAEAiK,QAAA0D,gBAAAhoB,MACA,GAAAskB,QAAAzM,KAAAv9B,SAAAk7B,SAAAqO,KAAA,CACA5K,QAAAvhC,KAAAmgC,MACA,MAGAuQ,YACAzN,QAAA6N,eAKAP,SAGApQ,MAAAyM,SAAAzM,OACAwQ,eAIAzK,MACA2G,UAAA7sC,KAAAmgC,OAgBA,GATAwQ,cAAA93C,EASA03C,OAAA13C,IAAA83C,aAAA,CAEA,IADAroB,EAAA,EACAskB,QAAAyD,YAAA/nB,MACAskB,QAAAC,UAAA+D,WAAAhuC,QAAAupC,KAGA,GAAAjG,KAAA,CAGA,GAAA,EAAAyK,aACA,KAAA93C,KACAg0C,UAAAh0C,IAAA+3C,WAAA/3C,KACA+3C,WAAA/3C,GAAAuY,IAAA7X,KAAAgoC,UAMAqP,WAAA/B,SAAA+B,YAIA5wC,KAAAgN,MAAAu0B,QAAAqP,YAGAF,YAAAxK,MAAA,EAAA0K,WAAAp3C,QACA,EAAAm3C,aAAAN,YAAA72C,QAEAwoC,OAAA4I,WAAArJ,SAUA,OALAmP,YACAzN,QAAA6N,cACAxO,iBAAAuO,eAGAhE,WAGA,OAAA0D,MACAlJ,aAAAoJ,cACAA,aA4BAM,CAAAT,gBAAAD,eAIA1Q,SAAAA,SAEA,OAAAyQ,QAYA/N,OAAAL,OAAAK,OAAA,SAAA1C,SAAA/8B,QAAA2+B,QAAA2E,MACA,IAAArtC,EAAAu1C,OAAA9kC,MAAArL,KAAAqrC,KACA7mC,SAAA,mBAAAk9B,UAAAA,SACApe,OAAA2kB,MAAA9D,SAAAzC,SAAAl9B,SAAAk9B,UAAAA,UAMA,GAJA4B,QAAAA,SAAA,GAIA,IAAAhgB,MAAA/nB,OAAA,CAIA,GAAA,GADA40C,OAAA7sB,MAAA,GAAAA,MAAA,GAAApe,MAAA,IACA3J,QAAA,QAAA8P,MAAA8kC,OAAA,IAAAnwC,MACA,IAAA2E,QAAA87B,UAAAiE,gBAAAV,KAAAlP,SAAAqb,OAAA,GAAAnwC,MAAA,CAIA,KAFA2E,SAAAq/B,KAAAqH,KAAA,GAAAhgC,MAAA2Z,QAAA,GACAvhB,QAAAyjC,UAAAC,WAAAxiC,UAAA,IAAA,IAEA,OAAA2+B,QAGA9+B,WACAG,QAAAA,QAAA28B,YAGAI,SAAAA,SAAAx8B,MAAAirC,OAAAnpC,QAAAjD,MAAAxI,QAKA,IADAX,EAAAyrC,UAAA,aAAAhmC,KAAAqhC,UAAA,EAAAyO,OAAA50C,OACAX,MACAyQ,MAAA8kC,OAAAv1C,IAGAopC,KAAAlP,SAAA90B,KAAAqL,MAAArL,QAGA,IAAAqrC,KAAArH,KAAAqH,KAAArrC,SAGAioC,KAAAoD,KACAhgC,MAAA2Z,QAAA,GAAAvhB,QAAAyjC,UAAAC,WACAF,SAAA5mC,KAAA8vC,OAAA,GAAAnwC,OAAA4oC,YAAAjkC,QAAA28B,aACA38B,UACA,CAKA,GAFAwrC,OAAAp/B,OAAAnW,EAAA,KACA8mC,SAAAuG,KAAA1sC,QAAAutC,WAAAqH,SAGA,OADApuC,KAAAgN,MAAAu0B,QAAA2E,MACA3E,QAGA,OAeA,OAPA9+B,UAAA1I,QAAA4lC,SAAApe,QACA2kB,KACAtjC,SACA+/B,eACApB,SACA3+B,SAAAsiC,SAAA5mC,KAAAqhC,WAAAkH,YAAAjkC,QAAA28B,aAAA38B,SAEA2+B,SAMA9C,QAAAsM,WAAAhK,QAAA9sB,MAAA,IAAA0c,KAAA4S,WAAA7iC,KAAA,MAAAqgC,QAIAtC,QAAAqM,mBAAAtI,aAGAC,cAIAhE,QAAA2L,aAAA9C,OAAA,SAAAC,IAGA,OAAA,EAAAA,GAAAyC,wBAAAlM,SAAAoB,cAAA,eAMAoI,OAAA,SAAAC,IAEA,OADAA,GAAAkC,UAAA,mBACA,MAAAlC,GAAA0D,WAAA9L,aAAA,WAEAqI,UAAA,yBAAA,SAAArH,KAAAhjC,KAAAglC,OACA,IAAAA,MACA,OAAAhC,KAAAhB,aAAAhiC,KAAA,SAAAA,KAAA4rB,cAAA,EAAA,KAOA0V,QAAAmF,YAAA0D,OAAA,SAAAC,IAGA,OAFAA,GAAAkC,UAAA,WACAlC,GAAA0D,WAAA7L,aAAA,QAAA,IACA,KAAAmI,GAAA0D,WAAA9L,aAAA,YAEAqI,UAAA,QAAA,SAAArH,KAAAt7B,MAAAs9B,OACA,IAAAA,OAAA,UAAAhC,KAAA2F,SAAA/c,cACA,OAAAoX,KAAA6Q,eAOA1J,OAAA,SAAAC,IACA,OAAA,MAAAA,GAAApI,aAAA,eAEAqI,UAAA/D,SAAA,SAAAtD,KAAAhjC,KAAAglC,OACA,IAAAv5B,IACA,IAAAu5B,MACA,OAAA,IAAAhC,KAAAhjC,MAAAA,KAAA4rB,eACAngB,IAAAu3B,KAAAoJ,iBAAApsC,QAAAyL,IAAA8hC,UACA9hC,IAAA5G,MACA,OAKAggC,OA14EA,CA44EAzY,QAIAmW,OAAA4J,KAAAtH,OACAtC,OAAA3sB,KAAAivB,OAAAmJ,UAGAzL,OAAA3sB,KAAA,KAAA2sB,OAAA3sB,KAAA8wB,QACAnE,OAAAkL,WAAAlL,OAAAuR,OAAAjP,OAAA4I,WACAlL,OAAApe,KAAA0gB,OAAAE,QACAxC,OAAAwR,SAAAlP,OAAAG,MACAzC,OAAAoD,SAAAd,OAAAc,SACApD,OAAAyR,eAAAnP,OAAA5W,OAKA,IAAA2a,IAAA,SAAA5F,KAAA4F,IAAAqL,OAIA,IAHA,IAAAtvB,QAAA,GACAuvB,cAAAjyC,IAAAgyC,OAEAjR,KAAAA,KAAA4F,OAAA,IAAA5F,KAAAzB,UACA,GAAA,IAAAyB,KAAAzB,SAAA,CACA,GAAA2S,UAAA3R,OAAAS,MAAAmR,GAAAF,OACA,MAEAtvB,QAAA9hB,KAAAmgC,MAGA,OAAAre,SAIAyvB,SAAA,SAAA74C,EAAAynC,MAGA,IAFA,IAAAre,QAAA,GAEAppB,EAAAA,EAAAA,EAAAsvC,YACA,IAAAtvC,EAAAgmC,UAAAhmC,IAAAynC,MACAre,QAAA9hB,KAAAtH,GAIA,OAAAopB,SAIA0vB,cAAA9R,OAAA3sB,KAAAwO,MAAAqjB,aAIA,SAAAkB,SAAA3F,KAAAhjC,MAEA,OAAAgjC,KAAA2F,UAAA3F,KAAA2F,SAAA/c,gBAAA5rB,KAAA4rB,cAGA,IAAA0oB,WAAA,kEAKA,SAAAC,OAAAlH,SAAAmH,UAAAhF,KACA,OAAAtkB,WAAAspB,WACAjS,OAAAY,KAAAkK,SAAA,SAAArK,KAAAtnC,GACA,QAAA84C,UAAAp4C,KAAA4mC,KAAAtnC,EAAAsnC,QAAAwM,MAKAgF,UAAAjT,SACAgB,OAAAY,KAAAkK,SAAA,SAAArK,MACA,OAAAA,OAAAwR,YAAAhF,MAKA,iBAAAgF,UACAjS,OAAAY,KAAAkK,SAAA,SAAArK,MACA,OAAA,EAAAn3B,QAAAzP,KAAAo4C,UAAAxR,QAAAwM,MAKAjN,OAAA0J,OAAAuI,UAAAnH,SAAAmC,KAGAjN,OAAA0J,OAAA,SAAAr2B,KAAAktB,MAAA0M,KACA,IAAAxM,KAAAF,MAAA,GAMA,OAJA0M,MACA55B,KAAA,QAAAA,KAAA,KAGA,IAAAktB,MAAAzmC,QAAA,IAAA2mC,KAAAzB,SACAgB,OAAA4J,KAAAI,gBAAAvJ,KAAAptB,MAAA,CAAAotB,MAAA,GAGAT,OAAA4J,KAAArmB,QAAAlQ,KAAA2sB,OAAAY,KAAAL,MAAA,SAAAE,MACA,OAAA,IAAAA,KAAAzB,aAIAgB,OAAAtiC,GAAA9B,OAAA,CACAguC,KAAA,SAAA3J,UACA,IAAA9mC,EAAAiH,IACAC,IAAAvD,KAAAhD,OACA2mB,KAAA3jB,KAEA,GAAA,iBAAAmjC,SACA,OAAAnjC,KAAAwjC,UAAAN,OAAAC,UAAAyJ,OAAA,WACA,IAAAvwC,EAAA,EAAAA,EAAAkH,IAAAlH,IACA,GAAA6mC,OAAAoD,SAAA3iB,KAAAtnB,GAAA2D,MACA,OAAA,KAQA,IAFAsD,IAAAtD,KAAAwjC,UAAA,IAEAnnC,EAAA,EAAAA,EAAAkH,IAAAlH,IACA6mC,OAAA4J,KAAA3J,SAAAxf,KAAAtnB,GAAAiH,KAGA,OAAA,EAAAC,IAAA2/B,OAAAkL,WAAA9qC,KAAAA,KAEAspC,OAAA,SAAAzJ,UACA,OAAAnjC,KAAAwjC,UAAA0R,OAAAl1C,KAAAmjC,UAAA,IAAA,KAEAgN,IAAA,SAAAhN,UACA,OAAAnjC,KAAAwjC,UAAA0R,OAAAl1C,KAAAmjC,UAAA,IAAA,KAEA2R,GAAA,SAAA3R,UACA,QAAA+R,OACAl1C,KAIA,iBAAAmjC,UAAA6R,cAAAlzC,KAAAqhC,UACAD,OAAAC,UACAA,UAAA,IACA,GACAnmC,UASA,IAAAo4C,WAMA3M,WAAA,uCAEAvF,OAAAtiC,GAAAwiC,KAAA,SAAAD,SAAA/8B,QAAA4R,MACA,IAAA+M,MAAA4e,KAGA,IAAAR,SACA,OAAAnjC,KAQA,GAHAgY,KAAAA,MAAAo9B,WAGA,iBAAAjS,SAoEA,OAAAA,SAAAjB,UACAliC,KAAA,GAAAmjC,SACAnjC,KAAAhD,OAAA,EACAgD,MAIA6rB,WAAAsX,eACAvgC,IAAAoV,KAAAq9B,MACAr9B,KAAAq9B,MAAAlS,UAGAA,SAAAD,QAGAA,OAAA4B,UAAA3B,SAAAnjC,MAtEA,KAPA+kB,MALA,MAAAoe,SAAA,IACA,MAAAA,SAAAA,SAAAnmC,OAAA,IACA,GAAAmmC,SAAAnmC,OAGA,CAAA,KAAAmmC,SAAA,MAGAsF,WAAA1e,KAAAoZ,aAIApe,MAAA,IAAA3e,QA6CA,OAAAA,SAAAA,QAAAk9B,QACAl9B,SAAA4R,MAAA80B,KAAA3J,UAKAnjC,KAAAM,YAAA8F,SAAA0mC,KAAA3J,UAhDA,GAAApe,MAAA,GAAA,CAYA,GAXA3e,QAAAA,mBAAA88B,OAAA98B,QAAA,GAAAA,QAIA88B,OAAA3+B,MAAAvE,KAAAkjC,OAAAoS,UACAvwB,MAAA,GACA3e,SAAAA,QAAA87B,SAAA97B,QAAA4jC,eAAA5jC,QAAAk7B,UACA,IAIA2T,WAAAnzC,KAAAijB,MAAA,KAAAme,OAAAoB,cAAAl+B,SACA,IAAA2e,SAAA3e,QAGAylB,WAAA7rB,KAAA+kB,QACA/kB,KAAA+kB,OAAA3e,QAAA2e,QAIA/kB,KAAAiuC,KAAAlpB,MAAA3e,QAAA2e,QAKA,OAAA/kB,KAYA,OARA2jC,KAAArC,SAAA2I,eAAAllB,MAAA,OAKA/kB,KAAA,GAAA2jC,KACA3jC,KAAAhD,OAAA,GAEAgD,OAiCAK,UAAA6iC,OAAAtiC,GAGAw0C,WAAAlS,OAAA5B,UAGA,IAAAiU,aAAA,iCAGAC,iBAAA,CACAhuC,UAAA,EACAmG,UAAA,EACAwY,MAAA,EACA4C,MAAA,GAoFA,SAAAC,QAAAqiB,IAAA9B,KACA,MAAA8B,IAAAA,IAAA9B,OAAA,IAAA8B,IAAAnJ,WACA,OAAAmJ,IAnFAnI,OAAAtiC,GAAA9B,OAAA,CACA+wB,IAAA,SAAAuU,QACA,IAAAqR,QAAAvS,OAAAkB,OAAApkC,MACA6L,EAAA4pC,QAAAz4C,OAEA,OAAAgD,KAAA4sC,OAAA,WAEA,IADA,IAAAvwC,EAAA,EACAA,EAAAwP,EAAAxP,IACA,GAAA6mC,OAAAoD,SAAAtmC,KAAAy1C,QAAAp5C,IACA,OAAA,KAMAq5C,QAAA,SAAA/G,UAAAvoC,SACA,IAAAilC,IACAhvC,EAAA,EACAwP,EAAA7L,KAAAhD,OACAsoB,QAAA,GACAmwB,QAAA,iBAAA9G,WAAAzL,OAAAyL,WAGA,IAAAqG,cAAAlzC,KAAA6sC,WACA,KAAAtyC,EAAAwP,EAAAxP,IACA,IAAAgvC,IAAArrC,KAAA3D,GAAAgvC,KAAAA,MAAAjlC,QAAAilC,IAAAA,IAAAtI,WAGA,GAAAsI,IAAAnJ,SAAA,KAAAuT,SACA,EAAAA,QAAAp/B,MAAAg1B,KAGA,IAAAA,IAAAnJ,UACAgB,OAAA4J,KAAAI,gBAAA7B,IAAAsD,YAAA,CAEArpB,QAAA9hB,KAAA6nC,KACA,MAMA,OAAArrC,KAAAwjC,UAAA,EAAAle,QAAAtoB,OAAAkmC,OAAAkL,WAAA9oB,SAAAA,UAIAjP,MAAA,SAAAstB,MAGA,OAAAA,KAKA,iBAAAA,KACAn3B,QAAAzP,KAAAmmC,OAAAS,MAAA3jC,KAAA,IAIAwM,QAAAzP,KAAAiD,KAGA2jC,KAAAL,OAAAK,KAAA,GAAAA,MAZA3jC,KAAA,IAAAA,KAAA,GAAA+iC,WAAA/iC,KAAA4rB,QAAA+pB,UAAA34C,QAAA,GAgBAiH,IAAA,SAAAk/B,SAAA/8B,SACA,OAAApG,KAAAwjC,UACAN,OAAAkL,WACAlL,OAAA3+B,MAAAvE,KAAA6wB,MAAAqS,OAAAC,SAAA/8B,aAKAwvC,QAAA,SAAAzS,UACA,OAAAnjC,KAAAiE,IAAA,MAAAk/B,SACAnjC,KAAA0jC,WAAA1jC,KAAA0jC,WAAAkJ,OAAAzJ,cAUAD,OAAAz+B,KAAA,CACAiK,OAAA,SAAAi1B,MACA,IAAAj1B,OAAAi1B,KAAAZ,WACA,OAAAr0B,QAAA,KAAAA,OAAAwzB,SAAAxzB,OAAA,MAEAwZ,QAAA,SAAAyb,MACA,OAAA4F,IAAA5F,KAAA,eAEAkS,aAAA,SAAAlS,KAAA4B,GAAAqP,OACA,OAAArL,IAAA5F,KAAA,aAAAiR,QAEAzuB,KAAA,SAAAwd,MACA,OAAA3a,QAAA2a,KAAA,gBAEA5a,KAAA,SAAA4a,MACA,OAAA3a,QAAA2a,KAAA,oBAEAmS,QAAA,SAAAnS,MACA,OAAA4F,IAAA5F,KAAA,gBAEAgS,QAAA,SAAAhS,MACA,OAAA4F,IAAA5F,KAAA,oBAEAoS,UAAA,SAAApS,KAAA4B,GAAAqP,OACA,OAAArL,IAAA5F,KAAA,cAAAiR,QAEAoB,UAAA,SAAArS,KAAA4B,GAAAqP,OACA,OAAArL,IAAA5F,KAAA,kBAAAiR,QAEAG,SAAA,SAAApR,MACA,OAAAoR,UAAApR,KAAAZ,YAAA,IAAA0L,WAAA9K,OAEAn8B,SAAA,SAAAm8B,MACA,OAAAoR,SAAApR,KAAA8K,aAEA9gC,SAAA,SAAAg2B,MACA,OAAA,MAAAA,KAAAsS,iBAKAvU,SAAAiC,KAAAsS,iBAEAtS,KAAAsS,iBAMA3M,SAAA3F,KAAA,cACAA,KAAAA,KAAAn5B,SAAAm5B,MAGAT,OAAA3+B,MAAA,GAAAo/B,KAAA6F,eAEA,SAAA7oC,KAAAC,IACAsiC,OAAAtiC,GAAAD,MAAA,SAAAi0C,MAAAzR,UACA,IAAA7d,QAAA4d,OAAA/xB,IAAAnR,KAAAY,GAAAg0C,OAuBA,MArBA,UAAAj0C,KAAAgG,OAAA,KACAw8B,SAAAyR,OAGAzR,UAAA,iBAAAA,WACA7d,QAAA4d,OAAA0J,OAAAzJ,SAAA7d,UAGA,EAAAtlB,KAAAhD,SAGAw4C,iBAAA70C,OACAuiC,OAAAkL,WAAA9oB,SAIAiwB,aAAAzzC,KAAAnB,OACA2kB,QAAA4wB,WAIAl2C,KAAAwjC,UAAAle,YAGA,IAAA6wB,cAAA,oBAsOA,SAAAC,SAAAC,GACA,OAAAA,EAEA,SAAAC,QAAAC,IACA,MAAAA,GAGA,SAAAC,WAAAhxC,MAAAixC,QAAAC,OAAAC,SACA,IAAAjqB,OAEA,IAGAlnB,OAAAqmB,WAAAa,OAAAlnB,MAAAoxC,SACAlqB,OAAA3vB,KAAAyI,OAAA6f,KAAAoxB,SAAAI,KAAAH,QAGAlxC,OAAAqmB,WAAAa,OAAAlnB,MAAAsxC,MACApqB,OAAA3vB,KAAAyI,MAAAixC,QAAAC,QAQAD,QAAAjmC,WAAA5N,EAAA,CAAA4C,OAAAmB,MAAAgwC,UAMA,MAAAnxC,OAIAkxC,OAAAlmC,WAAA5N,EAAA,CAAA4C,SAvOA09B,OAAA6T,UAAA,SAAAt5C,SAIAA,QAAA,iBAAAA,QAlCA,SAAAA,SACA,IAAAkrB,OAAA,GAIA,OAHAua,OAAAz+B,KAAAhH,QAAAsnB,MAAAoxB,gBAAA,GAAA,SAAAa,EAAAC,MACAtuB,OAAAsuB,OAAA,IAEAtuB,OA8BAuuB,CAAAz5C,SACAylC,OAAApkC,OAAA,GAAArB,SAEA,IACA05C,OAGAC,OAGAC,MAGAC,OAGApnC,KAAA,GAGAqnC,MAAA,GAGAC,aAAA,EAGAC,KAAA,WAQA,IALAH,OAAAA,QAAA75C,QAAAi6C,KAIAL,MAAAF,QAAA,EACAI,MAAAv6C,OAAAw6C,aAAA,EAEA,IADAJ,OAAAG,MAAA9uC,UACA+uC,YAAAtnC,KAAAlT,SAGA,IAAAkT,KAAAsnC,aAAAhnC,MAAA4mC,OAAA,GAAAA,OAAA,KACA35C,QAAAk6C,cAGAH,YAAAtnC,KAAAlT,OACAo6C,QAAA,GAMA35C,QAAA25C,SACAA,QAAA,GAGAD,QAAA,EAGAG,SAIApnC,KADAknC,OACA,GAIA,KAMAzzB,KAAA,CAGA1f,IAAA,WA2BA,OA1BAiM,OAGAknC,SAAAD,SACAK,YAAAtnC,KAAAlT,OAAA,EACAu6C,MAAA/zC,KAAA4zC,SAGA,SAAAnzC,IAAAsD,MACA27B,OAAAz+B,KAAA8C,KAAA,SAAAyvC,EAAA5R,KACAvZ,WAAAuZ,KACA3nC,QAAAg3C,QAAA9wB,KAAAkM,IAAAuV,MACAl1B,KAAA1M,KAAA4hC,KAEAA,KAAAA,IAAApoC,QAAA,WAAAimC,OAAAmC,MAGAnhC,IAAAmhC,OATA,CAYAvgC,WAEAuyC,SAAAD,QACAM,QAGAz3C,MAIA43C,OAAA,WAYA,OAXA1U,OAAAz+B,KAAAI,UAAA,SAAAmyC,EAAA5R,KAEA,IADA,IAAA/uB,OACA,GAAAA,MAAA6sB,OAAA8B,QAAAI,IAAAl1B,KAAAmG,SACAnG,KAAAsC,OAAA6D,MAAA,GAGAA,OAAAmhC,aACAA,gBAIAx3C,MAKA6vB,IAAA,SAAAjvB,IACA,OAAAA,IACA,EAAAsiC,OAAA8B,QAAApkC,GAAAsP,MACA,EAAAA,KAAAlT,QAIAwH,MAAA,WAIA,OAHA0L,OACAA,KAAA,IAEAlQ,MAMA63C,QAAA,WAGA,OAFAP,OAAAC,MAAA,GACArnC,KAAAknC,OAAA,GACAp3C,MAEAqpC,SAAA,WACA,OAAAn5B,MAMA4nC,KAAA,WAKA,OAJAR,OAAAC,MAAA,GACAH,QAAAD,SACAjnC,KAAAknC,OAAA,IAEAp3C,MAEAs3C,OAAA,WACA,QAAAA,QAIAS,SAAA,SAAA3xC,QAAAmB,MASA,OARA+vC,SAEA/vC,KAAA,CAAAnB,SADAmB,KAAAA,MAAA,IACAZ,MAAAY,KAAAZ,QAAAY,MACAgwC,MAAA/zC,KAAA+D,MACA4vC,QACAM,QAGAz3C,MAIAy3C,KAAA,WAEA,OADA9zB,KAAAo0B,SAAA/3C,KAAA6E,WACA7E,MAIAq3C,MAAA,WACA,QAAAA,QAIA,OAAA1zB,MA4CAuf,OAAApkC,OAAA,CAEAk5C,SAAA,SAAAC,MACA,IAAAC,OAAA,CAIA,CAAA,SAAA,WAAAhV,OAAA6T,UAAA,UACA7T,OAAA6T,UAAA,UAAA,GACA,CAAA,UAAA,OAAA7T,OAAA6T,UAAA,eACA7T,OAAA6T,UAAA,eAAA,EAAA,YACA,CAAA,SAAA,OAAA7T,OAAA6T,UAAA,eACA7T,OAAA6T,UAAA,eAAA,EAAA,aAEAzyB,MAAA,UACAsyB,QAAA,CACAtyB,MAAA,WACA,OAAAA,OAEA6zB,OAAA,WAEA,OADAC,SAAA/yB,KAAAxgB,WAAAgyC,KAAAhyC,WACA7E,MAEAq4C,MAAA,SAAAz3C,IACA,OAAAg2C,QAAAE,KAAA,KAAAl2C,KAIA03C,KAAA,WACA,IAAAC,IAAA1zC,UAEA,OAAAq+B,OAAA8U,SAAA,SAAAQ,UACAtV,OAAAz+B,KAAAyzC,OAAA,SAAA3S,GAAAkT,OAGA,IAAA73C,GAAAirB,WAAA0sB,IAAAE,MAAA,MAAAF,IAAAE,MAAA,IAKAL,SAAAK,MAAA,IAAA,WACA,IAAAC,SAAA93C,IAAAA,GAAA4P,MAAAxQ,KAAA6E,WACA6zC,UAAA7sB,WAAA6sB,SAAA9B,SACA8B,SAAA9B,UACA+B,SAAAH,SAAAI,QACAvzB,KAAAmzB,SAAA/B,SACAI,KAAA2B,SAAA9B,QAEA8B,SAAAC,MAAA,GAAA,QACAz4C,KACAY,GAAA,CAAA83C,UAAA7zC,eAKA0zC,IAAA,OACA3B,WAEAE,KAAA,SAAA+B,YAAAC,WAAAC,YACA,IAAAC,SAAA,EACA,SAAAvC,QAAAv0C,MAAAk2C,SAAAlN,QAAA+N,SACA,OAAA,WACA,IAAAC,KAAAl5C,KACAuH,KAAA1C,UACAs0C,WAAA,WACA,IAAAT,SAAA5B,KAKA,KAAA50C,MAAA82C,UAAA,CAQA,IAJAN,SAAAxN,QAAA16B,MAAA0oC,KAAA3xC,SAIA6wC,SAAAxB,UACA,MAAA,IAAA1kB,UAAA,4BAOA4kB,KAAA4B,WAKA,iBAAAA,UACA,mBAAAA,WACAA,SAAA5B,KAGAjrB,WAAAirB,MAGAmC,QACAnC,KAAA/5C,KACA27C,SACAjC,QAAAuC,SAAAZ,SAAAhC,SAAA6C,SACAxC,QAAAuC,SAAAZ,SAAA9B,QAAA2C,WAOAD,WAEAlC,KAAA/5C,KACA27C,SACAjC,QAAAuC,SAAAZ,SAAAhC,SAAA6C,SACAxC,QAAAuC,SAAAZ,SAAA9B,QAAA2C,SACAxC,QAAAuC,SAAAZ,SAAAhC,SACAgC,SAAAgB,eASAlO,UAAAkL,WACA8C,UAAAt2C,EACA2E,KAAA,CAAAmxC,YAKAO,SAAAb,SAAAiB,aAAAH,KAAA3xC,SAKA+xC,QAAAL,QACAE,WACA,WACA,IACAA,aACA,MAAAl9C,GAEAinC,OAAA8U,SAAAuB,eACArW,OAAA8U,SAAAuB,cAAAt9C,EACAq9C,QAAAE,YAMAR,UAAA92C,MAAA,IAIAgpC,UAAAoL,UACA4C,UAAAt2C,EACA2E,KAAA,CAAAtL,IAGAm8C,SAAAqB,WAAAP,KAAA3xC,SASArF,MACAo3C,WAKApW,OAAA8U,SAAA0B,eACAJ,QAAAE,WAAAtW,OAAA8U,SAAA0B,gBAEA3sB,OAAA4sB,WAAAL,WAKA,OAAApW,OAAA8U,SAAA,SAAAQ,UAGAN,OAAA,GAAA,GAAAj0C,IACAwyC,QACA,EACA+B,SACA3sB,WAAAktB,YACAA,WACA3C,SACAoC,SAAAY,aAKAlB,OAAA,GAAA,GAAAj0C,IACAwyC,QACA,EACA+B,SACA3sB,WAAAgtB,aACAA,YACAzC,WAKA8B,OAAA,GAAA,GAAAj0C,IACAwyC,QACA,EACA+B,SACA3sB,WAAAitB,YACAA,WACAxC,YAGAM,WAKAA,QAAA,SAAAxxC,KACA,OAAA,MAAAA,IAAA89B,OAAApkC,OAAAsG,IAAAwxC,SAAAA,UAGAwB,SAAA,GAkEA,OA/DAlV,OAAAz+B,KAAAyzC,OAAA,SAAA77C,EAAAo8C,OACA,IAAAvoC,KAAAuoC,MAAA,GACAmB,YAAAnB,MAAA,GAKA7B,QAAA6B,MAAA,IAAAvoC,KAAAjM,IAGA21C,aACA1pC,KAAAjM,IACA,WAIAqgB,MAAAs1B,aAKA1B,OAAA,EAAA77C,GAAA,GAAAw7C,QAIAK,OAAA,EAAA77C,GAAA,GAAAw7C,QAGAK,OAAA,GAAA,GAAAJ,KAGAI,OAAA,GAAA,GAAAJ,MAOA5nC,KAAAjM,IAAAw0C,MAAA,GAAAhB,MAKAW,SAAAK,MAAA,IAAA,WAEA,OADAL,SAAAK,MAAA,GAAA,QAAAz4C,OAAAo4C,cAAAx1C,EAAA5C,KAAA6E,WACA7E,MAMAo4C,SAAAK,MAAA,GAAA,QAAAvoC,KAAA6nC,WAIAnB,QAAAA,QAAAwB,UAGAH,MACAA,KAAAl7C,KAAAq7C,SAAAA,UAIAA,UAIAyB,KAAA,SAAAC,aACA,IAGAC,UAAAl1C,UAAA7H,OAGAX,EAAA09C,UAGAC,gBAAAh1B,MAAA3oB,GACA49C,cAAAtzC,MAAA5J,KAAA8H,WAGAq1C,OAAAhX,OAAA8U,WAGAmC,WAAA,SAAA99C,GACA,OAAA,SAAAmJ,OACAw0C,gBAAA39C,GAAA2D,KACAi6C,cAAA59C,GAAA,EAAAwI,UAAA7H,OAAA2J,MAAA5J,KAAA8H,WAAAW,QACAu0C,WACAG,OAAAb,YAAAW,gBAAAC,iBAMA,GAAAF,WAAA,IACAvD,WAAAsD,YAAAI,OAAA70B,KAAA80B,WAAA99C,IAAAo6C,QAAAyD,OAAAxD,QACAqD,WAGA,YAAAG,OAAA51B,SACAuH,WAAAouB,cAAA59C,IAAA49C,cAAA59C,GAAAy6C,OAEA,OAAAoD,OAAApD,OAKA,KAAAz6C,KACAm6C,WAAAyD,cAAA59C,GAAA89C,WAAA99C,GAAA69C,OAAAxD,QAGA,OAAAwD,OAAAtD,aAOA,IAAAwD,YAAA,yDAEAlX,OAAA8U,SAAAuB,cAAA,SAAAxhC,MAAAhE,OAIAgZ,OAAAN,SAAAM,OAAAN,QAAA4tB,MAAAtiC,OAAAqiC,YAAAt4C,KAAAiW,MAAApX,OACAosB,OAAAN,QAAA4tB,KAAA,8BAAAtiC,MAAAwS,QAAAxS,MAAAhE,MAAAA,QAOAmvB,OAAAoX,eAAA,SAAAviC,OACAgV,OAAA4sB,WAAA,WACA,MAAA5hC,SAQA,IAAAwiC,UAAArX,OAAA8U,WAkDA,SAAAwC,YACAlZ,SAAAmZ,oBAAA,mBAAAD,WACAztB,OAAA0tB,oBAAA,OAAAD,WACAtX,OAAAmS,QAnDAnS,OAAAtiC,GAAAy0C,MAAA,SAAAz0C,IAYA,OAVA25C,UACAzD,KAAAl2C,IAKAy3C,MAAA,SAAAtgC,OACAmrB,OAAAoX,eAAAviC,SAGA/X,MAGAkjC,OAAApkC,OAAA,CAGA0lC,SAAA,EAIAkW,UAAA,EAGArF,MAAA,SAAAsF,QAGA,IAAAA,OAAAzX,OAAAwX,UAAAxX,OAAAsB,WAKAtB,OAAAsB,SAAA,KAGAmW,MAAA,IAAAzX,OAAAwX,WAKAH,UAAAlB,YAAA/X,SAAA,CAAA4B,YAIAA,OAAAmS,MAAAyB,KAAAyD,UAAAzD,KAaA,aAAAxV,SAAAsZ,YACA,YAAAtZ,SAAAsZ,aAAAtZ,SAAA4K,gBAAA2O,SAGA9tB,OAAA4sB,WAAAzW,OAAAmS,QAKA/T,SAAAgL,iBAAA,mBAAAkO,WAGAztB,OAAAuf,iBAAA,OAAAkO,YAQA,IAAAM,OAAA,SAAArX,MAAA7iC,GAAA0E,IAAAE,MAAAu1C,UAAAC,SAAAzzB,KACA,IAAAlrB,EAAA,EACAkH,IAAAkgC,MAAAzmC,OACAi+C,KAAA,MAAA31C,IAGA,GAAA,WAAA29B,OAAA39B,KAEA,IAAAjJ,KADA0+C,WAAA,EACAz1C,IACAw1C,OAAArX,MAAA7iC,GAAAvE,EAAAiJ,IAAAjJ,IAAA,EAAA2+C,SAAAzzB,UAIA,QAAA3kB,IAAA4C,QACAu1C,WAAA,EAEAlvB,WAAArmB,SACA+hB,KAAA,GAGA0zB,OAKAr6C,GAFA2mB,KACA3mB,GAAA7D,KAAA0mC,MAAAj+B,OACA,OAIAy1C,KAAAr6C,GACA,SAAA+iC,KAAA/W,KAAApnB,OACA,OAAAy1C,KAAAl+C,KAAAmmC,OAAAS,MAAAn+B,UAKA5E,IACA,KAAAvE,EAAAkH,IAAAlH,IACAuE,GACA6iC,MAAApnC,GAAAiJ,IAAAiiB,IACA/hB,MACAA,MAAAzI,KAAA0mC,MAAApnC,GAAAA,EAAAuE,GAAA6iC,MAAApnC,GAAAiJ,OAMA,OAAAy1C,UACAtX,MAIAwX,KACAr6C,GAAA7D,KAAA0mC,OAGAlgC,IAAA3C,GAAA6iC,MAAA,GAAAn+B,KAAA01C,UAKAE,UAAA,QACAC,WAAA,YAGA,SAAAC,WAAAC,KAAAC,QACA,OAAAA,OAAAC,cAMA,SAAAC,UAAAnwC,QACA,OAAAA,OAAAnG,QAAAg2C,UAAA,OAAAh2C,QAAAi2C,WAAAC,YAEA,IAAAK,WAAA,SAAAC,OAQA,OAAA,IAAAA,MAAAxZ,UAAA,IAAAwZ,MAAAxZ,YAAAwZ,MAAAxZ,UAMA,SAAAyZ,OACA37C,KAAAukC,QAAArB,OAAAqB,QAAAoX,KAAAC,MAGAD,KAAAC,IAAA,EAEAD,KAAAt7C,UAAA,CAEAsqC,MAAA,SAAA+Q,OAGA,IAAAl2C,MAAAk2C,MAAA17C,KAAAukC,SA4BA,OAzBA/+B,QACAA,MAAAolB,OAAAvtB,OAAA,MAKAo+C,WAAAC,SAIAA,MAAAxZ,SACAwZ,MAAA17C,KAAAukC,SAAA/+B,MAMAolB,OAAAC,eAAA6wB,MAAA17C,KAAAukC,QAAA,CACA/+B,MAAAA,MACAmyB,cAAA,MAMAnyB,OAEA8qB,IAAA,SAAAorB,MAAA91C,KAAAJ,OACA,IAAAq2C,KACAlR,MAAA3qC,KAAA2qC,MAAA+Q,OAIA,GAAA,iBAAA91C,KACA+kC,MAAA6Q,UAAA51C,OAAAJ,WAMA,IAAAq2C,QAAAj2C,KACA+kC,MAAA6Q,UAAAK,OAAAj2C,KAAAi2C,MAGA,OAAAlR,OAEA9Z,IAAA,SAAA6qB,MAAAp2C,KACA,YAAA1C,IAAA0C,IACAtF,KAAA2qC,MAAA+Q,OAGAA,MAAA17C,KAAAukC,UAAAmX,MAAA17C,KAAAukC,SAAAiX,UAAAl2C,OAEAw1C,OAAA,SAAAY,MAAAp2C,IAAAE,OAaA,YAAA5C,IAAA0C,KACAA,KAAA,iBAAAA,UAAA1C,IAAA4C,MAEAxF,KAAA6wB,IAAA6qB,MAAAp2C,MASAtF,KAAAswB,IAAAorB,MAAAp2C,IAAAE,YAIA5C,IAAA4C,MAAAA,MAAAF,MAEAsyC,OAAA,SAAA8D,MAAAp2C,KACA,IAAAjJ,EACAsuC,MAAA+Q,MAAA17C,KAAAukC,SAEA,QAAA3hC,IAAA+nC,MAAA,CAIA,QAAA/nC,IAAA0C,IAAA,CAkBAjJ,GAXAiJ,IAJA0f,MAAA3hB,QAAAiC,KAIAA,IAAA6L,IAAAqqC,YAEAl2C,IAAAk2C,UAAAl2C,QAIAqlC,MACA,CAAArlC,KACAA,IAAAyf,MAAAoxB,gBAAA,IAGAn5C,OAEA,KAAAX,YACAsuC,MAAArlC,IAAAjJ,UAKAuG,IAAA0C,KAAA49B,OAAA0B,cAAA+F,UAMA+Q,MAAAxZ,SACAwZ,MAAA17C,KAAAukC,cAAA3hC,SAEA84C,MAAA17C,KAAAukC,YAIAuX,QAAA,SAAAJ,OACA,IAAA/Q,MAAA+Q,MAAA17C,KAAAukC,SACA,YAAA3hC,IAAA+nC,QAAAzH,OAAA0B,cAAA+F,SAGA,IAAAoR,SAAA,IAAAJ,KAEAK,SAAA,IAAAL,KAcAM,OAAA,gCACAC,WAAA,SA2BA,SAAAC,SAAAxY,KAAAr+B,IAAAM,MACA,IAAAjF,KAIA,QAAAiC,IAAAgD,MAAA,IAAA+9B,KAAAzB,SAIA,GAHAvhC,KAAA,QAAA2E,IAAAJ,QAAAg3C,WAAA,OAAA3vB,cAGA,iBAFA3mB,KAAA+9B,KAAAhB,aAAAhiC,OAEA,CACA,IACAiF,KApCA,SAAAA,MACA,MAAA,SAAAA,MAIA,UAAAA,OAIA,SAAAA,KACA,KAIAA,QAAAA,KAAA,IACAA,KAGAq2C,OAAAn6C,KAAA8D,MACAgJ,KAAAxQ,MAAAwH,MAGAA,MAcAw2C,CAAAx2C,MACA,MAAA3J,IAGA+/C,SAAA1rB,IAAAqT,KAAAr+B,IAAAM,WAEAA,UAAAhD,EAGA,OAAAgD,KAGAs9B,OAAApkC,OAAA,CACAg9C,QAAA,SAAAnY,MACA,OAAAqY,SAAAF,QAAAnY,OAAAoY,SAAAD,QAAAnY,OAGA/9B,KAAA,SAAA+9B,KAAAhjC,KAAAiF,MACA,OAAAo2C,SAAAlB,OAAAnX,KAAAhjC,KAAAiF,OAGAy2C,WAAA,SAAA1Y,KAAAhjC,MACAq7C,SAAApE,OAAAjU,KAAAhjC,OAKA27C,MAAA,SAAA3Y,KAAAhjC,KAAAiF,MACA,OAAAm2C,SAAAjB,OAAAnX,KAAAhjC,KAAAiF,OAGA22C,YAAA,SAAA5Y,KAAAhjC,MACAo7C,SAAAnE,OAAAjU,KAAAhjC,SAIAuiC,OAAAtiC,GAAA9B,OAAA,CACA8G,KAAA,SAAAN,IAAAE,OACA,IAAAnJ,EAAAsE,KAAAiF,KACA+9B,KAAA3jC,KAAA,GACAirC,MAAAtH,MAAAA,KAAAyD,WAGA,QAAAxkC,IAAA0C,IA0BA,MAAA,iBAAAA,IACAtF,KAAAyE,KAAA,WACAu3C,SAAA1rB,IAAAtwB,KAAAsF,OAIAw1C,OAAA96C,KAAA,SAAAwF,OACA,IAAAI,KAOA,GAAA+9B,WAAA/gC,IAAA4C,MAKA,YAAA5C,KADAgD,KAAAo2C,SAAAnrB,IAAA8S,KAAAr+B,MAEAM,UAMAhD,KADAgD,KAAAu2C,SAAAxY,KAAAr+B,MAEAM,UAIA,EAIA5F,KAAAyE,KAAA,WAGAu3C,SAAA1rB,IAAAtwB,KAAAsF,IAAAE,UAEA,KAAAA,MAAA,EAAAX,UAAA7H,OAAA,MAAA,GAjEA,GAAAgD,KAAAhD,SACA4I,KAAAo2C,SAAAnrB,IAAA8S,MAEA,IAAAA,KAAAzB,WAAA6Z,SAAAlrB,IAAA8S,KAAA,iBAAA,CAEA,IADAtnC,EAAA4uC,MAAAjuC,OACAX,KAIA4uC,MAAA5uC,IAEA,KADAsE,KAAAsqC,MAAA5uC,GAAAsE,MACA6L,QAAA,WACA7L,KAAA66C,UAAA76C,KAAAgG,MAAA,IACAw1C,SAAAxY,KAAAhjC,KAAAiF,KAAAjF,QAIAo7C,SAAAzrB,IAAAqT,KAAA,gBAAA,GAIA,OAAA/9B,MA+CAy2C,WAAA,SAAA/2C,KACA,OAAAtF,KAAAyE,KAAA,WACAu3C,SAAApE,OAAA53C,KAAAsF,UAMA49B,OAAApkC,OAAA,CACAy4C,MAAA,SAAA5T,KAAAliC,KAAAmE,MACA,IAAA2xC,MAEA,GAAA5T,KAYA,OAXAliC,MAAAA,MAAA,MAAA,QACA81C,MAAAwE,SAAAlrB,IAAA8S,KAAAliC,MAGAmE,QACA2xC,OAAAvyB,MAAA3hB,QAAAuC,MACA2xC,MAAAwE,SAAAjB,OAAAnX,KAAAliC,KAAAyhC,OAAA4B,UAAAl/B,OAEA2xC,MAAA/zC,KAAAoC,OAGA2xC,OAAA,IAIAiF,QAAA,SAAA7Y,KAAAliC,MACAA,KAAAA,MAAA,KAEA,IAAA81C,MAAArU,OAAAqU,MAAA5T,KAAAliC,MACAg7C,YAAAlF,MAAAv6C,OACA4D,GAAA22C,MAAA9uC,QACAi0C,MAAAxZ,OAAAyZ,YAAAhZ,KAAAliC,MAMA,eAAAb,KACAA,GAAA22C,MAAA9uC,QACAg0C,eAGA77C,KAIA,OAAAa,MACA81C,MAAAjzC,QAAA,qBAIAo4C,MAAAE,KACAh8C,GAAA7D,KAAA4mC,KApBA,WACAT,OAAAsZ,QAAA7Y,KAAAliC,OAmBAi7C,SAGAD,aAAAC,OACAA,MAAAl4C,MAAAizC,QAKAkF,YAAA,SAAAhZ,KAAAliC,MACA,IAAA6D,IAAA7D,KAAA,aACA,OAAAs6C,SAAAlrB,IAAA8S,KAAAr+B,MAAAy2C,SAAAjB,OAAAnX,KAAAr+B,IAAA,CACAd,MAAA0+B,OAAA6T,UAAA,eAAA9yC,IAAA,WACA83C,SAAAnE,OAAAjU,KAAA,CAAAliC,KAAA,QAAA6D,aAMA49B,OAAAtiC,GAAA9B,OAAA,CACAy4C,MAAA,SAAA91C,KAAAmE,MACA,IAAAi3C,OAAA,EAQA,MANA,iBAAAp7C,OACAmE,KAAAnE,KACAA,KAAA,KACAo7C,UAGAh4C,UAAA7H,OAAA6/C,OACA3Z,OAAAqU,MAAAv3C,KAAA,GAAAyB,WAGAmB,IAAAgD,KACA5F,KACAA,KAAAyE,KAAA,WACA,IAAA8yC,MAAArU,OAAAqU,MAAAv3C,KAAAyB,KAAAmE,MAGAs9B,OAAAyZ,YAAA38C,KAAAyB,MAEA,OAAAA,MAAA,eAAA81C,MAAA,IACArU,OAAAsZ,QAAAx8C,KAAAyB,SAIA+6C,QAAA,SAAA/6C,MACA,OAAAzB,KAAAyE,KAAA,WACAy+B,OAAAsZ,QAAAx8C,KAAAyB,SAGAq7C,WAAA,SAAAr7C,MACA,OAAAzB,KAAAu3C,MAAA91C,MAAA,KAAA,KAKAm1C,QAAA,SAAAn1C,KAAA2D,KACA,IAAAolB,IACAuyB,MAAA,EACAC,MAAA9Z,OAAA8U,WACAhK,SAAAhuC,KACA3D,EAAA2D,KAAAhD,OACAy5C,QAAA,aACAsG,OACAC,MAAA3D,YAAArL,SAAA,CAAAA,YAUA,IANA,iBAAAvsC,OACA2D,IAAA3D,KACAA,UAAAmB,GAEAnB,KAAAA,MAAA,KAEApF,MACAmuB,IAAAuxB,SAAAlrB,IAAAmd,SAAA3xC,GAAAoF,KAAA,gBACA+oB,IAAAhmB,QACAu4C,QACAvyB,IAAAhmB,MAAAP,IAAAwyC,UAIA,OADAA,UACAuG,MAAApG,QAAAxxC,QAGA,IAAA63C,KAAA,sCAAAr5C,OAEAs5C,QAAA,IAAA3V,OAAA,iBAAA0V,KAAA,cAAA,KAGAE,UAAA,CAAA,MAAA,QAAA,SAAA,QAEAjR,gBAAA5K,SAAA4K,gBAIAkR,WAAA,SAAAzZ,MACA,OAAAT,OAAAoD,SAAA3C,KAAAqG,cAAArG,OAEA0Z,SAAA,CAAAA,UAAA,GAOAnR,gBAAAoR,cACAF,WAAA,SAAAzZ,MACA,OAAAT,OAAAoD,SAAA3C,KAAAqG,cAAArG,OACAA,KAAA2Z,YAAAD,YAAA1Z,KAAAqG,gBAGA,IAAAuT,mBAAA,SAAA5Z,KAAAoH,IAOA,MAAA,UAHApH,KAAAoH,IAAApH,MAGA6Z,MAAAC,SACA,KAAA9Z,KAAA6Z,MAAAC,SAMAL,WAAAzZ,OAEA,SAAAT,OAAAwa,IAAA/Z,KAAA,YAKA,SAAAga,UAAAha,KAAAkY,KAAA+B,WAAAC,OACA,IAAAC,SAAAC,MACAC,cAAA,GACAC,aAAAJ,MACA,WACA,OAAAA,MAAAxS,OAEA,WACA,OAAAnI,OAAAwa,IAAA/Z,KAAAkY,KAAA,KAEAqC,QAAAD,eACAE,KAAAP,YAAAA,WAAA,KAAA1a,OAAAkb,UAAAvC,MAAA,GAAA,MAGAwC,cAAA1a,KAAAzB,WACAgB,OAAAkb,UAAAvC,OAAA,OAAAsC,OAAAD,UACAhB,QAAAnzB,KAAAmZ,OAAAwa,IAAA/Z,KAAAkY,OAEA,GAAAwC,eAAAA,cAAA,KAAAF,KAAA,CAYA,IARAD,SAAA,EAGAC,KAAAA,MAAAE,cAAA,GAGAA,eAAAH,SAAA,EAEAF,iBAIA9a,OAAAsa,MAAA7Z,KAAAkY,KAAAwC,cAAAF,OACA,EAAAJ,QAAA,GAAAA,MAAAE,eAAAC,SAAA,MAAA,IACAF,cAAA,GAEAK,eAAAN,MAIAM,eAAA,EACAnb,OAAAsa,MAAA7Z,KAAAkY,KAAAwC,cAAAF,MAGAP,WAAAA,YAAA,GAgBA,OAbAA,aACAS,eAAAA,gBAAAH,SAAA,EAGAJ,SAAAF,WAAA,GACAS,eAAAT,WAAA,GAAA,GAAAA,WAAA,IACAA,WAAA,GACAC,QACAA,MAAAM,KAAAA,KACAN,MAAAj5C,MAAAy5C,cACAR,MAAAlxC,IAAAmxC,WAGAA,SAIA,IAAAQ,kBAAA,GAEA,SAAAC,kBAAA5a,MACA,IAAAnP,KACAgO,IAAAmB,KAAAqG,cACAV,SAAA3F,KAAA2F,SACAmU,QAAAa,kBAAAhV,UAEA,OAAAmU,UAIAjpB,KAAAgO,IAAA75B,KAAAm6B,YAAAN,IAAAE,cAAA4G,WACAmU,QAAAva,OAAAwa,IAAAlpB,KAAA,WAEAA,KAAAuO,WAAAC,YAAAxO,MAEA,SAAAipB,UACAA,QAAA,SAEAa,kBAAAhV,UAAAmU,SAKA,SAAAe,SAAAxQ,SAAAyQ,MAOA,IANA,IAAAhB,QAAA9Z,KACApvB,OAAA,GACA8B,MAAA,EACArZ,OAAAgxC,SAAAhxC,OAGAqZ,MAAArZ,OAAAqZ,SACAstB,KAAAqK,SAAA33B,QACAmnC,QAIAC,QAAA9Z,KAAA6Z,MAAAC,QACAgB,MAKA,SAAAhB,UACAlpC,OAAA8B,OAAA0lC,SAAAlrB,IAAA8S,KAAA,YAAA,KACApvB,OAAA8B,SACAstB,KAAA6Z,MAAAC,QAAA,KAGA,KAAA9Z,KAAA6Z,MAAAC,SAAAF,mBAAA5Z,QACApvB,OAAA8B,OAAAkoC,kBAAA5a,QAGA,SAAA8Z,UACAlpC,OAAA8B,OAAA,OAGA0lC,SAAAzrB,IAAAqT,KAAA,UAAA8Z,WAMA,IAAApnC,MAAA,EAAAA,MAAArZ,OAAAqZ,QACA,MAAA9B,OAAA8B,SACA23B,SAAA33B,OAAAmnC,MAAAC,QAAAlpC,OAAA8B,QAIA,OAAA23B,SAGA9K,OAAAtiC,GAAA9B,OAAA,CACA2/C,KAAA,WACA,OAAAD,SAAAx+C,MAAA,IAEA0+C,KAAA,WACA,OAAAF,SAAAx+C,OAEA2+C,OAAA,SAAAr6B,OACA,MAAA,kBAAAA,MACAA,MAAAtkB,KAAAy+C,OAAAz+C,KAAA0+C,OAGA1+C,KAAAyE,KAAA,WACA84C,mBAAAv9C,MACAkjC,OAAAljC,MAAAy+C,OAEAvb,OAAAljC,MAAA0+C,YAKA,IAUAE,IACAphD,MAXAqhD,eAAA,wBAEAC,SAAA,iCAEAC,YAAA,qCAMAH,IADAtd,SAAA0d,yBACAlc,YAAAxB,SAAAoB,cAAA,SACAllC,MAAA8jC,SAAAoB,cAAA,UAMAE,aAAA,OAAA,SACAplC,MAAAolC,aAAA,UAAA,WACAplC,MAAAolC,aAAA,OAAA,KAEAgc,IAAA9b,YAAAtlC,OAIAykC,QAAAgd,WAAAL,IAAAM,WAAA,GAAAA,WAAA,GAAAjgB,UAAA6R,QAIA8N,IAAA3R,UAAA,yBACAhL,QAAAkd,iBAAAP,IAAAM,WAAA,GAAAjgB,UAAAuV,aAKAoK,IAAA3R,UAAA,oBACAhL,QAAAmd,SAAAR,IAAA3f,UAKA,IAAAogB,QAAA,CAKAC,MAAA,CAAA,EAAA,UAAA,YACAC,IAAA,CAAA,EAAA,oBAAA,uBACAC,GAAA,CAAA,EAAA,iBAAA,oBACAC,GAAA,CAAA,EAAA,qBAAA,yBAEAC,SAAA,CAAA,EAAA,GAAA,KAYA,SAAAC,OAAAv5C,QAAA4mC,KAIA,IAAA1pC,IAYA,OATAA,SADA,IAAA8C,QAAA8jC,qBACA9jC,QAAA8jC,qBAAA8C,KAAA,UAEA,IAAA5mC,QAAAokC,iBACApkC,QAAAokC,iBAAAwC,KAAA,KAGA,QAGApqC,IAAAoqC,KAAAA,KAAA1D,SAAAljC,QAAA4mC,KACA9J,OAAA3+B,MAAA,CAAA6B,SAAA9C,KAGAA,IAKA,SAAAs8C,cAAAnc,MAAAoc,aAIA,IAHA,IAAAxjD,EAAA,EACAwP,EAAA43B,MAAAzmC,OAEAX,EAAAwP,EAAAxP,IACA0/C,SAAAzrB,IACAmT,MAAApnC,GACA,cACAwjD,aAAA9D,SAAAlrB,IAAAgvB,YAAAxjD,GAAA,eA1CAgjD,QAAAS,MAAAT,QAAAU,MAAAV,QAAAW,SAAAX,QAAAY,QAAAZ,QAAAC,MACAD,QAAAa,GAAAb,QAAAI,GAGAxd,QAAAmd,SACAC,QAAAc,SAAAd,QAAAD,OAAA,CAAA,EAAA,+BAAA,cA2CA,IAAA/W,MAAA,YAEA,SAAA+X,cAAA3c,MAAAr9B,QAAAi6C,QAAAC,UAAAC,SAOA,IANA,IAAA5c,KAAAnZ,IAAAwiB,IAAAvpC,KAAA+8C,SAAA10B,EACA20B,SAAAr6C,QAAA44C,yBACA0B,MAAA,GACArkD,EAAA,EACAwP,EAAA43B,MAAAzmC,OAEAX,EAAAwP,EAAAxP,IAGA,IAFAsnC,KAAAF,MAAApnC,KAEA,IAAAsnC,KAGA,GAAA,WAAAV,OAAAU,MAIAT,OAAA3+B,MAAAm8C,MAAA/c,KAAAzB,SAAA,CAAAyB,MAAAA,WAGA,GAAA0E,MAAAvmC,KAAA6hC,MAIA,CAUA,IATAnZ,IAAAA,KAAAi2B,SAAA3d,YAAA18B,QAAAs8B,cAAA,QAGAsK,KAAA8R,SAAA/0B,KAAA4Z,OAAA,CAAA,GAAA,KAAA,GAAApX,cACA9oB,KAAA47C,QAAArS,MAAAqS,QAAAK,SACAl1B,IAAAyiB,UAAAxpC,KAAA,GAAAy/B,OAAAyd,cAAAhd,MAAAlgC,KAAA,GAGAqoB,EAAAroB,KAAA,GACAqoB,KACAtB,IAAAA,IAAAyU,UAKAiE,OAAA3+B,MAAAm8C,MAAAl2B,IAAAgf,aAGAhf,IAAAi2B,SAAAhS,YAGAD,YAAA,QAzBAkS,MAAAl9C,KAAA4C,QAAAw6C,eAAAjd,OAkCA,IAHA8c,SAAAjS,YAAA,GAEAnyC,EAAA,EACAsnC,KAAA+c,MAAArkD,MAGA,GAAAikD,YAAA,EAAApd,OAAA8B,QAAArB,KAAA2c,WACAC,SACAA,QAAA/8C,KAAAmgC,WAgBA,GAXA6c,SAAApD,WAAAzZ,MAGAnZ,IAAAm1B,OAAAc,SAAA3d,YAAAa,MAAA,UAGA6c,UACAZ,cAAAp1B,KAIA61B,QAEA,IADAv0B,EAAA,EACA6X,KAAAnZ,IAAAsB,MACAizB,YAAAj9C,KAAA6hC,KAAAliC,MAAA,KACA4+C,QAAA78C,KAAAmgC,MAMA,OAAA8c,SAIA,IACAI,UAAA,OACAC,YAAA,iDACAC,eAAA,sBAEA,SAAAC,aACA,OAAA,EAGA,SAAAC,cACA,OAAA,EASA,SAAAC,WAAAvd,KAAAliC,MACA,OAAAkiC,OAMA,WACA,IACA,OAAArC,SAAAmP,cACA,MAAAztC,OATAm+C,KAAA,UAAA1/C,MAYA,SAAA2/C,GAAAzd,KAAAnvB,MAAA2uB,SAAAv9B,KAAAhF,GAAAygD,KACA,IAAAC,OAAA7/C,KAGA,GAAA,iBAAA+S,MAAA,CASA,IAAA/S,OANA,iBAAA0hC,WAGAv9B,KAAAA,MAAAu9B,SACAA,cAAAvgC,GAEA4R,MACA4sC,GAAAzd,KAAAliC,KAAA0hC,SAAAv9B,KAAA4O,MAAA/S,MAAA4/C,KAEA,OAAA1d,KAsBA,GAnBA,MAAA/9B,MAAA,MAAAhF,IAGAA,GAAAuiC,SACAv9B,KAAAu9B,cAAAvgC,GACA,MAAAhC,KACA,iBAAAuiC,UAGAviC,GAAAgF,KACAA,UAAAhD,IAIAhC,GAAAgF,KACAA,KAAAu9B,SACAA,cAAAvgC,KAGA,IAAAhC,GACAA,GAAAqgD,iBACA,IAAArgD,GACA,OAAA+iC,KAeA,OAZA,IAAA0d,MACAC,OAAA1gD,IACAA,GAAA,SAAA2gD,OAIA,OADAre,SAAAse,IAAAD,OACAD,OAAA9wC,MAAAxQ,KAAA6E,aAIA4C,KAAA65C,OAAA75C,OAAA65C,OAAA75C,KAAAy7B,OAAAz7B,SAEAk8B,KAAAl/B,KAAA,WACAy+B,OAAAqe,MAAAt9C,IAAAjE,KAAAwU,MAAA5T,GAAAgF,KAAAu9B,YA+aA,SAAAse,eAAA1W,GAAAtpC,KAAAy/C,YAGAA,YAQAnF,SAAAzrB,IAAAya,GAAAtpC,MAAA,GACAyhC,OAAAqe,MAAAt9C,IAAA8mC,GAAAtpC,KAAA,CACAuqC,WAAA,EACAd,QAAA,SAAAqW,OACA,IAAAG,SAAAn5C,OACAo5C,MAAA5F,SAAAlrB,IAAA7wB,KAAAyB,MAEA,GAAA,EAAA8/C,MAAAK,WAAA5hD,KAAAyB,OAKA,GAAAkgD,MAAA3kD,QAiCAkmC,OAAAqe,MAAAtI,QAAAx3C,OAAA,IAAAogD,cACAN,MAAAO,uBAfA,GAdAH,MAAAh7C,MAAA5J,KAAA8H,WACAk3C,SAAAzrB,IAAAtwB,KAAAyB,KAAAkgD,OAKAD,SAAAR,WAAAlhD,KAAAyB,MACAzB,KAAAyB,QAEAkgD,SADAp5C,OAAAwzC,SAAAlrB,IAAA7wB,KAAAyB,QACAigD,SACA3F,SAAAzrB,IAAAtwB,KAAAyB,MAAA,GAEA8G,OAAA,GAEAo5C,QAAAp5C,OAKA,OAFAg5C,MAAAQ,2BACAR,MAAAS,iBACAz5C,OAAA/C,WAeAm8C,MAAA3kD,SAGA++C,SAAAzrB,IAAAtwB,KAAAyB,KAAA,CACA+D,MAAA09B,OAAAqe,MAAAU,QAIA/e,OAAApkC,OAAA6iD,MAAA,GAAAze,OAAAgf,MAAA7hD,WACAshD,MAAAh7C,MAAA,GACA3G,QAKAuhD,MAAAQ,qCAzEAn/C,IAAAm5C,SAAAlrB,IAAAka,GAAAtpC,OACAyhC,OAAAqe,MAAAt9C,IAAA8mC,GAAAtpC,KAAAu/C,YA5aA9d,OAAAqe,MAAA,CAEAz0B,OAAA,GAEA7oB,IAAA,SAAA0/B,KAAAnvB,MAAA02B,QAAAtlC,KAAAu9B,UAEA,IAAAgf,YAAAC,YAAA53B,IACA63B,OAAAlmD,EAAAmmD,UACArJ,QAAAsJ,SAAA9gD,KAAA+gD,WAAAC,SACAC,SAAA3G,SAAAlrB,IAAA8S,MAGA,GAAA8X,WAAA9X,MAuCA,IAlCAuH,QAAAA,UAEAA,SADAiX,YAAAjX,SACAA,QACA/H,SAAAgf,YAAAhf,UAKAA,UACAD,OAAA4J,KAAAI,gBAAAhB,gBAAA/I,UAIA+H,QAAAzjC,OACAyjC,QAAAzjC,KAAAy7B,OAAAz7B,SAIA46C,OAAAK,SAAAL,UACAA,OAAAK,SAAAL,OAAAz3B,OAAAvtB,OAAA,QAEA+kD,YAAAM,SAAAC,UACAP,YAAAM,SAAAC,OAAA,SAAA1mD,GAIA,YAAA,IAAAinC,QAAAA,OAAAqe,MAAAqB,YAAA3mD,EAAAwF,KACAyhC,OAAAqe,MAAAsB,SAAAryC,MAAAmzB,KAAA9+B,gBAAAjC,IAMAzG,GADAqY,OAAAA,OAAA,IAAAuQ,MAAAoxB,gBAAA,CAAA,KACAn5C,OACAb,KAEAsF,KAAAghD,UADAj4B,IAAAu2B,eAAAh3B,KAAAvV,MAAArY,KAAA,IACA,GACAqmD,YAAAh4B,IAAA,IAAA,IAAA/S,MAAA,KAAA0c,OAGA1yB,OAKAw3C,QAAA/V,OAAAqe,MAAAtI,QAAAx3C,OAAA,GAGAA,MAAA0hC,SAAA8V,QAAA4I,aAAA5I,QAAA6J,WAAArhD,KAGAw3C,QAAA/V,OAAAqe,MAAAtI,QAAAx3C,OAAA,GAGA6gD,UAAApf,OAAApkC,OAAA,CACA2C,KAAAA,KACAghD,SAAAA,SACA78C,KAAAA,KACAslC,QAAAA,QACAzjC,KAAAyjC,QAAAzjC,KACA07B,SAAAA,SACAiF,aAAAjF,UAAAD,OAAA3sB,KAAAwO,MAAAqjB,aAAAtmC,KAAAqhC,UACA6I,UAAAwW,WAAAt+C,KAAA,MACAi+C,cAGAI,SAAAF,OAAA5gD,UACA8gD,SAAAF,OAAA5gD,MAAA,IACAshD,cAAA,EAGA9J,QAAA+J,QACA,IAAA/J,QAAA+J,MAAAjmD,KAAA4mC,KAAA/9B,KAAA48C,WAAAJ,cAEAze,KAAA2I,kBACA3I,KAAA2I,iBAAA7qC,KAAA2gD,cAKAnJ,QAAAh1C,MACAg1C,QAAAh1C,IAAAlH,KAAA4mC,KAAA2e,WAEAA,UAAApX,QAAAzjC,OACA66C,UAAApX,QAAAzjC,KAAAyjC,QAAAzjC,OAKA07B,SACAof,SAAA/vC,OAAA+vC,SAAAQ,gBAAA,EAAAT,WAEAC,SAAA/+C,KAAA8+C,WAIApf,OAAAqe,MAAAz0B,OAAArrB,OAAA,IAMAm2C,OAAA,SAAAjU,KAAAnvB,MAAA02B,QAAA/H,SAAA8f,aAEA,IAAAn3B,EAAAo3B,UAAA14B,IACA63B,OAAAlmD,EAAAmmD,UACArJ,QAAAsJ,SAAA9gD,KAAA+gD,WAAAC,SACAC,SAAA3G,SAAAD,QAAAnY,OAAAoY,SAAAlrB,IAAA8S,MAEA,GAAA+e,WAAAL,OAAAK,SAAAL,QAAA,CAOA,IADAlmD,GADAqY,OAAAA,OAAA,IAAAuQ,MAAAoxB,gBAAA,CAAA,KACAn5C,OACAb,KAMA,GAJAsF,KAAAghD,UADAj4B,IAAAu2B,eAAAh3B,KAAAvV,MAAArY,KAAA,IACA,GACAqmD,YAAAh4B,IAAA,IAAA,IAAA/S,MAAA,KAAA0c,OAGA1yB,KAAA,CAeA,IARAw3C,QAAA/V,OAAAqe,MAAAtI,QAAAx3C,OAAA,GAEA8gD,SAAAF,OADA5gD,MAAA0hC,SAAA8V,QAAA4I,aAAA5I,QAAA6J,WAAArhD,OACA,GACA+oB,IAAAA,IAAA,IACA,IAAA+c,OAAA,UAAAib,WAAAt+C,KAAA,iBAAA,WAGAg/C,UAAAp3B,EAAAy2B,SAAAvlD,OACA8uB,KACAw2B,UAAAC,SAAAz2B,IAEAm3B,aAAAR,WAAAH,UAAAG,UACAvX,SAAAA,QAAAzjC,OAAA66C,UAAA76C,MACA+iB,MAAAA,IAAA1oB,KAAAwgD,UAAAtW,YACA7I,UAAAA,WAAAmf,UAAAnf,WACA,OAAAA,WAAAmf,UAAAnf,YACAof,SAAA/vC,OAAAsZ,EAAA,GAEAw2B,UAAAnf,UACAof,SAAAQ,gBAEA9J,QAAArB,QACAqB,QAAArB,OAAA76C,KAAA4mC,KAAA2e,YAOAY,YAAAX,SAAAvlD,SACAi8C,QAAAkK,WACA,IAAAlK,QAAAkK,SAAApmD,KAAA4mC,KAAA6e,WAAAE,SAAAC,SAEAzf,OAAAkgB,YAAAzf,KAAAliC,KAAAihD,SAAAC,eAGAN,OAAA5gD,YA1CA,IAAAA,QAAA4gD,OACAnf,OAAAqe,MAAA3J,OAAAjU,KAAAliC,KAAA+S,MAAArY,GAAA+uC,QAAA/H,UAAA,GA8CAD,OAAA0B,cAAAyd,SACAtG,SAAAnE,OAAAjU,KAAA,mBAIAkf,SAAA,SAAAQ,aAEA,IAAAhnD,EAAAyvB,EAAAxoB,IAAAgiB,QAAAg9B,UAAAgB,aACA/7C,KAAA,IAAAyd,MAAAngB,UAAA7H,QAGAukD,MAAAre,OAAAqe,MAAAgC,IAAAF,aAEAd,UACAxG,SAAAlrB,IAAA7wB,KAAA,WAAA4qB,OAAAvtB,OAAA,OACAkkD,MAAA9/C,OAAA,GACAw3C,QAAA/V,OAAAqe,MAAAtI,QAAAsI,MAAA9/C,OAAA,GAKA,IAFA8F,KAAA,GAAAg6C,MAEAllD,EAAA,EAAAA,EAAAwI,UAAA7H,OAAAX,IACAkL,KAAAlL,GAAAwI,UAAAxI,GAMA,GAHAklD,MAAAiC,eAAAxjD,MAGAi5C,QAAAwK,cAAA,IAAAxK,QAAAwK,YAAA1mD,KAAAiD,KAAAuhD,OAAA,CASA,IAJA+B,aAAApgB,OAAAqe,MAAAgB,SAAAxlD,KAAAiD,KAAAuhD,MAAAgB,UAGAlmD,EAAA,GACAipB,QAAAg+B,aAAAjnD,QAAAklD,MAAAmC,wBAIA,IAHAnC,MAAAoC,cAAAr+B,QAAAqe,KAEA7X,EAAA,GACAw2B,UAAAh9B,QAAAi9B,SAAAz2B,QACAy1B,MAAAqC,iCAIArC,MAAAsC,aAAA,IAAAvB,UAAAtW,YACAuV,MAAAsC,WAAA/hD,KAAAwgD,UAAAtW,aAEAuV,MAAAe,UAAAA,UACAf,MAAA37C,KAAA08C,UAAA18C,UAKAhD,KAHAU,MAAA4/B,OAAAqe,MAAAtI,QAAAqJ,UAAAG,WAAA,IAAAE,QACAL,UAAApX,SAAA16B,MAAA8U,QAAAqe,KAAAp8B,SAGA,KAAAg6C,MAAAh5C,OAAAjF,OACAi+C,MAAAS,iBACAT,MAAAO,oBAYA,OAJA7I,QAAA6K,cACA7K,QAAA6K,aAAA/mD,KAAAiD,KAAAuhD,OAGAA,MAAAh5C,SAGAg6C,SAAA,SAAAhB,MAAAgB,UACA,IAAAlmD,EAAAimD,UAAAnU,IAAA4V,gBAAAC,iBACAV,aAAA,GACAP,cAAAR,SAAAQ,cACA1X,IAAAkW,MAAAnd,OAGA,GAAA2e,eAIA1X,IAAAnJ,YAOA,UAAAqf,MAAA9/C,MAAA,GAAA8/C,MAAArQ,QAEA,KAAA7F,MAAArrC,KAAAqrC,IAAAA,IAAAtI,YAAA/iC,KAIA,GAAA,IAAAqrC,IAAAnJ,WAAA,UAAAqf,MAAA9/C,OAAA,IAAA4pC,IAAAhC,UAAA,CAGA,IAFA0a,gBAAA,GACAC,iBAAA,GACA3nD,EAAA,EAAAA,EAAA0mD,cAAA1mD,SAMAuG,IAAAohD,iBAFA7V,KAHAmU,UAAAC,SAAAlmD,IAGA8mC,SAAA,OAGA6gB,iBAAA7V,KAAAmU,UAAAla,cACA,EAAAlF,OAAAiL,IAAAnuC,MAAAqW,MAAAg1B,KACAnI,OAAA4J,KAAAqB,IAAAnuC,KAAA,KAAA,CAAAqrC,MAAAruC,QAEAgnD,iBAAA7V,MACA4V,gBAAAvgD,KAAA8+C,WAGAyB,gBAAA/mD,QACAsmD,aAAA9/C,KAAA,CAAAmgC,KAAA0H,IAAAkX,SAAAwB,kBAYA,OALA1Y,IAAArrC,KACA+iD,cAAAR,SAAAvlD,QACAsmD,aAAA9/C,KAAA,CAAAmgC,KAAA0H,IAAAkX,SAAAA,SAAA57C,MAAAo8C,iBAGAO,cAGAW,QAAA,SAAAtjD,KAAAujD,MACAt5B,OAAAC,eAAAqY,OAAAgf,MAAA7hD,UAAAM,KAAA,CACAmqB,YAAA,EACA6M,cAAA,EAEA9G,IAAAhF,WAAAq4B,MACA,WACA,GAAAlkD,KAAAmkD,cACA,OAAAD,KAAAlkD,KAAAmkD,gBAGA,WACA,GAAAnkD,KAAAmkD,cACA,OAAAnkD,KAAAmkD,cAAAxjD,OAIA2vB,IAAA,SAAA9qB,OACAolB,OAAAC,eAAA7qB,KAAAW,KAAA,CACAmqB,YAAA,EACA6M,cAAA,EACAysB,UAAA,EACA5+C,MAAAA,YAMA+9C,IAAA,SAAAY,eACA,OAAAA,cAAAjhB,OAAAqB,SACA4f,cACA,IAAAjhB,OAAAgf,MAAAiC,gBAGAlL,QAAA,CACAoL,KAAA,CAGAC,UAAA,GAEAC,MAAA,CAGAvB,MAAA,SAAAp9C,MAIA,IAAAmlC,GAAA/qC,MAAA4F,KAWA,OARAi5C,eAAA/8C,KAAAipC,GAAAtpC,OACAspC,GAAAwZ,OAAAjb,SAAAyB,GAAA,UAGA0W,eAAA1W,GAAA,QAAAiW,aAIA,GAEAiB,QAAA,SAAAr8C,MAIA,IAAAmlC,GAAA/qC,MAAA4F,KAUA,OAPAi5C,eAAA/8C,KAAAipC,GAAAtpC,OACAspC,GAAAwZ,OAAAjb,SAAAyB,GAAA,UAEA0W,eAAA1W,GAAA,UAIA,GAKA2U,SAAA,SAAA6B,OACA,IAAAnd,OAAAmd,MAAAnd,OACA,OAAAya,eAAA/8C,KAAAsiC,OAAA3iC,OACA2iC,OAAAmgB,OAAAjb,SAAAlF,OAAA,UACA2X,SAAAlrB,IAAAuT,OAAA,UACAkF,SAAAlF,OAAA,OAIAogB,aAAA,CACAV,aAAA,SAAAvC,YAIA3+C,IAAA2+C,MAAAh5C,QAAAg5C,MAAA4C,gBACA5C,MAAA4C,cAAAM,YAAAlD,MAAAh5C,YA8FA26B,OAAAkgB,YAAA,SAAAzf,KAAAliC,KAAAkhD,QAGAhf,KAAA8W,qBACA9W,KAAA8W,oBAAAh5C,KAAAkhD,SAIAzf,OAAAgf,MAAA,SAAAl+C,IAAAomB,OAGA,KAAApqB,gBAAAkjC,OAAAgf,OACA,OAAA,IAAAhf,OAAAgf,MAAAl+C,IAAAomB,OAIApmB,KAAAA,IAAAvC,MACAzB,KAAAmkD,cAAAngD,IACAhE,KAAAyB,KAAAuC,IAAAvC,KAIAzB,KAAA0kD,mBAAA1gD,IAAA2gD,uBACA/hD,IAAAoB,IAAA2gD,mBAGA,IAAA3gD,IAAAygD,YACAzD,WACAC,YAKAjhD,KAAAokC,OAAApgC,IAAAogC,QAAA,IAAApgC,IAAAogC,OAAAlC,SACAl+B,IAAAogC,OAAArB,WACA/+B,IAAAogC,OAEApkC,KAAA2jD,cAAA3/C,IAAA2/C,cACA3jD,KAAA4kD,cAAA5gD,IAAA4gD,eAIA5kD,KAAAyB,KAAAuC,IAIAomB,OACA8Y,OAAApkC,OAAAkB,KAAAoqB,OAIApqB,KAAA6kD,UAAA7gD,KAAAA,IAAA6gD,WAAAte,KAAAue,MAGA9kD,KAAAkjC,OAAAqB,UAAA,GAKArB,OAAAgf,MAAA7hD,UAAA,CACAC,YAAA4iC,OAAAgf,MACAwC,mBAAAzD,YACAyC,qBAAAzC,YACA2C,8BAAA3C,YACA8D,aAAA,EAEA/C,eAAA,WACA,IAAA/lD,EAAA+D,KAAAmkD,cAEAnkD,KAAA0kD,mBAAA1D,WAEA/kD,IAAA+D,KAAA+kD,aACA9oD,EAAA+lD,kBAGAF,gBAAA,WACA,IAAA7lD,EAAA+D,KAAAmkD,cAEAnkD,KAAA0jD,qBAAA1C,WAEA/kD,IAAA+D,KAAA+kD,aACA9oD,EAAA6lD,mBAGAC,yBAAA,WACA,IAAA9lD,EAAA+D,KAAAmkD,cAEAnkD,KAAA4jD,8BAAA5C,WAEA/kD,IAAA+D,KAAA+kD,aACA9oD,EAAA8lD,2BAGA/hD,KAAA8hD,oBAKA5e,OAAAz+B,KAAA,CACAugD,QAAA,EACAC,SAAA,EACAC,YAAA,EACAC,gBAAA,EACAC,SAAA,EACAC,QAAA,EACAC,YAAA,EACAC,SAAA,EACAC,OAAA,EACAC,OAAA,EACAC,UAAA,EACAC,MAAA,EACAC,MAAA,EACAhpD,MAAA,EACAu1B,UAAA,EACA7sB,KAAA,EACAugD,SAAA,EACA3U,QAAA,EACA4U,SAAA,EACAC,SAAA,EACAC,SAAA,EACAC,SAAA,EACAC,SAAA,EACAC,WAAA,EACAC,aAAA,EACAC,SAAA,EACAC,SAAA,EACAC,eAAA,EACAC,WAAA,EACAC,SAAA,EAEAC,MAAA,SAAAnF,OACA,IAAArQ,OAAAqQ,MAAArQ,OAGA,OAAA,MAAAqQ,MAAAmF,OAAA7F,UAAA/+C,KAAAy/C,MAAA9/C,MACA,MAAA8/C,MAAApvB,SAAAovB,MAAApvB,SAAAovB,MAAAsE,SAIAtE,MAAAmF,YAAA9jD,IAAAsuC,QAAA4P,YAAAh/C,KAAAy/C,MAAA9/C,MACA,EAAAyvC,OACA,EAGA,EAAAA,OACA,EAGA,EAAAA,OACA,EAGA,EAGAqQ,MAAAmF,QAEAxjB,OAAAqe,MAAA0C,SAEA/gB,OAAAz+B,KAAA,CAAA+rC,MAAA,UAAAmW,KAAA,YAAA,SAAAllD,KAAAogD,cACA3e,OAAAqe,MAAAtI,QAAAx3C,MAAA,CAGAuhD,MAAA,WAQA,OAHAvB,eAAAzhD,KAAAyB,KAAAy/C,aAGA,GAEAe,QAAA,WAMA,OAHAR,eAAAzhD,KAAAyB,OAGA,GAGAogD,aAAAA,gBAYA3e,OAAAz+B,KAAA,CACAmiD,WAAA,YACAC,WAAA,WACAC,aAAA,cACAC,aAAA,cACA,SAAAC,KAAAzD,KACArgB,OAAAqe,MAAAtI,QAAA+N,MAAA,CACAnF,aAAA0B,IACAT,SAAAS,IAEAZ,OAAA,SAAApB,OACA,IAAAj+C,IAEA2jD,QAAA1F,MAAAqD,cACAtC,UAAAf,MAAAe,UASA,OALA2E,UAAAA,UANAjnD,MAMAkjC,OAAAoD,SANAtmC,KAMAinD,YACA1F,MAAA9/C,KAAA6gD,UAAAG,SACAn/C,IAAAg/C,UAAApX,QAAA16B,MAAAxQ,KAAA6E,WACA08C,MAAA9/C,KAAA8hD,KAEAjgD,QAKA4/B,OAAAtiC,GAAA9B,OAAA,CAEAsiD,GAAA,SAAA5sC,MAAA2uB,SAAAv9B,KAAAhF,IACA,OAAAwgD,GAAAphD,KAAAwU,MAAA2uB,SAAAv9B,KAAAhF,KAEAygD,IAAA,SAAA7sC,MAAA2uB,SAAAv9B,KAAAhF,IACA,OAAAwgD,GAAAphD,KAAAwU,MAAA2uB,SAAAv9B,KAAAhF,GAAA,IAEA4gD,IAAA,SAAAhtC,MAAA2uB,SAAAviC,IACA,IAAA0hD,UAAA7gD,KACA,GAAA+S,OAAAA,MAAAwtC,gBAAAxtC,MAAA8tC,UAWA,OARAA,UAAA9tC,MAAA8tC,UACApf,OAAA1uB,MAAAgvC,gBAAAhC,IACAc,UAAAtW,UACAsW,UAAAG,SAAA,IAAAH,UAAAtW,UACAsW,UAAAG,SACAH,UAAAnf,SACAmf,UAAApX,SAEAlrC,KAEA,GAAA,iBAAAwU,MAiBA,OATA,IAAA2uB,UAAA,mBAAAA,WAGAviC,GAAAuiC,SACAA,cAAAvgC,IAEA,IAAAhC,KACAA,GAAAqgD,aAEAjhD,KAAAyE,KAAA,WACAy+B,OAAAqe,MAAA3J,OAAA53C,KAAAwU,MAAA5T,GAAAuiC,YAfA,IAAA1hC,QAAA+S,MACAxU,KAAAwhD,IAAA//C,KAAA0hC,SAAA3uB,MAAA/S,OAEA,OAAAzB,QAkBA,IAKAknD,aAAA,wBAGAC,SAAA,oCACAC,aAAA,2CAGA,SAAAC,mBAAA1jB,KAAAn5B,SACA,OAAA8+B,SAAA3F,KAAA,UACA2F,SAAA,KAAA9+B,QAAA03B,SAAA13B,QAAAA,QAAAikC,WAAA,OAEAvL,OAAAS,MAAAn8B,SAAA,SAAA,IAGAm8B,KAIA,SAAA2jB,cAAA3jB,MAEA,OADAA,KAAAliC,MAAA,OAAAkiC,KAAAhB,aAAA,SAAA,IAAAgB,KAAAliC,KACAkiC,KAEA,SAAA4jB,cAAA5jB,MAOA,MANA,WAAAA,KAAAliC,MAAA,IAAAkF,MAAA,EAAA,GACAg9B,KAAAliC,KAAAkiC,KAAAliC,KAAAkF,MAAA,GAEAg9B,KAAA+G,gBAAA,QAGA/G,KAGA,SAAA6jB,eAAAxjD,IAAAyjD,MACA,IAAAprD,EAAAwP,EAAApK,KAAAimD,SAAAC,SAAAtF,OAEA,GAAA,IAAAoF,KAAAvlB,SAAA,CAKA,GAAA6Z,SAAAD,QAAA93C,OAEAq+C,OADAtG,SAAAlrB,IAAA7sB,KACAq+C,QAKA,IAAA5gD,QAFAs6C,SAAAnE,OAAA6P,KAAA,iBAEApF,OACA,IAAAhmD,EAAA,EAAAwP,EAAAw2C,OAAA5gD,MAAAzE,OAAAX,EAAAwP,EAAAxP,IACA6mC,OAAAqe,MAAAt9C,IAAAwjD,KAAAhmD,KAAA4gD,OAAA5gD,MAAApF,IAOA2/C,SAAAF,QAAA93C,OACA0jD,SAAA1L,SAAAlB,OAAA92C,KACA2jD,SAAAzkB,OAAApkC,OAAA,GAAA4oD,UAEA1L,SAAA1rB,IAAAm3B,KAAAE,YAkBA,SAAAC,SAAAC,WAAAtgD,KAAAkP,SAAA8pC,SAGAh5C,KAAAq6B,KAAAr6B,MAEA,IAAAk5C,SAAA70B,MAAAy0B,QAAAyH,WAAAtmD,KAAAghC,IACAnmC,EAAA,EACAwP,EAAAg8C,WAAA7qD,OACA+qD,SAAAl8C,EAAA,EACArG,MAAA+B,KAAA,GACAygD,gBAAAn8B,WAAArmB,OAGA,GAAAwiD,iBACA,EAAAn8C,GAAA,iBAAArG,QACAy8B,QAAAgd,YAAAkI,SAAArlD,KAAA0D,OACA,OAAAqiD,WAAApjD,KAAA,SAAA4R,OACA,IAAAsN,KAAAkkC,WAAAjkB,GAAAvtB,OACA2xC,kBACAzgD,KAAA,GAAA/B,MAAAzI,KAAAiD,KAAAqW,MAAAsN,KAAAskC,SAEAL,SAAAjkC,KAAApc,KAAAkP,SAAA8pC,WAIA,GAAA10C,IAEA+f,OADA60B,SAAAL,cAAA74C,KAAAsgD,WAAA,GAAA7d,eAAA,EAAA6d,WAAAtH,UACA9R,WAEA,IAAAgS,SAAAjX,WAAAxsC,SACAyjD,SAAA70B,OAIAA,OAAA20B,SAAA,CAOA,IALAuH,YADAzH,QAAAnd,OAAA/xB,IAAAwuC,OAAAc,SAAA,UAAA6G,gBACAtqD,OAKAX,EAAAwP,EAAAxP,IACAmF,KAAAi/C,SAEApkD,IAAA0rD,WACAvmD,KAAA0hC,OAAAiB,MAAA3iC,MAAA,GAAA,GAGAsmD,YAIA5kB,OAAA3+B,MAAA87C,QAAAV,OAAAn+C,KAAA,YAIAiV,SAAA1Z,KAAA8qD,WAAAxrD,GAAAmF,KAAAnF,GAGA,GAAAyrD,WAOA,IANAtlB,IAAA6d,QAAAA,QAAArjD,OAAA,GAAAgtC,cAGA9G,OAAA/xB,IAAAkvC,QAAAkH,eAGAlrD,EAAA,EAAAA,EAAAyrD,WAAAzrD,IACAmF,KAAA6+C,QAAAhkD,GACA0iD,YAAAj9C,KAAAN,KAAAC,MAAA,MACAs6C,SAAAjB,OAAAt5C,KAAA,eACA0hC,OAAAoD,SAAA9D,IAAAhhC,QAEAA,KAAAwC,KAAA,YAAAxC,KAAAC,MAAA,IAAA8qB,cAGA2W,OAAAglB,WAAA1mD,KAAA8gC,UACAY,OAAAglB,SAAA1mD,KAAAwC,IAAA,CACAq+B,MAAA7gC,KAAA6gC,OAAA7gC,KAAAmhC,aAAA,UACAH,KAGAD,QAAA/gC,KAAAgtC,YAAAtpC,QAAAkiD,aAAA,IAAA5lD,KAAAghC,MAQA,OAAAqlB,WAGA,SAAAjQ,OAAAjU,KAAAR,SAAAglB,UAKA,IAJA,IAAA3mD,KACAk/C,MAAAvd,SAAAD,OAAA0J,OAAAzJ,SAAAQ,MAAAA,KACAtnC,EAAA,EAEA,OAAAmF,KAAAk/C,MAAArkD,IAAAA,IACA8rD,UAAA,IAAA3mD,KAAA0gC,UACAgB,OAAAklB,UAAAzI,OAAAn+C,OAGAA,KAAAuhC,aACAolB,UAAA/K,WAAA57C,OACAo+C,cAAAD,OAAAn+C,KAAA,WAEAA,KAAAuhC,WAAAC,YAAAxhC,OAIA,OAAAmiC,KAGAT,OAAApkC,OAAA,CACA6hD,cAAA,SAAAsH,MACA,OAAAA,MAGA9jB,MAAA,SAAAR,KAAA0kB,cAAAC,mBACA,IAAAjsD,EAAAwP,EAAA08C,YAAAC,aApIAxkD,IAAAyjD,KACAne,SAoIAnF,MAAAR,KAAAub,WAAA,GACAuJ,OAAArL,WAAAzZ,MAGA,KAAA1B,QAAAkd,gBAAA,IAAAxb,KAAAzB,UAAA,KAAAyB,KAAAzB,UACAgB,OAAAwR,SAAA/Q,OAMA,IAHA6kB,aAAA7I,OAAAxb,OAGA9nC,EAAA,EAAAwP,GAFA08C,YAAA5I,OAAAhc,OAEA3mC,OAAAX,EAAAwP,EAAAxP,IAhJA2H,IAiJAukD,YAAAlsD,GAjJAorD,KAiJAe,aAAAnsD,QAhJAitC,EAGA,WAHAA,SAAAme,KAAAne,SAAA/c,gBAGAsyB,eAAA/8C,KAAAkC,IAAAvC,MACAgmD,KAAA3W,QAAA9sC,IAAA8sC,QAGA,UAAAxH,UAAA,aAAAA,WACAme,KAAAjT,aAAAxwC,IAAAwwC,cA6IA,GAAA6T,cACA,GAAAC,kBAIA,IAHAC,YAAAA,aAAA5I,OAAAhc,MACA6kB,aAAAA,cAAA7I,OAAAxb,OAEA9nC,EAAA,EAAAwP,EAAA08C,YAAAvrD,OAAAX,EAAAwP,EAAAxP,IACAmrD,eAAAe,YAAAlsD,GAAAmsD,aAAAnsD,SAGAmrD,eAAA7jB,KAAAQ,OAWA,OALA,GADAqkB,aAAA7I,OAAAxb,MAAA,WACAnnC,QACA4iD,cAAA4I,cAAAC,QAAA9I,OAAAhc,KAAA,WAIAQ,OAGAikB,UAAA,SAAA3kB,OAKA,IAJA,IAAA79B,KAAA+9B,KAAAliC,KACAw3C,QAAA/V,OAAAqe,MAAAtI,QACA58C,EAAA,OAEAuG,KAAA+gC,KAAAF,MAAApnC,IAAAA,IACA,GAAAo/C,WAAA9X,MAAA,CACA,GAAA/9B,KAAA+9B,KAAAoY,SAAAxX,SAAA,CACA,GAAA3+B,KAAAy8C,OACA,IAAA5gD,QAAAmE,KAAAy8C,OACApJ,QAAAx3C,MACAyhC,OAAAqe,MAAA3J,OAAAjU,KAAAliC,MAIAyhC,OAAAkgB,YAAAzf,KAAAliC,KAAAmE,KAAA+8C,QAOAhf,KAAAoY,SAAAxX,cAAA3hC,EAEA+gC,KAAAqY,SAAAzX,WAIAZ,KAAAqY,SAAAzX,cAAA3hC,OAOAsgC,OAAAtiC,GAAA9B,OAAA,CACA4pD,OAAA,SAAAvlB,UACA,OAAAyU,OAAA53C,KAAAmjC,UAAA,IAGAyU,OAAA,SAAAzU,UACA,OAAAyU,OAAA53C,KAAAmjC,WAGAre,KAAA,SAAAtf,OACA,OAAAs1C,OAAA96C,KAAA,SAAAwF,OACA,YAAA5C,IAAA4C,MACA09B,OAAApe,KAAA9kB,MACAA,KAAAwE,QAAAC,KAAA,WACA,IAAAzE,KAAAkiC,UAAA,KAAAliC,KAAAkiC,UAAA,IAAAliC,KAAAkiC,WACAliC,KAAAwuC,YAAAhpC,UAGA,KAAAA,MAAAX,UAAA7H,SAGAiW,OAAA,WACA,OAAA20C,SAAA5nD,KAAA6E,UAAA,SAAA8+B,MACA,IAAA3jC,KAAAkiC,UAAA,KAAAliC,KAAAkiC,UAAA,IAAAliC,KAAAkiC,UACAmlB,mBAAArnD,KAAA2jC,MACAb,YAAAa,SAKAx/B,QAAA,WACA,OAAAyjD,SAAA5nD,KAAA6E,UAAA,SAAA8+B,MACA,GAAA,IAAA3jC,KAAAkiC,UAAA,KAAAliC,KAAAkiC,UAAA,IAAAliC,KAAAkiC,SAAA,CACA,IAAAkC,OAAAijB,mBAAArnD,KAAA2jC,MACAS,OAAAukB,aAAAhlB,KAAAS,OAAAqK,gBAKAma,OAAA,WACA,OAAAhB,SAAA5nD,KAAA6E,UAAA,SAAA8+B,MACA3jC,KAAA+iC,YACA/iC,KAAA+iC,WAAA4lB,aAAAhlB,KAAA3jC,SAKA6oD,MAAA,WACA,OAAAjB,SAAA5nD,KAAA6E,UAAA,SAAA8+B,MACA3jC,KAAA+iC,YACA/iC,KAAA+iC,WAAA4lB,aAAAhlB,KAAA3jC,KAAAwrC,gBAKAhnC,MAAA,WAIA,IAHA,IAAAm/B,KACAtnC,EAAA,EAEA,OAAAsnC,KAAA3jC,KAAA3D,IAAAA,IACA,IAAAsnC,KAAAzB,WAGAgB,OAAAklB,UAAAzI,OAAAhc,MAAA,IAGAA,KAAA6K,YAAA,IAIA,OAAAxuC,MAGAmkC,MAAA,SAAAkkB,cAAAC,mBAIA,OAHAD,cAAA,MAAAA,eAAAA,cACAC,kBAAA,MAAAA,kBAAAD,cAAAC,kBAEAtoD,KAAAmR,IAAA,WACA,OAAA+xB,OAAAiB,MAAAnkC,KAAAqoD,cAAAC,sBAIAL,KAAA,SAAAziD,OACA,OAAAs1C,OAAA96C,KAAA,SAAAwF,OACA,IAAAm+B,KAAA3jC,KAAA,IAAA,GACA3D,EAAA,EACAwP,EAAA7L,KAAAhD,OAEA,QAAA4F,IAAA4C,OAAA,IAAAm+B,KAAAzB,SACA,OAAAyB,KAAAsJ,UAIA,GAAA,iBAAAznC,QAAA0hD,aAAAplD,KAAA0D,SACA65C,SAAAP,SAAA/0B,KAAAvkB,QAAA,CAAA,GAAA,KAAA,GAAA+mB,eAAA,CAEA/mB,MAAA09B,OAAAyd,cAAAn7C,OAEA,IACA,KAAAnJ,EAAAwP,EAAAxP,IAIA,KAHAsnC,KAAA3jC,KAAA3D,IAAA,IAGA6lC,WACAgB,OAAAklB,UAAAzI,OAAAhc,MAAA,IACAA,KAAAsJ,UAAAznC,OAIAm+B,KAAA,EAGA,MAAA1nC,KAGA0nC,MACA3jC,KAAAwE,QAAAyO,OAAAzN,QAEA,KAAAA,MAAAX,UAAA7H,SAGA8rD,YAAA,WACA,IAAAvI,QAAA,GAGA,OAAAqH,SAAA5nD,KAAA6E,UAAA,SAAA8+B,MACA,IAAAj1B,OAAA1O,KAAA+iC,WAEAG,OAAA8B,QAAAhlC,KAAAugD,SAAA,IACArd,OAAAklB,UAAAzI,OAAA3/C,OACA0O,QACAA,OAAAq6C,aAAAplB,KAAA3jC,QAKAugD,YAIArd,OAAAz+B,KAAA,CACAukD,SAAA,SACAC,UAAA,UACAN,aAAA,SACAO,YAAA,QACAC,WAAA,eACA,SAAAxoD,KAAAoB,UACAmhC,OAAAtiC,GAAAD,MAAA,SAAAwiC,UAOA,IANA,IAAAM,MACAngC,IAAA,GACA8lD,OAAAlmB,OAAAC,UACAxX,KAAAy9B,OAAApsD,OAAA,EACAX,EAAA,EAEAA,GAAAsvB,KAAAtvB,IACAonC,MAAApnC,IAAAsvB,KAAA3rB,KAAAA,KAAAmkC,OAAA,GACAjB,OAAAkmB,OAAA/sD,IAAA0F,UAAA0hC,OAIAjgC,KAAAgN,MAAAlN,IAAAmgC,MAAA5S,OAGA,OAAA7wB,KAAAwjC,UAAAlgC,QAGA,IAAA+lD,UAAA,IAAA9hB,OAAA,KAAA0V,KAAA,kBAAA,KAEAqM,UAAA,SAAA3lB,MAKA,IAAAgiB,KAAAhiB,KAAAqG,cAAAqC,YAMA,OAJAsZ,MAAAA,KAAA4D,SACA5D,KAAA54B,QAGA44B,KAAA6D,iBAAA7lB,OAGAvP,KAAA,SAAAuP,KAAAlmC,QAAAgZ,UACA,IAAAnT,IAAA3C,KACA8oD,IAAA,GAGA,IAAA9oD,QAAAlD,QACAgsD,IAAA9oD,MAAAgjC,KAAA6Z,MAAA78C,MACAgjC,KAAA6Z,MAAA78C,MAAAlD,QAAAkD,MAMA,IAAAA,QAHA2C,IAAAmT,SAAA1Z,KAAA4mC,MAGAlmC,QACAkmC,KAAA6Z,MAAA78C,MAAA8oD,IAAA9oD,MAGA,OAAA2C,KAIAomD,UAAA,IAAAniB,OAAA4V,UAAAj5C,KAAA,KAAA,KA8HA,SAAAylD,OAAAhmB,KAAAhjC,KAAAipD,UACA,IAAAC,MAAAC,SAAAC,SAAAzmD,IAMAk6C,MAAA7Z,KAAA6Z,MAqCA,OAnCAoM,SAAAA,UAAAN,UAAA3lB,SAQA,MAFArgC,IAAAsmD,SAAAI,iBAAArpD,OAAAipD,SAAAjpD,QAEAy8C,WAAAzZ,QACArgC,IAAA4/B,OAAAsa,MAAA7Z,KAAAhjC,QAQAshC,QAAAgoB,kBAAAZ,UAAAvnD,KAAAwB,MAAAomD,UAAA5nD,KAAAnB,QAGAkpD,MAAArM,MAAAqM,MACAC,SAAAtM,MAAAsM,SACAC,SAAAvM,MAAAuM,SAGAvM,MAAAsM,SAAAtM,MAAAuM,SAAAvM,MAAAqM,MAAAvmD,IACAA,IAAAsmD,SAAAC,MAGArM,MAAAqM,MAAAA,MACArM,MAAAsM,SAAAA,SACAtM,MAAAuM,SAAAA,gBAIAnnD,IAAAU,IAIAA,IAAA,GACAA,IAIA,SAAA4mD,aAAAC,YAAAC,QAGA,MAAA,CACAv5B,IAAA,WACA,IAAAs5B,cASA,OAAAnqD,KAAA6wB,IAAAu5B,QAAA55C,MAAAxQ,KAAA6E,kBALA7E,KAAA6wB,OAxLA,WAIA,SAAAw5B,oBAGA,GAAAzL,IAAA,CAIAv0B,UAAAmzB,MAAA8M,QAAA,+EAEA1L,IAAApB,MAAA8M,QACA,4HAGApe,gBAAApJ,YAAAzY,WAAAyY,YAAA8b,KAEA,IAAA2L,SAAAx9B,OAAAy8B,iBAAA5K,KACA4L,iBAAA,OAAAD,SAAA1zC,IAGA4zC,sBAAA,KAAAC,mBAAAH,SAAAI,YAIA/L,IAAApB,MAAAoN,MAAA,MACAC,kBAAA,KAAAH,mBAAAH,SAAAK,OAIAE,qBAAA,KAAAJ,mBAAAH,SAAAV,OAMAjL,IAAApB,MAAAuN,SAAA,WACAC,iBAAA,KAAAN,mBAAA9L,IAAAqM,YAAA,GAEA/e,gBAAAlJ,YAAA3Y,WAIAu0B,IAAA,MAGA,SAAA8L,mBAAAQ,SACA,OAAAn4B,KAAA8B,MAAAs2B,WAAAD,UAGA,IAAAV,iBAAAM,qBAAAE,iBAAAH,kBACAO,wBAAAX,sBACApgC,UAAAiX,SAAAoB,cAAA,OACAkc,IAAAtd,SAAAoB,cAAA,OAGAkc,IAAApB,QAMAoB,IAAApB,MAAA6N,eAAA,cACAzM,IAAAM,WAAA,GAAA1B,MAAA6N,eAAA,GACAppB,QAAAqpB,gBAAA,gBAAA1M,IAAApB,MAAA6N,eAEAnoB,OAAApkC,OAAAmjC,QAAA,CACAspB,kBAAA,WAEA,OADAlB,oBACAS,sBAEAb,eAAA,WAEA,OADAI,oBACAQ,mBAEAW,cAAA,WAEA,OADAnB,oBACAG,kBAEAiB,mBAAA,WAEA,OADApB,oBACAI,uBAEAiB,cAAA,WAEA,OADArB,oBACAW,kBAQAW,qBAAA,WACA,IAAAjsC,MAAA8/B,GAAAoM,QAAAC,QAoBA,OAnBA,MAAAT,0BACA1rC,MAAA4hB,SAAAoB,cAAA,SACA8c,GAAAle,SAAAoB,cAAA,MACAkpB,QAAAtqB,SAAAoB,cAAA,OAEAhjB,MAAA89B,MAAA8M,QAAA,kCACA9K,GAAAhC,MAAAsO,OAAA,MACAF,QAAApO,MAAAsO,OAAA,MAEA5f,gBACApJ,YAAApjB,OACAojB,YAAA0c,IACA1c,YAAA8oB,SAEAC,QAAA9+B,OAAAy8B,iBAAAhK,IACA4L,wBAAA,EAAA5+B,SAAAq/B,QAAAC,QAEA5f,gBAAAlJ,YAAAtjB,QAEA0rC,4BApHA,GAmMA,IAAAW,YAAA,CAAA,SAAA,MAAA,MACAC,WAAA1qB,SAAAoB,cAAA,OAAA8a,MACAyO,YAAA,GAkBA,SAAAC,cAAAvrD,MACA,IAAAwrD,MAAAjpB,OAAAkpB,SAAAzrD,OAAAsrD,YAAAtrD,MAEA,OAAAwrD,QAGAxrD,QAAAqrD,WACArrD,KAEAsrD,YAAAtrD,MAxBA,SAAAA,MAMA,IAHA,IAAA0rD,QAAA1rD,KAAA,GAAA46C,cAAA56C,KAAAgG,MAAA,GACAtK,EAAA0vD,YAAA/uD,OAEAX,KAEA,IADAsE,KAAAorD,YAAA1vD,GAAAgwD,WACAL,WACA,OAAArrD,KAeA2rD,CAAA3rD,OAAAA,MAIA,IAKA4rD,aAAA,4BACAC,YAAA,MACAC,QAAA,CAAA1B,SAAA,WAAA2B,WAAA,SAAAjP,QAAA,SACAkP,mBAAA,CACAC,cAAA,IACAC,WAAA,OAGA,SAAAC,kBAAA/oB,MAAAv+B,MAAAunD,UAIA,IAAAtmC,QAAAy2B,QAAAnzB,KAAAvkB,OACA,OAAAihB,QAGAsM,KAAAi6B,IAAA,EAAAvmC,QAAA,IAAAsmC,UAAA,KAAAtmC,QAAA,IAAA,MACAjhB,MAGA,SAAAynD,mBAAAtpB,KAAAupB,UAAAC,IAAAC,YAAAC,OAAAC,aACA,IAAAjxD,EAAA,UAAA6wD,UAAA,EAAA,EACAK,MAAA,EACAC,MAAA,EAGA,GAAAL,OAAAC,YAAA,SAAA,WACA,OAAA,EAGA,KAAA/wD,EAAA,EAAAA,GAAA,EAGA,WAAA8wD,MACAK,OAAAtqB,OAAAwa,IAAA/Z,KAAAwpB,IAAAhQ,UAAA9gD,IAAA,EAAAgxD,SAIAD,aAmBA,YAAAD,MACAK,OAAAtqB,OAAAwa,IAAA/Z,KAAA,UAAAwZ,UAAA9gD,IAAA,EAAAgxD,SAIA,WAAAF,MACAK,OAAAtqB,OAAAwa,IAAA/Z,KAAA,SAAAwZ,UAAA9gD,GAAA,SAAA,EAAAgxD,WAtBAG,OAAAtqB,OAAAwa,IAAA/Z,KAAA,UAAAwZ,UAAA9gD,IAAA,EAAAgxD,QAGA,YAAAF,IACAK,OAAAtqB,OAAAwa,IAAA/Z,KAAA,SAAAwZ,UAAA9gD,GAAA,SAAA,EAAAgxD,QAIAE,OAAArqB,OAAAwa,IAAA/Z,KAAA,SAAAwZ,UAAA9gD,GAAA,SAAA,EAAAgxD,SAoCA,OAhBAD,aAAA,GAAAE,cAIAE,OAAAz6B,KAAAi6B,IAAA,EAAAj6B,KAAA06B,KACA9pB,KAAA,SAAAupB,UAAA,GAAA3R,cAAA2R,UAAAvmD,MAAA,IACA2mD,YACAE,MACAD,MACA,MAIA,GAGAC,MAGA,SAAAE,iBAAA/pB,KAAAupB,UAAAK,OAGA,IAAAF,OAAA/D,UAAA3lB,MAKAypB,cADAnrB,QAAAspB,qBAAAgC,QAEA,eAAArqB,OAAAwa,IAAA/Z,KAAA,aAAA,EAAA0pB,QACAM,iBAAAP,YAEAhhD,IAAAu9C,OAAAhmB,KAAAupB,UAAAG,QACAO,WAAA,SAAAV,UAAA,GAAA3R,cAAA2R,UAAAvmD,MAAA,GAIA,GAAA0iD,UAAAvnD,KAAAsK,KAAA,CACA,IAAAmhD,MACA,OAAAnhD,IAEAA,IAAA,OAyCA,QAlCA61B,QAAAspB,qBAAA6B,cAMAnrB,QAAA0pB,wBAAAriB,SAAA3F,KAAA,OAIA,SAAAv3B,MAIA++C,WAAA/+C,MAAA,WAAA82B,OAAAwa,IAAA/Z,KAAA,WAAA,EAAA0pB,UAGA1pB,KAAAkqB,iBAAA7wD,SAEAowD,YAAA,eAAAlqB,OAAAwa,IAAA/Z,KAAA,aAAA,EAAA0pB,SAKAM,iBAAAC,cAAAjqB,QAEAv3B,IAAAu3B,KAAAiqB,eAKAxhD,IAAA++C,WAAA/+C,MAAA,GAIA6gD,mBACAtpB,KACAupB,UACAK,QAAAH,YAAA,SAAA,WACAO,iBACAN,OAGAjhD,KAEA,KA+SA,SAAA0hD,MAAAnqB,KAAAlmC,QAAAo+C,KAAAlvC,IAAAohD,QACA,OAAA,IAAAD,MAAAztD,UAAA+iC,KAAAO,KAAAlmC,QAAAo+C,KAAAlvC,IAAAohD,QA7SA7qB,OAAApkC,OAAA,CAIAkvD,SAAA,CACAC,QAAA,CACAp9B,IAAA,SAAA8S,KAAAimB,UACA,GAAAA,SAAA,CAGA,IAAAtmD,IAAAqmD,OAAAhmB,KAAA,WACA,MAAA,KAAArgC,IAAA,IAAAA,QAOA86C,UAAA,CACA8P,yBAAA,EACAC,aAAA,EACAC,aAAA,EACAC,UAAA,EACAC,YAAA,EACAzB,YAAA,EACA0B,UAAA,EACAC,YAAA,EACAC,eAAA,EACAC,iBAAA,EACAC,SAAA,EACAC,YAAA,EACAC,cAAA,EACAC,YAAA,EACAb,SAAA,EACAc,OAAA,EACAC,SAAA,EACAC,QAAA,EACAC,QAAA,EACAC,MAAA,GAKA/C,SAAA,GAGA5O,MAAA,SAAA7Z,KAAAhjC,KAAA6E,MAAA+nD,OAGA,GAAA5pB,MAAA,IAAAA,KAAAzB,UAAA,IAAAyB,KAAAzB,UAAAyB,KAAA6Z,MAAA,CAKA,IAAAl6C,IAAA7B,KAAAi7C,MACA0S,SAAA5T,UAAA76C,MACA0uD,aAAA7C,YAAA1qD,KAAAnB,MACA68C,MAAA7Z,KAAA6Z,MAaA,GARA6R,eACA1uD,KAAAurD,cAAAkD,WAIA1S,MAAAxZ,OAAA8qB,SAAArtD,OAAAuiC,OAAA8qB,SAAAoB,eAGAxsD,IAAA4C,MA0CA,OAAAk3C,OAAA,QAAAA,YACA95C,KAAAU,IAAAo5C,MAAA7rB,IAAA8S,MAAA,EAAA4pB,QAEAjqD,IAIAk6C,MAAA78C,MA7CA,YAHAc,YAAA+D,SAGAlC,IAAA45C,QAAAnzB,KAAAvkB,SAAAlC,IAAA,KACAkC,MAAAm4C,UAAAha,KAAAhjC,KAAA2C,KAGA7B,KAAA,UAIA,MAAA+D,OAAAA,OAAAA,QAOA,WAAA/D,MAAA4tD,eACA7pD,OAAAlC,KAAAA,IAAA,KAAA4/B,OAAAkb,UAAAgR,UAAA,GAAA,OAIAntB,QAAAqpB,iBAAA,KAAA9lD,OAAA,IAAA7E,KAAA6L,QAAA,gBACAgxC,MAAA78C,MAAA,WAIA+7C,OAAA,QAAAA,YACA95C,KAAA4C,MAAAk3C,MAAApsB,IAAAqT,KAAAn+B,MAAA+nD,UAEA8B,aACA7R,MAAA8R,YAAA3uD,KAAA6E,OAEAg4C,MAAA78C,MAAA6E,UAkBAk4C,IAAA,SAAA/Z,KAAAhjC,KAAA4sD,MAAAF,QACA,IAAAjhD,IAAAm3B,IAAAmZ,MACA0S,SAAA5T,UAAA76C,MA6BA,OA5BA6rD,YAAA1qD,KAAAnB,QAMAA,KAAAurD,cAAAkD,YAIA1S,MAAAxZ,OAAA8qB,SAAArtD,OAAAuiC,OAAA8qB,SAAAoB,YAGA,QAAA1S,QACAtwC,IAAAswC,MAAA7rB,IAAA8S,MAAA,EAAA4pB,aAIA3qD,IAAAwJ,MACAA,IAAAu9C,OAAAhmB,KAAAhjC,KAAA0sD,SAIA,WAAAjhD,KAAAzL,QAAAgsD,qBACAvgD,IAAAugD,mBAAAhsD,OAIA,KAAA4sD,OAAAA,OACAhqB,IAAA4nB,WAAA/+C,MACA,IAAAmhD,OAAAgC,SAAAhsB,KAAAA,KAAA,EAAAn3B,KAGAA,OAIA82B,OAAAz+B,KAAA,CAAA,SAAA,SAAA,SAAA8gC,GAAA2nB,WACAhqB,OAAA8qB,SAAAd,WAAA,CACAr8B,IAAA,SAAA8S,KAAAimB,SAAA2D,OACA,GAAA3D,SAIA,OAAA2C,aAAAzqD,KAAAohC,OAAAwa,IAAA/Z,KAAA,aAQAA,KAAAkqB,iBAAA7wD,QAAA2mC,KAAA6rB,wBAAA3F,MAIA6D,iBAAA/pB,KAAAupB,UAAAK,OAHAn5B,KAAAuP,KAAA8oB,QAAA,WACA,OAAAiB,iBAAA/pB,KAAAupB,UAAAK,UAMAj9B,IAAA,SAAAqT,KAAAn+B,MAAA+nD,OACA,IAAA9mC,QACA4mC,OAAA/D,UAAA3lB,MAIA8rB,oBAAAxtB,QAAAypB,iBACA,aAAA2B,OAAAtC,SAIAqC,aADAqC,oBAAAlC,QAEA,eAAArqB,OAAAwa,IAAA/Z,KAAA,aAAA,EAAA0pB,QACAN,SAAAQ,MACAN,mBACAtpB,KACAupB,UACAK,MACAH,YACAC,QAEA,EAqBA,OAjBAD,aAAAqC,qBACA1C,UAAAh6B,KAAA06B,KACA9pB,KAAA,SAAAupB,UAAA,GAAA3R,cAAA2R,UAAAvmD,MAAA,IACAwkD,WAAAkC,OAAAH,YACAD,mBAAAtpB,KAAAupB,UAAA,UAAA,EAAAG,QACA,KAKAN,WAAAtmC,QAAAy2B,QAAAnzB,KAAAvkB,SACA,QAAAihB,QAAA,IAAA,QAEAkd,KAAA6Z,MAAA0P,WAAA1nD,MACAA,MAAA09B,OAAAwa,IAAA/Z,KAAAupB,YAGAJ,kBAAAnpB,EAAAn+B,MAAAunD,cAKA7pB,OAAA8qB,SAAArD,WAAAT,aAAAjoB,QAAAwpB,mBACA,SAAA9nB,KAAAimB,UACA,GAAAA,SACA,OAAAuB,WAAAxB,OAAAhmB,KAAA,gBACAA,KAAA6rB,wBAAAE,KACAt7B,KAAAuP,KAAA,CAAAgnB,WAAA,GAAA,WACA,OAAAhnB,KAAA6rB,wBAAAE,QAEA,OAMAxsB,OAAAz+B,KAAA,CACAkrD,OAAA,GACAjoC,QAAA,GACAkoC,OAAA,SACA,SAAAl5C,OAAAm5C,QACA3sB,OAAA8qB,SAAAt3C,OAAAm5C,QAAA,CACAC,OAAA,SAAAtqD,OAOA,IANA,IAAAnJ,EAAA,EACA0zD,SAAA,GAGA9tD,MAAA,iBAAAuD,MAAAA,MAAAiS,MAAA,KAAA,CAAAjS,OAEAnJ,EAAA,EAAAA,IACA0zD,SAAAr5C,OAAAymC,UAAA9gD,GAAAwzD,QACA5tD,MAAA5F,IAAA4F,MAAA5F,EAAA,IAAA4F,MAAA,GAGA,OAAA8tD,WAIA,WAAAr5C,SACAwsB,OAAA8qB,SAAAt3C,OAAAm5C,QAAAv/B,IAAAw8B,qBAIA5pB,OAAAtiC,GAAA9B,OAAA,CACA4+C,IAAA,SAAA/8C,KAAA6E,OACA,OAAAs1C,OAAA96C,KAAA,SAAA2jC,KAAAhjC,KAAA6E,OACA,IAAA6nD,OAAA9pD,IACA4N,IAAA,GACA9U,EAAA,EAEA,GAAA2oB,MAAA3hB,QAAA1C,MAAA,CAIA,IAHA0sD,OAAA/D,UAAA3lB,MACApgC,IAAA5C,KAAA3D,OAEAX,EAAAkH,IAAAlH,IACA8U,IAAAxQ,KAAAtE,IAAA6mC,OAAAwa,IAAA/Z,KAAAhjC,KAAAtE,IAAA,EAAAgxD,QAGA,OAAAl8C,IAGA,YAAAvO,IAAA4C,MACA09B,OAAAsa,MAAA7Z,KAAAhjC,KAAA6E,OACA09B,OAAAwa,IAAA/Z,KAAAhjC,OACAA,KAAA6E,MAAA,EAAAX,UAAA7H,aAQAkmC,OAAA4qB,MAAAA,OAEAztD,UAAA,CACAC,YAAAwtD,MACA1qB,KAAA,SAAAO,KAAAlmC,QAAAo+C,KAAAlvC,IAAAohD,OAAA5P,MACAn+C,KAAA2jC,KAAAA,KACA3jC,KAAA67C,KAAAA,KACA77C,KAAA+tD,OAAAA,QAAA7qB,OAAA6qB,OAAArO,SACA1/C,KAAAvC,QAAAA,QACAuC,KAAA4E,MAAA5E,KAAA8kD,IAAA9kD,KAAAqrC,MACArrC,KAAA2M,IAAAA,IACA3M,KAAAm+C,KAAAA,OAAAjb,OAAAkb,UAAAvC,MAAA,GAAA,OAEAxQ,IAAA,WACA,IAAAqR,MAAAoR,MAAAkC,UAAAhwD,KAAA67C,MAEA,OAAAa,OAAAA,MAAA7rB,IACA6rB,MAAA7rB,IAAA7wB,MACA8tD,MAAAkC,UAAAtQ,SAAA7uB,IAAA7wB,OAEAiwD,IAAA,SAAAC,SACA,IAAAC,MACAzT,MAAAoR,MAAAkC,UAAAhwD,KAAA67C,MAoBA,OAlBA77C,KAAAvC,QAAA2yD,SACApwD,KAAAqwD,IAAAF,MAAAjtB,OAAA6qB,OAAA/tD,KAAA+tD,QACAmC,QAAAlwD,KAAAvC,QAAA2yD,SAAAF,QAAA,EAAA,EAAAlwD,KAAAvC,QAAA2yD,UAGApwD,KAAAqwD,IAAAF,MAAAD,QAEAlwD,KAAA8kD,KAAA9kD,KAAA2M,IAAA3M,KAAA4E,OAAAurD,MAAAnwD,KAAA4E,MAEA5E,KAAAvC,QAAA6yD,MACAtwD,KAAAvC,QAAA6yD,KAAAvzD,KAAAiD,KAAA2jC,KAAA3jC,KAAA8kD,IAAA9kD,MAGA08C,OAAAA,MAAApsB,IACAosB,MAAApsB,IAAAtwB,MAEA8tD,MAAAkC,UAAAtQ,SAAApvB,IAAAtwB,MAEAA,QAIAojC,KAAA/iC,UAAAytD,MAAAztD,WAEAytD,MAAAkC,UAAA,CACAtQ,SAAA,CACA7uB,IAAA,SAAAgtB,OACA,IAAAt1C,OAIA,OAAA,IAAAs1C,MAAAla,KAAAzB,UACA,MAAA2b,MAAAla,KAAAka,MAAAhC,OAAA,MAAAgC,MAAAla,KAAA6Z,MAAAK,MAAAhC,MACAgC,MAAAla,KAAAka,MAAAhC,OAOAtzC,OAAA26B,OAAAwa,IAAAG,MAAAla,KAAAka,MAAAhC,KAAA,MAGA,SAAAtzC,OAAAA,OAAA,GAEA+nB,IAAA,SAAAutB,OAKA3a,OAAAqtB,GAAAD,KAAAzS,MAAAhC,MACA3Y,OAAAqtB,GAAAD,KAAAzS,MAAAhC,MAAAgC,OACA,IAAAA,MAAAla,KAAAzB,WACAgB,OAAA8qB,SAAAnQ,MAAAhC,OACA,MAAAgC,MAAAla,KAAA6Z,MAAA0O,cAAArO,MAAAhC,OAGAgC,MAAAla,KAAAka,MAAAhC,MAAAgC,MAAAiH,IAFA5hB,OAAAsa,MAAAK,MAAAla,KAAAka,MAAAhC,KAAAgC,MAAAiH,IAAAjH,MAAAM,UAUAqS,UAAA1C,MAAAkC,UAAAS,WAAA,CACAngC,IAAA,SAAAutB,OACAA,MAAAla,KAAAzB,UAAA2b,MAAAla,KAAAZ,aACA8a,MAAAla,KAAAka,MAAAhC,MAAAgC,MAAAiH,OAKA5hB,OAAA6qB,OAAA,CACA2C,OAAA,SAAA7zD,GACA,OAAAA,GAEA8zD,MAAA,SAAA9zD,GACA,MAAA,GAAAk2B,KAAA69B,IAAA/zD,EAAAk2B,KAAA89B,IAAA,GAEAnR,SAAA,SAGAxc,OAAAqtB,GAAAzC,MAAAztD,UAAA+iC,KAGAF,OAAAqtB,GAAAD,KAAA,GAKA,IACAQ,MAAAC,WACAC,SAAA,yBACAC,KAAA,cAEA,SAAAC,WACAH,cACA,IAAAzvB,SAAA6vB,QAAApkC,OAAAqkC,sBACArkC,OAAAqkC,sBAAAF,UAEAnkC,OAAA4sB,WAAAuX,SAAAhuB,OAAAqtB,GAAAc,UAGAnuB,OAAAqtB,GAAAe,QAKA,SAAAC,cAIA,OAHAxkC,OAAA4sB,WAAA,WACAmX,WAAAluD,IAEAkuD,MAAAvqB,KAAAue,MAIA,SAAA0M,MAAA/vD,KAAAgwD,cACA,IAAA/K,MACArqD,EAAA,EACA4uC,MAAA,CAAA6gB,OAAArqD,MAKA,IADAgwD,aAAAA,aAAA,EAAA,EACAp1D,EAAA,EAAAA,GAAA,EAAAo1D,aAEAxmB,MAAA,UADAyb,MAAAvJ,UAAA9gD,KACA4uC,MAAA,UAAAyb,OAAAjlD,KAOA,OAJAgwD,eACAxmB,MAAAgjB,QAAAhjB,MAAA4e,MAAApoD,MAGAwpC,MAGA,SAAAymB,YAAAlsD,MAAAq2C,KAAA8V,WAKA,IAJA,IAAA9T,MACAgK,YAAA+J,UAAAC,SAAAhW,OAAA,IAAArqC,OAAAogD,UAAAC,SAAA,MACAx7C,MAAA,EACArZ,OAAA6qD,WAAA7qD,OACAqZ,MAAArZ,OAAAqZ,QACA,GAAAwnC,MAAAgK,WAAAxxC,OAAAtZ,KAAA40D,UAAA9V,KAAAr2C,OAGA,OAAAq4C,MAsNA,SAAA+T,UAAAjuB,KAAAmuB,WAAAr0D,SACA,IAAA8K,OACAwpD,QACA17C,MAAA,EACArZ,OAAA40D,UAAAI,WAAAh1D,OACAo7C,SAAAlV,OAAA8U,WAAAG,OAAA,kBAGAmZ,KAAA3tB,OAEA2tB,KAAA,WACA,GAAAS,QACA,OAAA,EAYA,IAVA,IAAAE,YAAAnB,OAAAS,cACAxX,UAAAhnB,KAAAi6B,IAAA,EAAA2E,UAAAO,UAAAP,UAAAvB,SAAA6B,aAKA/B,QAAA,GADAnW,UAAA4X,UAAAvB,UAAA,GAEA/5C,MAAA,EACArZ,OAAA20D,UAAAQ,OAAAn1D,OAEAqZ,MAAArZ,OAAAqZ,QACAs7C,UAAAQ,OAAA97C,OAAA45C,IAAAC,SAMA,OAHA9X,SAAAgB,WAAAzV,KAAA,CAAAguB,UAAAzB,QAAAnW,YAGAmW,QAAA,GAAAlzD,OACA+8C,WAIA/8C,QACAo7C,SAAAgB,WAAAzV,KAAA,CAAAguB,UAAA,EAAA,IAIAvZ,SAAAiB,YAAA1V,KAAA,CAAAguB,aACA,IAEAA,UAAAvZ,SAAAxB,QAAA,CACAjT,KAAAA,KACAvZ,MAAA8Y,OAAApkC,OAAA,GAAAgzD,YACAM,KAAAlvB,OAAApkC,QAAA,EAAA,CACAuzD,cAAA,GACAtE,OAAA7qB,OAAA6qB,OAAArO,UACAjiD,SACA60D,mBAAAR,WACAS,gBAAA90D,QACAy0D,UAAApB,OAAAS,cACAnB,SAAA3yD,QAAA2yD,SACA+B,OAAA,GACAT,YAAA,SAAA7V,KAAAlvC,KACA,IAAAkxC,MAAA3a,OAAA4qB,MAAAnqB,KAAAguB,UAAAS,KAAAvW,KAAAlvC,IACAglD,UAAAS,KAAAC,cAAAxW,OAAA8V,UAAAS,KAAArE,QAEA,OADA4D,UAAAQ,OAAA3uD,KAAAq6C,OACAA,OAEAjB,KAAA,SAAA4V,SACA,IAAAn8C,MAAA,EAIArZ,OAAAw1D,QAAAb,UAAAQ,OAAAn1D,OAAA,EACA,GAAA+0D,QACA,OAAA/xD,KAGA,IADA+xD,SAAA,EACA17C,MAAArZ,OAAAqZ,QACAs7C,UAAAQ,OAAA97C,OAAA45C,IAAA,GAUA,OANAuC,SACApa,SAAAgB,WAAAzV,KAAA,CAAAguB,UAAA,EAAA,IACAvZ,SAAAiB,YAAA1V,KAAA,CAAAguB,UAAAa,WAEApa,SAAAqB,WAAA9V,KAAA,CAAAguB,UAAAa,UAEAxyD,QAGAoqB,MAAAunC,UAAAvnC,MAIA,KA/HA,SAAAA,MAAAioC,eACA,IAAAh8C,MAAA1V,KAAAotD,OAAAvoD,MAAAk3C,MAGA,IAAArmC,SAAA+T,MAeA,GAbA2jC,OAAAsE,cADA1xD,KAAA66C,UAAAnlC,QAEA7Q,MAAA4kB,MAAA/T,OACA2O,MAAA3hB,QAAAmC,SACAuoD,OAAAvoD,MAAA,GACAA,MAAA4kB,MAAA/T,OAAA7Q,MAAA,IAGA6Q,QAAA1V,OACAypB,MAAAzpB,MAAA6E,aACA4kB,MAAA/T,SAGAqmC,MAAAxZ,OAAA8qB,SAAArtD,QACA,WAAA+7C,MAMA,IAAArmC,SALA7Q,MAAAk3C,MAAAoT,OAAAtqD,cACA4kB,MAAAzpB,MAIA6E,MACA6Q,SAAA+T,QACAA,MAAA/T,OAAA7Q,MAAA6Q,OACAg8C,cAAAh8C,OAAA03C,aAIAsE,cAAA1xD,MAAAotD,OA6FA0E,CAAAroC,MAAAunC,UAAAS,KAAAC,eAEAh8C,MAAArZ,OAAAqZ,QAEA,GADA9N,OAAAqpD,UAAAI,WAAA37C,OAAAtZ,KAAA40D,UAAAhuB,KAAAvZ,MAAAunC,UAAAS,MAMA,OAJAvmC,WAAAtjB,OAAAq0C,QACA1Z,OAAAyZ,YAAAgV,UAAAhuB,KAAAguB,UAAAS,KAAA7a,OAAAqF,KACAr0C,OAAAq0C,KAAA8V,KAAAnqD,SAEAA,OAyBA,OArBA26B,OAAA/xB,IAAAiZ,MAAAsnC,YAAAC,WAEA9lC,WAAA8lC,UAAAS,KAAAxtD,QACA+sD,UAAAS,KAAAxtD,MAAA7H,KAAA4mC,KAAAguB,WAIAA,UACAhZ,SAAAgZ,UAAAS,KAAAzZ,UACAtzB,KAAAssC,UAAAS,KAAA/sC,KAAAssC,UAAAS,KAAAO,UACA9b,KAAA8a,UAAAS,KAAAvb,MACAsB,OAAAwZ,UAAAS,KAAAja,QAEAjV,OAAAqtB,GAAAqC,MACA1vB,OAAApkC,OAAAwyD,KAAA,CACA3tB,KAAAA,KACAkvB,KAAAlB,UACApa,MAAAoa,UAAAS,KAAA7a,SAIAoa,UAGAzuB,OAAA0uB,UAAA1uB,OAAApkC,OAAA8yD,UAAA,CAEAC,SAAA,CACAiB,IAAA,CAAA,SAAAjX,KAAAr2C,OACA,IAAAq4C,MAAA79C,KAAA0xD,YAAA7V,KAAAr2C,OAEA,OADAm4C,UAAAE,MAAAla,KAAAkY,KAAAqB,QAAAnzB,KAAAvkB,OAAAq4C,OACAA,SAIAkV,QAAA,SAAA3oC,MAAA3T,UAYA,IAJA,IAAAolC,KACAxlC,MAAA,EACArZ,QAPAotB,MAFAyB,WAAAzB,QACA3T,SAAA2T,MACA,CAAA,MAEAA,MAAArF,MAAAoxB,gBAKAn5C,OAEAqZ,MAAArZ,OAAAqZ,QACAwlC,KAAAzxB,MAAA/T,OACAu7C,UAAAC,SAAAhW,MAAA+V,UAAAC,SAAAhW,OAAA,GACA+V,UAAAC,SAAAhW,MAAAv3C,QAAAmS,WAIAu7C,WAAA,CA3WA,SAAAruB,KAAAvZ,MAAAgoC,MACA,IAAAvW,KAAAr2C,MAAAm5C,OAAAjC,MAAAsW,QAAAC,UAAAC,eAAAzV,QACA0V,MAAA,UAAA/oC,OAAA,WAAAA,MACAyoC,KAAA7yD,KACAgnD,KAAA,GACAxJ,MAAA7Z,KAAA6Z,MACA2T,OAAAxtB,KAAAzB,UAAAqb,mBAAA5Z,MACAyvB,SAAArX,SAAAlrB,IAAA8S,KAAA,UA6BA,IAAAkY,QA1BAuW,KAAA7a,QAEA,OADAmF,MAAAxZ,OAAAyZ,YAAAhZ,KAAA,OACA0vB,WACA3W,MAAA2W,SAAA,EACAL,QAAAtW,MAAAl4C,MAAAizC,KACAiF,MAAAl4C,MAAAizC,KAAA,WACAiF,MAAA2W,UACAL,YAIAtW,MAAA2W,WAEAR,KAAA1a,OAAA,WAGA0a,KAAA1a,OAAA,WACAuE,MAAA2W,WACAnwB,OAAAqU,MAAA5T,KAAA,MAAA3mC,QACA0/C,MAAAl4C,MAAAizC,YAOArtB,MAEA,GADA5kB,MAAA4kB,MAAAyxB,MACAmV,SAAAlvD,KAAA0D,OAAA,CAGA,UAFA4kB,MAAAyxB,MACA8C,OAAAA,QAAA,WAAAn5C,MACAA,SAAA2rD,OAAA,OAAA,QAAA,CAIA,GAAA,SAAA3rD,QAAA4tD,eAAAxwD,IAAAwwD,SAAAvX,MAKA,SAJAsV,QAAA,EAOAnK,KAAAnL,MAAAuX,UAAAA,SAAAvX,OAAA3Y,OAAAsa,MAAA7Z,KAAAkY,MAMA,IADAoX,WAAA/vB,OAAA0B,cAAAxa,UACA8Y,OAAA0B,cAAAoiB,MA8DA,IAAAnL,QAzDAsX,OAAA,IAAAxvB,KAAAzB,WAMAkwB,KAAAkB,SAAA,CAAA9V,MAAA8V,SAAA9V,MAAA+V,UAAA/V,MAAAgW,WAIA,OADAN,eAAAE,UAAAA,SAAA3V,WAEAyV,eAAAnX,SAAAlrB,IAAA8S,KAAA,YAGA,UADA8Z,QAAAva,OAAAwa,IAAA/Z,KAAA,cAEAuvB,eACAzV,QAAAyV,gBAIA1U,SAAA,CAAA7a,OAAA,GACAuvB,eAAAvvB,KAAA6Z,MAAAC,SAAAyV,eACAzV,QAAAva,OAAAwa,IAAA/Z,KAAA,WACA6a,SAAA,CAAA7a,UAKA,WAAA8Z,SAAA,iBAAAA,SAAA,MAAAyV,iBACA,SAAAhwB,OAAAwa,IAAA/Z,KAAA,WAGAsvB,YACAJ,KAAAxtC,KAAA,WACAm4B,MAAAC,QAAAyV,iBAEA,MAAAA,iBACAzV,QAAAD,MAAAC,QACAyV,eAAA,SAAAzV,QAAA,GAAAA,UAGAD,MAAAC,QAAA,iBAKA2U,KAAAkB,WACA9V,MAAA8V,SAAA,SACAT,KAAA1a,OAAA,WACAqF,MAAA8V,SAAAlB,KAAAkB,SAAA,GACA9V,MAAA+V,UAAAnB,KAAAkB,SAAA,GACA9V,MAAAgW,UAAApB,KAAAkB,SAAA,MAKAL,WAAA,EACAjM,KAGAiM,YACAG,SACA,WAAAA,WACAjC,OAAAiC,SAAAjC,QAGAiC,SAAArX,SAAAjB,OAAAnX,KAAA,SAAA,CAAA8Z,QAAAyV,iBAIAvU,SACAyU,SAAAjC,QAAAA,QAIAA,QACA3S,SAAA,CAAA7a,OAAA,GAKAkvB,KAAAxtC,KAAA,WASA,IAAAw2B,QAJAsV,QACA3S,SAAA,CAAA7a,OAEAoY,SAAAnE,OAAAjU,KAAA,UACAqjB,KACA9jB,OAAAsa,MAAA7Z,KAAAkY,KAAAmL,KAAAnL,UAMAoX,UAAAvB,YAAAP,OAAAiC,SAAAvX,MAAA,EAAAA,KAAAgX,MACAhX,QAAAuX,WACAA,SAAAvX,MAAAoX,UAAAruD,MACAusD,SACA8B,UAAAtmD,IAAAsmD,UAAAruD,MACAquD,UAAAruD,MAAA,MAuMA6uD,UAAA,SAAAh9C,SAAAtS,SACAA,QACAytD,UAAAI,WAAA1tD,QAAAmS,UAEAm7C,UAAAI,WAAAxuD,KAAAiT,aAKAysB,OAAAwwB,MAAA,SAAAA,MAAA3F,OAAAntD,IACA,IAAA+yD,IAAAD,OAAA,iBAAAA,MAAAxwB,OAAApkC,OAAA,GAAA40D,OAAA,CACAf,SAAA/xD,KAAAA,IAAAmtD,QACAliC,WAAA6nC,QAAAA,MACAtD,SAAAsD,MACA3F,OAAAntD,IAAAmtD,QAAAA,SAAAliC,WAAAkiC,SAAAA,QAoCA,OAhCA7qB,OAAAqtB,GAAA/O,IACAmS,IAAAvD,SAAA,EAGA,iBAAAuD,IAAAvD,WACAuD,IAAAvD,YAAAltB,OAAAqtB,GAAAqD,OACAD,IAAAvD,SAAAltB,OAAAqtB,GAAAqD,OAAAD,IAAAvD,UAGAuD,IAAAvD,SAAAltB,OAAAqtB,GAAAqD,OAAAlU,UAMA,MAAAiU,IAAApc,QAAA,IAAAoc,IAAApc,QACAoc,IAAApc,MAAA,MAIAoc,IAAAlK,IAAAkK,IAAAhB,SAEAgB,IAAAhB,SAAA,WACA9mC,WAAA8nC,IAAAlK,MACAkK,IAAAlK,IAAA1sD,KAAAiD,MAGA2zD,IAAApc,OACArU,OAAAsZ,QAAAx8C,KAAA2zD,IAAApc,QAIAoc,KAGAzwB,OAAAtiC,GAAA9B,OAAA,CACA+0D,OAAA,SAAAH,MAAAI,GAAA/F,OAAAt3C,UAGA,OAAAzW,KAAA4sC,OAAA2Q,oBAAAG,IAAA,UAAA,GAAAe,OAGA9xC,MAAAonD,QAAA,CAAA9F,QAAA6F,IAAAJ,MAAA3F,OAAAt3C,WAEAs9C,QAAA,SAAAlY,KAAA6X,MAAA3F,OAAAt3C,UACA,IAAAjS,MAAA0+B,OAAA0B,cAAAiX,MACAmY,OAAA9wB,OAAAwwB,MAAAA,MAAA3F,OAAAt3C,UACAw9C,YAAA,WAGA,IAAApB,KAAAjB,UAAA5xD,KAAAkjC,OAAApkC,OAAA,GAAA+8C,MAAAmY,SAGAxvD,OAAAu3C,SAAAlrB,IAAA7wB,KAAA,YACA6yD,KAAAjW,MAAA,IAKA,OAFAqX,YAAAC,OAAAD,YAEAzvD,QAAA,IAAAwvD,OAAAzc,MACAv3C,KAAAyE,KAAAwvD,aACAj0D,KAAAu3C,MAAAyc,OAAAzc,MAAA0c,cAEArX,KAAA,SAAAn7C,KAAAq7C,WAAA0V,SACA,IAAA2B,UAAA,SAAAzX,OACA,IAAAE,KAAAF,MAAAE,YACAF,MAAAE,KACAA,KAAA4V,UAYA,MATA,iBAAA/wD,OACA+wD,QAAA1V,WACAA,WAAAr7C,KACAA,UAAAmB,GAEAk6C,YACA98C,KAAAu3C,MAAA91C,MAAA,KAAA,IAGAzB,KAAAyE,KAAA,WACA,IAAA+3C,SAAA,EACAnmC,MAAA,MAAA5U,MAAAA,KAAA,aACA2yD,OAAAlxB,OAAAkxB,OACAxuD,KAAAm2C,SAAAlrB,IAAA7wB,MAEA,GAAAqW,MACAzQ,KAAAyQ,QAAAzQ,KAAAyQ,OAAAumC,MACAuX,UAAAvuD,KAAAyQ,aAGA,IAAAA,SAAAzQ,KACAA,KAAAyQ,QAAAzQ,KAAAyQ,OAAAumC,MAAAqU,KAAAnvD,KAAAuU,QACA89C,UAAAvuD,KAAAyQ,QAKA,IAAAA,MAAA+9C,OAAAp3D,OAAAqZ,SACA+9C,OAAA/9C,OAAAstB,OAAA3jC,MACA,MAAAyB,MAAA2yD,OAAA/9C,OAAAkhC,QAAA91C,OAEA2yD,OAAA/9C,OAAAw8C,KAAAjW,KAAA4V,SACAhW,SAAA,EACA4X,OAAA5hD,OAAA6D,MAAA,KAOAmmC,SAAAgW,SACAtvB,OAAAsZ,QAAAx8C,KAAAyB,SAIAyyD,OAAA,SAAAzyD,MAIA,OAHA,IAAAA,OACAA,KAAAA,MAAA,MAEAzB,KAAAyE,KAAA,WACA,IAAA4R,MACAzQ,KAAAm2C,SAAAlrB,IAAA7wB,MACAu3C,MAAA3xC,KAAAnE,KAAA,SACAi7C,MAAA92C,KAAAnE,KAAA,cACA2yD,OAAAlxB,OAAAkxB,OACAp3D,OAAAu6C,MAAAA,MAAAv6C,OAAA,EAaA,IAVA4I,KAAAsuD,QAAA,EAGAhxB,OAAAqU,MAAAv3C,KAAAyB,KAAA,IAEAi7C,OAAAA,MAAAE,MACAF,MAAAE,KAAA7/C,KAAAiD,MAAA,GAIAqW,MAAA+9C,OAAAp3D,OAAAqZ,SACA+9C,OAAA/9C,OAAAstB,OAAA3jC,MAAAo0D,OAAA/9C,OAAAkhC,QAAA91C,OACA2yD,OAAA/9C,OAAAw8C,KAAAjW,MAAA,GACAwX,OAAA5hD,OAAA6D,MAAA,IAKA,IAAAA,MAAA,EAAAA,MAAArZ,OAAAqZ,QACAkhC,MAAAlhC,QAAAkhC,MAAAlhC,OAAA69C,QACA3c,MAAAlhC,OAAA69C,OAAAn3D,KAAAiD,aAKA4F,KAAAsuD,YAKAhxB,OAAAz+B,KAAA,CAAA,SAAA,OAAA,QAAA,SAAA8gC,GAAA5kC,MACA,IAAA0zD,MAAAnxB,OAAAtiC,GAAAD,MACAuiC,OAAAtiC,GAAAD,MAAA,SAAA+yD,MAAA3F,OAAAt3C,UACA,OAAA,MAAAi9C,OAAA,kBAAAA,MACAW,MAAA7jD,MAAAxQ,KAAA6E,WACA7E,KAAA+zD,QAAAvC,MAAA7wD,MAAA,GAAA+yD,MAAA3F,OAAAt3C,aAKAysB,OAAAz+B,KAAA,CACA6vD,UAAA9C,MAAA,QACA+C,QAAA/C,MAAA,QACAgD,YAAAhD,MAAA,UACAiD,OAAA,CAAAxG,QAAA,QACAyG,QAAA,CAAAzG,QAAA,QACA0G,WAAA,CAAA1G,QAAA,WACA,SAAAttD,KAAAypB,OACA8Y,OAAAtiC,GAAAD,MAAA,SAAA+yD,MAAA3F,OAAAt3C,UACA,OAAAzW,KAAA+zD,QAAA3pC,MAAAspC,MAAA3F,OAAAt3C,aAIAysB,OAAAkxB,OAAA,GACAlxB,OAAAqtB,GAAAe,KAAA,WACA,IAAAsB,MACAv2D,EAAA,EACA+3D,OAAAlxB,OAAAkxB,OAIA,IAFAtD,MAAAvqB,KAAAue,MAEAzoD,EAAA+3D,OAAAp3D,OAAAX,KACAu2D,MAAAwB,OAAA/3D,OAGA+3D,OAAA/3D,KAAAu2D,OACAwB,OAAA5hD,OAAAnW,IAAA,GAIA+3D,OAAAp3D,QACAkmC,OAAAqtB,GAAA3T,OAEAkU,WAAAluD,GAGAsgC,OAAAqtB,GAAAqC,MAAA,SAAAA,OACA1vB,OAAAkxB,OAAA5wD,KAAAovD,OACA1vB,OAAAqtB,GAAA3rD,SAGAs+B,OAAAqtB,GAAAc,SAAA,GACAnuB,OAAAqtB,GAAA3rD,MAAA,WACAmsD,aAIAA,YAAA,EACAG,aAGAhuB,OAAAqtB,GAAA3T,KAAA,WACAmU,WAAA,MAGA7tB,OAAAqtB,GAAAqD,OAAA,CACAgB,KAAA,IACAC,KAAA,IAGAnV,SAAA,KAMAxc,OAAAtiC,GAAAk0D,MAAA,SAAAC,KAAAtzD,MAIA,OAHAszD,KAAA7xB,OAAAqtB,IAAArtB,OAAAqtB,GAAAqD,OAAAmB,OAAAA,KACAtzD,KAAAA,MAAA,KAEAzB,KAAAu3C,MAAA91C,KAAA,SAAA0kB,KAAAu2B,OACA,IAAAsY,QAAAjoC,OAAA4sB,WAAAxzB,KAAA4uC,MACArY,MAAAE,KAAA,WACA7vB,OAAAkoC,aAAAD,aAMA,WACA,IAAAx3D,MAAA8jC,SAAAoB,cAAA,SAEAixB,IADAryB,SAAAoB,cAAA,UACAI,YAAAxB,SAAAoB,cAAA,WAEAllC,MAAAiE,KAAA,WAIAwgC,QAAAizB,QAAA,KAAA13D,MAAAgI,MAIAy8B,QAAAkzB,YAAAxB,IAAA5iB,UAIAvzC,MAAA8jC,SAAAoB,cAAA,UACAl9B,MAAA,IACAhI,MAAAiE,KAAA,QACAwgC,QAAAmzB,WAAA,MAAA53D,MAAAgI,MApBA,GAwBA,IAAA6vD,SACAlqB,WAAAjI,OAAA3sB,KAAA40B,WAEAjI,OAAAtiC,GAAA9B,OAAA,CACAmvC,KAAA,SAAAttC,KAAA6E,OACA,OAAAs1C,OAAA96C,KAAAkjC,OAAA+K,KAAAttC,KAAA6E,MAAA,EAAAX,UAAA7H,SAGAs4D,WAAA,SAAA30D,MACA,OAAAX,KAAAyE,KAAA,WACAy+B,OAAAoyB,WAAAt1D,KAAAW,WAKAuiC,OAAApkC,OAAA,CACAmvC,KAAA,SAAAtK,KAAAhjC,KAAA6E,OACA,IAAAlC,IAAAo5C,MACA6Y,MAAA5xB,KAAAzB,SAGA,GAAA,IAAAqzB,OAAA,IAAAA,OAAA,IAAAA,MAKA,YAAA,IAAA5xB,KAAAhB,aACAO,OAAA2Y,KAAAlY,KAAAhjC,KAAA6E,QAKA,IAAA+vD,OAAAryB,OAAAwR,SAAA/Q,QACA+Y,MAAAxZ,OAAAsyB,UAAA70D,KAAA4rB,iBACA2W,OAAA3sB,KAAAwO,MAAAtZ,KAAA3J,KAAAnB,MAAA00D,cAAAzyD,SAGAA,IAAA4C,MACA,OAAAA,WACA09B,OAAAoyB,WAAA3xB,KAAAhjC,MAIA+7C,OAAA,QAAAA,YACA95C,KAAAU,IAAAo5C,MAAApsB,IAAAqT,KAAAn+B,MAAA7E,OACA2C,KAGAqgC,KAAAf,aAAAjiC,KAAA6E,MAAA,IACAA,OAGAk3C,OAAA,QAAAA,OAAA,QAAAp5C,IAAAo5C,MAAA7rB,IAAA8S,KAAAhjC,OACA2C,IAMA,OAHAA,IAAA4/B,OAAA4J,KAAAmB,KAAAtK,KAAAhjC,YAGAiC,EAAAU,MAGAkyD,UAAA,CACA/zD,KAAA,CACA6uB,IAAA,SAAAqT,KAAAn+B,OACA,IAAAy8B,QAAAmzB,YAAA,UAAA5vD,OACA8jC,SAAA3F,KAAA,SAAA,CACA,IAAAv3B,IAAAu3B,KAAAn+B,MAKA,OAJAm+B,KAAAf,aAAA,OAAAp9B,OACA4G,MACAu3B,KAAAn+B,MAAA4G,KAEA5G,UAMA8vD,WAAA,SAAA3xB,KAAAn+B,OACA,IAAA7E,KACAtE,EAAA,EAIAo5D,UAAAjwD,OAAAA,MAAAuf,MAAAoxB,eAEA,GAAAsf,WAAA,IAAA9xB,KAAAzB,SACA,KAAAvhC,KAAA80D,UAAAp5D,MACAsnC,KAAA+G,gBAAA/pC,SAOA00D,SAAA,CACA/kC,IAAA,SAAAqT,KAAAn+B,MAAA7E,MAQA,OAPA,IAAA6E,MAGA09B,OAAAoyB,WAAA3xB,KAAAhjC,MAEAgjC,KAAAf,aAAAjiC,KAAAA,MAEAA,OAIAuiC,OAAAz+B,KAAAy+B,OAAA3sB,KAAAwO,MAAAtZ,KAAA7H,OAAAmhB,MAAA,QAAA,SAAAwgB,GAAA5kC,MACA,IAAA+0D,OAAAvqB,WAAAxqC,OAAAuiC,OAAA4J,KAAAmB,KAEA9C,WAAAxqC,MAAA,SAAAgjC,KAAAhjC,KAAAglC,OACA,IAAAriC,IAAAq/C,OACAgT,cAAAh1D,KAAA4rB,cAYA,OAVAoZ,QAGAgd,OAAAxX,WAAAwqB,eACAxqB,WAAAwqB,eAAAryD,IACAA,IAAA,MAAAoyD,OAAA/xB,KAAAhjC,KAAAglC,OACAgwB,cACA,KACAxqB,WAAAwqB,eAAAhT,QAEAr/C,OAOA,IAAAsyD,WAAA,sCACAC,WAAA,gBAyIA,SAAAC,iBAAAtwD,OAEA,OADAA,MAAAuf,MAAAoxB,gBAAA,IACAjyC,KAAA,KAIA,SAAA6xD,SAAApyB,MACA,OAAAA,KAAAhB,cAAAgB,KAAAhB,aAAA,UAAA,GAGA,SAAAqzB,eAAAxwD,OACA,OAAAwf,MAAA3hB,QAAAmC,OACAA,MAEA,iBAAAA,OACAA,MAAAuf,MAAAoxB,gBAEA,GAxJAjT,OAAAtiC,GAAA9B,OAAA,CACA+8C,KAAA,SAAAl7C,KAAA6E,OACA,OAAAs1C,OAAA96C,KAAAkjC,OAAA2Y,KAAAl7C,KAAA6E,MAAA,EAAAX,UAAA7H,SAGAi5D,WAAA,SAAAt1D,MACA,OAAAX,KAAAyE,KAAA,kBACAzE,KAAAkjC,OAAAgzB,QAAAv1D,OAAAA,WAKAuiC,OAAApkC,OAAA,CACA+8C,KAAA,SAAAlY,KAAAhjC,KAAA6E,OACA,IAAAlC,IAAAo5C,MACA6Y,MAAA5xB,KAAAzB,SAGA,GAAA,IAAAqzB,OAAA,IAAAA,OAAA,IAAAA,MAWA,OAPA,IAAAA,OAAAryB,OAAAwR,SAAA/Q,QAGAhjC,KAAAuiC,OAAAgzB,QAAAv1D,OAAAA,KACA+7C,MAAAxZ,OAAA8sB,UAAArvD,YAGAiC,IAAA4C,MACAk3C,OAAA,QAAAA,YACA95C,KAAAU,IAAAo5C,MAAApsB,IAAAqT,KAAAn+B,MAAA7E,OACA2C,IAGAqgC,KAAAhjC,MAAA6E,MAGAk3C,OAAA,QAAAA,OAAA,QAAAp5C,IAAAo5C,MAAA7rB,IAAA8S,KAAAhjC,OACA2C,IAGAqgC,KAAAhjC,OAGAqvD,UAAA,CACApf,SAAA,CACA/f,IAAA,SAAA8S,MAOA,IAAAwyB,SAAAjzB,OAAA4J,KAAAmB,KAAAtK,KAAA,YAEA,OAAAwyB,SACA3pC,SAAA2pC,SAAA,IAIAP,WAAA9zD,KAAA6hC,KAAA2F,WACAusB,WAAA/zD,KAAA6hC,KAAA2F,WACA3F,KAAAgN,KAEA,GAGA,KAKAulB,QAAA,CACAE,IAAA,UACAC,MAAA,eAYAp0B,QAAAkzB,cACAjyB,OAAA8sB,UAAAjf,SAAA,CACAlgB,IAAA,SAAA8S,MAIA,IAAAj1B,OAAAi1B,KAAAZ,WAIA,OAHAr0B,QAAAA,OAAAq0B,YACAr0B,OAAAq0B,WAAAiO,cAEA,MAEA1gB,IAAA,SAAAqT,MAIA,IAAAj1B,OAAAi1B,KAAAZ,WACAr0B,SACAA,OAAAsiC,cAEAtiC,OAAAq0B,YACAr0B,OAAAq0B,WAAAiO,kBAOA9N,OAAAz+B,KAAA,CACA,WACA,WACA,YACA,cACA,cACA,UACA,UACA,SACA,cACA,mBACA,WACAy+B,OAAAgzB,QAAAl2D,KAAAusB,eAAAvsB,OA4BAkjC,OAAAtiC,GAAA9B,OAAA,CACAw3D,SAAA,SAAA9wD,OACA,IAAA+wD,QAAA5yB,KAAA0H,IAAAmrB,SAAAC,MAAA3qC,EAAA4qC,WACAr6D,EAAA,EAEA,GAAAwvB,WAAArmB,OACA,OAAAxF,KAAAyE,KAAA,SAAAqnB,GACAoX,OAAAljC,MAAAs2D,SAAA9wD,MAAAzI,KAAAiD,KAAA8rB,EAAAiqC,SAAA/1D,UAMA,IAFAu2D,QAAAP,eAAAxwD,QAEAxI,OACA,KAAA2mC,KAAA3jC,KAAA3D,MAIA,GAHAm6D,SAAAT,SAAApyB,MACA0H,IAAA,IAAA1H,KAAAzB,UAAA,IAAA4zB,iBAAAU,UAAA,IAEA,CAEA,IADA1qC,EAAA,EACA2qC,MAAAF,QAAAzqC,MACAuf,IAAA7+B,QAAA,IAAAiqD,MAAA,KAAA,IACAprB,KAAAorB,MAAA,KAMAD,YADAE,WAAAZ,iBAAAzqB,OAEA1H,KAAAf,aAAA,QAAA8zB,YAMA,OAAA12D,MAGA22D,YAAA,SAAAnxD,OACA,IAAA+wD,QAAA5yB,KAAA0H,IAAAmrB,SAAAC,MAAA3qC,EAAA4qC,WACAr6D,EAAA,EAEA,GAAAwvB,WAAArmB,OACA,OAAAxF,KAAAyE,KAAA,SAAAqnB,GACAoX,OAAAljC,MAAA22D,YAAAnxD,MAAAzI,KAAAiD,KAAA8rB,EAAAiqC,SAAA/1D,UAIA,IAAA6E,UAAA7H,OACA,OAAAgD,KAAAiuC,KAAA,QAAA,IAKA,IAFAsoB,QAAAP,eAAAxwD,QAEAxI,OACA,KAAA2mC,KAAA3jC,KAAA3D,MAMA,GALAm6D,SAAAT,SAAApyB,MAGA0H,IAAA,IAAA1H,KAAAzB,UAAA,IAAA4zB,iBAAAU,UAAA,IAEA,CAEA,IADA1qC,EAAA,EACA2qC,MAAAF,QAAAzqC,MAGA,MAAA,EAAAuf,IAAA7+B,QAAA,IAAAiqD,MAAA,MACAprB,IAAAA,IAAAnmC,QAAA,IAAAuxD,MAAA,IAAA,KAMAD,YADAE,WAAAZ,iBAAAzqB,OAEA1H,KAAAf,aAAA,QAAA8zB,YAMA,OAAA12D,MAGA42D,YAAA,SAAApxD,MAAAqxD,UACA,IAAAp1D,YAAA+D,MACAsxD,aAAA,WAAAr1D,MAAAujB,MAAA3hB,QAAAmC,OAEA,MAAA,kBAAAqxD,UAAAC,aACAD,SAAA72D,KAAAs2D,SAAA9wD,OAAAxF,KAAA22D,YAAAnxD,OAGAqmB,WAAArmB,OACAxF,KAAAyE,KAAA,SAAApI,GACA6mC,OAAAljC,MAAA42D,YACApxD,MAAAzI,KAAAiD,KAAA3D,EAAA05D,SAAA/1D,MAAA62D,UACAA,YAKA72D,KAAAyE,KAAA,WACA,IAAA+nC,UAAAnwC,EAAAsnB,KAAAozC,WAEA,GAAAD,aAOA,IAJAz6D,EAAA,EACAsnB,KAAAuf,OAAAljC,MACA+2D,WAAAf,eAAAxwD,OAEAgnC,UAAAuqB,WAAA16D,MAGAsnB,KAAAqzC,SAAAxqB,WACA7oB,KAAAgzC,YAAAnqB,WAEA7oB,KAAA2yC,SAAA9pB,qBAKA5pC,IAAA4C,OAAA,YAAA/D,QACA+qC,UAAAupB,SAAA/1D,QAIA+7C,SAAAzrB,IAAAtwB,KAAA,gBAAAwsC,WAOAxsC,KAAA4iC,cACA5iC,KAAA4iC,aAAA,QACA4J,YAAA,IAAAhnC,MACA,GACAu2C,SAAAlrB,IAAA7wB,KAAA,kBAAA,QAOAg3D,SAAA,SAAA7zB,UACA,IAAAqJ,UAAA7I,KACAtnC,EAAA,EAGA,IADAmwC,UAAA,IAAArJ,SAAA,IACAQ,KAAA3jC,KAAA3D,MACA,GAAA,IAAAsnC,KAAAzB,WACA,GAAA,IAAA4zB,iBAAAC,SAAApyB,OAAA,KAAAn3B,QAAAggC,WACA,OAAA,EAIA,OAAA,KAOA,IAAAyqB,QAAA,MAEA/zB,OAAAtiC,GAAA9B,OAAA,CACAsN,IAAA,SAAA5G,OACA,IAAAk3C,MAAAp5C,IAAA0kD,gBACArkB,KAAA3jC,KAAA,GAEA,OAAA6E,UAAA7H,QA0BAgrD,gBAAAn8B,WAAArmB,OAEAxF,KAAAyE,KAAA,SAAApI,GACA,IAAA+P,IAEA,IAAApM,KAAAkiC,WAWA,OANA91B,IADA47C,gBACAxiD,MAAAzI,KAAAiD,KAAA3D,EAAA6mC,OAAAljC,MAAAoM,OAEA5G,OAKA4G,IAAA,GAEA,iBAAAA,IACAA,KAAA,GAEA4Y,MAAA3hB,QAAA+I,OACAA,IAAA82B,OAAA/xB,IAAA/E,IAAA,SAAA5G,OACA,OAAA,MAAAA,MAAA,GAAAA,MAAA,OAIAk3C,MAAAxZ,OAAAg0B,SAAAl3D,KAAAyB,OAAAyhC,OAAAg0B,SAAAl3D,KAAAspC,SAAA/c,iBAGA,QAAAmwB,YAAA95C,IAAA85C,MAAApsB,IAAAtwB,KAAAoM,IAAA,WACApM,KAAAwF,MAAA4G,SAzDAu3B,MACA+Y,MAAAxZ,OAAAg0B,SAAAvzB,KAAAliC,OACAyhC,OAAAg0B,SAAAvzB,KAAA2F,SAAA/c,iBAGA,QAAAmwB,YACA95C,KAAAU,IAAAo5C,MAAA7rB,IAAA8S,KAAA,UAEArgC,IAMA,iBAHAA,IAAAqgC,KAAAn+B,OAIAlC,IAAA4B,QAAA+xD,QAAA,IAIA,MAAA3zD,IAAA,GAAAA,SAGA,KAyCA4/B,OAAApkC,OAAA,CACAo4D,SAAA,CACA9X,OAAA,CACAvuB,IAAA,SAAA8S,MAEA,IAAAv3B,IAAA82B,OAAA4J,KAAAmB,KAAAtK,KAAA,SACA,OAAA,MAAAv3B,IACAA,IAMA0pD,iBAAA5yB,OAAApe,KAAA6e,SAGAkC,OAAA,CACAhV,IAAA,SAAA8S,MACA,IAAAn+B,MAAA45C,OAAA/iD,EACAoB,QAAAkmC,KAAAlmC,QACA4Y,MAAAstB,KAAAqN,cACAqQ,IAAA,eAAA1d,KAAAliC,KACA8S,OAAA8sC,IAAA,KAAA,GACA2L,IAAA3L,IAAAhrC,MAAA,EAAA5Y,QAAAT,OAUA,IAPAX,EADAga,MAAA,EACA22C,IAGA3L,IAAAhrC,MAAA,EAIAha,EAAA2wD,IAAA3wD,IAKA,KAJA+iD,OAAA3hD,QAAApB,IAIA00C,UAAA10C,IAAAga,SAGA+oC,OAAA/V,YACA+V,OAAArc,WAAAsG,WACAC,SAAA8V,OAAArc,WAAA,aAAA,CAMA,GAHAv9B,MAAA09B,OAAAkc,QAAAhzC,MAGAi1C,IACA,OAAA77C,MAIA+O,OAAA/Q,KAAAgC,OAIA,OAAA+O,QAGA+b,IAAA,SAAAqT,KAAAn+B,OAMA,IALA,IAAA2xD,UAAA/X,OACA3hD,QAAAkmC,KAAAlmC,QACA8W,OAAA2uB,OAAA4B,UAAAt/B,OACAnJ,EAAAoB,QAAAT,OAEAX,OACA+iD,OAAA3hD,QAAApB,IAIA00C,UACA,EAAA7N,OAAA8B,QAAA9B,OAAAg0B,SAAA9X,OAAAvuB,IAAAuuB,QAAA7qC,WAEA4iD,WAAA,GAUA,OAHAA,YACAxzB,KAAAqN,eAAA,GAEAz8B,YAOA2uB,OAAAz+B,KAAA,CAAA,QAAA,YAAA,WACAy+B,OAAAg0B,SAAAl3D,MAAA,CACAswB,IAAA,SAAAqT,KAAAn+B,OACA,GAAAwf,MAAA3hB,QAAAmC,OACA,OAAAm+B,KAAAmN,SAAA,EAAA5N,OAAA8B,QAAA9B,OAAAS,MAAAv3B,MAAA5G,SAIAy8B,QAAAizB,UACAhyB,OAAAg0B,SAAAl3D,MAAA6wB,IAAA,SAAA8S,MACA,OAAA,OAAAA,KAAAhB,aAAA,SAAA,KAAAgB,KAAAn+B,UAWAy8B,QAAAm1B,QAAA,cAAArqC,OAGA,IAAAsqC,YAAA,kCACAC,wBAAA,SAAAr7D,GACAA,EAAA6lD,mBAGA5e,OAAApkC,OAAAokC,OAAAqe,MAAA,CAEAU,QAAA,SAAAV,MAAA37C,KAAA+9B,KAAA4zB,cAEA,IAAAl7D,EAAAgvC,IAAA7gB,IAAAgtC,WAAAC,OAAA9U,OAAA1J,QAAAye,YACAC,UAAA,CAAAh0B,MAAArC,UACA7/B,KAAAqgC,OAAA/kC,KAAAwkD,MAAA,QAAAA,MAAA9/C,KAAA8/C,MACAiB,WAAA1gB,OAAA/kC,KAAAwkD,MAAA,aAAAA,MAAAvV,UAAAv0B,MAAA,KAAA,GAKA,GAHA4zB,IAAAqsB,YAAAltC,IAAAmZ,KAAAA,MAAArC,SAGA,IAAAqC,KAAAzB,UAAA,IAAAyB,KAAAzB,WAKAm1B,YAAAv1D,KAAAL,KAAAyhC,OAAAqe,MAAAqB,cAIA,EAAAnhD,KAAA+K,QAAA,OAIA/K,MADA+gD,WAAA/gD,KAAAgW,MAAA,MACAhP,QACA+5C,WAAAruB,QAEAsjC,OAAAh2D,KAAA+K,QAAA,KAAA,GAAA,KAAA/K,MAGA8/C,MAAAA,MAAAre,OAAAqB,SACAgd,MACA,IAAAre,OAAAgf,MAAAzgD,KAAA,iBAAA8/C,OAAAA,QAGAK,UAAA2V,aAAA,EAAA,EACAhW,MAAAvV,UAAAwW,WAAAt+C,KAAA,KACAq9C,MAAAsC,WAAAtC,MAAAvV,UACA,IAAAzE,OAAA,UAAAib,WAAAt+C,KAAA,iBAAA,WACA,KAGAq9C,MAAAh5C,YAAA3F,EACA2+C,MAAAnd,SACAmd,MAAAnd,OAAAT,MAIA/9B,KAAA,MAAAA,KACA,CAAA27C,OACAre,OAAA4B,UAAAl/B,KAAA,CAAA27C,QAGAtI,QAAA/V,OAAAqe,MAAAtI,QAAAx3C,OAAA,GACA81D,eAAAte,QAAAgJ,UAAA,IAAAhJ,QAAAgJ,QAAAzxC,MAAAmzB,KAAA/9B,OAAA,CAMA,IAAA2xD,eAAAte,QAAAqL,WAAAniB,SAAAwB,MAAA,CAMA,IAJA6zB,WAAAve,QAAA4I,cAAApgD,KACA41D,YAAAv1D,KAAA01D,WAAA/1D,QACA4pC,IAAAA,IAAAtI,YAEAsI,IAAAA,IAAAA,IAAAtI,WACA40B,UAAAn0D,KAAA6nC,KACA7gB,IAAA6gB,IAIA7gB,OAAAmZ,KAAAqG,eAAA1I,WACAq2B,UAAAn0D,KAAAgnB,IAAA6hB,aAAA7hB,IAAAotC,cAAA7qC,QAMA,IADA1wB,EAAA,GACAgvC,IAAAssB,UAAAt7D,QAAAklD,MAAAmC,wBACAgU,YAAArsB,IACAkW,MAAA9/C,KAAA,EAAApF,EACAm7D,WACAve,QAAA6J,UAAArhD,MAGAkhD,QACA5G,SAAAlrB,IAAAwa,IAAA,WAAAzgB,OAAAvtB,OAAA,OACAkkD,MAAA9/C,OACAs6C,SAAAlrB,IAAAwa,IAAA,YAEAsX,OAAAnyC,MAAA66B,IAAAzlC,OAIA+8C,OAAA8U,QAAApsB,IAAAosB,UACA9U,OAAAnyC,OAAAirC,WAAApQ,OACAkW,MAAAh5C,OAAAo6C,OAAAnyC,MAAA66B,IAAAzlC,OACA,IAAA27C,MAAAh5C,QACAg5C,MAAAS,kBA8CA,OA1CAT,MAAA9/C,KAAAA,KAGA81D,cAAAhW,MAAAmD,sBAEAzL,QAAAyG,WACA,IAAAzG,QAAAyG,SAAAlvC,MAAAmnD,UAAA/iD,MAAAhP,QACA61C,WAAA9X,OAIA8zB,QAAA5rC,WAAA8X,KAAAliC,SAAA0gC,SAAAwB,SAGAnZ,IAAAmZ,KAAA8zB,WAGA9zB,KAAA8zB,QAAA,MAIAv0B,OAAAqe,MAAAqB,UAAAnhD,KAEA8/C,MAAAmC,wBACAgU,YAAAprB,iBAAA7qC,KAAA61D,yBAGA3zB,KAAAliC,QAEA8/C,MAAAmC,wBACAgU,YAAAjd,oBAAAh5C,KAAA61D,yBAGAp0B,OAAAqe,MAAAqB,eAAAhgD,EAEA4nB,MACAmZ,KAAA8zB,QAAAjtC,MAMA+2B,MAAAh5C,SAKAsvD,SAAA,SAAAp2D,KAAAkiC,KAAA4d,OACA,IAAAtlD,EAAAinC,OAAApkC,OACA,IAAAokC,OAAAgf,MACAX,MACA,CACA9/C,KAAAA,KACAsjD,aAAA,IAIA7hB,OAAAqe,MAAAU,QAAAhmD,EAAA,KAAA0nC,SAKAT,OAAAtiC,GAAA9B,OAAA,CAEAmjD,QAAA,SAAAxgD,KAAAmE,MACA,OAAA5F,KAAAyE,KAAA,WACAy+B,OAAAqe,MAAAU,QAAAxgD,KAAAmE,KAAA5F,SAGA83D,eAAA,SAAAr2D,KAAAmE,MACA,IAAA+9B,KAAA3jC,KAAA,GACA,GAAA2jC,KACA,OAAAT,OAAAqe,MAAAU,QAAAxgD,KAAAmE,KAAA+9B,MAAA,MAcA1B,QAAAm1B,SACAl0B,OAAAz+B,KAAA,CAAA+rC,MAAA,UAAAmW,KAAA,YAAA,SAAAK,KAAAzD,KAGA,IAAArY,QAAA,SAAAqW,OACAre,OAAAqe,MAAAsW,SAAAtU,IAAAhC,MAAAnd,OAAAlB,OAAAqe,MAAAgC,IAAAhC,SAGAre,OAAAqe,MAAAtI,QAAAsK,KAAA,CACAP,MAAA,WAIA,IAAAxgB,IAAAxiC,KAAAgqC,eAAAhqC,KAAAshC,UAAAthC,KACA+3D,SAAAhc,SAAAjB,OAAAtY,IAAA+gB,KAEAwU,UACAv1B,IAAA8J,iBAAA0a,KAAA9b,SAAA,GAEA6Q,SAAAjB,OAAAtY,IAAA+gB,KAAAwU,UAAA,GAAA,IAEA5U,SAAA,WACA,IAAA3gB,IAAAxiC,KAAAgqC,eAAAhqC,KAAAshC,UAAAthC,KACA+3D,SAAAhc,SAAAjB,OAAAtY,IAAA+gB,KAAA,EAEAwU,SAKAhc,SAAAjB,OAAAtY,IAAA+gB,IAAAwU,WAJAv1B,IAAAiY,oBAAAuM,KAAA9b,SAAA,GACA6Q,SAAAnE,OAAApV,IAAA+gB,UASA,IAAAj0C,SAAAyd,OAAAzd,SAEA+yB,MAAA,CAAA56B,KAAA8+B,KAAAue,OAEAkT,OAAA,KAKA90B,OAAA+0B,SAAA,SAAAryD,MACA,IAAA+pC,IACA,IAAA/pC,MAAA,iBAAAA,KACA,OAAA,KAKA,IACA+pC,KAAA,IAAA5iB,OAAAmrC,WAAAC,gBAAAvyD,KAAA,YACA,MAAA3J,GACA0zC,SAAA/sC,EAMA,OAHA+sC,MAAAA,IAAAzF,qBAAA,eAAAltC,QACAkmC,OAAAnrB,MAAA,gBAAAnS,MAEA+pC,KAIA,IACAyoB,SAAA,QACAC,MAAA,SACAC,gBAAA,wCACAC,aAAA,qCAEA,SAAAC,YAAA9hD,OAAAtR,IAAAqzD,YAAAx0D,KACA,IAAAtD,KAEA,GAAAqkB,MAAA3hB,QAAA+B,KAGA89B,OAAAz+B,KAAAW,IAAA,SAAA/I,EAAAg6C,GACAoiB,aAAAL,SAAAt2D,KAAA4U,QAGAzS,IAAAyS,OAAA2/B,GAKAmiB,YACA9hD,OAAA,KAAA,iBAAA2/B,GAAA,MAAAA,EAAAh6C,EAAA,IAAA,IACAg6C,EACAoiB,YACAx0D,YAKA,GAAAw0D,aAAA,WAAAx1B,OAAA79B,KAUAnB,IAAAyS,OAAAtR,UAPA,IAAAzE,QAAAyE,IACAozD,YAAA9hD,OAAA,IAAA/V,KAAA,IAAAyE,IAAAzE,MAAA83D,YAAAx0D,KAYAi/B,OAAA32B,MAAA,SAAA7P,EAAA+7D,aACA,IAAA/hD,OACAigB,EAAA,GACA1yB,IAAA,SAAAqB,IAAAozD,iBAGA,IAAAlzD,MAAAqmB,WAAA6sC,iBACAA,kBACAA,gBAEA/hC,EAAAA,EAAA35B,QAAA27D,mBAAArzD,KAAA,IACAqzD,mBAAA,MAAAnzD,MAAA,GAAAA,QAGA,GAAA,MAAA9I,EACA,MAAA,GAIA,GAAAsoB,MAAA3hB,QAAA3G,IAAAA,EAAA4mC,SAAAJ,OAAAoB,cAAA5nC,GAGAwmC,OAAAz+B,KAAA/H,EAAA,WACAuH,IAAAjE,KAAAW,KAAAX,KAAAwF,cAOA,IAAAkR,UAAAha,EACA87D,YAAA9hD,OAAAha,EAAAga,QAAA+hD,YAAAx0D,KAKA,OAAA0yB,EAAAzyB,KAAA,MAGAg/B,OAAAtiC,GAAA9B,OAAA,CACA85D,UAAA,WACA,OAAA11B,OAAA32B,MAAAvM,KAAA64D,mBAEAA,eAAA,WACA,OAAA74D,KAAAmR,IAAA,WAGA,IAAA68B,SAAA9K,OAAA2Y,KAAA77C,KAAA,YACA,OAAAguC,SAAA9K,OAAA4B,UAAAkJ,UAAAhuC,OAEA4sC,OAAA,WACA,IAAAnrC,KAAAzB,KAAAyB,KAGA,OAAAzB,KAAAW,OAAAuiC,OAAAljC,MAAA80C,GAAA,cACAyjB,aAAAz2D,KAAA9B,KAAAspC,YAAAgvB,gBAAAx2D,KAAAL,QACAzB,KAAA8wC,UAAA+N,eAAA/8C,KAAAL,SAEA0P,IAAA,SAAAo0B,GAAA5B,MACA,IAAAv3B,IAAA82B,OAAAljC,MAAAoM,MAEA,OAAA,MAAAA,IACA,KAGA4Y,MAAA3hB,QAAA+I,KACA82B,OAAA/xB,IAAA/E,IAAA,SAAAA,KACA,MAAA,CAAAzL,KAAAgjC,KAAAhjC,KAAA6E,MAAA4G,IAAAlH,QAAAmzD,MAAA,WAIA,CAAA13D,KAAAgjC,KAAAhjC,KAAA6E,MAAA4G,IAAAlH,QAAAmzD,MAAA,WACAxnC,SAKA,IACAioC,IAAA,OACAC,MAAA,OACAC,WAAA,gBACAC,SAAA,6BAIAC,WAAA,iBACAC,UAAA,QAWAnH,WAAA,GAOAoH,WAAA,GAGAC,SAAA,KAAA7nD,OAAA,KAGA8nD,aAAAh4B,SAAAoB,cAAA,KAIA,SAAA62B,4BAAAC,WAGA,OAAA,SAAAC,mBAAAxhB,MAEA,iBAAAwhB,qBACAxhB,KAAAwhB,mBACAA,mBAAA,KAGA,IAAAC,SACAr9D,EAAA,EACAs9D,UAAAF,mBAAAltC,cAAAxH,MAAAoxB,gBAAA,GAEA,GAAAtqB,WAAAosB,MAGA,KAAAyhB,SAAAC,UAAAt9D,MAGA,MAAAq9D,SAAA,IACAA,SAAAA,SAAA/yD,MAAA,IAAA,KACA6yD,UAAAE,UAAAF,UAAAE,WAAA,IAAAp1D,QAAA2zC,QAIAuhB,UAAAE,UAAAF,UAAAE,WAAA,IAAAl2D,KAAAy0C,OAQA,SAAA2hB,8BAAAJ,UAAA/7D,QAAA80D,gBAAAsH,OAEA,IAAAC,UAAA,GACAC,iBAAAP,YAAAJ,WAEA,SAAAY,QAAAN,UACA,IAAA3oB,SAcA,OAbA+oB,UAAAJ,WAAA,EACAx2B,OAAAz+B,KAAA+0D,UAAAE,WAAA,GAAA,SAAA1iB,EAAAijB,oBACA,IAAAC,oBAAAD,mBAAAx8D,QAAA80D,gBAAAsH,OACA,MAAA,iBAAAK,qBACAH,kBAAAD,UAAAI,qBAKAH,mBACAhpB,SAAAmpB,0BADA,GAHAz8D,QAAAk8D,UAAAr1D,QAAA41D,qBACAF,QAAAE,sBACA,KAKAnpB,SAGA,OAAAipB,QAAAv8D,QAAAk8D,UAAA,MAAAG,UAAA,MAAAE,QAAA,KAMA,SAAAG,WAAA/1B,OAAApgC,KACA,IAAAsB,IAAA++B,KACA+1B,YAAAl3B,OAAAm3B,aAAAD,aAAA,GAEA,IAAA90D,OAAAtB,SACApB,IAAAoB,IAAAsB,QACA80D,YAAA90D,KAAA8+B,OAAAC,OAAAA,KAAA,KAAA/+B,KAAAtB,IAAAsB,MAOA,OAJA++B,MACAnB,OAAApkC,QAAA,EAAAslC,OAAAC,MAGAD,OA/EAk1B,aAAA3oB,KAAArhC,SAAAqhC,KAgPAzN,OAAApkC,OAAA,CAGAw7D,OAAA,EAGAC,aAAA,GACAC,KAAA,GAEAH,aAAA,CACAjjC,IAAA9nB,SAAAqhC,KACAlvC,KAAA,MACAg5D,QAvRA,4DAuRA34D,KAAAwN,SAAAorD,UACA5tC,QAAA,EACA6tC,aAAA,EACAC,OAAA,EACAC,YAAA,mDAcAC,QAAA,CACAhI,IAAAuG,SACAv0C,KAAA,aACAmjC,KAAA,YACAtY,IAAA,4BACAorB,KAAA,qCAGAptD,SAAA,CACAgiC,IAAA,UACAsY,KAAA,SACA8S,KAAA,YAGAC,eAAA,CACArrB,IAAA,cACA7qB,KAAA,eACAi2C,KAAA,gBAKAE,WAAA,CAGAC,SAAA7kC,OAGA8kC,aAAA,EAGAC,YAAAxsD,KAAAxQ,MAGAi9D,WAAAn4B,OAAA+0B,UAOAmC,YAAA,CACAhjC,KAAA,EACAhxB,SAAA,IAOAk1D,UAAA,SAAAl3B,OAAAm3B,UACA,OAAAA,SAGApB,WAAAA,WAAA/1B,OAAAlB,OAAAm3B,cAAAkB,UAGApB,WAAAj3B,OAAAm3B,aAAAj2B,SAGAo3B,cAAAjC,4BAAAvH,YACAyJ,cAAAlC,4BAAAH,YAGAsC,KAAA,SAAAtkC,IAAA35B,SAGA,iBAAA25B,MACA35B,QAAA25B,IACAA,SAAAx0B,GAIAnF,QAAAA,SAAA,GAEA,IAAAk+D,UAGAC,SAGAC,sBACAC,gBAGAC,aAGAC,UAGAxhB,UAGAyhB,YAGA5/D,EAGA6/D,SAGAvlC,EAAAuM,OAAAo4B,UAAA,GAAA79D,SAGA0+D,gBAAAxlC,EAAAvwB,SAAAuwB,EAGAylC,mBAAAzlC,EAAAvwB,UACA+1D,gBAAAj6B,UAAAi6B,gBAAA74B,QACAJ,OAAAi5B,iBACAj5B,OAAAqe,MAGAnJ,SAAAlV,OAAA8U,WACAqkB,iBAAAn5B,OAAA6T,UAAA,eAGAulB,WAAA3lC,EAAA2lC,YAAA,GAGAC,eAAA,GACAC,oBAAA,GAGAC,SAAA,WAGA5C,MAAA,CACAjf,WAAA,EAGA8hB,kBAAA,SAAAp3D,KACA,IAAAyf,MACA,GAAAy1B,UAAA,CACA,IAAAshB,gBAEA,IADAA,gBAAA,GACA/2C,MAAAk0C,SAAAlvC,KAAA8xC,wBACAC,gBAAA/2C,MAAA,GAAAwH,cAAA,MACAuvC,gBAAA/2C,MAAA,GAAAwH,cAAA,MAAA,IACA/a,OAAAuT,MAAA,IAGAA,MAAA+2C,gBAAAx2D,IAAAinB,cAAA,KAEA,OAAA,MAAAxH,MAAA,KAAAA,MAAA7gB,KAAA,OAIAy4D,sBAAA,WACA,OAAAniB,UAAAqhB,sBAAA,MAIAe,iBAAA,SAAAj8D,KAAA6E,OAMA,OALA,MAAAg1C,YACA75C,KAAA67D,oBAAA77D,KAAA4rB,eACAiwC,oBAAA77D,KAAA4rB,gBAAA5rB,KACA47D,eAAA57D,MAAA6E,OAEAxF,MAIA68D,iBAAA,SAAAp7D,MAIA,OAHA,MAAA+4C,YACA7jB,EAAAmmC,SAAAr7D,MAEAzB,MAIAs8D,WAAA,SAAAnrD,KACA,IAAAvU,KACA,GAAAuU,IACA,GAAAqpC,UAGAqf,MAAA1hB,OAAAhnC,IAAA0oD,MAAAkD,cAIA,IAAAngE,QAAAuU,IACAmrD,WAAA1/D,MAAA,CAAA0/D,WAAA1/D,MAAAuU,IAAAvU,OAIA,OAAAoD,MAIAg9D,MAAA,SAAAC,YACA,IAAAC,UAAAD,YAAAR,SAKA,OAJAd,WACAA,UAAAqB,MAAAE,WAEA73C,KAAA,EAAA63C,WACAl9D,OAoBA,GAfAo4C,SAAAxB,QAAAijB,OAKAljC,EAAAS,MAAAA,KAAAT,EAAAS,KAAA9nB,SAAAqhC,MAAA,IACAzrC,QAAAi0D,UAAA7pD,SAAAorD,SAAA,MAGA/jC,EAAAl1B,KAAAhE,QAAAivB,QAAAjvB,QAAAgE,MAAAk1B,EAAAjK,QAAAiK,EAAAl1B,KAGAk1B,EAAAgjC,WAAAhjC,EAAA+iC,UAAA,KAAAntC,cAAAxH,MAAAoxB,gBAAA,CAAA,IAGA,MAAAxf,EAAAwmC,YAAA,CACAnB,UAAA16B,SAAAoB,cAAA,KAKA,IACAs5B,UAAArrB,KAAAha,EAAAS,IAIA4kC,UAAArrB,KAAAqrB,UAAArrB,KACAha,EAAAwmC,YAAA7D,aAAAoB,SAAA,KAAApB,aAAAv5B,MACAi8B,UAAAtB,SAAA,KAAAsB,UAAAj8B,KACA,MAAA9jC,GAIA06B,EAAAwmC,aAAA,GAaA,GARAxmC,EAAA/wB,MAAA+wB,EAAAgkC,aAAA,iBAAAhkC,EAAA/wB,OACA+wB,EAAA/wB,KAAAs9B,OAAA32B,MAAAoqB,EAAA/wB,KAAA+wB,EAAA8hC,cAIAmB,8BAAA5H,WAAAr7B,EAAAl5B,QAAAo8D,OAGArf,UACA,OAAAqf,MA8EA,IAAAx9D,KAzEA4/D,YAAA/4B,OAAAqe,OAAA5qB,EAAA7J,SAGA,GAAAoW,OAAAo3B,UACAp3B,OAAAqe,MAAAU,QAAA,aAIAtrB,EAAAl1B,KAAAk1B,EAAAl1B,KAAA85C,cAGA5kB,EAAAymC,YAAAlE,WAAAp3D,KAAA60B,EAAAl1B,MAKAm6D,SAAAjlC,EAAAS,IAAAlyB,QAAA6zD,MAAA,IAGApiC,EAAAymC,WAwBAzmC,EAAA/wB,MAAA+wB,EAAAgkC,aACA,KAAAhkC,EAAAkkC,aAAA,IAAAruD,QAAA,uCACAmqB,EAAA/wB,KAAA+wB,EAAA/wB,KAAAV,QAAA4zD,IAAA,OAvBAoD,SAAAvlC,EAAAS,IAAAzwB,MAAAi1D,SAAA5+D,QAGA25B,EAAA/wB,OAAA+wB,EAAAgkC,aAAA,iBAAAhkC,EAAA/wB,QACAg2D,WAAA5D,OAAAl2D,KAAA85D,UAAA,IAAA,KAAAjlC,EAAA/wB,YAGA+wB,EAAA/wB,OAIA,IAAA+wB,EAAAgU,QACAixB,SAAAA,SAAA12D,QAAA8zD,WAAA,MACAkD,UAAAlE,OAAAl2D,KAAA85D,UAAA,IAAA,KAAA,KAAAv5B,MAAA56B,OACAy0D,UAIAvlC,EAAAS,IAAAwkC,SAAAM,UASAvlC,EAAA0mC,aACAn6B,OAAAq3B,aAAAqB,WACA/B,MAAA+C,iBAAA,oBAAA15B,OAAAq3B,aAAAqB,WAEA14B,OAAAs3B,KAAAoB,WACA/B,MAAA+C,iBAAA,gBAAA15B,OAAAs3B,KAAAoB,aAKAjlC,EAAA/wB,MAAA+wB,EAAAymC,aAAA,IAAAzmC,EAAAkkC,aAAAp9D,QAAAo9D,cACAhB,MAAA+C,iBAAA,eAAAjmC,EAAAkkC,aAIAhB,MAAA+C,iBACA,SACAjmC,EAAAgjC,UAAA,IAAAhjC,EAAAmkC,QAAAnkC,EAAAgjC,UAAA,IACAhjC,EAAAmkC,QAAAnkC,EAAAgjC,UAAA,KACA,MAAAhjC,EAAAgjC,UAAA,GAAA,KAAAN,SAAA,WAAA,IACA1iC,EAAAmkC,QAAA,MAIAnkC,EAAA2mC,QACAzD,MAAA+C,iBAAAvgE,EAAAs6B,EAAA2mC,QAAAjhE,IAIA,GAAAs6B,EAAA4mC,cACA,IAAA5mC,EAAA4mC,WAAAxgE,KAAAo/D,gBAAAtC,MAAAljC,IAAA6jB,WAGA,OAAAqf,MAAAmD,QAeA,GAXAP,SAAA,QAGAJ,iBAAAp4D,IAAA0yB,EAAAg8B,UACAkH,MAAAx0C,KAAAsR,EAAA6mC,SACA3D,MAAAhjB,KAAAlgB,EAAA5e,OAGA4jD,UAAA/B,8BAAAR,WAAAziC,EAAAl5B,QAAAo8D,OAKA,CASA,GARAA,MAAAjf,WAAA,EAGAqhB,aACAG,mBAAAna,QAAA,WAAA,CAAA4X,MAAAljC,IAIA6jB,UACA,OAAAqf,MAIAljC,EAAAikC,OAAA,EAAAjkC,EAAAq+B,UACA+G,aAAAhvC,OAAA4sB,WAAA,WACAkgB,MAAAmD,MAAA,YACArmC,EAAAq+B,UAGA,IACAxa,WAAA,EACAmhB,UAAA8B,KAAAlB,eAAAl3C,MACA,MAAAppB,GAGA,GAAAu+C,UACA,MAAAv+C,EAIAopB,MAAA,EAAAppB,SAhCAopB,MAAA,EAAA,gBAqCA,SAAAA,KAAA03C,OAAAW,iBAAAC,UAAAL,SACA,IAAAM,UAAAJ,QAAAzlD,MAAA8lD,SAAAC,SACAb,WAAAS,iBAGAljB,YAIAA,WAAA,EAGAuhB,cACAhvC,OAAAkoC,aAAA8G,cAKAJ,eAAA/4D,EAGAi5D,sBAAAyB,SAAA,GAGAzD,MAAAjf,WAAA,EAAAmiB,OAAA,EAAA,EAGAa,UAAA,KAAAb,QAAAA,OAAA,KAAA,MAAAA,OAGAY,YACAE,SA7lBA,SAAAlnC,EAAAkjC,MAAA8D,WAOA,IALA,IAAAI,GAAAt8D,KAAAu8D,cAAAC,cACAtwD,SAAAgpB,EAAAhpB,SACAgsD,UAAAhjC,EAAAgjC,UAGA,MAAAA,UAAA,IACAA,UAAAlxD,aACA7F,IAAAm7D,KACAA,GAAApnC,EAAAmmC,UAAAjD,MAAA6C,kBAAA,iBAKA,GAAAqB,GACA,IAAAt8D,QAAAkM,SACA,GAAAA,SAAAlM,OAAAkM,SAAAlM,MAAAK,KAAAi8D,IAAA,CACApE,UAAAr1D,QAAA7C,MACA,MAMA,GAAAk4D,UAAA,KAAAgE,UACAK,cAAArE,UAAA,OACA,CAGA,IAAAl4D,QAAAk8D,UAAA,CACA,IAAAhE,UAAA,IAAAhjC,EAAAskC,WAAAx5D,KAAA,IAAAk4D,UAAA,IAAA,CACAqE,cAAAv8D,KACA,MAEAw8D,gBACAA,cAAAx8D,MAKAu8D,cAAAA,eAAAC,cAMA,GAAAD,cAIA,OAHAA,gBAAArE,UAAA,IACAA,UAAAr1D,QAAA05D,eAEAL,UAAAK,eA0iBAE,CAAAvnC,EAAAkjC,MAAA8D,aAIAC,YAAA,EAAA16B,OAAA8B,QAAA,SAAArO,EAAAgjC,aACAhjC,EAAAskC,WAAA,eAAA,cAIA4C,SA5iBA,SAAAlnC,EAAAknC,SAAAhE,MAAA+D,WACA,IAAAO,MAAAxrD,QAAAyrD,KAAA5zC,IAAAzB,KACAkyC,WAAA,GAGAtB,UAAAhjC,EAAAgjC,UAAAhzD,QAGA,GAAAgzD,UAAA,GACA,IAAAyE,QAAAznC,EAAAskC,WACAA,WAAAmD,KAAA7xC,eAAAoK,EAAAskC,WAAAmD,MAOA,IAHAzrD,QAAAgnD,UAAAlxD,QAGAkK,SAcA,GAZAgkB,EAAAqkC,eAAAroD,WACAknD,MAAAljC,EAAAqkC,eAAAroD,UAAAkrD,WAIA90C,MAAA60C,WAAAjnC,EAAA0nC,aACAR,SAAAlnC,EAAA0nC,WAAAR,SAAAlnC,EAAA+iC,WAGA3wC,KAAApW,QACAA,QAAAgnD,UAAAlxD,QAKA,GAAA,MAAAkK,QAEAA,QAAAoW,UAGA,GAAA,MAAAA,MAAAA,OAAApW,QAAA,CAMA,KAHAyrD,KAAAnD,WAAAlyC,KAAA,IAAApW,UAAAsoD,WAAA,KAAAtoD,UAIA,IAAAwrD,SAAAlD,WAIA,IADAzwC,IAAA2zC,MAAA1mD,MAAA,MACA,KAAA9E,UAGAyrD,KAAAnD,WAAAlyC,KAAA,IAAAyB,IAAA,KACAywC,WAAA,KAAAzwC,IAAA,KACA,EAGA,IAAA4zC,KACAA,KAAAnD,WAAAkD,QAGA,IAAAlD,WAAAkD,SACAxrD,QAAA6X,IAAA,GACAmvC,UAAAr1D,QAAAkmB,IAAA,KAEA,MAOA,IAAA,IAAA4zC,KAGA,GAAAA,MAAAznC,EAAA2nC,OACAT,SAAAO,KAAAP,eAEA,IACAA,SAAAO,KAAAP,UACA,MAAA5hE,GACA,MAAA,CACAqoB,MAAA,cACAvM,MAAAqmD,KAAAniE,EAAA,sBAAA8sB,KAAA,OAAApW,UASA,MAAA,CAAA2R,MAAA,UAAA1e,KAAAi4D,UA+cAU,CAAA5nC,EAAAknC,SAAAhE,MAAA+D,WAGAA,WAGAjnC,EAAA0mC,cACAS,SAAAjE,MAAA6C,kBAAA,oBAEAx5B,OAAAq3B,aAAAqB,UAAAkC,WAEAA,SAAAjE,MAAA6C,kBAAA,WAEAx5B,OAAAs3B,KAAAoB,UAAAkC,WAKA,MAAAf,QAAA,SAAApmC,EAAAl1B,KACAw7D,WAAA,YAGA,MAAAF,OACAE,WAAA,eAIAA,WAAAY,SAAAv5C,MACAk5C,QAAAK,SAAAj4D,KAEAg4D,YADA7lD,MAAA8lD,SAAA9lD,UAMAA,MAAAklD,YACAF,QAAAE,aACAA,WAAA,QACAF,OAAA,IACAA,OAAA,KAMAlD,MAAAkD,OAAAA,OACAlD,MAAAoD,YAAAS,kBAAAT,YAAA,GAGAW,UACAxlB,SAAAiB,YAAA8iB,gBAAA,CAAAqB,QAAAP,WAAApD,QAEAzhB,SAAAqB,WAAA0iB,gBAAA,CAAAtC,MAAAoD,WAAAllD,QAIA8hD,MAAAyC,WAAAA,YACAA,gBAAA15D,EAEAq5D,aACAG,mBAAAna,QAAA2b,UAAA,cAAA,YACA,CAAA/D,MAAAljC,EAAAinC,UAAAJ,QAAAzlD,QAIAskD,iBAAAtkB,SAAAokB,gBAAA,CAAAtC,MAAAoD,aAEAhB,cACAG,mBAAAna,QAAA,eAAA,CAAA4X,MAAAljC,MAGAuM,OAAAo3B,QACAp3B,OAAAqe,MAAAU,QAAA,cAKA,OAAA4X,OAGA2E,QAAA,SAAApnC,IAAAxxB,KAAA6Q,UACA,OAAAysB,OAAArS,IAAAuG,IAAAxxB,KAAA6Q,SAAA,SAGAgoD,UAAA,SAAArnC,IAAA3gB,UACA,OAAAysB,OAAArS,IAAAuG,SAAAx0B,EAAA6T,SAAA,aAIAysB,OAAAz+B,KAAA,CAAA,MAAA,QAAA,SAAA8gC,GAAA7Y,QACAwW,OAAAxW,QAAA,SAAA0K,IAAAxxB,KAAA6Q,SAAAhV,MAUA,OAPAoqB,WAAAjmB,QACAnE,KAAAA,MAAAgV,SACAA,SAAA7Q,KACAA,UAAAhD,GAIAsgC,OAAAw4B,KAAAx4B,OAAApkC,OAAA,CACAs4B,IAAAA,IACA31B,KAAAirB,OACAgtC,SAAAj4D,KACAmE,KAAAA,KACA43D,QAAA/mD,UACAysB,OAAAoB,cAAAlN,MAAAA,SAIA8L,OAAAs4B,cAAA,SAAA7kC,GACA,IAAAt6B,EACA,IAAAA,KAAAs6B,EAAA2mC,QACA,iBAAAjhE,EAAAkwB,gBACAoK,EAAAkkC,YAAAlkC,EAAA2mC,QAAAjhE,IAAA,MAMA6mC,OAAAglB,SAAA,SAAA9wB,IAAA35B,QAAA+kC,KACA,OAAAU,OAAAw4B,KAAA,CACAtkC,IAAAA,IAGA31B,KAAA,MACAi4D,SAAA,SACA/uB,OAAA,EACAiwB,OAAA,EACA9tC,QAAA,EAKAmuC,WAAA,CACAyD,cAAA,cAEAL,WAAA,SAAAR,UACA36B,OAAA2B,WAAAg5B,SAAApgE,QAAA+kC,SAMAU,OAAAtiC,GAAA9B,OAAA,CACA6/D,QAAA,SAAA1W,MACA,IAAAxkD,KAyBA,OAvBAzD,KAAA,KACA6rB,WAAAo8B,QACAA,KAAAA,KAAAlrD,KAAAiD,KAAA,KAIAyD,KAAAy/B,OAAA+kB,KAAAjoD,KAAA,GAAAgqC,eAAApG,GAAA,GAAAO,OAAA,GAEAnkC,KAAA,GAAA+iC,YACAt/B,KAAAklD,aAAA3oD,KAAA,IAGAyD,KAAA0N,IAAA,WAGA,IAFA,IAAAwyB,KAAA3jC,KAEA2jC,KAAAi7B,mBACAj7B,KAAAA,KAAAi7B,kBAGA,OAAAj7B,OACA1wB,OAAAjT,OAGAA,MAGA6+D,UAAA,SAAA5W,MACA,OAAAp8B,WAAAo8B,MACAjoD,KAAAyE,KAAA,SAAApI,GACA6mC,OAAAljC,MAAA6+D,UAAA5W,KAAAlrD,KAAAiD,KAAA3D,MAIA2D,KAAAyE,KAAA,WACA,IAAAkf,KAAAuf,OAAAljC,MACA2N,SAAAgW,KAAAhW,WAEAA,SAAA3Q,OACA2Q,SAAAgxD,QAAA1W,MAGAtkC,KAAA1Q,OAAAg1C,SAKAxkD,KAAA,SAAAwkD,MACA,IAAA6W,eAAAjzC,WAAAo8B,MAEA,OAAAjoD,KAAAyE,KAAA,SAAApI,GACA6mC,OAAAljC,MAAA2+D,QAAAG,eAAA7W,KAAAlrD,KAAAiD,KAAA3D,GAAA4rD,SAIA8W,OAAA,SAAA57B,UAIA,OAHAnjC,KAAA0O,OAAAy0B,UAAAgN,IAAA,QAAA1rC,KAAA,WACAy+B,OAAAljC,MAAA8oD,YAAA9oD,KAAAwpC,cAEAxpC,QAKAkjC,OAAA3sB,KAAA8wB,QAAA8pB,OAAA,SAAAxtB,MACA,OAAAT,OAAA3sB,KAAA8wB,QAAA23B,QAAAr7B,OAEAT,OAAA3sB,KAAA8wB,QAAA23B,QAAA,SAAAr7B,MACA,SAAAA,KAAAsnB,aAAAtnB,KAAAs7B,cAAAt7B,KAAAkqB,iBAAA7wD,SAMAkmC,OAAAm3B,aAAA6E,IAAA,WACA,IACA,OAAA,IAAAnyC,OAAAoyC,eACA,MAAAljE,MAGA,IAAAmjE,iBAAA,CAGAC,EAAA,IAIAC,KAAA,KAEAC,aAAAr8B,OAAAm3B,aAAA6E,MAEAj9B,QAAAu9B,OAAAD,cAAA,oBAAAA,aACAt9B,QAAAy5B,KAAA6D,eAAAA,aAEAr8B,OAAAu4B,cAAA,SAAAh+D,SACA,IAAAgZ,SAAAgpD,cAGA,GAAAx9B,QAAAu9B,MAAAD,eAAA9hE,QAAA0/D,YACA,MAAA,CACAM,KAAA,SAAAH,QAAA3K,UACA,IAAAt2D,EACA6iE,IAAAzhE,QAAAyhE,MAWA,GATAA,IAAAlyD,KACAvP,QAAAgE,KACAhE,QAAA25B,IACA35B,QAAAm9D,MACAn9D,QAAAiiE,SACAjiE,QAAA+zC,UAIA/zC,QAAAkiE,UACA,IAAAtjE,KAAAoB,QAAAkiE,UACAT,IAAA7iE,GAAAoB,QAAAkiE,UAAAtjE,GAmBA,IAAAA,KAdAoB,QAAAq/D,UAAAoC,IAAArC,kBACAqC,IAAArC,iBAAAp/D,QAAAq/D,UAQAr/D,QAAA0/D,aAAAG,QAAA,sBACAA,QAAA,oBAAA,kBAIAA,QACA4B,IAAAtC,iBAAAvgE,EAAAihE,QAAAjhE,IAIAoa,SAAA,SAAAhV,MACA,OAAA,WACAgV,WACAA,SAAAgpD,cAAAP,IAAAU,OACAV,IAAAW,QAAAX,IAAAY,QAAAZ,IAAAa,UACAb,IAAAc,mBAAA,KAEA,UAAAv+D,KACAy9D,IAAAlC,QACA,UAAAv7D,KAKA,iBAAAy9D,IAAAnC,OACApK,SAAA,EAAA,SAEAA,SAGAuM,IAAAnC,OACAmC,IAAAjC,YAIAtK,SACAyM,iBAAAF,IAAAnC,SAAAmC,IAAAnC,OACAmC,IAAAjC,WAKA,UAAAiC,IAAAe,cAAA,SACA,iBAAAf,IAAAgB,aACA,CAAAC,OAAAjB,IAAArB,UACA,CAAA/4C,KAAAo6C,IAAAgB,cACAhB,IAAAvC,4BAQAuC,IAAAU,OAAAnpD,WACAgpD,cAAAP,IAAAW,QAAAX,IAAAa,UAAAtpD,SAAA,cAKA7T,IAAAs8D,IAAAY,QACAZ,IAAAY,QAAAL,cAEAP,IAAAc,mBAAA,WAGA,IAAAd,IAAAtkB,YAMA7tB,OAAA4sB,WAAA,WACAljC,UACAgpD,mBAQAhpD,SAAAA,SAAA,SAEA,IAGAyoD,IAAAzB,KAAAhgE,QAAA2/D,YAAA3/D,QAAAmI,MAAA,MACA,MAAA3J,GAGA,GAAAwa,SACA,MAAAxa,IAKA+gE,MAAA,WACAvmD,UACAA,eAWAysB,OAAAs4B,cAAA,SAAA7kC,GACAA,EAAAwmC,cACAxmC,EAAAhpB,SAAA80B,QAAA,KAKAS,OAAAo4B,UAAA,CACAR,QAAA,CACAr4B,OAAA,6FAGA90B,SAAA,CACA80B,OAAA,2BAEAw4B,WAAA,CACAyD,cAAA,SAAA55C,MAEA,OADAoe,OAAA2B,WAAA/f,MACAA,SAMAoe,OAAAs4B,cAAA,SAAA,SAAA7kC,QACA/zB,IAAA+zB,EAAAgU,QACAhU,EAAAgU,OAAA,GAEAhU,EAAAwmC,cACAxmC,EAAAl1B,KAAA,SAKAyhC,OAAAu4B,cAAA,SAAA,SAAA9kC,GAIA,IAAA8L,OAAAhsB,SADA,GAAAkgB,EAAAwmC,aAAAxmC,EAAAypC,YAEA,MAAA,CACA3C,KAAA,SAAAzmB,EAAA2b,UACAlwB,OAAAS,OAAA,YACA+K,KAAAtX,EAAAypC,aAAA,IACAvkB,KAAA,CAAAwkB,QAAA1pC,EAAA2pC,cAAAt8D,IAAA2yB,EAAAS,MACAgqB,GAAA,aAAA3qC,SAAA,SAAA8pD,KACA99B,OAAAmV,SACAnhC,SAAA,KACA8pD,KACA5N,SAAA,UAAA4N,IAAA9+D,KAAA,IAAA,IAAA8+D,IAAA9+D,QAKA6/B,SAAAuB,KAAAC,YAAAL,OAAA,KAEAu6B,MAAA,WACAvmD,UACAA,eAUA,IAqGA9N,KArGA63D,aAAA,GACAC,OAAA,oBAGAv9B,OAAAo4B,UAAA,CACAoF,MAAA,WACAC,cAAA,WACA,IAAAlqD,SAAA+pD,aAAA5rD,OAAAsuB,OAAAqB,QAAA,IAAAlC,MAAA56B,OAEA,OADAzH,KAAAyW,WAAA,EACAA,YAKAysB,OAAAs4B,cAAA,aAAA,SAAA7kC,EAAAiqC,iBAAA/G,OAEA,IAAAgH,aAAAC,YAAAC,kBACAC,UAAA,IAAArqC,EAAA+pC,QAAAD,OAAA3+D,KAAA60B,EAAAS,KACA,MACA,iBAAAT,EAAA/wB,MAEA,KADA+wB,EAAAkkC,aAAA,IACAruD,QAAA,sCACAi0D,OAAA3+D,KAAA60B,EAAA/wB,OAAA,QAIA,GAAAo7D,UAAA,UAAArqC,EAAAgjC,UAAA,GA8DA,OA3DAkH,aAAAlqC,EAAAgqC,cAAA90C,WAAA8K,EAAAgqC,eACAhqC,EAAAgqC,gBACAhqC,EAAAgqC,cAGAK,SACArqC,EAAAqqC,UAAArqC,EAAAqqC,UAAA97D,QAAAu7D,OAAA,KAAAI,eACA,IAAAlqC,EAAA+pC,QACA/pC,EAAAS,MAAA4gC,OAAAl2D,KAAA60B,EAAAS,KAAA,IAAA,KAAAT,EAAA+pC,MAAA,IAAAG,cAIAlqC,EAAAskC,WAAA,eAAA,WAIA,OAHA8F,mBACA79B,OAAAnrB,MAAA8oD,aAAA,mBAEAE,kBAAA,IAIApqC,EAAAgjC,UAAA,GAAA,OAGAmH,YAAA/zC,OAAA8zC,cACA9zC,OAAA8zC,cAAA,WACAE,kBAAAl8D,WAIAg1D,MAAA1hB,OAAA,gBAGAv1C,IAAAk+D,YACA59B,OAAAnW,QAAAkpC,WAAA4K,cAIA9zC,OAAA8zC,cAAAC,YAIAnqC,EAAAkqC,gBAGAlqC,EAAAgqC,cAAAC,iBAAAD,cAGAH,aAAAh9D,KAAAq9D,eAIAE,mBAAAl1C,WAAAi1C,cACAA,YAAAC,kBAAA,IAGAA,kBAAAD,iBAAAl+D,IAIA,WAYAq/B,QAAAg/B,qBACAt4D,KAAA24B,SAAA4/B,eAAAD,mBAAA,IAAAt4D,MACAskC,UAAA,6BACA,IAAAtkC,KAAA6gC,WAAAxsC,QAQAkmC,OAAAoS,UAAA,SAAA1vC,KAAAQ,QAAA+6D,aACA,MAAA,iBAAAv7D,KACA,IAEA,kBAAAQ,UACA+6D,YAAA/6D,QACAA,SAAA,GAKAA,UAIA67B,QAAAg/B,qBAMAxiE,MALA2H,QAAAk7B,SAAA4/B,eAAAD,mBAAA,KAKAv+B,cAAA,SACAiO,KAAArP,SAAAhyB,SAAAqhC,KACAvqC,QAAAy8B,KAAAC,YAAArkC,OAEA2H,QAAAk7B,UAKA+e,SAAA8gB,aAAA,IADA//B,OAAA6T,WAAAlrB,KAAAnkB,OAKA,CAAAQ,QAAAs8B,cAAAtB,OAAA,MAGAA,OAAAgf,cAAA,CAAAx6C,MAAAQ,QAAAi6C,SAEAA,SAAAA,QAAArjD,QACAkmC,OAAAmd,SAAAzI,SAGA1U,OAAA3+B,MAAA,GAAA68B,OAAAoI,cAlCA,IAAA/qC,KAAA2iC,OAAAif,SAyCAnd,OAAAtiC,GAAAyjD,KAAA,SAAAjtB,IAAA11B,OAAA+U,UACA,IAAA0sB,SAAA1hC,KAAAo8D,SACAl6C,KAAA3jB,KACAwhD,IAAApqB,IAAA5qB,QAAA,KAsDA,OApDA,EAAAg1C,MACAre,SAAA2yB,iBAAA1+B,IAAAzwB,MAAA66C,MACApqB,IAAAA,IAAAzwB,MAAA,EAAA66C,MAIA31B,WAAAnqB,SAGA+U,SAAA/U,OACAA,YAAAkB,GAGAlB,QAAA,iBAAAA,SACAD,KAAA,QAIA,EAAAkiB,KAAA3mB,QACAkmC,OAAAw4B,KAAA,CACAtkC,IAAAA,IAKA31B,KAAAA,MAAA,MACAi4D,SAAA,OACA9zD,KAAAlE,SACA2jB,KAAA,SAAA66C,cAGArC,SAAAh5D,UAEA8e,KAAAskC,KAAA9kB,SAIAD,OAAA,SAAAjwB,OAAAiwB,OAAAoS,UAAA4qB,eAAApzB,KAAA3J,UAGA+8B,gBAKA/nB,OAAA1hC,UAAA,SAAAojD,MAAAkD,QACAp5C,KAAAlf,KAAA,WACAgS,SAAAjG,MAAAxQ,KAAA69D,UAAA,CAAAhE,MAAAqG,aAAAnD,OAAAlD,YAKA75D,MAMAkjC,OAAA3sB,KAAA8wB,QAAA+5B,SAAA,SAAAz9B,MACA,OAAAT,OAAAY,KAAAZ,OAAAkxB,OAAA,SAAAxzD,IACA,OAAA+iC,OAAA/iC,GAAA+iC,OACA3mC,QAMAkmC,OAAA1d,OAAA,CACA67C,UAAA,SAAA19B,KAAAlmC,QAAApB,GACA,IAAAilE,YAAAC,QAAAC,UAAAC,OAAAC,UAAAC,WACA5W,SAAA7nB,OAAAwa,IAAA/Z,KAAA,YACAi+B,QAAA1+B,OAAAS,MACAvZ,MAAA,GAGA,WAAA2gC,WACApnB,KAAA6Z,MAAAuN,SAAA,YAGA2W,UAAAE,QAAAp8C,SACAg8C,UAAAt+B,OAAAwa,IAAA/Z,KAAA,OACAg+B,WAAAz+B,OAAAwa,IAAA/Z,KAAA,QASA49B,SARA,aAAAxW,UAAA,UAAAA,YACA,GAAAyW,UAAAG,YAAAn1D,QAAA,SAMAi1D,QADAH,YAAAM,QAAA7W,YACAl0C,IACAyqD,YAAA5R,OAGA+R,OAAAtW,WAAAqW,YAAA,EACArW,WAAAwW,aAAA,GAGA91C,WAAApuB,WAGAA,QAAAA,QAAAV,KAAA4mC,KAAAtnC,EAAA6mC,OAAApkC,OAAA,GAAA4iE,aAGA,MAAAjkE,QAAAoZ,MACAuT,MAAAvT,IAAApZ,QAAAoZ,IAAA6qD,UAAA7qD,IAAA4qD,QAEA,MAAAhkE,QAAAiyD,OACAtlC,MAAAslC,KAAAjyD,QAAAiyD,KAAAgS,UAAAhS,KAAA6R,SAGA,UAAA9jE,QACAA,QAAAokE,MAAA9kE,KAAA4mC,KAAAvZ,QAGA,iBAAAA,MAAAvT,MACAuT,MAAAvT,KAAA,MAEA,iBAAAuT,MAAAslC,OACAtlC,MAAAslC,MAAA,MAEAkS,QAAAlkB,IAAAtzB,UAKA8Y,OAAAtiC,GAAA9B,OAAA,CAGA0mB,OAAA,SAAA/nB,SAGA,GAAAoH,UAAA7H,OACA,YAAA4F,IAAAnF,QACAuC,KACAA,KAAAyE,KAAA,SAAApI,GACA6mC,OAAA1d,OAAA67C,UAAArhE,KAAAvC,QAAApB,KAIA,IAAAylE,KAAAC,IACAp+B,KAAA3jC,KAAA,GAEA,OAAA2jC,KAQAA,KAAAkqB,iBAAA7wD,QAKA8kE,KAAAn+B,KAAA6rB,wBACAuS,IAAAp+B,KAAAqG,cAAAqC,YACA,CACAx1B,IAAAirD,KAAAjrD,IAAAkrD,IAAAC,YACAtS,KAAAoS,KAAApS,KAAAqS,IAAAE,cARA,CAAAprD,IAAA,EAAA64C,KAAA,QATA,GAuBA3E,SAAA,WACA,GAAA/qD,KAAA,GAAA,CAIA,IAAAkiE,aAAA18C,OAAAgd,IACAmB,KAAA3jC,KAAA,GACAmiE,aAAA,CAAAtrD,IAAA,EAAA64C,KAAA,GAGA,GAAA,UAAAxsB,OAAAwa,IAAA/Z,KAAA,YAGAne,OAAAme,KAAA6rB,4BAEA,CAOA,IANAhqC,OAAAxlB,KAAAwlB,SAIAgd,IAAAmB,KAAAqG,cACAk4B,aAAAv+B,KAAAu+B,cAAA1/B,IAAA0J,gBACAg2B,eACAA,eAAA1/B,IAAA75B,MAAAu5D,eAAA1/B,IAAA0J,kBACA,WAAAhJ,OAAAwa,IAAAwkB,aAAA,aAEAA,aAAAA,aAAAn/B,WAEAm/B,cAAAA,eAAAv+B,MAAA,IAAAu+B,aAAAhgC,YAGAigC,aAAAj/B,OAAAg/B,cAAA18C,UACA3O,KAAAqsB,OAAAwa,IAAAwkB,aAAA,kBAAA,GACAC,aAAAzS,MAAAxsB,OAAAwa,IAAAwkB,aAAA,mBAAA,IAKA,MAAA,CACArrD,IAAA2O,OAAA3O,IAAAsrD,aAAAtrD,IAAAqsB,OAAAwa,IAAA/Z,KAAA,aAAA,GACA+rB,KAAAlqC,OAAAkqC,KAAAyS,aAAAzS,KAAAxsB,OAAAwa,IAAA/Z,KAAA,cAAA,MAcAu+B,aAAA,WACA,OAAAliE,KAAAmR,IAAA,WAGA,IAFA,IAAA+wD,aAAAliE,KAAAkiE,aAEAA,cAAA,WAAAh/B,OAAAwa,IAAAwkB,aAAA,aACAA,aAAAA,aAAAA,aAGA,OAAAA,cAAAh2B,qBAMAhJ,OAAAz+B,KAAA,CAAAgsD,WAAA,cAAAD,UAAA,eAAA,SAAA9jC,OAAAmvB,MACA,IAAAhlC,IAAA,gBAAAglC,KAEA3Y,OAAAtiC,GAAA8rB,QAAA,SAAAtgB,KACA,OAAA0uC,OAAA96C,KAAA,SAAA2jC,KAAAjX,OAAAtgB,KAGA,IAAA21D,IAOA,GANA5/B,SAAAwB,MACAo+B,IAAAp+B,KACA,IAAAA,KAAAzB,WACA6/B,IAAAp+B,KAAA0I,kBAGAzpC,IAAAwJ,IACA,OAAA21D,IAAAA,IAAAlmB,MAAAlY,KAAAjX,QAGAq1C,IACAA,IAAAK,SACAvrD,IAAAkrD,IAAAE,YAAA71D,IACAyK,IAAAzK,IAAA21D,IAAAC,aAIAr+B,KAAAjX,QAAAtgB,KAEAsgB,OAAAtgB,IAAAvH,UAAA7H,WAUAkmC,OAAAz+B,KAAA,CAAA,MAAA,QAAA,SAAA8gC,GAAAsW,MACA3Y,OAAA8qB,SAAAnS,MAAAqO,aAAAjoB,QAAAupB,cACA,SAAA7nB,KAAAimB,UACA,GAAAA,SAIA,OAHAA,SAAAD,OAAAhmB,KAAAkY,MAGAwN,UAAAvnD,KAAA8nD,UACA1mB,OAAAS,MAAAonB,WAAAlP,MAAA,KACA+N,aAQA1mB,OAAAz+B,KAAA,CAAA49D,OAAA,SAAAC,MAAA,SAAA,SAAA3hE,KAAAc,MACAyhC,OAAAz+B,KAAA,CAAAijB,QAAA,QAAA/mB,KAAA6J,QAAA/I,KAAA8gE,GAAA,QAAA5hE,MACA,SAAA6hE,aAAAC,UAGAv/B,OAAAtiC,GAAA6hE,UAAA,SAAA9S,OAAAnqD,OACA,IAAAu1C,UAAAl2C,UAAA7H,SAAAwlE,cAAA,kBAAA7S,QACApC,MAAAiV,gBAAA,IAAA7S,SAAA,IAAAnqD,MAAA,SAAA,UAEA,OAAAs1C,OAAA96C,KAAA,SAAA2jC,KAAAliC,KAAA+D,OACA,IAAAg9B,IAEA,OAAAL,SAAAwB,MAGA,IAAA8+B,SAAAj2D,QAAA,SACAm3B,KAAA,QAAAhjC,MACAgjC,KAAArC,SAAA4K,gBAAA,SAAAvrC,MAIA,IAAAgjC,KAAAzB,UACAM,IAAAmB,KAAAuI,gBAIAnZ,KAAAi6B,IACArpB,KAAAh7B,KAAA,SAAAhI,MAAA6hC,IAAA,SAAA7hC,MACAgjC,KAAAh7B,KAAA,SAAAhI,MAAA6hC,IAAA,SAAA7hC,MACA6hC,IAAA,SAAA7hC,aAIAiC,IAAA4C,MAGA09B,OAAAwa,IAAA/Z,KAAAliC,KAAA8rD,OAGArqB,OAAAsa,MAAA7Z,KAAAliC,KAAA+D,MAAA+nD,QACA9rD,KAAAs5C,UAAA4U,YAAA/sD,EAAAm4C,gBAMA7X,OAAAz+B,KAAA,CACA,YACA,WACA,eACA,YACA,cACA,YACA,SAAA8gC,GAAA9jC,MACAyhC,OAAAtiC,GAAAa,MAAA,SAAAb,IACA,OAAAZ,KAAAohD,GAAA3/C,KAAAb,OAOAsiC,OAAAtiC,GAAA9B,OAAA,CAEA4zD,KAAA,SAAAl+C,MAAA5O,KAAAhF,IACA,OAAAZ,KAAAohD,GAAA5sC,MAAA,KAAA5O,KAAAhF,KAEA8hE,OAAA,SAAAluD,MAAA5T,IACA,OAAAZ,KAAAwhD,IAAAhtC,MAAA,KAAA5T,KAGA+hE,SAAA,SAAAx/B,SAAA3uB,MAAA5O,KAAAhF,IACA,OAAAZ,KAAAohD,GAAA5sC,MAAA2uB,SAAAv9B,KAAAhF,KAEAgiE,WAAA,SAAAz/B,SAAA3uB,MAAA5T,IAGA,OAAA,IAAAiE,UAAA7H,OACAgD,KAAAwhD,IAAAre,SAAA,MACAnjC,KAAAwhD,IAAAhtC,MAAA2uB,UAAA,KAAAviC,KAGAiiE,MAAA,SAAAC,OAAAC,OACA,OAAA/iE,KAAA4mD,WAAAkc,QAAAjc,WAAAkc,OAAAD,WAIA5/B,OAAAz+B,KAAA,wLAEAgT,MAAA,KACA,SAAA8tB,GAAA5kC,MAGAuiC,OAAAtiC,GAAAD,MAAA,SAAAiF,KAAAhF,IACA,OAAA,EAAAiE,UAAA7H,OACAgD,KAAAohD,GAAAzgD,KAAA,KAAAiF,KAAAhF,IACAZ,KAAAiiD,QAAAthD,SASA,IAAA6mC,MAAA,qCAMAtE,OAAA8/B,MAAA,SAAApiE,GAAAwF,SACA,IAAAokB,IAAAjjB,KAAAy7D,MAUA,GARA,iBAAA58D,UACAokB,IAAA5pB,GAAAwF,SACAA,QAAAxF,GACAA,GAAA4pB,KAKAqB,WAAAjrB,IAaA,OARA2G,KAAAZ,MAAA5J,KAAA8H,UAAA,IACAm+D,MAAA,WACA,OAAApiE,GAAA4P,MAAApK,SAAApG,KAAAuH,KAAAiK,OAAA7K,MAAA5J,KAAA8H,eAIA4C,KAAA7G,GAAA6G,KAAA7G,GAAA6G,MAAAy7B,OAAAz7B,OAEAu7D,OAGA9/B,OAAA+/B,UAAA,SAAAC,MACAA,KACAhgC,OAAAwX,YAEAxX,OAAAmS,OAAA,IAGAnS,OAAA7/B,QAAA2hB,MAAA3hB,QACA6/B,OAAAigC,UAAAv0D,KAAAxQ,MACA8kC,OAAAoG,SAAAA,SACApG,OAAArX,WAAAA,WACAqX,OAAAf,SAAAA,SACAe,OAAAsY,UAAAA,UACAtY,OAAAzhC,KAAAwhC,OAEAC,OAAA4hB,IAAAve,KAAAue,IAEA5hB,OAAAkgC,UAAA,SAAAh+D,KAKA,IAAA3D,KAAAyhC,OAAAzhC,KAAA2D,KACA,OAAA,WAAA3D,MAAA,WAAAA,QAKA4hE,MAAAj+D,IAAA+lD,WAAA/lD,OAGA89B,OAAAogC,KAAA,SAAAx+C,MACA,OAAA,MAAAA,KACA,IACAA,KAAA,IAAA5f,QAAAsiC,MAAA,KAkBA,mBAAA3kC,QAAAA,OAAAC,KACAD,OAAA,SAAA,GAAA,WACA,OAAAqgC,SAOA,IAGAqgC,QAAAx2C,OAAAmW,OAGArkB,GAAAkO,OAAAhO,EAwBA,OAtBAmkB,OAAAjW,WAAA,SAAAoX,MASA,OARAtX,OAAAhO,IAAAmkB,SACAnW,OAAAhO,EAAAF,IAGAwlB,MAAAtX,OAAAmW,SAAAA,SACAnW,OAAAmW,OAAAqgC,SAGArgC,aAMA,IAAA1B,WACAzU,OAAAmW,OAAAnW,OAAAhO,EAAAmkB,QAMAA,mDCtnVA,IAIAsgC,SAJAhnE,QAAA,eAIAinE,CAHAjnE,QAAA,WAGA,YAEAU,OAAAJ,QAAA0mE,mFCNA,IAAAE,UAAAlnE,QAAA,gBACAmnE,WAAAnnE,QAAA,iBACAonE,QAAApnE,QAAA,cACAqnE,QAAArnE,QAAA,cACAsnE,QAAAtnE,QAAA,cASA,SAAAoP,KAAAnG,SACA,IAAA4Q,OAAA,EACArZ,OAAA,MAAAyI,QAAA,EAAAA,QAAAzI,OAGA,IADAgD,KAAA+jE,UACA1tD,MAAArZ,QAAA,CACA,IAAAga,MAAAvR,QAAA4Q,OACArW,KAAAswB,IAAAtZ,MAAA,GAAAA,MAAA,KAKApL,KAAAvL,UAAA0jE,MAAAL,UACA93D,KAAAvL,UAAA,OAAAsjE,WACA/3D,KAAAvL,UAAAwwB,IAAA+yC,QACAh4D,KAAAvL,UAAAwvB,IAAAg0C,QACAj4D,KAAAvL,UAAAiwB,IAAAwzC,QAEA5mE,OAAAJ,QAAA8O,wIC/BA,IAAAo4D,WAAAxnE,QAAA,iBACAynE,WAAAznE,QAAA,iBAYA,SAAA0nE,YAAA1+D,OACAxF,KAAAmkE,YAAA3+D,MACAxF,KAAAokE,YAAA,GACApkE,KAAAqkE,QAAA,EACArkE,KAAAskE,cAAA,EACAtkE,KAAAukE,cAAA,GACAvkE,KAAAwkE,cAfA,WAgBAxkE,KAAAykE,UAAA,IAIAP,YAAA7jE,UAAA2jE,WAAAC,WAAA5jE,YACAC,YAAA4jE,YAEAhnE,OAAAJ,QAAAonE,4FC3BA,IAAAQ,eAAAloE,QAAA,qBACAmoE,gBAAAnoE,QAAA,sBACAooE,aAAApoE,QAAA,mBACAqoE,aAAAroE,QAAA,mBACAsoE,aAAAtoE,QAAA,mBASA,SAAAuoE,UAAAt/D,SACA,IAAA4Q,OAAA,EACArZ,OAAA,MAAAyI,QAAA,EAAAA,QAAAzI,OAGA,IADAgD,KAAA+jE,UACA1tD,MAAArZ,QAAA,CACA,IAAAga,MAAAvR,QAAA4Q,OACArW,KAAAswB,IAAAtZ,MAAA,GAAAA,MAAA,KAKA+tD,UAAA1kE,UAAA0jE,MAAAW,eACAK,UAAA1kE,UAAA,OAAAskE,gBACAI,UAAA1kE,UAAAwwB,IAAA+zC,aACAG,UAAA1kE,UAAAwvB,IAAAg1C,aACAE,UAAA1kE,UAAAiwB,IAAAw0C,aAEA5nE,OAAAJ,QAAAioE,sKC/BA,IAAAf,WAAAxnE,QAAA,iBACAynE,WAAAznE,QAAA,iBASA,SAAAwoE,cAAAx/D,MAAAy/D,UACAjlE,KAAAmkE,YAAA3+D,MACAxF,KAAAokE,YAAA,GACApkE,KAAAklE,YAAAD,SACAjlE,KAAAmlE,UAAA,EACAnlE,KAAAolE,gBAAAxiE,GAGAoiE,cAAA3kE,UAAA2jE,WAAAC,WAAA5jE,YACAC,YAAA0kE,cAEA9nE,OAAAJ,QAAAkoE,8FCrBA,IAIAj1C,IAJAvzB,QAAA,eAIAinE,CAHAjnE,QAAA,WAGA,OAEAU,OAAAJ,QAAAizB,8ECNA,IAAAs1C,cAAA7oE,QAAA,oBACA8oE,eAAA9oE,QAAA,qBACA+oE,YAAA/oE,QAAA,kBACAgpE,YAAAhpE,QAAA,kBACAipE,YAAAjpE,QAAA,kBASA,SAAAkpE,SAAAjgE,SACA,IAAA4Q,OAAA,EACArZ,OAAA,MAAAyI,QAAA,EAAAA,QAAAzI,OAGA,IADAgD,KAAA+jE,UACA1tD,MAAArZ,QAAA,CACA,IAAAga,MAAAvR,QAAA4Q,OACArW,KAAAswB,IAAAtZ,MAAA,GAAAA,MAAA,KAKA0uD,SAAArlE,UAAA0jE,MAAAsB,cACAK,SAAArlE,UAAA,OAAAilE,eACAI,SAAArlE,UAAAwwB,IAAA00C,YACAG,SAAArlE,UAAAwvB,IAAA21C,YACAE,SAAArlE,UAAAiwB,IAAAm1C,YAEAvoE,OAAAJ,QAAA4oE,gKC/BA,IAIAC,QAJAnpE,QAAA,eAIAinE,CAHAjnE,QAAA,WAGA,WAEAU,OAAAJ,QAAA6oE,kFCNA,IAIAC,IAJAppE,QAAA,eAIAinE,CAHAjnE,QAAA,WAGA,OAEAU,OAAAJ,QAAA8oE,8ECNA,IAAAF,SAAAlpE,QAAA,eACAqpE,YAAArpE,QAAA,kBACAspE,YAAAtpE,QAAA,kBAUA,SAAAupE,SAAAxxD,QACA,IAAA8B,OAAA,EACArZ,OAAA,MAAAuX,OAAA,EAAAA,OAAAvX,OAGA,IADAgD,KAAAgmE,SAAA,IAAAN,WACArvD,MAAArZ,QACAgD,KAAAiE,IAAAsQ,OAAA8B,QAKA0vD,SAAA1lE,UAAA4D,IAAA8hE,SAAA1lE,UAAAmD,KAAAqiE,YACAE,SAAA1lE,UAAAwvB,IAAAi2C,YAEA5oE,OAAAJ,QAAAipE,6GC1BA,IAAAhB,UAAAvoE,QAAA,gBACAypE,WAAAzpE,QAAA,iBACA0pE,YAAA1pE,QAAA,kBACA2pE,SAAA3pE,QAAA,eACA4pE,SAAA5pE,QAAA,eACA6pE,SAAA7pE,QAAA,eASA,SAAA8pE,MAAA7gE,SACA,IAAAG,KAAA5F,KAAAgmE,SAAA,IAAAjB,UAAAt/D,SACAzF,KAAAuwB,KAAA3qB,KAAA2qB,KAIA+1C,MAAAjmE,UAAA0jE,MAAAkC,WACAK,MAAAjmE,UAAA,OAAA6lE,YACAI,MAAAjmE,UAAAwwB,IAAAs1C,SACAG,MAAAjmE,UAAAwvB,IAAAu2C,SACAE,MAAAjmE,UAAAiwB,IAAA+1C,SAEAnpE,OAAAJ,QAAAwpE,gKC1BA,IAGAjhC,OAHA7oC,QAAA,WAGA6oC,OAEAnoC,OAAAJ,QAAAuoC,8DCLA,IAGAkhC,WAHA/pE,QAAA,WAGA+pE,WAEArpE,OAAAJ,QAAAypE,kECLA,IAIAC,QAJAhqE,QAAA,eAIAinE,CAHAjnE,QAAA,WAGA,WAEAU,OAAAJ,QAAA0pE,kFCcAtpE,OAAAJ,QAVA,SAAAm7C,KAAAwuB,QAAAl/D,MACA,OAAAA,KAAAvK,QACA,KAAA,EAAA,OAAAi7C,KAAAl7C,KAAA0pE,SACA,KAAA,EAAA,OAAAxuB,KAAAl7C,KAAA0pE,QAAAl/D,KAAA,IACA,KAAA,EAAA,OAAA0wC,KAAAl7C,KAAA0pE,QAAAl/D,KAAA,GAAAA,KAAA,IACA,KAAA,EAAA,OAAA0wC,KAAAl7C,KAAA0pE,QAAAl/D,KAAA,GAAAA,KAAA,GAAAA,KAAA,IAEA,OAAA0wC,KAAAznC,MAAAi2D,QAAAl/D,iDCIArK,OAAAJ,QAZA,SAAA4rB,MAAAg+C,UAIA,IAHA,IAAArwD,OAAA,EACArZ,OAAA,MAAA0rB,MAAA,EAAAA,MAAA1rB,SAEAqZ,MAAArZ,SACA,IAAA0pE,SAAAh+C,MAAArS,OAAAA,MAAAqS,SAIA,OAAAA,iDCMAxrB,OAAAJ,QAfA,SAAA4rB,MAAAi+C,WAMA,IALA,IAAAtwD,OAAA,EACArZ,OAAA,MAAA0rB,MAAA,EAAAA,MAAA1rB,OACA4pE,SAAA,EACAr+D,OAAA,KAEA8N,MAAArZ,QAAA,CACA,IAAAwI,MAAAkjB,MAAArS,OACAswD,UAAAnhE,MAAA6Q,MAAAqS,SACAngB,OAAAq+D,YAAAphE,OAGA,OAAA+C,kDCrBA,IAAAs+D,YAAArqE,QAAA,kBAgBAU,OAAAJ,QALA,SAAA4rB,MAAAljB,OAEA,QADA,MAAAkjB,QAAAA,MAAA1rB,UACA,EAAA6pE,YAAAn+C,MAAAljB,MAAA,iECQAtI,OAAAJ,QAZA,SAAA4rB,MAAAljB,MAAAkvB,YAIA,IAHA,IAAAre,OAAA,EACArZ,OAAA,MAAA0rB,MAAA,EAAAA,MAAA1rB,SAEAqZ,MAAArZ,QACA,GAAA03B,WAAAlvB,MAAAkjB,MAAArS,QACA,OAAA,EAGA,OAAA,6CClBA,IAAAywD,UAAAtqE,QAAA,gBACAuqE,YAAAvqE,QAAA,iBACA6G,QAAA7G,QAAA,aACAwqE,SAAAxqE,QAAA,cACAyqE,QAAAzqE,QAAA,cACA0qE,aAAA1qE,QAAA,kBAMA+I,eAHAqlB,OAAAvqB,UAGAkF,eAqCArI,OAAAJ,QA3BA,SAAA0I,MAAA2hE,WACA,IAAAC,MAAA/jE,QAAAmC,OACA6hE,OAAAD,OAAAL,YAAAvhE,OACA8hE,QAAAF,QAAAC,OAAAL,SAAAxhE,OACA+hE,QAAAH,QAAAC,QAAAC,QAAAJ,aAAA1hE,OACAgiE,YAAAJ,OAAAC,OAAAC,QAAAC,OACAh/D,OAAAi/D,YAAAV,UAAAthE,MAAAxI,OAAAq5B,QAAA,GACAr5B,OAAAuL,OAAAvL,OAEA,IAAA,IAAAsI,OAAAE,OACA2hE,YAAA5hE,eAAAxI,KAAAyI,MAAAF,MACAkiE,cAEA,UAAAliE,KAEAgiE,SAAA,UAAAhiE,KAAA,UAAAA,MAEAiiE,SAAA,UAAAjiE,KAAA,cAAAA,KAAA,cAAAA,MAEA2hE,QAAA3hE,IAAAtI,UAEAuL,OAAA/E,KAAA8B,KAGA,OAAAiD,+JCzBArL,OAAAJ,QAXA,SAAA4rB,MAAAg+C,UAKA,IAJA,IAAArwD,OAAA,EACArZ,OAAA,MAAA0rB,MAAA,EAAAA,MAAA1rB,OACAuL,OAAAyc,MAAAhoB,UAEAqZ,MAAArZ,QACAuL,OAAA8N,OAAAqwD,SAAAh+C,MAAArS,OAAAA,MAAAqS,OAEA,OAAAngB,kDCEArL,OAAAJ,QAXA,SAAA4rB,MAAAnU,QAKA,IAJA,IAAA8B,OAAA,EACArZ,OAAAuX,OAAAvX,OACAwoB,OAAAkD,MAAA1rB,SAEAqZ,MAAArZ,QACA0rB,MAAAlD,OAAAnP,OAAA9B,OAAA8B,OAEA,OAAAqS,iDCSAxrB,OAAAJ,QAbA,SAAA4rB,MAAAg+C,SAAAe,YAAAC,WACA,IAAArxD,OAAA,EACArZ,OAAA,MAAA0rB,MAAA,EAAAA,MAAA1rB,OAKA,IAHA0qE,WAAA1qE,SACAyqE,YAAA/+C,QAAArS,UAEAA,MAAArZ,QACAyqE,YAAAf,SAAAe,YAAA/+C,MAAArS,OAAAA,MAAAqS,OAEA,OAAA++C,uDCAAvqE,OAAAJ,QAZA,SAAA4rB,MAAAi+C,WAIA,IAHA,IAAAtwD,OAAA,EACArZ,OAAA,MAAA0rB,MAAA,EAAAA,MAAA1rB,SAEAqZ,MAAArZ,QACA,GAAA2pE,UAAAj+C,MAAArS,OAAAA,MAAAqS,OACA,OAAA,EAGA,OAAA,6CCnBA,IASAi/C,UATAnrE,QAAA,kBASAorE,CAAA,UAEA1qE,OAAAJ,QAAA6qE,yECAAzqE,OAAAJ,QAJA,SAAAuO,QACA,OAAAA,OAAAoM,MAAA,+CCPA,IAAAowD,YAAA,4CAaA3qE,OAAAJ,QAJA,SAAAuO,QACA,OAAAA,OAAA0Z,MAAA8iD,cAAA,8CCXA,IAAAC,gBAAAtrE,QAAA,sBACAonC,GAAApnC,QAAA,QAMA+I,eAHAqlB,OAAAvqB,UAGAkF,eAoBArI,OAAAJ,QARA,SAAA6rB,OAAArjB,IAAAE,OACA,IAAAuiE,SAAAp/C,OAAArjB,KACAC,eAAAxI,KAAA4rB,OAAArjB,MAAAs+B,GAAAmkC,SAAAviE,cACA5C,IAAA4C,OAAAF,OAAAqjB,SACAm/C,gBAAAn/C,OAAArjB,IAAAE,oFCvBA,IAAAo+B,GAAApnC,QAAA,QAoBAU,OAAAJ,QAVA,SAAA4rB,MAAApjB,KAEA,IADA,IAAAtI,OAAA0rB,MAAA1rB,OACAA,UACA,GAAA4mC,GAAAlb,MAAA1rB,QAAA,GAAAsI,KACA,OAAAtI,OAGA,OAAA,uDCjBA,IAAAgrE,WAAAxrE,QAAA,iBACAkgC,KAAAlgC,QAAA,UAeAU,OAAAJ,QAJA,SAAA6rB,OAAA/kB,QACA,OAAA+kB,QAAAq/C,WAAApkE,OAAA84B,KAAA94B,QAAA+kB,mFCbA,IAAAq/C,WAAAxrE,QAAA,iBACAyrE,OAAAzrE,QAAA,YAeAU,OAAAJ,QAJA,SAAA6rB,OAAA/kB,QACA,OAAA+kB,QAAAq/C,WAAApkE,OAAAqkE,OAAArkE,QAAA+kB,qFCbA,IAAAkC,eAAAruB,QAAA,qBAwBAU,OAAAJ,QAbA,SAAA6rB,OAAArjB,IAAAE,OACA,aAAAF,KAAAulB,eACAA,eAAAlC,OAAArjB,IAAA,CACAqyB,cAAA,EACA7M,YAAA,EACAtlB,MAAAA,MACA4+C,UAAA,IAGAz7B,OAAArjB,KAAAE,wECCAtI,OAAAJ,QAZA,SAAAyO,OAAA28D,MAAAC,OASA,OARA58D,QAAAA,cACA3I,IAAAulE,QACA58D,OAAAA,QAAA48D,MAAA58D,OAAA48D,YAEAvlE,IAAAslE,QACA38D,OAAA28D,OAAA38D,OAAAA,OAAA28D,QAGA38D,kDClBA,IAAA+6D,MAAA9pE,QAAA,YACA4rE,UAAA5rE,QAAA,gBACA6rE,YAAA7rE,QAAA,kBACA8rE,WAAA9rE,QAAA,iBACA+rE,aAAA/rE,QAAA,mBACAgsE,YAAAhsE,QAAA,kBACAisE,UAAAjsE,QAAA,gBACAksE,YAAAlsE,QAAA,kBACAmsE,cAAAnsE,QAAA,oBACAosE,WAAApsE,QAAA,iBACAqsE,aAAArsE,QAAA,mBACAssE,OAAAtsE,QAAA,aACAusE,eAAAvsE,QAAA,qBACAwsE,eAAAxsE,QAAA,qBACAysE,gBAAAzsE,QAAA,sBACA6G,QAAA7G,QAAA,aACAwqE,SAAAxqE,QAAA,cACA0sE,MAAA1sE,QAAA,WACA2sE,SAAA3sE,QAAA,cACA4sE,MAAA5sE,QAAA,WACAkgC,KAAAlgC,QAAA,UACAyrE,OAAAzrE,QAAA,YAGA6sE,gBAAA,EACAC,gBAAA,EACAC,mBAAA,EAGAC,QAAA,qBAKAC,QAAA,oBACAC,OAAA,6BAGAC,UAAA,kBAoBAC,cAAA,GACAA,cAAAJ,SAAAI,cA7BA,kBA8BAA,cAfA,wBAeAA,cAdA,qBAeAA,cA9BA,oBA8BAA,cA7BA,iBA8BAA,cAfA,yBAeAA,cAdA,yBAeAA,cAdA,sBAcAA,cAbA,uBAcAA,cAbA,uBAaAA,cA5BA,gBA6BAA,cA5BA,mBA4BAA,cAAAD,WACAC,cA3BA,mBA2BAA,cA1BA,gBA2BAA,cA1BA,mBA0BAA,cAzBA,mBA0BAA,cAhBA,uBAgBAA,cAfA,8BAgBAA,cAfA,wBAeAA,cAdA,yBAcA,EACAA,cArCA,kBAqCAA,cAAAH,SACAG,cA5BA,qBA4BA,EA8FA1sE,OAAAJ,QA5EA,SAAA+sE,UAAArkE,MAAAskE,QAAAC,WAAAzkE,IAAAqjB,OAAA5U,OACA,IAAAxL,OACAyhE,OAAAF,QAAAT,gBACAY,OAAAH,QAAAR,gBACAY,OAAAJ,QAAAP,mBAKA,GAHAQ,aACAxhE,OAAAogB,OAAAohD,WAAAvkE,MAAAF,IAAAqjB,OAAA5U,OAAAg2D,WAAAvkE,aAEA5C,IAAA2F,OACA,OAAAA,OAEA,IAAA4gE,SAAA3jE,OACA,OAAAA,MAEA,IAAA4hE,MAAA/jE,QAAAmC,OACA,GAAA4hE,OAEA,GADA7+D,OAAAwgE,eAAAvjE,QACAwkE,OACA,OAAAvB,UAAAjjE,MAAA+C,YAEA,CACA,IAAAykC,IAAA87B,OAAAtjE,OACA2kE,OAAAn9B,KAAAy8B,SAAAz8B,KAAA08B,OAEA,GAAA1C,SAAAxhE,OACA,OAAAgjE,YAAAhjE,MAAAwkE,QAEA,GAAAh9B,KAAA28B,WAAA38B,KAAAw8B,SAAAW,SAAAxhD,QAEA,GADApgB,OAAA0hE,QAAAE,OAAA,GAAAlB,gBAAAzjE,QACAwkE,OACA,OAAAC,OACAtB,cAAAnjE,MAAA+iE,aAAAhgE,OAAA/C,QACAkjE,YAAAljE,MAAA8iE,WAAA//D,OAAA/C,YAEA,CACA,IAAAokE,cAAA58B,KACA,OAAArkB,OAAAnjB,MAAA,GAEA+C,OAAAygE,eAAAxjE,MAAAwnC,IAAAg9B,SAIAj2D,QAAAA,MAAA,IAAAuyD,OACA,IAAA8D,QAAAr2D,MAAA8c,IAAArrB,OACA,GAAA4kE,QACA,OAAAA,QAEAr2D,MAAAuc,IAAA9qB,MAAA+C,QAEA6gE,MAAA5jE,OACAA,MAAAkuB,QAAA,SAAA22C,UACA9hE,OAAAtE,IAAA4lE,UAAAQ,SAAAP,QAAAC,WAAAM,SAAA7kE,MAAAuO,UAEAm1D,MAAA1jE,QACAA,MAAAkuB,QAAA,SAAA22C,SAAA/kE,KACAiD,OAAA+nB,IAAAhrB,IAAAukE,UAAAQ,SAAAP,QAAAC,WAAAzkE,IAAAE,MAAAuO,UAIA,IAIAqW,MAAAg9C,WAAAxkE,GAJAsnE,OACAD,OAAApB,aAAAD,WACAqB,OAAAhC,OAAAvrC,MAEAl3B,OASA,OARA4iE,UAAAh+C,OAAA5kB,MAAA,SAAA6kE,SAAA/kE,KACA8kB,QAEAigD,SAAA7kE,MADAF,IAAA+kE,WAIAhC,YAAA9/D,OAAAjD,IAAAukE,UAAAQ,SAAAP,QAAAC,WAAAzkE,IAAAE,MAAAuO,UAEAxL,8cClKA,IAAA4gE,SAAA3sE,QAAA,cAGA8tE,aAAA1/C,OAAAvtB,OAUA2mE,WAAA,WACA,SAAAr7C,UACA,OAAA,SAAA+b,OACA,IAAAykC,SAAAzkC,OACA,MAAA,GAEA,GAAA4lC,aACA,OAAAA,aAAA5lC,OAEA/b,OAAAtoB,UAAAqkC,MACA,IAAAn8B,OAAA,IAAAogB,OAEA,OADAA,OAAAtoB,eAAAuC,EACA2F,QAZA,GAgBArL,OAAAJ,QAAAknE,qEC7BA,IAAA+B,SAAAvpE,QAAA,eACA+tE,cAAA/tE,QAAA,oBACAguE,kBAAAhuE,QAAA,wBACAiuE,SAAAjuE,QAAA,eACAkuE,UAAAluE,QAAA,gBACAmuE,SAAAnuE,QAAA,eA6DAU,OAAAJ,QA7CA,SAAA4rB,MAAAnU,OAAAmyD,SAAAhyC,YACA,IAAAre,OAAA,EACAu0D,SAAAL,cACAM,UAAA,EACA7tE,OAAA0rB,MAAA1rB,OACAuL,OAAA,GACAuiE,aAAAv2D,OAAAvX,OAEA,IAAAA,OACA,OAAAuL,OAEAm+D,WACAnyD,OAAAk2D,SAAAl2D,OAAAm2D,UAAAhE,YAEAhyC,YACAk2C,SAAAJ,kBACAK,UAAA,GA7BA,KA+BAt2D,OAAAvX,SACA4tE,SAAAD,SACAE,UAAA,EACAt2D,OAAA,IAAAwxD,SAAAxxD,SAEAw2D,MACA,OAAA10D,MAAArZ,QAAA,CACA,IAAAwI,MAAAkjB,MAAArS,OACAuzC,SAAA,MAAA8c,SAAAlhE,MAAAkhE,SAAAlhE,OAGA,GADAA,MAAAkvB,YAAA,IAAAlvB,MAAAA,MAAA,EACAqlE,UAAAjhB,UAAAA,SAAA,CAEA,IADA,IAAAohB,YAAAF,aACAE,eACA,GAAAz2D,OAAAy2D,eAAAphB,SACA,SAAAmhB,MAGAxiE,OAAA/E,KAAAgC,YAEAolE,SAAAr2D,OAAAq1C,SAAAl1B,aACAnsB,OAAA/E,KAAAgC,OAGA,OAAA+C,wKC/DA,IAAA0iE,WAAAzuE,QAAA,iBAWA0uE,SAVA1uE,QAAA,oBAUA2uE,CAAAF,YAEA/tE,OAAAJ,QAAAouE,6FCbA,IAAAA,SAAA1uE,QAAA,eAoBAU,OAAAJ,QAVA,SAAA+qD,WAAA8e,WACA,IAAAp+D,OAAA,GAMA,OALA2iE,SAAArjB,WAAA,SAAAriD,MAAA6Q,MAAAwxC,YACA8e,UAAAnhE,MAAA6Q,MAAAwxC,aACAt/C,OAAA/E,KAAAgC,SAGA+C,kECMArL,OAAAJ,QAZA,SAAA4rB,MAAAi+C,UAAAyE,UAAAC,WAIA,IAHA,IAAAruE,OAAA0rB,MAAA1rB,OACAqZ,MAAA+0D,WAAAC,UAAA,GAAA,GAEAA,UAAAh1D,UAAAA,MAAArZ,QACA,GAAA2pE,UAAAj+C,MAAArS,OAAAA,MAAAqS,OACA,OAAArS,MAGA,OAAA,6CCEAnZ,OAAAJ,QAXA,SAAA+qD,WAAA8e,UAAA2E,UACA,IAAA/iE,OAOA,OANA+iE,SAAAzjB,WAAA,SAAAriD,MAAAF,IAAAuiD,YACA,GAAA8e,UAAAnhE,MAAAF,IAAAuiD,YAEA,OADAt/C,OAAAjD,KACA,IAGAiD,kDCnBA,IAAAgjE,UAAA/uE,QAAA,gBACAgvE,cAAAhvE,QAAA,oBAoCAU,OAAAJ,QAvBA,SAAA2uE,YAAA/iD,MAAAxmB,MAAAykE,UAAA+E,SAAAnjE,QACA,IAAA8N,OAAA,EACArZ,OAAA0rB,MAAA1rB,OAKA,IAHA2pE,YAAAA,UAAA6E,eACAjjE,SAAAA,OAAA,MAEA8N,MAAArZ,QAAA,CACA,IAAAwI,MAAAkjB,MAAArS,OACA,EAAAnU,OAAAykE,UAAAnhE,OACA,EAAAtD,MAEAupE,YAAAjmE,MAAAtD,MAAA,EAAAykE,UAAA+E,SAAAnjE,QAEAgjE,UAAAhjE,OAAA/C,OAEAkmE,WACAnjE,OAAAA,OAAAvL,QAAAwI,OAGA,OAAA+C,0FClCA,IAaAojE,QAbAnvE,QAAA,mBAaAovE,GAEA1uE,OAAAJ,QAAA6uE,wECfA,IAAAA,QAAAnvE,QAAA,cACAkgC,KAAAlgC,QAAA,UAcAU,OAAAJ,QAJA,SAAA6rB,OAAA+9C,UACA,OAAA/9C,QAAAgjD,QAAAhjD,OAAA+9C,SAAAhqC,6ECZA,IAAAmvC,SAAArvE,QAAA,eACAsvE,MAAAtvE,QAAA,YAsBAU,OAAAJ,QAZA,SAAA6rB,OAAA9mB,MAMA,IAHA,IAAAwU,MAAA,EACArZ,QAHA6E,KAAAgqE,SAAAhqE,KAAA8mB,SAGA3rB,OAEA,MAAA2rB,QAAAtS,MAAArZ,QACA2rB,OAAAA,OAAAmjD,MAAAjqE,KAAAwU,WAEA,OAAAA,OAAAA,OAAArZ,OAAA2rB,YAAA/lB,6ECpBA,IAAA2oE,UAAA/uE,QAAA,gBACA6G,QAAA7G,QAAA,aAkBAU,OAAAJ,QALA,SAAA6rB,OAAAojD,SAAAC,aACA,IAAAzjE,OAAAwjE,SAAApjD,QACA,OAAAtlB,QAAAslB,QAAApgB,OAAAgjE,UAAAhjE,OAAAyjE,YAAArjD,qFChBA,IAAA0c,OAAA7oC,QAAA,aACAyvE,UAAAzvE,QAAA,gBACA0vE,eAAA1vE,QAAA,qBAOA2vE,eAAA9mC,OAAAA,OAAA+mC,iBAAAxpE,EAkBA1F,OAAAJ,QATA,SAAA0I,OACA,OAAA,MAAAA,WACA5C,IAAA4C,MAdA,qBADA,gBAiBA2mE,gBAAAA,kBAAAvhD,OAAAplB,OACAymE,UAAAzmE,OACA0mE,eAAA1mE,2GCvBA,IAGAD,eAHAqlB,OAAAvqB,UAGAkF,eAcArI,OAAAJ,QAJA,SAAA6rB,OAAArjB,KACA,OAAA,MAAAqjB,QAAApjB,eAAAxI,KAAA4rB,OAAArjB,gDCHApI,OAAAJ,QAJA,SAAA6rB,OAAArjB,KACA,OAAA,MAAAqjB,QAAArjB,OAAAslB,OAAAjC,mDCRA,IAAA0jD,UAAAt5C,KAAAi6B,IACAsf,UAAAv5C,KAAAw5C,IAeArvE,OAAAJ,QAJA,SAAAyO,OAAA3G,MAAA+H,KACA,OAAApB,QAAA+gE,UAAA1nE,MAAA+H,MAAApB,OAAA8gE,UAAAznE,MAAA+H,gDCdA,IAAA6/D,cAAAhwE,QAAA,oBACAiwE,UAAAjwE,QAAA,gBACAkwE,cAAAlwE,QAAA,oBAiBAU,OAAAJ,QANA,SAAA4rB,MAAAljB,MAAA4lE,WACA,OAAA5lE,OAAAA,MACAknE,cAAAhkD,MAAAljB,MAAA4lE,WACAoB,cAAA9jD,MAAA+jD,UAAArB,qHChBA,IAAArF,SAAAvpE,QAAA,eACA+tE,cAAA/tE,QAAA,oBACAguE,kBAAAhuE,QAAA,wBACAiuE,SAAAjuE,QAAA,eACAkuE,UAAAluE,QAAA,gBACAmuE,SAAAnuE,QAAA,eAGA8vE,UAAAv5C,KAAAw5C,IAiEArvE,OAAAJ,QArDA,SAAA6vE,OAAAjG,SAAAhyC,YASA,IARA,IAAAk2C,SAAAl2C,WAAA81C,kBAAAD,cACAvtE,OAAA2vE,OAAA,GAAA3vE,OACA4vE,UAAAD,OAAA3vE,OACA6vE,SAAAD,UACAE,OAAA9nD,MAAA4nD,WACAG,UAAAryC,EAAAA,EACAnyB,OAAA,GAEAskE,YAAA,CACA,IAAAnkD,MAAAikD,OAAAE,UACAA,UAAAnG,WACAh+C,MAAA+hD,SAAA/hD,MAAAgiD,UAAAhE,YAEAqG,UAAAT,UAAA5jD,MAAA1rB,OAAA+vE,WACAD,OAAAD,WAAAn4C,aAAAgyC,UAAA,KAAA1pE,QAAA,KAAA0rB,MAAA1rB,QACA,IAAA+oE,SAAA8G,UAAAnkD,YACA9lB,EAEA8lB,MAAAikD,OAAA,GAEA,IAAAt2D,OAAA,EACA22D,KAAAF,OAAA,GAEA/B,MACA,OAAA10D,MAAArZ,QAAAuL,OAAAvL,OAAA+vE,WAAA,CACA,IAAAvnE,MAAAkjB,MAAArS,OACAuzC,SAAA8c,SAAAA,SAAAlhE,OAAAA,MAGA,GADAA,MAAAkvB,YAAA,IAAAlvB,MAAAA,MAAA,IACAwnE,KACArC,SAAAqC,KAAApjB,UACAghB,SAAAriE,OAAAqhD,SAAAl1B,aACA,CAEA,IADAm4C,SAAAD,YACAC,UAAA,CACA,IAAAliC,MAAAmiC,OAAAD,UACA,KAAAliC,MACAggC,SAAAhgC,MAAAif,UACAghB,SAAA+B,OAAAE,UAAAjjB,SAAAl1B,aAEA,SAAAq2C,MAGAiC,MACAA,KAAAxpE,KAAAomD,UAEArhD,OAAA/E,KAAAgC,QAGA,OAAA+C,wKCtEA,IAAA0kE,WAAAzwE,QAAA,iBACA0wE,aAAA1wE,QAAA,kBAgBAU,OAAAJ,QAJA,SAAA0I,OACA,OAAA0nE,aAAA1nE,QAVA,sBAUAynE,WAAAznE,yFCdA,IAAA2nE,gBAAA3wE,QAAA,sBACA0wE,aAAA1wE,QAAA,kBA0BAU,OAAAJ,QAVA,SAAAswE,YAAA5nE,MAAA2B,MAAA2iE,QAAAC,WAAAh2D,OACA,OAAAvO,QAAA2B,QAGA,MAAA3B,OAAA,MAAA2B,QAAA+lE,aAAA1nE,SAAA0nE,aAAA/lE,OACA3B,OAAAA,OAAA2B,OAAAA,MAEAgmE,gBAAA3nE,MAAA2B,MAAA2iE,QAAAC,WAAAqD,YAAAr5D,+FCxBA,IAAAuyD,MAAA9pE,QAAA,YACA6wE,YAAA7wE,QAAA,kBACA8wE,WAAA9wE,QAAA,iBACA+wE,aAAA/wE,QAAA,mBACAssE,OAAAtsE,QAAA,aACA6G,QAAA7G,QAAA,aACAwqE,SAAAxqE,QAAA,cACA0qE,aAAA1qE,QAAA,kBAQAmtE,UAAA,kBAMApkE,eAHAqlB,OAAAvqB,UAGAkF,eA6DArI,OAAAJ,QA7CA,SAAA6rB,OAAAxhB,MAAA2iE,QAAAC,WAAAyD,UAAAz5D,OACA,IAAA05D,SAAApqE,QAAAslB,QACA+kD,SAAArqE,QAAA8D,OACAwmE,OAAAF,SA1BA,iBA0BA3E,OAAAngD,QACAilD,OAAAF,SA3BA,iBA2BA5E,OAAA3hE,OAKA0mE,UAHAF,OA9BA,sBA8BAA,OAAAhE,UAAAgE,SAGAhE,UACAmE,UAHAF,OA/BA,sBA+BAA,OAAAjE,UAAAiE,SAGAjE,UACAoE,UAAAJ,QAAAC,OAEA,GAAAG,WAAA/G,SAAAr+C,QAAA,CACA,IAAAq+C,SAAA7/D,OACA,OAAA,EAGA0mE,WADAJ,UAAA,GAGA,GAAAM,YAAAF,SAEA,OADA95D,QAAAA,MAAA,IAAAuyD,OACAmH,UAAAvG,aAAAv+C,QACA0kD,YAAA1kD,OAAAxhB,MAAA2iE,QAAAC,WAAAyD,UAAAz5D,OACAu5D,WAAA3kD,OAAAxhB,MAAAwmE,OAAA7D,QAAAC,WAAAyD,UAAAz5D,OAEA,KArDA,EAqDA+1D,SAAA,CACA,IAAAkE,aAAAH,UAAAtoE,eAAAxI,KAAA4rB,OAAA,eACAslD,aAAAH,UAAAvoE,eAAAxI,KAAAoK,MAAA,eAEA,GAAA6mE,cAAAC,aAAA,CACA,IAAAC,aAAAF,aAAArlD,OAAAnjB,QAAAmjB,OACAwlD,aAAAF,aAAA9mE,MAAA3B,QAAA2B,MAGA,OADA4M,QAAAA,MAAA,IAAAuyD,OACAkH,UAAAU,aAAAC,aAAArE,QAAAC,WAAAh2D,QAGA,QAAAg6D,YAGAh6D,QAAAA,MAAA,IAAAuyD,OACAiH,aAAA5kD,OAAAxhB,MAAA2iE,QAAAC,WAAAyD,UAAAz5D,qMC/EA,IAAA+0D,OAAAtsE,QAAA,aACA0wE,aAAA1wE,QAAA,kBAgBAU,OAAAJ,QAJA,SAAA0I,OACA,OAAA0nE,aAAA1nE,QAVA,gBAUAsjE,OAAAtjE,sFCdA,IAAA8gE,MAAA9pE,QAAA,YACA4wE,YAAA5wE,QAAA,kBA4DAU,OAAAJ,QA5CA,SAAA6rB,OAAA/kB,OAAAwqE,UAAArE,YACA,IAAA1zD,MAAA+3D,UAAApxE,OACAA,OAAAqZ,MACAg4D,cAAAtE,WAEA,GAAA,MAAAphD,OACA,OAAA3rB,OAGA,IADA2rB,OAAAiC,OAAAjC,QACAtS,SAAA,CACA,IAAAzQ,KAAAwoE,UAAA/3D,OACA,GAAAg4D,cAAAzoE,KAAA,GACAA,KAAA,KAAA+iB,OAAA/iB,KAAA,MACAA,KAAA,KAAA+iB,QAEA,OAAA,EAGA,OAAAtS,MAAArZ,QAAA,CAEA,IAAAsI,KADAM,KAAAwoE,UAAA/3D,QACA,GACA0xD,SAAAp/C,OAAArjB,KACAgpE,SAAA1oE,KAAA,GAEA,GAAAyoE,cAAAzoE,KAAA,IACA,QAAAhD,IAAAmlE,YAAAziE,OAAAqjB,QACA,OAAA,MAEA,CACA,IAAA5U,MAAA,IAAAuyD,MACA,GAAAyD,WACA,IAAAxhE,OAAAwhE,WAAAhC,SAAAuG,SAAAhpE,IAAAqjB,OAAA/kB,OAAAmQ,OAEA,UAAAnR,IAAA2F,OACA6kE,YAAAkB,SAAAvG,SAAAwG,EAAAxE,WAAAh2D,OACAxL,QAEA,OAAA,GAIA,OAAA,+EC/CArL,OAAAJ,QAJA,SAAA0I,OACA,OAAAA,OAAAA,kDCRA,IAAAqmB,WAAArvB,QAAA,gBACAgyE,SAAAhyE,QAAA,eACA2sE,SAAA3sE,QAAA,cACAiyE,SAAAjyE,QAAA,eASAkyE,aAAA,8BAGAC,UAAAj+D,SAAArQ,UACAuuE,YAAAhkD,OAAAvqB,UAGAwuE,aAAAF,UAAA7tE,SAGAyE,eAAAqpE,YAAArpE,eAGAupE,WAAAvnC,OAAA,IACAsnC,aAAA9xE,KAAAwI,gBAAAL,QAjBA,sBAiBA,QACAA,QAAA,yDAAA,SAAA,KAmBAhI,OAAAJ,QARA,SAAA0I,OACA,SAAA2jE,SAAA3jE,QAAAgpE,SAAAhpE,UAGAqmB,WAAArmB,OAAAspE,WAAAJ,cACA5sE,KAAA2sE,SAAAjpE,2HC3CA,IAAAsjE,OAAAtsE,QAAA,aACA0wE,aAAA1wE,QAAA,kBAgBAU,OAAAJ,QAJA,SAAA0I,OACA,OAAA0nE,aAAA1nE,QAVA,gBAUAsjE,OAAAtjE,uFCdA,IAAAynE,WAAAzwE,QAAA,iBACAuyE,SAAAvyE,QAAA,cACA0wE,aAAA1wE,QAAA,kBA8BAwyE,eAAA,GACAA,eAZA,yBAYAA,eAXA,yBAYAA,eAXA,sBAWAA,eAVA,uBAWAA,eAVA,uBAUAA,eATA,uBAUAA,eATA,8BASAA,eARA,wBASAA,eARA,yBAQA,EACAA,eAjCA,sBAiCAA,eAhCA,kBAiCAA,eApBA,wBAoBAA,eAhCA,oBAiCAA,eApBA,qBAoBAA,eAhCA,iBAiCAA,eAhCA,kBAgCAA,eA/BA,qBAgCAA,eA/BA,gBA+BAA,eA9BA,mBA+BAA,eA9BA,mBA8BAA,eA7BA,mBA8BAA,eA7BA,gBA6BAA,eA5BA,mBA6BAA,eA5BA,qBA4BA,EAcA9xE,OAAAJ,QALA,SAAA0I,OACA,OAAA0nE,aAAA1nE,QACAupE,SAAAvpE,MAAAxI,WAAAgyE,eAAA/B,WAAAznE,4GCxDA,IAAAypE,YAAAzyE,QAAA,kBACA0yE,oBAAA1yE,QAAA,0BACAmkC,SAAAnkC,QAAA,cACA6G,QAAA7G,QAAA,aACA2yE,SAAA3yE,QAAA,cA0BAU,OAAAJ,QAjBA,SAAA0I,OAGA,MAAA,mBAAAA,MACAA,MAEA,MAAAA,MACAm7B,SAEA,iBAAAn7B,MACAnC,QAAAmC,OACA0pE,oBAAA1pE,MAAA,GAAAA,MAAA,IACAypE,YAAAzpE,OAEA2pE,SAAA3pE,sJC3BA,IAAA4pE,YAAA5yE,QAAA,kBACA6yE,WAAA7yE,QAAA,iBAMA+I,eAHAqlB,OAAAvqB,UAGAkF,eAsBArI,OAAAJ,QAbA,SAAA6rB,QACA,IAAAymD,YAAAzmD,QACA,OAAA0mD,WAAA1mD,QAEA,IAAApgB,OAAA,GACA,IAAA,IAAAjD,OAAAslB,OAAAjC,QACApjB,eAAAxI,KAAA4rB,OAAArjB,MAAA,eAAAA,KACAiD,OAAA/E,KAAA8B,KAGA,OAAAiD,2FC1BA,IAAA4gE,SAAA3sE,QAAA,cACA4yE,YAAA5yE,QAAA,kBACA8yE,aAAA9yE,QAAA,mBAMA+I,eAHAqlB,OAAAvqB,UAGAkF,eAwBArI,OAAAJ,QAfA,SAAA6rB,QACA,IAAAwgD,SAAAxgD,QACA,OAAA2mD,aAAA3mD,QAEA,IAAA4mD,QAAAH,YAAAzmD,QACApgB,OAAA,GAEA,IAAA,IAAAjD,OAAAqjB,QACA,eAAArjB,MAAAiqE,SAAAhqE,eAAAxI,KAAA4rB,OAAArjB,OACAiD,OAAA/E,KAAA8B,KAGA,OAAAiD,8GCpBArL,OAAAJ,QAJA,wDCLA,IAAAouE,SAAA1uE,QAAA,eACA6mC,YAAA7mC,QAAA,iBAoBAU,OAAAJ,QAVA,SAAA+qD,WAAA6e,UACA,IAAArwD,OAAA,EACA9N,OAAA86B,YAAAwkB,YAAA7iC,MAAA6iC,WAAA7qD,QAAA,GAKA,OAHAkuE,SAAArjB,WAAA,SAAAriD,MAAAF,IAAAuiD,YACAt/C,SAAA8N,OAAAqwD,SAAAlhE,MAAAF,IAAAuiD,cAEAt/C,uFClBA,IAAAinE,YAAAhzE,QAAA,kBACAizE,aAAAjzE,QAAA,mBACAkzE,wBAAAlzE,QAAA,8BAmBAU,OAAAJ,QAVA,SAAA8G,QACA,IAAAwqE,UAAAqB,aAAA7rE,QACA,OAAA,GAAAwqE,UAAApxE,QAAAoxE,UAAA,GAAA,GACAsB,wBAAAtB,UAAA,GAAA,GAAAA,UAAA,GAAA,IAEA,SAAAzlD,QACA,OAAAA,SAAA/kB,QAAA4rE,YAAA7mD,OAAA/kB,OAAAwqE,kICjBA,IAAAhB,YAAA5wE,QAAA,kBACAq0B,IAAAr0B,QAAA,SACAmzE,MAAAnzE,QAAA,WACAozE,MAAApzE,QAAA,YACAqzE,mBAAArzE,QAAA,yBACAkzE,wBAAAlzE,QAAA,8BACAsvE,MAAAtvE,QAAA,YA0BAU,OAAAJ,QAZA,SAAA+E,KAAAysE,UACA,OAAAsB,MAAA/tE,OAAAguE,mBAAAvB,UACAoB,wBAAA5D,MAAAjqE,MAAAysE,UAEA,SAAA3lD,QACA,IAAAo/C,SAAAl3C,IAAAlI,OAAA9mB,MACA,YAAAe,IAAAmlE,UAAAA,WAAAuG,SACAqB,MAAAhnD,OAAA9mB,MACAurE,YAAAkB,SAAAvG,SAAAwG,wLCfArxE,OAAAJ,QANA,SAAAwI,KACA,OAAA,SAAAqjB,QACA,OAAA,MAAAA,YAAA/lB,EAAA+lB,OAAArjB,kDCTA,IAAAwqE,QAAAtzE,QAAA,cAeAU,OAAAJ,QANA,SAAA+E,MACA,OAAA,SAAA8mB,QACA,OAAAmnD,QAAAnnD,OAAA9mB,kECEA3E,OAAAJ,QANA,SAAA6rB,QACA,OAAA,SAAArjB,KACA,OAAA,MAAAqjB,YAAA/lB,EAAA+lB,OAAArjB,kDCRA,IAAAyqE,YAAAh9C,KAAAC,MACAg9C,aAAAj9C,KAAA+B,OAeA53B,OAAAJ,QAJA,SAAAorE,MAAAC,OACA,OAAAD,MAAA6H,YAAAC,gBAAA7H,MAAAD,MAAA,gDCQAhrE,OAAAJ,QATA,SAAA+qD,WAAA6e,SAAAe,YAAAC,UAAA4D,UAMA,OALAA,SAAAzjB,WAAA,SAAAriD,MAAA6Q,MAAAwxC,YACA4f,YAAAC,WACAA,WAAA,EAAAliE,OACAkhE,SAAAe,YAAAjiE,MAAA6Q,MAAAwxC,cAEA4f,wDClBA,IAGAsI,YAAAh9C,KAAAC,MA8BA91B,OAAAJ,QApBA,SAAAuO,OAAAnP,GACA,IAAAqM,OAAA,GACA,IAAA8C,QAAAnP,EAAA,GAfA,iBAeAA,EACA,OAAAqM,OAIA,KACArM,EAAA,IACAqM,QAAA8C,SAEAnP,EAAA6zE,YAAA7zE,EAAA,MAEAmP,QAAAA,QAEAnP,IAEA,OAAAqM,mDC/BA,IAAAo4B,SAAAnkC,QAAA,cACAyzE,SAAAzzE,QAAA,eACA0zE,YAAA1zE,QAAA,kBAcAU,OAAAJ,QAJA,SAAAm7C,KAAArzC,OACA,OAAAsrE,YAAAD,SAAAh4B,KAAArzC,MAAA+7B,UAAAsX,KAAA,uGCbA,IAAAk4B,SAAA3zE,QAAA,cACAquB,eAAAruB,QAAA,qBACAmkC,SAAAnkC,QAAA,cAUA4zE,gBAAAvlD,eAAA,SAAAotB,KAAA5sC,QACA,OAAAwf,eAAAotB,KAAA,WAAA,CACAtgB,cAAA,EACA7M,YAAA,EACAtlB,MAAA2qE,SAAA9kE,QACA+4C,UAAA,KALAzjB,SASAzjC,OAAAJ,QAAAszE,oHCSAlzE,OAAAJ,QArBA,SAAA4rB,MAAA9jB,MAAA+H,KACA,IAAA0J,OAAA,EACArZ,OAAA0rB,MAAA1rB,OAEA4H,MAAA,IACAA,MAAA5H,QAAA4H,MAAA,EAAA5H,OAAA4H,QAEA+H,IAAA3P,OAAA2P,IAAA3P,OAAA2P,KACA,IACAA,KAAA3P,QAEAA,OAAA2P,IAAA/H,MAAA,EAAA+H,IAAA/H,QAAA,EACAA,SAAA,EAGA,IADA,IAAA2D,OAAAyc,MAAAhoB,UACAqZ,MAAArZ,QACAuL,OAAA8N,OAAAqS,MAAArS,MAAAzR,OAEA,OAAA2D,mDCRArL,OAAAJ,QAVA,SAAAZ,EAAAwqE,UAIA,IAHA,IAAArwD,OAAA,EACA9N,OAAAyc,MAAA9oB,KAEAma,MAAAna,GACAqM,OAAA8N,OAAAqwD,SAAArwD,OAEA,OAAA9N,mDChBA,IAAA88B,OAAA7oC,QAAA,aACAiuE,SAAAjuE,QAAA,eACA6G,QAAA7G,QAAA,aACA6zE,SAAA7zE,QAAA,cAGA8zE,SAAA,EAAA,EAGAC,YAAAlrC,OAAAA,OAAAhlC,eAAAuC,EACA4tE,eAAAD,YAAAA,YAAAzvE,cAAA8B,EA0BA1F,OAAAJ,QAhBA,SAAA2zE,aAAAjrE,OAEA,GAAA,iBAAAA,MACA,OAAAA,MAEA,GAAAnC,QAAAmC,OAEA,OAAAilE,SAAAjlE,MAAAirE,cAAA,GAEA,GAAAJ,SAAA7qE,OACA,OAAAgrE,eAAAA,eAAAzzE,KAAAyI,OAAA,GAEA,IAAA+C,OAAA/C,MAAA,GACA,MAAA,KAAA+C,QAAA,EAAA/C,QAAA8qE,SAAA,KAAA/nE,mHCjCA,IAAAmoE,gBAAAl0E,QAAA,sBAGAm0E,YAAA,OAeAzzE,OAAAJ,QANA,SAAAuO,QACA,OAAAA,OACAA,OAAA1E,MAAA,EAAA+pE,gBAAArlE,QAAA,GAAAnG,QAAAyrE,YAAA,IACAtlE,2ECFAnO,OAAAJ,QANA,SAAAm7C,MACA,OAAA,SAAAzyC,OACA,OAAAyyC,KAAAzyC,oDCTA,IAAAugE,SAAAvpE,QAAA,eACA+tE,cAAA/tE,QAAA,oBACAguE,kBAAAhuE,QAAA,wBACAmuE,SAAAnuE,QAAA,eACAo0E,UAAAp0E,QAAA,gBACAq0E,WAAAr0E,QAAA,iBAkEAU,OAAAJ,QApDA,SAAA4rB,MAAAg+C,SAAAhyC,YACA,IAAAre,OAAA,EACAu0D,SAAAL,cACAvtE,OAAA0rB,MAAA1rB,OACA6tE,UAAA,EACAtiE,OAAA,GACAykE,KAAAzkE,OAEA,GAAAmsB,WACAm2C,UAAA,EACAD,SAAAJ,uBAEA,GAvBA,KAuBAxtE,OAAA,CACA,IAAAszB,IAAAo2C,SAAA,KAAAkK,UAAAloD,OACA,GAAA4H,IACA,OAAAugD,WAAAvgD,KAEAu6C,UAAA,EACAD,SAAAD,SACAqC,KAAA,IAAAjH,cAGAiH,KAAAtG,SAAA,GAAAn+D,OAEAwiE,MACA,OAAA10D,MAAArZ,QAAA,CACA,IAAAwI,MAAAkjB,MAAArS,OACAuzC,SAAA8c,SAAAA,SAAAlhE,OAAAA,MAGA,GADAA,MAAAkvB,YAAA,IAAAlvB,MAAAA,MAAA,EACAqlE,UAAAjhB,UAAAA,SAAA,CAEA,IADA,IAAAknB,UAAA9D,KAAAhwE,OACA8zE,aACA,GAAA9D,KAAA8D,aAAAlnB,SACA,SAAAmhB,MAGArE,UACAsG,KAAAxpE,KAAAomD,UAEArhD,OAAA/E,KAAAgC,YAEAolE,SAAAoC,KAAApjB,SAAAl1B,cACAs4C,OAAAzkE,QACAykE,KAAAxpE,KAAAomD,UAEArhD,OAAA/E,KAAAgC,QAGA,OAAA+C,4KCpEA,IAAAkiE,SAAAjuE,QAAA,eAkBAU,OAAAJ,QANA,SAAA6rB,OAAAyB,OACA,OAAAqgD,SAAArgD,MAAA,SAAA9kB,KACA,OAAAqjB,OAAArjB,mECFApI,OAAAJ,QAJA,SAAA6tC,MAAArlC,KACA,OAAAqlC,MAAA9a,IAAAvqB,iDCTA,IAAAyrE,kBAAAv0E,QAAA,uBAaAU,OAAAJ,QAJA,SAAA0I,OACA,OAAAurE,kBAAAvrE,OAAAA,MAAA,wECVA,IAAAm7B,SAAAnkC,QAAA,cAaAU,OAAAJ,QAJA,SAAA0I,OACA,MAAA,mBAAAA,MAAAA,MAAAm7B,qECVA,IAAAt9B,QAAA7G,QAAA,aACAozE,MAAApzE,QAAA,YACAw0E,aAAAx0E,QAAA,mBACAsE,SAAAtE,QAAA,cAiBAU,OAAAJ,QAPA,SAAA0I,MAAAmjB,QACA,OAAAtlB,QAAAmC,OACAA,MAEAoqE,MAAApqE,MAAAmjB,QAAA,CAAAnjB,OAAAwrE,aAAAlwE,SAAA0E,yHCjBA,IAAAyrE,UAAAz0E,QAAA,gBAiBAU,OAAAJ,QANA,SAAA4rB,MAAA9jB,MAAA+H,KACA,IAAA3P,OAAA0rB,MAAA1rB,OAEA,OADA2P,SAAA/J,IAAA+J,IAAA3P,OAAA2P,KACA/H,OAAA5H,QAAA2P,IAAA+b,MAAAuoD,UAAAvoD,MAAA9jB,MAAA+H,mECdA,IAAA45D,WAAA/pE,QAAA,iBAeAU,OAAAJ,QANA,SAAAo0E,aACA,IAAA3oE,OAAA,IAAA2oE,YAAA5wE,YAAA4wE,YAAAC,YAEA,OADA,IAAA5K,WAAAh+D,QAAA+nB,IAAA,IAAAi2C,WAAA2K,cACA3oE,qECZA,IAAAyP,KAAAxb,QAAA,WAGA40E,YAAA,iBAAAt0E,SAAAA,UAAAA,QAAAolC,UAAAplC,QAGAu0E,WAAAD,aAAA,iBAAAl0E,QAAAA,SAAAA,OAAAglC,UAAAhlC,OAMAo0E,OAHAD,YAAAA,WAAAv0E,UAAAs0E,YAGAp5D,KAAAs5D,YAAA1uE,EACA2uE,YAAAD,OAAAA,OAAAC,iBAAA3uE,EAqBA1F,OAAAJ,QAXA,SAAA00E,OAAAxH,QACA,GAAAA,OACA,OAAAwH,OAAA7qE,QAEA,IAAA3J,OAAAw0E,OAAAx0E,OACAuL,OAAAgpE,YAAAA,YAAAv0E,QAAA,IAAAw0E,OAAAlxE,YAAAtD,QAGA,OADAw0E,OAAAvtC,KAAA17B,QACAA,gEC/BA,IAAAkpE,iBAAAj1E,QAAA,uBAeAU,OAAAJ,QALA,SAAA40E,SAAA1H,QACA,IAAAwH,OAAAxH,OAAAyH,iBAAAC,SAAAF,QAAAE,SAAAF,OACA,OAAA,IAAAE,SAAApxE,YAAAkxE,OAAAE,SAAAC,WAAAD,SAAAP,iFCXA,IAAAS,QAAA,OAeA10E,OAAAJ,QANA,SAAA+0E,QACA,IAAAtpE,OAAA,IAAAspE,OAAAvxE,YAAAuxE,OAAAjuE,OAAAguE,QAAA7nD,KAAA8nD,SAEA,OADAtpE,OAAAupE,UAAAD,OAAAC,UACAvpE,mDCbA,IAAA88B,OAAA7oC,QAAA,aAGA+zE,YAAAlrC,OAAAA,OAAAhlC,eAAAuC,EACAmvE,cAAAxB,YAAAA,YAAAyB,aAAApvE,EAaA1F,OAAAJ,QAJA,SAAAsnB,QACA,OAAA2tD,cAAAnnD,OAAAmnD,cAAAh1E,KAAAqnB,SAAA,6DCdA,IAAAqtD,iBAAAj1E,QAAA,uBAeAU,OAAAJ,QALA,SAAAm1E,WAAAjI,QACA,IAAAwH,OAAAxH,OAAAyH,iBAAAQ,WAAAT,QAAAS,WAAAT,OACA,OAAA,IAAAS,WAAA3xE,YAAAkxE,OAAAS,WAAAN,WAAAM,WAAAj1E,6ECOAE,OAAAJ,QAXA,SAAA8G,OAAA8kB,OACA,IAAArS,OAAA,EACArZ,OAAA4G,OAAA5G,OAGA,IADA0rB,QAAAA,MAAA1D,MAAAhoB,WACAqZ,MAAArZ,QACA0rB,MAAArS,OAAAzS,OAAAyS,OAEA,OAAAqS,kDChBA,IAAA2/C,YAAA7rE,QAAA,kBACAsrE,gBAAAtrE,QAAA,sBAsCAU,OAAAJ,QA1BA,SAAA8G,OAAAwmB,MAAAzB,OAAAohD,YACA,IAAAmI,OAAAvpD,OACAA,SAAAA,OAAA,IAKA,IAHA,IAAAtS,OAAA,EACArZ,OAAAotB,MAAAptB,SAEAqZ,MAAArZ,QAAA,CACA,IAAAsI,IAAA8kB,MAAA/T,OAEA87D,SAAApI,WACAA,WAAAphD,OAAArjB,KAAA1B,OAAA0B,KAAAA,IAAAqjB,OAAA/kB,aACAhB,OAEAA,IAAAuvE,WACAA,SAAAvuE,OAAA0B,MAEA4sE,MACApK,gBAAAn/C,OAAArjB,IAAA6sE,UAEA9J,YAAA1/C,OAAArjB,IAAA6sE,UAGA,OAAAxpD,8FCpCA,IAAAq/C,WAAAxrE,QAAA,iBACA41E,WAAA51E,QAAA,iBAcAU,OAAAJ,QAJA,SAAA8G,OAAA+kB,QACA,OAAAq/C,WAAApkE,OAAAwuE,WAAAxuE,QAAA+kB,2FCZA,IAAAq/C,WAAAxrE,QAAA,iBACA61E,aAAA71E,QAAA,mBAcAU,OAAAJ,QAJA,SAAA8G,OAAA+kB,QACA,OAAAq/C,WAAApkE,OAAAyuE,aAAAzuE,QAAA+kB,6FCZA,IAGA2pD,WAHA91E,QAAA,WAGA,sBAEAU,OAAAJ,QAAAw1E,mECLA,IAAAjvC,YAAA7mC,QAAA,iBA+BAU,OAAAJ,QArBA,SAAAwuE,SAAAD,WACA,OAAA,SAAAxjB,WAAA6e,UACA,GAAA,MAAA7e,WACA,OAAAA,WAEA,IAAAxkB,YAAAwkB,YACA,OAAAyjB,SAAAzjB,WAAA6e,UAMA,IAJA,IAAA1pE,OAAA6qD,WAAA7qD,OACAqZ,MAAAg1D,UAAAruE,QAAA,EACAu1E,SAAA3nD,OAAAi9B,aAEAwjB,UAAAh1D,UAAAA,MAAArZ,UACA,IAAA0pE,SAAA6L,SAAAl8D,OAAAA,MAAAk8D,YAIA,OAAA1qB,2ECHA3qD,OAAAJ,QAjBA,SAAAuuE,WACA,OAAA,SAAA1iD,OAAA+9C,SAAAqF,UAMA,IALA,IAAA11D,OAAA,EACAk8D,SAAA3nD,OAAAjC,QACAyB,MAAA2hD,SAAApjD,QACA3rB,OAAAotB,MAAAptB,OAEAA,UAAA,CACA,IAAAsI,IAAA8kB,MAAAihD,UAAAruE,SAAAqZ,OACA,IAAA,IAAAqwD,SAAA6L,SAAAjtE,KAAAA,IAAAitE,UACA,MAGA,OAAA5pD,oDCpBA,IAAA6pD,YAAAh2E,QAAA,kBACAi2E,OAAAj2E,QAAA,YACAk2E,MAAAl2E,QAAA,WAMAm2E,OAAAprC,OAHA,OAGA,KAeArqC,OAAAJ,QANA,SAAA2Z,UACA,OAAA,SAAApL,QACA,OAAAmnE,YAAAE,MAAAD,OAAApnE,QAAAnG,QAAAytE,OAAA,KAAAl8D,SAAA,iGCnBA,IAAAm8D,aAAAp2E,QAAA,mBACA6mC,YAAA7mC,QAAA,iBACAkgC,KAAAlgC,QAAA,UAsBAU,OAAAJ,QAbA,SAAA+1E,eACA,OAAA,SAAAhrB,WAAA8e,UAAAyE,WACA,IAAAmH,SAAA3nD,OAAAi9B,YACA,IAAAxkB,YAAAwkB,YAAA,CACA,IAAA6e,SAAAkM,aAAAjM,UAAA,GACA9e,WAAAnrB,KAAAmrB,YACA8e,UAAA,SAAArhE,KAAA,OAAAohE,SAAA6L,SAAAjtE,KAAAA,IAAAitE,WAEA,IAAAl8D,MAAAw8D,cAAAhrB,WAAA8e,UAAAyE,WACA,OAAA,EAAA/0D,MAAAk8D,SAAA7L,SAAA7e,WAAAxxC,OAAAA,YAAAzT,qGCpBA,IAAAoiE,cAAAxoE,QAAA,oBACAs2E,SAAAt2E,QAAA,eACA4/C,QAAA5/C,QAAA,cACAu2E,YAAAv2E,QAAA,kBACA6G,QAAA7G,QAAA,aACAw2E,WAAAx2E,QAAA,iBAwEAU,OAAAJ,QAtDA,SAAAuuE,WACA,OAAAyH,SAAA,SAAAG,OACA,IAAAj2E,OAAAi2E,MAAAj2E,OACAqZ,MAAArZ,OACAk2E,OAAAlO,cAAA3kE,UAAA8yE,KAKA,IAHA9H,WACA4H,MAAA/8B,UAEA7/B,SAAA,CACA,IAAA4hC,KAAAg7B,MAAA58D,OACA,GAAA,mBAAA4hC,KACA,MAAA,IAAA/lB,UA3BA,uBA6BA,GAAAghD,SAAAE,SAAA,WAAAL,YAAA96B,MACA,IAAAm7B,QAAA,IAAApO,cAAA,IAAA,GAIA,IADA3uD,MAAA+8D,QAAA/8D,MAAArZ,SACAqZ,MAAArZ,QAAA,CACAi7C,KAAAg7B,MAAA58D,OAEA,IAAAosD,SAAAsQ,YAAA96B,MACAryC,KAAA,WAAA68D,SAAArmB,QAAAnE,WAAAr1C,EAMAwwE,QAJAxtE,MAAAotE,WAAAptE,KAAA,KACA,KAAAA,KAAA,KACAA,KAAA,GAAA5I,QAAA,GAAA4I,KAAA,GAEAwtE,QAAAL,YAAAntE,KAAA,KAAA4K,MAAA4iE,QAAAxtE,KAAA,IAEA,GAAAqyC,KAAAj7C,QAAAg2E,WAAA/6B,MACAm7B,QAAA3Q,YACA2Q,QAAAD,KAAAl7B,MAGA,OAAA,WACA,IAAA1wC,KAAA1C,UACAW,MAAA+B,KAAA,GAEA,GAAA6rE,SAAA,GAAA7rE,KAAAvK,QAAAqG,QAAAmC,OACA,OAAA4tE,QAAAC,MAAA7tE,OAAAA,QAKA,IAHA,IAAA6Q,MAAA,EACA9N,OAAAvL,OAAAi2E,MAAA58D,OAAA7F,MAAAxQ,KAAAuH,MAAA/B,QAEA6Q,MAAArZ,QACAuL,OAAA0qE,MAAA58D,OAAAtZ,KAAAiD,KAAAuI,QAEA,OAAAA,uKCxEA,IAAA+qE,WAAA92E,QAAA,iBACAi0E,aAAAj0E,QAAA,mBACA+2E,UAAA/2E,QAAA,gBACAg3E,WAAAh3E,QAAA,iBACAi3E,WAAAj3E,QAAA,iBACAk3E,cAAAl3E,QAAA,oBAGAm3E,WAAA5gD,KAAA06B,KAwBAvwD,OAAAJ,QAbA,SAAAE,OAAA42E,OAGA,IAAAC,aAFAD,WAAAhxE,IAAAgxE,MAAA,IAAAnD,aAAAmD,QAEA52E,OACA,GAAA62E,YAAA,EACA,OAAAA,YAAAP,WAAAM,MAAA52E,QAAA42E,MAEA,IAAArrE,OAAA+qE,WAAAM,MAAAD,WAAA32E,OAAAy2E,WAAAG,SACA,OAAAJ,WAAAI,OACAL,UAAAG,cAAAnrE,QAAA,EAAAvL,QAAAkH,KAAA,IACAqE,OAAA5B,MAAA,EAAA3J,+KC7BA,IAAAgb,KAAAxb,QAAA,WACAs3E,UAAAt3E,QAAA,eACAu3E,SAAAv3E,QAAA,cACAsE,SAAAtE,QAAA,cAGAw3E,eAAAh8D,KAAAu3C,SACA+c,UAAAv5C,KAAAw5C,IA2BArvE,OAAAJ,QAlBA,SAAAm3E,YACA,IAAAh8B,KAAAllB,KAAAkhD,YACA,OAAA,SAAA1oE,OAAA2oE,WAGA,GAFA3oE,OAAAwoE,SAAAxoE,SACA2oE,UAAA,MAAAA,UAAA,EAAA5H,UAAAwH,UAAAI,WAAA,OACAF,eAAAzoE,QAAA,CAGA,IAAA0c,MAAAnnB,SAAAyK,QAAA,KAAAkM,MAAA,KACAjS,MAAAyyC,KAAAhwB,KAAA,GAAA,MAAAA,KAAA,GAAAisD,YAGA,SADAjsD,MAAAnnB,SAAA0E,OAAA,KAAAiS,MAAA,MACA,GAAA,MAAAwQ,KAAA,GAAAisD,YAEA,OAAAj8B,KAAA1sC,sHC9BA,IAAAq6D,IAAAppE,QAAA,UACAwxB,KAAAxxB,QAAA,UACAq0E,WAAAr0E,QAAA,iBAYAo0E,UAAAhL,KAAA,EAAAiL,WAAA,IAAAjL,IAAA,CAAA,EAAA,KAAA,IATA,EAAA,EASA,SAAArxD,QACA,OAAA,IAAAqxD,IAAArxD,SADAyZ,KAIA9wB,OAAAJ,QAAA8zE,iGClBA,IAoEAuD,aApEA33E,QAAA,oBAoEA43E,CAjaAhjF,OAAAJ,QAAAq3E,+ECtEA,IAAA1Q,UAAAjnE,QAAA,gBAEAquB,eAAA,WACA,IACA,IAAAotB,KAAAwrB,UAAA74C,OAAA,kBAEA,OADAqtB,KAAA,GAAA,GAAA,IACAA,KACA,MAAAh8C,KALA,GAQAiB,OAAAJ,QAAA+tB,4ECVA,IAAAk7C,SAAAvpE,QAAA,eACA2jF,UAAA3jF,QAAA,gBACAmuE,SAAAnuE,QAAA,eAiFAU,OAAAJ,QA9DA,SAAA4rB,MAAAvhB,MAAA2iE,QAAAC,WAAAyD,UAAAz5D,OACA,IAAAqsE,UAjBA,EAiBAtW,QACAuW,UAAA33D,MAAA1rB,OACA4vE,UAAAzlE,MAAAnK,OAEA,GAAAqjF,WAAAzT,aAAAwT,WAAAC,UAAAzT,WACA,OAAA,EAGA,IAAA0T,WAAAvsE,MAAA8c,IAAAnI,OACA63D,WAAAxsE,MAAA8c,IAAA1pB,OACA,GAAAm5E,YAAAC,WACA,OAAAD,YAAAn5E,OAAAo5E,YAAA73D,MAEA,IAAArS,OAAA,EACA9N,QAAA,EACAykE,KA/BA,EA+BAlD,QAAA,IAAA/D,cAAAnjE,EAMA,IAJAmR,MAAAuc,IAAA5H,MAAAvhB,OACA4M,MAAAuc,IAAAnpB,MAAAuhB,SAGArS,MAAAgqE,WAAA,CACA,IAAAG,SAAA93D,MAAArS,OACAoqE,SAAAt5E,MAAAkP,OAEA,GAAA0zD,WACA,IAAA2W,SAAAN,UACArW,WAAA0W,SAAAD,SAAAnqE,MAAAlP,MAAAuhB,MAAA3U,OACAg2D,WAAAyW,SAAAC,SAAApqE,MAAAqS,MAAAvhB,MAAA4M,OAEA,QAAAnR,IAAA89E,SAAA,CACA,GAAAA,SACA,SAEAn4E,QAAA,EACA,MAGA,GAAAykE,MACA,IAAAmT,UAAAh5E,MAAA,SAAAs5E,SAAA5T,UACA,IAAAlC,SAAAqC,KAAAH,YACA2T,WAAAC,UAAAjT,UAAAgT,SAAAC,SAAA3W,QAAAC,WAAAh2D,QACA,OAAAi5D,KAAAxpE,KAAAqpE,YAEA,CACAtkE,QAAA,EACA,YAEA,GACAi4E,WAAAC,WACAjT,UAAAgT,SAAAC,SAAA3W,QAAAC,WAAAh2D,OACA,CACAxL,QAAA,EACA,OAKA,OAFAwL,MAAA,OAAA2U,OACA3U,MAAA,OAAA5M,OACAoB,uGChFA,IAAA88B,OAAA7oC,QAAA,aACA+pE,WAAA/pE,QAAA,iBACAonC,GAAApnC,QAAA,QACA6wE,YAAA7wE,QAAA,kBACAmkF,WAAAnkF,QAAA,iBACAq0E,WAAAr0E,QAAA,iBAqBA+zE,YAAAlrC,OAAAA,OAAAhlC,eAAAuC,EACAmvE,cAAAxB,YAAAA,YAAAyB,aAAApvE,EAoFA1F,OAAAJ,QAjEA,SAAA6rB,OAAAxhB,MAAA6lC,IAAA88B,QAAAC,WAAAyD,UAAAz5D,OACA,OAAAi5B,KACA,IAzBA,oBA0BA,GAAArkB,OAAAwoD,YAAAhqE,MAAAgqE,YACAxoD,OAAAgpD,YAAAxqE,MAAAwqE,WACA,OAAA,EAEAhpD,OAAAA,OAAA6oD,OACArqE,MAAAA,MAAAqqE,OAEA,IAlCA,uBAmCA,QAAA7oD,OAAAwoD,YAAAhqE,MAAAgqE,aACA3D,UAAA,IAAAjH,WAAA59C,QAAA,IAAA49C,WAAAp/D,SAKA,IAnDA,mBAoDA,IAnDA,gBAoDA,IAjDA,kBAoDA,OAAAy8B,IAAAjb,QAAAxhB,OAEA,IAxDA,iBAyDA,OAAAwhB,OAAAhoB,MAAAwG,MAAAxG,MAAAgoB,OAAA4B,SAAApjB,MAAAojB,QAEA,IAxDA,kBAyDA,IAvDA,kBA2DA,OAAA5B,QAAAxhB,MAAA,GAEA,IAjEA,eAkEA,IAAAy5E,QAAAD,WAEA,IAjEA,eAkEA,IAAAP,UA5EA,EA4EAtW,QAGA,GAFA8W,UAAAA,QAAA/P,YAEAloD,OAAA4H,MAAAppB,MAAAopB,OAAA6vD,UACA,OAAA,EAGA,IAAAhW,QAAAr2D,MAAA8c,IAAAlI,QACA,GAAAyhD,QACA,OAAAA,SAAAjjE,MAEA2iE,SAtFA,EAyFA/1D,MAAAuc,IAAA3H,OAAAxhB,OACA,IAAAoB,OAAA8kE,YAAAuT,QAAAj4D,QAAAi4D,QAAAz5E,OAAA2iE,QAAAC,WAAAyD,UAAAz5D,OAEA,OADAA,MAAA,OAAA4U,QACApgB,OAEA,IAnFA,kBAoFA,GAAAwpE,cACA,OAAAA,cAAAh1E,KAAA4rB,SAAAopD,cAAAh1E,KAAAoK,OAGA,OAAA,uJC5GA,IAAAyhE,WAAApsE,QAAA,iBASA+I,eAHAqlB,OAAAvqB,UAGAkF,eAgFArI,OAAAJ,QAjEA,SAAA6rB,OAAAxhB,MAAA2iE,QAAAC,WAAAyD,UAAAz5D,OACA,IAAAqsE,UAtBA,EAsBAtW,QACA+W,SAAAjY,WAAAjgD,QACAm4D,UAAAD,SAAA7jF,OAIA,GAAA8jF,WAHAlY,WAAAzhE,OACAnK,SAEAojF,UACA,OAAA,EAGA,IADA,IAAA/pE,MAAAyqE,UACAzqE,SAAA,CACA,IAAA/Q,IAAAu7E,SAAAxqE,OACA,KAAA+pE,UAAA96E,OAAA6B,MAAA5B,eAAAxI,KAAAoK,MAAA7B,MACA,OAAA,EAIA,IAAAy7E,WAAAhtE,MAAA8c,IAAAlI,QACA43D,WAAAxsE,MAAA8c,IAAA1pB,OACA,GAAA45E,YAAAR,WACA,OAAAQ,YAAA55E,OAAAo5E,YAAA53D,OAEA,IAAApgB,QAAA,EACAwL,MAAAuc,IAAA3H,OAAAxhB,OACA4M,MAAAuc,IAAAnpB,MAAAwhB,QAGA,IADA,IAAAq4D,SAAAZ,YACA/pE,MAAAyqE,WAAA,CAEA,IAAA/Y,SAAAp/C,OADArjB,IAAAu7E,SAAAxqE,QAEAoqE,SAAAt5E,MAAA7B,KAEA,GAAAykE,WACA,IAAA2W,SAAAN,UACArW,WAAA0W,SAAA1Y,SAAAziE,IAAA6B,MAAAwhB,OAAA5U,OACAg2D,WAAAhC,SAAA0Y,SAAAn7E,IAAAqjB,OAAAxhB,MAAA4M,OAGA,UAAAnR,IAAA89E,SACA3Y,WAAA0Y,UAAAjT,UAAAzF,SAAA0Y,SAAA3W,QAAAC,WAAAh2D,OACA2sE,UACA,CACAn4E,QAAA,EACA,MAEAy4E,WAAAA,SAAA,eAAA17E,KAEA,GAAAiD,SAAAy4E,SAAA,CACA,IAAAC,QAAAt4D,OAAAroB,YACA4gF,QAAA/5E,MAAA7G,YAGA2gF,SAAAC,SACA,gBAAAv4D,QAAA,gBAAAxhB,SACA,mBAAA85E,SAAAA,mBAAAA,SACA,mBAAAC,SAAAA,mBAAAA,WACA34E,QAAA,GAKA,OAFAwL,MAAA,OAAA4U,QACA5U,MAAA,OAAA5M,OACAoB,sECtFA,IAAA44E,QAAA3kF,QAAA,aACAyzE,SAAAzzE,QAAA,eACA0zE,YAAA1zE,QAAA,kBAaAU,OAAAJ,QAJA,SAAAm7C,MACA,OAAAi4B,YAAAD,SAAAh4B,UAAAr1C,EAAAu+E,SAAAlpC,KAAA,wHCXA,IAAAmpC,WAAA,iBAAAt0D,QAAAA,QAAAA,OAAAlC,SAAAA,QAAAkC,OAEA5vB,OAAAJ,QAAAskF,wKCHA,IAAAC,eAAA7kF,QAAA,qBACA41E,WAAA51E,QAAA,iBACAkgC,KAAAlgC,QAAA,UAaAU,OAAAJ,QAJA,SAAA6rB,QACA,OAAA04D,eAAA14D,OAAA+T,KAAA01C,+GCZA,IAAAiP,eAAA7kF,QAAA,qBACA61E,aAAA71E,QAAA,mBACAyrE,OAAAzrE,QAAA,YAcAU,OAAAJ,QAJA,SAAA6rB,QACA,OAAA04D,eAAA14D,OAAAs/C,OAAAoK,qHCbA,IAAAiP,QAAA9kF,QAAA,cACAwxB,KAAAxxB,QAAA,UASA4/C,QAAAklC,QAAA,SAAArpC,MACA,OAAAqpC,QAAAzwD,IAAAonB,OADAjqB,KAIA9wB,OAAAJ,QAAAs/C,gFCdA,IAAAmlC,UAAA/kF,QAAA,gBAMA+I,eAHAqlB,OAAAvqB,UAGAkF,eAwBArI,OAAAJ,QAfA,SAAAm7C,MAKA,IAJA,IAAA1vC,OAAA0vC,KAAAt3C,KAAA,GACA+nB,MAAA64D,UAAAh5E,QACAvL,OAAAuI,eAAAxI,KAAAwkF,UAAAh5E,QAAAmgB,MAAA1rB,OAAA,EAEAA,UAAA,CACA,IAAA4I,KAAA8iB,MAAA1rB,QACAwkF,UAAA57E,KAAAqyC,KACA,GAAA,MAAAupC,WAAAA,WAAAvpC,KACA,OAAAryC,KAAAjF,KAGA,OAAA4H,qEC3BA,IAAAk5E,UAAAjlF,QAAA,gBAiBAU,OAAAJ,QAPA,SAAAqU,IAAA7L,KACA,IAAAM,KAAAuL,IAAA60D,SACA,OAAAyb,UAAAn8E,KACAM,KAAA,iBAAAN,IAAA,SAAA,QACAM,KAAAuL,kECdA,IAAA0+D,mBAAArzE,QAAA,yBACAkgC,KAAAlgC,QAAA,UAsBAU,OAAAJ,QAbA,SAAA6rB,QAIA,IAHA,IAAApgB,OAAAm0B,KAAA/T,QACA3rB,OAAAuL,OAAAvL,OAEAA,UAAA,CACA,IAAAsI,IAAAiD,OAAAvL,QACAwI,MAAAmjB,OAAArjB,KAEAiD,OAAAvL,QAAA,CAAAsI,IAAAE,MAAAqqE,mBAAArqE,QAEA,OAAA+C,2FCpBA,IAAAm5E,aAAAllF,QAAA,mBACAmlF,SAAAnlF,QAAA,eAeAU,OAAAJ,QALA,SAAA6rB,OAAArjB,KACA,IAAAE,MAAAm8E,SAAAh5D,OAAArjB,KACA,OAAAo8E,aAAAl8E,OAAAA,WAAA5C,qFCbA,IAGAg/E,aAHAplF,QAAA,aAGAqlF,CAAAj3D,OAAA+W,eAAA/W,QAEA1tB,OAAAJ,QAAA8kF,wECLA,IAAAv8C,OAAA7oC,QAAA,aAGAoyE,YAAAhkD,OAAAvqB,UAGAkF,eAAAqpE,YAAArpE,eAOAu8E,qBAAAlT,YAAA9tE,SAGAqrE,eAAA9mC,OAAAA,OAAA+mC,iBAAAxpE,EA6BA1F,OAAAJ,QApBA,SAAA0I,OACA,IAAAu8E,MAAAx8E,eAAAxI,KAAAyI,MAAA2mE,gBACAn/B,IAAAxnC,MAAA2mE,gBAEA,IAEA,IAAA6V,WADAx8E,MAAA2mE,qBAAAvpE,GAEA,MAAA3G,IAEA,IAAAsM,OAAAu5E,qBAAA/kF,KAAAyI,OAQA,OAPAw8E,WACAD,MACAv8E,MAAA2mE,gBAAAn/B,WAEAxnC,MAAA2mE,iBAGA5jE,iEC1CA,IAAA05E,YAAAzlF,QAAA,kBACA0lF,UAAA1lF,QAAA,eAMA2vB,qBAHAvB,OAAAvqB,UAGA8rB,qBAGAg2D,iBAAAv3D,OAAAw3D,sBASAhQ,WAAA+P,iBAAA,SAAAx5D,QACA,OAAA,MAAAA,OACA,IAEAA,OAAAiC,OAAAjC,QACAs5D,YAAAE,iBAAAx5D,QAAA,SAAAvE,QACA,OAAA+H,qBAAApvB,KAAA4rB,OAAAvE,YANA89D,UAUAhlF,OAAAJ,QAAAs1E,2FC7BA,IAAA7G,UAAA/uE,QAAA,gBACAolF,aAAAplF,QAAA,mBACA41E,WAAA51E,QAAA,iBACA0lF,UAAA1lF,QAAA,eAYA61E,aATAznD,OAAAw3D,sBASA,SAAAz5D,QAEA,IADA,IAAApgB,OAAA,GACAogB,QACA4iD,UAAAhjE,OAAA6pE,WAAAzpD,SACAA,OAAAi5D,aAAAj5D,QAEA,OAAApgB,QANA25E,UASAhlF,OAAAJ,QAAAu1E,qICxBA,IAAA7O,SAAAhnE,QAAA,eACAuzB,IAAAvzB,QAAA,UACAmpE,QAAAnpE,QAAA,cACAopE,IAAAppE,QAAA,UACAgqE,QAAAhqE,QAAA,cACAywE,WAAAzwE,QAAA,iBACAiyE,SAAAjyE,QAAA,eAYA6lF,mBAAA5T,SAAAjL,UACA8e,cAAA7T,SAAA1+C,KACAwyD,kBAAA9T,SAAA9I,SACA6c,cAAA/T,SAAA7I,KACA6c,kBAAAhU,SAAAjI,SASAsC,OAAAmE,YAGAzJ,UAnBA,qBAmBAsF,OAAA,IAAAtF,SAAA,IAAAkf,YAAA,MACA3yD,KA1BA,gBA0BA+4C,OAAA,IAAA/4C,MACA41C,SAzBA,oBAyBAmD,OAAAnD,QAAAlvB,YACAmvB,KAzBA,gBAyBAkD,OAAA,IAAAlD,MACAY,SAzBA,oBAyBAsC,OAAA,IAAAtC,YACAsC,OAAA,SAAAtjE,OACA,IAAA+C,OAAA0kE,WAAAznE,OACAm/B,KA/BA,mBA+BAp8B,OAAA/C,MAAAlF,iBAAAsC,EACA+/E,WAAAh+C,KAAA8pC,SAAA9pC,MAAA,GAEA,GAAAg+C,WACA,OAAAA,YACA,KAAAN,mBAAA,MA/BA,oBAgCA,KAAAC,cAAA,MAtCA,eAuCA,KAAAC,kBAAA,MArCA,mBAsCA,KAAAC,cAAA,MArCA,eAsCA,KAAAC,kBAAA,MArCA,mBAwCA,OAAAl6E,SAIArL,OAAAJ,QAAAgsE,+JC7CA5rE,OAAAJ,QAJA,SAAA6rB,OAAArjB,KACA,OAAA,MAAAqjB,YAAA/lB,EAAA+lB,OAAArjB,iDCTA,IAAAumE,SAAArvE,QAAA,eACAuqE,YAAAvqE,QAAA,iBACA6G,QAAA7G,QAAA,aACAyqE,QAAAzqE,QAAA,cACAuyE,SAAAvyE,QAAA,cACAsvE,MAAAtvE,QAAA,YAiCAU,OAAAJ,QAtBA,SAAA6rB,OAAA9mB,KAAA+gF,SAOA,IAJA,IAAAvsE,OAAA,EACArZ,QAHA6E,KAAAgqE,SAAAhqE,KAAA8mB,SAGA3rB,OACAuL,QAAA,IAEA8N,MAAArZ,QAAA,CACA,IAAAsI,IAAAwmE,MAAAjqE,KAAAwU,QACA,KAAA9N,OAAA,MAAAogB,QAAAi6D,QAAAj6D,OAAArjB,MACA,MAEAqjB,OAAAA,OAAArjB,KAEA,OAAAiD,UAAA8N,OAAArZ,OACAuL,UAEAvL,OAAA,MAAA2rB,OAAA,EAAAA,OAAA3rB,SACA+xE,SAAA/xE,SAAAiqE,QAAA3hE,IAAAtI,UACAqG,QAAAslB,SAAAo+C,YAAAp+C,2JClCA,IAWAk6D,aAAAt7C,OAAA,uFAaArqC,OAAAJ,QAJA,SAAAuO,QACA,OAAAw3E,aAAA/gF,KAAAuJ,oDCrBA,IAAAy3E,iBAAA,qEAaA5lF,OAAAJ,QAJA,SAAAuO,QACA,OAAAy3E,iBAAAhhF,KAAAuJ,oDCXA,IAAA03E,aAAAvmF,QAAA,mBAcAU,OAAAJ,QALA,WACAkD,KAAAgmE,SAAA+c,aAAAA,aAAA,MAAA,GACA/iF,KAAAuwB,KAAA,mECKArzB,OAAAJ,QANA,SAAAwI,KACA,IAAAiD,OAAAvI,KAAA6vB,IAAAvqB,aAAAtF,KAAAgmE,SAAA1gE,KAEA,OADAtF,KAAAuwB,MAAAhoB,OAAA,EAAA,EACAA,mDCbA,IAAAw6E,aAAAvmF,QAAA,mBASA+I,eAHAqlB,OAAAvqB,UAGAkF,eAoBArI,OAAAJ,QATA,SAAAwI,KACA,IAAAM,KAAA5F,KAAAgmE,SACA,GAAA+c,aAAA,CACA,IAAAx6E,OAAA3C,KAAAN,KACA,MArBA,8BAqBAiD,YAAA3F,EAAA2F,OAEA,OAAAhD,eAAAxI,KAAA6I,KAAAN,KAAAM,KAAAN,UAAA1C,mEC1BA,IAAAmgF,aAAAvmF,QAAA,mBAMA+I,eAHAqlB,OAAAvqB,UAGAkF,eAgBArI,OAAAJ,QALA,SAAAwI,KACA,IAAAM,KAAA5F,KAAAgmE,SACA,OAAA+c,kBAAAngF,IAAAgD,KAAAN,KAAAC,eAAAxI,KAAA6I,KAAAN,sECnBA,IAAAy9E,aAAAvmF,QAAA,mBAsBAU,OAAAJ,QAPA,SAAAwI,IAAAE,OACA,IAAAI,KAAA5F,KAAAgmE,SAGA,OAFAhmE,KAAAuwB,MAAAvwB,KAAA6vB,IAAAvqB,KAAA,EAAA,EACAM,KAAAN,KAAAy9E,mBAAAngF,IAAA4C,MAfA,4BAeAA,MACAxF,sEClBA,IAGAuF,eAHAqlB,OAAAvqB,UAGAkF,eAqBArI,OAAAJ,QAZA,SAAA4rB,OACA,IAAA1rB,OAAA0rB,MAAA1rB,OACAuL,OAAA,IAAAmgB,MAAApoB,YAAAtD,QAOA,OAJAA,QAAA,iBAAA0rB,MAAA,IAAAnjB,eAAAxI,KAAA2rB,MAAA,WACAngB,OAAA8N,MAAAqS,MAAArS,MACA9N,OAAA/K,MAAAkrB,MAAAlrB,OAEA+K,mDCtBA,IAAAkpE,iBAAAj1E,QAAA,uBACAwmF,cAAAxmF,QAAA,oBACAymF,YAAAzmF,QAAA,kBACA0mF,YAAA1mF,QAAA,kBACA2mF,gBAAA3mF,QAAA,sBAwEAU,OAAAJ,QApCA,SAAA6rB,OAAAqkB,IAAAg9B,QACA,IAAArlC,KAAAhc,OAAAroB,YACA,OAAA0sC,KACA,IA3BA,uBA4BA,OAAAykC,iBAAA9oD,QAEA,IAvCA,mBAwCA,IAvCA,gBAwCA,OAAA,IAAAgc,MAAAhc,QAEA,IAjCA,oBAkCA,OAAAq6D,cAAAr6D,OAAAqhD,QAEA,IAnCA,wBAmCA,IAlCA,wBAmCA,IAlCA,qBAkCA,IAjCA,sBAiCA,IAhCA,sBAiCA,IAhCA,sBAgCA,IA/BA,6BA+BA,IA9BA,uBA8BA,IA7BA,uBA8BA,OAAAmZ,gBAAAx6D,OAAAqhD,QAEA,IAjDA,eAkDA,OAAA,IAAArlC,KAEA,IAnDA,kBAoDA,IAjDA,kBAkDA,OAAA,IAAAA,KAAAhc,QAEA,IAtDA,kBAuDA,OAAAs6D,YAAAt6D,QAEA,IAxDA,eAyDA,OAAA,IAAAgc,KAEA,IAzDA,kBA0DA,OAAAu+C,YAAAv6D,wKCxEA,IAAAq7C,WAAAxnE,QAAA,iBACAolF,aAAAplF,QAAA,mBACA4yE,YAAA5yE,QAAA,kBAeAU,OAAAJ,QANA,SAAA6rB,QACA,MAAA,mBAAAA,OAAAroB,aAAA8uE,YAAAzmD,QAEA,GADAq7C,WAAA4d,aAAAj5D,kHCbA,IAAA0c,OAAA7oC,QAAA,aACAuqE,YAAAvqE,QAAA,iBACA6G,QAAA7G,QAAA,aAGA4mF,iBAAA/9C,OAAAA,OAAAg+C,wBAAAzgF,EAcA1F,OAAAJ,QALA,SAAA0I,OACA,OAAAnC,QAAAmC,QAAAuhE,YAAAvhE,WACA49E,kBAAA59E,OAAAA,MAAA49E,iHCfA,IAGAE,SAAA,mBAoBApmF,OAAAJ,QAVA,SAAA0I,MAAAxI,QACA,IAAAyE,YAAA+D,MAGA,SAFAxI,OAAA,MAAAA,OAfA,iBAeAA,UAGA,UAAAyE,MACA,UAAAA,MAAA6hF,SAAAxhF,KAAA0D,UACA,EAAAA,OAAAA,MAAA,GAAA,GAAAA,MAAAxI,mDCrBA,IAAA4mC,GAAApnC,QAAA,QACA6mC,YAAA7mC,QAAA,iBACAyqE,QAAAzqE,QAAA,cACA2sE,SAAA3sE,QAAA,cA0BAU,OAAAJ,QAdA,SAAA0I,MAAA6Q,MAAAsS,QACA,IAAAwgD,SAAAxgD,QACA,OAAA,EAEA,IAAAlnB,YAAA4U,MACA,SAAA,UAAA5U,KACA4hC,YAAA1a,SAAAs+C,QAAA5wD,MAAAsS,OAAA3rB,QACA,UAAAyE,MAAA4U,SAAAsS,SAEAib,GAAAjb,OAAAtS,OAAA7Q,mHCxBA,IAAAnC,QAAA7G,QAAA,aACA6zE,SAAA7zE,QAAA,cAGA+mF,aAAA,mDACAC,cAAA,QAuBAtmF,OAAAJ,QAbA,SAAA0I,MAAAmjB,QACA,GAAAtlB,QAAAmC,OACA,OAAA,EAEA,IAAA/D,YAAA+D,MACA,QAAA,UAAA/D,MAAA,UAAAA,MAAA,WAAAA,MACA,MAAA+D,QAAA6qE,SAAA7qE,SAGAg+E,cAAA1hF,KAAA0D,SAAA+9E,aAAAzhF,KAAA0D,QACA,MAAAmjB,QAAAnjB,SAAAolB,OAAAjC,oFCXAzrB,OAAAJ,QAPA,SAAA0I,OACA,IAAA/D,YAAA+D,MACA,MAAA,UAAA/D,MAAA,UAAAA,MAAA,UAAAA,MAAA,WAAAA,KACA,cAAA+D,MACA,OAAAA,kDCXA,IAAA0+D,YAAA1nE,QAAA,kBACA4/C,QAAA5/C,QAAA,cACAu2E,YAAAv2E,QAAA,kBACAinF,OAAAjnF,QAAA,mBAwBAU,OAAAJ,QAdA,SAAAm7C,MACA,IAAAwqB,SAAAsQ,YAAA96B,MACA9wC,MAAAs8E,OAAAhhB,UAEA,GAAA,mBAAAt7D,SAAAs7D,YAAAyB,YAAA7jE,WACA,OAAA,EAEA,GAAA43C,OAAA9wC,MACA,OAAA,EAEA,IAAAvB,KAAAw2C,QAAAj1C,OACA,QAAAvB,MAAAqyC,OAAAryC,KAAA,8HCxBA,IAIAg2C,IAJA02B,WAAA91E,QAAA,iBAGAknF,YACA9nC,IAAA,SAAA7xB,KAAAuoD,YAAAA,WAAA51C,MAAA41C,WAAA51C,KAAAinD,UAAA,KACA,iBAAA/nC,IAAA,GAcA1+C,OAAAJ,QAJA,SAAAm7C,MACA,QAAAyrC,YAAAA,cAAAzrC,oECfA,IAAA22B,YAAAhkD,OAAAvqB,UAgBAnD,OAAAJ,QAPA,SAAA0I,OACA,IAAAm/B,KAAAn/B,OAAAA,MAAAlF,YAGA,OAAAkF,SAFA,mBAAAm/B,MAAAA,KAAAtkC,WAAAuuE,yDCZA,IAAAzF,SAAA3sE,QAAA,cAcAU,OAAAJ,QAJA,SAAA0I,OACA,OAAAA,OAAAA,QAAA2jE,SAAA3jE,mECCAtI,OAAAJ,QALA,WACAkD,KAAAgmE,SAAA,GACAhmE,KAAAuwB,KAAA,8CCTA,IAAAqzD,aAAApnF,QAAA,mBAMAgW,OAHAwS,MAAA3kB,UAGAmS,OA4BAtV,OAAAJ,QAjBA,SAAAwI,KACA,IAAAM,KAAA5F,KAAAgmE,SACA3vD,MAAAutE,aAAAh+E,KAAAN,KAEA,QAAA+Q,MAAA,IAIAA,OADAzQ,KAAA5I,OAAA,EAEA4I,KAAAgP,MAEApC,OAAAzV,KAAA6I,KAAAyQ,MAAA,KAEArW,KAAAuwB,KACA,oEC/BA,IAAAqzD,aAAApnF,QAAA,mBAkBAU,OAAAJ,QAPA,SAAAwI,KACA,IAAAM,KAAA5F,KAAAgmE,SACA3vD,MAAAutE,aAAAh+E,KAAAN,KAEA,OAAA+Q,MAAA,OAAAzT,EAAAgD,KAAAyQ,OAAA,mECfA,IAAAutE,aAAApnF,QAAA,mBAeAU,OAAAJ,QAJA,SAAAwI,KACA,OAAA,EAAAs+E,aAAA5jF,KAAAgmE,SAAA1gE,qECZA,IAAAs+E,aAAApnF,QAAA,mBAyBAU,OAAAJ,QAbA,SAAAwI,IAAAE,OACA,IAAAI,KAAA5F,KAAAgmE,SACA3vD,MAAAutE,aAAAh+E,KAAAN,KAQA,OANA+Q,MAAA,KACArW,KAAAuwB,KACA3qB,KAAApC,KAAA,CAAA8B,IAAAE,SAEAI,KAAAyQ,OAAA,GAAA7Q,MAEAxF,qECtBA,IAAA4L,KAAApP,QAAA,WACAuoE,UAAAvoE,QAAA,gBACAuzB,IAAAvzB,QAAA,UAkBAU,OAAAJ,QATA,WACAkD,KAAAuwB,KAAA,EACAvwB,KAAAgmE,SAAA,CACArkE,KAAA,IAAAiK,KACAuF,IAAA,IAAA4e,KAAAg1C,WACA15D,OAAA,IAAAO,4FChBA,IAAAi4E,WAAArnF,QAAA,iBAiBAU,OAAAJ,QANA,SAAAwI,KACA,IAAAiD,OAAAs7E,WAAA7jF,KAAAsF,KAAA,OAAAA,KAEA,OADAtF,KAAAuwB,MAAAhoB,OAAA,EAAA,EACAA,sECdA,IAAAs7E,WAAArnF,QAAA,iBAeAU,OAAAJ,QAJA,SAAAwI,KACA,OAAAu+E,WAAA7jF,KAAAsF,KAAAurB,IAAAvrB,oECZA,IAAAu+E,WAAArnF,QAAA,iBAeAU,OAAAJ,QAJA,SAAAwI,KACA,OAAAu+E,WAAA7jF,KAAAsF,KAAAuqB,IAAAvqB,oECZA,IAAAu+E,WAAArnF,QAAA,iBAqBAU,OAAAJ,QATA,SAAAwI,IAAAE,OACA,IAAAI,KAAAi+E,WAAA7jF,KAAAsF,KACAirB,KAAA3qB,KAAA2qB,KAIA,OAFA3qB,KAAA0qB,IAAAhrB,IAAAE,OACAxF,KAAAuwB,MAAA3qB,KAAA2qB,MAAAA,KAAA,EAAA,EACAvwB,oECDA9C,OAAAJ,QAVA,SAAAqU,KACA,IAAAkF,OAAA,EACA9N,OAAAyc,MAAA7T,IAAAof,MAKA,OAHApf,IAAAuiB,QAAA,SAAAluB,MAAAF,KACAiD,SAAA8N,OAAA,CAAA/Q,IAAAE,SAEA+C,mDCKArL,OAAAJ,QAVA,SAAAwI,IAAAgpE,UACA,OAAA,SAAA3lD,QACA,OAAA,MAAAA,QAGAA,OAAArjB,OAAAgpE,gBACA1rE,IAAA0rE,UAAAhpE,OAAAslB,OAAAjC,sDCfA,IAAAm7D,QAAAtnF,QAAA,aAyBAU,OAAAJ,QAZA,SAAAm7C,MACA,IAAA1vC,OAAAu7E,QAAA7rC,KAAA,SAAA3yC,KAIA,OAfA,MAYAqlC,MAAApa,MACAoa,MAAAo5B,QAEAz+D,MAGAqlC,MAAApiC,OAAAoiC,MACA,OAAApiC,kECtBA,IAAAi+D,QAAAhqE,QAAA,cAGA8kF,QAAA9a,SAAA,IAAAA,QAEAtpE,OAAAJ,QAAAwkF,kECLA,IAGAyB,aAHAvmF,QAAA,eAGAinE,CAAA74C,OAAA,UAEA1tB,OAAAJ,QAAAimF,0ECLA,IAGA1T,WAHA7yE,QAAA,aAGAqlF,CAAAj3D,OAAA8R,KAAA9R,QAEA1tB,OAAAJ,QAAAuyE,sECcAnyE,OAAAJ,QAVA,SAAA6rB,QACA,IAAApgB,OAAA,GACA,GAAA,MAAAogB,OACA,IAAA,IAAArjB,OAAAslB,OAAAjC,QACApgB,OAAA/E,KAAA8B,KAGA,OAAAiD,mDChBA,IAAA64E,WAAA5kF,QAAA,iBAGA40E,YAAA,iBAAAt0E,SAAAA,UAAAA,QAAAolC,UAAAplC,QAGAu0E,WAAAD,aAAA,iBAAAl0E,QAAAA,SAAAA,OAAAglC,UAAAhlC,OAMA6mF,YAHA1S,YAAAA,WAAAv0E,UAAAs0E,aAGAgQ,WAAA9nC,QAGA0qC,SAAA,WACA,IAEA,IAAAxvE,MAAA68D,YAAAA,WAAA70E,SAAA60E,WAAA70E,QAAA,QAAAgY,MAEA,OAAAA,OAKAuvE,aAAAA,YAAAE,SAAAF,YAAAE,QAAA,QACA,MAAAhoF,KAXA,GAcAiB,OAAAJ,QAAAknF,uEC5BA,IAOAlC,qBAPAl3D,OAAAvqB,UAOAS,SAaA5D,OAAAJ,QAJA,SAAA0I,OACA,OAAAs8E,qBAAA/kF,KAAAyI,mDCJAtI,OAAAJ,QANA,SAAAm7C,KAAAisC,WACA,OAAA,SAAA9+C,KACA,OAAA6S,KAAAisC,UAAA9+C,mDCVA,IAAA50B,MAAAhU,QAAA,YAGA6vE,UAAAt5C,KAAAi6B,IAgCA9vD,OAAAJ,QArBA,SAAAm7C,KAAArzC,MAAAs/E,WAEA,OADAt/E,MAAAynE,eAAAzpE,IAAAgC,MAAAqzC,KAAAj7C,OAAA,EAAA4H,MAAA,GACA,WAMA,IALA,IAAA2C,KAAA1C,UACAwR,OAAA,EACArZ,OAAAqvE,UAAA9kE,KAAAvK,OAAA4H,MAAA,GACA8jB,MAAA1D,MAAAhoB,UAEAqZ,MAAArZ,QACA0rB,MAAArS,OAAA9O,KAAA3C,MAAAyR,OAEAA,OAAA,EAEA,IADA,IAAA8tE,UAAAn/D,MAAApgB,MAAA,KACAyR,MAAAzR,OACAu/E,UAAA9tE,OAAA9O,KAAA8O,OAGA,OADA8tE,UAAAv/E,OAAAs/E,UAAAx7D,OACAlY,MAAAynC,KAAAj4C,KAAAmkF,qEC5BAjnF,OAAAJ,QAFA,8CCDA,IAAAskF,WAAA5kF,QAAA,iBAGA4nF,SAAA,iBAAAzgE,MAAAA,MAAAA,KAAAiH,SAAAA,QAAAjH,KAGA3L,KAAAopE,YAAAgD,UAAA1zE,SAAA,cAAAA,GAEAxT,OAAAJ,QAAAkb,mECUA9a,OAAAJ,QALA,SAAA0I,OAEA,OADAxF,KAAAgmE,SAAA11C,IAAA9qB,MAbA,6BAcAxF,iDCFA9C,OAAAJ,QAJA,SAAA0I,OACA,OAAAxF,KAAAgmE,SAAAn2C,IAAArqB,mDCOAtI,OAAAJ,QAVA,SAAAwzB,KACA,IAAAja,OAAA,EACA9N,OAAAyc,MAAAsL,IAAAC,MAKA,OAHAD,IAAAoD,QAAA,SAAAluB,OACA+C,SAAA8N,OAAA7Q,QAEA+C,mDCdA,IAAA6nE,gBAAA5zE,QAAA,sBAWA0zE,YAVA1zE,QAAA,cAUA6nF,CAAAjU,iBAEAlzE,OAAAJ,QAAAozE,iGCZA,IAIAoU,UAAA/9C,KAAAue,IA+BA5nD,OAAAJ,QApBA,SAAAm7C,MACA,IAAA8E,MAAA,EACAwnC,WAAA,EAEA,OAAA,WACA,IAAAC,MAAAF,YACAvqC,UApBA,IAoBAyqC,MAAAD,YAGA,GADAA,WAAAC,MACA,EAAAzqC,WACA,GAzBA,OAyBAgD,MACA,OAAAl4C,UAAA,QAGAk4C,MAAA,EAEA,OAAA9E,KAAAznC,WAAA5N,EAAAiC,wDChCA,IAAAkgE,UAAAvoE,QAAA,gBAcAU,OAAAJ,QALA,WACAkD,KAAAgmE,SAAA,IAAAjB,UACA/kE,KAAAuwB,KAAA,+DCMArzB,OAAAJ,QARA,SAAAwI,KACA,IAAAM,KAAA5F,KAAAgmE,SACAz9D,OAAA3C,KAAA,OAAAN,KAGA,OADAtF,KAAAuwB,KAAA3qB,KAAA2qB,KACAhoB,mDCDArL,OAAAJ,QAJA,SAAAwI,KACA,OAAAtF,KAAAgmE,SAAAn1C,IAAAvrB,iDCGApI,OAAAJ,QAJA,SAAAwI,KACA,OAAAtF,KAAAgmE,SAAAn2C,IAAAvqB,iDCVA,IAAAy/D,UAAAvoE,QAAA,gBACAuzB,IAAAvzB,QAAA,UACAkpE,SAAAlpE,QAAA,eA+BAU,OAAAJ,QAhBA,SAAAwI,IAAAE,OACA,IAAAI,KAAA5F,KAAAgmE,SACA,GAAApgE,gBAAAm/D,UAAA,CACA,IAAA1/D,MAAAO,KAAAogE,SACA,IAAAj2C,KAAA1qB,MAAArI,OAAAynF,IAGA,OAFAp/E,MAAA7B,KAAA,CAAA8B,IAAAE,QACAxF,KAAAuwB,OAAA3qB,KAAA2qB,KACAvwB,KAEA4F,KAAA5F,KAAAgmE,SAAA,IAAAN,SAAArgE,OAIA,OAFAO,KAAA0qB,IAAAhrB,IAAAE,OACAxF,KAAAuwB,KAAA3qB,KAAA2qB,KACAvwB,+FCRA9C,OAAAJ,QAZA,SAAA4rB,MAAAljB,MAAA4lE,WAIA,IAHA,IAAA/0D,MAAA+0D,UAAA,EACApuE,OAAA0rB,MAAA1rB,SAEAqZ,MAAArZ,QACA,GAAA0rB,MAAArS,SAAA7Q,MACA,OAAA6Q,MAGA,OAAA,8CCnBA,IAAAsxD,UAAAnrE,QAAA,gBACAg3E,WAAAh3E,QAAA,iBACAkoF,YAAAloF,QAAA,kBAeAU,OAAAJ,QANA,SAAAuO,QACA,OAAAmoE,WAAAnoE,QACAq5E,YAAAr5E,QACAs8D,UAAAt8D,8GCdA,IAAAs5E,aAAAnoF,QAAA,mBACAg3E,WAAAh3E,QAAA,iBACAooF,eAAApoF,QAAA,qBAeAU,OAAAJ,QANA,SAAAuO,QACA,OAAAmoE,WAAAnoE,QACAu5E,eAAAv5E,QACAs5E,aAAAt5E,oHCdA,IAAAw5E,cAAAroF,QAAA,oBAGAsoF,WAAA,mGAGAC,aAAA,WASA/T,aAAA6T,cAAA,SAAAx5E,QACA,IAAA9C,OAAA,GAOA,OANA,KAAA8C,OAAA0mB,WAAA,IACAxpB,OAAA/E,KAAA,IAEA6H,OAAAnG,QAAA4/E,WAAA,SAAA//D,MAAAxZ,OAAAy5E,MAAAC,WACA18E,OAAA/E,KAAAwhF,MAAAC,UAAA//E,QAAA6/E,aAAA,MAAAx5E,QAAAwZ,SAEAxc,SAGArL,OAAAJ,QAAAk0E,8EC1BA,IAAAX,SAAA7zE,QAAA,cAoBAU,OAAAJ,QARA,SAAA0I,OACA,GAAA,iBAAAA,OAAA6qE,SAAA7qE,OACA,OAAAA,MAEA,IAAA+C,OAAA/C,MAAA,GACA,MAAA,KAAA+C,QAAA,EAAA/C,QAAA,EAAA,EAAA,KAAA+C,mEChBA,IAGAsmE,aAHAn+D,SAAArQ,UAGAS,SAqBA5D,OAAAJ,QAZA,SAAAm7C,MACA,GAAA,MAAAA,KAAA,CACA,IACA,OAAA42B,aAAA9xE,KAAAk7C,MACA,MAAAh8C,IACA,IACA,OAAAg8C,KAAA,GACA,MAAAh8C,KAEA,MAAA,+CCrBA,IAAAipF,aAAA,KAiBAhoF,OAAAJ,QAPA,SAAAuO,QAGA,IAFA,IAAAgL,MAAAhL,OAAArO,OAEAqZ,SAAA6uE,aAAApjF,KAAAuJ,OAAA6B,OAAAmJ,UACA,OAAAA,kDCdA,IAQA8uE,SAAA,oBACAC,QAAA,kDACAC,OAAA,2BAEAC,YAAA,qBACAC,WAAA,kCACAC,WAAA,qCAIAC,SAPA,MAAAL,QAAA,IAAAC,OAAA,IAOA,IAGAK,MAFA,oBAEAD,UADA,gBAAA,CAAAH,YAAAC,WAAAC,YAAAthF,KAAA,KAAA,qBAAAuhF,SAAA,MAEAE,SAAA,MAAA,CAAAL,YAAAF,QAAA,IAAAA,QAAAG,WAAAC,WAAAL,UAAAjhF,KAAA,KAAA,IAGA0hF,UAAAr+C,OAAA89C,OAAA,MAAAA,OAAA,KAAAM,SAAAD,MAAA,KAiBAxoF,OAAAJ,QARA,SAAAuO,QAEA,IADA,IAAA9C,OAAAq9E,UAAA9T,UAAA,EACA8T,UAAA9jF,KAAAuJ,WACA9C,OAEA,OAAAA,mDCvCA,IAQA48E,SAAA,oBACAC,QAAA,kDACAC,OAAA,2BAEAC,YAAA,qBACAC,WAAA,kCACAC,WAAA,qCAIAC,SAPA,MAAAL,QAAA,IAAAC,OAAA,IAOA,IAGAK,MAFA,oBAEAD,UADA,gBAAA,CAAAH,YAAAC,WAAAC,YAAAthF,KAAA,KAAA,qBAAAuhF,SAAA,MAEAE,SAAA,MAAA,CAAAL,YAAAF,QAAA,IAAAA,QAAAG,WAAAC,WAAAL,UAAAjhF,KAAA,KAAA,IAGA0hF,UAAAr+C,OAAA89C,OAAA,MAAAA,OAAA,KAAAM,SAAAD,MAAA,KAaAxoF,OAAAJ,QAJA,SAAAuO,QACA,OAAAA,OAAA0Z,MAAA6gE,YAAA,+CCnCA,IAaAC,aAAAC,8OAIAC,QAAA,IAAAF,aAAA,IAEAG,SAAA,OACAC,UAAA,oBACAC,QAAA,8BACAC,OAAA,oBAAAN,aAAAG,SAjBA,qEAqBAT,WAAA,kCACAC,WAAA,qCACAY,QAAA,8BAIAC,YAAA,MAAAH,QAAA,IAAAC,OAAA,IACAG,YAAA,MAAAF,QAAA,IAAAD,OAAA,IAGAV,SAAAc,gFAKAb,MAJA,oBAIAD,UAHA,gBAAA,CAbA,qBAaAF,WAAAC,YAAAthF,KAAA,KAAA,qBAAAuhF,SAAA,MAIAe,QAAA,MAAA,CAAAP,UAAAV,WAAAC,YAAAthF,KAAA,KAAA,IAAAwhF,MAGAe,cAAAl/C,OAAA,CACA6+C,QAAA,IAAAF,QAAA,oCAAA,CAAAH,QAAAK,QAAA,KAAAliF,KAAA,KAAA,IACAoiF,YAAA,oCAAA,CAAAP,QAAAK,QAAAC,YAAA,KAAAniF,KAAA,KAAA,IACAkiF,QAAA,IAAAC,YAAA,iCACAD,QAAA,iCATA,mDADA,mDAaAJ,SACAQ,SACAtiF,KAAA,KAAA,KAaAhH,OAAAJ,QAJA,SAAAuO,QACA,OAAAA,OAAA0Z,MAAA0hE,gBAAA,+CCjEA,IAAAviB,YAAA1nE,QAAA,kBACAwoE,cAAAxoE,QAAA,oBACAisE,UAAAjsE,QAAA,gBAoBAU,OAAAJ,QAXA,SAAAs2E,SACA,GAAAA,mBAAAlP,YACA,OAAAkP,QAAAjvC,QAEA,IAAA57B,OAAA,IAAAy8D,cAAAoO,QAAAjP,YAAAiP,QAAAlO,WAIA,OAHA38D,OAAA67D,YAAAqE,UAAA2K,QAAAhP,aACA77D,OAAA48D,UAAAiO,QAAAjO,UACA58D,OAAA68D,WAAAgO,QAAAhO,WACA78D,+GCnBA,IAuBAklD,KAvBAjxD,QAAA,iBAuBAkqF,CAAA,QAEAxpF,OAAAJ,QAAA2wD,oECzBA,IAAAwjB,UAAAz0E,QAAA,gBACAmqF,eAAAnqF,QAAA,qBACAs3E,UAAAt3E,QAAA,eAGAm3E,WAAA5gD,KAAA06B,KACA4e,UAAAt5C,KAAAi6B,IA2CA9vD,OAAAJ,QApBA,SAAA4rB,MAAA6H,KAAAq2D,OAEAr2D,MADAq2D,MAAAD,eAAAj+D,MAAA6H,KAAAq2D,YAAAhkF,IAAA2tB,MACA,EAEA87C,UAAAyH,UAAAvjD,MAAA,GAEA,IAAAvzB,OAAA,MAAA0rB,MAAA,EAAAA,MAAA1rB,OACA,IAAAA,QAAAuzB,KAAA,EACA,MAAA,GAMA,IAJA,IAAAla,MAAA,EACAuwD,SAAA,EACAr+D,OAAAyc,MAAA2uD,WAAA32E,OAAAuzB,OAEAla,MAAArZ,QACAuL,OAAAq+D,YAAAqK,UAAAvoD,MAAArS,MAAAA,OAAAka,MAEA,OAAAhoB,+GC9CA,IAAAs+E,UAAArqF,QAAA,gBACAu3E,SAAAv3E,QAAA,cAqCAU,OAAAJ,QAhBA,SAAAyO,OAAA28D,MAAAC,OAaA,YAZAvlE,IAAAulE,QACAA,MAAAD,MACAA,WAAAtlE,QAEAA,IAAAulE,QAEAA,OADAA,MAAA4L,SAAA5L,SACAA,MAAAA,MAAA,QAEAvlE,IAAAslE,QAEAA,OADAA,MAAA6L,SAAA7L,SACAA,MAAAA,MAAA,GAEA2e,UAAA9S,SAAAxoE,QAAA28D,MAAAC,qFCnCA,IAAA0B,UAAArtE,QAAA,gBAmCAU,OAAAJ,QAJA,SAAA0I,OACA,OAAAqkE,UAAArkE,MA7BA,gECHA,IAAAqkE,UAAArtE,QAAA,gBA4BAU,OAAAJ,QAJA,SAAA0I,OACA,OAAAqkE,UAAArkE,MAAA6jE,gECKAnsE,OAAAJ,QAfA,SAAA4rB,OAMA,IALA,IAAArS,OAAA,EACArZ,OAAA,MAAA0rB,MAAA,EAAAA,MAAA1rB,OACA4pE,SAAA,EACAr+D,OAAA,KAEA8N,MAAArZ,QAAA,CACA,IAAAwI,MAAAkjB,MAAArS,OACA7Q,QACA+C,OAAAq+D,YAAAphE,OAGA,OAAA+C,mDCFArL,OAAAJ,QANA,SAAA0I,OACA,OAAA,WACA,OAAAA,mDCrBA,IAAA2uE,aAAA33E,QAAA,mBACAsE,SAAAtE,QAAA,cAGAsqF,QAAA,8CAeAC,YAAAx/C,OANA,kDAMA,KAyBArqC,OAAAJ,QALA,SAAAuO,QAEA,OADAA,OAAAvK,SAAAuK,UACAA,OAAAnG,QAAA4hF,QAAA3S,cAAAjvE,QAAA6hF,YAAA,sFCjBA7pF,OAAAJ,QAJA,SAAA0I,MAAAgvC,cACA,OAAA,MAAAhvC,OAAAA,OAAAA,MAAAgvC,aAAAhvC,kDCrBA,IAAAwhF,eAAAxqF,QAAA,qBACAivE,YAAAjvE,QAAA,kBACAyqF,SAAAzqF,QAAA,eACAu0E,kBAAAv0E,QAAA,uBAuBA0qF,WAAAD,SAAA,SAAAv+D,MAAAnU,QACA,OAAAw8D,kBAAAroD,OACAs+D,eAAAt+D,MAAA+iD,YAAAl3D,OAAA,EAAAw8D,mBAAA,IACA,KAGA7zE,OAAAJ,QAAAoqF,4ICIAhqF,OAAAJ,QAJA,SAAA0I,MAAA2B,OACA,OAAA3B,QAAA2B,OAAA3B,OAAAA,OAAA2B,OAAAA,kDCjCA,IAAA86E,YAAAzlF,QAAA,kBACA2qF,WAAA3qF,QAAA,iBACAo2E,aAAAp2E,QAAA,mBACA6G,QAAA7G,QAAA,aAgDAU,OAAAJ,QALA,SAAA+qD,WAAA8e,WAEA,OADAtjE,QAAAwkD,YAAAo6B,YAAAkF,YACAt/B,WAAA+qB,aAAAjM,UAAA,4HChDA,IAuCA75B,KAvCAtwC,QAAA,gBAuCA4qF,CAtCA5qF,QAAA,gBAwCAU,OAAAJ,QAAAgwC,qFCzCA,IAAA0/B,cAAAhwE,QAAA,oBACAo2E,aAAAp2E,QAAA,mBACAs3E,UAAAt3E,QAAA,eAGA6vE,UAAAt5C,KAAAi6B,IAiDA9vD,OAAAJ,QAZA,SAAA4rB,MAAAi+C,UAAAyE,WACA,IAAApuE,OAAA,MAAA0rB,MAAA,EAAAA,MAAA1rB,OACA,IAAAA,OACA,OAAA,EAEA,IAAAqZ,MAAA,MAAA+0D,UAAA,EAAA0I,UAAA1I,WAIA,OAHA/0D,MAAA,IACAA,MAAAg2D,UAAArvE,OAAAqZ,MAAA,IAEAm2D,cAAA9jD,MAAAkqD,aAAAjM,UAAA,GAAAtwD,gHCnDA,IAAAgxE,YAAA7qF,QAAA,kBACAyuE,WAAAzuE,QAAA,iBACAo2E,aAAAp2E,QAAA,mBAyCAU,OAAAJ,QAJA,SAAA6rB,OAAAg+C,WACA,OAAA0gB,YAAA1+D,OAAAiqD,aAAAjM,UAAA,GAAAsE,oHCxCA,IAsBAqc,SAtBA9qF,QAAA,gBAsBA4qF,CArBA5qF,QAAA,oBAuBAU,OAAAJ,QAAAwqF,6FCxBA,IAAA9a,cAAAhwE,QAAA,oBACAo2E,aAAAp2E,QAAA,mBACAs3E,UAAAt3E,QAAA,eAGA6vE,UAAAt5C,KAAAi6B,IACAsf,UAAAv5C,KAAAw5C,IAoDArvE,OAAAJ,QAfA,SAAA4rB,MAAAi+C,UAAAyE,WACA,IAAApuE,OAAA,MAAA0rB,MAAA,EAAAA,MAAA1rB,OACA,IAAAA,OACA,OAAA,EAEA,IAAAqZ,MAAArZ,OAAA,EAOA,YANA4F,IAAAwoE,YACA/0D,MAAAy9D,UAAA1I,WACA/0D,MAAA+0D,UAAA,EACAiB,UAAArvE,OAAAqZ,MAAA,GACAi2D,UAAAj2D,MAAArZ,OAAA,IAEAwvE,cAAA9jD,MAAAkqD,aAAAjM,UAAA,GAAAtwD,OAAA,4GCvDAnZ,OAAAJ,QAAAN,QAAA,iECAA,IAAAivE,YAAAjvE,QAAA,kBAqBAU,OAAAJ,QALA,SAAA4rB,OAEA,OADA,MAAAA,OAAAA,MAAA1rB,OACAyuE,YAAA/iD,MAAA,GAAA,kEClBA,IAuBAsK,MAvBAx2B,QAAA,iBAuBAkqF,CAAA,SAEAxpF,OAAAJ,QAAAk2B,qECzBA,IAwBAu0D,KAxBA/qF,QAAA,gBAwBAgrF,GAEAtqF,OAAAJ,QAAAyqF,mEC1BA,IAAAnf,UAAA5rE,QAAA,gBACA0uE,SAAA1uE,QAAA,eACAirF,aAAAjrF,QAAA,mBACA6G,QAAA7G,QAAA,aAqCAU,OAAAJ,QALA,SAAA+qD,WAAA6e,UAEA,OADArjE,QAAAwkD,YAAAugB,UAAA8C,UACArjB,WAAA4/B,aAAA/gB,+HCrCA,IAAAoJ,QAAAtzE,QAAA,cAgCAU,OAAAJ,QALA,SAAA6rB,OAAA9mB,KAAA2yC,cACA,IAAAjsC,OAAA,MAAAogB,YAAA/lB,EAAAktE,QAAAnnD,OAAA9mB,MACA,YAAAe,IAAA2F,OAAAisC,aAAAjsC,kEC7BA,IAAAm/E,QAAAlrF,QAAA,cACAmrF,QAAAnrF,QAAA,cAiCAU,OAAAJ,QAJA,SAAA6rB,OAAA9mB,MACA,OAAA,MAAA8mB,QAAAg/D,QAAAh/D,OAAA9mB,KAAA6lF,qFC/BA,IAAAE,UAAAprF,QAAA,gBACAmrF,QAAAnrF,QAAA,cAgCAU,OAAAJ,QAJA,SAAA6rB,OAAA9mB,MACA,OAAA,MAAA8mB,QAAAg/D,QAAAh/D,OAAA9mB,KAAA+lF,yFCRA1qF,OAAAJ,QAJA,SAAA4rB,OACA,OAAAA,OAAAA,MAAA1rB,OAAA0rB,MAAA,QAAA9lB,8CCCA1F,OAAAJ,QAJA,SAAA0I,OACA,OAAAA,kDCjBA,IAAAqiF,YAAArrF,QAAA,kBACAsrF,SAAAtrF,QAAA,cACAu3E,SAAAv3E,QAAA,cAoDAU,OAAAJ,QAZA,SAAAyO,OAAA3G,MAAA+H,KASA,OARA/H,MAAAkjF,SAAAljF,YACAhC,IAAA+J,KACAA,IAAA/H,MACAA,MAAA,GAEA+H,IAAAm7E,SAAAn7E,KAEApB,OAAAwoE,SAAAxoE,QACAs8E,YAAAt8E,OAAA3G,MAAA+H,sGCnDA,IAAAk6D,YAAArqE,QAAA,kBACA6mC,YAAA7mC,QAAA,iBACAurF,SAAAvrF,QAAA,cACAs3E,UAAAt3E,QAAA,eACA+X,OAAA/X,QAAA,YAGA6vE,UAAAt5C,KAAAi6B,IA6CA9vD,OAAAJ,QAbA,SAAA+qD,WAAAriD,MAAA4lE,UAAAwb,OACA/+B,WAAAxkB,YAAAwkB,YAAAA,WAAAtzC,OAAAszC,YACAujB,UAAAA,YAAAwb,MAAA9S,UAAA1I,WAAA,EAEA,IAAApuE,OAAA6qD,WAAA7qD,OAIA,OAHAouE,UAAA,IACAA,UAAAiB,UAAArvE,OAAAouE,UAAA,IAEA2c,SAAAlgC,YACAujB,WAAApuE,SAAA,EAAA6qD,WAAAr7C,QAAAhH,MAAA4lE,aACApuE,SAAA,EAAA6pE,YAAAhf,WAAAriD,MAAA4lE,gJCjDA,IAAAX,SAAAjuE,QAAA,eACAwrF,iBAAAxrF,QAAA,uBACAyqF,SAAAzqF,QAAA,eACAyrF,oBAAAzrF,QAAA,0BAmBA0rF,aAAAjB,SAAA,SAAAta,QACA,IAAAp6B,OAAAk4B,SAAAkC,OAAAsb,qBACA,OAAA11C,OAAAv1C,QAAAu1C,OAAA,KAAAo6B,OAAA,GACAqb,iBAAAz1C,QACA,KAGAr1C,OAAAJ,QAAAorF,gJC7BA,IAAAC,gBAAA3rF,QAAA,sBACA0wE,aAAA1wE,QAAA,kBAGAoyE,YAAAhkD,OAAAvqB,UAGAkF,eAAAqpE,YAAArpE,eAGA4mB,qBAAAyiD,YAAAziD,qBAoBA46C,YAAAohB,gBAAA,WAAA,OAAAtjF,UAAA,IAAAsjF,gBAAA,SAAA3iF,OACA,OAAA0nE,aAAA1nE,QAAAD,eAAAxI,KAAAyI,MAAA,YACA2mB,qBAAApvB,KAAAyI,MAAA,WAGAtI,OAAAJ,QAAAiqE,mGCZA,IAAA1jE,QAAA2hB,MAAA3hB,QAEAnG,OAAAJ,QAAAuG,mDCzBA,IAAAwoB,WAAArvB,QAAA,gBACAuyE,SAAAvyE,QAAA,cA+BAU,OAAAJ,QAJA,SAAA0I,OACA,OAAA,MAAAA,OAAAupE,SAAAvpE,MAAAxI,UAAA6uB,WAAArmB,sFC7BA,IAAA69B,YAAA7mC,QAAA,iBACA0wE,aAAA1wE,QAAA,kBA+BAU,OAAAJ,QAJA,SAAA0I,OACA,OAAA0nE,aAAA1nE,QAAA69B,YAAA79B,2FC7BA,IAAAwS,KAAAxb,QAAA,WACA4rF,UAAA5rF,QAAA,eAGA40E,YAAA,iBAAAt0E,SAAAA,UAAAA,QAAAolC,UAAAplC,QAGAu0E,WAAAD,aAAA,iBAAAl0E,QAAAA,SAAAA,OAAAglC,UAAAhlC,OAMAo0E,OAHAD,YAAAA,WAAAv0E,UAAAs0E,YAGAp5D,KAAAs5D,YAAA1uE,EAsBAokE,UAnBAsK,OAAAA,OAAAtK,cAAApkE,IAmBAwlF,UAEAlrF,OAAAJ,QAAAkqE,mFCrCA,IAAAqhB,SAAA7rF,QAAA,eACAssE,OAAAtsE,QAAA,aACAuqE,YAAAvqE,QAAA,iBACA6G,QAAA7G,QAAA,aACA6mC,YAAA7mC,QAAA,iBACAwqE,SAAAxqE,QAAA,cACA4yE,YAAA5yE,QAAA,kBACA0qE,aAAA1qE,QAAA,kBAUA+I,eAHAqlB,OAAAvqB,UAGAkF,eA2DArI,OAAAJ,QAxBA,SAAA0I,OACA,GAAA,MAAAA,MACA,OAAA,EAEA,GAAA69B,YAAA79B,SACAnC,QAAAmC,QAAA,iBAAAA,OAAA,mBAAAA,MAAAgN,QACAw0D,SAAAxhE,QAAA0hE,aAAA1hE,QAAAuhE,YAAAvhE,QACA,OAAAA,MAAAxI,OAEA,IAAAgwC,IAAA87B,OAAAtjE,OACA,GApDA,gBAoDAwnC,KAnDA,gBAmDAA,IACA,OAAAxnC,MAAA+qB,KAEA,GAAA6+C,YAAA5pE,OACA,OAAA6iF,SAAA7iF,OAAAxI,OAEA,IAAA,IAAAsI,OAAAE,MACA,GAAAD,eAAAxI,KAAAyI,MAAAF,KACA,OAAA,EAGA,OAAA,kMCzEA,IAAA8nE,YAAA5wE,QAAA,kBAkCAU,OAAAJ,QAJA,SAAA0I,MAAA2B,OACA,OAAAimE,YAAA5nE,MAAA2B,sEC/BA,IAAA8lE,WAAAzwE,QAAA,iBACA2sE,SAAA3sE,QAAA,cAmCAU,OAAAJ,QAVA,SAAA0I,OACA,IAAA2jE,SAAA3jE,OACA,OAAA,EAIA,IAAAwnC,IAAAigC,WAAAznE,OACA,MA5BA,qBA4BAwnC,KA3BA,8BA2BAA,KA7BA,0BA6BAA,KA1BA,kBA0BAA,mFCCA9vC,OAAAJ,QALA,SAAA0I,OACA,MAAA,iBAAAA,QACA,EAAAA,OAAAA,MAAA,GAAA,GAAAA,OA9BA,6DCDA,IAAA8iF,UAAA9rF,QAAA,gBACAkuE,UAAAluE,QAAA,gBACAwnF,SAAAxnF,QAAA,eAGA+rF,UAAAvE,UAAAA,SAAA9a,MAmBAA,MAAAqf,UAAA7d,UAAA6d,WAAAD,UAEAprF,OAAAJ,QAAAosE,uGC1BA,IAAAsf,SAAAhsF,QAAA,cAqCAU,OAAAJ,QAPA,SAAA0I,OAIA,OAAAgjF,SAAAhjF,QAAAA,QAAAA,kECVAtI,OAAAJ,QAJA,SAAA0I,OACA,OAAA,MAAAA,kDCrBA,IAAAynE,WAAAzwE,QAAA,iBACA0wE,aAAA1wE,QAAA,kBAoCAU,OAAAJ,QALA,SAAA0I,OACA,MAAA,iBAAAA,OACA0nE,aAAA1nE,QA9BA,mBA8BAynE,WAAAznE,0FCJAtI,OAAAJ,QALA,SAAA0I,OACA,IAAA/D,YAAA+D,MACA,OAAA,MAAAA,QAAA,UAAA/D,MAAA,YAAAA,kDCCAvE,OAAAJ,QAJA,SAAA0I,OACA,OAAA,MAAAA,OAAA,iBAAAA,kDCzBA,IAAAijF,UAAAjsF,QAAA,gBACAkuE,UAAAluE,QAAA,gBACAwnF,SAAAxnF,QAAA,eAGAksF,UAAA1E,UAAAA,SAAA5a,MAmBAA,MAAAsf,UAAAhe,UAAAge,WAAAD,UAEAvrF,OAAAJ,QAAAssE,wGC1BA,IAAA6D,WAAAzwE,QAAA,iBACA6G,QAAA7G,QAAA,aACA0wE,aAAA1wE,QAAA,kBA2BAU,OAAAJ,QALA,SAAA0I,OACA,MAAA,iBAAAA,QACAnC,QAAAmC,QAAA0nE,aAAA1nE,QArBA,mBAqBAynE,WAAAznE,0GC1BA,IAAAynE,WAAAzwE,QAAA,iBACA0wE,aAAA1wE,QAAA,kBA2BAU,OAAAJ,QALA,SAAA0I,OACA,MAAA,iBAAAA,OACA0nE,aAAA1nE,QArBA,mBAqBAynE,WAAAznE,0FCzBA,IAAAmjF,iBAAAnsF,QAAA,uBACAkuE,UAAAluE,QAAA,gBACAwnF,SAAAxnF,QAAA,eAGAosF,iBAAA5E,UAAAA,SAAA9c,aAmBAA,aAAA0hB,iBAAAle,UAAAke,kBAAAD,iBAEAzrF,OAAAJ,QAAAoqE,sHC1BA,IAAA2hB,cAAArsF,QAAA,oBACA6rF,SAAA7rF,QAAA,eACA6mC,YAAA7mC,QAAA,iBAkCAU,OAAAJ,QAJA,SAAA6rB,QACA,OAAA0a,YAAA1a,QAAAkgE,cAAAlgE,QAAA0/D,SAAA1/D,+GCjCA,IAAAkgE,cAAArsF,QAAA,oBACAssF,WAAAtsF,QAAA,iBACA6mC,YAAA7mC,QAAA,iBA6BAU,OAAAJ,QAJA,SAAA6rB,QACA,OAAA0a,YAAA1a,QAAAkgE,cAAAlgE,QAAA,GAAAmgE,WAAAngE,iHCTAzrB,OAAAJ,QALA,SAAA4rB,OACA,IAAA1rB,OAAA,MAAA0rB,MAAA,EAAAA,MAAA1rB,OACA,OAAAA,OAAA0rB,MAAA1rB,OAAA,QAAA4F,8CChBA,IAsBAmmF,UAtBAvsF,QAAA,sBAsBAwsF,CAAA,SAAAzgF,OAAA0gF,KAAA5yE,OACA,OAAA9N,QAAA8N,MAAA,IAAA,IAAA4yE,KAAA18D,gBAGArvB,OAAAJ,QAAAisF,8EC1BA,IAAAte,SAAAjuE,QAAA,eACAo2E,aAAAp2E,QAAA,mBACA0sF,QAAA1sF,QAAA,cACA6G,QAAA7G,QAAA,aAiDAU,OAAAJ,QALA,SAAA+qD,WAAA6e,UAEA,OADArjE,QAAAwkD,YAAA4iB,SAAAye,SACArhC,WAAA+qB,aAAAlM,SAAA,uHCjDA,IAAAoB,gBAAAtrE,QAAA,sBACAyuE,WAAAzuE,QAAA,iBACAo2E,aAAAp2E,QAAA,mBAwCAU,OAAAJ,QAVA,SAAA6rB,OAAA+9C,UACA,IAAAn+D,OAAA,GAMA,OALAm+D,SAAAkM,aAAAlM,SAAA,GAEAuE,WAAAtiD,OAAA,SAAAnjB,MAAAF,IAAAqjB,QACAm/C,gBAAAv/D,OAAAjD,IAAAohE,SAAAlhE,MAAAF,IAAAqjB,WAEApgB,mHCvCA,IAAAm9D,SAAAlpE,QAAA,eAGA2sF,gBAAA,sBA8CA,SAAArF,QAAA7rC,KAAAmxC,UACA,GAAA,mBAAAnxC,MAAA,MAAAmxC,UAAA,mBAAAA,SACA,MAAA,IAAAl3D,UAAAi3D,iBAEA,IAAAE,SAAA,WACA,IAAA9hF,KAAA1C,UACAS,IAAA8jF,SAAAA,SAAA54E,MAAAxQ,KAAAuH,MAAAA,KAAA,GACAojC,MAAA0+C,SAAA1+C,MAEA,GAAAA,MAAA9a,IAAAvqB,KACA,OAAAqlC,MAAA9Z,IAAAvrB,KAEA,IAAAiD,OAAA0vC,KAAAznC,MAAAxQ,KAAAuH,MAEA,OADA8hF,SAAA1+C,MAAAA,MAAAra,IAAAhrB,IAAAiD,SAAAoiC,MACApiC,QAGA,OADA8gF,SAAA1+C,MAAA,IAAAm5C,QAAAwF,OAAA5jB,UACA2jB,SAIAvF,QAAAwF,MAAA5jB,SAEAxoE,OAAAJ,QAAAgnF,mECxDA5mF,OAAAJ,QAJA,wDCZA,IAAAysF,cAAA/sF,QAAA,oBACAi3E,WAAAj3E,QAAA,iBACAs3E,UAAAt3E,QAAA,eACAsE,SAAAtE,QAAA,cAmCAU,OAAAJ,QAVA,SAAAuO,OAAArO,OAAA42E,OACAvoE,OAAAvK,SAAAuK,QAGA,IAAAm+E,WAFAxsF,OAAA82E,UAAA92E,SAEAy2E,WAAApoE,QAAA,EACA,OAAArO,QAAAwsF,UAAAxsF,OACAqO,OAAAk+E,cAAAvsF,OAAAwsF,UAAA5V,OACAvoE,gICnCA,IAAAu8D,aAAAprE,QAAA,mBACAitF,iBAAAjtF,QAAA,uBACAozE,MAAApzE,QAAA,YACAsvE,MAAAtvE,QAAA,YA4BAU,OAAAJ,QAJA,SAAA+E,MACA,OAAA+tE,MAAA/tE,MAAA+lE,aAAAkE,MAAAjqE,OAAA4nF,iBAAA5nF,+HC5BA,IAAA6nF,WAAAltF,QAAA,iBACAmqF,eAAAnqF,QAAA,qBACAsrF,SAAAtrF,QAAA,cAGAmtF,eAAAx+B,WAGAmhB,UAAAv5C,KAAAw5C,IACAyD,aAAAj9C,KAAA+B,OAwEA53B,OAAAJ,QAvCA,SAAAorE,MAAAC,MAAAyhB,UA2BA,GA1BAA,UAAA,kBAAAA,UAAAjD,eAAAze,MAAAC,MAAAyhB,YACAzhB,MAAAyhB,cAAAhnF,QAEAA,IAAAgnF,WACA,kBAAAzhB,OACAyhB,SAAAzhB,MACAA,WAAAvlE,GAEA,kBAAAslE,QACA0hB,SAAA1hB,MACAA,WAAAtlE,SAGAA,IAAAslE,YAAAtlE,IAAAulE,OACAD,MAAA,EACAC,MAAA,IAGAD,MAAA4f,SAAA5f,YACAtlE,IAAAulE,OACAA,MAAAD,MACAA,MAAA,GAEAC,MAAA2f,SAAA3f,QAGAA,MAAAD,MAAA,CACA,IAAA1zC,KAAA0zC,MACAA,MAAAC,MACAA,MAAA3zC,KAEA,GAAAo1D,UAAA1hB,MAAA,GAAAC,MAAA,EAAA,CACA,IAAA0hB,KAAA7Z,eACA,OAAA1D,UAAApE,MAAA2hB,MAAA1hB,MAAAD,MAAAyhB,eAAA,QAAAE,KAAA,IAAA7sF,OAAA,KAAAmrE,OAEA,OAAAuhB,WAAAxhB,MAAAC,+GC9EA,IAAAqK,YAAAh2E,QAAA,kBACA0uE,SAAA1uE,QAAA,eACAo2E,aAAAp2E,QAAA,mBACAstF,WAAAttF,QAAA,iBACA6G,QAAA7G,QAAA,aA8CAU,OAAAJ,QAPA,SAAA+qD,WAAA6e,SAAAe,aACA,IAAAxvB,KAAA50C,QAAAwkD,YAAA2qB,YAAAsX,WACApiB,UAAA7iE,UAAA7H,OAAA,EAEA,OAAAi7C,KAAA4P,WAAA+qB,aAAAlM,SAAA,GAAAe,YAAAC,UAAAwD,oJC/CA,IAuBAr2C,MAvBAr4B,QAAA,iBAuBAkqF,CAAA,SAEAxpF,OAAAJ,QAAA+3B,qECzBA,IAAAgyD,UAAArqF,QAAA,gBACAi0E,aAAAj0E,QAAA,mBACAs3E,UAAAt3E,QAAA,eACAsE,SAAAtE,QAAA,cAmCAU,OAAAJ,QAVA,SAAAuO,OAAA+4B,OAAA2mB,UAOA,OANA1/C,OAAAvK,SAAAuK,QACA0/C,SAAA,MAAAA,SACA,EACA87B,UAAA/S,UAAA/oB,UAAA,EAAA1/C,OAAArO,QAEAonC,OAAAqsC,aAAArsC,QACA/4B,OAAA1E,MAAAokD,SAAAA,SAAA3mB,OAAApnC,SAAAonC,6HCbAlnC,OAAAJ,QAJA,WACA,MAAA,+CCFAI,OAAAJ,QAJA,WACA,OAAA,8CCdA,IAAAm0E,UAAAz0E,QAAA,gBAqBAU,OAAAJ,QALA,SAAA4rB,OACA,IAAA1rB,OAAA,MAAA0rB,MAAA,EAAAA,MAAA1rB,OACA,OAAAA,OAAAi0E,UAAAvoD,MAAA,EAAA1rB,QAAA,iEClBA,IAAA+2E,SAAAv3E,QAAA,cAyCAU,OAAAJ,QAZA,SAAA0I,OACA,OAAAA,OAGAA,MAAAuuE,SAAAvuE,UA9BA,EAAA,GA+BAA,SAAA,EAAA,EAIAA,OAAAA,MAAAA,MAAA,EAlCA,uBA+BAA,MAAA,GAAA,EAAA,GAJA,IAAAA,MAAAA,MAAA,8DC/BA,IAAAsiF,SAAAtrF,QAAA,cAmCAU,OAAAJ,QAPA,SAAA0I,OACA,IAAA+C,OAAAu/E,SAAAtiF,OACAukF,UAAAxhF,OAAA,EAEA,OAAAA,QAAAA,OAAAwhF,UAAAxhF,OAAAwhF,UAAAxhF,OAAA,8DChCA,IAAAzH,SAAAtE,QAAA,cA2BAU,OAAAJ,QAJA,SAAA0I,OACA,OAAA1E,SAAA0E,OAAA+mB,0ECxBA,IAAAy9D,SAAAxtF,QAAA,eACA2sE,SAAA3sE,QAAA,cACA6zE,SAAA7zE,QAAA,cAMAytF,WAAA,qBAGAC,WAAA,aAGAC,UAAA,cAGAC,aAAA59D,SA8CAtvB,OAAAJ,QArBA,SAAA0I,OACA,GAAA,iBAAAA,MACA,OAAAA,MAEA,GAAA6qE,SAAA7qE,OACA,OA1CA,IA4CA,GAAA2jE,SAAA3jE,OAAA,CACA,IAAA2B,MAAA,mBAAA3B,MAAAwsE,QAAAxsE,MAAAwsE,UAAAxsE,MACAA,MAAA2jE,SAAAhiE,OAAAA,MAAA,GAAAA,MAEA,GAAA,iBAAA3B,MACA,OAAA,IAAAA,MAAAA,OAAAA,MAEAA,MAAAwkF,SAAAxkF,OACA,IAAA6kF,SAAAH,WAAApoF,KAAA0D,OACA,OAAA6kF,UAAAF,UAAAroF,KAAA0D,OACA4kF,aAAA5kF,MAAAmB,MAAA,GAAA0jF,SAAA,EAAA,GACAJ,WAAAnoF,KAAA0D,OAvDA,KAuDAA,qGC5DA,IAAAirE,aAAAj0E,QAAA,mBA2BAU,OAAAJ,QAJA,SAAA0I,OACA,OAAA,MAAAA,MAAA,GAAAirE,aAAAjrE,wECxBA,IAAA8kF,SAAA9tF,QAAA,eAwBAU,OAAAJ,QAJA,SAAA4rB,OACA,OAAAA,OAAAA,MAAA1rB,OAAAstF,SAAA5hE,OAAA,gECrBA,IAAA5nB,SAAAtE,QAAA,cAGA+tF,UAAA,EAwBArtF,OAAAJ,QALA,SAAA4Z,QACA,IAAAV,KAAAu0E,UACA,OAAAzpF,SAAA4V,QAAAV,+DCxBA,IAAAw0E,WAAAhuF,QAAA,iBACAkgC,KAAAlgC,QAAA,UAgCAU,OAAAJ,QAJA,SAAA6rB,QACA,OAAA,MAAAA,OAAA,GAAA6hE,WAAA7hE,OAAA+T,KAAA/T,qFC9BA,IAAAq+D,eAAAxqF,QAAA,qBACAyqF,SAAAzqF,QAAA,eACAu0E,kBAAAv0E,QAAA,uBAsBAiuF,QAAAxD,SAAA,SAAAv+D,MAAAnU,QACA,OAAAw8D,kBAAAroD,OACAs+D,eAAAt+D,MAAAnU,QACA,KAGArX,OAAAJ,QAAA2tF,qHC9BA,IAAAC,WAAAluF,QAAA,iBACAmuF,eAAAnuF,QAAA,qBACAsE,SAAAtE,QAAA,cACAouF,aAAApuF,QAAA,mBA+BAU,OAAAJ,QAVA,SAAAuO,OAAA+jC,QAAAw3C,OAIA,OAHAv7E,OAAAvK,SAAAuK,aAGAzI,KAFAwsC,QAAAw3C,WAAAhkF,EAAAwsC,SAGAu7C,eAAAt/E,QAAAu/E,aAAAv/E,QAAAq/E,WAAAr/E,QAEAA,OAAA0Z,MAAAqqB,UAAA,gIC/BA,IAAA80B,YAAA1nE,QAAA,kBACAwoE,cAAAxoE,QAAA,oBACAynE,WAAAznE,QAAA,iBACA6G,QAAA7G,QAAA,aACA0wE,aAAA1wE,QAAA,kBACAquF,aAAAruF,QAAA,mBAMA+I,eAHAqlB,OAAAvqB,UAGAkF,eAuHA,SAAAk+E,OAAAj+E,OACA,GAAA0nE,aAAA1nE,SAAAnC,QAAAmC,UAAAA,iBAAA0+D,aAAA,CACA,GAAA1+D,iBAAAw/D,cACA,OAAAx/D,MAEA,GAAAD,eAAAxI,KAAAyI,MAAA,eACA,OAAAqlF,aAAArlF,OAGA,OAAA,IAAAw/D,cAAAx/D,QAIAi+E,OAAApjF,UAAA4jE,WAAA5jE,WACAC,YAAAmjF,OAEAvmF,OAAAJ,QAAA2mF,8LCjJA,WACA,IAAAqH,eAAAC,OAAAC,SAAAC,eAAAC,aAAAC,OAEA,oBAAAC,aAAA,OAAAA,aAAAA,YAAAtmC,IACA5nD,OAAAJ,QAAA,WACA,OAAAsuF,YAAAtmC,OAEA,MAAAxL,SAAAA,QAAAyxC,QACA7tF,OAAAJ,QAAA,WACA,OAAAguF,iBAAAI,cAAA,KAEAH,OAAAzxC,QAAAyxC,OAMAE,gBALAH,eAAA,WACA,IAAAO,GAEA,OAAA,KADAA,GAAAN,UACA,GAAAM,GAAA,OAGAF,OAAA,IAAA7xC,QAAAgyC,SACAJ,aAAAD,eAAAE,QAKAH,SAJAzkD,KAAAue,KACA5nD,OAAAJ,QAAA,WACA,OAAAypC,KAAAue,MAAAkmC,UAEAzkD,KAAAue,QAEA5nD,OAAAJ,QAAA,WACA,OAAA,IAAAypC,MAAAglD,UAAAP,WAEA,IAAAzkD,MAAAglD,aAGAxuF,KAAAiD,8FChCA,IAOAwrF,iBACAC,mBARAnyC,QAAAp8C,OAAAJ,QAAA,GAUA,SAAA4uF,mBACA,MAAA,IAAA/uF,MAAA,mCAEA,SAAAgvF,sBACA,MAAA,IAAAhvF,MAAA,qCAsBA,SAAAivF,WAAAC,KACA,GAAAL,mBAAA7xC,WAEA,OAAAA,WAAAkyC,IAAA,GAGA,IAAAL,mBAAAE,mBAAAF,mBAAA7xC,WAEA,OADA6xC,iBAAA7xC,WACAA,WAAAkyC,IAAA,GAEA,IAEA,OAAAL,iBAAAK,IAAA,GACA,MAAA5vF,GACA,IAEA,OAAAuvF,iBAAAzuF,KAAA,KAAA8uF,IAAA,GACA,MAAA5vF,GAEA,OAAAuvF,iBAAAzuF,KAAAiD,KAAA6rF,IAAA,MAvCA,WACA,IAEAL,iBADA,mBAAA7xC,WACAA,WAEA+xC,iBAEA,MAAAzvF,GACAuvF,iBAAAE,iBAEA,IAEAD,mBADA,mBAAAx2B,aACAA,aAEA02B,oBAEA,MAAA1vF,GACAwvF,mBAAAE,qBAjBA,GAwEA,IAEAG,aAFAv0C,MAAA,GACAw0C,UAAA,EAEAC,YAAA,EAEA,SAAAC,kBACAF,UAAAD,eAGAC,UAAA,EACAD,aAAA9uF,OACAu6C,MAAAu0C,aAAAt6E,OAAA+lC,OAEAy0C,YAAA,EAEAz0C,MAAAv6C,QACAkvF,cAIA,SAAAA,aACA,IAAAH,SAAA,CAGA,IAAA/2B,QAAA42B,WAAAK,iBACAF,UAAA,EAGA,IADA,IAAAxoF,IAAAg0C,MAAAv6C,OACAuG,KAAA,CAGA,IAFAuoF,aAAAv0C,MACAA,MAAA,KACAy0C,WAAAzoF,KACAuoF,cACAA,aAAAE,YAAA/7B,MAGA+7B,YAAA,EACAzoF,IAAAg0C,MAAAv6C,OAEA8uF,aAAA,KACAC,UAAA,EAnEA,SAAAI,QACA,GAAAV,qBAAAx2B,aAEA,OAAAA,aAAAk3B,QAGA,IAAAV,qBAAAE,sBAAAF,qBAAAx2B,aAEA,OADAw2B,mBAAAx2B,aACAA,aAAAk3B,QAEA,IAEAV,mBAAAU,QACA,MAAAlwF,GACA,IAEA,OAAAwvF,mBAAA1uF,KAAA,KAAAovF,QACA,MAAAlwF,GAGA,OAAAwvF,mBAAA1uF,KAAAiD,KAAAmsF,UAgDAC,CAAAp3B,UAiBA,SAAAq3B,KAAAR,IAAAnjE,OACA1oB,KAAA6rF,IAAAA,IACA7rF,KAAA0oB,MAAAA,MAYA,SAAAsF,QA5BAsrB,QAAAgzC,SAAA,SAAAT,KACA,IAAAtkF,KAAA,IAAAyd,MAAAngB,UAAA7H,OAAA,GACA,GAAA,EAAA6H,UAAA7H,OACA,IAAA,IAAAX,EAAA,EAAAA,EAAAwI,UAAA7H,OAAAX,IACAkL,KAAAlL,EAAA,GAAAwI,UAAAxI,GAGAk7C,MAAA/zC,KAAA,IAAA6oF,KAAAR,IAAAtkF,OACA,IAAAgwC,MAAAv6C,QAAA+uF,UACAH,WAAAM,aASAG,KAAAhsF,UAAA4vD,IAAA,WACAjwD,KAAA6rF,IAAAr7E,MAAA,KAAAxQ,KAAA0oB,QAEA4wB,QAAAizC,MAAA,UACAjzC,QAAAkzC,SAAA,EACAlzC,QAAA3zC,IAAA,GACA2zC,QAAAmzC,KAAA,GACAnzC,QAAA1jB,QAAA,GACA0jB,QAAAozC,SAAA,GAIApzC,QAAA8H,GAAApzB,KACAsrB,QAAAqzC,YAAA3+D,KACAsrB,QAAA5B,KAAA1pB,KACAsrB,QAAAkI,IAAAxzB,KACAsrB,QAAAszC,eAAA5+D,KACAsrB,QAAAuzC,mBAAA7+D,KACAsrB,QAAAwzC,KAAA9+D,KACAsrB,QAAAyzC,gBAAA/+D,KACAsrB,QAAA0zC,oBAAAh/D,KAEAsrB,QAAA2zC,UAAA,SAAAtsF,MAAA,MAAA,IAEA24C,QAAA2qC,QAAA,SAAAtjF,MACA,MAAA,IAAAhE,MAAA,qCAGA28C,QAAA4zC,IAAA,WAAA,MAAA,KACA5zC,QAAA6zC,MAAA,SAAA5jD,KACA,MAAA,IAAA5sC,MAAA,mCAEA28C,QAAA8zC,MAAA,WAAA,OAAA,gEChLA,IAPA,IAAAtoC,IAAAtoD,QAAA,mBACAwb,KAAA,oBAAA+U,OAAAD,OAAAC,OACAsgE,QAAA,CAAA,MAAA,UACAx9B,OAAA,iBACAy9B,IAAAt1E,KAAA,UAAA63C,QACA09B,IAAAv1E,KAAA,SAAA63C,SAAA73C,KAAA,gBAAA63C,QAEAxzD,EAAA,GAAAixF,KAAAjxF,EAAAgxF,QAAArwF,OAAAX,IACAixF,IAAAt1E,KAAAq1E,QAAAhxF,GAAA,UAAAwzD,QACA09B,IAAAv1E,KAAAq1E,QAAAhxF,GAAA,SAAAwzD,SACA73C,KAAAq1E,QAAAhxF,GAAA,gBAAAwzD,QAIA,IAAAy9B,MAAAC,IAAA,CACA,IAAA5hE,KAAA,EACA3V,GAAA,EACAuhC,MAAA,GAGA+1C,IAAA,SAAA72E,UACA,GAAA,IAAA8gC,MAAAv6C,OAAA,CACA,IAAAwwF,KAAA1oC,MACA3+B,KAAA4M,KAAAi6B,IAAA,EALA,IAAA,IAKAwgC,KAAA7hE,OACAA,KAAAxF,KAAAqnE,KACA7zC,WAAA,WAMA,IALA,IAAA8zC,GAAAl2C,MAAA5wC,MAAA,GAKAtK,EADAk7C,MAAAv6C,OAAA,EACAX,EAAAoxF,GAAAzwF,OAAAX,IACA,IAAAoxF,GAAApxF,GAAAqxF,UACA,IACAD,GAAApxF,GAAAoa,SAAAkV,MACA,MAAA1vB,GACA09C,WAAA,WAAA,MAAA19C,GAAA,KAIA82B,KAAA8B,MAAA1O,OAOA,OALAoxB,MAAA/zC,KAAA,CACAm/C,SAAA3sC,GACAS,SAAAA,SACAi3E,WAAA,IAEA13E,IAGAu3E,IAAA,SAAA5qC,QACA,IAAA,IAAAtmD,EAAA,EAAAA,EAAAk7C,MAAAv6C,OAAAX,IACAk7C,MAAAl7C,GAAAsmD,SAAAA,SACApL,MAAAl7C,GAAAqxF,WAAA,IAMAxwF,OAAAJ,QAAA,SAAA8D,IAIA,OAAA0sF,IAAAvwF,KAAAib,KAAApX,KAEA1D,OAAAJ,QAAA6wF,OAAA,WACAJ,IAAA/8E,MAAAwH,KAAAnT,YAEA3H,OAAAJ,QAAA8wF,SAAA,SAAAjlE,QACAA,SACAA,OAAA3Q,MAEA2Q,OAAAyoC,sBAAAk8B,IACA3kE,OAAAklE,qBAAAN,kRCzEA,IAAAO,QAAAC,uBAAAvxF,QAAA,WACAwxF,QAAAD,uBAAAvxF,QAAA,iBACAyxF,YAAAF,uBAAAvxF,QAAA,qBACA0xF,eAAAH,uBAAAvxF,QAAA,oBACA2xF,UAAAJ,uBAAAvxF,QAAA,mBACA4xF,YAAAL,uBAAAvxF,QAAA,wBACA6xF,kBAAA7xF,QAAA,gCACA8xF,aAAA9xF,QAAA,2BACA+xF,YAAA/xF,QAAA,0BACAgyF,UAAAhyF,QAAA,8XAEAuwB,OAAO0hE,KAAO,GACd1hE,OAAO0hE,KAAKC,IAAM,GAGlB,IAAM7yC,KAAO,GAMbr/C,QAAQ,UAGR,IAAImyF,QAAS,EAKQC,eAKjB,SAAAA,IAAYC,wIAASC,CAAA9uF,KAAA4uF,KAQjB5uF,KAAK+uF,UAAW,EAAAjB,QAAA,SAAEe,SAClB7uF,KAAKgvF,eAAiB,IAAId,eAAA,QAAcluF,KAAK+uF,UAC7C/uF,KAAKivF,SAAWd,UAAA,QAEhBphE,OAAO8uB,KAAOA,KAEd77C,KAAK67C,KAAOA,KACZ77C,KAAK67C,KAAK8W,UAAW,EACrB3yD,KAAK67C,KAAKp7C,IAAM+tF,UAAAU,IAAIC,MACpBnvF,KAAK67C,KAAKuzC,QAAS,EAEnBpvF,KAAKqvF,gBACAC,iJASe,IAAAr7E,MAAAjU,KACpB8tF,QAAA,QAAEtvB,QAAQ,wCACLn5C,KAAK,SAACw4C,UAAD,OAAc5pD,MAAKs7E,gCAAgC1xB,YACxDhnB,KAAK,SAACgjB,OAAD,OAAWptC,QAAQ1U,MAAR,gCAAAvG,OAA8CqoD,MAAMkD,OAApD,MAAAvrD,OAA+DqoD,MAAMoD,iEASpEr3D,MACtB,IAAM4pF,gBAAkB5pF,KAAKgnC,OAAO,SAAC6iD,SAAD,OAAkC,IAArBA,QAAQpmD,WAEnDqmD,qBAAuB1vF,KAAK2vF,mBAAmBH,iBAErDxvF,KAAK4vF,mBAAmBJ,gBAAiBE,uEAWpBG,KAAML,iBAC3B,QAAQ,EAAAxB,QAAA,SAAO6B,OAASL,gBAAgB30D,KAAK,SAAC40D,SAAD,OAAaA,QAAQI,OAASA,kDAW5DL,iBACf,IAAIM,YAAczB,kBAAA0B,qBACZC,oCAAsCC,aAAa3B,aAAA4B,YAAYC,kBAMrE,OAJInwF,KAAKowF,yBAAyBJ,oCAAqCR,mBACnEM,aAAc,EAAA7B,YAAA,SAAWgC,aAAa3B,aAAA4B,YAAYC,oBAG/CL,oDAoBP,OATA9vF,KAAKuvF,gCAAkCvvF,KAAKqwF,0BAA0B39B,KAAK1yD,MAC3EA,KAAKswF,gDAAkDtwF,KAAKuwF,yCAAyC79B,KAAK1yD,MAC1GA,KAAKwwF,+BAAiCxwF,KAAKywF,wBAAwB/9B,KAAK1yD,MACxEA,KAAK0wF,qBAAuB1wF,KAAK2wF,cAAcj+B,KAAK1yD,MACpDA,KAAK4wF,eAAiB5wF,KAAK6wF,SAASn+B,KAAK1yD,MACzCA,KAAK8wF,gBAAkB9wF,KAAK+wF,OAAOr+B,KAAK1yD,MAExCA,KAAKivF,SAAS7tC,GAAGmtC,YAAAyC,MAAMC,kBAAmBjxF,KAAK4wF,gBAExC5wF,gDAgBQwvF,gBAAiBE,sBAAsB,IAAAwB,OAAAlxF,KAChDmxF,mBAAqBzB,qBAAqBnjE,cAEhDuhE,QAAA,QAAEtvB,QAAF,mBAAAhtD,OAA6B2/E,mBAA7B,UACKr6C,KAAK,SAAC+mB,UAAD,OAAcqzB,OAAKV,+BAA+BhB,gBAAiB2B,mBAAoBtzB,YADjG,MAEW,SAAC9lD,OAAD,OAAWm5E,OAAKZ,gDAAgDd,oFAatCA,iBAAiB,IAAA4B,OAAApxF,KACtD8tF,QAAA,QAAEtvB,QAAF,mBAAAhtD,OAA6B68E,kBAAA0B,qBAA7B,UACKj5C,KAAK,SAACu6C,wBAAD,OAA4BD,OAAKZ,+BACnChB,gBACAnB,kBAAA0B,qBACAsB,0EAeY7B,gBAAiB2B,mBAAoBG,wBAAwB,IAAAC,OAAAvxF,KAC3EwxF,mBAAqB1D,QAAA,QAAEtvB,QAAQ,iCAC/BizB,oBAAsB3D,QAAA,QAAEtvB,QAAQ,iCAChCkzB,wBAA0B5D,QAAA,QAAEtvB,QAAQ,6BAK1CsvB,QAAA,QAAEj0C,KAAK23C,mBAAoBC,oBAAqBC,yBAC3CrsE,KAAK,SAACssE,gBAAiBC,iBAAkBC,sBACtCN,OAAKb,qBACDlB,gBACA2B,mBACAG,uBACAK,gBAAgB,GAAGG,SACnBF,iBAAiB,GAAGG,SACpBF,qBAAqB,4CAwBjCrC,gBACA2B,mBACAa,mBACAC,YACAC,2BACAC,eAEAnyF,KAAKgvF,eAAe2B,cAChBnB,gBACA2B,mBACAa,mBACAC,YACAC,2BACAC,eAGJnyF,KAAKoyF,0CAYL,OAAOpyF,KAAKqyF,WACPjvD,OACA/d,yCAQL,OAAOrlB,KAAKsyF,4CAcZ,OAFAtyF,KAAK+uF,SAAW,KAET/uF,wCA8BP,OAFAA,KAAKgvF,eAAeqD,WAEbryF,oCAUP,OAFAA,KAAKgvF,eAAe5rD,OAEbpjC,yCAQP,OAAOA,oCAiBP,OATAA,KAAKgvF,eAAe3pE,OACpBrlB,KAAKgvF,eAAeuD,SAEpBvyF,KAAK67C,KAAKuzC,QAAS,EAEfT,QACAv9B,sBAAsBpxD,KAAK8wF,iBAGxB9wF,wCAUP,OAFAA,KAAKgvF,eAAer8B,WAEb3yD,yCAUP,OAFAA,KAAKgvF,eAAewD,YAEbxyF,0CAUP,OAFAA,KAAKgvF,eAAeyD,aAEbzyF,sCAcP,OANKA,KAAK67C,KAAK8W,WACX3yD,KAAK2yD,WAEL3yD,KAAK67C,KAAK8W,UAAW,GAGpBg8B,SAILv9B,sBAAsBpxD,KAAK8wF,iBAE3B9wF,KAAKwyF,YACLxyF,KAAKyyF,aACLrE,YAAA,QAAW2C,UAEJ/wF,sCAQF0yF,eACA/D,QAAU+D,cACXthC,sBAAsBpxD,KAAK8wF,iBAG/BnC,OAAS+D,6hBCxZjB,IAAA5E,QAAAC,uBAAAvxF,QAAA,WACAm2F,oBAAA5E,uBAAAvxF,QAAA,kCACAo2F,mBAAA7E,uBAAAvxF,QAAA,gCACAq2F,mBAAA9E,uBAAAvxF,QAAA,gCACAs2F,4BAAA/E,uBAAAvxF,QAAA,8CACAu2F,kBAAAhF,uBAAAvxF,QAAA,8BACAw2F,uBAAAjF,uBAAAvxF,QAAA,iCACAy2F,qBAAAlF,uBAAAvxF,QAAA,oCACA02F,cAAAnF,uBAAAvxF,QAAA,gCACA22F,cAAApF,uBAAAvxF,QAAA,mBACA42F,gBAAArF,uBAAAvxF,QAAA,0BACA62F,iBAAAtF,uBAAAvxF,QAAA,sBACA2xF,UAAAJ,uBAAAvxF,QAAA,mBACA82F,aAAAvF,uBAAAvxF,QAAA,kBACA+2F,mBAAAxF,uBAAAvxF,QAAA,0CACAg3F,YAAAzF,uBAAAvxF,QAAA,uBACAi3F,wBAAA1F,uBAAAvxF,QAAA,8CACAk3F,gBAAA3F,uBAAAvxF,QAAA,sCACAm3F,cAAA5F,uBAAAvxF,QAAA,sBACAo3F,iBAAA7F,uBAAAvxF,QAAA,2BACAq3F,QAAAr3F,QAAA,YACA+xF,YAAA/xF,QAAA,0BACAs3F,WAAAt3F,QAAA,yBACAu3F,iBAAAv3F,QAAA,yYAWqBw3F,yBAKjB,SAAAA,cAAYnF,SAoBR,qIApBiBC,CAAA9uF,KAAAg0F,eAQjBh0F,KAAK+uF,UAAW,EAAAjB,QAAA,SAAEe,SAElB7uF,KAAKi0F,iBAAmB,KACxBj0F,KAAKk0F,UAAY/F,UAAA,QACjBnuF,KAAKm0F,YAAc,KACnBn0F,KAAKo0F,aAAe,KACpBp0F,KAAKq0F,kBAAoB,KACzBr0F,KAAKs0F,uBAAyB,KAC9Bt0F,KAAKu0F,gBAAkB,KACvBv0F,KAAKw0F,iBAAmB,KACxBx0F,KAAKy0F,oBAAsB,KAEpBz0F,KAAK00F,QACPrF,gBACA+C,4HAUL,OAAOpyF,6CAcP,OAHAA,KAAK20F,uBAAyB30F,KAAK40F,gBAAgBliC,KAAK1yD,MACxDA,KAAK60F,sBAAwB70F,KAAK80F,eAAepiC,KAAK1yD,MAE/CA,sCAYP,OAHAA,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAM+D,eAAgB/0F,KAAK20F,wBAC7C30F,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAMgE,cAAeh1F,KAAK60F,uBAErC70F,uCAYP,OAHAA,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAM+D,eAAgB/0F,KAAK20F,wBAC9C30F,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAMgE,cAAeh1F,KAAK60F,uBAEtC70F,KAAKsyF,4CAoBZ,OAVAtyF,KAAK+uF,SAAW,KAChB/uF,KAAKi0F,iBAAmB,KACxBj0F,KAAKk0F,UAAY,KACjBl0F,KAAKm0F,YAAc,KACnBn0F,KAAKo0F,aAAe,KACpBp0F,KAAKq0F,kBAAoB,KACzBr0F,KAAKs0F,uBAAyB,KAC9Bt0F,KAAKu0F,gBAAkB,KACvBv0F,KAAKw0F,iBAAmB,KAEjBx0F,2CAkBPwvF,gBACA2B,mBACAa,mBACAC,YACAC,2BACA+C,kBACF,IAAAhhF,MAAAjU,KACEmzF,cAAA,QAAa+B,YAAYnB,iBAAAoB,gBAAgBC,SAAU,eAAgBjE,oBAEnEnxF,KAAKi0F,iBAAmBj0F,KAAK+uF,SAASjiD,KAAKgnD,WAAAuB,UAAUC,cAAcC,UAKnEv1F,KAAKm0F,YAAc,IAAIb,aAAA,QACvBtzF,KAAKo0F,aAAe,IAAIlB,cAAA,QAAalzF,KAAKm0F,aAC1C1F,KAAKC,IAAI8G,UAAY,SAAC/3F,SAAD,OAAawW,MAAKmgF,aAAanwF,IAAIxG,UAMxDo1F,mBAAA,QAAkBzvD,KAAK+tD,mBAAoBa,mBAAoBxC,iBAC/D+D,mBAAA,QAAkBnwD,KAAK4uD,oBACvByB,wBAAA,QAAuBrwD,KAAK4uD,oBAE5BhyF,KAAKy1F,kBAAoB,IAAI7C,mBAAA,QAAkBX,aAC/CjyF,KAAK01F,WAAa,IAAIlC,YAAA,QACtBxzF,KAAK21F,mBAAqB,IAAIhD,oBAAA,QAAmBT,2BAA4BlyF,KAAKy1F,kBAAmBz1F,KAAK01F,YAC1G11F,KAAK41F,gBAAkB,IAAIhC,iBAAA,QAAgB5zF,KAAK21F,oBAEhDjC,gBAAA,QAAetwD,KAAKpjC,KAAK21F,oBAMzB5oE,OAAO4oE,mBAAqB31F,KAAK21F,mBAEjChC,cAAA,QAAavwD,KAAKpjC,KAAK+uF,UAEvB/uF,KAAKw0F,iBAAmB,IAAIzB,kBAAA,QAAiB/yF,KAAKi0F,iBAAkBj0F,KAAK21F,mBAAoB31F,KAAK01F,YAElG11F,KAAKu0F,gBAAkB,IAAIlB,iBAAA,QAAgBrzF,KAAK+uF,SAAU/uF,KAAK21F,mBAAoB31F,KAAK01F,YACxF11F,KAAK61F,sBAAwB,IAAI7C,uBAAA,QAAsBhzF,KAAK+uF,UAC5D/uF,KAAKs0F,uBAAyB,IAAIxB,4BAAA,QAA2B9yF,KAAK+uF,SAAUkG,iBAAkBjD,mBAAmBnC,MACjH7vF,KAAKy0F,oBAAsB,IAAIxB,qBAAA,QAAoBjzF,KAAKo0F,cAExDp0F,KAAK81F,wDAQL1C,gBAAA,QAAef,WACfryF,KAAKu0F,gBAAgBwB,iDAQrB,EAAAlC,QAAAmC,eAEAh2F,KAAKw0F,iBAAiByB,cACtBtC,cAAA,QAAauC,2EAcbl2F,KAAKw0F,iBAAiB2B,mDAQtBn2F,KAAKm0F,YAAYxhC,WACjBygC,gBAAA,QAAezgC,WACf3yD,KAAKw0F,iBAAiB4B,kBACtBzC,cAAA,QAAa0C,kDAQbr2F,KAAK61F,sBAAsBS,cAC3BlD,gBAAA,QAAemD,aACfv2F,KAAK21F,mBAAmB5E,gFAcxB/wF,KAAKw0F,iBAAiBgC,mBACtBx2F,KAAK21F,mBAAmBc,+DAiBZC,iBACP7D,mBAAA,QAAkBlgF,UAKvBwgF,cAAA,QAAa+B,YAAYnB,iBAAAoB,gBAAgBC,SAAU,mBAAoBsB,gBAAgB7G,MACvF0D,mBAAA,QAAkB5hD,QAClB3xC,KAAKy1F,kBAAkB9jD,QACvB3xC,KAAK21F,mBAAmBgB,sBACxB32F,KAAK01F,WAAWkB,sBAAsBjlD,QACtC8hD,wBAAA,QAAuB9hD,QACvByhD,gBAAA,QAAeyD,gBAEftD,mBAAA,QAAkBnwD,KAAKszD,iBACvBjD,wBAAA,QAAuBrwD,KAAKszD,iBAC5BhD,gBAAA,QAAeoD,iBAEf92F,KAAK81F,+DAUL3C,cAAA,QAAa+B,YAAYnB,iBAAAoB,gBAAgBC,SAAU,gBAAiBvC,mBAAA,QAAkBlgF,QAAQk9E,MAC9F7vF,KAAK21F,mBAAmBgB,sBACxB32F,KAAK01F,WAAWkB,sBAAsBjlD,QACtCkhD,mBAAA,QAAkBlgF,QAAQokF,uBAC1BrD,gBAAA,QAAesD,2BACftD,gBAAA,QAAeuD,oEAcE,IACAxH,QAAYoD,mBAAA,QAArBlgF,QAER3S,KAAKk0F,UAAUjyC,QAAQssC,YAAAyC,MAAMkG,sBAE7B,EAAApJ,QAAA,SAAEgG,WAAAuB,UAAUC,cAAc6B,yBAAyBx4C,OAAiD,GAAzC8wC,QAAQ2H,kBAAoB,IAAIp6F,SAC3F,EAAA8wF,QAAA,SAAEgG,WAAAuB,UAAUC,cAAc+B,aAAa14C,OAAO40C,mBAAA,QAAkB+D,UAChE,EAAAxJ,QAAA,SAAEgG,WAAAuB,UAAUC,cAAciC,gBAAgB54C,OAAO8wC,QAAQ7pF,KAAK4xF,6gCCjVtE,IAAAzD,iBAAAv3F,QAAA,gUA2Fe,eA7EX,SAAAi7F,8IAAc3I,CAAA9uF,KAAAy3F,cACLz3F,KAAK03F,aAMV13F,KAAK23F,MAAQ5qE,OAAO6qE,KALhBnrE,QAAQ1U,MAAM,kMAoBV8/E,SAAUtzE,OAAQuzE,OAAqB,IAAdtyF,MAAc,EAAAX,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAN,KACzC,GAAK7E,KAAK03F,aAAV,CAOA,IAAMn2C,MAAQ,CACVw2C,eAAgBF,SAChBG,aAAczzE,OACd0zE,YAAaH,OAOjB,OAJItyF,QACA+7C,MAAM/7C,MAAQA,OAGXxF,KAAK23F,MAAM,QAASp2C,MAAMw2C,eAAgBx2C,OAhB7C90B,QAAQ1U,MAAM,8HA0BIqf,KACtB,GAAKp3B,KAAK03F,aAAV,CAOA,IAAMn2C,MAAQ,CACVw2C,eAAgBhE,iBAAAoB,gBAAgB+C,SAChCD,YAAa7gE,IACb+gE,eAAgB,UAGpB,OAAOn4F,KAAK23F,MAAM,QAAS,QAASp2C,OAZhC90B,QAAQ1U,MAAM,iHAqBlB,YAA8B,IAAhBgV,OAAO6qE,uUCtF7B,IAAA9J,QAAAC,uBAAAvxF,QAAA,WACA47F,MAAArK,uBAAAvxF,QAAA,eACA67F,WAAAtK,uBAAAvxF,QAAA,oBACAq2F,mBAAA9E,uBAAAvxF,QAAA,gCACA87F,wBAAAvK,uBAAAvxF,QAAA,6CACA+7F,kBAAAxK,uBAAAvxF,QAAA,8BACAg8F,sBAAAzK,uBAAAvxF,QAAA,gCACA2xF,UAAAJ,uBAAAvxF,QAAA,mBACA42F,gBAAArF,uBAAAvxF,QAAA,0BACAm3F,cAAA5F,uBAAAvxF,QAAA,sBACAi8F,eAAA1K,uBAAAvxF,QAAA,qCACAk8F,mBAAA3K,uBAAAvxF,QAAA,8CACA22F,cAAApF,uBAAAvxF,QAAA,mBACAm8F,aAAA5K,uBAAAvxF,QAAA,8BACAo8F,eAAA7K,uBAAAvxF,QAAA,sCACAq8F,MAAAr8F,QAAA,eACA+xF,YAAA/xF,QAAA,0BACAs8F,qBAAAt8F,QAAA,mCACAu8F,iBAAAv8F,QAAA,+BACAw8F,gBAAAx8F,QAAA,8BAQAs3F,WAAAt3F,QAAA,yBACAu3F,iBAAAv3F,QAAA,o4CAGA,IAAMgB,MAAQ,GAKOy7F,2BAOjB,SAAAA,gBAAYlK,SAAU4G,mBAAoBD,YAAY,IAAAzhF,MAAAjU,oIAAA8uF,CAAA9uF,KAAAi5F,iBAAAC,gBAAAl5F,KAAA,iBA6WrC,SAACm5F,eACTA,eAAkBA,cAAcC,gBAQrCv9C,KAAKr+C,MAAM67F,SAAWF,cAAcE,SACpCplF,MAAKzW,MAAM67F,SAAWF,cAAcE,SACpCplF,MAAKqlF,cAAcltF,IAAnB,GAAAoF,OAA0B2nF,cAAcE,SAAxC,MAEKplF,MAAKqlF,cAAcxkD,GAAG,WACvB7gC,MAAKqlF,cAAc9oD,QAGvBv8B,MAAKigF,UAAUjyC,QAAQssC,YAAAyC,MAAMuI,gBAAiBJ,gBAf1CllF,MAAKulF,qBA/WyCN,gBAAAl5F,KAAA,2BAwY3B,SAACq5F,UACxB,IAAMF,cAAgBllF,MAAKwlF,oBAAoBC,uBAAuBL,UAEtEplF,MAAK0lF,eAAeR,iBA1YpBn5F,KAAK+uF,SAAWA,SAChB/uF,KAAK45F,MAAQ,KACb55F,KAAK65F,QAAU,KACf75F,KAAKs5F,cAAgB,KACrBt5F,KAAK85F,UAAY,KAEjB95F,KAAKk0F,UAAY/F,UAAA,QACjBnuF,KAAKy5F,oBAAsB9D,mBAC3B31F,KAAK+5F,YAAcrE,WACnB11F,KAAKg6F,wBAA0B,IAAI1B,wBAAA,QAAuBt4F,KAAK+uF,SAAU/uF,KAAMA,KAAKy5F,qBAEpF59C,KAAKr+C,MAAQA,MACbwC,KAAKxC,MAAQA,MACbwC,KAAKxC,MAAM67F,SAAW,GACtBr5F,KAAKxC,MAAMy8F,QAAU,GACrBj6F,KAAKxC,MAAM08F,aAAe,KAC1Bl6F,KAAKm6F,yBAA2B,CAAC,EAAG,GACpCn6F,KAAKxC,MAAM48F,aAAc,EACzBp6F,KAAKq6F,kBAAoBrB,gBAAAsB,gBAAgBC,SAEzCv6F,KAAK00F,6HAaL,OALA10F,KAAK45F,MAAQ55F,KAAK+uF,SAAS,GAC3B/uF,KAAK65F,SAAU,EAAA/L,QAAA,SAAE/gE,QACjB/sB,KAAKs5F,cAAgBt5F,KAAK+uF,SAASjiD,KAAKgnD,WAAAuB,UAAUC,cAAckF,SAChEx6F,KAAK85F,UAAY95F,KAAK+uF,SAASjiD,KAAKgnD,WAAAuB,UAAUC,cAAcC,UAErDv1F,KAAKqvF,gBAAgB+C,iDAgB5B,OARApyF,KAAKy6F,iBAAmBz6F,KAAK06F,WAAWhoC,KAAK1yD,MAC7CA,KAAK26F,eAAiB36F,KAAK46F,SAASloC,KAAK1yD,MACzCA,KAAK66F,qBAAuB76F,KAAK86F,eAAepoC,KAAK1yD,MACrDA,KAAK+6F,2BAA6B/6F,KAAKg7F,qBAAqBtoC,KAAK1yD,MACjEA,KAAKi7F,iBAAmBj7F,KAAKk7F,WAAWxoC,KAAK1yD,MAC7CA,KAAKm7F,mBAAqBn7F,KAAKo7F,aAAa1oC,KAAK1yD,MACjDA,KAAKq7F,uBAAyBr7F,KAAKs7F,iBAAiB5oC,KAAK1yD,MAElDA,sCA0BP,OAhBAA,KAAK65F,QAAQz4C,GAAG,UAAWphD,KAAKy6F,kBAChCz6F,KAAK65F,QAAQz4C,GAAG,QAASphD,KAAK26F,gBAK9B36F,KAAK85F,UAAUpnC,KAAK,4BAA6B1yD,KAAK66F,sBACtD76F,KAAK85F,UAAU14C,GAAG,YAAaphD,KAAK+6F,4BACpC/6F,KAAK85F,UAAU14C,GAAG,UAAWphD,KAAKi7F,kBAClCj7F,KAAK85F,UAAU14C,GAAG,YAAaphD,KAAKm7F,oBACpCn7F,KAAK85F,UAAU14C,GAAG,WAAYphD,KAAKq7F,wBACnCr7F,KAAK45F,MAAMttD,iBAAiB,cAAe,SAACiV,OAAD,OAAWA,MAAMS,mBAG5DhiD,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAMuK,YAAav7F,KAAKw7F,0BAEnCx7F,uCAsBP,OAZAA,KAAK65F,QAAQr4C,IAAI,UAAWxhD,KAAKy6F,kBACjCz6F,KAAK65F,QAAQr4C,IAAI,QAASxhD,KAAK26F,gBAG/B36F,KAAK85F,UAAUt4C,IAAI,YAAaxhD,KAAK+6F,4BACrC/6F,KAAK85F,UAAUt4C,IAAI,UAAWxhD,KAAKi7F,kBACnCj7F,KAAK85F,UAAUt4C,IAAI,YAAaxhD,KAAKm7F,oBACrCn7F,KAAK85F,UAAUt4C,IAAI,WAAYxhD,KAAKq7F,wBACpCr7F,KAAK45F,MAAMn/C,oBAAoB,cAAe,SAAC8G,OAAD,OAAWA,MAAMS,mBAE/DhiD,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAMuK,YAAav7F,KAAKw7F,0BAEpCx7F,KAAKsyF,4CAuBZ,OAfAtyF,KAAK+uF,SAAW,KAChB/uF,KAAK45F,MAAQ,KACb55F,KAAK65F,QAAU,KACf75F,KAAKs5F,cAAgB,KACrBt5F,KAAK85F,UAAY,KAEjB95F,KAAKg6F,wBAA0B,KAE/Bh6F,KAAKxC,MAAQA,MACbwC,KAAKxC,MAAM67F,SAAW,GACtBr5F,KAAKxC,MAAMy8F,QAAU,GACrBj6F,KAAKxC,MAAM08F,aAAe,KAC1Bl6F,KAAKm6F,yBAA2B,CAAC,EAAG,GACpCn6F,KAAKxC,MAAM48F,aAAc,EAElBp6F,8CASPA,KAAKxC,MAAQA,MACbwC,KAAKxC,MAAM67F,SAAW,GACtBr5F,KAAKxC,MAAMy8F,QAAU,GACrBj6F,KAAKxC,MAAM08F,aAAe,KAC1Bl6F,KAAKm6F,yBAA2B,CAAC,EAAG,GACpCn6F,KAAKxC,MAAM48F,aAAc,6CAiBzBv+C,KAAKr+C,MAAM67F,SAAW,GACtBr5F,KAAKxC,MAAM67F,SAAW,GACtBr5F,KAAKs5F,cAAcltF,IAAI,IAEvBpM,KAAKk0F,UAAUjyC,QAAQssC,YAAAyC,MAAMyK,kBAAmB,6CAYnCl6C,OAAuC,IAAhCm6C,uBAAgC,EAAA72F,UAAA7H,aAAA4F,IAAAiC,UAAA,IAAAA,UAAA,GAC9C82F,oBAAsBpD,kBAAA,QAAiBqD,wCACzCr6C,MAAMiE,MAAOjE,MAAMkE,OAEnBo2C,iBAAmBtD,kBAAA,QAAiBuD,4CAAjBtrF,MAAA+nF,kBAAA,QAAAwD,mBAAgEJ,sBAGvF,GAAIp6C,MAAM4C,cAAcuB,SAAU,CAAA,IAK1Bs2C,SACAC,aAN0BC,uBAAAC,eACgBn8F,KAAKo8F,gDAAL5rF,MAAAxQ,KAAA+7F,mBACvCJ,sBAFuB,GACvBxC,cADuB+C,uBAAA,GACRG,qBADQH,uBAAA,GAAAI,uBAAAH,eAIMn8F,KAAKu8F,2CAAL/rF,MAAAxQ,KAAA+7F,mBAAmDJ,sBAJzD,GAIvBa,SAJuBF,uBAAA,GAIbG,gBAJaH,uBAAA,GAW1BL,aAFAQ,gBAAkBJ,sBAClBL,SAAWS,gBACID,WAEfR,SAAWK,qBACIlD,eAIf6C,SAAWzD,kBAAA,QAAiBmE,4BAA4B,MACxDb,iBAAmBI,cAIvBtD,aAAA,QAAYgE,YAAcjB,uBAC1B/C,aAAA,QAAYiE,gBAAgBf,kBAE5BlD,aAAA,QAAYkE,SAAShB,kBAIzB77F,KAAKk0F,UAAUjyC,QAAQssC,YAAAyC,MAAMkG,2EAW7ByB,aAAA,QAAYmE,sBAGZ98F,KAAKk0F,UAAUjyC,QAAQssC,YAAAyC,MAAMkG,+DAUf,IACN6F,SAAapE,aAAA,QAAboE,SAERpE,aAAA,QAAYhnD,QAGRorD,UACA/8F,KAAKk0F,UAAUjyC,QAAQssC,YAAAyC,MAAMkG,+DAY7ByB,aAAA,QAAYqE,aAIhBrE,aAAA,QAAYsE,wDAWZtE,aAAA,QAAYuE,iDAQD37C,OAC0B,EAAjCA,MAAM4C,cAAcg5C,YAAkB57C,MAAM4C,cAAckB,OAAS,EACnEkzC,kBAAA,QAAiB6E,SAKrB7E,kBAAA,QAAiB8E,uDAQA97C,OACjB,GAAIo3C,aAAA,QAAYgE,WAGZ,OAFA38F,KAAKs9F,iBAAiB/7C,OAAO,GAEtBvhD,KAGX,IAAKA,KAAKxC,MAAM48F,YACZ,OAAOp6F,KAGX,IAAMu9F,SAAWh8C,MAAMiE,MAAQxlD,KAAKm6F,yBAAyB,GACvDqD,SAAWj8C,MAAMkE,MAAQzlD,KAAKm6F,yBAAyB,GAE7D5B,kBAAA,QAAiBkF,UAAUF,SAAUC,6CAQ9Bj8C,OACPvhD,KAAKxC,MAAM48F,aAAc,uCAQhB74C,OAGT,OAFAA,MAAMS,iBAEET,MAAMmF,OACV,KAAKsyC,gBAAA0E,iBAAiBC,WAClB39F,KAAK49F,wBAAwBr8C,OAE7B,MACJ,KAAKy3C,gBAAA0E,iBAAiBG,aAClBtF,kBAAA,QAAiBuF,YAEjB,MACJ,KAAK9E,gBAAA0E,iBAAiBK,YAClB/9F,KAAKg+F,mBAAmBz8C,iDAanBA,OAORvhD,KAAKxC,MAAM67F,UAIhBr5F,KAAKk0F,UAAUjyC,QACXssC,YAAAyC,MAAMiN,mBACNj+F,KAAKy5F,oBAAoBC,uBAAuB15F,KAAKxC,MAAM67F,8CAgDxD93C,OAAO,IACR3kD,KAAS2kD,MAAM4C,cAAfvnD,KACAshG,SAAWthG,OAASo8F,gBAAAmF,UAAUC,QAAUxhG,OAASo8F,gBAAAqF,iBAAiBD,OAExE,IAAIp+F,KAAKs+F,UAAU/8C,MAAMnd,SAAY85D,SAMrC,GAAIl+F,KAAKg6F,wBAAwB1/B,OAC7Bt6D,KAAKg6F,wBAAwBS,iBAAiBl5C,WADlD,CAKA,IAAMg9C,yBAA2Bv+F,KAAKs5F,cAAcltF,MASpD,OANY,MAARxP,OAEAA,KAAO2kD,MAAM4C,cAAc0B,SAIvBjpD,MACJ,KAAKo8F,gBAAAmF,UAAUK,aACf,KAAKxF,gBAAAmF,UAAUM,cACXz+F,KAAK0+F,kBAEL,MACJ,KAAK1F,gBAAAmF,UAAUQ,MACf,KAAK3F,gBAAAmF,UAAUS,UACf,KAAK5F,gBAAAqF,iBAAiBM,MAClB3+F,KAAK6+F,iBAEL,MACJ,KAAK7F,gBAAAmF,UAAUW,QACf,KAAK9F,gBAAAqF,iBAAiBS,QAClB9+F,KAAK++F,yBACLx9C,MAAMS,iBAEN,MACJ,KAAKg3C,gBAAAmF,UAAUa,UACf,KAAKhG,gBAAAqF,iBAAiBW,UAClBh/F,KAAKi/F,qBACL19C,MAAMS,iBAEN,MAEJ,KAAKg3C,gBAAAmF,UAAUe,WACf,KAAKlG,gBAAAqF,iBAAiBa,WACdl/F,KAAKm/F,yBAA2Bn/F,KAAKq6F,oBAAsBrB,gBAAAsB,gBAAgBC,WAC3Ev6F,KAAKs5F,cAAcltF,IAAnB,GAAAoF,OAA0B+sF,yBAA1B,UACAh9C,MAAMS,kBAGV,MACJ,KAAKg3C,gBAAAmF,UAAUiB,YACf,KAAKpG,gBAAAqF,iBAAiBe,YACdp/F,KAAKm/F,yBAA2Bn/F,KAAKq6F,oBAAsBrB,gBAAAsB,gBAAgBC,WAC3Ev6F,KAAKs5F,cAAcltF,IAAnB,GAAAoF,OAA0B+sF,yBAA1B,UACAh9C,MAAMS,kBAGV,MAEJ,KAAKg3C,gBAAAmF,UAAUkB,SACf,KAAKrG,gBAAAqF,iBAAiBgB,SACdr/F,KAAKm/F,yBAA2Bn/F,KAAKq6F,oBAAsBrB,gBAAAsB,gBAAgBC,SAC3Ev6F,KAAKs5F,cAAcltF,IAAnB,GAAAoF,OAA0B+sF,yBAA1B,QAGAv+F,KAAK++F,yBAFLx9C,MAAMS,iBAMV,MACJ,KAAKg3C,gBAAAmF,UAAUmB,WACf,KAAKtG,gBAAAqF,iBAAiBiB,WACdt/F,KAAKm/F,yBAA2Bn/F,KAAKq6F,oBAAsBrB,gBAAAsB,gBAAgBC,SAC3Ev6F,KAAKs5F,cAAcltF,IAAnB,GAAAoF,OAA0B+sF,yBAA1B,QAGAv+F,KAAKi/F,qBAFL19C,MAAMS,iBAMV,MAEJ,KAAKg3C,gBAAAmF,UAAUoB,WACf,KAAKvG,gBAAAqF,iBAAiBkB,WACdv/F,KAAKq6F,oBAAsBrB,gBAAAsB,gBAAgBC,WAC3Cv6F,KAAKs5F,cAAcltF,IAAnB,GAAAoF,OAA0B+sF,yBAA1B,QACAh9C,MAAMS,kBAGV,MACJ,KAAKg3C,gBAAAmF,UAAUqB,aACf,KAAKxG,gBAAAqF,iBAAiBmB,aACdx/F,KAAKq6F,oBAAsBrB,gBAAAsB,gBAAgBC,WAC3Cv6F,KAAKs5F,cAAcltF,IAAnB,GAAAoF,OAA0B+sF,yBAA1B,QACAh9C,MAAMS,kBAGV,MAEJ,KAAKg3C,gBAAAmF,UAAUsB,QACf,KAAKzG,gBAAAqF,iBAAiBoB,QACdz/F,KAAKq6F,oBAAsBrB,gBAAAsB,gBAAgBC,WAC3Cv6F,KAAKs5F,cAAcltF,IAAnB,GAAAoF,OAA0B+sF,yBAA1B,QACAh9C,MAAMS,kBAGV,MACJ,KAAKg3C,gBAAAmF,UAAUuB,aACf,KAAK1G,gBAAAqF,iBAAiBqB,aACd1/F,KAAKq6F,oBAAsBrB,gBAAAsB,gBAAgBC,WAC3Cv6F,KAAKs5F,cAAcltF,IAAnB,GAAAoF,OAA0B+sF,yBAA1B,QACAh9C,MAAMS,kBAGV,MACJ,KAAKg3C,gBAAAmF,UAAUwB,GACf,KAAK3G,gBAAAqF,iBAAiBsB,GAClBp+C,MAAMS,iBACNhiD,KAAK+5F,YAAY6F,oBAEjB,MACJ,KAAK5G,gBAAAmF,UAAU0B,GACf,KAAK7G,gBAAAqF,iBAAiBwB,GAClBt+C,MAAMS,iBACNhiD,KAAK+5F,YAAY+F,oBAEjB,MACJ,KAAK9G,gBAAAmF,UAAU4B,GACf,KAAK/G,gBAAAqF,iBAAiB0B,GAClB,GAAI//F,KAAKq6F,oBAAsBrB,gBAAAsB,gBAAgB0F,MAC3C,OAGJhgG,KAAKs5F,cAAcltF,IAAI,SACvBm1C,MAAMS,iBAEN,MACJ,KAAKg3C,gBAAAmF,UAAU8B,UACf,KAAKjH,gBAAAqF,iBAAiB4B,UAClBjgG,KAAKs5F,cAAcltF,IAAI,IACvBm1C,MAAMS,iBACNhiD,KAAKkgG,2BAEL,MACJ,KAAKlH,gBAAAmF,UAAUgC,IACf,KAAKnH,gBAAAqF,iBAAiB8B,IAClB5+C,MAAMS,iBAEFhiD,KAAKq6F,oBAAsBrB,gBAAAsB,gBAAgBC,UAC3Cv6F,KAAKg6F,wBAAwBoG,WAGjC,MACJ,KAAKpH,gBAAAmF,UAAUC,OACf,KAAKpF,gBAAAqF,iBAAiBD,OAElBp+F,KAAKqgG,kBAEL1M,cAAA,QAAa2M,kBAEb,IAAMC,aAAc,EAAAlI,WAAA,SAAUkG,yBAA0Bv+F,KAAKxC,MAAM67F,UAC7DmH,gBAAkBjC,yBAAyBj7B,SAAWtjE,KAAKxC,MAAM67F,SACjEoH,oBAA8C,KAAxBzgG,KAAKxC,MAAM67F,SAEvC,IAAKkH,aAAeC,kBAAoBC,oBAGpC,YAFAzgG,KAAKw5F,mBAKTx5F,KAAKs5F,cAAcltF,IAAnB,GAAAoF,OAA0BxR,KAAKxC,MAAM67F,SAArC,MAEA,MACJ,QACIr5F,KAAKs5F,cAAc9oD,2CAWtB+Q,OAAO,IACN3kD,KAAS2kD,MAAM4C,cAAfvnD,KAON,OALY,MAARA,OAEAA,KAAO2kD,MAAM4C,cAAc0B,SAGvBjpD,MACJ,KAAKo8F,gBAAAmF,UAAUK,aACf,KAAKxF,gBAAAmF,UAAUM,cACXz+F,KAAK0gG,iBACL1gG,KAAKk0F,UAAUjyC,QAAQssC,YAAAyC,MAAMkG,wDAgB/BnI,UACN,GAAIA,SAAS4R,UAAUr6D,SAASwtD,WAAA8M,WAAWC,QACvC,OAAO,EAFK,IAKRC,cAAkB/R,SAAlB+R,cAER,OAAOA,eAAiB9gG,KAAKs+F,UAAUwC,6DAQvC9gG,KAAKxC,MAAM08F,cAAe,EAAArB,MAAAkI,OAAM,EAAG/gG,KAAKxC,MAAM08F,aAAcl6F,KAAKxC,MAAMy8F,QAAQj9F,OAAS,oDAQxF,GAAkC,IAA9BgD,KAAKxC,MAAMy8F,QAAQj9F,OAAvB,CAI+B,MAA3BgD,KAAKxC,MAAM08F,eACXl6F,KAAKxC,MAAMy8F,QAAQ31F,QAAQtE,KAAKs5F,cAAcltF,OAC9CpM,KAAKxC,MAAM08F,aAAe,GAG9Bl6F,KAAKxC,MAAM08F,cAAgB,EAC3Bl6F,KAAKghG,sBAEL,IAAM3H,SAAWr5F,KAAKxC,MAAMy8F,QAAQj6F,KAAKxC,MAAM08F,cACzCf,cAAgBn5F,KAAKy5F,oBAAoBC,uBAAuBL,UAEtEr5F,KAAK25F,eAAeR,6DAQpB,GAAkC,IAA9Bn5F,KAAKxC,MAAMy8F,QAAQj9F,QAAiBgD,KAAKxC,MAAM08F,aAAnD,CAMA,GAFAl6F,KAAKxC,MAAM08F,cAAgB,EAEvBl6F,KAAKxC,MAAM08F,cAAgB,EAM3B,OALAl6F,KAAKs5F,cAAcltF,IAAIpM,KAAKxC,MAAMy8F,QAAQ,IAE1Cj6F,KAAKxC,MAAMy8F,QAAQznF,OAAO,EAAG,QAC7BxS,KAAKxC,MAAM08F,aAAe,MAK9Bl6F,KAAKghG,sBAEL,IAAM3H,SAAWr5F,KAAKxC,MAAMy8F,QAAQj6F,KAAKxC,MAAM08F,cACzCf,cAAgBn5F,KAAKy5F,oBAAoBC,uBAAuBL,UAEtEr5F,KAAK25F,eAAeR,gEAWpB,MAAwF,WAAjF/F,gBAAA,QAAe6N,KAAK7hD,OAAO8hD,gBAAgBpI,qBAAAqI,kBAAkBC,mEAUpE,OAAQphG,KAAKq6F,mBACT,KAAKrB,gBAAAsB,gBAAgBC,SAKjB,OAJAv6F,KAAKq6F,kBAAoBrB,gBAAAsB,gBAAgB0F,MACzChgG,KAAKs5F,cAAcrrD,KAAK,cAAe,4BACvCjuC,KAAKs5F,cAAc1iC,YAAYk9B,WAAAuB,UAAUuL,WAAWS,oBAGxD,KAAKrI,gBAAAsB,gBAAgB0F,MACjBhgG,KAAKq6F,kBAAoBrB,gBAAAsB,gBAAgBC,SACzCv6F,KAAKs5F,cAAcrrD,KAAK,cAAe,0BACvCjuC,KAAKs5F,cAAc1iC,YAAYk9B,WAAAuB,UAAUuL,WAAWS,sEAe5D,IAKIC,IALEC,YAAcvhG,KAAKs5F,cAAcltF,MAAMk3D,OAAO/2C,cAMpD,IAEI+0E,IADe,IAAI7I,eAAA,QAAc8I,aACpBnjG,QACf,MAAO2Z,OAEL,MADA47E,cAAA,QAAa6N,OAAO,0BAA0B,GACxCzpF,MAEV,IAAM0pF,cAAgBH,IACtB,OAAIG,cAAcC,UAAY1I,gBAAA2I,oBAAoBC,SACvC5hG,KAAK6hG,qBAAqBJ,gBAGrCzhG,KAAKxC,MAAMy8F,QAAQ31F,QAAQtE,KAAKxC,MAAM67F,UACtCr5F,KAAKxC,MAAM08F,aAAe,KAEnBl6F,KAAK8hG,uBAAuBL,yDAWnC,IAAI5jC,SAAW,GASf,OAPI79D,KAAKq6F,oBAAsBrB,gBAAAsB,gBAAgBC,SAC3C18B,SAAW79D,KAAK+hG,yBACT/hG,KAAKq6F,oBAAsBrB,gBAAAsB,gBAAgB0F,QAClDniC,SAAW79D,KAAKgiG,uBAEpBhiG,KAAKw5F,mBAEE37B,uDAUP,IAAIokC,kBACEV,YAAcvhG,KAAKs5F,cAAcltF,MAAMk3D,OAAO/2C,cAEpD,IACI01E,kBAAoB,IAAIvJ,mBAAA,QAAkB6I,aAC5C,MAAOxpF,OAGL,MAFA47E,cAAA,QAAa6N,OAAO,qBAAqB,GAEnCzpF,MATQ,IAAAmqF,uBAAA/F,eAYan8F,KAAK+5F,YAAYoI,gBAAgBF,mBAZ9C,GAYXG,WAZWF,uBAAA,GAYCrkC,SAZDqkC,uBAAA,GAaZG,WAAaD,WAEnBzO,cAAA,QAAa6N,OAAO3jC,SAAUwkC,wDASbZ,eACjB,OAAQA,cAAcC,SAClB,KAAK1I,gBAAA2I,oBAAoBW,SAGrB,OAFA3O,cAAA,QAAa4O,oBAEN,EAEX,KAAKvJ,gBAAA2I,oBAAoBa,KAUrB,OAAO,EAEX,KAAKxJ,gBAAA2I,oBAAoBc,MAGrB,OAFArP,gBAAA,QAAesP,qBAER,EAEX,KAAK1J,gBAAA2I,oBAAoBgB,SACrB,IAAIC,kBAAoB,EAExB,GAAInB,cAAcl6F,KAEbq7F,kBAFmBzG,eAEEsF,cAAcl6F,KAFhB,GAAA,GAQxB,OAHA6rF,gBAAA,QAAeyP,gBAAgBD,mBAC/BzP,cAAA,QAAa+B,YAAYnB,iBAAAoB,gBAAgB2N,QAAS,wBAAlD,GAAAtxF,OAA8EoxF,qBAEvE,EAEX,KAAK5J,gBAAA2I,oBAAoBoB,MACrB9S,aAAalsB,QACbz0D,SAAS0zF,SAET,MACJ,KAAKhK,gBAAA2I,oBAAoBsB,QAErB,IAAMC,YAAczB,cAAcl6F,KAAK,GAMvC,OAJI,EAAA6wF,MAAA,SAAKvF,mBAAA,QAAkBsQ,SAAUD,cACjCrQ,mBAAA,QAAkBuQ,YAAYF,cAG3B,EAEX,KAAKlK,gBAAA2I,oBAAoB0B,MACrB,IAAMC,aAAczQ,mBAAA,QAAkBlgF,QAAQk9E,KAAKt0C,cAC7CgoD,WAAa1Q,mBAAA,QAAkB2Q,gBAErC,OAAKD,WAML5P,cAAA,QAAa6N,OAAb,GAAAhwF,OAAuB8xF,aAAvB,kBAAA9xF,OAAmD+xF,aAL/C5P,cAAA,QAAa6N,OAAb,GAAAhwF,OAAuB8xF,aAAvB,2BAOG,EAGX,KAAKtK,gBAAA2I,oBAAoB8B,KAGrB,OAFA9P,cAAA,QAAa6N,OAAO,oCAAoC,IAEjD,EACX,QACI,OAAO,kDAUIC,eACnBh1E,QAAQhsB,IAAIghG,eAKZ,IAHA,IAAIh7E,QAAU,EACV1B,MAAQg0E,iBAAA2K,eAEHrnG,EAAI,EAAGA,EAAI2D,KAAKy5F,oBAAoB1H,SAAS7hF,KAAKlT,OAAQX,IAAK,CACnD2D,KAAKy5F,oBAAoB1H,SAAS7hF,KAAK7T,GAE3CsnG,cAAclC,cAAcpI,YACrC5yE,SAAW,EACX1B,MAAQ1oB,GAIhB,GAAc,EAAVoqB,QAGA,OAFAktE,cAAA,QAAa6N,OAAO,mDAAmD,IAEhE,EAGX,GAAIz8E,QAAUg0E,iBAAA2K,eAGV,OAFA/P,cAAA,QAAa6N,OAAO,+BAA+B,IAE5C,EAGX,IAAMzP,SAAW/xF,KAAKy5F,oBAAoB1H,SAAS7hF,KAAK6U,OAExD,OAAO/kB,KAAKy5F,oBAAoBmK,kBAAkBC,YAAY9R,SAAU0P,cAAcl6F,kEAWtDg6C,OAChC,IAAMuiD,eAAiBvL,kBAAA,QAAiBqD,wCAAwCr6C,MAAMiE,MAAOjE,MAAMkE,OAGnG,OAFyB8yC,kBAAA,QAAiBuD,4CAAjBtrF,MAAA+nF,kBAAA,QAAAwD,mBAAgE+H,yFAiB7CxvE,EAAGC,GAC/C,OAAOv0B,KAAKy5F,oBAAoBsK,qBAC5BxL,kBAAA,QAAiBuD,4CAA4CxnE,EAAGC,uEAgB7BD,EAAGC,GAC1C,OAAOqkE,eAAA,QAAcoL,cACjBzL,kBAAA,QAAiBuD,4CAA4CxnE,EAAGC,mDAajD0vE,mBACnB,IAAMC,eAAiBD,kBAAkB9yF,IAAI,SAACgzF,OAAD,OAAWA,MAAMC,QAAQ,KAAIlgG,KAAK,MAE/E6oB,OAAOs3E,UAAUC,UAAUC,UAAUL,gBAAgBptD,KAAK,WACtDrqB,QAAQhsB,IAAIyjG,gBACZvQ,cAAA,QAAa6N,OAAb,wBAAAhwF,OAA4C0yF,eAA5C,kDAA2G,gDAchG3iD,OACf,GAAIo3C,aAAA,QAAYqE,YACZh9F,KAAKwkG,kCADT,CAOA,GAAIjjD,MAAM4C,cAAcuB,UAAYnE,MAAM4C,cAAca,OAAQ,CAC5D,IAAM62C,iBAAmB77F,KAAKykG,oCAAoCljD,OAC5DmjD,kBAAoB7R,mBAAA,QAAkBlgF,QAAQgyF,cAC9CV,kBAAoBzL,sBAAA,QAAqBoM,4CAC3C/I,iBAAkB6I,mBAGtB,OAAO1kG,KAAK6kG,uBAAuBZ,mBAGvCjkG,KAAK8kG,kBAAkBvjD,MAAOy3C,gBAAA+L,mBAAmBC,wDAe7BzjD,OACpB,GAAIo3C,aAAA,QAAYqE,YACZh9F,KAAKs9F,iBAAiB/7C,WAD1B,CAMA,IAAM0jD,eAAiB1M,kBAAA,QAAiBqD,wCAAwCr6C,MAAMiE,MAAOjE,MAAMkE,OAPxEy/C,uBAAA/I,eAQmBn8F,KAAKo8F,gDAAL5rF,MAAAxQ,KAAA+7F,mBAAwDkJ,iBAR3E,GAQpB9L,cARoB+L,uBAAA,GAAAA,uBAAA,GAUA3M,kBAAA,QAAiBmE,4BAA4B,KACpE18F,KAAKw5F,mBACLx5F,KAAK8kG,kBAAkBvjD,MAAOy3C,gBAAA+L,mBAAmBI,OAC1CnlG,KAAKq6F,oBAAsBrB,gBAAAsB,gBAAgB0F,OAClDhgG,KAAKs5F,cAAcltF,IAAnB,GAAAoF,OAA0BxR,KAAKs5F,cAAcltF,MAA7C,KAAAoF,OAAsD2nF,cAAcE,WACpEr5F,KAAK6+F,kBACE1F,eACPn5F,KAAK25F,eAAeR,0DAaV53C,MAAO6jD,aAKrB,GAAIA,cAJqBhS,gBAAA,QAAeiS,cAAcvM,qBAAAqI,kBAAkBmE,kBAIxE,CAIA,IAAMC,eAAiBhkD,MAAMiE,MAAQ+yC,kBAAA,QAAiBiN,MAChDC,eAAiBlkD,MAAMkE,MAAQ8yC,kBAAA,QAAiBmN,MAGtD1lG,KAAKm6F,yBAA2B,CAC5BoL,eACAE,gBAEJzlG,KAAKxC,MAAM48F,aAAc,q9BCvmCjC,QAAAtM,aAAAtxF,QAAA,6CACAs3F,WAAAt3F,QAAA,iTAOqBmpG,uBAKjB,SAAAA,cASI,qIATU7W,CAAA9uF,KAAA2lG,aAOV3lG,KAAK+uF,SAAW,KAET/uF,KAAK4lG,2IAYZ,OAFA5lG,KAAK+uF,UAAW,EAAAjB,QAAA,SAAEgG,WAAAuB,UAAUC,cAAcuQ,cAEnC7lG,uCAWP,OAFAA,KAAK+uF,SAAW,KAET/uF,wCAYA,IAAAiU,MAAAjU,KACP8sB,OAAO6sB,WAAW,WACd1lC,MAAK86E,SAASr6B,QAAQ,KACtBzgD,MAAK86E,SAASrxC,IAAI,gBAAiB,SACpC,+bC7DX,IAAA06C,MAAArK,uBAAAvxF,QAAA,eACAwxF,QAAAD,uBAAAvxF,QAAA,iBACAspG,MAAA/X,uBAAAvxF,QAAA,eACAupG,QAAAhY,uBAAAvxF,QAAA,iBACAq2F,mBAAA9E,uBAAAvxF,QAAA,iCACA2xF,UAAAJ,uBAAAvxF,QAAA,oBACA42F,gBAAArF,uBAAAvxF,QAAA,2BACA+2F,mBAAAxF,uBAAAvxF,QAAA,2CACAm3F,cAAA5F,uBAAAvxF,QAAA,uBACAwpG,sBAAAxpG,QAAA,sCACAypG,mBAAAzpG,QAAA,kCAGA+xF,YAAA/xF,QAAA,2BACA0pG,QAAA1pG,QAAA,kBACAq8F,MAAAr8F,QAAA,gBACA2pG,oBAAA3pG,QAAA,kDACAq3F,QAAAr3F,QAAA,aACA4pG,gBAAA5pG,QAAA,+BAMA6pG,gBAAA7pG,QAAA,y1BAOqB8pG,6BACjB,SAAAA,kBAAYC,wBAAyBC,iJAAkB1X,CAAA9uF,KAAAsmG,mBACnDtmG,KAAKk0F,UAAY/F,UAAA,QACjBnuF,KAAKymG,kBAAoBD,iBACzBxmG,KAAK0mG,yBAA2BH,mJAUxBxU,SAAU4U,UAA8B,IAApBC,WAAoB,EAAA/hG,UAAA7H,aAAA4F,IAAAiC,UAAA,IAAAA,UAAA,GAChD,IAAKktF,SAASqH,iBAAmBwN,WAC7B,OAAO,EAQX,IALA,IAAI/oC,SAAW,GACXgpC,aAAe,GACfC,aAAc,EACZ1uD,SAAW,GAER/7C,EAAI,EAAGA,EAAIsqG,SAAS3pG,OAAQX,IAAK,CACtC,IAAMqlG,QAAUiF,SAAStqG,GAAG,GACtBkL,KAAOo/F,SAAStqG,GAAGmW,OAAO,GAEhC,GAAIkvF,UAAYuE,mBAAAc,aAAaC,QAA7B,CAMA,IAAIC,OAASjnG,KAAKiwD,IAAI8hC,SAAU2P,QAASn6F,MAErC0/F,SACKA,OAAO,KACRH,aAAc,IAGb,EAAA1O,MAAA,SAAK6O,OAAO,GAAI,SAAW,EAAA7O,MAAA,SAAK6O,OAAO,GAAI,SAE5CA,OAAS,CACLA,OAAO,GACP,CACIxmG,IAAKwmG,OAAO,GACZC,IAAKD,OAAO,MAKxBppC,SAASr6D,KAAKyjG,OAAO,IAEjBA,OAAO,KAEPJ,aAAeI,OAAO,UA3B1B7uD,SAAS50C,KAAK,CAACk+F,QAASn6F,OAgChC,IAAK,IAAIg+B,GAAI,EAAGA,GAAI6S,SAASp7C,OAAQuoC,IAAK,EAAG,CACzC,IAAM4hE,SAAU/uD,SAAS7S,IAAG,GACtB6hE,MAAOhvD,SAAS7S,IAAG,GACnB8hE,QAASrnG,KAAKiwD,IAAI8hC,SAAUoV,SAASC,OAEvCC,UACKA,QAAO,KACRP,aAAc,GAKM,MAApBO,QAAO,GAAGrqG,SAEVqqG,QAAO,GAAK,CACRH,IAAKG,QAAO,GACZ5mG,IAAK4mG,QAAO,KAIpBxpC,SAASr6D,KAAK6jG,QAAO,KAI7B,GAAIT,WACA,OAAO,EAUX,GAPwB,IAApBD,SAAS3pG,SACT6gE,SAAW,CAAC,CACRqpC,IAAK,YACLzmG,IAAK,eAIU,GAAnBo9D,SAAS7gE,OAAa,CAClB6pG,eACAA,aAAY,KAAAr1F,OAAQq1F,eAGxB,IAAMS,OAAQ,EAAAxB,MAAA,SAAKjoC,SAAU,SAAC7hE,GAAD,OAAOA,EAAEyE,MAAKyD,KAAK,MAC1CqjG,OAAQ,EAAAzB,MAAA,SAAKjoC,SAAU,SAAC7hE,GAAD,OAAOA,EAAEkrG,MAAKhjG,KAAK,MAEhDyvF,cAAA,QAAa6N,OAAb,GAAAhwF,OAAuBugF,SAASsH,SAAhC,MAAA7nF,OAA6C81F,MAA7C,KAAA91F,OAAsDq1F,cAAgBC,cACtE,EAAAjT,QAAA2T,YACI,CACI,CAAE/lG,KAAM,WAAY+I,QAASunF,UAC7B,CAAEtwF,KAAM,OAAQ+I,QAAO,GAAAgH,OAAK+1F,MAAL,KAAA/1F,OAAcq1F,gBAEzC9U,SAAS0V,YAMjB,OAAO,8BAWP1V,SAAU2P,QAAS97F,MAAM,IACjB8hG,aAAiBvB,oBAAAwB,qBAAqBjG,SAAtCgG,aAER,YAA4B,IAAjBA,aACA,EAAC,EAAO,cAGZ1nG,KAAK0nG,cAAc3V,SAAUnsF,yCAWpC,MAAO,EAAC,EAAO,kHAYPmsF,SAAUnsF,MAClB,IAAMgiG,kBAAoBhiG,KAAK,GACzBiiG,kBAAoBjiG,KAAK,GACzBkiG,qBAAqF,QAA9D1U,gBAAA,QAAe6N,KAAK7hD,OAAO8hD,gBAAgB,eAClEzR,QAAUoD,mBAAA,QAAkBkV,cAElC,OAAOhW,SAASiW,MAAMC,iBAClBL,kBACAC,kBACAC,qBACArY,QACAsC,6CAaGA,SAAUnsF,MACjB,IAAIsiG,UAAYtiG,KAAK,GACfuiG,QAAUviG,KAAK,GACfwiG,YAAcxiG,KAAK,GACnByiG,SAAWtW,SAASiW,MAAMM,gBAAgBvW,SAAUoW,QAASD,UAAWE,aAY9E,OAVKF,YACDA,UAAY,IAGhBnW,SAAS3tD,OAAOmkE,KAAOL,UAEnBnW,SAASyW,sBACTzW,SAASiW,MAAMS,wBAAwB1W,UAGpCsW,mDAWOtW,UACd,OAAOA,SAASiW,MAAMU,wDAUX3W,SAAUnsF,MACrB,IAAM+iG,SAAW/iG,KAAK,GAEtB,OAAOmsF,SAASiW,MAAMY,YAAY7W,SAAU4W,2CAUvC5W,SAAUnsF,MACf,IAAM29C,IAAM39C,KAAK,GAAG21C,cACdotD,SAAW/iG,KAAK,GAChB8tD,MAAQ9tD,KAAK,GAEnB,OAAOmsF,SAASiW,MAAMa,SAAS9W,SAAUxuC,IAAKolD,SAAUj1C,iDAU1Cq+B,UAAqB,IAC7B4W,UAD6B,EAAA9jG,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAJ,IACT,GAEtB,OAAOktF,SAASiW,MAAMc,eAAe/W,SAAU4W,2CAS1C5W,SAAUnsF,MACf,IAAMmjG,UAAYnjG,KAAK,GAEvB,OAAOmsF,SAASiW,MAAMgB,cAAcD,UAAWhX,0CAiB3CA,SAAUnsF,MAAM,IAAA02C,MAAA6/C,eACgCv2F,KADhC,GACbqjG,cADa3sD,MAAA,GACE4sD,UADF5sD,MAAA,GACa6sD,QADb7sD,MAAA,GACsB8sD,OADtB9sD,MAAA,GAGpB,IAAK6sD,QACD,MAAO,EAAC,EAAO,qEAGnB,IAAM3M,SAAWjJ,mBAAA,QAAkB8V,cAAcF,SAEjD,IAAK3M,SACD,MAAO,EAAC,EAAD,iCAAAhrF,OAAyC23F,UAGpD,IACIG,uBADEC,eAAiB,GAwBvB,OAlBsB,OAAlBN,gBACAM,eAAeN,cAAgBA,eAGjB,OAAdC,YACAK,eAAeL,UAAYA,WAGhB,OAAXE,OAEAG,eAAeC,gBAAiB,EAAAtD,QAAAuD,oBAAkB,EAAApD,gBAAAqD,kBAAiBN,QAAUr2E,KAAK89B,IAKlFy4C,uBAAyB9M,SAASmI,cAAcgF,oBAAoB5X,SAAS4S,eAG1E5S,SAASiW,MAAM4B,uBAAuBT,QAASI,eAAgBD,wEAYlDvX,SAAUxqF,MAC9B,IAAM4hG,QAAU5hG,KAAK,GAErB,OAAOwqF,SAASiW,MAAM6B,qBAAqBV,2CAUrCpX,SAAUnsF,MAEhB,IAAMujG,QAAUvjG,KAAK,GAAG21C,cAIxB,OAFAw2C,SAAS3tD,OAAOmkE,KAAO,KAEhBxW,SAASiW,MAAM8B,cAAcX,wDAYjBpX,SAAUnsF,MAC7B,IAAMmkG,aAAelX,mBAAA,QAAkBkV,cACjCiC,WAAapkG,KAAK,GAClBqkG,YAAcF,aAAaG,UAAUF,YAE3C,IAAI,EAAAhc,QAAA,SAAOic,aAAc,CACrB,IAAME,oBAAsBpY,SAASqY,IAAIC,mBACnChC,SAAW,GAMjB,OALAA,SAAS5nG,IAAM,yBAAA+Q,OAAyBw4F,WAAzB,oBAAA,oBAAAx4F,OACS24F,oBAAoBxpG,KAD7B,YAEf0nG,SAASnB,IAAM,yBAAA11F,QAAyB,EAAA40F,gBAAAkE,cAAaN,YAAtC,YAAA,4BAAAx4F,OACiB24F,oBAAoBI,eADrC,YAGR,EAAC,EAAOlC,UAGnB,OAAOtW,SAASiW,MAAMwC,8BAA8BzY,SAAUkY,0DAQ7ClY,UACjB,GAAIA,SAAS0Y,cAAgBxE,mBAAAc,aAAa2D,MACtC,MAAO,EAAC,EAAO,2BAGnB,GAAI3Y,SAAS0Y,cAAgBxE,mBAAAc,aAAa4D,KAS1C,OAAO5Y,SAASiW,MAAM4C,uBAAuB7Y,UARzC,IAAM8Y,OAAS9Y,SAASqY,IAAIU,qBACtBzC,SAAW,GAIjB,OAHAA,SAAS5nG,IAAT,iCAAA+Q,OAAgDq5F,OAAOlqG,MACvD0nG,SAASnB,IAAT,iCAAA11F,QAAgD,EAAA40F,gBAAAkE,cAAaO,OAAOlqG,OAE7D,EAAC,EAAO0nG,8CAYXtW,UACR,OAAOA,SAASiW,MAAM+C,0CAUnBhZ,SAAUnsF,MACb,IAAMolG,YAAcplG,KAAK,GACnBmkG,aAAelX,mBAAA,QAAkBkV,cAEvC,OAAOhW,SAASiW,MAAMiD,wBAAwBD,YAAajB,aAAala,sCASpEkC,SAAUnsF,MACd,IAAMolG,YAAcplG,KAAK,GACnBmkG,aAAelX,mBAAA,QAAkBkV,cAEvC,OAAOhW,SAASiW,MAAMkD,sBAAsBF,YAAajB,aAAappG,iDAStE,MAAO,EAAC,EAAO,0GAYVoxF,SAAUnsF,MAEf,IAAMolG,YAAcplG,KAAK,GAAG21C,cAE5B,OAAOw2C,SAASiW,MAAMmD,2BAA2BH,gDAe1CjZ,SAAUnsF,MAEjB,IAAMolG,YAAcplG,KAAK,GAAG21C,cACtB8sD,SAAWtW,SAASiW,MAAMoD,8BAA8BJ,aAQ9D,OAJI3C,SAAS,IACTtW,SAASsZ,IAAIC,iBAGVjD,gDASItW,UACX,IAAM4W,UAAW,EAAA5C,QAAA,SAAOhU,SAAS4W,UAAW,GAEtCN,SAAW,GACbkD,qBAAuB,MAS3B,OAXkD,IAAnBxZ,SAASyZ,QAKpCD,qBAAuB,YAG3BlD,SAAS5nG,IAAT,GAAA+Q,OAAkB+5F,sBAAlB/5F,OAAyCm3F,UACzCN,SAASnB,IAAT,GAAA11F,OAAkB+5F,sBAAlB/5F,QAAyC,EAAA40F,gBAAAqF,gBAAe9C,WAEjD,EAAC,EAAMN,yDASKtW,UACnB,IAAM4W,UAAW,EAAA5C,QAAA,SAAOhU,SAASsZ,IAAI1C,UAAW,GAC1CN,SAAW,GAEjB,OAAiB,IAAbM,SACO,EAAC,EAAO,yCAGnBN,SAAS5nG,IAAT,YAAA+Q,OAA2Bm3F,UAC3BN,SAASnB,IAAT,YAAA11F,QAA2B,EAAA40F,gBAAAqF,gBAAe9C,WAEnC,EAAC,EAAMN,iDASJtW,UACV,IAAMoW,SAAU,EAAA9B,gBAAAqF,mBAAkB3Z,SAASoW,SACrCE,SAAW,GAKjB,OAHAA,SAAS5nG,IAAT,WAAA+Q,OAA0B22F,SAC1BE,SAASnB,IAAT,WAAA11F,QAA0B,EAAA40F,gBAAAuF,eAAcxD,UAEjC,EAAC,EAAME,wDASItW,UAClB,GAAIA,SAASsZ,IAAIO,cAAgB5F,sBAAA6F,SAASC,QAAQC,KAC9C,MAAO,EAAC,EAAO,sCAGnB,IAAM5D,SAAU,EAAA9B,gBAAAqF,mBAAkB3Z,SAASsZ,IAAIlD,SACzCE,SAAW,GAKjB,OAHAA,SAAS5nG,IAAT,oBAAA+Q,OAAmC22F,SACnCE,SAASnB,IAAT,oBAAA11F,QAAmC,EAAA40F,gBAAAuF,eAAcxD,UAE1C,EAAC,EAAME,0DASMtW,UACpB,IAAMr+B,OAAQ,EAAAqyC,QAAA,SAAOhU,SAASr+B,OACxB20C,SAAW,GAKjB,OAHAA,SAAS5nG,IAAT,cAAA+Q,OAA6BkiD,MAA7B,UACA20C,SAASnB,IAAT,cAAA11F,QAA6B,EAAA40F,gBAAA4F,gBAAet4C,OAA5C,UAEO,EAAC,EAAM20C,sDASEtW,UAChB,GAAIA,SAASsZ,IAAIY,YAAcjG,sBAAA6F,SAASK,MAAMH,KAC1C,MAAO,EAAC,EAAO,oCAGnB,IAAMr4C,OAAQ,EAAAqyC,QAAA,SAAOhU,SAASsZ,IAAI33C,OAC5B20C,SAAW,GAKjB,OAHAA,SAAS5nG,IAAT,YAAA+Q,OAA2BkiD,MAA3B,UACA20C,SAASnB,IAAT,YAAA11F,QAA2B,EAAA40F,gBAAA4F,gBAAet4C,OAA1C,WAEO,EAAC,EAAM20C,0CAcVlP,cAAevzF,MACnB,IAAMmkG,aAAelX,mBAAA,QAAkBkV,cACjCoE,oBAAsBvmG,KAAK,GAEjC,IAAKumG,oBAAqB,CAGtB,MAAO,EAAC,EAFS,yCAKrB,IAAMlC,YAAcF,aAAaG,UAAUiC,oBAAoB5wD,eAE/D,GAAK0uD,YAQL,OAAO9Q,cAAciT,aAAanC,aAP9B,IAAMoC,UAAW,GAIjB,OAHAA,UAAS5rG,IAAT,yBAAA+Q,OAAwC26F,oBAAoB5wD,cAA5D,kBACA8wD,UAASnF,IAAT,yBAAA11F,QAAwC,EAAA40F,gBAAAkE,cAAa6B,qBAArD,kBAEO,EAAC,EAAOE,8CAYZta,UAEP,IAAMtC,QAAUoD,mBAAA,QAAkBkV,cAC5B8C,OAAS9Y,SAASqY,IAAIU,qBACtBwB,YAAczB,OAAO0B,yBAAyBxa,SAAS/7E,IACvDw2F,WAA2B,EAAfF,YACZG,cAAgBzsG,KAAKymG,kBAAkBoE,OAAOtzD,MAAM+0D,YAAc,IAClEI,KAAOjd,QAAQkd,oBACfC,0BAAuE,IAA3C,EAAA/T,MAAAhkE,QAAM,EAAAwxE,gBAAAwG,kBAAiBH,KAAKI,OAAS,IACjEC,kBAAmB,EAAAlU,MAAAhkE,OAAM63E,KAAKh5C,OAC9B20C,SAAW,GAEjB,OAAItW,SAASib,aACF,EAAC,EAAO,8CAGfjb,SAAS0Y,cAAgBxE,mBAAAc,aAAa2D,MAC/B,EAAC,EAAO,+CAGf3Y,SAAS0Y,cAAgBxE,mBAAAc,aAAa4D,MACtCtC,SAAS5nG,IAAT,qDAAA+Q,OAAoEq5F,OAAOlqG,MAC3E0nG,SAASnB,IAAT,qDAAA11F,QAAoE,EAAA40F,gBAAAkE,cAAaO,OAAOlqG,OAEjF,EAAC,EAAO0nG,WAGftW,SAAS0Y,cAAgBxE,mBAAAc,aAAaC,QAC/B,EAAC,EAAO,sBAGdwF,UAIa,EAAdF,aACAjE,SAAS5nG,IAAT,UAAA+Q,OAAyB86F,YAAzB,YAAA96F,OAA+Ci7F,cAAcpT,UAC7DgP,SAASnB,IAAT,UAAA11F,OAAyB86F,YAAzB,YAAA96F,OAA+Ci7F,cAAcQ,oBAEtD,EAAC,EAAO5E,WAGdtW,SAASiW,MAAMkF,sBAKfnb,SAASqY,IAAI+C,yBAAyBtC,SAS3CA,OAAOuC,wBAAwBrb,SAAS/7E,IACxC+7E,SAASsb,QAAQxC,QAEjBxC,SAAS5nG,IAAM,QAAA+Q,OAAQo7F,0BAAR,QAAAp7F,OAAwCu7F,iBAAxC,MAAA,UAAAv7F,OACDq5F,OAAOlqG,KADN,yBAIf0nG,SAASnB,IAAM,UAAA11F,QAAU,EAAA40F,gBAAA4F,gBAAeY,2BAAzB,QAAA,GAAAp7F,QACR,EAAA40F,gBAAA4F,gBAAee,kBADP,aAAAv7F,QACoC,EAAA40F,gBAAAkE,cAAaO,OAAOlqG,MADxD,MAEX,sBAEG,EAAC,EAAM0nG,YAnBVA,SAAS5nG,IAAM,mCAAA+Q,OAAmCq5F,OAAOlqG,KAA1C,KAAA,wBAAA6Q,OACaugF,SAASqY,IAAIkD,aAD1B,cAEfjF,SAASnB,IAAM,mCAAA11F,OAAmCq5F,OAAON,eAA1C,KAAA,wBAAA/4F,OACaugF,SAASqY,IAAImD,aAD1B,cAGR,EAAC,EAAOlF,WAVR,EAAC,EAAO,0DAXR,EAAC,EAAO,8EA4ChBtW,SAAUnsF,MACb,IACMokG,WAAapkG,KAAK,GAAG21C,cACrB0uD,YAAcpX,mBAAA,QAAkBkV,cAAcmC,UAAUF,YAE9D,OAAOjY,SAASiW,MAAMwF,0BAA0Bzb,SAJ3B,MAImDkY,+CAUxE,MAAO,EAAC,EAAO,4GAUTlY,SAAUnsF,MAChB,IAAM6nG,OAAS7nG,KAAK,GACd2C,OAASvI,KAAK0mG,yBAAyB+G,OAAQ1b,UACjDsW,SAAW,CACX5nG,IAAG,UAAA+Q,OAAYi8F,QACfvG,IAAG,UAAA11F,QAAY,EAAA40F,gBAAA4F,gBAAeyB,UAUlC,OAPKllG,SACD8/F,SAAW,CACP5nG,IAAG,oBAAA+Q,OAAsBi8F,QACzBvG,IAAG,oBAAA11F,QAAsB,EAAA40F,gBAAA4F,gBAAeyB,WAIzC,CAACllG,OAAQ8/F,4CAQVtW,UACN/xF,KAAKk0F,UAAUjyC,QAAQssC,YAAAyC,MAAM0c,gBAAiB3b,2CAc9C4B,cAAA,QAAa6N,OACT,+EAHc,izBC1yB1B,IAAAnJ,WAAAtK,uBAAAvxF,QAAA,oBACAmxG,SAAA5f,uBAAAvxF,QAAA,kBACAq2F,mBAAA9E,uBAAAvxF,QAAA,iCACA2xF,UAAAJ,uBAAAvxF,QAAA,oBACA42F,8XAAA10F,CAAAlC,QAAA,2BACA4xF,YAAAL,uBAAAvxF,QAAA,yBACAm3F,cAAA5F,uBAAAvxF,QAAA,uBACAq8F,MAAAr8F,QAAA,gBACA0pG,QAAA1pG,QAAA,kBACAoxG,QAAApxG,QAAA,kBACA6pG,gBAAA7pG,QAAA,+BACAypG,mBAAAzpG,QAAA,kCACA+xF,YAAA/xF,QAAA,qYAOqBqxG,4BACjB,SAAAA,iBAAYjiF,MAAOqZ,uIAAQ6pD,CAAA9uF,KAAA6tG,kBACvB7tG,KAAKk0F,UAAY/F,UAAA,QAEjBnuF,KAAK+xF,SAAW,CAACnmE,MAAOqZ,QACxBjlC,KAAKg8F,UAAW,EAAA4R,QAAAE,OAAK,EAAAF,QAAAG,MAAKniF,MAAMiwE,iBAAkB52D,OAAO42D,mBACzD77F,KAAKguG,eAAiB,EACtBhuG,KAAK2oG,UAAW,EAAA9P,MAAAoV,KAAIriF,MAAM+8E,SAAW1jE,OAAO0jE,UAC5C3oG,KAAKkuG,UAAW,EAChBluG,KAAKmuG,UAAY,GACjBnuG,KAAKouG,WAAa,GAEdpuG,KAAKquG,iBACL5hF,QAAQ4tB,KAAK,8BAAA7oC,OAA8BxR,KAAK+xF,SAAS,GAAGsH,SAA/C,KAAA,OAAA7nF,OACFxR,KAAK+xF,SAAS,GAAGsH,SADf,iCAKjBr5F,KAAK+wF,iIAUL/wF,KAAKk0F,UAAUjyC,QAAQssC,YAAAyC,MAAMsd,yBAA0BtuG,0CAWvD,OAAOA,KAAKuuG,eAAiBvuG,KAAKwuG,qDAOlC,IAAK,IAAMnyG,KAAK2D,KAAKmuG,UACjB,GAAInuG,KAAKmuG,UAAU9xG,GACf,OAAO,EAIf,OAAO,yCAOP,IAAK,IAAMA,KAAK2D,KAAKouG,WACjB,GAAIpuG,KAAKouG,WAAW/xG,GAChB,OAAO,EAIf,OAAO,oEAUP,IAAMoyG,qBAAuBzuG,KAAKg8F,SAClCh8F,KAAKg8F,UAAW,EAAA4R,QAAAE,OAAK,EAAAF,QAAAG,MAAK/tG,KAAK+xF,SAAS,GAAG8J,iBAAkB77F,KAAK+xF,SAAS,GAAG8J,mBAC9E77F,KAAKguG,eAAiBhuG,KAAKg8F,SAAWyS,qBACtCzuG,KAAK2oG,UAAW,EAAA9P,MAAAoV,KAAIjuG,KAAK+xF,SAAS,GAAG4W,SAAW3oG,KAAK+xF,SAAS,GAAG4W,2CAOjE,GAAI3oG,KAAK0uG,kBACL1uG,KAAKsyF,eAMT,IAAItyF,KAAKkuG,SAAT,CAIAluG,KAAK2uG,0CACL3uG,KAAK4uG,iBAGL,IAAMC,iBAAmBhc,mBAAA,QAAkBkV,cAAc+G,UACnDC,SAAW3gB,YAAA,QAAW4gB,qBACtBhvG,KAAK+xF,SAAS,GAAG4W,SAAWkG,iBAAoB,KAChD7uG,KAAK+xF,SAAS,GAAG4W,SAAWkG,iBAAoB,KAMlDE,SAAW/uG,KAAK+xF,SAAS,GAAGkd,YAAc,IAC1CF,SAAW/uG,KAAK+xF,SAAS,GAAGkd,YAAc,IAI9CjvG,KAAKkvG,2DAOL,IAAIlvG,KAAK+xF,SAAS,GAAGod,eAAgBnvG,KAAK+xF,SAAS,GAAGod,aAAtD,CAMA,IAAM1f,QAAUoD,mBAAA,QAAkBkV,cAElC,GACM/nG,KAAKg8F,SAAW,KAAUh8F,KAAK2oG,SAAW,KAC3C3oG,KAAK+xF,SAAS,GAAGqd,iBAAiB3f,UAAYzvF,KAAK+xF,SAAS,GAAGqd,iBAAiB3f,SACnF,CACEzvF,KAAKkuG,UAAW,EAGhBva,cAAA,QAAa6N,OAAb,GAAAhwF,OACOxR,KAAK+xF,SAAS,GAAGsH,SADxB,mBAAA7nF,OACkDxR,KAAK+xF,SAAS,GAAGsH,WAHjD,GAOlBjG,gBAAA,QAAeic,iBAAiBjc,gBAAAkc,YAAYC,WAC5CvvG,KAAK+xF,SAAS,GAAGyd,KAAM,EACvBxvG,KAAK+xF,SAAS,GAAGyd,KAAM,6CAW3B,GAAIxvG,KAAK2oG,UAAY1C,mBAAAwJ,WAAWC,YAI5B,OAHA1vG,KAAKmuG,UAAUwB,mBAAoB,OACnC3vG,KAAKmuG,UAAUyB,oBAAqB,GAKxC,IAAIC,UAAW,EACXC,WAAY,EACZC,gBAAiB,EACfC,GAAKhwG,KAAK+xF,SAAS,GACnBke,GAAKjwG,KAAK+xF,SAAS,GACrBme,oBAAsBjK,mBAAAwJ,WAAWU,oBAIrC,GAAKH,GAAGI,yBAA2BH,GAAGG,yBACjCJ,GAAG5F,IAAIC,mBAAmB1pG,OAASsvG,GAAG7F,IAAIC,mBAAmB1pG,KAAO,CACrE,IAAM0vG,mBAAqBxd,mBAAA,QAAkBkV,cAAcuI,oCACvDN,GAAG5F,IAAIC,mBAAmB1pG,KAC1BsvG,GAAG7F,IAAIC,mBAAmB1pG,MAG1B0vG,mBAAmBE,WAEnBR,gBAAiB,EACjBG,oBAAsBG,mBAAmBG,mBAajD,GAPAV,UAAY9vG,KAAKg8F,SAAWkU,oBAG5BL,SAAY7vG,KAAKg8F,SAAWkU,oBAAsB,QAAUH,gBAAmBD,UAIjE,CACV,IAAMW,gBAAiB,EAAA5X,MAAAoV,MAAI,EAAA/H,QAAAwK,cAAaV,GAAG7H,QAAS8H,GAAG9H,UACnDwI,kBAAmB,EAAAtK,gBAAAqD,kBAAiB,IAMxC,GAJIsG,GAAG5F,IAAIwG,WAAWC,UAAYZ,GAAG7F,IAAIwG,WAAWC,WAChDF,kBAAmB,EAAAtK,gBAAAqD,kBAAiB,KAGlBiH,kBAAlBF,eACA,GAAIA,gBAAiB,EAAApK,gBAAAqD,kBAAiB,KAER,EAAtB1pG,KAAKguG,iBAGL8B,UADAD,UAAW,OAGZ,CAIH,IAAMiB,IAAK,EAAAlD,QAAAmD,OAAMf,GAAGgB,aACdC,IAAK,EAAArD,QAAAmD,OAAMd,GAAGe,aACdE,GAAKjB,GAAGpU,iBAAiB,GAAKmU,GAAGnU,iBAAiB,GAClDsV,GAAKlB,GAAGpU,iBAAiB,GAAKmU,GAAGnU,iBAAiB,GAClDuV,IAAMH,GAAG,GAAKH,GAAG,GAAKG,GAAG,GAAKH,GAAG,GACjCr0G,GAAK00G,GAAKF,GAAG,GAAKC,GAAKD,GAAG,IAAMG,IAChC/6D,GAAK86D,GAAKL,GAAG,GAAKI,GAAKJ,GAAG,IAAMM,KAGjC30G,EAAI,GAAO45C,EAAI,KAEhBy5D,UADAD,UAAW,IAkBvB7vG,KAAKmuG,UAAUwB,oBADfE,SAOA7vG,KAAKouG,WAAWwB,qBADhBE,gDAiBJ,OAAwE,EAAjE9vG,KAAKqxG,mDAAmDr0G,gDAY/D,OAAwE,EAAjEgD,KAAKqxG,mDAAmDr0G,iDAW/D,OAAOgD,KAAKsxG,yBAA2BtxG,KAAK4wB,8DAe5C,OAFA5wB,KAAK2uG,0CAEE3uG,KAAKg8F,SAAWiK,mBAAAwJ,WAAW8B,kFAWa,IAAAt9F,MAAAjU,KAC/C,OAAO,EAAA2tG,SAAA,SAAQ5gF,OAAO4oE,mBAAmBwY,UAAW,SAAC0B,UACjD,OAAO,EAAAxX,WAAA,SAAUwX,SAAS9d,SAAU99E,MAAK89E,SAAS,MAAO,EAAAsG,WAAA,SAAUwX,SAAS9d,SAAU99E,MAAK89E,SAAS,uoBC5UhH,IAAAyf,OAAAzjB,uBAAAvxF,QAAA,gBACAi1G,MAAA1jB,uBAAAvxF,QAAA,eACAwxF,QAAAD,uBAAAvxF,QAAA,iBACAk1G,UAAA3jB,uBAAAvxF,QAAA,mBACAo2F,mBAAA7E,uBAAAvxF,QAAA,iCACAq2F,mBAAA9E,uBAAAvxF,QAAA,iCACAg3F,YAAAzF,uBAAAvxF,QAAA,wBACAm3F,cAAA5F,uBAAAvxF,QAAA,uBACA2xF,UAAAJ,uBAAAvxF,QAAA,oBACAm1G,kCAAA5jB,uBAAAvxF,QAAA,uCACAo1G,eAAA7jB,uBAAAvxF,QAAA,oBACAq1G,mBAAA9jB,uBAAAvxF,QAAA,wBACAs1G,kBAAA/jB,uBAAAvxF,QAAA,uBACAu1G,qBAAAhkB,uBAAAvxF,QAAA,oCACA42F,8XAAA10F,CAAAlC,QAAA,2BACAi8F,eAAA1K,uBAAAvxF,QAAA,sCACAw1G,gBAAAx1G,QAAA,6BACAy1G,uCAAAz1G,QAAA,iDACAq8F,MAAAr8F,QAAA,gBACA01G,UAAA11G,QAAA,oBACAq3F,QAAAr3F,QAAA,aACA21G,sBAAA31G,QAAA,qCACA6pG,gBAAA7pG,QAAA,+BACA41G,oBAAA51G,QAAA,mCACAypG,mBAAAzpG,QAAA,kCACA+xF,YAAA/xF,QAAA,2BACAs8F,qBAAAt8F,QAAA,oCACAu8F,iBAAAv8F,QAAA,6yBAGA,IAAMu1F,SAAW,GAOIsgB,8BASjB,SAAAA,mBAAYngB,2BAA4BuD,kBAAmBC,YAAY,IAAAzhF,MAAAjU,KACnE,iIADmE8uF,CAAA9uF,KAAAqyG,oBAAAnZ,gBAAAl5F,KAAA,UAwL7D,SAACwW,MAAD,OAAUvC,MAAK89E,SAAS7hF,KAAK1M,KAAKgT,QAxL2B0iF,gBAAAl5F,KAAA,sCAqMjC,SAACsyG,mBACnC,IAAMC,oBAAsBt+F,MAAKu+F,oBAAoBF,mBAErDr+F,MAAKw+F,uCAAuCF,uBAxMuBrZ,gBAAAl5F,KAAA,8CA4NzB,SAACsyG,mBAG3C,IAFA,IAESj2G,EAAI,EAAGA,EAAIi2G,kBAAkBI,qBAAqB11G,OAAQX,IAAK,CACpE,IAAMs2G,2BAA6BL,kBAAkBI,qBAAqBr2G,GACpEu2G,kBAAoB3+F,MAAKu+F,oBAAoBF,mBAJpC,GAKTC,oBAAsB3nF,OAAOioF,OAAO,GAAID,kBAAmBD,4BAEjE1+F,MAAKw+F,uCAAuCF,wBApOmBrZ,gBAAAl5F,KAAA,iBA+btD,SAAC6vG,UACdA,SAAS9d,SAAS,GAAG+gB,eAAejD,SAAS9d,SAAS,IACtD8d,SAAS9d,SAAS,GAAG+gB,eAAejD,SAAS9d,SAAS,IAEtD99E,MAAKk6F,WAAY,EAAAuD,UAAA,SAASz9F,MAAKk6F,UAAW0B,YAncyB3W,gBAAAl5F,KAAA,mCA4epC,SAAC+yG,gBAAiB5Z,eACjD,UAAK,EAAAgZ,sBAAAa,wBAAuBD,kBAAoB9+F,MAAKg/F,wBAAwBF,oBAI7E9+F,MAAKi/F,8BAA8B/Z,cAAc4Z,iBACjD9+F,MAAKk/F,2BAA2BJ,iBAEhC5Z,cAAc4Z,gBAAkBA,iBAEzB,KAtf4D7Z,gBAAAl5F,KAAA,oBAitBnD,SAACm5F,eACZA,cAAcC,gBAInBnlF,MAAKm/F,qBAAqBC,gBAAgBla,iBAttByBD,gBAAAl5F,KAAA,sBAquBjD,WAClBiU,MAAKm/F,qBAAqBE,mCAtuByCpa,gBAAAl5F,KAAA,sBAivBjD,SAACm5F,eACdA,cAAcC,gBAInBnlF,MAAKm/F,qBAAqBG,kBAAkBpa,iBAtvBuBD,gBAAAl5F,KAAA,6BAowB1C,SAACq5F,UAAa,IAC/BwC,iBAAqB5nF,MAAKylF,uBAAuBL,UAAjDwC,iBAER5nF,MAAKigF,UAAUjyC,QAAQssC,YAAAyC,MAAMwiB,gCAAiC3X,qBAtwB1D,EAAA7N,QAAA,SAAOkE,8BAA+B,EAAAlE,QAAA,SAAOyH,qBAAsB,EAAAzH,QAAA,SAAO0H,YAC1E,MAAM,IAAIxjE,UAAU,uJAAA,gBAAA1gB,OAAAiiG,QAEOvhB,4BAFP,MAAA1gF,OAAAiiG,QAE6Che,mBAF7C,SAAAjkF,OAAAiiG,QAE6E/d,cAGrG,IAAI,EAAA0c,oBAAAsB,mBAAkBxhB,4BAClB,MAAM,IAAIhgE,UAAU,gFAAA,4CAAA1gB,OAAAiiG,QACmCvhB,8BAG3D,KAAMuD,6BAA6B7C,mBAAA,SAC/B,MAAM,IAAI1gE,UAAU,uEAAA,wDAAA1gB,OAAAiiG,QAC+Che,qBAGvE,KAAMC,sBAAsBlC,YAAA,SACxB,MAAM,IAAIthE,UAAU,gEAAA,iDAAA1gB,OAAAiiG,QACwC/d,cAqFhE,OA1EA11F,KAAK2zG,mBAAqBle,kBAU1Bz1F,KAAK4zG,mBAAqB,IAAI/B,mBAAA,QAC1B7xG,KAAK6zG,iCAAiCnhD,KAAK1yD,MAC3CA,KAAKwmG,iBAAiB9zC,KAAK1yD,OAW/BA,KAAKk0F,UAAY/F,UAAA,QAUjBnuF,KAAK8zG,iCAAmC,IAAInC,kCAAA,QAAiCzf,4BAU7ElyF,KAAK+5F,YAAcrE,WAYnB11F,KAAK+zG,uBAAyB,GAE9Bl4D,KAAKk2C,SAAWA,SAChB/xF,KAAK+xF,SAAWA,SAGhB/xF,KAAK+xF,SAAS7hF,KAAO,GACrBlQ,KAAK+xF,SAASiiB,KAAO,CAAEnjE,SAAS,GAChC7wC,KAAKmuG,UAAY,GASjBnuG,KAAKozG,qBAAuB,IAAIrB,qBAAA,QAEzB/xG,KAAKojC,OACP6wE,iBACA7hB,gIAoBL,OAAOpyF,8CAcP,OAFAA,KAAKk0G,yBAA2Bl0G,KAAKm0G,gBAAgBzhD,KAAK1yD,MAEnDA,sCAiBP,OARAA,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAMojB,aAAcp0G,KAAKq0G,SAC3Cr0G,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAMsjB,mBAAoBt0G,KAAKu0G,4BACjDv0G,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAMuI,gBAAiBv5F,KAAKw0G,mBAC9Cx0G,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAMyK,kBAAmBz7F,KAAKy0G,qBAChDz0G,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAMiN,mBAAoBj+F,KAAK00G,qBACjD10G,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAM0c,gBAAiB1tG,KAAKk0G,0BAC9Cl0G,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAMsd,yBAA0BtuG,KAAK8yG,gBAEhD9yG,uCAiBP,OARAA,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAMojB,aAAcp0G,KAAKq0G,SAC5Cr0G,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAMsjB,mBAAoBt0G,KAAKu0G,4BAClDv0G,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAMuI,gBAAiBv5F,KAAKw0G,mBAC/Cx0G,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAMyK,kBAAmBz7F,KAAKy0G,qBACjDz0G,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAMiN,mBAAoBj+F,KAAK00G,qBAClD10G,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAM0c,gBAAiB1tG,KAAKk0G,0BAC/Cl0G,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAMsd,yBAA0BtuG,KAAK8yG,gBAEjD9yG,oDA+DPA,KAAK+xF,SAASiiB,KAAKnjE,SAAW7wC,KAAK+xF,SAASiiB,KAAKnjE,qDAQhCka,UAIjB,IAHA,IAAI4pD,QAAU,KACV3Y,SAAWthE,EAAAA,EAENr+B,EAAI,EAAGA,EAAI2D,KAAK+xF,SAAS7hF,KAAKlT,OAAQX,IAAK,CAChD,IAAMu4G,UAAW50G,KAAK+xF,SAAS7hF,KAAK7T,GAC9Bw4G,GAAI,EAAA3C,UAAA4C,YAAWF,UAAS/Y,iBAAkB9wC,UAE5C8pD,EAAI7Y,UAAY4Y,UAASG,cAAgBH,UAASpF,MAClDxT,SAAW6Y,EACXF,QAAUt4G,GAIlB,MAAO,CAAC2D,KAAK+xF,SAAS7hF,KAAKykG,SAAU3Y,oDAYvBjK,UAAsB,IAAZijB,OAAY,EAAAnwG,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAH,EAC3BowG,gBAAkBpiB,mBAAA,QAAkBkV,cAAcmN,WAAaF,OAErE,OAAOjjB,SAASiK,SAAWiZ,8DAU3B,IAAK,IAAI54G,EAAI2D,KAAK+xF,SAAS7hF,KAAKlT,OAAS,EAAQ,GAALX,EAAQA,IAChD2D,KAAKm0G,gBAAgBn0G,KAAK+xF,SAAS7hF,KAAK7T,4CAShC88F,eACZtG,mBAAA,QAAkBsiB,kCAAkChc,eACpDn5F,KAAKo1G,2BAA2Bjc,eAChCn5F,KAAKq1G,4BAA4Blc,eACjCn5F,KAAKkzG,8BAA8B/Z,eACnCn5F,KAAKs1G,sCAAsCnc,eAC3Cn5F,KAAKu1G,gBAAgBpc,eACrBn5F,KAAK+5F,YAAYnD,sBAAsB4e,uCAAuCrc,gDAa9E,GAAkC,IAA9Bn5F,KAAK+xF,SAAS7hF,KAAKlT,OAKvB,IAAK,IAAIX,EAAI,EAAGA,EAAI2D,KAAK+xF,SAAS7hF,KAAKlT,OAAQX,IAAK,CAChD,IAAM88F,cAAgBn5F,KAAK+xF,SAAS7hF,KAAK7T,GAEzC88F,cAAcpI,SACdoI,cAAcsc,gBAIVtc,cAAcuc,cAIlB11G,KAAK21G,yBAAyBxc,cAAe98F,GAC7C2D,KAAK41G,0BAA0Bzc,eAE1BA,cAAcC,gBACfp5F,KAAKu1G,gBAAgBpc,gEAYVE,UACnB,GAAKA,SAAL,CAIA,IAAMwc,mBAAqBxc,SAAS99C,cAEpC,OAAO,EAAAi2D,OAAA,SAAMxxG,KAAK+xF,SAAS7hF,KAAM,SAAC6hF,UAAD,OAAcA,SAASsH,WAAawc,+DAUxD7/F,IACb,GAAKA,GAIL,OAAO,EAAAw7F,OAAA,SAAMxxG,KAAK+xF,SAAS7hF,KAAM,SAAC6hF,UAAD,OAAcA,SAAS/7E,KAAOA,oDAY/DhW,KAAKozG,qBAAqBriB,OAAO/wF,KAAK+xF,SAAS7hF,sCAQ9B,IAAfmpF,SAAe,EAAAx0F,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAJ,GACb,OAAO7E,KAAK05F,uBAAuBL,8CAW3BtH,SAAU+jB,eAClB,IAAMjG,SAAW,IAAIiC,kBAAA,QAAiB/f,SAAU+jB,eAE5CjG,SAASnB,kBACTmB,SAASvd,WAIbtyF,KAAKmuG,UAAU3qG,KAAKqsG,UACpB9d,SAASgkB,YAAYlG,SAAUiG,eAC/BA,cAAcC,YAAYlG,SAAU9d,oEAYY,IAAvBikB,UAAuBC,KAAvBD,UAAW3c,SAAY4c,KAAZ5c,SACpCr5F,KAAK2zG,mBAAmByB,2BAA2BY,UAAW3c,8DAUtCtH,UACxB/xF,KAAK+xF,SAAS7hF,MAAO,EAAAwhG,UAAA,SAAS1xG,KAAK+xF,SAAS7hF,KAAM6hF,wEA0BhBA,UAClC,IAAK,IAAMmkB,yBAAyBnkB,SAASoc,UACzCpc,SAASoc,UAAU+H,uBAAuB5jB,kDAalC6G,eACZn5F,KAAKozG,qBAAqBmC,gBAAgBpc,8EA0CPoZ,qBACnC,IAAMpZ,cAAgB,IAAIyY,eAAA,QAAcW,qBAClC4D,YAA+C,cAAjC5D,oBAAoB1a,SAClCue,UAA6C,YAAjC7D,oBAAoB1a,SAChCwe,YAAmF,WAArEjjB,gBAAA,QAAeiS,cAAcvM,qBAAAqI,kBAAkBmV,kBAC7DC,eAAiBhE,oBAAoB5L,SAI3C3mG,KAAKk0F,UAAUjyC,QAAQssC,YAAAyC,MAAMojB,aAAcjb,eAEvCid,YACA3pF,QAAQhsB,IAAI,WACZgsB,QAAQhsB,IAAI04F,eACZ1sE,QAAQhsB,IAAI81G,gBACZv2G,KAAKw2G,8BAA8Brd,cAAeod,eAAgBpd,cAAciR,IAAIC,mBAAmB1pG,OAGvGw1G,aAAeE,cAIfr2G,KAAKozG,qBAAqBqD,gBAAgBtd,eAC1CA,cAAc6O,MAAMU,iBACpBvP,cAAcud,aAAavd,cAAciR,IAAIU,sBAC7C3R,cAAciR,IAAIU,qBAAqB6L,mBAAmBxd,cAAcnjF,IACxEmjF,cAAcyd,eAAe3Q,mBAAAc,aAAa8P,SAE1C1d,cAAc2d,gCAAiC,EAE/C92G,KAAKw2G,8BAA8Brd,cAAeod,eAAgBpd,cAAciR,IAAIU,qBAAqBnqG,mDAc7F2xG,mBAAuC,IAApB1L,WAAoB,EAAA/hG,UAAA7H,aAAA4F,IAAAiC,UAAA,IAAAA,UAAA,GACjDmxG,UAAY1D,kBAAkByE,2BADmBC,uBAG/B,EAAAhF,gBAAAiF,2BAA0B,CAACjB,YAA3Cr1G,KAH+Cq2G,sBAG/Cr2G,KAAMu2G,MAHyCF,sBAGzCE,MACVC,aAAen3G,KAAK2zG,mBAAmByD,gBAAgBz2G,WAE/B,IAAjBw2G,eACP1qF,QAAQ4tB,KAAR,qBAAA7oC,OAAkC7Q,KAAlC,uDAEAw2G,aAAen3G,KAAK2zG,mBAAmByD,gBAAgB,QAM3D,IAAMC,aAAer3G,KAAK2zG,mBAAmB2D,qCAAqCH,cAC5EI,uBAAyBv3G,KAAKw3G,6CAA6CxB,UAAWmB,cAItFxO,SAAa2J,kBAAb3J,SAEF/B,YAAc0L,kBAAkBza,WAAaoO,mBAAAwR,gBAAgBC,UAC7D/O,SAAW51E,KAAKw5C,IAAI,KAAOo8B,WAG/B,IAAMgP,sBAAuB,EAAA1F,uCAAA2F,gCAA+BtF,kBAAkB3N,eAG9E,MAAO,CACHuS,MAAAA,MACAvO,SAAAA,SACAoK,gBALoB/yG,KAAK63G,+BAA+BhlB,mBAAA,QAAkBkV,cAAclY,MAMxFioB,OAAQxF,kBAAkBwF,OAC1BC,YAAazF,kBAAkByF,YAC/B1e,SAAUge,aACVxf,SAAUya,kBAAkBza,SAC5BmgB,QAASb,aAAatnB,KACtBooB,gBAAiBd,aAAae,UAC9BxkD,MAAO4+C,kBAAkB5+C,MACzBy0C,QAASmK,kBAAkBnK,QAC3BxD,cAAegT,qBACf9nB,KAAM0nB,uBAAuB1nB,KAC7BsoB,MAAOZ,uBACPvM,YAAasH,kBAAkBtH,YAC/BrE,SAAU2L,kBAAkB3L,SAE5ByR,WAAW,EAAA3G,MAAA,SAAKa,kBAAmB,YAAa,2DAc1BvgB,SAAU4U,SAAUqD,YAC9C,GAAKrD,UAAcqD,cAAcrD,SAAjC,CAIA,IAAM0R,cAAgB1R,SAASqD,YACzBtI,QAAU,IAAIjJ,eAAA,QAAJ,GAAAjnF,OAAqBugF,SAASumB,cAA9B,KAAA9mG,OAA+C6mG,gBAAiBj6G,QAEhF4B,KAAK4zG,mBAAmB/P,YAAY9R,SAAU2P,QAAQn6F,MAAM,yEAgBnByuG,UAAWmB,cACpD,OAAOn3G,KAAK8zG,iCAAiCyE,kCAAkCvC,UAAWmB,qEAgB/DtnB,MAC3B,IAAMkjB,iBAAkB,EAAAZ,sBAAAqG,2BAExB,QAAK,EAAArG,sBAAAsG,2BAA0B5oB,KAAMkjB,kBAAoB/yG,KAAKizG,wBAAwBF,iBAE3E/yG,KAAK63G,+BAA+BhoB,OAG/C7vF,KAAKmzG,2BAA2BJ,iBAEzBA,oEAUgBA,iBACvB/yG,KAAK+zG,uBAAuBvwG,KAAKuvG,8EAUc,IAAnBA,gBAAmB2F,MAAnB3F,gBAC5B/yG,KAAK+zG,wBAAyB,EAAArC,UAAA,SAAS1xG,KAAK+zG,uBAAwBhB,iEAYhDA,iBACpB,OAAO/yG,KAAK+zG,uBAAuBvnG,QAAQumG,mBAAqBha,iBAAA4f,4DAoF9Cxf,cAAeyf,yBACjC,IAAMC,mBAAoB,EAAAxS,gBAAAyS,IAAG,GACvB5H,IAAK,EAAArY,MAAAoV,KAAI9U,cAAc0C,iBAAiB,GAAK+c,wBAAwB/c,iBAAiB,IACtFsV,IAAK,EAAAtY,MAAAoV,KAAI9U,cAAc0C,iBAAiB,GAAK+c,wBAAwB/c,iBAAiB,IAE5F,OAAOqV,GAAK2H,mBAAqB1H,GAAK0H,mEAYjB1f,cAAe4f,oBACpC,IAAK,IAAIjtF,EAAIitF,mBAAqB,EAAGjtF,EAAI9rB,KAAK+xF,SAAS7hF,KAAKlT,OAAQ8uB,IAAK,CACrE,IAAMktF,mBAAqBh5G,KAAK+xF,SAAS7hF,KAAK4b,GAG1CktF,mBAAmBtD,cAInBvc,cAAc8f,6BAA6BD,oBAC3C7f,cAAcgV,UAAU6K,mBAAmB3f,UAAUtI,SAKrD/wF,KAAKk5G,sBAAsB/f,cAAe6f,qBAC1Ch5G,KAAK+1G,YAAY5c,cAAe6f,wEAgBlB7f,eAEtB,GAAIA,cAAcid,aAAejd,cAAcggB,cAAgBhgB,cAAcqW,IAezE,OAdArhB,UAAA,QAASlsC,QAAQssC,YAAA6qB,eAAeC,SAAUlgB,cAAeA,cAAciR,IAAIC,oBAE3E1W,cAAA,QAAa6N,OAAb,GAAAhwF,OAAuB2nF,cAAcE,SAArC,oCACA,EAAAxF,QAAA2T,YACI,CACI,CAAE/lG,KAAM,WAAY+I,QAAS2uF,eAC7B,CAAE13F,KAAM,OAAQ+I,QAAS,oCAE7B2uF,cAAcsO,YAGlBrU,gBAAA,QAAeic,iBAAiBjc,gBAAAkc,YAAYoI,cAC5C13G,KAAKm0G,gBAAgBhb,eAKrBA,cAAcqW,KAAOrW,cAAcgW,eACnCxb,cAAA,QAAa6N,OAAb,2BAAAhwF,OAA+C2nF,cAAcE,WAAY,GACzEr5F,KAAKm0G,gBAAgBhb,gBAErB,EAAAtF,QAAA2T,YACI,CACI,CAAE/lG,KAAM,WAAY+I,QAAS2uF,eAC7B,CAAE13F,KAAM,OAAQ+I,QAAS,yBAE7B2uF,cAAcsO,aAKjBznG,KAAKs5G,kBAAkBngB,cAAe,IAAOA,cAAcC,iBAAkBD,cAAcogB,aAC5Fv5G,KAAKm0G,gBAAgBhb,yDAzvBzB,OAAOn5F,KAAK4zG,ooCCpKpB,IAAA4F,OAAAzrB,uBAAAvxF,QAAA,gBACAi9G,YAAA1rB,uBAAAvxF,QAAA,qBACAk9G,YAAA3rB,uBAAAvxF,QAAA,qBACAm9G,QAAA5rB,uBAAAvxF,QAAA,iBACAo9G,UAAA7rB,uBAAAvxF,QAAA,mBACAi1G,MAAA1jB,uBAAAvxF,QAAA,eACAq9G,UAAA9rB,uBAAAvxF,QAAA,mBACAs9G,UAAA/rB,uBAAAvxF,QAAA,mBACAwxF,QAAAD,uBAAAvxF,QAAA,iBACAu9G,WAAAhsB,uBAAAvxF,QAAA,oBACAq2F,mBAAA9E,uBAAAvxF,QAAA,iCACAw9G,KAAAjsB,uBAAAvxF,QAAA,iCACA42F,8XAAA10F,CAAAlC,QAAA,2BACAy9G,gBAAAlsB,uBAAAvxF,QAAA,iCACA09G,OAAAnsB,uBAAAvxF,QAAA,kBACA4xF,YAAAL,uBAAAvxF,QAAA,yBACAm3F,cAAA5F,uBAAAvxF,QAAA,uBACA2xF,UAAAJ,uBAAAvxF,QAAA,oBACA+xF,YAAA/xF,QAAA,2BACA0pG,QAAA1pG,QAAA,kBAIAq8F,MAAAr8F,QAAA,gBAOA29G,YAAA39G,QAAA,sBAKAoxG,QAAApxG,QAAA,kBAWAq3F,QAAAr3F,QAAA,aACA4pG,gBAAA5pG,QAAA,+BAOA6pG,gBAAA7pG,QAAA,+BAMAwpG,sBAAAxpG,QAAA,sCAIAypG,mBAAAzpG,QAAA,kCAMA6xF,kBAAA7xF,QAAA,iCAIAu8F,iBAAAv8F,QAAA,gCAIA49G,sBAAA59G,QAAA,2YAOA,IAAM69G,iBAEG,MAQYC,yBAMjB,SAAAA,gBAA0B,IAAd78G,QAAc,EAAAoH,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAJ,kIAAIiqF,CAAA9uF,KAAAs6G,eAUtBt6G,KAAKgW,IAAK,EAAA+jG,WAAA,SAAU,aASpB/5G,KAAK2kG,cAAgB,KAUrB3kG,KAAKm4G,MAAQ,KASbn4G,KAAKg2G,UAAY,GAUjBh2G,KAAKi4G,gBAAkB,GAUvBj4G,KAAKq3G,aAAe,GAUpBr3G,KAAK82G,gCAAiC,EAYtC92G,KAAK+yG,gBAAkB,KAWvB/yG,KAAKynG,YAAa,EAAA5T,QAAA0mB,uBAUlBv6G,KAAKmoG,QAAU,EAUfnoG,KAAK2oG,SAAW,EAUhB3oG,KAAK0zD,MAAQ,EAUb1zD,KAAKw6G,YAAc,EAUnBx6G,KAAKgxG,YAAc,EAUnBhxG,KAAKivG,YAAc,EAUnBjvG,KAAKy6G,aAAe,EAUpBz6G,KAAKopG,OAAS,EAUdppG,KAAKg8F,SAAW,EAYhBh8F,KAAK83G,OAAS,GAYd93G,KAAK+3G,YAAc,GAUnB/3G,KAAKwrG,MAAQ,EAUbxrG,KAAKi6F,QAAU,GAQfj6F,KAAK06G,WAAa,CAAExqG,KAAM,IAQ1BlQ,KAAK26G,SAAU,EAUf36G,KAAKwvG,KAAM,EAUXxvG,KAAK46G,WAAa,EAWlB56G,KAAK66G,UAAY,EAUjB76G,KAAKsmB,MAAQ+zF,iBAWbr6G,KAAKo5F,gBAAiB,EAUtBp5F,KAAKmuG,UAAY,GAQjBnuG,KAAK86G,gBAAiB,EAgBtB96G,KAAK+6G,gCAAiC,EAatC/6G,KAAKu5G,aAAc,EAKnBv5G,KAAKg7G,WAAY,EACjBh7G,KAAKi7G,wBAA0B,GAE/Bj7G,KAAK63F,SAAWp6F,QAAQo6F,SAKxB73F,KAAKokC,OAAS,CACVukE,SAAU,EACVR,QAAS,KACTI,KAAM,KACN70C,MAAO,GAMX1zD,KAAKk7G,eAAiB,KACtBl7G,KAAKm7G,mBAAqB,KAS1Bn7G,KAAKm4G,MAAQ16G,QAAQ06G,MAOrBn4G,KAAKqrG,IAAM,IAAI4O,gBAAA,QAOfj6G,KAAKoqG,IAAM,IAAI4P,KAAA,QAAIv8G,SAOnBuC,KAAKgoG,MAAQ,IAAIkS,OAAA,QAAMl6G,KAAKoqG,IAAKpqG,KAAKqrG,KAEtCrrG,KAAKivG,YAAcxxG,QAAQo6F,WAAaoO,mBAAAwR,gBAAgBC,QACpDtpB,YAAA,QAAW4gB,qBACX,KAEJhvG,KAAKo7G,4BACLp7G,KAAKq7G,2BACLr7G,KAAK5B,MAAMX,SAEX,IAAMgyF,QAAUoD,mBAAA,QAAkBkV,cAGlC,GAAI/nG,KAAK63F,WAAaoO,mBAAAwR,gBAAgB6D,UAClCt7G,KAAK42G,eAAe3Q,mBAAAc,aAAa2D,OACjC1qG,KAAK2oG,SAAWlZ,QAAQkV,cAAcmK,UACtC9uG,KAAK0zD,MAAQ,MACV,CAAA,GAAI1zD,KAAK63F,WAAaoO,mBAAAwR,gBAAgBC,SAAW13G,KAAK63F,WAAaoO,mBAAAwR,gBAAgB8D,WACtF,MAAM,IAAI5+G,MAAM,4CAEhB,IAAM6+G,eAAiBx7G,KAAKoqG,IAAIqR,oBAE1BC,gBADe7oB,mBAAA,QAAkBkV,cACF4T,sBAErC37G,KAAKqrG,IAAIuQ,4BACLJ,eACAE,gBACA17G,KAAK2oG,SACL3oG,KAAKmoG,QACLnoG,KAAK0zD,+IA8FW,IAAAz/C,MAAAjU,KAClB67G,SAAU,EAAApK,MAAA,SAAK51D,KAAM,0BAA2B,MAEjDggE,UAIL77G,KAAK86G,eAAiB,IACtB96G,KAAK87G,cAAgB,EAErBlC,UAAA,SAASiC,QAAS,SAACE,aAAcC,GAC7B/nG,MAAK6mG,eAAekB,GAAK,IAEzB,EAAApC,UAAA,SAASmC,aAAc,SAAC92F,MAAO6G,GAC3B7X,MAAK6mG,eAAekB,GAAGlwF,GAAK4O,EAAAA,0DAWb,IAAAw2D,OAAAlxF,KACjBi8G,gBAAkBppB,mBAAA,QAAkBlgF,QAAQykF,kBAElD,EAAAwiB,UAAA,SAASqC,gBAAiB,SAACC,MACvBhrB,OAAKwpB,WAAWxqG,KAAK1M,KAAK,CACtBoC,KAAMs2G,KACNj3F,MAAO,KACPk3F,QAAQ,oCAKdv2G,MACF5F,KAAK2kG,cAAgB/+F,KAAK++F,cAC1B3kG,KAAK+yG,gBAAkBntG,KAAKmtG,gBAC5B/yG,KAAKg2G,UAAYpwG,KAAKoyG,QACtBh4G,KAAKi4G,gBAAkBryG,KAAKqyG,gBAC5Bj4G,KAAKq3G,aAAezxG,KAAKyzF,SACzBr5F,KAAK63F,SAAWjyF,KAAKiyF,SACrB73F,KAAKmoG,QAAUviG,KAAKuiG,QACpBnoG,KAAK2oG,SAAW/iG,KAAK+iG,SACrB3oG,KAAK0zD,MAAQ9tD,KAAK8tD,MAClB1zD,KAAK83G,QAAS,EAAArG,MAAA,SAAK7rG,KAAM,SAAU5F,KAAK83G,QACxC93G,KAAK+3G,aAAc,EAAAtG,MAAA,SAAK7rG,KAAM,cAAe5F,KAAK+3G,aAElD/3G,KAAKokC,OAAOukE,SAAW3oG,KAAK2oG,SAC5B3oG,KAAKo8G,cAAgBp8G,KAAKmoG,QAC1BnoG,KAAKokC,OAAOsvB,MAAQ1zD,KAAK0zD,MAGzB1zD,KAAKo5F,eAAiBxzF,KAAKiyF,WAAaoO,mBAAAwR,gBAAgB6D,iDAiBxD,IAAIe,iBAAmB,IACnBC,mBAAqB,IAUzB,OARIt8G,KAAKqrG,IAAI1C,WAAa5P,iBAAA2K,iBACtB2Y,iBAAmBtpF,KAAK8B,MAAM70B,KAAKqrG,IAAI1C,UAAYtC,gBAAAkW,0BAA0BC,OAG7Ex8G,KAAKoqG,IAAIkS,qBAAuBvjB,iBAAA2K,iBAChC4Y,mBAAqBt8G,KAAKoqG,IAAIkS,mBAAqBjW,gBAAAkW,0BAA0BC,OAG1E,CACHxmG,GAAIhW,KAAKgW,GACTymG,aAAcz8G,KAAKo5F,eACnBC,SAAUr5F,KAAKq5F,SACf0Z,gBAAiB/yG,KAAK+yG,gBACtB2J,oBAAqB18G,KAAKm4G,MAAMuE,oBAChCL,iBAAAA,iBACAC,mBAAAA,mBACAK,iBAAkB38G,KAAK+3G,YAAYx8D,cACnCqhE,mBAAoB58G,KAAK83G,OAAOv8D,cAChCshE,WAAY78G,KAAKoqG,IAAI0S,qFAWfC,iBAGV,QAFmD,MAApBA,iBAEA/8G,KAAKg2G,UAAUz6D,cAAgBwhE,gBAAgBxhE,gBAAkBv7C,KAAKq5F,YAK9F,EAAAygB,UAAA,SAASiD,gBAAgBxhE,cAAev7C,KAAKq5F,gDAUpD,OAAOr5F,KAAKq5F,SAAS99C,yDASrB,IAAIyhE,OAASh9G,KAAKm4G,MAAM8E,sBAMxB,OAJK,EAAApD,UAAA,SAASmD,UACVA,OAAM,IAAAxrG,OAAOwrG,SAGY,aAAzBh9G,KAAKi4G,gBACL,GAAAzmG,OAAUxR,KAAKi4G,gBAAf,KAAAzmG,QAAkC,EAAA40F,gBAAA4F,gBAAehsG,KAAKq3G,eAAtD7lG,OAAsEwrG,QAG1E,GAAAxrG,OAAUxR,KAAKi4G,gBAAf,KAAAzmG,QAAkC,EAAA40F,gBAAA8W,cAAal9G,KAAKq3G,eAApD7lG,OAAoEwrG,+CAWpE,IAAIG,wBACAC,UAEIzU,SAAa3oG,KAAb2oG,SACF0U,KAAOr9G,KAAKm4G,MAAMkF,KAAKC,MACrBC,QAAYv9G,KAAKm4G,MAAjBoF,QAUR,OAPIJ,wBADAn9G,KAAKm4G,MAAMqF,QAAQ/7G,OAASwkG,mBAAAwX,YAAYC,IACd,IAEA,IAK1B19G,KAAK2oG,SAAW,OAEhByU,UAAmB,MAAPC,MAAiB,MAAAtqF,KAAA4qF,KAAW,MAAQ,OAAUhV,UAAY,MAAU,QAC3E,MAAQ,OAAUA,YACGA,SAAW4U,QAAUH,UAAczU,SAAW4U,QAAUJ,wBAM3En9G,KAAKm4G,MAAMkF,KAAKC,0CAW3Bt9G,KAAKoqG,IAAIwT,oDAUT,IAAI59G,KAAKg7G,UAAT,CAIA,IAAM6C,wBAAyB,EAAArE,OAAA,SAAMx5G,KAAKoqG,IAAIC,mBAAmByE,UAAY,KAAO,GAC9EgP,sBAAuB,EAAAnE,QAAA,SAAO35G,KAAK2oG,UAAW,GAChDoV,uBAAyBF,uBACzBG,aAAY,uDAAAxsG,OAA0DqsG,wBAE9CA,wBAAxBC,uBAEAE,aAAY,uDAAAxsG,OADZusG,uBAAyBD,uBAI7B99G,KAAKgoG,MAAMQ,sBAAuB,EAElCxoG,KAAKqrG,IAAI4S,sBAAsBF,wBAC/B/9G,KAAKqrG,IAAI6S,kBACTl+G,KAAKqrG,IAAI8S,qBAAqBn+G,KAAKmoG,SACnCnoG,KAAKqrG,IAAI+S,iBACTp+G,KAAK42G,eAAe3Q,mBAAAc,aAAasX,SACjCr+G,KAAKs+G,UAAUN,aAAc3vB,kBAAAkwB,8BAA8BC,UAAU,yCAWrE,OAAQx+G,KAAKmvG,+EAWyBsP,eACtC,IAAI,EAAAzwB,QAAA,SAAOywB,eACP,OAAO,EAGX,IAAMC,cAAgBD,cAAcE,aAC9BC,iBAAmB5+G,KAAK2kG,cAAcka,mBAAmBJ,cAAc9Z,eAGvEma,kBAFcJ,cAAgB1+G,KAAK0zD,SACf1zD,KAAKm4G,MAAMkF,KAAK0B,WAAa,GAIvD,OAF0BH,iBAAmB5+G,KAAKw6G,YAAczhB,iBAAAimB,KAAKC,oBAE9DH,8EAY0BL,cAAeS,gBAChD,IAAMC,eAAiBV,cAAc9Z,cAC/Bia,iBAAmB5+G,KAAK2kG,cAAcka,mBAAmBM,gBAGzDC,aAFiBF,eAAiBl/G,KAAK2oG,YACxB3oG,KAAKm4G,MAAMkF,KAAKgC,QAAUpZ,mBAAAqZ,YAAYC,wBAI3D,OAF0BX,iBAAmB5+G,KAAKw6G,YAAczhB,iBAAAimB,KAAKQ,oBAE9DJ,gDAWP,OAAOp/G,KAAKoqG,IAAIgM,kDAWhB,OAAOp2G,KAAKoqG,IAAI+L,qDAWhB,MAAuB,KAAhBn2G,KAAK83G,QAAsC,KAArB93G,KAAK+3G,uDAgBlC,OAH2B/3G,KAAKy/G,iDACgBz/G,KAAK2oG,UAExB1C,mBAAAqZ,YAAYI,gHAWzC,IAAMzV,YAAcjqG,KAAKoqG,IAAIC,mBAE7B,QAAKJ,cAQEA,YAAY0V,mBAAmB3/G,OAASiqG,YAAY2V,+BAA+B5/G,KAAKgxG,iEA0B/F,IAAM6O,mBAAqB7/G,KAAKy/G,iDAGhC,OAFqC,EAAA5mB,MAAAoV,KAAI4R,mBAAqB7/G,KAAK2oG,WAE5B1C,mBAAAqZ,YAAYI,yGAWtCjwB,SACb,OAAOA,QAAQqwB,sBAAsB9/G,KAAK67F,iBAAkB77F,KAAK2oG,8CAWjE,QAAK3oG,KAAKowG,yBAIiBpwG,KAAK2kG,cAAcka,mBAAmB7+G,KAAKqrG,IAAI0U,YACnC1xB,kBAAA2xB,kBAAkBC,oEAazD,GAAIjgH,KAAKkgH,eACL,OAAO,EAGX,IAAInW,aAAe/pG,KAAKoqG,IAAI+V,sBACxBlW,YAAcjqG,KAAKoqG,IAAIU,qBAEvB9qG,KAAKo2G,cACLrM,aAAe/pG,KAAKoqG,IAAIgW,oBACxBnW,YAAcjqG,KAAKoqG,IAAIC,oBAG3B,IACMgW,0BAA4BrgH,KAAK2oG,SAAWsB,YAAY6E,UADjC,EAEvBwR,2BAA6BtgH,KAAK2oG,SAAWoB,aAAa+E,UAFnC,EAI7B,OAAOuR,2BAA6BC,6DAWpC,OAAOtgH,KAAKyqG,cAAgBxE,mBAAAc,aAAa2D,0CASzC,OAAO1qG,KAAKmvG,cAAgBnvG,KAAK0zD,MAAQ,uCAWzC,IAAM6sD,WAAavgH,KAAK0zD,MAAQ1zD,KAAKm4G,MAAMzkD,MAAM6Y,KAAOvsE,KAAKgtG,aAE7D,OAAOuT,+CAQP,OAAOvgH,KAAKyqG,cAAgBxE,mBAAAc,aAAa2D,OACrC1qG,KAAKyqG,cAAgBxE,mBAAAc,aAAa4D,MAClC3qG,KAAKyqG,cAAgBxE,mBAAAc,aAAa8P,4CAUtC,OAAO72G,KAAKyqG,cAAgBxE,mBAAAc,aAAaC,4CAUzC,OAAIhnG,KAAKyqG,cAAgBxE,mBAAAc,aAAa2D,OAAS1qG,KAAKyqG,cAAgBxE,mBAAAc,aAAa4D,OAI7E3qG,KAAKyqG,cAAgBxE,mBAAAc,aAAa8P,SAE3B72G,KAAKoqG,IAAIU,qBAAqB0V,sBAAsBxgH,KAAKgW,8CAiBpEhW,KAAKu5G,aAAc,8CAQH,IACR7M,KAAS7Z,mBAAA,QAAkBkV,cAA3B2E,KACF+T,gBAAiB,EAAAtG,YAAAuG,yBAAwB1gH,KAAKmoG,QAASuE,KAAKI,OAElE,MAAO,CACH6T,OAAO,EAAA9nB,MAAA+nB,KAAIH,gBAAkB/T,KAAKh5C,MAClC7wB,MAAM,EAAAg2D,MAAAjoC,KAAI6vD,gBAAkB/T,KAAKh5C,4CAW5Bu2C,aACTjqG,KAAK2kG,cAAckc,eAAe5W,YAAY6W,KAE9C9gH,KAAKmoG,QAAU8B,YAAY6C,MAC3B9sG,KAAK2oG,SAAWsB,YAAY6E,4CAUtBrqE,IAAKs8E,WAAYC,OACvB,IAAIhhH,KAAKg7G,UAAT,CAIA,IAAMiG,gBAAkBjhH,KAAKq5F,SACvB6nB,eAAiBlhH,KAAKitG,mBAWtBkU,WAAa,SAAC9nB,UAAD,MAAA,GAAA7nF,OAAiBqhF,mBAAA,QAAkBkV,cAAcz2D,MAAMyvE,YAAvD,MAAAvvG,OAAuE6nF,SAAvE,KAAA7nF,OAAmFizB,MAEtG,GAAIu8E,MAAO,CAEPrtB,cAAA,QAAa6N,OAAO2f,WAAWF,kBADb,QAGlBttB,cAAA,QAAa6N,OAAO2f,WAAWF,mBAGnC,EAAAptB,QAAA2T,YACI,CAAC,CACG/lG,KAAM,OACN+I,QAAS22G,WAAWD,kBAExBlhH,KAAKynG,8CAST,IAAI2Z,QACAC,QAEJ,GAAIrhH,KAAKgtG,aAAc,CACnB,IAAMsU,QAAUthH,KAAK2oG,SAAW3oG,KAAKqrG,IAAI1C,SACnC4Y,KAAM,EAAAnb,gBAAAob,gBAAexhH,KAAK2oG,UAAW,GAEnB,IAApB51E,KAAKk7E,IAAIqT,SACK,EAAVA,SACAF,QAAO,sBAAA5vG,OAAyB+vG,IAAzB,SAAA/vG,OAAoCxR,KAAKqrG,IAAI1C,UACpD0Y,QAAO,sBAAA7vG,QAAyB,EAAA40F,gBAAAqF,gBAAe8V,KAAxC,SAAA/vG,QAAoD,EAAA40F,gBAAAqF,gBAAezrG,KAAKqrG,IAAI1C,YAC5E2Y,QAAU,IACjBF,QAAO,oBAAA5vG,OAAuB+vG,IAAvB,SAAA/vG,OAAkCxR,KAAKqrG,IAAI1C,UAClD0Y,QAAO,oBAAA7vG,QAAuB,EAAA40F,gBAAAqF,gBAAe8V,KAAtC,SAAA/vG,QAAkD,EAAA40F,gBAAAqF,gBAAezrG,KAAKqrG,IAAI1C,aAGrFyY,QAAO,MAAA5vG,OAAS+vG,KAChBF,QAAO,MAAA7vG,QAAS,EAAA40F,gBAAAqF,gBAAe8V,OAGnC5tB,cAAA,QAAa6N,OAAb,GAAAhwF,OAAuBqhF,mBAAA,QAAkBkV,cAAcz2D,MAAMmwE,IAA7D,MAAAjwG,OAAqExR,KAAKq5F,SAA1E,cAAA7nF,OAA+F4vG,WAC/F,EAAAvtB,QAAA2T,YACI,CACI,CAAE/lG,KAAM,OAAQ+I,QAAO,GAAAgH,OAAKqhF,mBAAA,QAAkBkV,cAAcz2D,MAAMmwE,IAA3C,OACvB,CAAEhgH,KAAM,WAAY+I,QAASxK,MAC7B,CAAEyB,KAAM,OAAQ+I,QAAO,YAAAgH,OAAc6vG,WAEzCrhH,KAAKynG,iBAGT9T,cAAA,QAAa6N,OAAb,GAAAhwF,OAAuBqhF,mBAAA,QAAkBkV,cAAcz2D,MAAMowE,IAA7D,MAAAlwG,OAAqExR,KAAKq5F,SAA1E,qBACA,EAAAxF,QAAA2T,YACI,CACI,CAAE/lG,KAAM,OAAQ+I,QAASqoF,mBAAA,QAAkBkV,cAAcz2D,MAAMowE,KAC/D,CAAEjgH,KAAM,WAAY+I,QAASxK,MAC7B,CAAEyB,KAAM,OAAQ+I,QAAS,oBAE7BxK,KAAKynG,iDAWJwC,aACT,GAAIjqG,KAAKgtG,aACL,MAAO,EAAC,EAAO,0CAGnB,GAAIhtG,KAAKyqG,cAAgBxE,mBAAAc,aAAaC,QAClC,MAAO,EAAC,EAAO,4CAGnB,GAAIhnG,KAAKo2G,YACL,MAAO,EAAC,EAAO,iDAGnB,GAAIp2G,KAAKoqG,IAAIU,uBAAyBb,YAAa,CAC/C,GAAIjqG,KAAKyqG,cAAgBxE,mBAAAc,aAAa8P,QAMlC,MAAO,EAAC,EALS,CACbp2G,IAAG,yCAAA+Q,OAA2Cy4F,YAAYtpG,MAC1DumG,IAAG,yCAAA11F,OAA2Cy4F,YAAYM,kBAMlE,GAAIvqG,KAAKyqG,cAAgBxE,mBAAAc,aAAa4D,KAMlC,MAAO,EAAC,EALS,CACblqG,IAAG,mCAAA+Q,OAAqCy4F,YAAYtpG,MACpDumG,IAAG,mCAAA11F,OAAqCy4F,YAAYM,kBAOhEvqG,KAAK42G,eAAe3Q,mBAAAc,aAAa4D,MAEjC3qG,KAAKoqG,IAAIU,qBAAqBsC,wBAAwBptG,KAAKgW,IAC3DhW,KAAKoqG,IAAIuX,mBAAmB1X,aAC5BjqG,KAAKoqG,IAAIU,qBAAqB6L,mBAAmB32G,KAAKgW,IAEtDhW,KAAK46G,WAAaxsB,YAAA,QAAW4gB,qBAE7B,IAAM3G,SAAW,GAIjB,OAHAA,SAAS5nG,IAAT,oCAAA+Q,OAAmDy4F,YAAYtpG,MAC/D0nG,SAASnB,IAAT,oCAAA11F,QAAmD,EAAA40F,gBAAAkE,cAAaL,YAAYtpG,OAErE,EAAC,EAAM0nG,0CAUVwC,QACJ,IAAM+W,YAAc5hH,KAAKm4G,MAAMzkD,MAAMmuD,OAC/BC,gBAAkB9hH,KAAKoqG,IAAI2X,2BAEjC/hH,KAAKgiH,sBAAsBF,gBAAiBjX,OAAOiC,MAAO8U,aAC1D5hH,KAAK42G,eAAe3Q,mBAAAc,aAAaC,SACjC7Y,UAAA,QAASlsC,QAAQssC,YAAA6qB,eAAepS,QAAShnG,KAAM6qG,QAE/C7qG,KAAKivG,YAAc7gB,YAAA,QAAW4gB,qBAC9BnE,OAAOoX,0BAA4BjiH,mDAYjB2oG,SAAUR,QAASz0C,OACjC1zD,KAAKqrG,IAAI1C,WAAa5P,iBAAA2K,gBACtB1jG,KAAKqrG,IAAI4S,sBAAsBtV,UAG/B3oG,KAAKqrG,IAAI6W,eAAiBlc,sBAAA6F,SAASsW,SAASC,KAC5CpiH,KAAKqrG,IAAI6S,kBAGTl+G,KAAKqrG,IAAIlD,UAAYpP,iBAAA2K,gBACrB1jG,KAAKqrG,IAAI8S,qBAAqBhW,SAG9BnoG,KAAKqrG,IAAIO,cAAgB5F,sBAAA6F,SAASC,QAAQsW,KAC1CpiH,KAAKqrG,IAAIC,iBAGTtrG,KAAKqrG,IAAI33C,QAAUqlC,iBAAA2K,gBACnB1jG,KAAKqrG,IAAIgX,mBAAmB3uD,OAG5B1zD,KAAKqrG,IAAIY,YAAcjG,sBAAA6F,SAASK,MAAMkW,KACtCpiH,KAAKqrG,IAAIiX,oDAWbtiH,KAAKokC,OAAOukE,UAAW,EAAA8Q,YAAA,SAAWz5G,KAAKuiH,6BAA8BviH,KAAKokC,OAAOukE,UAEjF3oG,KAAKwiH,gCAELxiH,KAAKokC,OAAOsvB,OAAQ,EAAA+lD,YAAA,SAAWz5G,KAAKyiH,0BAA2BziH,KAAKokC,OAAOsvB,OAG3E1zD,KAAK0iH,0DAQL,OAAQ1iH,KAAKyqG,aACT,KAAKxE,mBAAAc,aAAa2D,MAQlB,KAAKzE,mBAAAc,aAAa4D,KAQlB,KAAK1E,mBAAAc,aAAa8P,QAMd,MAEJ,KAAK5Q,mBAAAc,aAAaC,QACdhnG,KAAKokC,OAAOukE,SAAW3oG,KAAK2oG,SAExB3oG,KAAK0zD,OAAS1zD,KAAKm4G,MAAMzkD,MAAM6Y,MAC/BvsE,KAAKokC,OAAOukE,SAAW3oG,KAAKm4G,MAAMoF,SAGtCv9G,KAAKo8G,cAAgBp8G,KAAKmoG,QAC1BnoG,KAAKokC,OAAOsvB,MAAQ1zD,KAAKm4G,MAAMzkD,MAAM6Y,IAEjCvsE,KAAKqrG,IAAIlD,UAAYpP,iBAAA2K,gBACrBj3E,QAAQ4tB,KAAR,GAAA7oC,OAAgBxR,KAAKq5F,SAArB,gDAGJ,MAGJ,KAAK4M,mBAAAc,aAAa4b,MAGlB,KAAK1c,mBAAAc,aAAa6b,OAGlB,KAAK3c,mBAAAc,aAAasX,QAGlB,KAAKpY,mBAAAc,aAAayX,SACd,MAEJ,KAAKvY,mBAAAc,aAAa8b,QACV7iH,KAAK2oG,UAAY3oG,KAAKqrG,IAAI0U,UAAUjR,YACpC9uG,KAAK2oG,SAAW3oG,KAAKqrG,IAAI0U,UAAUjR,UACnC9uG,KAAKokC,OAAOsvB,MAAQ,GAW5B1zD,KAAKugH,eACLvgH,KAAKokC,OAAOukE,SAAW51E,KAAKw5C,IAAI,EAAGvsE,KAAKokC,OAAOukE,WAK/C3oG,KAAK2oG,SAAW,MAChB3oG,KAAKokC,OAAOsvB,MAAQ3gC,KAAKw5C,IAAIvsE,KAAKokC,OAAOsvB,MAAO26B,kBAAA2xB,kBAAkB8C,2BAGlE9iH,KAAKokC,OAAOukE,SAAW3oG,KAAKm4G,MAAMoF,UAClCv9G,KAAKokC,OAAOukE,SAAW3oG,KAAKm4G,MAAMoF,SAGlCv9G,KAAKokC,OAAOsvB,MAAQ1zD,KAAKm4G,MAAMzkD,MAAM1G,MACrChtD,KAAKokC,OAAOsvB,MAAQ1zD,KAAKm4G,MAAMzkD,MAAM1G,KAGrChtD,KAAKokC,OAAOsvB,MAAQ1zD,KAAKm4G,MAAMzkD,MAAM6Y,KAAOvsE,KAAKgtG,eACjDhtG,KAAKokC,OAAOsvB,MAAQ1zD,KAAKm4G,MAAMzkD,MAAM6Y,4CAW9Bw2C,OACX/iH,KAAKoqG,IAAIwM,eAAemM,mDAUxB,IAAM9Y,YAAcjqG,KAAKoqG,IAAIU,qBAE7B,OAAQ9qG,KAAKyqG,aACT,KAAKxE,mBAAAc,aAAa4D,KACEvc,YAAA,QAAW4gB,qBAAuBhvG,KAAK46G,WAEzC56G,KAAK66G,YACf76G,KAAK42G,eAAe3Q,mBAAAc,aAAa8P,SACjC72G,KAAK02G,aAAazM,cAGtB,MAGJ,KAAKhE,mBAAAc,aAAa8P,QACd,IAAMmM,oBAAsBhjH,KAAKoqG,IAAIU,qBAAqB0V,sBAAsBxgH,KAAKgW,IAErF,GAAIhW,KAAK82G,gCAAkCkM,oBAAqB,CAC5D,IAAMC,cAAgBjjH,KAAKoqG,IAAIU,qBAAqBmX,0BAGpD,KAFmD,OAAlBgB,eAO7B,IAJuB,EAAA5c,gBAAA6c,OAAMljH,KAAKmjH,mBAAmBF,gBAC5BjjH,KAAKm4G,MAAMiL,4CAA4CH,cAAc9K,OAC7C,KAEH8K,cAAc9T,aACxD,MAIRnvG,KAAKoqG,IAAIU,qBAAqBsC,wBAAwBptG,KAAKgW,IAC3DhW,KAAKqtG,QAAQrtG,KAAKoqG,IAAIU,sBAG1B,MAEJ,KAAK7E,mBAAAc,aAAaC,QACThnG,KAAK2oG,SAAWsB,YAAY6E,UAAa7I,mBAAAqZ,YAAY+D,wBACtDrjH,KAAKgoG,MAAMsb,uCACXtjH,KAAK42G,eAAe3Q,mBAAAc,aAAa4b,QAGrC,MAEJ,KAAK1c,mBAAAc,aAAa4b,MACV3iH,KAAK2oG,WAAa3oG,KAAKoqG,IAAIkS,oBAC3Bt8G,KAAK42G,eAAe3Q,mBAAAc,aAAa6b,QAGrC,MAEJ,KAAK3c,mBAAAc,aAAa6b,OACV5iH,KAAK2oG,SAAW3oG,KAAKoqG,IAAIkS,oBACzBt8G,KAAK42G,eAAe3Q,mBAAAc,aAAasX,SAGrC,MAEJ,KAAKpY,mBAAAc,aAAasX,QACVr+G,KAAKgoG,MAAMQ,sBAAwBxoG,KAAKowG,0BACxCpwG,KAAK42G,eAAe3Q,mBAAAc,aAAayX,UAE5Bx+G,KAAKg7G,WACN7sB,UAAA,QAASlsC,QAAQssC,YAAA6qB,eAAeoF,SAAUx+G,OAIlD,MAEJ,KAAKimG,mBAAAc,aAAayX,SACd,IAAKx+G,KAAKujH,YACN,MAGJ,IAAKvjH,KAAKwjH,2BAA4B,CAClCxjH,KAAKyjH,gBAEL,MAGJzjH,KAAK42G,eAAe3Q,mBAAAc,aAAa8b,SAE5B7iH,KAAKg7G,WACN7sB,UAAA,QAASlsC,QAAQssC,YAAA6qB,eAAesK,eAAgB1jH,KAAMA,KAAKoqG,IAAIC,oBAGnE,MAGJ,KAAKpE,mBAAAc,aAAa8b,mFAgBtB,IAAM5Y,YAAcjqG,KAAKoqG,IAAIC,mBAEvBsZ,mBADS,EAAAxJ,YAAAyJ,WAAU5jH,KAAMiqG,YAAYpO,iBAAkBoO,YAAY6C,OACxC,GAGjC,OAF2B7C,YAAY4Z,sBAAsBF,+EAe7BG,oBAChC,IAAMC,WAAalxB,mBAAA,QAAkBkV,cAAcic,wBAAwBhkH,KAAK2oG,UAE1Esb,gBAAkBH,oBADN,EAAAlW,QAAAsW,SAAQH,YAI1B,OAAOD,mBAFW/wF,KAAKoxF,MAAM,EAAAvW,QAAAE,MAAKiW,aAAc,EAAAlrB,MAAA+nB,KAAIqD,iBAAoBjkH,KAAKy6G,sEAcjDtS,SAC5B,IAAMic,eAAgB,EAAAxW,QAAAyW,SAAO,EAAAzW,QAAA0W,wBAAuBnc,SAAUnoG,KAAKy6G,cAC7DsJ,WAAalxB,mBAAA,QAAkBkV,cAAcic,wBAAwBhkH,KAAK2oG,UAC1Emb,oBAAqB,EAAAlW,QAAAsW,UAAQ,EAAAtW,QAAA2W,MAAKH,cAAeL,aAEvD,OAAO,EAAA7d,QAAAuD,mBAAkBqa,4EAYzB,GAAI9jH,KAAKqrG,IAAImZ,gBAAkBxe,sBAAA6F,SAAS4Y,UAAUC,GAIlD,GAAI1kH,KAAKyqG,cAAgBxE,mBAAAc,aAAa8b,QAMtC,OAAQ7iH,KAAKqrG,IAAIO,aACb,KAAK5F,sBAAA6F,SAASC,QAAQsW,IAClBpiH,KAAKo8G,cAAgBp8G,KAAKmoG,QAE1B,MAGJ,KAAKnC,sBAAA6F,SAASC,QAAQC,KAClB/rG,KAAKo8G,cAAgBp8G,KAAKqrG,IAAIlD,QAE9B,MAGJ,KAAKnC,sBAAA6F,SAASC,QAAQ6Y,KAClB3kH,KAAK4kH,kBAAoB5kH,KAAK6kH,oCAE9B,MAGJ,KAAK7e,sBAAA6F,SAASC,QAAQgZ,QAClB9kH,KAAK4kH,kBAAoB5kH,KAAK+kH,6CAE9B,MAGJ,QACIt4F,QAAQ4tB,KAAK,iEAAA,iBAAA7oC,OACQxR,KAAKqrG,IAAIO,YADjB,WA/BjB5rG,KAAK4kH,kBAAoB5kH,KAAKglH,+FA4ClC,GAAIhlH,KAAKqrG,IAAImZ,gBAAkBxe,sBAAA6F,SAAS4Y,UAAUC,GAAlD,CAIA,GAAI1kH,KAAKyqG,cAAgBxE,mBAAAc,aAAa8b,QAClC,OAAO7iH,KAAKilH,uCAGhB,OAAQjlH,KAAKqrG,IAAIY,WACb,KAAKjG,sBAAA6F,SAASK,MAAMkW,IAChB,OAAOpiH,KAAKklH,qBAAqBllH,KAAK0zD,OAE1C,KAAKsyC,sBAAA6F,SAASK,MAAMH,KAChB,OAAO/rG,KAAKklH,qBAAqBllH,KAAKqrG,IAAI33C,OAM9C,KAAKsyC,sBAAA6F,SAASK,MAAMiZ,GAChB,OAAOnlH,KAAKklH,qBAAqBllH,KAAKm4G,MAAMzkD,MAAM1G,KAEtD,KAAKg5C,sBAAA6F,SAASK,MAAMkZ,KAChB,IAAMC,UAAYrlH,KAAKslH,8BAEvB,OAAOtlH,KAAKklH,qBAAqBG,WAGrC,QAGI,OAFA54F,QAAQ4tB,KAAK,kFAAA,aAAA7oC,OACIxR,KAAKqrG,IAAIrF,sBAAAuf,cAAcrZ,OAD3B,MAENlsG,KAAKklH,qBAAqBllH,KAAK0zD,sDAa7BA,OACjB,OAAI1zD,KAAK2oG,SAAW,IACT51E,KAAKw5C,IAAI7Y,MAAO26B,kBAAA2xB,kBAAkB8C,0BAGtCpvD,2DAWP,GAAI1zD,KAAKqrG,IAAImZ,gBAAkBxe,sBAAA6F,SAAS4Y,UAAUC,GAAlD,CAIA,GAAI1kH,KAAKyqG,cAAgBxE,mBAAAc,aAAa8b,QAClC,OAAO7iH,KAAKwlH,0CAGhB,OAAQxlH,KAAKqrG,IAAI6W,cACb,KAAKlc,sBAAA6F,SAASsW,SAASC,IACnB,OAAOpiH,KAAK2oG,SAEhB,KAAK3C,sBAAA6F,SAASsW,SAASpW,KACnB,OAAO/rG,KAAKqrG,IAAI1C,SAEpB,KAAK3C,sBAAA6F,SAASsW,SAAS3D,SACnB,OAAOx+G,KAAKylH,iDAUhB,KAAKzf,sBAAA6F,SAASsW,SAASiD,KACnB,OAAOplH,KAAK0lH,iCAGhB,QACIj5F,QAAQ4tB,KAAK,4EAAA,8CAAA7oC,OACqCxR,KAAKqrG,IAAIrF,sBAAAuf,cAAcpD,UAD5D,iFAsBrB,IAAKniH,KAAKowG,wBACN,OAAOpwG,KAAKqrG,IAAI1C,SAIpB,IAAMkX,mBAAqB7/G,KAAKy/G,iDAGhC,OAFyB1sF,KAAKw5C,IAAIvsE,KAAKqrG,IAAI1C,SAAUkX,yFAYZ,IAAA8F,UAEX3lH,KAAKqrG,IAA3Bua,OAFiCD,UAEjCC,OAAQ7F,UAFyB4F,UAEzB5F,UACV8F,cAAe,EAAA1L,YAAAyJ,WAAU5jH,KAAM+/G,UAAUlkB,iBAAkB+pB,QAC3DE,6BAA8B,EAAAzf,gBAAA0f,IAAGF,aAAa,IAC9CG,mBAAoB,EAAA9f,QAAAwK,cAAakV,OAAQ5lH,KAAKmoG,SAE9C8d,uBAAyBL,OADI5lH,KAAK2kG,cAAcuhB,kBAAkBnG,WAElEoG,mBAAoB,EAAAttB,MAAAoV,KAAI+X,mBAAqB/f,mBAAAqZ,YAAY8G,UAGzDC,0BADgBrmH,KAAK0zD,OAASyyD,kBAAoBptB,iBAAAimB,KAAKsH,sBACX,EAAAztB,MAAAoV,KAAI+X,mBAChDO,oBAAsBT,6BAA8B,EAAAjtB,MAAA+nB,KAAIoF,mBAExDQ,uBAAgD,EAAtBD,qBAC5BA,qBAAuBF,0BAFL,GAGhBI,aAAc,EAAA5tB,MAAAoV,KAAIgY,yBAA0B,EAAA5f,gBAAAqD,kBAAiB,KAEnE,IAAK8c,yBAA2BC,YAC5B,OAAOzmH,KAAKqrG,IAAIlD,QAIpB,IACIue,gBAD2B,GACVT,uBACfU,uBAAwB,EAAAtgB,gBAAAqD,kBAAiB,IACzCkd,qBAAsB,EAAA/tB,MAAAoV,KAAI6X,8BAC5B7f,mBAAAqZ,YAAYuH,8DAGhB,GAAIJ,aAAeG,oBAGf,OAFA5mH,KAAKokC,OAAOmkE,KAAO,KAEZqd,OAASc,eAIpB,IAAMI,iBAAmBlB,QADzBc,gBAAiB,EAAA7tB,MAAAkuB,QAAOL,gBAAiBC,sBAAuBA,wBAIhE,OAAI3mH,KAAKqrG,IAAIlD,QAAUnoG,KAAKqrG,IAAIua,OACP7yF,KAAKi6B,IAAI85D,iBAAkB9mH,KAAKqrG,IAAIlD,SAKzDnoG,KAAKqrG,IAAIlD,QAAUnoG,KAAKqrG,IAAIua,OACP7yF,KAAKw5C,IAAIu6C,iBAAkB9mH,KAAKqrG,IAAIlD,cAD7D,8DAcA,IAAKnoG,KAAKoqG,IAAI4c,gBACV,OAAO,IAAIrqH,MAAM,qEAGrB,GAAIqD,KAAKoqG,IAAI4c,gBAAgBC,iBACzB,OAAOjnH,KAAKoqG,IAAI4c,gBAAgBE,YAGpC,GAAIlnH,KAAKoqG,IAAI4c,gBAAgBG,eACzB,OAAOnnH,KAAKonH,gCAGhB,IAAMC,iBAAmBrnH,KAAKoqG,IAAI4c,gBAAgBriB,cAC5C2iB,mBAAqBtnH,KAAK2kG,cAAcka,mBAAmBwI,kBAC3DE,sBAAwBvnH,KAAK2kG,cAAcuhB,kBAAkBmB,kBAE7DG,qBAAuBF,oBADE,EAAAnN,YAAAsN,iCAAgCznH,KAAMqnH,kBAE/DK,oBAAsBJ,mBAAqBrhB,mBAAAqZ,YAAYqI,qCAEvDC,eADwBN,mBAAqBrhB,mBAAAqZ,YAAYuI,wCACfL,qBAC5CM,oBAAsBJ,oBAM1B,GAJK1nH,KAAKoqG,IAAI4c,gBAAgBe,oBAC1BD,oBAAsBJ,qBAAuBE,gBAG7CE,oBAAqB,CACrB,IAAK9nH,KAAKoqG,IAAI4d,kBAIV,OAFAhoH,KAAKgoG,MAAM4C,uBAAuB5qG,MAE3BA,KAAKgxG,YAGhBhxG,KAAKoqG,IAAI6d,qBARY,IAUbjB,gBAAoBhnH,KAAKoqG,IAAzB4c,gBAER,GAAIA,gBAAgBC,iBAChB,OAAOD,gBAAgBE,YAG3B,IAAMgB,qBAAuBlB,gBAAgBriB,cAO7C,OALI,EAAA3W,QAAA,SAAOk6B,uBACPz7F,QAAQ4tB,KAAK,sDAAA,IAAA7oC,OACLw1G,gBAAgBrmH,KADX,oBAAA6Q,OACkC02G,uBAG5CloH,KAAK2kG,cAAcuhB,kBAAkBgC,sBAGhD,OAAOX,8EASqB,IACpBP,gBAAoBhnH,KAAKoqG,IAAzB4c,gBACAzd,eAAmByd,gBAAnBzd,eACF4e,yBAA2BnB,gBAAgBnrB,iBAC3CusB,kBAAmB,EAAAxa,QAAAsW,UAAQ,EAAAtW,QAAAG,MAAKoa,yBAA0BnoH,KAAK67F,wBAExB,IAAlC0N,eAAeC,iBAEtBD,eAAeC,eAAiB4e,kBARR,IAWpB5e,eAA8BD,eAA9BC,eAAgBN,UAAcK,eAAdL,UAClBmf,iBAAkB,EAAAniB,QAAAuD,mBAAkBD,eAAiBz2E,KAAK89B,IAC1DmgD,aAAc,EAAA9K,QAAAuD,mBAAkBzpG,KAAKgxG,aACrCxrF,QAAS,EAAA20F,YAAAyJ,WAAU5jH,KAAMmoH,yBAA0B3e,gBACnDuF,SAAW3gB,YAAA,QAAW4gB,qBACtBsZ,UAAY9iG,OAAO,GAAK,GAAKA,OAAO,GAAK,EACzC+iG,WAAahf,eAAe32C,QAAUmmC,iBAAA2K,eACtC8kB,eAAiBD,YAAcxZ,SAAWxF,eAAe32C,MAM/D,GAJI01D,YAActoH,KAAK+6G,iCACnB/6G,KAAK+6G,gCAAiC,IAGrC/6G,KAAK+6G,+BACN,OAAOqN,iBAGX,IAAIK,kBAAoBJ,gBAExB,IAAI,EAAAxvB,MAAAoV,KAAI+C,YAAcqX,iBAAmBpiB,mBAAAqZ,YAAYoJ,sDAAwDH,WAAY,CACrH,IAAII,yBAEJ,IAAkC,IAA9Bzf,UAAU18F,QAAQ,OAElBm8G,yBADiCzf,UAAUhkG,QAAQ,MAAO,IACJ6zF,iBAAAimB,KAAK4J,2BAI3DD,yBADwBzf,UAAUhkG,QAAQ,KAAM,IACFlF,KAAKw6G,YAAezhB,iBAAAimB,KAAKC,oBAG3E+H,gBAAgB6B,aAAa9Z,SAAW4Z,0BAc5C,OAXIH,iBACAC,kBAAoBL,iBAEhBE,YACAtB,gBAAgB8B,iBAChBL,kBAAoBJ,kBAI5BroH,KAAKokC,OAAOmkE,KAAOgB,eAAeN,cAE3Bwf,oFAWP,IAAMxe,YAAcjqG,KAAKoqG,IAAIC,mBAI7B,OAAyB,GAHV,EAAA8P,YAAAyJ,WAAU5jH,KAAMiqG,YAAYpO,iBAAkBoO,YAAY6C,OACvC,GAGvB9sG,KAAKylH,iDAGTxb,YAAY6E,mEAWnB,IAAMia,wBAA0B/oH,KAAKoqG,IAAI4e,iDACnCC,wBAA0BjpH,KAAKoqG,IAAI8e,iDACnCC,wBAAyB,EAAAn7B,QAAA,SAAO+6B,yBAChCK,wBAAyB,EAAAp7B,QAAA,SAAOi7B,yBAEtC,KAAIjpH,KAAKqrG,IAAI1C,SAAW3oG,KAAK2oG,UA0CtB,CAEH,IAAKwgB,uBAAyBnpH,KAAKqrG,IAAI1C,SAAWogB,wBAAwBM,gBAEtE,OAAOrpH,KAAKqrG,IAAI1C,SAJjB,IAOK2gB,iBAAoBP,wBAApBM,gBAER,GAAIrpH,KAAK2oG,SAAW2gB,iBAEhB,OAAOtpH,KAAKupH,sCAAsCR,wBAAyBO,kBAG/E,GAAIF,sBAAuB,CAAA,IACfI,iBAAoBP,wBAApBQ,gBAER,GAAIzpH,KAAKqrG,IAAI1C,SAAW6gB,iBAEpB,OAAOxpH,KAAKqrG,IAAI1C,SAGpB,GAAI3oG,KAAK2oG,SAAW6gB,iBAAiB,CAEjC,GAAIF,iBAAkBE,iBAOlB,GAJsBxpH,KAAK0pH,mBACvB1pH,KAAKoqG,IAAIgO,UAAW6Q,wBAAyBF,yBAG/BpoH,OAASooH,wBAAwBpoH,KAE/C,OAAO2oH,iBAIf,OAAOtpH,KAAK2pH,oCAAoCV,0BAIxD,OAAOK,iBAjFP,IAAKF,uBAAyBH,wBAAwBQ,gBAAkBzpH,KAAKqrG,IAAI1C,SAE7E,OAAO3oG,KAAKqrG,IAAI1C,SAJe,IAO3B8gB,gBAAoBR,wBAApBQ,gBAER,GAAIzpH,KAAK2oG,SAAW8gB,gBAEhB,OAAOzpH,KAAK2pH,oCAAoCV,yBAGpD,GAAIE,sBAAuB,CAAA,IACfE,gBAAoBN,wBAApBM,gBAER,GAAIrpH,KAAKqrG,IAAI1C,SAAW0gB,gBAEpB,OAAOrpH,KAAKqrG,IAAI1C,SAGpB,GAAI3oG,KAAK2oG,SAAW0gB,gBAAiB,CAEjC,GAAsBA,gBAAlBI,gBASA,GANsBzpH,KAAK0pH,mBACvB1pH,KAAKoqG,IAAIgO,UACT6Q,wBACAF,yBAGcpoH,OAASsoH,wBAAwBtoH,KAE/C,OAAOX,KAAKupH,sCAAsCN,wBAAyBQ,iBAInF,OAAOzpH,KAAKupH,sCAAsCR,wBAAyBM,8DA0DxEjR,UAAWwR,UAAWC,WAIrC,OAHiB,EAAAnQ,YAAA,SAAWtB,UAAW,SAAC0R,UAAD,OAAcA,SAASnpH,OAASipH,UAAUjpH,QAChE,EAAA+4G,YAAA,SAAWtB,UAAW,SAAC0R,UAAD,OAAcA,SAASnpH,OAASkpH,UAAUlpH,OAEpDipH,UAAYC,sEAWTE,wCAGhC,OAFgCA,uCAAuCN,8EAcrChL,cAAeS,gBACjD,GAAKl/G,KAAKgqH,qCAAqCvL,cAAeS,gBAI9D,OAAOA,oFAWP,IAAMjV,YAAcjqG,KAAKoqG,IAAIC,mBACvB7kF,QAAS,EAAA20F,YAAAyJ,WAAU5jH,KAAMiqG,YAAYpO,iBAAkBoO,YAAY6C,OAGzE,OAAyB,GAFE,EAAAzG,gBAAA0f,IAAGvgG,OAAO,IAGExlB,KAAK2kG,cAAcuhB,kBAAkBjc,YAAYtF,eAKjFsF,YAAY6C,qEAWnB,IAAImd,WAAajqH,KAAK0zD,MAChBu2C,YAAcjqG,KAAKoqG,IAAIC,mBACvB7kF,QAAS,EAAA20F,YAAAyJ,WAAU5jH,KAAMiqG,YAAYpO,iBAAkBoO,YAAY6C,OACnEod,oBAAqB,EAAA7jB,gBAAA0f,IAAGvgG,OAAO,IAC/B2kG,wBAA0BlkB,mBAAAqZ,YAAY8K,6BAA+BrxB,iBAAAimB,KAAKsH,oBAC1E+D,uBAAyBrqH,KAAKm4G,MAAMzkD,MAAM42D,QAAUH,wBAE1D,OAAID,oBAAsB,GAAKlqH,KAAKmvG,aACzB,GAGPnvG,KAAKqrG,IAAIY,YAAcjG,sBAAA6F,SAASK,MAAMH,OACtCke,WAAajqH,KAAKqrG,IAAI33C,QAGR,EAAAmlC,MAAA0xB,yBACdF,uBACAH,mBACA77B,kBAAA2xB,kBAAkBC,+BAClBjgH,KAAKm4G,MAAMzkD,MAAM42D,QACjBL,mEAcJ,IAAMO,yBAA2BxqH,KAAKoqG,IAAIqgB,0CAA0CzqH,KAAK0zD,OACnFg3D,yBAA2B1qH,KAAKoqG,IAAIugB,0CAA0C3qH,KAAK0zD,OACnFk3D,kBAAmB,EAAA58B,QAAA,SAAOw8B,0BAC1BK,kBAAmB,EAAA78B,QAAA,SAAO08B,0BAEhC,IAAKE,kBAAoBC,gBACrB,OAAO7qH,KAAKqrG,IAAI33C,MAGpB,GAAIk3D,iBAAmBC,gBAAiB,CAAA,IAC5BzS,UAAcp4G,KAAKoqG,IAAnBgO,UAIR,OAHmB,EAAAsB,YAAA,SAAWtB,UAAW,SAAC0R,UAAD,OAAcA,SAASnpH,OAAS6pH,yBAAyB7pH,QAC/E,EAAA+4G,YAAA,SAAWtB,UAAW,SAAC0R,UAAD,OAAcA,SAASnpH,OAAS+pH,yBAAyB/pH,OAGvFX,KAAK8qH,wCAAwCN,0BAGjDxqH,KAAK+qH,wCAAwCL,0BAGxD,OAAIE,gBACO5qH,KAAK8qH,wCAAwCN,0BAGpDK,gBACO7qH,KAAK+qH,wCAAwCL,+BADxD,kEAaoCM,qCACpC,IAAMC,qBAAuBD,oCAAoCE,aAEjE,OAAOn4F,KAAKw5C,IAAI0+C,qBAAsBjrH,KAAKqrG,IAAI33C,uEAWXy3D,qCACpC,IAAMC,qBAAuBD,oCAAoCxM,aAEjE,GAAK3+G,KAAKqrH,0CAA0CF,qCAIpD,OAAOp4F,KAAKw5C,IAAI6+C,qBAAsBprH,KAAKqrG,IAAI33C,+CAS/C,IAAI1zD,KAAK01G,YAAT,CAIA,GAAI11G,KAAKwvG,IAKL,OAHAxvG,KAAK2oG,UAAY,GAAKva,YAAA,QAAWk9B,2CACjCtrH,KAAK0zD,OAAS,KAKlB1zD,KAAKurH,4BACLvrH,KAAKwrH,wBAEDxrH,KAAKmvG,eACLnvG,KAAKwrG,MAAQ,GAIjBxrG,KAAKyrH,qBAEL,IAAMC,eAAiBt9B,YAAA,QAAW4gB,qBAAuB5b,gBAAA,QAAeu4B,eAU5B,IAAxC3rH,KAAKi7G,wBAAwBj+G,OAC7BgD,KAAKi7G,wBAAwBz3G,KAAK,CAC9BxD,KAAK2kG,cAAc9I,iBAAiB,GACpC77F,KAAK2kG,cAAc9I,iBAAiB,GACpC6vB,kBAGG,EAAA7yB,MAAAoV,KAAIyd,eAAiB1rH,KAAKi7G,wBAAwBj7G,KAAKi7G,wBAAwBj+G,OAAS,GAAG,IAClG,EAAIo2F,gBAAA,QAAeu4B,gBAEnB3rH,KAAKi7G,wBAAwBz3G,KAAK,CAC9BxD,KAAK2kG,cAAc9I,iBAAiB,GACpC77F,KAAK2kG,cAAc9I,iBAAiB,GACpC6vB,iBAIR1rH,KAAK4rH,2BAEL5rH,KAAKg8F,UAAW,EAAA4R,QAAAE,MAAK9tG,KAAK2kG,cAAc9I,kBACxC77F,KAAKopG,QAAS,EAAAlD,QAAAuD,oBAAkB,EAAAmE,QAAAsW,SAAQlkH,KAAK2kG,cAAc9I,wEAU3D,GAAI77F,KAAKmvG,cAAgBnvG,KAAKmoG,UAAYnoG,KAAKo8G,cAC3Cp8G,KAAKokC,OAAOmkE,KAAO,SADvB,CAMA,IAAMsjB,eAAiBz9B,YAAA,QAAWk9B,sCAC5BQ,YAAa,EAAA5lB,QAAAwK,cAAa1wG,KAAKo8G,cAAep8G,KAAKmoG,SACnD4jB,aAAe9lB,mBAAAqZ,YAAY8G,UAAYyF,gBAGzC,EAAAhzB,MAAAoV,KAAI6d,aAAeC,aACnB/rH,KAAKmoG,QAAUnoG,KAAKo8G,cACbp8G,KAAKokC,OAAOmkE,KACM,SAArBvoG,KAAKokC,OAAOmkE,KACZvoG,KAAKmoG,SAAU,EAAAjC,QAAAuD,mBAAkBzpG,KAAKmoG,QAAU4jB,cACpB,UAArB/rH,KAAKokC,OAAOmkE,OACnBvoG,KAAKmoG,SAAU,EAAAjC,QAAAuD,mBAAkBzpG,KAAKmoG,QAAU4jB,eAE7CD,YAAc,EACrB9rH,KAAKmoG,SAAU,EAAAjC,QAAAuD,mBAAkBzpG,KAAKmoG,QAAU4jB,cAC5B,EAAbD,aACP9rH,KAAKmoG,SAAU,EAAAjC,QAAAuD,mBAAkBzpG,KAAKmoG,QAAU4jB,gEAYpD/rH,KAAKwrG,MAAQ,EAETxrG,KAAKokC,OAAOukE,SAAW3oG,KAAK2oG,SAC5B3oG,KAAKgsH,2BACEhsH,KAAKokC,OAAOukE,SAAW3oG,KAAK2oG,UACnC3oG,KAAKisH,8EAWT,IAAMC,cAAgBlsH,KAAK2oG,SAAW3oG,KAAKokC,OAAOukE,SAC9CwjB,YAAcnsH,KAAKm4G,MAAMkF,KAAKgC,QAAUpZ,mBAAAqZ,YAAYC,wBAEpDv/G,KAAKqrG,IAAI+gB,8BAAgCpsH,KAAKowG,2BAC9C+b,YAAcnsH,KAAKm4G,MAAMkF,KAAKgC,SAGlC,IACMgN,cADgBF,YAAcpzB,iBAAAimB,KAAKsN,sBACHl+B,YAAA,QAAWk9B,uCAE7C,EAAAzyB,MAAAoV,KAAIie,eAAiBG,eACrBrsH,KAAK2oG,SAAW3oG,KAAKokC,OAAOukE,SAC5B3oG,KAAKqrG,IAAI+gB,8BAA+B,GAExCpsH,KAAK2oG,UAAY0jB,cAGrBrsH,KAAKwrG,OAAS,qDAUd,IAAM0gB,cAAgBlsH,KAAK2oG,SAAW3oG,KAAKokC,OAAOukE,SAC9C4jB,UAAYvsH,KAAKwsH,eAAiBvmB,mBAAAqZ,YAAYmN,sBAE9CzsH,KAAKqrG,IAAI+gB,8BAAgCpsH,KAAK0sH,eAC9CH,UAAYvsH,KAAKm4G,MAAMkF,KAAKC,OAGhC,IACMqP,YADgBJ,UAAYxzB,iBAAAimB,KAAKsN,sBACHl+B,YAAA,QAAWk9B,uCAE3C,EAAAzyB,MAAAoV,KAAIie,gBAAiB,EAAArzB,MAAAoV,KAAI0e,cACzB3sH,KAAK2oG,SAAW3oG,KAAKokC,OAAOukE,SAC5B3oG,KAAKqrG,IAAI+gB,8BAA+B,GAExCpsH,KAAK2oG,UAAYgkB,YAGrB3sH,KAAKwrG,MAAQ,+CAWb,IAAIohB,YAAc,EACZC,wCAA0C7sH,KAAK0zD,MAAQ1zD,KAAKokC,OAAOsvB,MAEzB,IAA5Cm5D,0CAIA7sH,KAAK0zD,MAAQ1zD,KAAKokC,OAAOsvB,OACzBk5D,aAAe5sH,KAAKm4G,MAAMkF,KAAK0B,WAAa3wB,YAAA,QAAWk9B,sCAAwC,EAE3FtrH,KAAKmvG,eACLyd,aAAe3mB,mBAAAqZ,YAAYwN,4CAExB9sH,KAAK0zD,MAAQ1zD,KAAKokC,OAAOsvB,QAChCk5D,YAAc5sH,KAAKm4G,MAAMkF,KAAK0P,WAAa3+B,YAAA,QAAWk9B,sCAAwC,EAC9FsB,cAAe,EAAA/zB,MAAA0xB,yBAAwB,EAAGvqH,KAAK0zD,MAAO1zD,KAAKm4G,MAAMzkD,MAAM6Y,IAAK,EAAG,IAGnFvsE,KAAK0zD,OAASk5D,aAEV,EAAA/zB,MAAAoV,KAAI2e,cAAe,EAAA/zB,MAAAoV,KAAI4e,2CACvB7sH,KAAK0zD,MAAQ1zD,KAAKokC,OAAOsvB,2DAe7B,IAEM+mD,aAFoBz6G,KAAK0zD,OAEW,EADP1zD,KAAK2oG,SAAWyR,sBAAA4S,YAAYC,oCAEzDC,wBAAyB,EAAAtf,QAAAyW,SAAO,EAAAzW,QAAA0W,wBAAuBtkH,KAAKmoG,SAAUsS,cAGtEsJ,WAAalxB,mBAAA,QAAkBkV,cAAcic,wBAAwBhkH,KAAK2oG,UAC1EwkB,kBAAmB,EAAAvf,QAAA2W,MAAK2I,uBAAwBnJ,YAChDvJ,aAAc,EAAA5M,QAAAE,MAAKqf,kBACrBnc,aAAc,EAAApD,QAAAsW,SAAQiJ,kBAGtBntH,KAAKmvG,eAGL6B,YAAchxG,KAAK4kH,mBAIvB,IACMwI,oBAAsB5S,aADPpsB,YAAA,QAAWk9B,sCAAwCvyB,iBAAAimB,KAAKsH,qBAG7EtmH,KAAK2kG,cAAc0oB,mCAAmCrc,YAAaoc,qBAEnEptH,KAAKgxG,YAAcA,YACnBhxG,KAAKw6G,YAAcA,YACnBx6G,KAAKy6G,aAAeA,qDASpB,IAAIyB,KACAvB,QACA59C,OACAuwD,WAGJ,IAAIttH,KAAK01G,YAAT,CAQA,GAJAiF,SAAU,EAIN36G,KAAK2kG,cAAe,CACpB,IAAK,IAAItoG,EAAI,EAAGA,EAAI2D,KAAK06G,WAAWxqG,KAAKlT,OAAQX,KAa7C6/G,KAAOl8G,KAAK06G,WAAWxqG,KAAK7T,IAGnBuJ,KAAKkmD,OAAS9rD,KAAK2oG,UACxBuT,KAAKj3F,MAAQ,KACbi3F,KAAKC,QAAS,IAKdD,KAAKj3F,QACLi3F,KAAKj3F,OAASjlB,KAAKw6G,eAIlB0B,KAAKj3F,OAASi3F,KAAKj3F,OAAS,MAC7BqoG,YAAa,EAAA1f,QAAA2f,eAAcvtH,KAAK2kG,cAAc9I,iBAAkBqgB,KAAKt2G,KAAK4nH,SAGvDtR,KAAKC,QACpB/oB,gBAAA,QAAeic,iBAAiBjc,gBAAAkc,YAAYme,eAC5CvR,KAAKj3F,MAAqB,KAAbjlB,KAAK0zD,MAAe,IAAM,GAAK,KAK5CwoD,KAAKj3F,MAAQ8N,KAAKi6B,IACD,KAAbhtD,KAAK0zD,MAAe,GAAK,IAAO,IAChC,EAAAk6C,QAAA8f,kBAAiB1tH,KAAK2kG,cAAc9I,iBAAkBqgB,KAAKt2G,KAAK4nH,OAIxEtR,KAAKC,OAASmR,cAMtB,EAAA1T,UAAA,SAAS55G,KAAK06G,WAAWxqG,KAAM,SAAC8rG,EAAG3lE,GAC/BskE,QAAUA,SAAWtkE,EAAE8lE,SAI/B,GAAIn8G,KAAK86G,iBAAmB96G,KAAKmvG,aAAc,CAAA,IACnC0M,QAAYhpB,mBAAA,QAAkBlgF,QAA9BkpG,QACF8R,WAAa3tH,KAAK86G,eAAe96G,KAAK87G,eACtC8R,IAAM76F,KAAK06B,KAAKztD,KAAK2oG,SAAU,KAC/BklB,YAAc7tH,KAAK86G,eAAe8S,KAExC,GAAIA,MAAQ5tH,KAAK87G,cAAe,CAC5B,IAAK,IAAMgS,OAAOH,WACdA,WAAWG,KAAOpzF,EAAAA,EAGtB16B,KAAK87G,cAAgB8R,IAGzB,IAAK,IAAM53G,MAAM63G,YAGb,GAFAA,YAAY73G,KAAOhW,KAAKw6G,YAEpBqT,YAAY73G,IAAM,GAAK63G,YAAY73G,MAAQ0kB,EAAAA,EAI3C,GAHAwhF,KAAOL,QAAQ+R,KAAK53G,KACpB+mD,QAAS,EAAA6wC,QAAAmgB,gBAAe/tH,KAAK2kG,cAAc9I,iBAAkBqgB,KAAMlmG,KAExDmmG,QAGP,GAFAn8G,KAAK2oG,SAAW,GAEX3oG,KAAKwvG,IAAK,CACXxvG,KAAKwvG,KAAM,EAGX7b,cAAA,QAAa6N,OAAb,GAAAhwF,OAAuBxR,KAAKq5F,SAA5B,gDADkB,IAElB,EAAAxF,QAAA2T,YACI,CACI,CAAE/lG,KAAM,WAAY+I,QAASxK,MAC7B,CAAEyB,KAAM,OAAQ+I,QAAS,wBAE7BxK,KAAKynG,YAGTrU,gBAAA,QAAeic,iBAAiBjc,gBAAAkc,YAAYC,iBAGhDse,YAAY73G,IAAM+c,KAAKi6B,IAAI,GAAK+P,OAAOi/B,UAMvDh8F,KAAK26G,QAAUA,0CAQf36G,KAAKguH,oBACLhuH,KAAKiuH,eACLjuH,KAAKkuH,gBACLluH,KAAKmuH,qEASGte,SAAUue,qBAClBpuH,KAAKmuG,UAAUigB,oBAAoB/0B,UAAYwW,8DAYtBwe,0BACzB,OAAOA,yBAAyBh1B,YAAYr5F,KAAKmuG,8CAYjD,IAAM6S,MAAQ,EAAC,GAAO,GAEtB,IAAK,IAAM3kH,KAAK2D,KAAKmuG,UAAW,CAC5B,IAAMI,YAAcvuG,KAAKmuG,UAAU9xG,GAAGkyG,cAChCC,aAAexuG,KAAKmuG,UAAU9xG,GAAGmyG,eAKvC,GAHAwS,MAAM,GAAMA,MAAM,IAAMzS,YACxByS,MAAM,GAAMA,MAAM,IAAMxS,aAEpBwS,MAAM,IAAMA,MAAM,GAClB,OAAOA,MAIf,OAAOA,6CAQIoN,4BACJpuH,KAAKmuG,UAAUigB,oBAAoB/0B,+EAWtCr5F,KAAKo5F,eACLp5F,KAAKsuH,UAKTtuH,KAAKuuH,iBACLpgC,UAAA,QAASlsC,QAAQssC,YAAA6qB,eAAeoV,cAAexuH,gEAS/C,IAAIA,KAAKg7G,UAAT,CAIA,IAAM5L,iBAAmBpvG,KAAKovG,iBAAiBvc,mBAAA,QAAkBkV,eAE7D/nG,KAAKo5F,iBAAmBgW,mBAI5BpvG,KAAKo5F,eAAiBgW,iBACtBpvG,KAAKyuH,0FAWUC,sBACf,OAAO1uH,KAAK2kG,cAAcka,mBAAmB6P,qBAAqB/pB,4DAWjDgqB,aAAc5kB,cAC/B,GAAI4kB,eAAiB51B,iBAAA2K,eACjB,MAAO,EAAC,EAAO,gCAGnB,GAA4B,iBAAjBirB,aACP,MAAO,EAAC,EAAD,qCAAAn9G,OAA6Cm9G,eAGxD,IAAK3uH,KAAKm4G,MAAMyW,yBAAyBD,cAAe,CACpD,IAAMtmB,SAAW,GAIjB,OAHAA,SAAS5nG,IAAT,sBAAA+Q,OAAqCm9G,aAArC,uBACAtmB,SAASnB,IAAT,sBAAA11F,QAAqC,EAAA40F,gBAAAqF,gBAAekjB,cAApD,uBAEO,EAAC,EAAOtmB,UAGnB,GAAIsmB,aAAe5kB,aAAa8kB,sBAAuB,CACnD,IAAMC,gBAAkB/kB,aAAa8kB,sBAC/BE,WAAW,GAIjB,OAHAA,WAAStuH,IAAT,sBAAA+Q,OAAqCm9G,aAArC,iBAAAn9G,OAAiEs9G,iBACjEC,WAAS7nB,IAAT,sBAAA11F,QAAqC,EAAA40F,gBAAAqF,gBAAekjB,cAApD,iBAAAn9G,QAAiF,EAAA40F,gBAAAqF,gBAAeqjB,kBAEzF,EAAC,EAAOC,YAGnB,MAAO,EAAC,6CAWMhmB,WACd,OAAIA,YAAchQ,iBAAA2K,eACP,EAAC,EAAO,6BAGM,iBAAdqF,UACA,EAAC,EAAD,iCAAAv3F,OAAyCu3F,YAG/C/oG,KAAKm4G,MAAM6W,sBAAsBjmB,WAS/B,EAAC,GAHG,EAAC,EALS,CACbtoG,IAAG,sBAAA+Q,OAAwBu3F,UAAxB,uBACH7B,IAAG,sBAAA11F,QAAwB,EAAA40F,gBAAA4F,gBAAejD,WAAvC,qEAjwEX,IAAI,EAAA/a,QAAA,SAAOhuF,KAAKk7G,gBAAiB,CAC7B,IAAI,EAAAltB,QAAA,SAAOhuF,KAAKm7G,oBACZ,MAAM,IAAIjpF,UAAU,4EAGxB,OAAOlyB,KAAKivH,oCAAoCjvH,KAAKm7G,oBAGzD,OAAOn7G,KAAKk7G,6BAGE/S,SACdnoG,KAAKk7G,eAAiB/S,QACtBnoG,KAAKm7G,mBAAqB,+CAa1B,IAAI,EAAAntB,QAAA,SAAOhuF,KAAKm7G,oBAAqB,CACjC,IAAI,EAAAntB,QAAA,SAAOhuF,KAAKk7G,gBACZ,MAAM,IAAIhpF,UAAU,4EAGxB,OAAOlyB,KAAKkvH,gCAAgClvH,KAAKk7G,gBAGrD,OAAOl7G,KAAKm7G,iCAGMnK,aAClBhxG,KAAKm7G,mBAAqBnK,YAC1BhxG,KAAKk7G,eAAiB,sCAStB,MAAA,GAAA1pG,OAAUxR,KAAKg2G,UAAUz6D,eAAzB/pC,OAAyCxR,KAAKq3G,aAAa97D,mDAW3D,OAAOv7C,KAAKoqG,IAAI+kB,sDAWhB,OAAOnvH,KAAK2kG,cAAc9I,2mCCjmBlC,IAAA2V,OAAAzjB,uBAAAvxF,QAAA,gBACAspG,MAAA/X,uBAAAvxF,QAAA,eACA4yH,iBAAArhC,uBAAAvxF,QAAA,2BACA6yH,6BAAAthC,uBAAAvxF,QAAA,kCACAw1G,gBAAAx1G,QAAA,6BACA41G,oBAAA51G,QAAA,iqCAeqB8yH,2DAMjB,SAAAA,iCAAYp9B,4BAA4B,IAAAj+E,MAGpC,iIAHoC66E,CAAA9uF,KAAAsvH,kCACpCr7G,MAAAs7G,2BAAAvvH,KAAAwvH,gBAAAF,kCAAAvyH,KAAAiD,QAEI,EAAAoyG,oBAAAsB,mBAAkBxhB,4BAClB,MAAM,IAAIhgE,UAAU,8FAAA,4CAAA1gB,OAAAiiG,QACmCvhB,8BALvB,OAkBpCj+E,MAAKw7G,eAAiB,GAEtBx7G,MAAKmvB,KAAK8uD,4BApB0Bj+E,iaANkBm7G,iBAAA,iGAsCrDl9B,4BACDlyF,KAAKyvH,eAAiBzvH,KAAK0vH,sCAAsCx9B,0FAS/BrC,MAClC,OAAO,EAAA2hB,OAAA,SAAMxxG,KAAKyvH,eAAgB,CAAE5/B,KAAMA,KAAKt0C,0EAYjBy6D,UAAWmB,cAAc,IAC/CD,OAAU,EAAAlF,gBAAAiF,2BAA0B,CAACjB,YAArCkB,MACFyY,aAAexY,aAAayY,sBAAsB1Y,OAAO37D,cACzDs0E,oBAAqB,EAAAre,OAAA,SAAMxxG,KAAKyvH,eAAgB,CAAE5/B,KAAM8/B,eAE9D,YAAkC,IAAvBE,oBACPpjG,QAAQ1U,MAAR,0CAAAvG,OAAwDm+G,eAGjD3vH,KAAKu4G,kCAAkCvC,UAAWmB,eAGtD0Y,iFAa2B39B,4BAMlC,OALuB,EAAA4T,MAAA,SAAK5T,2BAA4B,SAAC29B,oBAErD,OAAO,IAAIR,6BAAA,QAA4BQ,2gBC7GnD,QAAAC,iBAAAtzH,QAAA,wDACAu8F,iBAAAv8F,QAAA,gCACA41G,oBAAA51G,QAAA,mCACAypG,mBAAAzpG,QAAA,kCACA6xF,kBAAA7xF,QAAA,6kCAaqBuzH,iDAMjB,SAAAA,4BAAYxY,wBAAwB,IAAAtjG,MAGhC,iIAHgC66E,CAAA9uF,KAAA+vH,6BAChC97G,MAAAs7G,2BAAAvvH,KAAAwvH,gBAAAO,6BAAAhzH,KAAAiD,QAEI,EAAAoyG,oBAAA4d,oBAAmBzY,wBACnB,MAAM,IAAIrlF,UAAU,qFAAA,6CAAA1gB,OAAAiiG,QACoC8D,0BAL5B,OAehCtjG,MAAKtT,KAAO,GASZsT,MAAK47E,KAAO,GAUZ57E,MAAKyoG,oBAAsB,GAS3BzoG,MAAKupG,QAAU,KAOfvpG,MAAKg8G,YAAc,GAOnBh8G,MAAK4jF,SAAW,KAShB5jF,MAAKspG,QAAUxkB,iBAAA2K,eAafzvF,MAAKopG,KAAO,KASZppG,MAAK42F,OAAS,KAad52F,MAAKy/C,MAAQ,KAWbz/C,MAAKi8G,WAAa,KAElBj8G,MAAKmvB,KAAKm0E,wBAlHsBtjG,4ZANiB67G,YAAA,4FAoIhDvY,wBACDv3G,KAAKW,KAAO42G,uBAAuB52G,KACnCX,KAAK6vF,KAAO0nB,uBAAuB1nB,KACnC7vF,KAAKw9G,QAAUjG,uBAAuBiG,QACtCx9G,KAAKiwH,YAAc1Y,uBAAuB0Y,YAC1CjwH,KAAK63F,SAAW0f,uBAAuB1f,SACvC73F,KAAKu9G,QAAUhG,uBAAuBgG,QACtCv9G,KAAKq9G,KAAO9F,uBAAuB8F,KACnCr9G,KAAK6qG,OAAS0M,uBAAuB1M,OACrC7qG,KAAK0zD,MAAQ6jD,uBAAuB7jD,MACpC1zD,KAAKkwH,WAAa3Y,uBAAuB2Y,WAEzClwH,KAAK08G,oBAAsB18G,KAAKmwH,2DAUhCnwH,KAAKW,KAAO,GACZX,KAAK6vF,KAAO,GACZ7vF,KAAK08G,oBAAsB,GAC3B18G,KAAKw9G,QAAU,KACfx9G,KAAKiwH,YAAc,GACnBjwH,KAAK63F,SAAW,KAChB73F,KAAKu9G,QAAUxkB,iBAAA2K,eACf1jG,KAAKq9G,KAAO,KACZr9G,KAAK6qG,OAAS,KACd7qG,KAAK0zD,MAAQ,KACb1zD,KAAKkwH,WAAa,sDAWG,IAAAE,oBAAAl/B,OAAAlxF,KACjBqwH,aAAY,GAAA7+G,OAAMxR,KAAK6vF,KAAX,MAEVygC,IAAG,QAAAF,oBAAGxlG,OAAOrW,OAAO0xF,mBAAAsqB,0BAA0BzjF,KAAK,SAAC0jF,KAAD,OAASA,IAAIC,SAAWv/B,OAAK++B,qBAA7E,IAAAG,oBAAAA,oBAA6F,CAAEM,QAAQ,GAMhH,OAJIJ,IAAII,SACJL,aAAY,GAAA7+G,OAAM8+G,IAAIG,OAAV,KAAAj/G,OAAoBxR,KAAK6vF,KAAzB,OAGTwgC,8DASc1nB,UACrB,OAAOA,UAAY3oG,KAAKu9G,sDASN7pD,OAClB,OAAOA,OAAS1zD,KAAK0zD,MAAM6Y,KAAO7Y,OAAS1zD,KAAK0zD,MAAM1G,6CAStD,OAAOhtD,KAAKiwH,cAAgBhqB,mBAAAsqB,yBAAyBI,MAAMF,QACvDzwH,KAAKiwH,cAAgBhqB,mBAAAsqB,yBAAyBK,MAAMH,2EAWhBI,mBACxC,GAAIA,kBAAkBC,iCAClB,OAAOziC,kBAAA2xB,kBAAkB+Q,wBAAwBC,KAGrD,OAAQhxH,KAAK63F,SAASo5B,KAClB,KAAK,EACD,OAAO5iC,kBAAA2xB,kBAAkB+Q,wBAAwBG,KACrD,KAAK,EACD,OAAO7iC,kBAAA2xB,kBAAkB+Q,wBAAwBI,KACrD,QACI,OAAO9iC,kBAAA2xB,kBAAkB+Q,wBAAwBC,+DAYzD,YAAoC,IAAtBhxH,KAAK63F,SAASo5B,KAA6C,IAAtBjxH,KAAK63F,SAASo5B,kDAU/C,IAAAhb,KAAAmb,qBAAAhgC,OAAApxF,KAClB,OAAA,QAAAi2G,KAAA,QAAAmb,qBAAOxmG,OAAOrW,OAAO0xF,mBAAAsqB,0BAA0BzjF,KAAK,SAAC0jF,KAAD,OAASA,IAAIC,SAAWr/B,OAAK6+B,qBAAjF,IAAAmB,0BAAA,EAAOA,qBAAwFC,cAA/F,IAAApb,KAAAA,KAAyG,8eCpRjH,IAAAzE,OAAAzjB,uBAAAvxF,QAAA,gBACA80H,WAAAvjC,uBAAAvxF,QAAA,oBACA67F,WAAAtK,uBAAAvxF,QAAA,oBACAq9G,UAAA9rB,uBAAAvxF,QAAA,mBACAwxF,QAAAD,uBAAAvxF,QAAA,iBACA+0H,YAAAxjC,uBAAAvxF,QAAA,iBACAq2F,mBAAA9E,uBAAAvxF,QAAA,oCACA+2F,mBAAAxF,uBAAAvxF,QAAA,8CACAg1H,aAAAzjC,uBAAAvxF,QAAA,qCACA41G,oBAAA51G,QAAA,sCACAypG,mBAAAzpG,QAAA,qCAIAu8F,iBAAAv8F,QAAA,mCACAi1H,gBAAAj1H,QAAA,+oBAyCqBk1H,eAKjB,SAAAA,IAAYC,mBACR,iIAD2B7iC,CAAA9uF,KAAA0xH,MACvB,EAAAtf,oBAAA4d,oBAAmB2B,mBACnB,MAAM,IAAIz/F,UAAU,wDAAA,6CAAA1gB,OAAAiiG,QACoCke,qBAU5D3xH,KAAKogH,oBAAsB,KAS3BpgH,KAAKqqG,mBAAqB,KAS1BrqG,KAAKmvH,aAAe,GASpBnvH,KAAKmgH,sBAAwB,KAS7BngH,KAAK8qG,qBAAuB,KAU5B9qG,KAAKs8G,mBAAqBvjB,iBAAA2K,eAU1B1jG,KAAK4xH,YAAc,KAEnB5xH,KAAKojC,KAAKuuF,yHA8HTA,mBAAmB,IAEhBhpB,SAOAgpB,kBAPAhpB,SACA9Q,SAMA85B,kBANA95B,SACAkgB,YAKA4Z,kBALA5Z,YACAI,MAIAwZ,kBAJAxZ,MACA0Z,QAGAF,kBAHAE,QACA/Z,OAEA6Z,kBAFA7Z,OACA9M,YACA2mB,kBADA3mB,YAWJ,OARAhrG,KAAK4xH,YAAc,IAAIL,YAAA,QAAWvmB,aAElChrG,KAAK8xH,wCACL9xH,KAAK+xH,kCAAkCl6B,UACvC73F,KAAKgyH,8BAA8Bla,OAAQC,aAC3C/3G,KAAKiyH,8BAA8BtpB,SAAU9Q,SAAUsgB,OACvDn4G,KAAKkyH,2CAA2CL,QAASh6B,UAElD73F,qCAmBP,OARAA,KAAKogH,oBAAsB,KAC3BpgH,KAAKqqG,mBAAqB,KAC1BrqG,KAAKmvH,aAAe,GACpBnvH,KAAKmgH,sBAAwB,KAC7BngH,KAAK8qG,qBAAuB,KAC5B9qG,KAAKs8G,mBAAqBvjB,iBAAA2K,eAC1B1jG,KAAK4xH,YAAc,KAEZ5xH,2DAamB83G,OAAQC,aAClC,IAAMoa,gBAAkBra,OAAOvrF,cACzB6lG,qBAAuBra,YAAYxrF,cAErC4lG,kBAAoBt/B,mBAAA,QAAkBlgF,QAAQk9E,OAC9C7vF,KAAKqyH,4BAA4Bva,QACjC93G,KAAKsyH,8BAGLF,uBAAyBv/B,mBAAA,QAAkBlgF,QAAQk9E,OACnD7vF,KAAKuyH,0BAA0Bxa,aAC/B/3G,KAAKwyH,8EAYaC,iBACtBzyH,KAAKogH,oBAAsBvtB,mBAAA,QAAkBkV,YAAY0qB,oEAWzD,GAAKzyH,KAAKogH,oBAAV,CAIA,IAAMsS,kBAAoB1yH,KAAK4xH,YAAYe,uBAE3C,GAAKD,kBAAL,CAMA,IAAMroB,mBAAqBrqG,KAAKogH,oBAAoBlW,UAAUwoB,mBAE9D1yH,KAAK4yH,iBAAiBvoB,yBAPlBrqG,KAAK4yH,iBAAiB5yH,KAAKogH,oBAAoB/V,yEAkB3BwoB,YACxB7yH,KAAKmgH,sBAAwBttB,mBAAA,QAAkBkV,YAAY8qB,iEAW3D,GAAK7yH,KAAKmgH,sBAAV,CAIA,IAAM2S,oBAAsB9yH,KAAK4xH,YAAYmB,yBAE7C,IAAKD,oBACD,OAAO9yH,KAAK2hH,mBAAmB3hH,KAAKmgH,sBAAsBrV,sBAG9D,IAAMA,qBAAuB9qG,KAAKmgH,sBAAsBjW,UAAU4oB,qBAElE9yH,KAAK2hH,mBAAmB7W,iFAWMjT,UAC9B,OAAQA,UACJ,KAAKoO,mBAAAwR,gBAAgBC,QACrB,KAAKzR,mBAAAwR,gBAAgB8D,WACjB,OAAOv7G,KAAK42G,eAAe3Q,mBAAAc,aAAa6b,QAE5C,KAAK3c,mBAAAwR,gBAAgB6D,UACjB,OAAOt7G,KAAK42G,eAAe3Q,mBAAAc,aAAa2D,OAE5C,QACI,MAAM,IAAIx4E,UAAJ,wDAAA1gB,OAAsEqmF,SAAtE,6DAcY8Q,SAAU9Q,SAAUsgB,OAC9Cn4G,KAAKs8G,mBAAqB3T,SAEtB9Q,WAAaoO,mBAAAwR,gBAAgB6D,WAAc3S,WAC3C3oG,KAAKs8G,mBAAqBnE,MAAMoF,4EAqBGpU,QAAStR,UAChD,GAAIA,WAAaoO,mBAAAwR,gBAAgB6D,UAAjC,CAIA,IAAI,EAAAttB,QAAA,SAAOmb,SACP,OAAOnpG,KAAKioH,qBAGhB,IAAKjoH,KAAK4xH,YAAYoB,gBAAgB7pB,SAClC,MAAM,IAAIj3E,UAAJ,kEAAA1gB,OAAgF23F,QAAhF,MAGVnpG,KAAKizH,mBAAmB9pB,8DAeA+pB,aAAc3pB,gBAAoD,IAApCD,uBAAoC,EAAAzkG,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,QAAXjC,EAC/E,OAAK5C,KAAK4xH,YAAYoB,gBAAgBE,cAO/B,EAAC,EAAMlzH,KAAK4xH,YAAYuB,4BAA4BD,aAAc3pB,eAAgBD,yBAN9E,EAAC,EAAO,CACX7oG,IAAG,qBAAA+Q,OAAuB0hH,aAAa33E,cAApC,6BACH2rD,IAAG,qBAAA11F,OAAuB+hF,mBAAA,QAAkB6/B,iBAAiBF,cAA1D,kFAeYloB,aACvB,IAAIqoB,eAEJ,IACIA,eAAiB,IAAI9B,YAAA,QAAWvmB,aAClC,MAAOjzF,OAGL,OAFA0U,QAAQ1U,MAAMA,OAEP,EAAC,EAAD,uBAAAvG,OAA+Bw5F,YAAYzvD,cAA3C,iBAGX,OAAOv7C,KAAK4xH,YAAY0B,iBAAiBD,qDAWhCH,cACT,IAAMvyH,KAAOuyH,aAAa33E,cAE1B,OAAO,EAAAi2D,OAAA,SAAMxxG,KAAKo4G,UAAW,SAAC0R,UAAD,OAAcA,SAASnpH,OAASA,4EAepBgoG,UACzC,OAAO,EAAA6I,OAAA,SAAMxxG,KAAKo4G,UAAW,SAACqG,eAAD,OAAmBA,cAAc8U,4BAA4B5qB,qFAW1F,OAAO,EAAA6I,OAAA,SAAMxxG,KAAKo4G,UAAW,SAACqG,eAAD,OAAmBA,cAAc+U,iGAexB9/D,OACtC,OAAO,EAAA89C,OAAA,SAAMxxG,KAAKo4G,UAAW,SAACqG,eAAD,OAAmBA,cAAcgV,yBAAyB//D,8EAe9Ci1C,UACzC,OAAO,EAAA6I,OAAA,SAAMxxG,KAAKo4G,UAAW,SAACqG,eAAD,OAAmBA,cAAciV,4BAA4B/qB,qFAW1F,OAAO,EAAA6I,OAAA,SAAMxxG,KAAKo4G,UAAW,SAACqG,eAAD,OAAmBA,cAAckV,iGAexBjgE,OACtC,OAAO,EAAA89C,OAAA,SAAMxxG,KAAKo4G,UAAW,SAACqG,eAAD,OAAmBA,cAAcmV,yBAAyBlgE,kEAWvF,OAAO1zD,KAAK4xH,YAAYiC,6EAWxB,OAAO7zH,KAAK4xH,YAAYnW,0FAWxB,OAAOz7G,KAAK4xH,YAAY9U,2FAcxB,OAAO98G,KAAK4xH,YAAYkC,4EAaxB,OAAO9zH,KAAK+zH,aAAapvB,+DAWzB,OAAO3kG,KAAKo4G,UAAUxrE,OAAO,SAACk9E,UAAD,OAAcA,SAASkK,0DAWpD,OAAOh0H,KAAK4xH,YAAYqC,oEAaxB,OAAOj0H,KAAK4xH,YAAYsC,gEAWxB,OAAOl0H,KAAK4xH,YAAYtkB,kDAWxB,OAAOttG,KAAK4xH,YAAYrkB,gEAWxB,OAAOvtG,KAAK4xH,YAAY7P,iFAWxB,OAAO/hH,KAAKo4G,UAAUxrE,OAAO,SAACk9E,UAAD,OAAcA,SAASqK,+DAWpD,OAAOn0H,KAAK4xH,YAAYwC,2DAWxB,OAAOp0H,KAAK4xH,YAAY5J,0DAWZkL,cACZ,OAAOlzH,KAAK4xH,YAAYoB,gBAAgBE,kDAWxC,QAAQ,EAAAllC,QAAA,SAAOhuF,KAAKogH,2DAWpB,QAAQ,EAAApyB,QAAA,SAAOhuF,KAAKmgH,8DAWpB,OAAQngH,KAAKo2G,cAAgBp2G,KAAKm2G,6DAeblM,aACrB,OAAOjqG,KAAK4xH,YAAYzkB,yBAAyBlD,+DAe3BA,aACtB,OAAOjqG,KAAK4xH,YAAYyC,0BAA0BpqB,0DAalD,OAAOjqG,KAAK4xH,YAAY3J,qEAiBJjd,aACpB,IAAMspB,oBAAsBtpB,YAAYzvD,cAAc9jC,MAAMg6G,gBAAA8C,qCAE5D,GAAmC,IAA/BD,oBAAoBt3H,OACpB,MAAO,EAAC,EAAO,2CAGnB,IAAMw3H,YAAcF,oBAAoB,GAExC,OAAK/gC,mBAAA,QAAkBkhC,aAAaD,aAIdx0H,KAAK4xH,YAAY8C,wBAAwB1pB,cAG3DhrG,KAAK20H,gCAEE,EAAC,EAAM,KAGX,EAAC,EAAD,aAAAnjH,OAAqBw5F,YAArB,mBAXI,EAAC,EAAD,sBAAAx5F,OAA8BgjH,YAA9B,wDAsBWxpB,YAAa9H,aACnC,IAAMoxB,oBAAsBtpB,YAAYzvD,cAAc9jC,MAAMg6G,gBAAA8C,qCAE5D,GAAiC,EAA7BD,oBAAoBt3H,OACpB,MAAO,EAAC,EAAO,6CAGnB,IAAIw3H,YAAcF,oBAAoB,GAEH,IAA/BA,oBAAoBt3H,SACpBw3H,YAAcF,oBAAoB,IAGtC,IAAMM,SAAWrhC,mBAAA,QAAkBshC,aAAaL,aAEhD,IAAI,EAAAxmC,QAAA,SAAO4mC,UACP,MAAO,EAAC,EAAD,sBAAApjH,OAA8BgjH,YAA9B,MAGX,GAAmC,IAA/BF,oBAAoBt3H,OAAc,CAClC,IAAM83H,WAAY,EAAAxD,WAAA,SAAUtxH,KAAKo4G,UAAW,SAACqG,eAAD,OAAmBmW,SAASG,QAAQtW,cAAc99G,QAE9F,IAAKm0H,UACD,MAAO,EAAC,EAAD,OAAAtjH,OAAegjH,YAAYj5E,cAA3B,oDAGX+4E,oBAAoB9wH,KAAKsxH,UAAUn0H,MAGvC,GAAmC,IAA/B2zH,oBAAoBt3H,OAAc,CAClC,IAAMg4H,oBAAsBh1H,KAAK8qG,qBAC7BmqB,WAAU,GAAAzjH,OAAM0xF,YAAY3nD,eAAlB/pC,OAAkCwjH,oBAAoBr0H,MAEpE,IAAKi0H,SAASM,SAASD,cACnBA,WAAaL,SAASO,sBAElB,EAAAtb,UAAA,SAASob,aACT,MAAO,EAAC,EAAD,QAAAzjH,OAAgBgjH,YAAhB,0CAIfF,oBAAoBhwH,QAAQ2wH,YAGhC,IAAMG,gBAAkBd,oBAAoBpwH,KAAKutH,gBAAA8C,qCAC3ClsB,SAAWroG,KAAK4xH,YAAYyD,0BAA0BD,iBAM5D,OAJI/sB,SAAS,IACTroG,KAAKs1H,kCAGFjtB,+DAkBmB2C,aAC1B,IACIqoB,eADEkC,oBAAsBv1H,KAAKgnH,gBAAgBrmH,KAGjD,IACI0yH,eAAiB,IAAI9B,YAAA,QAAWvmB,aAClC,MAAOjzF,OACL0U,QAAQ1U,MAAMA,OAEd,IAAMs0F,UAAW,GAIjB,OAHAA,UAAS5rG,IAAT,uBAAA+Q,OAAsCw5F,YAAtC,gBAGO,GAFPqB,UAASnF,IAAM,yBAEAmF,WAGnBrsG,KAAK4xH,YAAcyB,eAEnBrzH,KAAKizH,mBAAmBsC,qBAGxB,IAAMltB,SAAW,GAIjB,OAHAA,SAAS5nG,IAAT,iBAAA+Q,OAAgCxR,KAAKk0H,4BACrC7rB,SAASnB,IAAM,yBAER,EAAC,EAAMmB,mDAUDmtB,iBACb,KAAMA,2BAA2BhE,aAAA,SAC7B,MAAM,IAAIt/F,UAAJ,kDAAA1gB,OAAgEgkH,kBAG1Ex1H,KAAKqqG,mBAAqBmrB,2DAUXvrB,aACf,KAAMA,uBAAuBunB,aAAA,SACzB,MAAM,IAAIt/F,UAAJ,kDAAA1gB,OAAgEy4F,cAGtEjqG,KAAK8qG,sBAAwB9qG,KAAK8qG,qBAAqBnqG,OAASspG,YAAYtpG,OAIhFX,KAAK8qG,qBAAuBb,YAE5BjqG,KAAK4xH,YAAY6D,oCAAoCxrB,qDAa1C8Y,OACX,KAAK,EAAA1qB,WAAA,SAAU4N,mBAAAc,aAAcgc,OACzB,MAAM,IAAI7wF,UAAJ,8CAAA1gB,OAA4DuxG,MAA5D,MAGV/iH,KAAKmvH,aAAepM,iDAULmQ,cACf,OAAOlzH,KAAK4xH,YAAYqB,mBAAmBC,oEAgCjBsC,iBAC1B,IAAME,qBAAuB11H,KAAKqqG,mBAElC,KAAMmrB,2BAA2BhE,aAAA,SAC7B,MAAM,IAAIt/F,UAAJ,kDAAA1gB,OAAgEgkH,kBAG1E,GAAIE,sBAAwBA,qBAAqB/0H,OAAS60H,gBAAgB70H,KAAM,CAC5E,IAAMg1H,WAAW,GAIjB,OAHAA,WAASl1H,IAAT,iBAAA+Q,OAAgCgkH,gBAAgB70H,MAChDg1H,WAASzuB,IAAT,iBAAA11F,OAAgCgkH,gBAAgBjrB,gBAEzC,EAAC,EAAMorB,YAGlB,IAAK31H,KAAK4xH,YAAYyC,0BAA0BmB,iBAAkB,CAC9D,IAAMzG,WAAW,GAQjB,OAPAA,WAAStuH,IAAM,2CAAA+Q,OAA2CgkH,gBAAgB70H,KAA3D,QAAA,qBAAA6Q,OACUxR,KAAK4xH,YAAYgE,cAD3B,wBAAA,UAAApkH,OAEDkkH,qBAAqB/0H,KAFpB,YAGfouH,WAAS7nB,IAAM,2CAAA11F,OAA2CgkH,gBAAgBjrB,eAA3D,KAAA,wBAAA/4F,OACaxR,KAAK4xH,YAAYiE,cAD9B,wBAAA,UAAArkH,OAEDkkH,qBAAqBnrB,eAFpB,YAIR,EAAC,EAAOwkB,YAGnB/uH,KAAK4xH,YAAYkE,mCAAmCN,iBACpDx1H,KAAK4yH,iBAAiB4C,iBAEtB,IAAMntB,SAAW,GAIjB,OAHAA,SAAS5nG,IAAT,oBAAA+Q,OAAmCgkH,gBAAgB70H,MACnD0nG,SAASnB,IAAT,oBAAA11F,OAAmCgkH,gBAAgBjrB,gBAE5C,EAAC,EAAMlC,kEAUd,IAAMgC,mBAAqBrqG,KAAK4xH,YAAYmE,yBAExC,EAAA/nC,QAAA,SAAOqc,oBACP59E,QAAQ1U,MAAM,iDAKlB/X,KAAK4yH,iBAAiBvoB,8EAUtB,IAAMS,qBAAuB9qG,KAAK4xH,YAAYoE,2BAE1C,EAAAhoC,QAAA,SAAO8c,sBACPr+E,QAAQ1U,MAAM,mDAKlB/X,KAAK2hH,mBAAmB7W,sFAexB,GAAI9qG,KAAKo4G,UAAUp7G,OAAS,EACxB,MAAM,IAAIk1B,UAAU,mDAAA,6BAAA1gB,OACaxR,KAAKo4G,UAAUp7G,OAD5B,kDAphCxB,OAAOgD,KAAK4xH,YAAYhhB,mDAYxB,OAAO5wG,KAAK4xH,YAAY5K,uEAaxB,OAFkBhnH,KAAK6zH,iCAEN,8DAcjB,OAHkB7zH,KAAK6zH,iCAClBjnF,OAAO,SAACk9E,UAAD,OAAcA,SAAST,kBAAoBS,SAASL,kBAE/C,2DAcjB,OAHkBzpH,KAAKi2H,8BAClBrpF,OAAO,SAACk9E,UAAD,OAAcA,SAASnL,eAAiBmL,SAASoB,eAE5C,kDAajB,OAFkBlrH,KAAKk2H,yBAEN,uDAajB,OAFkBl2H,KAAKi2H,8BAEN,wCAWjB,OAAOj2H,KAAK4xH,YAAYmC,+CAWxB,OAAO/zH,KAAK4xH,YAAYxZ,6qBCrPhC,IAAAsB,YAAA3rB,uBAAAvxF,QAAA,qBACAq9G,UAAA9rB,uBAAAvxF,QAAA,mBACAwxF,QAAAD,uBAAAvxF,QAAA,iBACAspG,MAAA/X,uBAAAvxF,QAAA,eACAk1G,UAAA3jB,uBAAAvxF,QAAA,mBACA+2F,mBAAAxF,uBAAAvxF,QAAA,8CACA25H,eAAApoC,uBAAAvxF,QAAA,oBACAu8F,iBAAAv8F,QAAA,mCAIAi1H,gBAAAj1H,QAAA,uuCAWqB45H,oBAMjB,SAAAA,SAAYprB,4IAAalc,CAAA9uF,KAAAo2H,UAUrBp2H,KAAKq2H,aAAe,KAWpBr2H,KAAKs2H,SAAW,GAWhBt2H,KAAKu2H,gBAAkB,KAgBvBv2H,KAAKw2H,4BAA8B,GAWnCx2H,KAAKy2H,aAAe,GAepBz2H,KAAK02H,oBAAsB,GAE3B12H,KAAKojC,KAAK4nE,wHAqITA,aAAa,IAAA2rB,oBAAAx6B,gBACdn8F,KAAKy2H,aAAezrB,aAE8CvzF,MAAMg6G,gBAAA8C,qCAH1D,GAGPqC,eAHOD,oBAAA,GAGSE,sBAHTF,oBAAA,GAGgCG,KAHhCH,oBAAA,GAWd,OANA32H,KAAK+2H,kCAAkC/rB,aACvChrG,KAAKs2H,SAAWt2H,KAAKg3H,kBAAkBH,uBACvC72H,KAAKq2H,aAAe9iC,mBAAA,QAAkB0jC,UAAUJ,uBAChD72H,KAAKu2H,gBAAkBhjC,mBAAA,QAAkBshC,aAAagC,uBACtD72H,KAAK02H,oBAAsB12H,KAAKk3H,4BAA4BN,eAAgBE,MAErE92H,qCAoBP,OATAA,KAAKm3H,2BAELn3H,KAAKq2H,aAAe,KACpBr2H,KAAKs2H,SAAW,GAChBt2H,KAAKu2H,gBAAkB,KACvBv2H,KAAKw2H,4BAA8B,GACnCx2H,KAAKy2H,aAAe,GACpBz2H,KAAK02H,oBAAsB,GAEpB12H,+CAWO62H,uBACd,GAAI72H,KAAKy2H,aAAajqH,QAAQ,OAASusF,iBAAA2K,eACnC,OAAO+tB,gBAAA2F,SAASC,OAGpB,GAAI9jC,mBAAA,QAAkB+jC,UAAUT,uBAC5B,OAAOpF,gBAAA2F,SAASG,OAGpB,GAAIhkC,mBAAA,QAAkBkhC,aAAaoC,uBAC/B,OAAOpF,gBAAA2F,SAASI,UAGpB,MAAM,IAAItlG,UAAJ,gGAAA1gB,OAC4BqlH,sBAD5B,kEAawB7rB,aAC9B,GAAIA,YAAYx+F,QAAQ,QAAUusF,iBAAA4f,cAC9B,MAAM,IAAIzmF,UAAJ,uEAAA1gB,OAAqFw5F,YAArF,MAGV,GAAoC,EAAhCA,YAAYvzF,MAAM,KAAKza,OACvB,MAAM,IAAIk1B,UAAJ,yDAAA1gB,OAAuEw5F,YAAvE,gDAaIplG,MACd,IAAMkkH,SAAW,IAAIqM,eAAA,QAAcvwH,MAC7B2jG,eAAiBhW,mBAAA,QAAkBkkC,wBAAwB3N,SAASnpH,MAM1E,OAJsB,MAAlB4oG,gBACAugB,SAAS4N,yBAAyBnuB,gBAG/BugB,6DAaiB8M,eAAgBE,MACxC,OAAI92H,KAAKs2H,WAAa7E,gBAAA2F,SAASC,OACpB,CAACr3H,KAAK23H,kBAAkBf,iBAG/B52H,KAAKs2H,WAAa7E,gBAAA2F,SAASG,QAC3Bv3H,KAAK43H,qCAAqChB,eAAgBE,MAEnD92H,KAAKq2H,aAAawB,iCAAiCjB,eAAgBE,QAG9E92H,KAAK83H,wCAAwClB,eAAgBE,MAEtD92H,KAAKu2H,gBAAgBsB,iCAAiCjB,eAAgBE,2DAerD5D,aAAc3pB,gBAAoD,IAApCD,uBAAoC,EAAAzkG,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,QAAXjC,EAC/E,GAAK5C,KAAKgzH,gBAAgBE,cAA1B,CAIA,IAAM6E,cAAgB/3H,KAAKg4H,yBAAyB9E,cAGpD,OAFsBlzH,KAAK02H,oBAAoBqB,eAE1BE,iCAAiC1uB,eAAgBD,iEAWtE,GAAKtpG,KAAKk4H,YAIV,OAAOl4H,KAAKq2H,aAAaxmC,mEAUSqjC,cAClC,IAAMiF,oBAAsBn4H,KAAKg4H,yBAAyB9E,cAE1D,OAAOlzH,KAAK02H,oBAAoB/vH,QAAQ6L,OAAO2lH,oBAAsB,kEAUlCjF,cACnC,IAAMiF,oBAAsBn4H,KAAKg4H,yBAAyB9E,cACpDkF,yBAA2Bp4H,KAAK02H,oBAAoB/vH,QAI1D,OAFAyxH,yBAAyB5lH,OAAO2lH,qBAEzBC,+EAYP,OAAKp4H,KAAKq4H,UAIer4H,KAAKy2H,aAAah/G,MAAMg6G,gBAAA8C,qCAAqC,GAC1C3uG,OAAO,EAAG,GAE5B2G,cANf,oDAkBX,OAAKvsB,KAAKq4H,UAIer4H,KAAKy2H,aAAah/G,MAAMg6G,gBAAA8C,qCAAqC,GAC3C3uG,OAAO,GAJvC,iDAiBX,IAAK5lB,KAAKs4H,eACN,OAAOv/B,iBAAA2K,eAGX,IAAM60B,kBAAmB,EAAAzyB,MAAA,SAAK9lG,KAAK02H,oBAAqB,SAAC5M,UAAD,OAAcA,SAASL,kBACzE+O,8BAA+B,EAAA9mB,UAAA,SAAS6mB,iBAAkBx/B,iBAAA2K,gBAC1D8X,eAAiBzoF,KAAKw5C,IAAL/7D,MAAAuiB,KAAIgpE,mBAAQy8B,+BAEnC,OAAIhd,iBAAmB9gF,EAAAA,EACZq+D,iBAAA2K,eAGJ8X,uEAYP,OAAKx7G,KAAK6wG,SAIe7wG,KAAKy2H,aAAah/G,MAAMg6G,gBAAA8C,qCAAqC,GACxC3uG,OAAO,EAAG,GAE5B2G,cANjB,sDAkBX,OAAKvsB,KAAK6wG,SAIe7wG,KAAKy2H,aAAah/G,MAAMg6G,gBAAA8C,qCAAqC,GACzC3uG,OAAO,GAJzC,gDAiBX,GAAK5lB,KAAKs4H,eAIV,OAAOt4H,KAAKu2H,gBAAgB1mC,gDAW5B,GAAK7vF,KAAKs4H,eAIV,OAAOt4H,KAAKu2H,gBAAgB51H,+CAW5B,OAAIX,KAAKy4H,YACEz4H,KAAKy2H,aAGYz2H,KAAKy2H,aAAah/G,MAAMg6G,gBAAA8C,qCAEzB,4CAW3B,OAAIv0H,KAAKy4H,YACEz4H,KAAKy2H,aAGYz2H,KAAKy2H,aAAah/G,MAAMg6G,gBAAA8C,qCAEzB,2DAkB3B,IAAMvpB,YAAchrG,KAAKy2H,aAEzB,GAAIz2H,KAAK6wG,SAAU,CACf,IAAM7iE,SAAWg9D,YAAYvzF,MAAMg6G,gBAAA8C,qCAC7BmE,UAAY1qF,SAAS,GACrB8oF,KAAO9oF,SAAS,GAEtB,MAAA,GAAAx8B,OAAUknH,UAAV,KAAAlnH,OAAuBslH,MAG3B,GAAI92H,KAAKq4H,UAAW,CAChB,IAAMM,UAAW3tB,YAAYvzF,MAAMg6G,gBAAA8C,qCAC7Bv9G,MAAQ2hH,UAAS,GACjBC,WAAYD,UAAS,GAE3B,MAAA,GAAAnnH,OAAUwF,MAAV,KAAAxF,OAAmBonH,YAGvB,OAAO5tB,qDAWP,IAAKhrG,KAAKs4H,eACN,OAAOv/B,iBAAA2K,eAGX,IAAMm1B,kBAAmB,EAAA/yB,MAAA,SAAK9lG,KAAK02H,oBAAqB,SAAC5M,UAAD,OAAcA,SAAST,kBACzEmP,8BAA+B,EAAA9mB,UAAA,SAASmnB,iBAAkB9/B,iBAAA2K,gBAC1Do1B,YAAc/lG,KAAKi6B,IAALx8C,MAAAuiB,KAAIgpE,mBAAQy8B,+BAEhC,OAAIM,eAAiBp+F,EAAAA,EACVq+D,iBAAA2K,eAGJo1B,sDAWP,OAAyC,EAAlC94H,KAAK02H,oBAAoB15H,+CAcpBk2H,cACZ,IAAI,EAAArZ,UAAA,SAASqZ,cACT,MAAM,IAAIhhG,UAAJ,yCAAA1gB,OAAuD0hH,aAAvD,MAGVA,aAAeA,aAAa33E,cAI5B,IAAK,IAAIl/C,EAAI,EAAGA,EAAI2D,KAAK02H,oBAAoB15H,OAAQX,IACjD,GAAI2D,KAAK02H,oBAAoBr6H,GAAGsE,OAASuyH,aACrC,OAAO,EAIf,OAAO,+CAaP,IAAM6F,oBAAsB/4H,KAAK02H,oBAAoBjuH,QAErDzI,KAAKw2H,4BAA4BhzH,KAAKu1H,+DAGxBC,WACd,QAAKh5H,KAAKs4H,gBAIHt4H,KAAKu2H,gBAAgBrB,SAAS8D,oDAGxBC,UACb,QAAKj5H,KAAKs4H,gBAIHt4H,KAAKu2H,gBAAgBxB,QAAQkE,0DAShB,IAAAC,uBACpBA,sBAAAl5H,KAAKw2H,6BAA4BhzH,KAAjCgN,MAAA0oH,sBAAAn9B,mBAAyC/7F,KAAK02H,sBAE9C12H,KAAK02H,oBAAsB,8CAaZxD,cAAc,IAAAiG,uBACvBpB,cAAgB/3H,KAAKg4H,yBAAyB9E,cAEpD,GAAI6E,gBAAkBh/B,iBAAA4f,cAClB,OAAO,EAGX,IAAMygB,wBAA0BrB,cAC1BsB,qBAAuBr5H,KAAK02H,oBAAoBlkH,OAAO,EAAG4mH,yBAIhE,OAFAD,uBAAAn5H,KAAKw2H,6BAA4BhzH,KAAjCgN,MAAA2oH,uBAAAp9B,mBAAyCs9B,wBAElC,8DAUyBpvB,aAChC,GAAKjqG,KAAK6wG,SAAV,CAIA,IAAMyoB,sBAAwBt5H,KAAKy2H,aAAah/G,MAAMg6G,gBAAA8C,qCAChDgF,iBAAmBD,sBAAsB,GACzCE,gBAAkBF,sBAAsB,GAExCG,kBAAoBF,iBAAiB3zG,OAAO,GAC5C8zG,eAAiBzvB,YAAYtpG,KAC7Bg5H,cAAgBJ,iBAAiB3zG,OAAO,EAAG,GAAGpU,OAAOkoH,gBAEvDzvB,YAAYtpG,OAAS84H,mBAKpBz5H,KAAKu2H,gBAAgBrB,SAASyE,iBAInC35H,KAAK02H,oBAAsB12H,KAAKk3H,4BAA4ByC,cAAeH,8EAU5CvvB,aAC/B,GAAKjqG,KAAKq4H,UAAV,CAIA,IAAMiB,sBAAwBt5H,KAAKy2H,aAAah/G,MAAMg6G,gBAAA8C,qCAChDgF,iBAAmBD,sBAAsB,GACzCE,gBAAkBF,sBAAsB,GAExCG,kBAAoBD,gBAAgB5zG,OAAO,GAC3C8zG,eAAiBzvB,YAAYtpG,KAC7Bi5H,aAAeJ,gBAAgB5zG,OAAO,EAAG,GAAGpU,OAAOkoH,gBAErDzvB,YAAYtpG,OAAS84H,mBAIpBz5H,KAAKu2H,gBAAgBxB,QAAQ6E,gBAIlC55H,KAAK02H,oBAAsB12H,KAAKk3H,4BAA4BqC,iBAAkBK,iEAKzD1G,cACrB,OAAO,EAAAxZ,YAAA,SAAW15G,KAAK02H,oBAAqB,SAACjY,eACzC,OAAOA,cAAc99G,OAASuyH,aAAa33E,mEAe/Cv7C,KAAK65H,wBAEL,IAAK,IAAIx9H,EAAI,EAAGA,EAAI2D,KAAKw2H,4BAA4Bx5H,OAAQX,IACzD2D,KAAKw2H,4BAA4Bn6H,GAAGs1C,qEAaPqnF,UAAWC,UAC5C,IAAI,EAAAjrC,QAAA,SAAOhuF,KAAKq2H,cACZ,MAAM,IAAInkG,UAAU,4EAGxB,IAAM4nG,WAAa95H,KAAKq2H,aAAaxmC,KAErC,IAAK7vF,KAAKq2H,aAAa0D,WAAWf,WAC9B,MAAM,IAAI9mG,UAAJ,2BAAA1gB,OAAyCsoH,WAAzC,mBAAAtoH,OAAqEwnH,YAG/E,IAAKh5H,KAAKq2H,aAAa0D,WAAWd,UAC9B,MAAM,IAAI/mG,UAAJ,0BAAA1gB,OAAwCsoH,WAAxC,mBAAAtoH,OAAoEynH,2EAa1CD,UAAWC,UAC/C,IAAI,EAAAjrC,QAAA,SAAOhuF,KAAKu2H,iBACZ,MAAM,IAAIrkG,UAAU,+EAGxB,IAAM8nG,cAAgBh6H,KAAKu2H,gBAAgB1mC,KAE3C,IAAK7vF,KAAKu2H,gBAAgBrB,SAAS8D,WAC/B,MAAM,IAAI9mG,UAAJ,2BAAA1gB,OAAyCwoH,cAAzC,mBAAAxoH,OAAwEwnH,YAGlF,IAAKh5H,KAAKu2H,gBAAgBxB,QAAQkE,UAC9B,MAAM,IAAI/mG,UAAJ,0BAAA1gB,OAAwCwoH,cAAxC,mBAAAxoH,OAAuEynH,mDAxwBjF,GAAwC,IAApCj5H,KAAK02H,oBAAoB15H,OACzB,MAAM,IAAIk1B,UAAU,6DAGxB,OAAOlyB,KAAK02H,oBAAoB,uCAWhC,OAAO12H,KAAKs2H,WAAa7E,gBAAA2F,SAASG,2CAWlC,OAAOv3H,KAAKs2H,WAAa7E,gBAAA2F,SAASC,8CAWlC,OAAOr3H,KAAKs2H,WAAa7E,gBAAA2F,SAASI,2CAWlC,OAAOx3H,KAAKs4H,gBAAkBt4H,KAAKu2H,gBAAgB0D,gBAAkBxI,gBAAAyI,eAAeC,sCAWpF,OAAOn6H,KAAKs4H,gBAAkBt4H,KAAKu2H,gBAAgB0D,gBAAkBxI,gBAAAyI,eAAeE,qCAWpF,OAAOp6H,KAAKs2H,8CAWZ,OAAOt2H,KAAK02H,oBAAoB,uCAWhC,OAAO12H,KAAKy2H,+CAWZ,OAAOz2H,KAAK02H,qDAIZ,OAAO12H,KAAKu2H,gBAAgB5tB,0hBChOpC,IAAA0xB,QAAAtsC,uBAAAvxF,QAAA,iBACA89H,QAAAvsC,uBAAAvxF,QAAA,iBACAk9G,YAAA3rB,uBAAAvxF,QAAA,qBACA+9H,eAAAxsC,uBAAAvxF,QAAA,wBACAwxF,QAAAD,uBAAAvxF,QAAA,iBACAg+H,WAAAzsC,uBAAAvxF,QAAA,oBACAi+H,OAAA1sC,uBAAAvxF,QAAA,gBACAspG,MAAA/X,uBAAAvxF,QAAA,eACAk+H,SAAA3sC,uBAAAvxF,QAAA,kBACAk1G,UAAA3jB,uBAAAvxF,QAAA,mBACAm+H,UAAA5sC,uBAAAvxF,QAAA,eACAszH,YAAA/hC,uBAAAvxF,QAAA,yBACAq2F,mBAAA9E,uBAAAvxF,QAAA,oCACAg1H,aAAAzjC,uBAAAvxF,QAAA,qCACAu8F,iBAAAv8F,QAAA,mCAKAi1H,gBAAAj1H,QAAA,kCAIAo+H,qBAAAp+H,QAAA,ggEAYqBq+H,gCAMjB,SAAAA,WAAY7vB,aAAa,IAAA/2F,MAAA,qIAAA66E,CAAA9uF,KAAA66H,aACrB5mH,MAAAs7G,2BAAAvvH,KAAAwvH,gBAAAqL,YAAA99H,KAAAiD,QAUK86H,eAAiB,GAetB7mH,MAAK8mH,uBAAyB,GAE9B9mH,MAAKmvB,KAAK4nE,aA5BW/2F,2YANW67G,YAAA,2EAmI/B9kB,aAGD,OAFAhrG,KAAK86H,eAAiB96H,KAAKg7H,6BAA6BhwB,aAEjDhrG,qCAaP,OAFAA,KAAK86H,eAAiB,GAEf96H,8CAaMi7H,YACb,IAAMC,mBAAoB,EAAAZ,QAAA,SAAOW,WAAW7iB,WAAWz3G,KACjDw6H,kBAAmB,EAAAV,OAAA,SAAMQ,WAAW7iB,WAAWz3G,KAC/Cy6H,eAAiBp7H,KAAKgzH,gBAAgBmI,kBACtCE,cAAgBr7H,KAAKgzH,gBAAgBkI,mBAE3C,OAAIE,gBAAkBC,cACXr7H,KAAKs7H,oCAAoCJ,kBAAmBC,iBAAkBF,YAGrFG,eACOp7H,KAAKu7H,uCAAuCJ,iBAAkBF,YAGrEI,cACOr7H,KAAKw7H,yCAAyCN,kBAAmBD,YAGrE,EAAC,EAAO,sFAaS/H,aAAc3pB,gBAAoD,IAApCD,uBAAoC,EAAAzkG,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,QAAXjC,EAC/E,GAAK5C,KAAKgzH,gBAAgBE,cAA1B,CAIA,IAAMuI,SAAWz7H,KAAK07H,sCAAsCxI,cACtDyI,SAAW37H,KAAK86H,eAAeW,UAgBrC,OAXCnyB,uBAXyFnN,eAW/Dn8F,KAAKo4G,UAAUwjB,OAAO,SAACjwG,KAAMkwG,KAAQ,IACvD1zB,QADuDhM,eAC5CxwE,KAD4C,GAAA,GAEnDmwG,QAFmD3/B,eAExCxwE,KAFwC,GAAA,GAQ5D,OAJgB,OAAZmwG,SAAoBD,IAAIl7H,OAASuyH,aAAa33E,gBAC9C4sD,QAAU0zB,IAAIl3B,cAAcgF,oBAAoBmyB,QAAQn3B,gBAGrD,CAACwD,QAAS0zB,MAClB,CAACvyB,uBAAwB,OApB8D,GAAA,GAsBnFqyB,SAASxI,4BAA4BD,aAAc3pB,eAAgBD,kFAW1E,OAAOtpG,KAAKo4G,UAAUxrE,OAAO,SAACk9E,UAAD,OAAcA,SAASiS,+EAWpD,IAAK/7H,KAAKg8H,aACN,OAAO,KAGX,IAAMC,aAAej8H,KAAKk8H,oBAE1B,OAAOl8H,KAAK86H,eAAemB,cAAcE,qFAWzC,IAAMj5B,YAAcljG,KAAKm8H,8BAEzB,OAAKj5B,YAIErQ,mBAAA,QAAkBkV,YAAY7E,aAH1B,oDAcX,IAAKljG,KAAKg8H,aACN,OAAO,KAGX,IAAMC,aAAej8H,KAAKk8H,oBAE1B,OAAOl8H,KAAK86H,eAAemB,cAActJ,uEAWzC,IAAMD,kBAAoB1yH,KAAK2yH,uBAE/B,OAAKD,kBAIE1yH,KAAKo8H,+BAA+BlyB,UAAUwoB,mBAH1C,6DAcX,OAAK1yH,KAAKq8H,YAIUr8H,KAAKs8H,cAENC,gCALR,8DAgBX,IAAMr5B,YAAcljG,KAAKu8H,gCAEzB,OAAKr5B,YAIErQ,mBAAA,QAAkBkV,YAAY7E,aAH1B,sDAcX,OAAKljG,KAAKq8H,YAIUr8H,KAAKs8H,cAENvJ,yBALR,uDAgBX,IAAMD,oBAAsB9yH,KAAK+yH,yBAEjC,OAAKD,oBAIE9yH,KAAKw8H,iCAAiCtyB,UAAU4oB,qBAH5C,iDAcX,IAAM2J,sBAAuB,EAAA/qB,UAAA,UACzB,EAAA5L,MAAA,SAAK9lG,KAAK86H,eAAgB,SAAC4B,KAAD,OAASA,IAAIjhB,sBACvC1iB,iBAAA2K,gBAEE8X,eAAiBzoF,KAAKw5C,IAAL/7D,MAAAuiB,KAAIgpE,mBAAQ0gC,uBAEnC,OAAIjhB,iBAAmB9gF,EAAAA,EACZq+D,iBAAA2K,eAGJ8X,4DAWP,IAAMmhB,wBAA0B38H,KAAK48H,8BAC/BC,+BAAgC,EAAA/2B,MAAA,SAAK62B,wBAAyB,SAAChB,UAAD,OAAcA,SAAS3wB,cAE3F,OAAOhrG,KAAK88H,qBAAqBD,qGAcjC,IAAMF,wBAA0B38H,KAAK48H,8BAC/BG,gCAAiC,EAAAj3B,MAAA,SAAK62B,wBAAyB,SAAChB,UAClE,OAAOA,SAASqB,kCAGpB,OAAOh9H,KAAK88H,qBAAqBC,gCAC5B73H,QAAQ6zF,iBAAAkkC,MAAMC,WAAY,KAC1Bh4H,QAAQ6zF,iBAAAkkC,MAAME,WAAY,4DAmB/B,OAFoBn9H,KAAKo9H,qBAENl4H,QAAQ6zF,iBAAAkkC,MAAMC,WAAY,KAAKh4H,QAAQ6zF,iBAAAkkC,MAAME,WAAY,8CAW5E,IAAME,iBAAkB,EAAAv3B,MAAA,SAAK9lG,KAAK86H,eAAgB,SAACa,UAAD,OAAcA,SAAS3wB,cAEzE,OAAOhrG,KAAK88H,qBAAqBO,oEAgBjC,OAFoBr9H,KAAKi0H,iBAEN/uH,QAAQ6zF,iBAAAkkC,MAAMC,WAAY,KAAKh4H,QAAQ6zF,iBAAAkkC,MAAME,WAAY,kDAmB5E,OAAKn9H,KAAKq8H,YAIUr8H,KAAKs8H,cAENgB,iBALRt9H,KAAKo9H,qBAAqB3lH,MAAM,MAAM,wCAgBjD,GAAKzX,KAAKq8H,YAMV,OAFoBr8H,KAAKs8H,cAENiB,wDAWnB,GAAKv9H,KAAKq8H,YAMV,OAFoBr8H,KAAKs8H,cAENkB,sEAWnB,IAAMC,YAAcz9H,KAAKs8H,cAEzB,OAAImB,aAAeA,YAAY90B,SACpB80B,YAAY90B,SAGP9V,mBAAA,QAAkBkV,cAEnB21B,kDAWf,GAAK19H,KAAKg8H,aAMV,OAFqBh8H,KAAK86H,eAAe96H,KAAKk8H,qBAE1BqB,yDAWpB,GAAKv9H,KAAKg8H,aAMV,OAFqBh8H,KAAK86H,eAAe96H,KAAKk8H,qBAE1BsB,4DAWpB,IAAMG,sBAAuB,EAAAjsB,UAAA,UACzB,EAAA5L,MAAA,SAAK9lG,KAAK86H,eAAgB,SAAC4B,KAAD,OAASA,IAAItI,mBACvCr7B,iBAAA2K,gBAEEo1B,YAAc/lG,KAAKi6B,IAALx8C,MAAAuiB,KAAIgpE,mBAAQ4hC,uBAEhC,OAAI7E,eAAiBp+F,EAAAA,EACVq+D,iBAAA2K,eAGJo1B,iDAWP,OAAoC,EAA7B94H,KAAK86H,eAAe99H,iDAa3B,QAAIgD,KAAK4wG,WAAWoX,qBAIfhoH,KAAK49H,gBAIF,EAAA5vC,QAAA,SAAOhuF,KAAK69H,QAAQ7W,qDAW5B,OAAOhnH,KAAK89H,qBAAuB/kC,iBAAA4f,mDAWnC,OAAO34G,KAAKk8H,sBAAwBnjC,iBAAA4f,sDAWxBua,cACZ,IAAK,IAAI72H,EAAI,EAAGA,EAAI2D,KAAK86H,eAAe99H,OAAQX,IAC5C,GAAI2D,KAAK86H,eAAez+H,GAAG22H,gBAAgBE,cACvC,OAAO,EAIf,OAAO,mDAacjpB,aACrB,KAAMA,uBAAuBunB,aAAA,SACzB,OAAO,EAGX,IAAMiM,YAAcz9H,KAAKs8H,cAEzB,IAAKmB,YACD,OAAO,EAGX,IAAMM,qBAAuB/9H,KAAKu8H,gCAAgChhF,cAC5Dy9E,UAAS,GAAAxnH,OAAMusH,sBAANvsH,OAA6By4F,YAAYtpG,MAExD,OAAO88H,YAAYO,kBAAkBhF,6DAaf/uB,aACtB,KAAMA,uBAAuBunB,aAAA,SACzB,OAAO,EAGX,IAAMyK,aAAej8H,KAAKk8H,oBACpB+B,aAAej+H,KAAK86H,eAAemB,cAEzC,IAAKgC,aACD,OAAO,EAGX,IAAMC,mBAAqBl+H,KAAKm8H,8BAA8B5gF,cACxD09E,SAAQ,GAAAznH,OAAM0sH,oBAAN1sH,OAA2By4F,YAAYtpG,MAErD,OAAOs9H,aAAaE,iBAAiBlF,uDAarC,IAAKj5H,KAAK4wG,WAAWoX,kBACjB,OAAOhoH,KAAKo+H,gBAGhBp+H,KAAK4wG,WAAWqX,qEAeIjd,aACpB,IAAIizB,aAEJ,IACIA,aAAe,IAAItD,UAAA,QAAS3vB,aAC9B,MAAOjzF,OAGL,OAFA0U,QAAQ1U,MAAMA,QAEP,EAIX,OAAK/X,KAAKg8H,aAMVh8H,KAAK86H,eAAe96H,KAAKk8H,qBAAuB+B,aAL5Cj+H,KAAK86H,eAAet3H,KAAKy6H,eAOtB,oDAeejzB,aACtB,IAAIiwB,WAEJ,IACIA,WAAa,IAAIJ,WAAW7vB,aAC9B,MAAOjzF,OAGL,OAFA0U,QAAQ1U,MAAMA,OAEP,EAAC,EAAD,uBAAAvG,OAA+Bw5F,YAAYzvD,cAA3C,iBAGX,OAAOv7C,KAAKszH,iBAAiB2H,oDAWjB,IAAAoD,sBACZ,GAAKr+H,KAAK49H,aAAV,CAIA,IAAMU,UAAYt+H,KAAK86H,eAAetoH,OAAO,EAAG,IAEhD6rH,sBAAAr+H,KAAK+6H,wBAAuBv3H,KAA5BgN,MAAA6tH,sBAAAtiC,mBAAoCuiC,wDAWrBpL,cAAc,IAAAqL,uBAC7B,IAAKv+H,KAAKgzH,gBAAgBE,cACtB,OAAO,EAGX,GAAIlzH,KAAK4wG,WAAWoiB,gBAAgBE,cAChC,OAAOlzH,KAAK4wG,WAAWqiB,mBAAmBC,cAG9C,IAAMuI,UAAW,EAAA/hB,YAAA,SAAW15G,KAAK86H,eAAgB,SAACa,UAAD,OAAcA,SAAS3I,gBAAgBE,gBAClFsL,gBAAkBx+H,KAAK86H,eAAetoH,OAAO,EAAGipH,UAItD,OAFA8C,uBAAAv+H,KAAK+6H,wBAAuBv3H,KAA5BgN,MAAA+tH,uBAAAxiC,mBAAoCyiC,kBAE7Bx+H,KAAK4wG,WAAWqiB,mBAAmBC,0EAUVjpB,aAC3BjqG,KAAKq8H,aAIUr8H,KAAKs8H,cAEb7G,oCAAoCxrB,wEAUjBA,aAC/B,GAAKjqG,KAAKg8H,aAIV,GAAKh8H,KAAKq0H,0BAA0BpqB,aAApC,CAOA,IAAMw0B,4BAA8Bz+H,KAAKgnH,gBAAgBrmH,KACnDi5H,aAAY,GAAApoH,OAAMxR,KAAKm8H,8BAA8B5gF,eAAzC/pC,OAAyDy4F,YAAYtpG,MACjFs7H,aAAej8H,KAAKk8H,oBACpBwC,oBAAsB1+H,KAAK2+H,4CAA4C/E,aAAcqC,cAC3Fj8H,KAAK86H,eAAemB,cAAgByC,oBAEpC1+H,KAAKizH,mBAAmBwL,kCAZpBhyG,QAAQ1U,MAAM,mBAAAvG,OAAmBy4F,YAAYtpG,KAA/B,gDACV,4IA8B6Bi+H,sBAAuB3D,YAC5D,IAAM4D,oBAAsB7+H,KAAK07H,sCAAsCkD,uBACjEE,aAAe9+H,KAAK86H,eAAe+D,qBAEzC,GAAIC,aAAa5G,YACb,OAAOl4H,KAAK++H,gCAAgCH,sBAAuB3D,YAGvE,GAAI6D,aAAarG,YACb,OAAOz4H,KAAKg/H,gCAAgCJ,sBAAuB3D,YAGvE,GAAI6D,aAAajuB,SACb,OAAO7wG,KAAKi/H,6BAA6BL,sBAAuB3D,YAGpE,GAAI6D,aAAazG,UACb,OAAOr4H,KAAKk/H,8BAA8BN,sBAAuB3D,YAGrE,MAAM,IAAI/oG,UAAU,0CAAA1gB,OAA0CstH,aAAaK,QAAvD,MAChB,6IAcwBP,sBAAuB3D,YACnD,IAAM4D,oBAAsB7+H,KAAK07H,sCAAsCkD,uBACjEQ,iBAAmBp/H,KAAKq/H,8CAC1BT,sBACAC,qBAGJ7+H,KAAK86H,eAAetoH,OAAOqsH,qBAE3B7+H,KAAK86H,eAAL,GAAAtpH,OAAAuqF,mBACO/7F,KAAK86H,gBADZ,CAEIsE,kBAFJrjC,mBAGOk/B,WAAWqE,gBAGlB,IAAMj3B,SAAW,GAIjB,OAHAA,SAAS5nG,IAAT,iBAAA+Q,OAAgCxR,KAAKk0H,4BACrC7rB,SAASnB,IAAM,yBAER,EAAC,EAAMmB,kEAccu2B,sBAAuB3D,YACnD,IAAM4D,oBAAsB7+H,KAAK07H,sCAAsCkD,uBAEvE5+H,KAAK86H,eAAetoH,OAAOqsH,qBAC3B7+H,KAAK86H,eAAiB96H,KAAK86H,eAAetpH,OAAOypH,WAAWqE,eAE5D,IAAMj3B,SAAW,GAIjB,OAHAA,SAAS5nG,IAAT,iBAAA+Q,OAAgCxR,KAAKk0H,4BACrC7rB,SAASnB,IAAM,yBAER,EAAC,EAAMmB,+DAcWu2B,sBAAuB3D,YAChD,IAAM4D,oBAAsB7+H,KAAK07H,sCAAsCkD,uBACjEW,4BAA8Bv/H,KAAKw/H,8CACrCZ,sBACAC,qBAGJ7+H,KAAK86H,eAAetoH,OAAOqsH,qBAE3B7+H,KAAK86H,eAAL,GAAAtpH,OAAAuqF,mBACO/7F,KAAK86H,gBADZ/+B,mBAEOwjC,6BAFPxjC,mBAGOk/B,WAAWqE,gBAGlB,IAAMj3B,SAAW,GAIjB,OAHAA,SAAS5nG,IAAT,iBAAA+Q,OAAgCxR,KAAKk0H,4BACrC7rB,SAASnB,IAAM,yBAER,EAAC,EAAMmB,gEAcYu2B,sBAAuB3D,YACjD,IAAM4D,oBAAsB7+H,KAAK07H,sCAAsCkD,uBAGvE,GAF0B5+H,KAAK86H,eAAe+D,qBAExBV,iBAAiBS,uBAAwB,CAC3D,IAAMa,eAAiBz/H,KAAK2+H,4CACxBC,sBACAC,qBAGJ7+H,KAAK86H,eAAetoH,OAAOqsH,qBAE3B7+H,KAAK86H,eAAL,GAAAtpH,OAAAuqF,mBACO/7F,KAAK86H,gBADZ,CAEI2E,gBAFJ1jC,mBAGOk/B,WAAWqE,gBAGlB,IAAMjzB,UAAW,GAIjB,OAHAA,UAAS5rG,IAAT,iBAAA+Q,OAAgCxR,KAAKk0H,4BACrC7nB,UAASnF,IAAM,yBAER,EAAC,EAAMmF,WAGlB,IAAMkzB,4BAA8Bv/H,KAAK0/H,+CACrCd,sBACAC,qBAGJ7+H,KAAK86H,eAAetoH,OAAOqsH,qBAE3B7+H,KAAK86H,eAAL,GAAAtpH,OAAAuqF,mBACO/7F,KAAK86H,gBADZ/+B,mBAEOwjC,6BAFPxjC,mBAGOk/B,WAAWH,iBAGlB,IAAMzyB,SAAW,GAIjB,OAHAA,SAAS5nG,IAAT,iBAAA+Q,OAAgCxR,KAAKk0H,4BACrC7rB,SAASnB,IAAM,yBAER,EAAC,EAAMmB,uDAeGg1B,iBAGjB,IAFA,IAAMsC,oBAAsB,EAAC,EAAArF,QAAA,SAAO+C,kBAE3BhhI,EAAI,EAAGA,EAAIghI,gBAAgBrgI,OAAQX,IAAK,CAC7C,IAAMujI,mBAAoB,EAAAnF,OAAA,SAAM4C,gBAAgBhhI,EAAI,GAAGob,MAAMg6G,gBAAA8C,sCACvDmI,IAAMW,gBAAgBhhI,GACtBwjI,UAAW,EAAAvF,QAAA,SAAOoC,IAAIjlH,MAAMg6G,gBAAA8C,sCAElC,GAAIsL,WAAaD,kBAQjBD,oBAAoBn8H,KAAKk5H,SARzB,CACI,IAAMoD,mBAAqBH,oBAAoB3iI,OAAS,EAClD+iI,2BAA6BrD,IAAIx3H,QAAQ26H,SAAU,IACzDF,oBAAoBG,qBAAuBC,4BAQnD,OAAOJ,oBAAoBz7H,KAAKutH,gBAAAuO,+FAmBWC,aAAcxE,UACzD,IAAMyE,mBAAqBlgI,KAAK86H,eAAeW,UACzC0E,WAAaD,mBAAmBE,gBAChCC,YAAcH,mBAAmB5C,iBACjCgD,0BAA2B,EAAA1F,qBAAA2F,+BAA8BN,aAAcE,WAAYE,aAGzF,OAFyB,IAAI1F,UAAA,QAAS2F,gGAgBID,YAAa5E,UACvD,IAAMqD,aAAe9+H,KAAK86H,eAAeW,UACnC0E,WAAarB,aAAasB,gBAC1BH,aAAenB,aAAa0B,kBAC5BF,0BAA2B,EAAA1F,qBAAA2F,+BAA8BN,aAAcE,WAAYE,aAGzF,OAFyB,IAAI1F,UAAA,QAAS2F,8EAedG,0BAA2BC,iBACnD,IAAMR,mBAAqBlgI,KAAK86H,eAAe2F,2BAE/C,GAAIP,mBAAmBhI,YACnB,MAAO,CAACl4H,KAAK2gI,+CAA+CD,gBAAiBD,4BAGjF,GAAIP,mBAAmBzH,YACnB,MAAO,GAGX,GAAIyH,mBAAmBrvB,SAGnB,OAF0B,EAAAypB,QAAA,SAAO4F,mBAAmB9nB,WAAWz3G,OAErC+/H,gBACf,CAACR,oBAGLlgI,KAAK4gI,6CAA6CF,gBAAiBD,2BAG9E,GAAIP,mBAAmB7H,UAGnB,OAF0B,EAAAiC,QAAA,SAAO4F,mBAAmB9nB,WAAWz3G,OAErC+/H,gBACf,CAACR,oBAGRA,mBAAmBlC,kBAAkB0C,iBAC9B,CAAC1gI,KAAK6gI,6CAA6CH,gBAAiBD,4BAGxEzgI,KAAK8gI,8CAA8CJ,gBAAiBD,2BAG/E,MAAM,IAAIvuG,UAAJ,+CAAA1gB,OAA6D0uH,mBAAmBf,QAAhF,yDAaiB4B,yBAA0BC,mBACjD,IAAMC,kBAAoBjhI,KAAK86H,eAAeiG,0BAE9C,GAAIE,kBAAkB/I,YAClB,MAAO,CAACl4H,KAAKq/H,8CAA8C2B,kBAAmBD,2BAGlF,GAAIE,kBAAkBxI,YAClB,MAAO,GAGX,GAAIwI,kBAAkBpwB,SAGlB,OAF2B,EAAA4pB,OAAA,SAAMwG,kBAAkB7oB,WAAWz3G,OAEnCqgI,kBAChB,CAACC,mBAGLjhI,KAAKw/H,8CAA8CwB,kBAAmBD,0BAGjF,GAAIE,kBAAkB5I,UAGlB,OAF2B,EAAAoC,OAAA,SAAMwG,kBAAkB7oB,WAAWz3G,OAEnCqgI,kBAChB,CAACC,mBAGRA,kBAAkB9C,iBAAiB6C,mBAC5B,CAAChhI,KAAK2+H,4CAA4CqC,kBAAmBD,2BAGzE/gI,KAAK0/H,+CAA+CsB,kBAAmBD,0BAGlF,MAAM,IAAI7uG,UAAJ,+CAAA1gB,OAA6DyvH,kBAAkB9B,QAA/E,4EAYoCjM,aAAcuI,UACxD,IACMyF,eADelhI,KAAK86H,eAAeW,UACL0F,uCAAuCjO,cAG3E,OAFoClzH,KAAKohI,mCAAmCF,sFAclChO,aAAcuI,UACxD,IACMyF,eADqBlhI,KAAK86H,eAAeW,UACL4F,sCAAsCnO,cAGhF,OAFoClzH,KAAKohI,mCAAmCF,uFAcjChO,aAAcuI,UACzD,IACMyF,eADoBlhI,KAAK86H,eAAeW,UACL0F,uCAAuCjO,cAGhF,OAFoClzH,KAAKohI,mCAAmCF,qFAcnCjB,aAAcxE,UACvD,IAAMyE,mBAAqBlgI,KAAK86H,eAAeW,UACzCzB,cAAgBkG,mBAAmB3C,mBACnC8C,YAAcH,mBAAmB5C,iBACjCgE,wBAAyB,EAAA1G,qBAAA2F,+BAA8BN,aAAcjG,cAAeqG,aAG1F,OAFuB,IAAI1F,UAAA,QAAS2G,4FAcIjB,YAAa5E,UACrD,IAAMwF,kBAAoBjhI,KAAK86H,eAAeW,UACxCzB,cAAgBiH,kBAAkB1D,mBAClC0C,aAAegB,kBAAkBT,kBACjCc,wBAAyB,EAAA1G,qBAAA2F,+BAA8BN,aAAcjG,cAAeqG,aAG1F,OAFuB,IAAI1F,UAAA,QAAS2G,6FAcKpO,aAAcuI,UACvD,IACMyF,eADgBlhI,KAAK86H,eAAeW,UACL4F,sCAAsCnO,cAG3E,OAFoClzH,KAAKohI,mCAAmCF,2EAc7CA,gBAC/B,OAAO,EAAAp7B,MAAA,SAAKo7B,eAAgB,SAACziB,eAAD,OAAmB,IAAIkc,UAAA,QAASlc,cAAc99G,+DAY/CqqG,aAC3B,KAAK,EAAAwvB,WAAA,SAAUxvB,aACX,MAAM,IAAI94E,UAAJ,2DAAA1gB,OAAAiiG,QAAgFzI,aAAhF,MAGV,GAAIA,YAAYx+F,QAAQ,OAASusF,iBAAA4f,cAC7B,MAAM,IAAIzmF,UAAJ,uEAAA1gB,OAAqFw5F,YAArF,MAOV,IAJA,IAAMu2B,oBAAsBv2B,YAAYvzF,MAAMg6G,gBAAAuO,wBACxCwB,oBAAsB,GAGnBnlI,EAAI,EAAGA,EAAIklI,oBAAoBvkI,OAAQX,IAAK,CACjD,IACMolI,gBADqBF,oBAAoBllI,GACJob,MAAMg6G,gBAAA8C,qCAC3CmN,aAAeD,gBAAgBjvH,OAAO,EAAG,GACzCmvH,SAAQ,CACVD,cADUlwH,OAAAuqF,oBAEP,EAAAs+B,QAAA,SAAOoH,gBAAiB,KAG/BD,oBAAoBh+H,KAAKk+H,aAAax9H,KAAKutH,gBAAA8C,sCAE3C,IAAK,IAAIzoG,EAAI,EAAGA,EAAI61G,SAAS3kI,OAAQ8uB,IAAK,CACtC,IAAM81G,uBAAwB,EAAAnH,OAAA,SAAMkH,SAAS71G,EAAI,IAC3C+1G,0BAA4BF,SAAS71G,GAAG5nB,KAAKutH,gBAAA8C,qCAEnDiN,oBAAoBh+H,KAApB,GAAAgO,OAA4BowH,sBAA5B,KAAApwH,OAAqDqwH,6BAI7D,OAAOL,sFAY+BvG,YACtC,IAAM6G,2BAA4B,EAAAh8B,MAAA,SAAK9lG,KAAKo4G,UAAW,SAACqG,eAAD,OAAmBA,cAAc99G,OAClFohI,wBAAyB,EAAAj8B,MAAA,SAAKm1B,WAAW7iB,UAAW,SAACqG,eAAD,OAAmBA,cAAc99G,OAE3F,OAAO,EAAA25H,QAAA,UAAO,EAAAC,eAAA,SAAcuH,0BAA2BC,uFAUrB7O,cAClC,OAAO,EAAAxZ,YAAA,SAAW15G,KAAK86H,eAAgB,SAACa,UAAD,OAAcA,SAAS3I,gBAAgBE,2DAe9E,OAAO,EAAAxZ,YAAA,SAAW15G,KAAK86H,eAAgB,SAACa,UAAD,OAAcA,SAAS9qB,iDAc9D,OAAO7wG,KAAK86H,eAAehuF,KAAK,SAAC6uF,UAAD,OAAcA,SAAS9qB,uDAevD,OAAO,EAAA6I,YAAA,SAAW15G,KAAK86H,eAAgB,SAACa,UAAD,OAAcA,SAAStD,iEAYrCrtB,aACzB,IAAM22B,SAAW3hI,KAAKgiI,+BAA+Bh3B,aAKrD,OAJa,EAAAlF,MAAA,SAAK67B,SAAU,SAACM,oBACzB,OAAO,IAAItH,UAAA,QAASsH,4EAcxB,MAAA,GAAAzwH,OAAAuqF,mBACO/7F,KAAK+6H,wBADZh/B,mBAEO/7F,KAAK86H,6EAoBoBkG,kBAAmBN,gBAAiBzF,YACpE,IAAMqE,cAAgBt/H,KAAK86H,eAAen0H,MAAM,GAC1Co6H,yBAA2B/gI,KAAK07H,sCAAsCsF,mBACtEP,0BAA4BzgI,KAAK07H,sCAAsCgF,iBACvEwB,0BAA4BliI,KAAKmiI,2BAA2BpB,yBAA0BC,mBACtFoB,2BAA6BpiI,KAAKqiI,4BAA4B5B,0BAA2BC,iBACzF4B,oBAAsBhD,cAAc9sH,OAAOiuH,0BAA4B,GAE7EnB,cAAc9sH,OAAOuuH,0BAErB,IAAMwB,uBAAyBjD,cAE/Bt/H,KAAK86H,eAAL,GAAAtpH,OAAAuqF,mBACOwmC,wBADPxmC,mBAEOmmC,2BAFPnmC,mBAGOk/B,WAAWqE,eAHlBvjC,mBAIOqmC,4BAJPrmC,mBAKOumC,sBAGP,IAAMj6B,SAAW,GAIjB,OAHAA,SAAS5nG,IAAT,iBAAA+Q,OAAgCxR,KAAKk0H,4BACrC7rB,SAASnB,IAAM,yBAER,EAAC,EAAMmB,yEAeqBm6B,uBAAwBvH,YAC3D,IAAMwF,0BAA4BzgI,KAAK07H,sCAAsC8G,wBACvEtC,mBAAqBlgI,KAAK86H,eAAe2F,2BAE/C,GAAIP,mBAAmBhI,YACnB,OAAOl4H,KAAKyiI,gCAAgCD,uBAAwBvH,YAGxE,GAAIiF,mBAAmBzH,YACnB,OAAOz4H,KAAK0iI,gCAAgCF,uBAAwBvH,YAGxE,GAAIiF,mBAAmBrvB,SACnB,OAAO7wG,KAAK2iI,6BAA6BH,uBAAwBvH,YAGrE,GAAIiF,mBAAmB7H,UACnB,OAAOr4H,KAAK4iI,8BAA8BJ,uBAAwBvH,YAGtE,MAAM,IAAI/oG,UAAU,0CAAA1gB,OAA0C0uH,mBAAmBf,QAA7D,MAChB,6IAawBqD,uBAAwBvH,YACpD,IAAMwF,0BAA4BzgI,KAAK07H,sCAAsC8G,wBACvEpD,iBAAmBp/H,KAAK2gI,+CAC1B6B,uBACA/B,2BAGJzgI,KAAK86H,eAAL,GAAAtpH,OAAAuqF,mBACOk/B,WAAWqE,eADlB,CAEIF,kBAFJrjC,mBAGO/7F,KAAK86H,eAAetoH,OAAOiuH,0BAA4B,KAG9D,IAAMp4B,SAAW,GAIjB,OAHAA,SAAS5nG,IAAT,iBAAA+Q,OAAgCxR,KAAKk0H,4BACrC7rB,SAASnB,IAAM,yBAER,EAAC,EAAMmB,kEAacm6B,uBAAwBvH,YACpD,IAAMwF,0BAA4BzgI,KAAK07H,sCAAsC8G,wBAE7ExiI,KAAK86H,eAAL,GAAAtpH,OAAAuqF,mBACOk/B,WAAWqE,eADlBvjC,mBAEO/7F,KAAK86H,eAAetoH,OAAOiuH,0BAA4B,KAG9D,IAAMp4B,SAAW,GAIjB,OAHAA,SAAS5nG,IAAT,iBAAA+Q,OAAgCxR,KAAKk0H,4BACrC7rB,SAASnB,IAAM,yBAER,EAAC,EAAMmB,+DAaWm6B,uBAAwBvH,YACjD,IAAMwF,0BAA4BzgI,KAAK07H,sCAAsC8G,wBACvEjD,4BAA8Bv/H,KAAK4gI,6CACrC4B,uBACA/B,2BAGJzgI,KAAK86H,eAAL,GAAAtpH,OAAAuqF,mBACOk/B,WAAWqE,eADlBvjC,mBAEOwjC,6BAFPxjC,mBAGO/7F,KAAK86H,eAAetoH,OAAOiuH,0BAA4B,KAG9D,IAAMp4B,SAAW,GAIjB,OAHAA,SAAS5nG,IAAT,iBAAA+Q,OAAgCxR,KAAKk0H,4BACrC7rB,SAASnB,IAAM,yBAER,EAAC,EAAMmB,gEAaYm6B,uBAAwBvH,YAClD,IAAMwF,0BAA4BzgI,KAAK07H,sCAAsC8G,wBAG7E,GAF2BxiI,KAAK86H,eAAe2F,2BAExBzC,kBAAkBwE,wBAAyB,CAC9D,IAAM/C,eAAiBz/H,KAAK6gI,6CACxB2B,uBACA/B,2BAGJzgI,KAAK86H,eAAL,GAAAtpH,OAAAuqF,mBACOk/B,WAAWqE,eADlB,CAEIG,gBAFJ1jC,mBAGO/7F,KAAK86H,eAAetoH,OAAOiuH,0BAA4B,KAG9D,IAAM9K,WAAW,GAIjB,OAHAA,WAASl1H,IAAT,iBAAA+Q,OAAgCxR,KAAKk0H,4BACrCyB,WAASzuB,IAAM,yBAER,EAAC,EAAMyuB,YAGlB,IAAM4J,4BAA8Bv/H,KAAK8gI,8CACrC0B,uBACA/B,2BAGJzgI,KAAK86H,eAAL,GAAAtpH,OAAAuqF,mBACOk/B,WAAWqE,eADlBvjC,mBAEOwjC,6BAFPxjC,mBAGO/7F,KAAK86H,eAAetoH,OAAOiuH,0BAA4B,KAG9D,IAAMp4B,SAAW,GAIjB,OAHAA,SAAS5nG,IAAT,iBAAA+Q,OAAgCxR,KAAKk0H,4BACrC7rB,SAASnB,IAAM,yBAER,EAAC,EAAMmB,6CAzpDd,GAAIroG,KAAK86H,eAAe99H,OAAS,EAC7B,MAAM,IAAIk1B,UAAU,kDAGxB,OAAOlyB,KAAK86H,eAAe,2CAW3B,OAAO96H,KAAK4wG,WAAWoW,sDAWvB,OAAOhnH,KAAK86H,+CAWZ,OAAK96H,KAAK49H,aAIH59H,KAAK86H,eAAe,GAHhB,0CAcX,OAAK96H,KAAKgoH,kBAINhoH,KAAK4wG,WAAWoX,kBACThoH,KAAK4wG,WAAWmjB,aAGpB/zH,KAAK69H,QAAQ7W,gBAPT,uCAkBX,OAAO,EAAA0T,SAAA,SAAQ16H,KAAK86H,eAAgB,SAAC+H,aAAclH,UAC/C,OAAOkH,aAAarxH,OAAOmqH,SAASvjB,YACrC,6tBCzJX,IAAA0qB,UAAA/0C,uBAAAvxF,QAAA,mBACAq9G,UAAA9rB,uBAAAvxF,QAAA,mBACAumI,WAAAh1C,uBAAAvxF,QAAA,oBACAo8F,eAAA7K,uBAAAvxF,QAAA,0CACAu8F,iBAAAv8F,QAAA,mCAIAwmI,mBAAAxmI,QAAA,qCAMAo+H,qBAAAp+H,QAAA,uCACA6pG,gBAAA7pG,QAAA,+lCAcqBymI,yBAKjB,SAAAA,cAAYr9H,MACR,iIADckpF,CAAA9uF,KAAAijI,eACM,iBAATr9H,QAAsB,EAAAk9H,UAAA,SAASl9H,MACtC,MAAM,IAAIssB,UAAJ,4DAAA1gB,OAA0E5L,OAGpF5F,KAAKqpH,gBAAkBtwB,iBAAA2K,eACvB1jG,KAAKypH,gBAAkB1wB,iBAAA2K,eACvB1jG,KAAKkjI,cAAgBnqC,iBAAA2K,eACrB1jG,KAAKmjI,cAAgBpqC,iBAAA2K,eACrB1jG,KAAKojI,uBAAyBx4G,OAAOioF,OAAO,GAAImwB,mBAAAK,yBAChDrjI,KAAKsjI,gBAAkB14G,OAAOioF,OAAO,GAAImwB,mBAAAK,yBACzCrjI,KAAKujI,oBAAqB,EAC1BvjI,KAAKwjI,iBAAkB,EACvBxjI,KAAKyjI,mBAAoB,EACzBzjI,KAAKqI,MAAQ,GACbrI,KAAK0jI,eAAiB,KAEtB1jI,KAAKojC,KAAKx9B,sHA6MTA,MACD,IAAIujG,QAAUvjG,KACV+9H,aAAe,GAEnB,IAAI,EAAAb,UAAA,SAASl9H,MAAO,CAChB,GAAoB,IAAhBA,KAAK5I,OACL,MAAM,IAAIk1B,UAAJ,8DAAA1gB,OAA4E5L,OAFtE,IAAA02C,MAAA6/C,eAKUv2F,KALV,GAKfujG,QALe7sD,MAAA,GAKNqnF,aALMrnF,MAAA,GAQpBt8C,KAAKqI,MAAQ8gG,QAAQjkG,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAEnDlF,KAAK4jI,qBAAqBz6B,SAC1BnpG,KAAK6jI,mBAAmBF,cACxB3jI,KAAK8jI,sDAuBL,OAZA9jI,KAAKqpH,gBAAkBtwB,iBAAA2K,eACvB1jG,KAAKypH,gBAAkB1wB,iBAAA2K,eACvB1jG,KAAKkjI,cAAgBnqC,iBAAA2K,eACrB1jG,KAAKmjI,cAAgBpqC,iBAAA2K,eACrB1jG,KAAKojI,uBAAyBx4G,OAAOioF,OAAO,GAAImwB,mBAAAK,yBAChDrjI,KAAKsjI,gBAAkB14G,OAAOioF,OAAO,GAAImwB,mBAAAK,yBACzCrjI,KAAKujI,oBAAqB,EAC1BvjI,KAAKwjI,iBAAkB,EACvBxjI,KAAKyjI,mBAAoB,EACzBzjI,KAAKqI,MAAQ,GACbrI,KAAK0jI,eAAiB,KAEf1jI,oDAWPA,KAAKujI,oBAAqB,8CAW1BvjI,KAAKwjI,iBAAkB,+CAUNr6B,SACbA,QAAQ38F,QAAQ,OAASusF,iBAAA4f,cAMzBxP,QAAQ38F,QAAQ,OAASusF,iBAAA4f,cAMzBxP,QAAQ38F,QAAQ,OAASusF,iBAAA4f,eACzB34G,KAAK+jI,sBANL/jI,KAAKgkI,oBANLhkI,KAAKikI,qEAwBTjkI,KAAKyjI,mBAAoB,yCAYzBzjI,KAAKwjI,iBAAkB,qDAWA/kB,eAGvB,OAFAz+G,KAAKkkI,4CAA4CzlB,eAE1Cz+G,KAAK0jI,eAAexd,kBAAkBzH,cAAc9Z,mEAWnC8Z,eAGxB,OAFAz+G,KAAKkkI,4CAA4CzlB,eAE1Cz+G,KAAK0jI,eAAe7kB,mBAAmBJ,cAAc9Z,wDAU5D3kG,KAAKwjI,iBAAkB,2CAavB,OAAIxjI,KAAKqI,MAAMmE,QAAQw2H,mBAAAmB,wBAA0BprC,iBAAA4f,cACtCqqB,mBAAAoB,2BAGJpkI,KAAKqI,0CAWZ,GAAKrI,KAAKyjI,kBAAV,CAIA,IAAMY,wBAA0BrkI,KAAKqI,MAAMnD,QAAQ,IAAK,IAClDo/H,iBAAmB93G,SAAS63G,wBAAyBh+B,gBAAAk+B,eAG3D,OAFyB,EAAAl+B,gBAAAqD,kBAAiB46B,uEAalB37B,UACxB,OAAO3oG,KAAKqpH,kBAAoBtwB,iBAAA2K,gBAAkB1jG,KAAKqpH,iBAAmB1gB,6DAWlDA,UACxB,OAAO3oG,KAAKypH,kBAAoB1wB,iBAAA2K,gBAAkB1jG,KAAKypH,iBAAmB9gB,0DAWrDj1C,OACrB,IAAM8wE,SAAWxkI,KAAK2+G,aAEtB,OAAO6lB,WAAazrC,iBAAA2K,gBAAkB8gC,UAAY9wE,uDAW7BA,OACrB,OAAO1zD,KAAKkrH,eAAiBnyB,iBAAA2K,gBAAkB1jG,KAAKkrH,cAAgBx3D,+CAUpE1zD,KAAKsjI,gBAAgB1wE,MAAQowE,mBAAAK,wBAAwBzwE,uCAUhDc,OACL1zD,KAAKykI,gBAAgB/wE,OACrB1zD,KAAK0kI,gBAAgBhxE,+CAUTirD,eACP,EAAAokB,WAAA,SAAUpkB,cAOf3+G,KAAKkjI,cAAgBvkB,aANjBlyF,QAAQ4tB,KAAK,oDAAA7oC,OAAoDxR,KAAKW,KAAzD,OAAA,iBAAA6Q,OACQmtG,aADR,8CAgBLuM,eACP,EAAA6X,WAAA,SAAU7X,cAOflrH,KAAKmjI,cAAgBjY,aANjBz+F,QAAQ4tB,KAAK,wDAAA7oC,OAAwDxR,KAAKW,KAA7D,OAAA,iBAAA6Q,OACQ05G,aADR,0CAgBTviB,UACR3oG,KAAK2kI,mBAAmBh8B,UACxB3oG,KAAK4kI,mBAAmBj8B,qDAUT0gB,kBACV,EAAA0Z,WAAA,SAAU1Z,iBAOXA,gBAAkB,GAAuB,IAAlBA,gBACvB58F,QAAQ4tB,KAAK,gCAAA7oC,OAAgCxR,KAAKqI,MAArC,qCAAA,6BAAAmJ,OACoB63G,gBADpB,MAMjBrpH,KAAKqpH,gBAAkBA,gBAbnB58F,QAAQ4tB,KAAK,uDAAA7oC,OAAuDxR,KAAKqI,MAA5D,OAAA,iBAAAmJ,OACQ63G,gBADR,iDAuBFI,kBACV,EAAAsZ,WAAA,SAAUtZ,iBAOXA,gBAAkB,GAAuB,IAAlBA,gBACvBh9F,QAAQ4tB,KAAK,gCAAA7oC,OAAgCxR,KAAKqI,MAArC,qCAAA,sCAAAmJ,OAC6Bi4G,gBAD7B,MAMjBzpH,KAAKypH,gBAAkBA,gBAbnBh9F,QAAQ4tB,KAAK,uDAAA7oC,OAAuDxR,KAAKqI,MAA5D,OAAA,iBAAAmJ,OACQi4G,gBADR,uDA0BIlgB,gBASrBvpG,KAAKojI,uBAAyBx4G,OAAOioF,OAAO,GAAImwB,mBAAAK,wBAAyB95B,gBACzEvpG,KAAKsjI,gBAAkB14G,OAAOioF,OAAO,GAAImwB,mBAAAK,wBAAyB95B,0DAcpDA,eAAgBD,wBAC9B,IAAM5nG,OAASkpB,OAAOioF,OAAO,GAAI7yG,KAAKojI,uBAAwB75B,gBAQ9D,OAN6B,MAAzB7nG,OAAO8nG,iBACP9nG,OAAO8nG,eAAiBF,wBAG5BtpG,KAAKsjI,gBAAkB5hI,gEAgBM6nG,gBAAoD,IAApCD,uBAAoC,EAAAzkG,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,QAAXjC,EAChElB,OAAS1B,KAAK6kI,kBAAkBt7B,eAAgBD,wBAItD,OAFAtpG,KAAK8kI,eAEEpjI,4CAUEqjI,gBACT,GAA8B,iBAAnBA,eACP,MAAM,IAAI7yG,UAAU,+CAAA,6BAAA1gB,OAAAiiG,QACoBsxB,kBAG5C/kI,KAAKsjI,gBAAgB1wE,MAAQmyE,iEAYPC,aAAa,IAAAC,uBAAA9oC,gBACT,EAAAy+B,qBAAAsK,0BAAyBF,aADhB,GAC5Br8B,SAD4Bs8B,uBAAA,GAClBE,MADkBF,uBAAA,GAGnC,GAAgB,MAAZt8B,SACA,MAAM,IAAIhsG,MAAJ,qDAAA6U,OAA+DwzH,cAG3D,MAAVG,MAMU,MAAVA,OAMJnlI,KAAKqpH,gBAAkB1gB,SACvB3oG,KAAKypH,gBAAkB9gB,UANnB3oG,KAAKqpH,gBAAkB1gB,SANvB3oG,KAAKypH,gBAAkB9gB,oDAsBZg7B,cACf,KAAI,EAAA9pB,UAAA,SAAS8pB,cAMb,IAFA,IAAMyB,sBAAwBzB,aAAalsH,MAAM,KAExCpb,EAAI,EAAGA,EAAI+oI,sBAAsBpoI,OAAQX,IAAK,CACnD,IAAM2oI,YAAcI,sBAAsB/oI,GAG1C,GAAuB,MAAnB2oI,YAAY,GACZhlI,KAAKqlI,0BAA0BL,iBAC5B,CAAA,GAAuB,MAAnBA,YAAY,GAGnB,MAAM,IAAI9yG,UAAU,8CAAA,wBAAA1gB,OACQwzH,YAAY,GADpB,MAFpBhlI,KAAKslI,uBAAuBN,8DAejBA,aAAa,IAAAO,uBAAAppC,gBACT,EAAAy+B,qBAAA4K,uBAAsBR,aADb,GACzBtxE,MADyB6xE,uBAAA,GAClBJ,MADkBI,uBAAA,GAGhC,GAAa,MAAT7xE,MACA,MAAM,IAAI/2D,MAAJ,kDAAA6U,OAA4DwzH,cAGxD,MAAVG,MAMU,MAAVA,OAMJnlI,KAAKkjI,cAAgBxvE,MACrB1zD,KAAKmjI,cAAgBzvE,OANjB1zD,KAAKkjI,cAAgBxvE,MANrB1zD,KAAKmjI,cAAgBzvE,0EA+Be+qD,eACxC,KAAMA,yBAAyBwkB,eAC3B,MAAM,IAAI/wG,UAAJ,yDAAA1gB,OAAuEitG,cAAvE,MAGV,GAAIz+G,KAAKyjI,mBAAqBhlB,cAAcwI,iBACxC,MAAM,IAAI/0F,UAAU,kIAWxB,IAAIlyB,KAAKyjI,kBAAT,CAIA,IAAMgC,YAAc7sC,eAAA,QAAc8sC,2BAA2B1lI,KAAKqI,OAElE,IAAKo9H,YACD,MAAM,IAAIvzG,UAAJ,0DAAA1gB,OAAwExR,KAAKqI,MAA7E,MAGVrI,KAAK0jI,eAAiB+B,kEA7vBtB,OAAOzlI,KAAKqpH,kBAAoBtwB,iBAAA2K,oEAWhC,OAAO1jG,KAAKypH,kBAAoB1wB,iBAAA2K,8DAWhC,OAAO1jG,KAAKwzH,8BAAgCxzH,KAAK2zH,oEAWjD,OAAO3zH,KAAK+7H,wBAA0B/7H,KAAKm0H,uEAW3C,OAAOn0H,KAAK2+G,eAAiB5lB,iBAAA2K,kEAW7B,OAAO1jG,KAAKkrH,eAAiBnyB,iBAAA2K,2DAW7B,OAAO1jG,KAAK2lI,4BAA8B3lI,KAAK4lI,kEAc/C,GAAK5lI,KAAKwjI,gBAIV,OAAOxjI,KAAKsjI,0DAcZ,OAAOtjI,KAAKujI,0DAWZ,OAAOvjI,KAAKwjI,yDAaZ,OAAOxjI,KAAKyjI,+CAWZ,OAAOzjI,KAAKqI,4CAWZ,OAAOrI,KAAK0jI,wDAWZ,IAAI1jI,KAAKinH,iBAIT,OAAOjnH,KAAK0jI,eAAe7nC,sDAS3B,OAAI77F,KAAKmnH,qBAAwDvkH,IAAtC5C,KAAKsjI,gBAAgB3kB,aACrC3+G,KAAKsjI,gBAAgB3kB,aAGzB3+G,KAAKkjI,mDASZ,OAAOljI,KAAKmjI,4jBCnPpB,IAAAn9B,sBAAAxpG,QAAA,0BAKAu8F,iBAAAv8F,QAAA,mCACA6pG,gBAAA7pG,QAAA,0TAOqBqpI,0BAKjB,SAAAA,gJAAc/2C,CAAA9uF,KAAA6lI,gBASV7lI,KAAK8lI,WAAY,EAYjB9lI,KAAKkiH,aAAelc,sBAAA6F,SAASsW,SAASC,IAStCpiH,KAAKwkH,cAAgBxe,sBAAA6F,SAAS4Y,UAAUrC,IAYxCpiH,KAAK4rG,YAAc5F,sBAAA6F,SAASC,QAAQsW,IAWpCpiH,KAAKisG,UAAYjG,sBAAA6F,SAASK,MAAMkW,IAahCpiH,KAAK2oG,SAAW5P,iBAAA2K,eAShB1jG,KAAK4lH,OAAS7sB,iBAAA2K,eAcd1jG,KAAKmoG,QAAUpP,iBAAA2K,eAWf1jG,KAAK0zD,MAAQqlC,iBAAA2K,eAWb1jG,KAAKosH,8BAA+B,EASpCpsH,KAAK+/G,UAAY,KASjB//G,KAAK+lI,aAAe,EAEpB/lI,KAAKojC,0HAoBL,OAAOpjC,sCAUHA,KAAK8lI,YAIT9lI,KAAK8lI,WAAY,EAEjB9lI,KAAKgmI,qBAAqBhgC,sBAAAuf,cAAcd,UAAWze,sBAAA6F,SAAS4Y,UAAUC,uCAUjE1kH,KAAK8lI,YAIV9lI,KAAK8lI,WAAY,EACjB9lI,KAAKgmI,qBAAqBhgC,sBAAAuf,cAAcd,UAAWze,sBAAA6F,SAAS4Y,UAAUrC,2CAU7D6jB,OACTjmI,KAAK+/G,UAAYkmB,8CAWLF,cACZ/lI,KAAK+lI,aAAeA,2DAUpB/lI,KAAKgmI,qBAAqBhgC,sBAAAuf,cAAcpD,SAAUnc,sBAAA6F,SAASsW,SAAS3D,wDAUlD7V,UAClB3oG,KAAKkmI,eAAelgC,sBAAAmgC,eAAehkB,SAAUxZ,oDAU7C3oG,KAAKgmI,qBAAqBhgC,sBAAAuf,cAAcpD,SAAUnc,sBAAA6F,SAASsW,SAASpW,gDAUpE/rG,KAAKgmI,qBAAqBhgC,sBAAAuf,cAAcpD,SAAUnc,sBAAA6F,SAASsW,SAASiD,kDAUpDQ,QAChB5lH,KAAKkmI,eAAelgC,sBAAAmgC,eAAeC,OAAQxgB,qDAU1Bzd,SACjBnoG,KAAKkmI,eAAelgC,sBAAAmgC,eAAer6B,QAAS3D,kDAU5CnoG,KAAKgmI,qBAAqBhgC,sBAAAuf,cAAczZ,QAAS9F,sBAAA6F,SAASC,QAAQC,+CAUlE/rG,KAAKgmI,qBAAqBhgC,sBAAAuf,cAAczZ,QAAS9F,sBAAA6F,SAASC,QAAQ6Y,iDAUlE3kH,KAAKgmI,qBAAqBhgC,sBAAAuf,cAAczZ,QAAS9F,sBAAA6F,SAASC,QAAQgZ,oDAUnDpxD,OACf1zD,KAAKkmI,eAAelgC,sBAAAmgC,eAAej6B,MAAOx4C,8CAU1C1zD,KAAKgmI,qBAAqBhgC,sBAAAuf,cAAcrZ,MAAOlG,sBAAA6F,SAASK,MAAMH,2CAU9D/rG,KAAKgmI,qBAAqBhgC,sBAAAuf,cAAcrZ,MAAOlG,sBAAA6F,SAASK,MAAMiZ,2CAU9DnlH,KAAKgmI,qBAAqBhgC,sBAAAuf,cAAcrZ,MAAOlG,sBAAA6F,SAASK,MAAMkZ,0DActC5J,eAAgBE,gBAAiB2qB,gBAAiBC,eAAgBC,cAE1F,IAAMC,gBAAkBzzG,KAAKw5C,IAAIivC,eAAgBE,gBAAiB2qB,iBAElErmI,KAAKi+G,sBAAsBuoB,iBAC3BxmI,KAAKymI,mBAGmB,IAApBjrB,iBACAx7G,KAAKi+G,sBAAsBlrF,KAAKw5C,IAAImvC,gBAAiB2qB,kBACrDrmI,KAAKk+G,mBAGTl+G,KAAKm+G,qBAAqBmoB,gBAC1BtmI,KAAKsrG,iBACLtrG,KAAKqiH,mBAAmBkkB,cACxBvmI,KAAK0mI,eACL1mI,KAAKoyF,gDAWMu0C,UAAWnhI,OACtBxF,KAAK2mI,WAAanhI,mDAWDohI,aAAcC,MAC/B7mI,KAAK4mI,cAAgBC,8CA7PrB,OAAO9zG,KAAKC,OAAM,EAAAqzE,gBAAAwG,kBAAiB7sG,KAAKmoG,4iBCvJzC,IAAM2+B,kBAAoB,CAC7B/6B,KAAM,OACNyS,SAAU,WACVuoB,aAAc,eACd3kB,IAAK,MACL4kB,eAAgB,iBAChB5hB,KAAM,QAWG6hB,mBAAqB,CAC9BviB,GAAI,KACJtC,IAAK,OAWI8kB,iBAAmB,CAC5Bn7B,KAAM,OACN4Y,KAAM,OACNvC,IAAK,MACL0C,QAAS,WAWAqiB,eAAiB,CAC1BJ,aAAc,eACd5hB,GAAI,KACJ/C,IAAK,MACLrW,KAAM,OACNqZ,KAAM,QAUGvZ,SAAW,CACpBsW,qDACAsC,wDACA3Y,kDACAI,6FAUyB,CACzBiW,SAAU,eACVsC,UAAW,gBACX3Y,QAAS,cACTI,MAAO,oCAUmB,CAC1BiW,SAAU,WACVikB,OAAQ,SACRt6B,QAAS,UACTI,MAAO,+ICpGX,IAAAsN,OAAAzrB,uBAAAvxF,QAAA,gBACAg1G,OAAAzjB,uBAAAvxF,QAAA,gBACAm9G,QAAA5rB,uBAAAvxF,QAAA,iBACAwxF,QAAAD,uBAAAvxF,QAAA,iBACAq2F,mBAAA9E,uBAAAvxF,QAAA,oCACAw9G,KAAAjsB,uBAAAvxF,QAAA,kCACAy9G,gBAAAlsB,uBAAAvxF,QAAA,kCACA+2F,mBAAAxF,uBAAAvxF,QAAA,8CACAwpG,sBAAAxpG,QAAA,uCACAypG,mBAAAzpG,QAAA,qCACAu8F,iBAAAv8F,QAAA,mCACA0pG,QAAA1pG,QAAA,qBACA4pG,gBAAA5pG,QAAA,kCASA6pG,gBAAA7pG,QAAA,+lCAYqB4qI,iBAOjB,SAAAA,MAAYh9B,IAAKi9B,gBACb,iIAD6Bv4C,CAAA9uF,KAAAonI,SACvBh9B,eAAe4P,KAAA,SACjB,MAAM,IAAI9nF,UAAJ,mDAAA1gB,OAAAiiG,QAAwErJ,OAGlF,KAAMi9B,0BAA0BptB,gBAAA,SAC5B,MAAM,IAAI/nF,UAAU,6CAAA,gCAAA1gB,OAAAiiG,QACuB4zB,kBAuC/C,OA9BArnI,KAAKsnI,KAAO,KAQZtnI,KAAKunI,KAAO,KAUZvnI,KAAKwoG,sBAAuB,EAU5BxoG,KAAKktG,uBAAwB,EAEtBltG,KAAKojC,KAAKgnE,IAAKi9B,wHAQrBj9B,IAAKi9B,gBAMN,OALArnI,KAAKsnI,KAAOl9B,IACZpqG,KAAKunI,KAAOF,eACZrnI,KAAKwoG,sBAAuB,EAC5BxoG,KAAKktG,uBAAwB,EAEtBltG,qCAcP,OALAA,KAAKsnI,KAAO,KACZtnI,KAAKunI,KAAO,KACZvnI,KAAKwoG,sBAAuB,EAC5BxoG,KAAKktG,uBAAwB,EAEtBltG,8CAeM2oG,SAAU6+B,SAAU1/B,qBAAsBiC,aAAc5Q,eACrE,IAAMt7B,SAAWs7B,cAAcsuC,qBAAqB9+B,SAAUoB,cAE9D,IAAKlsC,SAAS,GACV,OAAOA,SAGX,IAAMwoE,gBAAkBltC,cAAcwP,SAClC++B,gBAAkB39B,aAAa49B,+BAA+Bh/B,UAE9Db,sBAAwB4/B,kBAAoB39B,aAAa4R,wBAEzD+rB,iBAAmB,GAGvB1nI,KAAKyoG,wBAAwBtP,eAC7Bn5F,KAAKunI,KAAKtpB,sBAAsBypB,iBAChC1nI,KAAKunI,KAAKrpB,kBACVl+G,KAAKunI,KAAKnb,8BAA+B,EAGzC,IAAMwb,kBAAmB,EAAAjuB,QAAA,SAAO+tB,iBAAkB,GAC5CG,qBAAsB,EAAAzhC,gBAAA0hC,aAAY,WAAYzB,gBAAiB19B,UAC/Do/B,gBAAiB,EAAA3hC,gBAAAqF,gBAAem8B,kBAClCI,iBAAmB,GAEnBR,WACAxnI,KAAKunI,KAAKnb,8BAA+B,EAGzC4b,iBAAmB,iBAGvB,IAAM3/B,SAAW,GAIjB,OAHAA,SAAS5nG,IAAT,GAAA+Q,OAAkBq2H,oBAAlB,KAAAr2H,OAAyCo2H,kBAAzCp2H,OAA4Dw2H,kBAC5D3/B,SAASnB,IAAT,GAAA11F,OAAkBq2H,oBAAlB,KAAAr2H,OAAyCu2H,gBAAzCv2H,OAA0Dw2H,kBAEnD,EAAC,EAAM3/B,kDAeFlP,cAAemrC,iBAAkBp8B,UAAWE,aACxD,IAAM6/B,sBAAuB,EAAA5hC,gBAAAqD,kBAAiB46B,kBAC1C4D,iBAAmBD,qBAEnB7/B,cAEA8/B,kBAAmB,EAAAhiC,QAAAuD,mBAAkBtQ,cAAcgP,QAAU8/B,sBAE3C,UAAd//B,YACAggC,kBAAmB,EAAAhiC,QAAAuD,mBAAkBtQ,cAAcgP,QAAU8/B,wBAIrEjoI,KAAKyoG,wBAAwBtP,eAC7Bn5F,KAAK6pG,uBACL7pG,KAAKunI,KAAKppB,qBAAqB+pB,kBAC/BloI,KAAKunI,KAAKnpB,iBAEV,IAAM+pB,YAAa,EAAA9hC,gBAAAqF,mBAAkBw8B,kBAC/B7/B,SAAW,GAYjB,OAXAA,SAAS5nG,IAAT,eAAA+Q,OAA8B22H,YAC9B9/B,SAASnB,IAAT,eAAA11F,QAA8B,EAAA40F,gBAAAuF,eAAcw8B,aAExC//B,aACAC,SAAS5nG,IAAT,QAAA+Q,OAAuB8yH,iBAAvB,aAAA9yH,OAAmD02F,WACnDG,SAASnB,IAAT,QAAA11F,QAAuB,EAAA40F,gBAAA8W,cAAaonB,kBAApC,aAAA9yH,OAAiE02F,YAC1DA,YACPG,SAAS5nG,IAAT,QAAA+Q,OAAuB02F,UAAvB,aAAA12F,OAA4C22H,YAC5C9/B,SAASnB,IAAT,QAAA11F,OAAuB02F,UAAvB,aAAA12F,QAA4C,EAAA40F,gBAAAuF,eAAcw8B,cAGvD,EAAC,EAAM9/B,yDAWKlP,eACnBn5F,KAAKyoG,wBAAwBtP,eAC7Bn5F,KAAKunI,KAAKppB,qBAAqBhlB,cAAcgP,SAC7CnoG,KAAKunI,KAAKnpB,iBAEV,IAAM/V,SAAW,GACX+/B,gBACFjvC,cAAcsR,cAAgBxE,mBAAAc,aAAa8P,SAAW1d,cAAcsR,cAAgBxE,mBAAAc,aAAaC,QACjG,SAAW,UAIf,OAHAqB,SAAS5nG,IAAT,OAAA+Q,OAAsB42H,gBAAtB,YACA//B,SAASnB,IAAT,OAAA11F,OAAsB42H,gBAAtB,YAEO,EAAC,EAAM//B,gDAYJ30C,MAAOylC,eACjB,IAAKA,cAAcgf,MAAM6W,sBAAsBt7D,OAAQ,CACnD,IAAM24C,UAAW,GAIjB,OAHAA,UAAS5rG,IAAT,sBAAA+Q,OAAqCkiD,MAArC,6BACA24C,UAASnF,IAAT,sBAAA11F,QAAqC,EAAA40F,gBAAA4F,gBAAet4C,OAApD,6BAEO,EAAC,EAAO24C,WAGnB,IAAMk6B,aAAeptC,cAAczlC,MAC7B20E,aAAc,EAAAjiC,gBAAA0hC,aAAY,QAASvB,aAAc7yE,OAEvD1zD,KAAKunI,KAAKllB,mBAAmB3uD,OAC7B1zD,KAAKunI,KAAKe,eAGV,IAAMjgC,SAAW,GAIjB,OAHAA,SAAS5nG,IAAT,GAAA+Q,OAAkB62H,YAAlB,KAAA72H,OAAiCkiD,OACjC20C,SAASnB,IAAT,GAAA11F,OAAkB62H,YAAlB,KAAA72H,QAAiC,EAAA40F,gBAAA4F,gBAAet4C,QAEzC,EAAC,EAAM20C,wDAaI2C,YAAalb,aAAa,IAAAy4C,uBAAApsC,eACbn8F,KAAKsnI,KAAK5S,wBAAwB1pB,aADrB,GACrC5I,WADqCmmC,uBAAA,GACzB1qE,SADyB0qE,uBAAA,GAG5C,IAAKnmC,WACD,MAAO,EAAC,EAAOvkC,UAGnB79D,KAAK6pG,uBAGL,IAAMxB,SAAW,GAIjB,OAHAA,SAAS5nG,IAAT,cAAA+Q,OAA6Bs+E,YAA7B,aAAAt+E,OAAoDxR,KAAKsnI,KAAK1V,YAAYgE,cAAcr6E,cAAxF,YACA8sD,SAASnB,IAAT,cAAA11F,OAA6Bs+E,YAA7B,aAAAt+E,OAAoDxR,KAAKsnI,KAAK1V,YAAYiE,cAAct6E,cAAxF,YAEO,EAAC,EAAM8sD,0DAaM2C,YAAa9H,aAAa,IAAAslC,uBAAArsC,eACfn8F,KAAKsnI,KAAKjS,0BAA0BrqB,YAAa9H,aADlC,GACvCd,WADuComC,uBAAA,GAC3B3qE,SAD2B2qE,uBAAA,GAG9C,IAAKpmC,WACD,MAAO,EAAC,EAAOvkC,UAGnB79D,KAAKktG,uBAAwB,EAE7B,IAAMu7B,QAAUzoI,KAAKsnI,KAAKh6B,aACpBo7B,QAAU1oI,KAAKsnI,KAAK/5B,aACpBlF,SAAW,GAIjB,OAHAA,SAAS5nG,IAAT,kCAAA+Q,OAAiDi3H,QAAQltF,cAAzD,6BACA8sD,SAASnB,IAAT,kCAAA11F,OAAiDk3H,QAAQntF,cAAzD,6BAEO,EAAC,EAAM8sD,6DAWS2C,aACvB,IAAM3C,SAAWroG,KAAKsnI,KAAKn8B,2BAA2BH,aAQtD,OANI3C,SAAS,KACTroG,KAAKktG,uBAAwB,EAE7BltG,KAAK6pG,wBAGFxB,+DAamBtW,SAAUyjC,iBACpC,OAAIzjC,SAASod,aACF,EAAC,EAAO,6DAGZnvG,KAAKsnI,KAAK98B,8BAA8BgrB,iEAc3Br8B,eACpB,IAAKn5F,KAAKwoG,qBACN,MAAO,EAAC,EAAO,4CAGnB,IAAM/Y,QAAUoD,mBAAA,QAAkBkV,cAC5Bs+B,iBAAkB,EAAA1sB,QAAA,SAAOxgB,cAAcwP,UAAW,GAClD69B,gBAAkBzzG,KAAKw5C,IAAI85D,gBAAiBrmI,KAAKunI,KAAK5+B,UACtDggC,mBAAqB51G,KAAKi6B,IAAIw5E,gBAAiB/2C,QAAQo/B,uBAE7D7uH,KAAKunI,KAAKtpB,sBAAsB0qB,oBAChC3oI,KAAKunI,KAAKrpB,kBACVl+G,KAAKunI,KAAKppB,qBAAqBhlB,cAAcgP,SAC7CnoG,KAAKunI,KAAKnpB,iBACVp+G,KAAKunI,KAAKe,eAOV,MAAO,GALPtoI,KAAKwoG,sBAAuB,GAEX,8IAcIrP,eACrB,IAAIA,cAAc6T,aAMlB,MAAO,GAFPhtG,KAAKktG,uBAAwB,GAEf,0GAWG/D,SACjB,IAAIy/B,mBAAoB,EAAAp3B,OAAA,SAAMxxG,KAAKsnI,KAAKlvB,UAAW,SAACqG,eAAD,OAAmBA,cAAc0I,iBAEpF,OAAKyhB,mBAIDz/B,UACAy/B,kBAAoB5oI,KAAKsnI,KAAKuB,aAAa1/B,WAEhBy/B,kBAAkBzhB,gBAQjDyhB,kBAAkBE,iBAEX,EAAC,EAAM,CACVroI,IAAG,mCAAA+Q,OAAqCo3H,kBAAkBG,kBAC1D7hC,IAAG,mCAAA11F,OAAqC+hF,mBAAA,QAAkB6/B,iBAAiBwV,kBAAkBjoI,UAXlF,EAAC,EAAO,CACXF,IAAG,iEAAA+Q,OAAmE23F,QAAQ5tD,eAC9E2rD,IAAG,iEAAA11F,OAAmE+hF,mBAAA,QAAkB6/B,iBAAiBjqB,YAT1G,EAAC,EAAO,sHAgCnB,IAAMd,SAAW,CACjB5nG,IAAe,kCACfymG,IAAe,mCAEf,MAAO,CANPlnG,KAAKktG,uBAAwB,EAMf7E,8CAiBNlP,cAAe6vC,iBACvB,IAAIra,aAAeqa,qBAGS,IAAjBra,eACPA,aAAe3uH,KAAKsnI,KAAKhrB,oBALW,IAQhC6D,sBAA0BngH,KAAKsnI,KAA/BnnB,sBACF8oB,cAAgB9vC,cAAcsuC,qBAAqB9Y,aAAcxO,uBAEvE,IAAK8oB,cAAc,GACf,OAAOA,cAKX,GAFAta,aAAexO,sBAAsBwnB,+BAA+BhZ,cAEhEx1B,cAAcwP,SAAWgmB,aAAc,CACvC,IAAM0X,iBAAkB,EAAA7sB,OAAA,SAAMrgB,cAAcwP,UAAW,GACjDgtB,WAAW,GAIjB,OAHAA,WAASl1H,IAAT,4BAAA+Q,OAA2C60H,iBAC3C1Q,WAASzuB,IAAT,4BAAA11F,QAA2C,EAAA40F,gBAAAqF,gBAAe46B,kBAEnD,EAAC,EAAO1Q,YAGnB31H,KAAKunI,KAAKtpB,sBAAsB0Q,cAChC3uH,KAAKunI,KAAKd,kBACVzmI,KAAKunI,KAAKb,eAEV,IAAMr+B,SAAW,GAIjB,OAHAA,SAAS5nG,IAAT,8BAAA+Q,OAA6Cm9G,cAC7CtmB,SAASnB,IAAT,8BAAA11F,QAA6C,EAAA40F,gBAAAqF,gBAAekjB,eAErD,EAAC,EAAMtmB,iDAgBHlP,cAAeqiB,gBAC1B,IAAImT,aAAenT,oBAES,IAAjBmT,eACPA,aAAe3uH,KAAKsnI,KAAK7rB,qBAJa,IAOlC2E,oBAAwBpgH,KAAKsnI,KAA7BlnB,oBACF6oB,cAAgB9vC,cAAcsuC,qBAAqB9Y,aAAcvO,qBAEvE,IAAK6oB,cAAc,GACf,OAAOA,cAKX,GAFAta,aAAevO,oBAAoBunB,+BAA+BhZ,cAE9Dx1B,cAAcwP,SAAWgmB,aAAc,CACvC,IAAM0X,iBAAkB,EAAA7sB,OAAA,SAAMrgB,cAAcwP,UAAW,GACjDomB,WAAW,GAIjB,OAHAA,WAAStuH,IAAT,4BAAA+Q,OAA2C60H,iBAC3CtX,WAAS7nB,IAAT,4BAAA11F,QAA2C,EAAA40F,gBAAAqF,gBAAe46B,kBAEnD,EAAC,EAAOtX,YAGnB/uH,KAAKunI,KAAKtpB,sBAAsB0Q,cAChC3uH,KAAKunI,KAAKd,kBACVzmI,KAAKunI,KAAKb,eAEV,IAAMr+B,SAAW,GAIjB,OAHAA,SAAS5nG,IAAT,iCAAA+Q,OAAgDm9G,cAChDtmB,SAASnB,IAAT,iCAAA11F,QAAgD,EAAA40F,gBAAAqF,gBAAekjB,eAExD,EAAC,EAAMtmB,2CAcTlP,cAAegQ,QAASR,SAAUj1C,OACvC,IAAKi1C,WAAaj1C,MACd,MAAO,EAAC,EAAO,mFAGnB,IAAK6/B,mBAAA,QAAkBwmC,WAAW5wB,SAK9B,MAAO,EAAC,EAJS,CACb1oG,IAAG,mBAAA+Q,OAAqB23F,QAAQ5tD,cAA7B,KACH2rD,IAAG,kBAAA11F,OAAoB+hF,mBAAA,QAAkB6/B,iBAAiBjqB,YAKlE,IAAKnpG,KAAKsnI,KAAKtU,gBAAgB7pB,SAK3B,MAAO,EAAC,EAJS,CACb1oG,IAAG,YAAA+Q,OAAc23F,QAAQ5tD,cAAtB,yBACH2rD,IAAG,WAAA11F,OAAa+hF,mBAAA,QAAkB6/B,iBAAiBjqB,SAAhD,0BAKX,IAAMY,aAAe/pG,KAAKsnI,KAAKlnB,qBAAuBpgH,KAAKsnI,KAAKnnB,sBAC1D2J,SAAW9pH,KAAKsnI,KAAKuB,aAAa1/B,SAGxC,IAAKz1C,MAAO,CACR,IAAMw1E,eAAgB/vC,cAAcsuC,qBAAqB9+B,SAAUoB,cAEnE,OAAKm/B,eAAc,IAInBvgC,SAAWoB,aAAa49B,+BAA+Bh/B,UAEvDmhB,SAASqf,YAAYxgC,UACrB3oG,KAAKunI,KAAKtpB,sBAAsBtV,UAChC3oG,KAAKunI,KAAKd,kBAOH,EAAC,EALS,CACbhmI,IAAG,SAAA+Q,OAAW23F,QAAQ5tD,cAAnB,QAAA/pC,OAAuCm3F,UAC1CzB,IAAG,SAAA11F,OAAW+hF,mBAAA,QAAkB6/B,iBAAiBjqB,SAA9C,QAAA33F,QAA6D,EAAA40F,gBAAAqF,gBAAe9C,cAXxEugC,eAkBf,IAAKvgC,SAAU,CACX,IAAMygC,YAAajwC,cAAckwC,kBAAkB31E,OAEnD,OAAK01E,YAAW,IAIhBtf,SAASwf,SAAS51E,OAClB1zD,KAAKunI,KAAKllB,mBAAmB3uD,OAC7B1zD,KAAKunI,KAAKb,eAOH,EAAC,EALS,CACbjmI,IAAG,SAAA+Q,OAAW23F,QAAQ5tD,cAAnB,QAAA/pC,OAAuCkiD,MAAvC,MACHwzC,IAAG,SAAA11F,OAAW+hF,mBAAA,QAAkB6/B,iBAAiBjqB,SAA9C,QAAA33F,QAA6D,EAAA40F,gBAAA4F,gBAAet4C,OAA5E,aATI01E,YAgBf,IAAMH,cAAgB9vC,cAAcsuC,qBAAqB9+B,SAAUoB,cAC7Dw/B,WAAapwC,cAAckwC,kBAAkB31E,OAEnD,OAAKu1E,cAAc,GAIdM,WAAW,IAIhBzf,SAASqf,YAAYxgC,UACrBmhB,SAASwf,SAAS51E,OAClB1zD,KAAKunI,KAAKtpB,sBAAsBtV,UAChC3oG,KAAKunI,KAAKllB,mBAAmB3uD,OAC7B1zD,KAAKunI,KAAKd,kBACVzmI,KAAKunI,KAAKb,eAOH,EAAC,EALS,CACbjmI,IAAG,SAAA+Q,OAAW23F,QAAQ5tD,cAAnB,QAAA/pC,OAAuCm3F,SAAvC,SAAAn3F,OAAuDkiD,MAAvD,MACHwzC,IAAG,SAAA11F,OAAW+hF,mBAAA,QAAkB6/B,iBAAiBjqB,SAA9C,QAAA33F,QAA6D,EAAA40F,gBAAAqF,gBAAe9C,UAA5E,SAAAn3F,QAA6F,EAAA40F,gBAAA4F,gBAAet4C,OAA5G,aAZI61E,WAJAN,+CAgCN9gC,QAASz0C,MAAOm7C,kBACrB,IAAM85B,oBAAqB,EAAAnvB,OAAA,SAAM3K,kBAAmB,GAAK,IAEzD7uG,KAAKunI,KAAKppB,qBAAqBhW,SAC/BnoG,KAAKunI,KAAKnpB,iBACVp+G,KAAKunI,KAAKtpB,sBAAsB0qB,oBAChC3oI,KAAKunI,KAAKrpB,kBACVl+G,KAAKunI,KAAKllB,mBAAmB3uD,OAC7B1zD,KAAKunI,KAAKe,eAEV,IAAMjgC,SAAW,GAIjB,OAHAA,SAAS5nG,IAAT,4CAAA+Q,OAA2Dm3H,oBAC3DtgC,SAASnB,IAAT,4CAAA11F,QAA2D,EAAA40F,gBAAAqF,gBAAek9B,qBAEnE,EAAC,EAAMtgC,mDAaD49B,MAAOrgB,QACpB5lH,KAAKunI,KAAKiC,aAAavD,OACvBjmI,KAAKunI,KAAKkC,oBAAoB7jB,QAC9B5lH,KAAKunI,KAAKmC,mBAEV,IAAMrhC,SAAW,CACjB5nG,IAAe,sBACfymG,IAAe,uBAEf,MAAO,EAAC,EAAMmB,sDAcE49B,MAAOrgB,OAAQmgB,cAG/B,OAAI/lI,KAAKunI,KAAKxnB,YAAckmB,MACjB,EAAC,EAAO,2FAGfjmI,KAAKunI,KAAK3hB,SAAWA,OACd,EACH,EACA,gGAKR5lH,KAAKunI,KAAKoC,gBAAgB5D,cAK1B/lI,KAAKunI,KAAKqC,sBAEH,EAAC,EAAM,0EAeQzwC,cAAe0wC,aAAc5/B,aACnD,IAAI,EAAAjc,QAAA,SAAOic,aACP,MAAO,EAAC,EAAO,uCAGnB,IAAM6/B,mCAAqC7/B,YAAY8/B,wCAEvD,GAAI5wC,cAAckS,IAAI1C,SAAWmhC,mCAAoC,CACjE,IAAME,WAAW,GAOjB,OALAA,WAASvpI,IAAM,cAAA+Q,OAAcy4F,YAAYtpG,KAA1B,iDAAA,mDAAA6Q,OACwCs4H,oCACvDE,WAAS9iC,IAAM,cAAA11F,QAAc,EAAA40F,gBAAAkE,cAAaL,YAAYtpG,MAAvC,iDAAA,mDAAA6Q,QACwC,EAAA40F,gBAAAqF,gBAAeq+B,qCAE/D,EAAC,EAAOE,YAInB,IAAM/D,MAAQh8B,YAAYtF,cACpBihB,OAAS3b,YAAY6C,MACrBi5B,aAAe97B,YAAYggC,IAAIC,mBAC/BC,gBAAkBnqI,KAAKoqI,iBAAiBnE,MAAOrgB,QAC/CykB,iBAAmBrqI,KAAKsqI,oBAAoBrE,MAAOrgB,OAAQmgB,cAGjE,IAAKoE,gBAAgB,GACjB,OAAOA,gBAGX,IAAKE,iBAAiB,GAClB,OAAOA,iBAGXrqI,KAAK6pG,uBACL7pG,KAAKsnI,KAAK1U,iBAAiB3oB,aAC3BjqG,KAAKwoG,sBAAuB,EAE5B,IAAMH,SAAW,GAIjB,OAHAA,SAAS5nG,IAAT,WAAA+Q,OAA0Bq4H,aAAatuF,cAAvC,YAAA/pC,OAA+Dy4F,YAAYtpG,KAA3E,aACA0nG,SAASnB,IAAT,WAAA11F,OAA0Bq4H,aAAatuF,cAAvC,YAAA/pC,QAA+D,EAAA40F,gBAAAkE,cAAaL,YAAYtpG,MAAxF,aAEO,EAAC,EAAM0nG,yDAcKc,QAASI,eAAgBD,wBAAwB,IAAAihC,uBAAApuC,eACnCn8F,KAAKsnI,KAAKnU,4BAA4BhqB,QAASI,eAAgBD,wBAD5B,GAC7D9rC,QAD6D+sE,uBAAA,GACpDC,cADoDD,uBAAA,GAGpE,IAAK/sE,QACD,MAAO,CAACA,QAASgtE,eAMrBjhC,eAAiBihC,cAEjB,IAAMC,YAAa,EAAApkC,gBAAAqF,mBAAkBnC,eAAeC,eAAiBz2E,KAAK89B,IACpE65E,0BAA2B,EAAAtkC,gBAAAukC,yCAAwCphC,eAAeC,gBAClFohC,uBAAsB,GAAAp5H,OAAM+3F,eAAeN,cAArB,YAAAz3F,OAA6C+3F,eAAeL,UAA5D,SACtB2hC,kBAAiB,UAAAr5H,OAAai5H,WAAb,WACjBK,kBAAiB,UAAAt5H,QAAa,EAAA40F,gBAAAuF,eAAc8+B,YAA3B,WAGvB,MAAO,EAAC,EAAM,CACVhqI,IAAG,QAAA+Q,OAAUk5H,yBAAV,QAAAl5H,OAAyC23F,QAAQ5tD,cAAjD,KAAA/pC,OAAkEq5H,kBAAlE,MAAAr5H,OAAwFo5H,wBAC3F1jC,IAAG,QAAA11F,OAAUk5H,yBAAV,QAAAl5H,OAAyC+hF,mBAAA,QAAkB6/B,iBAAiBjqB,SAA5E,KAAA33F,OAAwFs5H,kBAAxF,MAAAt5H,OAA8Go5H,sEAarG9oB,gBAAiBjX,OAAQ+W,aACrC5hH,KAAKunI,KAAK5+B,WAAa5P,iBAAA2K,gBACvB1jG,KAAKunI,KAAKtpB,sBAAsB6D,iBAGhC9hH,KAAKunI,KAAKrlB,eAAiBlc,sBAAA6F,SAASsW,SAASC,KAC7CpiH,KAAKunI,KAAKrpB,kBAGVl+G,KAAKunI,KAAKp/B,UAAYpP,iBAAA2K,gBACtB1jG,KAAKunI,KAAKppB,qBAAqBtT,OAAOiC,OAGtC9sG,KAAKunI,KAAK37B,cAAgB5F,sBAAA6F,SAASC,QAAQsW,KAC3CpiH,KAAKunI,KAAKj8B,iBAGVtrG,KAAKunI,KAAK7zE,QAAUqlC,iBAAA2K,gBACpB1jG,KAAKunI,KAAKllB,mBAAmBT,aAG7B5hH,KAAKunI,KAAKt7B,YAAcjG,sBAAA6F,SAASK,MAAMkW,KACvCpiH,KAAKunI,KAAKjlB,mDAYJ4Q,cACV,OAAKlzH,KAAKsnI,KAAKtU,gBAAgBE,eAQ/BlzH,KAAKsnI,KAAKrU,mBAAmBC,cAC7BlzH,KAAK6pG,uBACL7pG,KAAKunI,KAAKj8B,iBAMH,EAAC,EAJS,CACb7qG,IAAG,kBAAA+Q,OAAoB0hH,cACvBhsB,IAAG,kBAAA11F,OAAoB+hF,mBAAA,QAAkB6/B,iBAAiBF,kBATnD,EAAC,EAJS,CACbzyH,IAAG,4BAAA+Q,OAA8B0hH,aAA9B,0CACHhsB,IAAG,4BAAA11F,OAA8B+hF,mBAAA,QAAkB6/B,iBAAiBF,cAAjE,2GA0BXlzH,KAAKunI,KAAKn1C,+DAWgB4Y,aAC1B,IAAM3C,SAAWroG,KAAKsnI,KAAKl8B,8BAA8BJ,aAMzD,OAJI3C,SAAS,KACTroG,KAAKktG,uBAAwB,GAG1B7E,uDAYP,IAAMA,SAAW,GAIjB,OAHAA,SAAS5nG,IAAT,kBAAA+Q,OAAiCxR,KAAKunI,KAAK5+B,UAC3CN,SAASnB,IAAT,kBAAA11F,QAAiC,EAAA40F,gBAAAqF,gBAAezrG,KAAKunI,KAAK5+B,WAEnD,EAAC,EAAMN,qDAYd,IAAMA,SAAW,GAEjB,OAAQroG,KAAKunI,KAAK37B,aACd,KAAK5F,sBAAA6F,SAASC,QAAQC,KAIlB,OAHA1D,SAAS5nG,IAAT,0BAAA+Q,OAAyCxR,KAAKunI,KAAKjD,kBACnDj8B,SAASnB,IAAT,0BAAA11F,QAAyC,EAAA40F,gBAAAuF,eAAc3rG,KAAKunI,KAAKjD,mBAE1D,EAAC,EAAMj8B,UAElB,KAAKrC,sBAAA6F,SAASC,QAAQgZ,QAIlB,OAHAzc,SAAS5nG,IAAT,6BAAA+Q,OAA4CxR,KAAKunI,KAAK3hB,QACtDvd,SAASnB,IAAT,6BAAA11F,QAA4C,EAAA40F,gBAAAuF,eAAc3rG,KAAKunI,KAAK3hB,SAE7D,EAAC,EAAMvd,UAElB,KAAKrC,sBAAA6F,SAASC,QAAQ6Y,KAClB,IAAMmF,SAAW9pH,KAAKsnI,KAAKtgB,gBACrBK,iBAAmByC,SAASnlB,cAC5BomC,QAAUh4G,KAAK8B,OAAM,EAAAwxE,gBAAAwG,kBAAiB7sG,KAAK2kG,cAAcuhB,kBAAkBmB,oBAKjF,OAHAhf,SAAS5nG,IAAT,4BAAA+Q,OAA2Cs4G,SAASif,iBAApD,QAAAv3H,OAA2Eu5H,SAC3E1iC,SAASnB,IAAT,4BAAA11F,OAA2C+hF,mBAAA,QAAkB6/B,iBAAiBtJ,SAASif,kBAAvF,QAAAv3H,QAA+G,EAAA40F,gBAAAuF,eAAco/B,UAEtH,EAAC,EAAM1iC,UAGlB,QAII,OAHAA,SAAS5nG,IAAM,qCACf4nG,SAASnB,IAAM,qCAER,EAAC,EAAMmB,sDAatB,MAAO,EAAC,EAAMroG,KAAKunI,KAAK7zE,iEAexB,OAJA1zD,KAAKsnI,KAAK78B,YAAcxE,mBAAAc,aAAa2D,MAI9B,EAAC,EAAM,8FAed,OAFA1qG,KAAKsnI,KAAK78B,YAAcxE,mBAAAc,aAAa2D,MAE9B,EAAC,EAAM,mvBCjhCtB,IAAA8G,OAAAzjB,uBAAAvxF,QAAA,gBACAk1G,UAAA3jB,uBAAAvxF,QAAA,mBACA4yH,iBAAArhC,uBAAAvxF,QAAA,4pCAQqBwuI,8CAKjB,SAAAA,sBAAc,IAAA/2H,MAmBV,qIAnBU66E,CAAA9uF,KAAAgrI,qBAmBVzb,2BAlBAt7G,MAAAs7G,2BAAAvvH,KAAAwvH,gBAAAwb,qBAAAjuI,KAAAiD,OAkBOiU,MAAKygF,uZAxB6B06B,iBAAA,wHA4CzCpvH,KAAKirI,OAAS,mCASVC,gBACJlrI,KAAKirI,OAAOznI,KAAK0nI,mDASVA,gBACPlrI,KAAKirI,QAAS,EAAAv5B,UAAA,SAAS1xG,KAAKirI,OAAQC,mEAapC,OAAO,EAAA15B,OAAA,SAAMxxG,KAAKirI,OAAQ,CAAEE,UAAU,kDAWpBC,YAClB,OAAO,EAAA55B,OAAA,SAAMxxG,KAAKirI,OAAQ,CAAEG,WAAYA,qYCnGhD,IAAAt9C,QAAAC,uBAAAvxF,QAAA,WACA6uI,SAAAt9C,uBAAAvxF,QAAA,kBACAk1G,UAAA3jB,uBAAAvxF,QAAA,mBACA8uI,qBAAAv9C,uBAAAvxF,QAAA,0BACA+uI,gBAAAx9C,uBAAAvxF,QAAA,qBACAu8F,iBAAAv8F,QAAA,mCACAs3F,WAAAt3F,QAAA,0yBASA,IASqBgvI,+BAIjB,SAAAA,sBAAc,IAAAv3H,MAAAjU,KAkDV,qIAlDU8uF,CAAA9uF,KAAAwrI,qBAAAtyC,gBAAAl5F,KAAA,qBAwSO,SAACuhD,OAClBttC,MAAKw3H,WAAW70E,YAAYk9B,WAAAuB,UAAUuL,WAAW8qC,wBAzSvCxyC,gBAAAl5F,KAAA,yCAsT2B,SAACuhD,OAAD,OAAWttC,MAAKq/F,mCA7SrDtzG,KAAK2rI,YAAc,KAQnB3rI,KAAKyrI,YAAa,EAAA39C,QAAA,SAAEgG,WAAAuB,UAAUC,cAAcs2C,YAQ5C5rI,KAAK6rI,wBAAyB,EAAA/9C,QAAA,SAAEgG,WAAAuB,UAAUC,cAAcw2C,0BAQxD9rI,KAAK+rI,0BAA2B,EAAAj+C,QAAA,SAAEgG,WAAAuB,UAAUC,cAAc02C,4BAQ1DhsI,KAAKisI,mBAAoB,EAAAn+C,QAAA,SAAEgG,WAAAuB,UAAUC,cAAc42C,oBAOnDlsI,KAAKmsI,iBAAmB,GAEjBnsI,KAAK00F,QACPtC,kIAcL,OAFApyF,KAAK2rI,YAAc,IAAIL,qBAAA,QAEhBtrI,sCAeP,OAJAA,KAAKisI,kBAAkB7qF,GAAG,QAASphD,KAAKosI,oBACxCpsI,KAAK6rI,uBAAuBzqF,GAAG,QAASphD,KAAKqsI,wCAC7CrsI,KAAK+rI,yBAAyB3qF,GAAG,QAASphD,KAAKqsI,wCAExCrsI,uCAUPA,KAAK2rI,YAAc,+CAWLxyC,eAGd,YAAiC,IAFVn5F,KAAK2rI,YAAYW,sBAAsBnzC,cAAcnjF,mCAiBzEu2H,cAGH,IAAK,IAAIlwI,EAAI,EAAGA,EAAIkwI,aAAavvI,OAAQX,IAAK,CAC1C,IAAM88F,cAAgBozC,aAAalwI,GAEnC,GAAK88F,cAAcC,eAAnB,CAIA,IAAI8xC,eAAiBlrI,KAAK2rI,YAAYW,sBAAsBnzC,cAAcnjF,SAI5C,IAAnBk1H,iBACPA,eAAiBlrI,KAAKy2G,gBAAgBtd,gBAG1C+xC,eAAen6C,OAAOoI,yDAYdA,eACZ,IAAMqzC,aAAexsI,KAAKysI,qBACpBvB,eAAiB,IAAIK,gBAAA,QAAepyC,cAAeqzC,cAQzD,OANAxsI,KAAK2rI,YAAYt3B,QAAQ62B,iBAErB/xC,cAAcgd,eAAiBhd,cAAcC,iBAC7Cp5F,KAAK0sI,oBAAoBxB,gBAGtBA,uDAUK/xC,eACZ,IAAMwzC,WAAa3sI,KAAK2rI,YAAYW,sBAAsBnzC,cAAcnjF,IAExE,IAAK22H,WACD,MAAMhwI,MAAK,kDAAA6U,OAAmD2nF,cAAcE,WAGhFr5F,KAAKszG,iCACLq5B,WAAWC,2DAWG1B,gBACd,KAAMA,0BAA0BK,gBAAA,SAC5B,MAAM,IAAIr5G,UAAU,gDAAA,oCAAA1gB,OAAAiiG,QAC2By3B,kBAGnDA,eAAe2B,8DAUD1zC,eACd,IAAMwzC,WAAa3sI,KAAK2rI,YAAYW,sBAAsBnzC,cAAcnjF,IAExE,IAAK22H,WACD,MAAMhwI,MAAK,kDAAA6U,OAAmD2nF,cAAcE,WAG5Er5F,KAAKyrI,WAAWz0E,SAAS88B,WAAAuB,UAAUuL,WAAW8qC,uBAC9C1rI,KAAKyrI,WAAW90E,YAAYm9B,WAAAuB,UAAUuL,WAAW8qC,sBAEjD/xF,WAAW,WACPgzF,WAAWG,kBACZ,MAEHH,WAAWG,0EAiBf,IAAMC,qBAAuB/sI,KAAK2rI,YAAYqB,2BAEzCD,sBAIL/sI,KAAKitI,kBAAkBF,8DAUX5zC,eACZ,IAAM+xC,eAAiBlrI,KAAK2rI,YAAYW,sBAAsBnzC,cAAcnjF,IAEvEk1H,iBAILlrI,KAAKktI,kBAAkBhC,eAAeiC,KACtCntI,KAAK2rI,YAAYyB,WAAWlC,gBAC5BA,eAAe54C,uDAcC44C,gBAChB,KAAMA,0BAA0BK,gBAAA,SAC5B,MAAM,IAAIr5G,UAAJ,uDAAA1gB,OAAAiiG,QAA4Ey3B,kBAGtF,IAAMmC,SAAWnC,eAAe/0B,YAAcn2G,KAAK+rI,yBAA2B/rI,KAAK6rI,uBAC7EyB,eAAiBD,SAAS78E,YAEhC68E,SAASlpI,QAAQ+mI,eAAen8C,UAEhCs+C,SAAS78E,UAAU88E,eAAiB/B,gBAAA,QAAegC,qDAuCnD,IAAMC,SAAU,EAAAnC,SAAA,SAAQ,EAhVR,KAkVhB,OAAIrrI,KAAKmsI,iBAAiB3/H,QAAQghI,WAAaz0C,iBAAA4f,cACpC34G,KAAKysI,sBAGhBzsI,KAAKmsI,iBAAiB3oI,KAAKgqI,SAEpBA,mDAaOL,KACGntI,KAAKmsI,iBAAiB3/H,QAAQ2gI,OAE9Bp0C,iBAAA4f,gBAIjB34G,KAAKmsI,kBAAmB,EAAAz6B,UAAA,SAAS1xG,KAAKmsI,iBAAkBgB,meC3XhE,IAAAr/C,QAAAC,uBAAAvxF,QAAA,WACAszH,YAAA/hC,uBAAAvxF,QAAA,yBACA2xF,UAAAJ,uBAAAvxF,QAAA,uBACAixI,mBAAAjxI,QAAA,uBACA+xF,YAAA/xF,QAAA,8BACAu8F,iBAAAv8F,QAAA,mCACAs3F,WAAAt3F,QAAA,6BACAkxI,kBAAAlxI,QAAA,grCAUqBmxI,oCAejB,SAAAA,eAAYx0C,cAAey0C,UAAU,IAAA35H,MAoUjC,qIApUiC66E,CAAA9uF,KAAA2tI,iBACjC15H,MAAAs7G,2BAAAvvH,KAAAwvH,gBAAAme,gBAAA5wI,KAAAiD,KAAM,oBAiBDk0F,UAAY/F,UAAA,QAYjBl6E,MAAKkiG,aAAc,EASnBliG,MAAK86E,SAAW,KAWhB96E,MAAKm3H,WAAajyC,cAAcnjF,GAahC/B,MAAKwoG,cAAe,EASpBxoG,MAAK45H,mBAAqB,GAa1B55H,MAAK65H,UAAY,GASjB75H,MAAK85H,cAAgB,KAcrB95H,MAAK+5H,cAAgB,GASrB/5H,MAAKg6H,kBAAoB,KAczBh6H,MAAKk5H,IAAMS,SAWX35H,MAAKi6H,WAAY,EAAAR,kBAAAS,SAAQP,SAAU,GASnC35H,MAAKm6H,SAAW,KAUhBn6H,MAAKo6H,aAAet1C,iBAAA2K,eASpBzvF,MAAKq6H,iBAAmB,KAUxBr6H,MAAKs6H,kBAAoBx1C,iBAAA2K,eASzBzvF,MAAKu6H,sBAAwB,KAU7Bv6H,MAAKw6H,oBAAsB11C,iBAAA2K,eAS3BzvF,MAAKy6H,wBAA0B,KAU/Bz6H,MAAK06H,gBAAkB,GASvB16H,MAAK26H,oBAAsB,KAU3B36H,MAAK46H,kBAAoB,GASzB56H,MAAK66H,sBAAwB,KAU7B76H,MAAK86H,kBAAoB,GASzB96H,MAAK+6H,sBAAwB,KAU7B/6H,MAAKg7H,YAAc,GASnBh7H,MAAKi7H,gBAAkB,KAUvBj7H,MAAKk7H,SAAW,GAShBl7H,MAAKm7H,SAAW,KAUhBn7H,MAAKo7H,mBAAqB,KAS1Bp7H,MAAKq7H,QAAU,KAEf/f,2BAAAt7G,MAAOA,MAAKygF,MAAMyE,eACbo2C,kBACAt7B,iBACAu7B,UACAC,UACAC,oZAxV+B5f,YAAA,gFAkXlC32B,eAAe,IAAAw2C,sBAWbx2C,cAAcy2C,eATdnzB,aAFakzB,sBAEblzB,aACApjB,SAHas2C,sBAGbt2C,SACA0Z,gBAJa48B,sBAIb58B,gBACA2J,oBALaizB,sBAKbjzB,oBACAL,iBANaszB,sBAMbtzB,iBACAC,mBAPaqzB,sBAObrzB,mBACAK,iBARagzB,sBAQbhzB,iBACAC,mBATa+yB,sBASb/yB,mBACAC,WAVa8yB,sBAUb9yB,WAgBJ,OAbA78G,KAAKy8G,aAAeA,aACpBz8G,KAAK8tI,UAAYz0C,SACjBr5F,KAAKquI,aAAet7B,gBACpB/yG,KAAKguI,cAAgBtxB,oBACrB18G,KAAKuuI,kBAAoBlyB,iBACzBr8G,KAAKyuI,oBAAsBnyB,mBAC3Bt8G,KAAK2uI,gBAAkBhyB,iBACvB38G,KAAK6uI,kBAAoBjyB,mBACzB58G,KAAKivI,YAAcpyB,WACnB78G,KAAK6tI,mBAAqB7tI,KAAK6vI,iCAAiC12C,eAChEn5F,KAAKm2G,YAAchd,cAAcgd,cACjCn2G,KAAKqvI,mBAAqBrvI,KAAK8vI,wBAAwB32C,eAEhDn5F,+CA2BP,OAdAA,KAAK+uF,UAAW,EAAAjB,QAAA,SAAE2/C,mBAAAsC,qBAClB/vI,KAAK+tI,cAAgB/tI,KAAK+uF,SAASjiD,KAAKgnD,WAAAuB,UAAUuL,WAAWovC,qBAC7DhwI,KAAKiuI,kBAAoBjuI,KAAK+uF,SAASjiD,KAAKgnD,WAAAuB,UAAUuL,WAAWqvC,0BACjEjwI,KAAKouI,SAAWpuI,KAAK+uF,SAASjiD,KAAKgnD,WAAAuB,UAAUuL,WAAWsvC,gBACxDlwI,KAAKsuI,iBAAmBtuI,KAAK+uF,SAASjiD,KAAKgnD,WAAAuB,UAAUuL,WAAWuvC,wBAChEnwI,KAAKwuI,sBAAwBxuI,KAAK+uF,SAASjiD,KAAKgnD,WAAAuB,UAAUuL,WAAWwvC,8BACrEpwI,KAAK0uI,wBAA0B1uI,KAAK+uF,SAASjiD,KAAKgnD,WAAAuB,UAAUuL,WAAWyvC,iCACvErwI,KAAK4uI,oBAAsB5uI,KAAK+uF,SAASjiD,KAAKgnD,WAAAuB,UAAUuL,WAAW0vC,+BACnEtwI,KAAK8uI,sBAAwB9uI,KAAK+uF,SAASjiD,KAAKgnD,WAAAuB,UAAUuL,WAAW2vC,iCACrEvwI,KAAKgvI,sBAAwBhvI,KAAK+uF,SAASjiD,KAAKgnD,WAAAuB,UAAUuL,WAAW4vC,iCACrExwI,KAAKkvI,gBAAkBlvI,KAAK+uF,SAASjiD,KAAKgnD,WAAAuB,UAAUuL,WAAW6vC,wBAC/DzwI,KAAKovI,SAAWpvI,KAAK+uF,SAASjiD,KAAKgnD,WAAAuB,UAAUuL,WAAW8vC,oBACxD1wI,KAAKsvI,QAAUtvI,KAAK+uF,SAASjiD,KAAKgnD,WAAAuB,UAAUuL,WAAW+vC,mBAEhD3wI,8CAgBP,OAHAA,KAAK4wI,gBAAkB5wI,KAAK6wI,SAASn+E,KAAK1yD,MAC1CA,KAAK8wI,sBAAwB9wI,KAAK+wI,eAAer+E,KAAK1yD,MAE/CA,uCAcP,OAHAA,KAAK+uF,SAAS3tC,GAAG,QAASphD,KAAK4wI,iBAC/B5wI,KAAK+uF,SAAS3tC,GAAG,WAAYphD,KAAK8wI,uBAE3B9wI,uCAmBP,OAFAA,KAAK+uF,SAASz4B,SAASt2D,KAAK6tI,oBAErB7tI,uCA8BP,OAbAA,KAAK+tI,cAAcjpH,KAAK9kB,KAAK8tI,WAC7B9tI,KAAKiuI,kBAAkBnpH,KAAK9kB,KAAKguI,eACjChuI,KAAKouI,SAAStpH,KAAK9kB,KAAKkuI,WACxBluI,KAAKsuI,iBAAiBxpH,KAAK9kB,KAAKquI,cAChCruI,KAAKwuI,sBAAsB1pH,KAAK9kB,KAAKuuI,mBACrCvuI,KAAK0uI,wBAAwB5pH,KAAK9kB,KAAKyuI,qBACvCzuI,KAAK8uI,sBAAsBhqH,KAAK9kB,KAAK6uI,mBACrC7uI,KAAK4uI,oBAAoB9pH,KAAK9kB,KAAK2uI,iBACnC3uI,KAAKgvI,sBAAsBlqH,KAAK9kB,KAAK+uI,mBACrC/uI,KAAKkvI,gBAAgBpqH,KAAK9kB,KAAKivI,aAC/BjvI,KAAKovI,SAAStqH,KAAK9kB,KAAKmvI,UACxBnvI,KAAKsvI,QAAQxqH,KAAK9kB,KAAKqvI,mBAAmB1uI,MAEnCX,uCAaP,OAHAA,KAAK+uF,SAASvtC,IAAI,QAASxhD,KAAK4wI,iBAChC5wI,KAAK+uF,SAASvtC,IAAI,WAAYxhD,KAAK8wI,uBAE5B9wI,uCA8CP,OAnCAA,KAAK63C,UACL73C,KAAK+uF,SAASn3C,SAEd53C,KAAKgW,GAAK,GACVhW,KAAKk0F,UAAY,KACjBl0F,KAAK+uF,SAAW,KAChB/uF,KAAKorI,WAAa,GAClBprI,KAAKy8G,cAAe,EACpBz8G,KAAK6tI,mBAAqB,GAC1B7tI,KAAK8tI,UAAY,GACjB9tI,KAAK+tI,cAAgB,KACrB/tI,KAAKguI,cAAgB,GACrBhuI,KAAKiuI,kBAAoB,KACzBjuI,KAAKmtI,IAAMp0C,iBAAA2K,eACX1jG,KAAKkuI,UAAY,GACjBluI,KAAKouI,SAAW,KAChBpuI,KAAKquI,aAAe,KACpBruI,KAAKsuI,iBAAmB,KACxBtuI,KAAKuuI,kBAAoBx1C,iBAAA2K,eACzB1jG,KAAKwuI,sBAAwB,KAC7BxuI,KAAKyuI,oBAAsB11C,iBAAA2K,eAC3B1jG,KAAK0uI,wBAA0B,KAC/B1uI,KAAK2uI,gBAAkB,GACvB3uI,KAAK4uI,oBAAsB,KAC3B5uI,KAAK6uI,kBAAoB,GACzB7uI,KAAK8uI,sBAAwB,KAC7B9uI,KAAK+uI,kBAAoB,GACzB/uI,KAAKgvI,sBAAwB,KAC7BhvI,KAAKivI,YAAc,GACnBjvI,KAAKkvI,gBAAkB,KACvBlvI,KAAKmvI,SAAW,GAChBnvI,KAAKovI,SAAW,KAChBpvI,KAAKqvI,mBAAqB,KAC1BrvI,KAAKsvI,QAAU,KAERtvI,oCAWJm5F,eACEn5F,KAAKgxI,cAAc73C,gBAIxBn5F,KAAKixI,iBAAiB93C,wDAUtBn5F,KAAK+uF,SAASz4B,SAASw9B,WAAAuB,UAAUuL,WAAWswC,oDAU5ClxI,KAAK+uF,SAASp4B,YAAYm9B,WAAAuB,UAAUuL,WAAWswC,iDAU/ClxI,KAAK+uF,SAAS,GAAG+9C,eAAe,CAAEqE,SAAU,SAAUpoI,MAAO,qEAWhCowF,eAC7B,OAAIA,cAAcgd,cACPriB,WAAAuB,UAAUuL,WAAW0a,UAG5BniB,cAAc+mB,eACPpsB,WAAAuB,UAAUuL,WAAW2a,WAGzBznB,WAAAuB,UAAUuL,WAAW8W,wDAYRve,eACpB,OAAIA,cAAcgd,eAAiBhd,cAAcgW,aACtC,CACHiiC,mBAAoBj4C,cAAck4C,UAClC1wI,KAAMw4F,cAAciR,IAAIU,qBAAqBnqG,MAIjDw4F,cAAcid,YACP,CACHg7B,kBAAmBj4C,cAAc6O,MAAMQ,qBACvC7nG,KAAMw4F,cAAciR,IAAIC,mBAAmB1pG,MAI5C,CACHywI,mBAAmB,EACnBzwI,KAAM,qCAeL4gD,OACLA,MAAMO,kBAEN9hD,KAAKk0F,UAAUjyC,QAAQssC,YAAAyC,MAAMuK,YAAav7F,KAAK8tI,kDAepCvsF,OACXA,MAAMO,kBAEN9hD,KAAKk0F,UAAUjyC,QAAQssC,YAAAyC,MAAMsjB,mBAAoBt0G,KAAK8tI,iDAgB5C30C,eAAe,IAAAm4C,uBASrBn4C,cAAcy2C,eAPdnzB,aAFqB60B,uBAErB70B,aACA1J,gBAHqBu+B,uBAGrBv+B,gBACAsJ,iBAJqBi1B,uBAIrBj1B,iBACAC,mBALqBg1B,uBAKrBh1B,mBACAK,iBANqB20B,uBAMrB30B,iBACAC,mBAPqB00B,uBAOrB10B,mBACAC,WARqBy0B,uBAQrBz0B,WAEE00B,WAAavxI,KAAK8vI,wBAAwB32C,eAEhD,OAAOn5F,KAAKy8G,eAAiBA,cACzBz8G,KAAKquI,eAAiBt7B,iBACtB/yG,KAAKuuI,oBAAsBlyB,kBAC3Br8G,KAAKyuI,sBAAwBnyB,oBAC7Bt8G,KAAK2uI,kBAAoBhyB,kBACzB38G,KAAK6uI,oBAAsBjyB,oBAC3B58G,KAAKivI,cAAgBpyB,YACrB78G,KAAKqvI,mBAAmB+B,oBAAsBG,WAAWH,mBACzDpxI,KAAKqvI,mBAAmB1uI,OAAS4wI,WAAW5wI,8CAcnCw4F,eAAe,IAAAq4C,uBASxBr4C,cAAcy2C,eAPdnzB,aAFwB+0B,uBAExB/0B,aACA1J,gBAHwBy+B,uBAGxBz+B,gBACAsJ,iBAJwBm1B,uBAIxBn1B,iBACAC,mBALwBk1B,uBAKxBl1B,mBACAK,iBANwB60B,uBAMxB70B,iBACAC,mBAPwB40B,uBAOxB50B,mBACAC,WARwB20B,uBAQxB30B,WAiBJ,OAdA78G,KAAKy8G,aAAeA,aACpBz8G,KAAKquI,aAAet7B,gBACpB/yG,KAAKuuI,kBAAoBlyB,iBACzBr8G,KAAKyuI,oBAAsBnyB,mBAC3Bt8G,KAAK2uI,gBAAkBhyB,iBACvB38G,KAAK6uI,kBAAoBjyB,mBACzB58G,KAAKivI,YAAcpyB,WACnB78G,KAAKqvI,mBAAqBrvI,KAAK8vI,wBAAwB32C,eAEvDn5F,KAAKsvI,QAAQ14E,YACTk9B,WAAAuB,UAAUuL,WAAW6wC,wBACpBzxI,KAAKqvI,mBAAmB+B,mBAGtBpxI,KAAK0vI,2CA1ZZ,OAAO1vI,KAAK+uF,SAAS/3B,SAAS88B,WAAAuB,UAAUuL,WAAWswC,gLA7VvC,wBARCvD,ygBCTc,o5DCRnC,IAAAn8B,OAAAzjB,uBAAAvxF,QAAA,gBACAk1I,UAAA3jD,uBAAAvxF,QAAA,mBACAo9G,UAAA7rB,uBAAAvxF,QAAA,mBACAspG,MAAA/X,uBAAAvxF,QAAA,eACA4yH,iBAAArhC,uBAAAvxF,QAAA,2BACAm1I,cAAA5jD,uBAAAvxF,QAAA,mBACAo1I,kBAAAp1I,QAAA,iCACAu8F,iBAAAv8F,QAAA,gCACA41G,oBAAA51G,QAAA,iqCAWqBq1I,4CAOjB,SAAAA,kBAAY5/C,aAAa,IAAAh+E,MAGrB,iIAHqB66E,CAAA9uF,KAAA6xI,mBACrB59H,MAAAs7G,2BAAAvvH,KAAAwvH,gBAAAqiB,mBAAA90I,KAAAiD,KAAMiyF,eAEF,EAAAmgB,oBAAAsB,mBAAkBzhB,aAClB,MAAM,IAAI//D,UAAU,gEAAA,4CAAA1gB,OAAAiiG,QACmCxhB,eALtC,OAQrBh+E,MAAKmvB,KAAK6uD,aARWh+E,kZAPkBm7G,iBAAA,kFA0CtCn9B,aAAa,IAAAf,OAAAlxF,MACd,EAAA45G,UAAA,SAAS3nB,YAAa,SAAC6/C,mBAAD,OAAuB5gD,OAAK6gD,oBAAoBD,qDAUlEE,cACJhyI,KAAKirI,OAAOznI,KAAKwuI,sDAuBLh8H,IACZ,IAAIggG,UAAYhgG,GAAGuW,cAcnB,OAZIypF,UAAUxpG,QAAQolI,kBAAAK,gCAAkCl5C,iBAAA4f,gBAGpDlsF,QAAQ4tB,KACJ,0CAAA7oC,OAA0CwE,GAA1C,4CACA,oNAIJggG,UAAYhgG,GAAGyB,MAAMm6H,kBAAAK,8BAA8B,KAGhD,EAAAzgC,OAAA,SAAMxxG,KAAKirI,OAAQ,CAAEp7C,KAAMmmB,6CAYlC,EAAA4D,UAAA,SAAS55G,KAAKirI,OAAQ,SAAC9zB,cACnBA,aAAaxlE,sDAYDmgG,mBAChB,IAAME,aAAe,IAAIL,cAAA,QAAaG,mBAEtC9xI,KAAKq0G,QAAQ29B,oDA5Fb,IAAME,kBAAmB,EAAApsC,MAAA,SAAK9lG,KAAKirI,OAAQ,SAACjzB,SAAD,OAAaA,QAAQm6B,gBAEhE,OAAO,EAAAT,UAAA,SAASQ,2iBCjDxB,IAAAlkD,QAAAD,uBAAAvxF,QAAA,iBACA41I,mBAAArkD,uBAAAvxF,QAAA,wBACAm1I,cAAA5jD,uBAAAvxF,QAAA,mBACAu8F,iBAAAv8F,QAAA,0YAOqB61I,6BAMjB,SAAAA,kBAAYpgD,4IAAanD,CAAA9uF,KAAAqyI,mBAOrBryI,KAAKq0F,kBAAoB,IAAI+9C,mBAAA,QAAkBngD,4IAwBnC+jB,WACZ,OAAOh2G,KAAKq0F,kBAAkB+iB,gBAAgBpB,wEAebmB,cACjC,KAAMA,wBAAwBw6B,cAAA,SAC1B,MAAM,IAAIz/G,UAAU,8EAGxB,IAAMmlF,aAAeF,aAAam7B,uBAElC,OAAItyI,KAAKuyI,sBAAsBl7B,cAEpBr3G,KAAKs3G,qCAAqCH,eAGrDA,aAAaq7B,uBAAuBn7B,cAE7BA,iEAcgBrB,UAAWqB,cAClC,IAAMF,aAAen3G,KAAKo3G,gBAAgBpB,WAE1C,IAAI,EAAAhoB,QAAA,SAAOmpB,cACP,MAAM,IAAIjlF,UAAU,+EAGxBilF,aAAas7B,mBAAmBp7B,8CAchCr3G,KAAKq0F,kBAAkB1iD,sDAWL0lE,cAClB,OAAOr3G,KAAKmyI,cAAc3lI,QAAQ6qG,gBAAkBte,iBAAA4f,oDAxFpD,OAAO34G,KAAKq0F,kBAAkB89C,gaCpCtC,IAAA1gC,MAAA1jB,uBAAAvxF,QAAA,eACA47F,MAAArK,uBAAAvxF,QAAA,eACAk2I,OAAA3kD,uBAAAvxF,QAAA,gBACAo9G,UAAA7rB,uBAAAvxF,QAAA,mBACAspG,MAAA/X,uBAAAvxF,QAAA,eACA6uI,SAAAt9C,uBAAAvxF,QAAA,kBACAm2I,OAAA5kD,uBAAAvxF,QAAA,gBACAk1G,UAAA3jB,uBAAAvxF,QAAA,mBACAszH,YAAA/hC,uBAAAvxF,QAAA,sBACAo2I,mBAAAp2I,QAAA,uBACAu8F,iBAAAv8F,QAAA,gCACA41G,oBAAA51G,QAAA,mCACAo1I,kBAAAp1I,QAAA,0iDAWqBq2I,kCAOjB,SAAAA,aAAYf,mBAAmB,IAAA79H,MAG3B,iIAH2B66E,CAAA9uF,KAAA6yI,cAC3B5+H,MAAAs7G,2BAAAvvH,KAAAwvH,gBAAAqjB,cAAA91I,KAAAiD,QAEI,EAAAoyG,oBAAA4d,oBAAmB8hB,mBACnB,MAAM,IAAI5/G,UAAU,iEAAA,6CAAA1gB,OAAAiiG,QACoCq+B,qBALjC,OAc3B79H,MAAK47E,KAAOiiD,kBAAkBjiD,KAQ9B57E,MAAKtT,MAAO,EAAA8wG,MAAA,SAAKqgC,kBAAmB,OAAQ,mBAS5C79H,MAAKikG,UAAY,UAQjBjkG,MAAK6+H,uBAAyB,CAU1BC,gBAAiB,CAACnB,kBAAAoB,0BAStB/+H,MAAKg/H,OAAS,CAMVC,QAAS,IAUbj/H,MAAKk/H,oBAAsB,GAE3Bl/H,MAAKmvB,KAAK0uG,mBA5EiB79H,6YAPO67G,YAAA,6EA8HjCgiB,mBAED9xI,KAAK6vF,MAAO,EAAA4hB,MAAA,SAAKqgC,kBAAmB,OAAQ9xI,KAAK6vF,MAAMtjE,cACvDvsB,KAAKk4G,WAAY,EAAAzG,MAAA,SAAKqgC,kBAAmB,gBAAiB9xI,KAAKk4G,WAC/Dl4G,KAAK8yI,uBAAuBC,iBAAkB,EAAAthC,MAAA,SAAKqgC,kBAAmB,2BAA4B9xI,KAAK8yI,uBAAuBC,iBAC9H/yI,KAAKizI,QAAS,EAAAxhC,MAAA,SAAKqgC,kBAAmB,UAEtC9xI,KAAKozI,6EAUU/7B,cACfr3G,KAAKqzI,wBAAwBh8B,8CAa7Br3G,KAAKmzI,oBAAsB,mDAQG,IAAZj8B,MAAY,EAAAryG,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAJ,GAC1B,MAAc,KAAVqyG,MACOl3G,KAAKszI,sCAGTtzI,KAAKuzI,gCAAgCr8B,sDAiB5C,OAFqB,EAAA07B,mBAAAY,mBAAkBxzI,KAAK8yI,uBAAuBC,gEAahD17B,cACnBr3G,KAAKmzI,oBAAoB3vI,KAAK6zG,4EAa9B,IAAMhhG,OAAQ,EAAAg1H,SAAA,SAAQ,EAAGrrI,KAAKusI,aAAavvI,OAAS,GAEpD,OAAOgD,KAAKusI,aAAal2H,+DAYGo9H,WAE5B,IAAKzzI,KAAK0zI,UAAUD,WAEhB,MAAM,IAAI92I,MAAJ,6CAAA6U,OAAuDiiI,UAAvD,+BAAAjiI,OAA8FxR,KAAK6vF,OAG7G,IAAMqnB,MAAQl3G,KAAKizI,OAAOQ,WACpBp9H,OAAQ,EAAAg1H,SAAA,SAAQ,EAAGn0B,MAAMl6G,OAAS,GAGxC,OAAO,EAAA01I,OAAA,SAAMx7B,MAAM7gG,wDAWCghG,cACfr3G,KAAKuyI,sBAAsBl7B,gBAMhCr3G,KAAKmzI,qBAAsB,EAAAzhC,UAAA,SAAS1xG,KAAKmzI,oBAAqB97B,iDAYxDo8B,WACN,OAAO,EAAAr7C,MAAA,SAAKp4F,KAAKizI,OAAQQ,yDAWPp8B,cAClB,OAAOr3G,KAAKmzI,oBAAoB3mI,QAAQ6qG,gBAAkBte,iBAAA4f,yEAY1D,EAAAiB,UAAA,SAAS55G,KAAKizI,OAAQ,SAAC/7B,QACnB,EAAA0C,UAAA,SAAS1C,MAAO,SAACy8B,iBAEbA,gBADmB,GACWA,gBADX,GACuCpnH,uDA1MlE,IAAMwlE,SAAW,GAQjB,OANA,EAAA6nB,UAAA,SAAS55G,KAAKizI,OAAQ,SAAC/7B,OACnB,IAAM08B,eAAgB,EAAA9tC,MAAA,SAAKoR,MAAO,SAACnlB,UAAD,OAAc,EAAA2gD,OAAA,SAAM3gD,YAEtDA,SAASvuF,KAATgN,MAAAuhF,SAAQgK,mBAAS63C,mBAGd,EAAAjB,OAAA,SAAM5gD,gDAab,OAAO/xF,KAAKmzI,snBC1Eb,SAAmCn7B,SACtC,KAAK,EAAA8qB,UAAA,SAAS9qB,SACV,MAAM,IAAI9lF,UAAJ,6FAAA1gB,OAAAiiG,QAC6BuE,WAKvC,IAAM67B,oBAAsB,CACxBlzI,KAAM,GACNu2G,MAAO,WAGX,OAAuB,IAAnBc,QAAQh7G,OAML82I,uCAAuC97B,QAAQ+7B,aAAcF,qBALzDA,0DAkBR,SAAsC5hD,aAEzC,KAAK,EAAA6wC,UAAA,SAAS7wC,aACV,MAAM,IAAI//D,UAAJ,iGAAA1gB,OAAAiiG,QAC6BxhB,eAKvC,IAAM4hD,oBAAsB,CACxBlzI,KAAM,GACNu2G,MAAO,IAGX,OAA2B,IAAvBjlB,YAAYj1F,OAMT82I,wCAFiB,EAAApG,kBAAAsG,eAAc/hD,aAEyB4hD,qBALpDA,qBA9Gf,IAAA/Q,UAAA/0C,uBAAAvxF,QAAA,mBACAy3I,UAAAlmD,uBAAAvxF,QAAA,mBACAo1I,kBAAAp1I,QAAA,iCACAkxI,kBAAAlxI,QAAA,sXAWA,IAAMu3I,YAAc,EASdG,aAAe,EAWrB,SAASJ,uCAAuCK,gBAAiBN,qBAG7D,GAFAA,oBAAoBlzI,MAAO,EAAAszI,UAAA,SAASE,kBAEyB,EAAzDA,gBAAgB3nI,QAAQolI,kBAAAK,8BAAoC,CAC5D,IAAMmC,aAAeD,gBAAgB18H,MAAMm6H,kBAAAK,8BAE3C4B,oBAAoBlzI,MAAO,EAAAszI,UAAA,SAASG,aAAaL,cACjDF,oBAAoB38B,MAAQk9B,aAAaF,cAG7C,OAAOL,+QC4BJ,SAA2Bd,iBAM9B,IALA,IAAI17B,aAAe,GAEbg9B,iBA9BV,SAAkCtB,iBAG9B,IAFA,IAAMsB,iBAAmB,GAEhBh4I,EAAI,EAAGA,EAAI02I,gBAAgB/1I,OAAQX,IACH,MAAjC02I,gBAAgB12I,GAAG6Q,OAAO,GAK9BmnI,iBAAiB7wI,KAAKuvI,gBAAgB12I,IAJlCowB,QAAQ4tB,KAAR,UAAA7oC,OAAuBuhI,gBAAgB12I,GAAvC,0CAOR,OAAgC,IAA5Bg4I,iBAAiBr3I,OAIdq3I,iBAHIC,uBAiBcC,CAAyBxB,iBAC5CyB,cAAe,EAAA9G,kBAAA+G,QAAOJ,kBAEnBh4I,EAAI,EAAGA,EAAIm4I,aAAax3I,OAAQX,IACrC,OAAQm4I,aAAan4I,IACjB,KAAKu1I,kBAAA8C,gCACDr9B,cAAgBs9B,qBAAqBt4I,GACrC,MACJ,KAAKu1I,kBAAAgD,iCACDv9B,eAlDL,EAAAq2B,kBAAA+G,QAAOI,OAmDF,MACJ,QACIx9B,cAAgBm9B,aAAan4I,GAIzC,OAAOg7G,cA3FX,IAAAq2B,kBAAAlxI,QAAA,iCACAo1I,kBAAAp1I,QAAA,iCAMMq4I,MAAQ,6BACRC,QAAU,aACVR,uBAAyB,CAAC1C,kBAAAoB,yBAUhC,SAAS2B,qBAAqBt4I,GAC1B,OAAU,IAANA,GACO,EAAAqxI,kBAAA+G,QAAOK,QAAQlvH,OAAO,KAG1B,EAAA8nH,kBAAA+G,QAAOK,uNCxBlB,IAAA18C,MAAArK,uBAAAvxF,QAAA,eACAu4I,cAAAhnD,uBAAAvxF,QAAA,mBACA2xF,UAAAJ,uBAAAvxF,QAAA,oBACA+xF,YAAA/xF,QAAA,2BACA8xF,aAAA9xF,QAAA,+YAmPe,eAxOX,SAAAw4I,mJAAclmD,CAAA9uF,KAAAg1I,mBAKVh1I,KAAKk0F,UAAY/F,UAAA,QAajBnuF,KAAKi1I,mBAAqB,GAS1Bj1I,KAAKmjG,SAAW,GAYhBnjG,KAAK2S,QAAU,yHAcdw+E,mBAAoBa,mBAAoBxC,iBACzCxvF,KAAKi1I,mBAAqBzlD,gBAE1B,IAAK,IAAInzF,EAAI,EAAGA,EAAI2D,KAAKi1I,mBAAmBj4I,OAAQX,IAAK,CACrD,IAAMozF,QAAUzvF,KAAKi1I,mBAAmB54I,GAExC2D,KAAKk1I,aAAazlD,SAGtBzvF,KAAKojG,YAAYjS,mBAAoBa,+DAiBL,IAArBnC,KAAqBomB,KAArBpmB,KAAM3jE,MAAe+pF,KAAf/pF,MAAOvrB,KAAQs1G,KAARt1G,KAGxB,GAFAkvF,KAAOA,KAAKtjE,cAERvsB,KAAKm1I,WAAWtlD,MAGhB,OAFApjE,QAAQhsB,IAAR,GAAA+Q,OAAeq+E,KAAf,qBAEO,KAGX,IAAMka,aAAe,IAAIgrC,cAAA,QAAa,CAAEllD,KAAAA,KAAM3jE,MAAAA,MAAOvrB,KAAAA,OAErDX,KAAKo1I,YAAYrrC,kDAUTta,SACRzvF,KAAKmjG,SAAS1T,QAAQI,MAAQJ,wCAY9BzvF,KAAKk0F,UAAY/F,UAAA,QACjBnuF,KAAKi1I,mBAAqB,GAC1Bj1I,KAAKmjG,SAAW,GAChBnjG,KAAK2S,QAAU,yCAWPk9E,MAA0B,IAApBwlD,YAAoB,EAAAxwI,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAN,KAO5B,GANI7E,KAAKs1I,cAAczlD,QACnBA,KAAOI,aAAa3B,aAAA4B,YAAYC,mBAGpCN,KAAOA,KAAKtjE,cAEPvsB,KAAKmjG,SAAStT,MAAnB,CAMA,IAAM0lD,iBAAmBv1I,KAAKmjG,SAAStT,OACvC7vF,KAAK2S,QAAU4iI,kBAIMnmD,QACjBpvF,KAAKk0F,UAAUjyC,QAAQssC,YAAAyC,MAAM+D,eAAgBwgD,iBAAiB3vI,MAGlE2vI,iBAAiBjlH,IAAI+kH,kBAdjB5oH,QAAQ4tB,KAAR,GAAA7oC,OAAgBq+E,KAAhB,8DAwBJ,OAAO7vF,KAAK2S,QAAQ6iI,0CAWZ3lD,MACR,OAAKA,KAIE7vF,KAAKmjG,SAAStT,KAAKtjE,eAHfvsB,KAAK2S,8DAqBhB,OAAO3S,KAAK2S,QAAQ03F,mBAAmB1pG,2CAW7BkvF,MACV,OAAQA,OAAQ,EAAAuI,MAAA,SAAKnI,aAAc3B,aAAA4B,YAAYC,qDAWxCN,MACP,OAAO,EAAAuI,MAAA,SAAKp4F,KAAKmjG,SAAUtT,gEAUGkC,UAC9B/xF,KAAK2S,QAAQwiG,kCAAkCpjB,SAAS/7E,kaClPhE,IAAAwjG,OAAAzrB,uBAAAvxF,QAAA,gBACA69H,QAAAtsC,uBAAAvxF,QAAA,iBACAi5I,QAAA1nD,uBAAAvxF,QAAA,iBACAo9G,UAAA7rB,uBAAAvxF,QAAA,mBACAi1G,MAAA1jB,uBAAAvxF,QAAA,eACAspG,MAAA/X,uBAAAvxF,QAAA,eACAq2F,mBAAA9E,uBAAAvxF,QAAA,wBACAk5I,eAAA3nD,uBAAAvxF,QAAA,oBACAg8F,sBAAAzK,uBAAAvxF,QAAA,iCACA2xF,UAAAJ,uBAAAvxF,QAAA,oBACA42F,gBAAArF,uBAAAvxF,QAAA,2BACAm5I,eAAA5nD,uBAAAvxF,QAAA,oBACAo5I,kBAAA7nD,uBAAAvxF,QAAA,8BACAq5I,qBAAA9nD,uBAAAvxF,QAAA,gCACA4xF,YAAAL,uBAAAvxF,QAAA,yBACAs5I,sBAAAt5I,QAAA,gCACA6pG,gBAAA7pG,QAAA,+BACAq8F,MAAAr8F,QAAA,gBAKAoxG,QAAApxG,QAAA,kBAOAypG,mBAAAzpG,QAAA,kCAIA49G,sBAAA59G,QAAA,qCACA+xF,YAAA/xF,QAAA,2BACA8xF,aAAA9xF,QAAA,4BACA01G,UAAA11G,QAAA,y6BAEA,IAGMu5I,oBAAsB,CACxBllG,SAAS,EACTmlG,UAAW,EACXC,OAAQ,CAAC,EAAG,IAMKC,wBAMjB,SAAAA,eAA0B,IAAAjiI,MAAAjU,KAAdvC,QAAc,EAAAoH,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAJ,kIAAIiqF,CAAA9uF,KAAAk2I,cAAAh9C,gBAAAl5F,KAAA,uBAgyBH,SAAC69D,UAEpB5pD,MAAKrO,KAAOi4D,SACZ5pD,MAAKkiI,SAAU,EACfliI,MAAKm7E,QAAS,EAEdn7E,MAAKmvB,KAAKy6B,UACV5pD,MAAKg7E,SAAShtC,QAAQssC,YAAAyC,MAAM+D,eAAgB9gF,MAAKrO,MACjDqO,MAAKqc,QAxyBiB4oE,gBAAAl5F,KAAA,qBAgzBL,SAAAi2G,MAAoB,IAAjBmgC,WAAiBngC,KAAjBmgC,WACpB3pH,QAAQ1U,MAAR,0BAAAvG,OAAwCyC,MAAK47E,KAA7C,MAAAr+E,OAAsD4kI,aAEtDniI,MAAKkiI,SAAU,EACftjD,mBAAA,QAAkBlgF,QAAQ2d,QA/yB1BtwB,KAAKivF,SAAWd,UAAA,QAWhBnuF,KAAK4F,KAAO,GAOZ5F,KAAKqqG,mBAAqB,KAO1BrqG,KAAK8qG,qBAAuB,KAS5B9qG,KAAKovF,QAAS,EASdpvF,KAAKm2I,SAAU,EASfn2I,KAAKW,KAAO,KASZX,KAAK6vF,KAAO,KASZ7vF,KAAKw1I,MAAQ,KAObx1I,KAAKsxC,MAAQ,KAObtxC,KAAKksB,MAAQ,KAOblsB,KAAK0jI,eAAiB,KAStB1jI,KAAKq2I,kBAAoB,KASzBr2I,KAAKs2I,cAAgB,KAOrBt2I,KAAKo3F,iBAAmB,GASxBp3F,KAAKu2I,SAAW,KAUhBv2I,KAAK67G,QAAU,GAMf77G,KAAKg1D,QAAU,CACX61C,OAAQ,KACR2rC,UAAW,MASfx2I,KAAK0sG,KAAO,CACRh5C,MAAO,GACPo5C,MAAO,GAUX9sG,KAAKy2I,YAAc,CACf/iF,MAAO,GACPo5C,MAAO,GAQX9sG,KAAKk1G,WAAa,KAOlBl1G,KAAK02I,YAAc,KAOnB12I,KAAK09H,YAAc,KAOnB19H,KAAK22I,WAAa,KAElB32I,KAAKojC,KAAK3lC,wHAgGTmI,MACD5F,KAAKW,MAAO,EAAA8wG,MAAA,SAAK7rG,KAAM,OAAQ5F,KAAKW,MACpCX,KAAK6vF,MAAO,EAAA4hB,MAAA,SAAK7rG,KAAM,OAAQ5F,KAAK6vF,MAAMtjE,cAC1CvsB,KAAKksB,OAAQ,EAAAulF,MAAA,SAAK7rG,KAAM,QAAS5F,KAAKksB,OAIjCtmB,KAAKmlD,WAIV/qD,KAAK42I,mBAAmBhxI,KAAKmlD,UAAU,EAAAs7C,gBAAAqD,kBAAiB9jG,KAAKixI,iBAE7D72I,KAAKw1I,OAAQ,EAAA/jC,MAAA,SAAK7rG,KAAM,QAAS5F,KAAKw1I,OACtCx1I,KAAKsxC,OAAQ,EAAAmgE,MAAA,SAAK7rG,KAAM,QAAS5F,KAAKsxC,OACtCtxC,KAAKw3F,aAAc,EAAAia,MAAA,SAAK7rG,KAAM,eAAe,GAC7C5F,KAAKk1G,YAAa,EAAAzD,MAAA,SAAK7rG,KAAM,aA5UP,IA6UtB5F,KAAK02I,aAAc,EAAAjlC,MAAA,SAAK7rG,KAAM,cA5UP,KA6UvB5F,KAAK09H,aAAc,EAAAjsB,MAAA,SAAK7rG,KAAM,cA5UF,KA6U5B5F,KAAKq2I,kBAAoB,IAAIT,kBAAA,QAAiBhwI,KAAKkxI,QAAS92I,KAAK0jI,gBACjE1jI,KAAKs2I,cAAgB,IAAIX,eAAA,QAAc/vI,KAAKmxI,KAAMnxI,KAAKoxI,YAAah3I,KAAK2kG,cAAe3kG,KAAKi3I,eAC7Fj3I,KAAKy2I,YAAY/iF,MAAQ9tD,KAAK8mG,KAAKh5C,MACnC1zD,KAAKy2I,YAAY3pC,OAAQ,EAAAzG,gBAAAqD,kBAAiB9jG,KAAK8mG,KAAKI,OAEpD9sG,KAAKk3I,gBAAgBtxI,KAAK+wI,YAC1B32I,KAAKm3I,cACLn3I,KAAKo3I,cAAcxxI,KAAK2wI,UACxBv2I,KAAKq3I,0BAA0BzxI,KAAK0xI,cAAe1xI,KAAK2xI,iBACxDv3I,KAAKw3I,qBAAqB5xI,KAAK80G,YAC/B16G,KAAKy3I,kBAAkB7xI,KAAK8mG,MAE5B1sG,KAAKivF,SAAS7tC,GAAGmtC,YAAAyC,MAAM0mD,YAAa13I,KAAKy3I,kBAAkB/kF,KAAK1yD,gDAWpD23I,eACPA,gBACD33I,KAAK22I,WAAaZ,qBAGtB/1I,KAAK22I,WAAa,CACd9lG,QAAS8mG,cAAc9mG,QACvBolG,OAAQ,IAAIz9C,sBAAA,QACRm/C,cAAc1B,OACdj2I,KAAK2kG,cACL3kG,KAAKi3I,eAETjB,UAAW2B,cAAc3B,sDAUd4B,eAAgBX,gBAC1B,EAAAnB,sBAAA+B,0BAAyBD,kBAI9B53I,KAAK0jI,eAAiB,IAAImS,qBAAA,QAAoB+B,eAAgB,KAAMX,sDAU1DV,UAAU,IAAArlD,OAAAlxF,KACpB,GAAKu2I,SAAL,CAKAv2I,KAAKu2I,UAAW,EAAAzwC,MAAA,SAAKywC,SAAU,SAACuB,iBAC5B,OAAO,IAAIpC,eAAA,QACPoC,gBACA5mD,OAAKwyC,eACLxyC,OAAKwyC,eAAeuT,iBAVR,IAAAc,4BAcpB/3I,KAAKk1G,WAAa,GAdE8iC,mBAAA,EAAAC,oBAAAr1I,EAAA,IAgBpB,IAAA,IAAAs1I,MAAAC,UAA4Bn4I,KAAKu2I,SAAjClxG,OAAAC,cAAAyyG,2BAAAG,MAAAC,UAAAhyH,QAAAd,MAAA0yH,2BAAA,EAA2C,CAAA,IAAhCK,cAAgCF,MAAA1yI,MACvCxF,KAAKk1G,WAAaniF,KAAKi6B,IAALx8C,MAAAuiB,KAAI,CAClB/yB,KAAKk1G,YADa1jG,OAAAuqF,oBAEf,EAAA+J,MAAA,SAAKsyC,cAAc5qB,KAAM,SAAC6qB,gBAAD,OAAoB,EAAAzqC,QAAAE,OAC5C,EAAAF,QAAAG,MAAKsqC,eAAex8C,iBAAkB3K,OAAKylD,WAAWV,OAAOp6C,yBApBrD,MAAA74F,KAAAg1I,mBAAA,EAAAC,eAAAj1I,IAAA,QAAA,IAAA+0I,2BAAA,MAAAI,UAAA,QAAAA,UAAA,SAAA,QAAA,GAAAH,kBAAA,MAAAC,+DA+BHryI,MAAM,IAAAwrF,OAAApxF,KAClB4F,OAIL,EAAAg0G,UAAA,SAASh0G,KAAM,SAAC0yI,UACZ,IAAMC,eAAiB,GAEnBD,SAAS33I,OACT43I,eAAe53I,KAAO23I,SAAS33I,MAGnC43I,eAAezsF,QAAS,EAAAu6C,gBAAAmyC,gBAAeF,SAASxsF,QAChDysF,eAAe/qB,KAAO8qB,SAAS9qB,KAAKr8G,IAAI,SAAC2vG,KACrC,OAAOtoB,sBAAA,QAAqBigD,0BAA0B33B,IAAK1vB,OAAKsyC,eAAgBtyC,OAAK6lD,iBAGzF,IAAIyB,WAAaH,eAAe/qB,KAAK,GACjCmrB,WAAaJ,eAAe/qB,KAAK,IAErC,EAAA5T,UAAA,SAAS2+B,eAAe/qB,KAAM,SAACn3E,GAC3BqiG,WAAa,CACT3lH,KAAKi6B,IAAI3W,EAAE,GAAIqiG,WAAW,IAC1B3lH,KAAKi6B,IAAI3W,EAAE,GAAIqiG,WAAW,KAE9BC,WAAa,CACT5lH,KAAKw5C,IAAIl2B,EAAE,GAAIsiG,WAAW,IAC1B5lH,KAAKw5C,IAAIl2B,EAAE,GAAIsiG,WAAW,OAIlC,IAAIC,uBAAyB,EAAC,EAAAhrC,QAAAyW,SAAO,EAAAzW,QAAA2W,MAAKm0B,WAAYC,YAAa,KAE/DL,SAASO,iBACTD,uBAAyBN,SAASO,eAAe1nI,IAAI,SAACklC,GAClD,OAAOmiD,sBAAA,QAAqBigD,0BAA0BpiG,EAAG+6C,OAAKsyC,eAAgBtyC,OAAK6lD,kBAI3FsB,eAAeK,uBAAyBA,uBAExCxnD,OAAKgG,iBAAiB5zF,KAAK+0I,yEAYJ5vC,UAC3B,OAAO,EAAA8sC,QAAA,SAAO9sC,SAAU3oG,KAAK6uH,sBAAuB7uH,KAAK27G,iEAQ3Cm9B,aACTA,cAIL94I,KAAK0sG,KAAKh5C,MAAQolF,YAAYplF,MAC9B1zD,KAAK0sG,KAAKI,OAAQ,EAAAzG,gBAAAqD,kBAAiBovC,YAAYhsC,oCAQ/CuoC,aACKr1I,KAAKovF,QAMVa,aAAa3B,aAAA4B,YAAYC,kBAAoBnwF,KAAK6vF,KAGlDuD,gBAAA,QAAe2lD,8BAEf/4I,KAAK4E,MAAQwpF,YAAA,QAAW4gB,qBAExBhvG,KAAKivF,SAAShtC,QAAQssC,YAAAyC,MAAMC,mBAAmB,IAZ3CjxF,KAAKqkD,KAAKgxF,yDAwB2B,IAA3B1sC,SAA2B,EAAA9jG,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAhB7E,KAAK8uG,UAIxBkqC,0BAH2Bh5I,KAAK0sG,KAAKh5C,OAGmB,GAFjCi1C,SAAW3oG,KAAK8uG,WACKsL,sBAAA4S,YAAYisB,6BAO9D,MALa,CACTnsC,MAAO9sG,KAAK0sG,KAAKI,MACjBp5C,MAAOslF,oEAYEnuC,QACb,IAAM4V,eAAiB5V,OAAOquC,iCAAiCl5I,KAAK0sG,KAAKI,OAEzE,MAAO,CACH6T,OAAO,EAAA9nB,MAAA+nB,KAAIH,gBAAkBzgH,KAAK0sG,KAAKh5C,MACvC7wB,MAAM,EAAAg2D,MAAAjoC,KAAI6vD,gBAAkBzgH,KAAK0sG,KAAKh5C,uDAatBi1C,UAAU,IAAAwwC,sBACLn5I,KAAK2sG,kBAAkBhE,UAAxCmE,MADsBqsC,sBACtBrsC,MAAOp5C,MADeylF,sBACfzlF,MACT0lF,oBAAsBtsC,MAAQ/5E,KAAK89B,GAGzC,OAFmB,EAAA+8C,QAAAyW,SAAO,EAAAzW,QAAA0W,wBAAuB80B,qBAAsB1lF,yDAajDg/D,kBAAmBI,qBACzC,IAAMzoB,mBAAqBrqG,KAAKkqG,UAAUwoB,mBACpC5nB,qBAAuB9qG,KAAKkqG,UAAU4oB,qBAE5C9yH,KAAK4yH,iBAAiBvoB,oBACtBrqG,KAAK2hH,mBAAmB7W,+DAUXb,aACbjqG,KAAKqqG,mBAAqBJ,uDAUXA,aACfjqG,KAAK8qG,qBAAuBb,+DAWLpS,UACvB,OAAIA,WAAaoO,mBAAAwR,gBAAgBC,QACtB13G,KAAKqqG,mBAGZxS,WAAaoO,mBAAAwR,gBAAgB6D,UACtBt7G,KAAK8qG,qBAGZjT,WAAaoO,mBAAAwR,gBAAgB8D,YAIjC9uF,QAAQ4tB,KAAK,0EAAA,IAAA7oC,OACLqmF,SADK,qCAAArmF,OACuCxR,KAAKqqG,mBAAmB1pG,KAD/D,MAGNX,KAAKqqG,yBAPZ,8DAmBgCgvC,kBAAmBC,sBACnD,OAAOt5I,KAAKq2I,kBAAkB/lC,oCAAoC+oC,kBAAmBC,gGAgC/E34I,MACN,OAAOX,KAAKq2I,kBAAkBkD,sBAAsB54I,gEAUtByqI,YAC9B,OAAOprI,KAAKq2I,kBAAkBlhC,kCAAkCi2B,2DAWhEprI,KAAKq2I,kBAAkBS,QAAQpjH,QAAQ,SAACu2E,aAAD,OAAiBA,YAAYuvC,oDAQ3D5zI,MACT,IAAM6zI,0BACW,aADXA,sBAEO,UAIPC,IAAM15I,KACZ05I,IAAI79B,QAAU,IAEd,EAAAjC,UAAA,SAASh0G,KAAK+zI,SAAU,SAACr9I,GAGrB,IAAMsxH,KAAM,EAAA/0B,MAAAhkE,OAAMv4B,EAAEw1D,WAAWg9C,UAAY,MAAQ,KAE9C4qC,IAAI79B,QAAQ+R,OACb8rB,IAAI79B,QAAQ+R,KAAO,IAGvB,IAAIgsB,UAAYt9I,EAAEu9I,SAASC,YACvBx9I,EAAEu9I,SAASp4I,OAASg4I,4BACpBG,UAAY,CAAC,CAACA,aAGdt9I,EAAEu9I,SAASp4I,OAASg4I,wBACpBG,UAAY,CAACA,aAGjB,EAAAhgC,UAAA,SAASggC,UAAW,SAACpsB,MAGjB,IAAMusB,oBAAqB,EAAAj0C,MAAA,SAAK0nB,KAAM,SAACwsB,aACnC,OAAO,EAAAl0C,MAAA,SAAKk0C,YAAa,SAACC,OAEtB,IAAMC,aAAeD,MAAMtzI,QAAQuvC,UAGnC,OAFY,IAAI2/F,qBAAA,QAAoBqE,aAAcR,IAAI/0C,cAAe+0C,IAAIzC,eAE9Dp7C,qBAInB69C,IAAI79B,QAAQ+R,KAAKpqH,KAAKu2I,8DASpB,IAAAxoD,OAAAvxF,KACLA,KAAKw3F,aAKV/I,KAAKC,IAAI8G,UAAU,CACfp+D,IAAG,2BAAA5lB,OAA6BxR,KAAK6vF,KAAKtjE,cAAvC,YACH4tH,WAAW,IACZ90H,KAAK,SAACzf,MACL,IAEI2rF,OAAK6oD,aAAax0I,MACpB,MAAO3J,GACL,MAAM,IAAIU,MAAMV,EAAEsuB,YAEvBssB,KAAK,SAACgjB,MAAOu8E,WAAYiE,aACxB5tH,QAAQ1U,MAAR,kCAAAvG,OAAgD+/E,OAAK1B,KAArD,MAAAr+E,OAA8D4kI,aAE9D7kD,OAAK4kD,SAAU,EACftjD,mBAAA,QAAkBlgF,QAAQ2d,uCAWT,IAAAgqH,OAAAt6I,KAApBq1I,YAAoB,EAAAxwI,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAN,KACX7E,KAAKovF,SAITpvF,KAAKm2I,SAAU,EACfn2I,KAAKivF,SAAShtC,QAAQssC,YAAAyC,MAAMC,mBAAmB,GAE3CokD,aAAeA,YAAYxlD,KAAKtjE,gBAAkBvsB,KAAK6vF,KACvD7vF,KAAKu6I,4BAA4BlF,aAMrC5mD,KAAKC,IAAI8G,UAAU,CACfp+D,IAAG,mBAAA5lB,OAAqBxR,KAAK6vF,KAAKtjE,cAA/B,SACH4tH,WAAW,IACZ90H,KAAK,SAACw4C,UAAD,OAAcy8E,OAAKE,qBAAqB38E,YAC3ChnB,KAAK,WAAA,OAAayjG,OAAKG,mBAALjqI,MAAA8pI,OAAIz1I,kEAyCHg5D,UAGxB79D,KAAK4F,KAAOi4D,SACZ79D,KAAKm2I,SAAU,EACfn2I,KAAKovF,QAAS,EAEdpvF,KAAKojC,KAAKy6B,UACV79D,KAAKswB,oDAaa2pH,MAAOtxC,UACzB,IAAK,IAAItsG,EAAI,EAAGA,EAAI2D,KAAKu2I,SAASv5I,OAAQX,IAAK,CAG3C,GAFiB2D,KAAKu2I,SAASl6I,GAElBq+I,cAAcT,MAAOtxC,UAC9B,OAAO,EAIf,OAAO,qCAUAsxC,OACP,OAAO,EAAA/nC,UAAA4C,YAAWmlC,MAAOj6I,KAAK67F,oDAzpB9B,OAAO77F,KAAK0jI,eAAe50B,gDAW3B,OAAO9uG,KAAK0jI,wDAWZ,OAAO1jI,KAAK0jI,eAAe7nC,uDAW3B,OAAO77F,KAAK0jI,eAAeuT,4DAU3B,OAAO,EAAAz9B,OAAA,SAAMx5G,KAAK8uG,UAAY,KAAO,mCAcrC,OAAO,EAAAurB,QAAA,SAAOr6H,KAAKq2I,kBAAkBS,QAAS,8CAa9C,OAAO/jH,KAAKC,MAAMhzB,KAAK8uG,UAAY7I,mBAAAqZ,YAAYq7B,4FAU/C,OAAO36I,KAAK02I,q6BC3VpB,IAAA58B,UAAA/rB,uBAAAvxF,QAAA,mBACAumI,WAAAh1C,uBAAAvxF,QAAA,oBACAspG,MAAA/X,uBAAAvxF,QAAA,eACAszH,YAAA/hC,uBAAAvxF,QAAA,sBACAq5I,qBAAA9nD,uBAAAvxF,QAAA,gCACAu8F,iBAAAv8F,QAAA,gCACA6pG,gBAAA7pG,QAAA,+BACAoxG,QAAApxG,QAAA,gmDAOqBo+I,mCAQjB,SAAAA,cAAYh1I,KAAMi1I,gBAAiB5D,eAAe,IAAAhjI,MAG9C,iIAH8C66E,CAAA9uF,KAAA46I,eAC9C3mI,MAAAs7G,2BAAAvvH,KAAAwvH,gBAAAorB,eAAA79I,KAAAiD,QAEK4F,OAASi1I,mBAAoB,EAAA9X,WAAA,SAAUkU,eAExC,MAAM,IAAI/kH,UAAU,yFAiExB,OApDAje,MAAKu5G,KAAO,GAUZv5G,MAAK6mI,aAAe,GAUpB7mI,MAAK+e,MAAQ+lE,iBAAA2K,eAUbzvF,MAAKspG,QAAUxkB,iBAAA2K,eAUfzvF,MAAK8mI,eAAiB,GAUtB9mI,MAAK2kI,uBAAyB,GAE9BrpB,2BAAAt7G,MAAOA,MAAKygF,MAAM9uF,KAAMi1I,gBAAiB5D,wZA9ENnnB,YAAA,+EA8FjClqH,KAAMi1I,gBAAiB5D,eASzB,OARAj3I,KAAKgzB,OAAQ,EAAAqzE,gBAAA20C,oBAAmBp1I,KAAKotB,OACrChzB,KAAKu9G,SAAU,EAAAlX,gBAAA20C,oBAAmBp1I,KAAK23G,SACvCv9G,KAAK+6I,eAAiBn1I,KAAKm1I,eAC3B/6I,KAAKwtH,KAAOxtH,KAAKi7I,yBAAyBr1I,KAAK4nH,KAAMqtB,gBAAiB5D,eACtEj3I,KAAK86I,cAAe,EAAAh1C,MAAA,SAAK9lG,KAAKwtH,KAAM,SAACn3E,GAAD,OAAOA,EAAEwlD,mBAE7C77F,KAAKk7I,oBAAoBt1I,KAAMi1I,gBAAiB5D,eAEzCj3I,iDAGS4F,KAAMi1I,gBAAiB5D,eACvC,GAAKrxI,KAAKizI,eAAV,CAOA,IAAMD,uBAAyBhzI,KAAKizI,eAAe1nI,IAAI,SAAC45C,UAGpD,OAF2B,IAAI8qF,qBAAA,QAAoB9qF,SAAU8vF,gBAAiB5D,eAEpDp7C,mBAG9B77F,KAAK44I,uBAAyBA,2BAb9B,CACI,IAAMuC,uBAAyBn7I,KAAKo7I,2CACpCp7I,KAAK44I,uBAAyB,CAACuC,4FAsBI,IAAAE,oBAAAl/C,eACpBn8F,KAAK86I,aAAa,GADE,GAClCQ,KADkCD,oBAAA,GAC5BE,KAD4BF,oBAAA,GAAAG,qBAAAr/C,eAEpBn8F,KAAK86I,aAAa,GAFE,GAElCW,KAFkCD,qBAAA,GAE5BE,KAF4BF,qBAAA,GAAAzD,2BAAA,EAAAC,mBAAA,EAAAC,oBAAAr1I,EAAA,IAKvC,IAAA,IAAAs1I,MAAAC,UAAoBn4I,KAAK86I,aAAzBz1G,OAAAC,cAAAyyG,2BAAAG,MAAAC,UAAAhyH,QAAAd,MAAA0yH,2BAAA,EAAuC,CAAA,IAA5BkC,MAA4B/B,MAAA1yI,MACnC81I,KAAOvoH,KAAKw5C,IAAI+uE,KAAMrB,MAAM,IAC5BwB,KAAO1oH,KAAKi6B,IAAIyuF,KAAMxB,MAAM,IAC5BsB,KAAOxoH,KAAKw5C,IAAIgvE,KAAMtB,MAAM,IAC5ByB,KAAO3oH,KAAKi6B,IAAI0uF,KAAMzB,MAAM,KATO,MAAAj3I,KAAAg1I,mBAAA,EAAAC,eAAAj1I,IAAA,QAAA,IAAA+0I,2BAAA,MAAAI,UAAA,QAAAA,UAAA,SAAA,QAAA,GAAAH,kBAAA,MAAAC,gBAavC,MAAO,EACFqD,KAAOG,MAAQ,GACfF,KAAOG,MAAQ,mCASpB17I,KAAKwtH,KAAO,GACZxtH,KAAKgzB,MAAQ+lE,iBAAA2K,eACb1jG,KAAKu9G,QAAUxkB,iBAAA2K,eACf1jG,KAAK+6I,eAAiB,yCAcZd,MAAOtxC,UACjB,QAAIA,SAAW3oG,KAAKgzB,OAAShzB,KAAKu9G,QAAU5U,WAIrC3oG,KAAK27I,gBAAgB1B,+CAWhBA,OACZ,OAAO,EAAArsC,QAAA2f,eAAc0sB,MAAOj6I,KAAK86I,yDAWlBb,OACf,OAAO,EAAA5zC,gBAAA0f,KAAG,EAAAnY,QAAA8f,kBAAiBusB,MAAOj6I,KAAK86I,gEAiBlBc,SAAUf,gBAAiB5D,eAChD,IAAM4E,oBAAqB,EAAA/1C,MAAA,SAAK81C,SAAU,SAACpuB,MACvC,OAAO,IAAIqoB,qBAAA,QAAoBroB,KAAMqtB,gBAAiB5D,iBAMpDnlE,UAAY+pE,mBAAmB7+I,OAAS,EACxC8+I,2BAA6BD,mBAFhB,GAE+ChgD,iBAC5DkgD,0BAA4BF,mBAAmB/pE,WAAW+pB,iBAMhE,OAJI,EAAAie,UAAA,SAASgiC,2BAA4BC,4BACrCF,mBAAmBjnI,MAGhBinI,wgBCxPf,IAAA7tD,QAAAD,uBAAAvxF,QAAA,iBACAumI,WAAAh1C,uBAAAvxF,QAAA,oBACAw/I,UAAAjuD,uBAAAvxF,QAAA,eACA4yH,iBAAArhC,uBAAAvxF,QAAA,2BACAq5I,qBAAA9nD,uBAAAvxF,QAAA,gCACA41G,oBAAA51G,QAAA,4iDAYqBy/I,wCAQjB,SAAAA,cAAYC,QAASlF,YAAamF,qBAAsBlF,eAAe,IAAAhjI,MAGnE,iIAHmE66E,CAAA9uF,KAAAi8I,eACnEhoI,MAAAs7G,2BAAAvvH,KAAAwvH,gBAAAysB,eAAAl/I,KAAAiD,QAEI,EAAAguF,QAAA,SAAOkuD,WAAY,EAAAluD,QAAA,SAAOgpD,eAAgB,EAAAhpD,QAAA,SAAOmuD,yBAA0B,EAAApZ,WAAA,SAAUkU,eACrF,MAAM,IAAI/kH,UAAU,+JAAA,GAAA1gB,OAAAiiG,QAENyoC,SAFM,MAAA1qI,OAAAiiG,QAEaujC,aAFb,MAAAxlI,OAAAiiG,QAEoC0oC,sBAFpC,SAAA3qI,OAAAiiG,QAEuEwjC,iBAG/F,IAAI,EAAA7kC,oBAAAsB,mBAAkBwoC,SAClB,MAAM,IAAIhqH,UAAU,wDAAA,4CAAA1gB,OAAAiiG,QACmCyoC,WAG3D,IAAI,EAAA9pC,oBAAAsB,mBAAkBsjC,aAClB,MAAM,IAAI9kH,UAAU,4DAAA,4CAAA1gB,OAAAiiG,QACmCujC,eAG3D,KAAMmF,gCAAgCtG,qBAAA,SAClC,MAAM,IAAI3jH,UAAU,qEAAA,0DAAA1gB,OAAAiiG,QACiD0oC,wBArBN,OAwCnEloI,MAAKygF,MAAMwnD,QAASlF,YAAamF,qBAAsBlF,eAxCYhjI,8YARhCm7G,iBAAA,+EAqFjC8sB,QAASlF,YAAamF,qBAAsBlF,eAC9Cj3I,KAAKirI,OAASjrI,KAAKo8I,gBAAgBF,QAASlF,YAAamF,qBAAsBlF,4DAa/E,OAAOj3I,KAAKirI,OAAOrP,OAAO,SAACygB,IAAKlrI,KAC5B,OAAIA,IAAImrI,SACGD,IAGX,GAAA7qI,OAAAuqF,mBACO5qF,IAAIwU,OADXo2E,mBAEOsgD,OAER,iDAWH,OAAOr8I,KAAKirI,OAAOrP,OAAO,SAACygB,IAAKlrI,KAC5B,OAAIA,IAAImrI,SACGD,IAGX,GAAA7qI,OAAAuqF,mBACOsgD,KADP,CAEIlrI,IAAIxQ,QAET,0CAWH,OAAOX,KAAKirI,OAAO95H,IAAI,SAACA,KAAD,OAASA,IAAIxQ,8CAUzBo1B,OACX/1B,KAAKirI,OAAOv3G,QAAQ,SAACviB,KACjBA,IAAImrI,UAAYvmH,MAAM60C,SAASz5D,IAAIxQ,gDAe3Bu7I,QAASlF,YAAamF,qBAAsBlF,eACxD,OAAOiF,QAAQ/qI,IAAI,SAACqF,MAChB,IAAMrF,IAAM,IAAI6qI,UAAA,QAASxlI,KAAM2lI,qBAAsBlF,eAIrD,OAFA9lI,IAAImrI,UAAYtF,YAAYpsE,SAASz5D,IAAIxQ,MAElCwQ,6CAjHX,OAAOnR,KAAKirI,OAAOpwG,KAAK,SAAC1pB,KAAD,OAAUA,IAAImrI,wCAWtC,OAAOt8I,KAAKirI,2cCvFpB,IAAAj9C,QAAAD,uBAAAvxF,QAAA,iBACAumI,WAAAh1C,uBAAAvxF,QAAA,oBACAg+H,WAAAzsC,uBAAAvxF,QAAA,oBACAszH,YAAA/hC,uBAAAvxF,QAAA,sBACAg8F,sBAAAzK,uBAAAvxF,QAAA,iCACAq5I,qBAAA9nD,uBAAAvxF,QAAA,gCACA41G,oBAAA51G,QAAA,4iDAeqB+/I,8BAQjB,SAAAA,SAAYprI,IAAK0pI,gBAAiB5D,eAAe,IAAAhjI,MAG7C,iIAH6C66E,CAAA9uF,KAAAu8I,UAC7CtoI,MAAAs7G,2BAAAvvH,KAAAwvH,gBAAA+sB,UAAAx/I,KAAAiD,QAEI,EAAAguF,QAAA,SAAO78E,OAAQ,EAAA68E,QAAA,SAAO6sD,oBAAqB,EAAA9X,WAAA,SAAUkU,eACrD,MAAM,IAAI/kH,UAAU,uHAAA,gBAAA1gB,OAAAiiG,QAEOtiG,KAFP,MAAAK,OAAAiiG,QAEsBonC,iBAFtB,SAAArpI,OAAAiiG,QAEoDwjC,iBAG5E,IAAI,EAAA7kC,oBAAA4d,oBAAmB7+G,KACnB,MAAM,IAAI+gB,UAAU,+CAAA,6CAAA1gB,OAAAiiG,QACoCtiG,OAG5D,KAAK,EAAAqpH,WAAA,SAAUrpH,IAAIxQ,MACf,MAAM,IAAIuxB,UAAU,+CAAA,kDAAA1gB,OAAAiiG,QACyCtiG,IAAIxQ,QAGrE,IAAI,EAAAyxG,oBAAAsB,mBAAkBviG,IAAIwU,OACtB,MAAM,IAAIuM,UAAU,+CAAA,4DAAA1gB,OAAAiiG,QACmDtiG,IAAIwU,SAG/E,KAAMk1H,2BAA2BhF,qBAAA,SAC7B,MAAM,IAAI3jH,UAAU,2DAAA,0DAAA1gB,OAAAiiG,QACiDonC,mBAiCzE,OAtBA5mI,MAAKqoI,UAAW,EAUhBroI,MAAK0R,MAAQ,GAUb1R,MAAKtT,KAAO,GAEZ4uH,2BAAAt7G,MAAOA,MAAKygF,MAAMvjF,IAAK0pI,gBAAiB5D,mZAnEVnnB,YAAA,0EAkF5B3+G,IAAK0pI,gBAAiB5D,eAMxB,OALAj3I,KAAKs8I,UAA4B,IAAjBnrI,IAAImrI,SACpBt8I,KAAKW,KAAOwQ,IAAIxQ,KAEhBX,KAAKw8I,eAAerrI,IAAIwU,MAAOk1H,gBAAiB5D,eAEzCj3I,qCAQPA,KAAKs8I,UAAW,EAChBt8I,KAAK2lB,MAAQ,GACb3lB,KAAKW,KAAO,0CAiBDglB,MAAOk1H,gBAAiB5D,eACnCj3I,KAAK2lB,MAAQA,MAAMxU,IAAI,SAACtN,MACpB,IAAM44I,8BAAgC,CAAC5B,gBAAiB5D,eAClDyF,qBAAuB,CAAC74I,KAAK,GAAIA,KAAK,IACtC84I,mBAAqB,CAAC94I,KAAK,GAAIA,KAAK,IACpC+4I,cAAgBpkD,sBAAA,QAAqBigD,0BAArBjoI,MAAAgoF,sBAAA,QAAA,CAClBkkD,sBADkBlrI,OAEfirI,gCAEDI,YAAcrkD,sBAAA,QAAqBigD,0BAArBjoI,MAAAgoF,sBAAA,QAAA,CAChBmkD,oBADgBnrI,OAEbirI,gCAGP,MAAA,GAAAjrI,OAAAuqF,mBAAW6gD,eAAX7gD,mBAA6B8gD,6eCtJzC,IAAArrC,OAAAzjB,uBAAAvxF,QAAA,gBACAo9G,UAAA7rB,uBAAAvxF,QAAA,mBACAwxF,QAAAD,uBAAAvxF,QAAA,iBACA4yH,iBAAArhC,uBAAAvxF,QAAA,8BACAg1H,aAAAzjC,uBAAAvxF,QAAA,kBACAsgJ,yBAAA/uD,uBAAAvxF,QAAA,8BACA41G,oBAAA51G,QAAA,oqCAUqBugJ,2CAMjB,SAAAA,iBAAYC,WAAYb,sBAAsB,IAAAloI,MAG1C,iIAH0C66E,CAAA9uF,KAAA+8I,kBAC1C9oI,MAAAs7G,2BAAAvvH,KAAAwvH,gBAAAutB,kBAAAhgJ,KAAAiD,QAEI,EAAAguF,QAAA,SAAOgvD,cAAe,EAAAhvD,QAAA,SAAOmuD,sBAC7B,MAAM,IAAIjqH,UAAU,4HAAA,gBAAA1gB,OAAAiiG,QAEOupC,YAFP,SAAAxrI,OAAAiiG,QAEgC0oC,wBAGxD,IAAI,EAAA/pC,oBAAAsB,mBAAkBspC,YAClB,MAAM,IAAI9qH,UAAU,8DAAA,4CAAA1gB,OAAAiiG,QACmCupC,cAXjB,OAoC1C/oI,MAAKgpI,sBAAwB,KAW7BhpI,MAAKipI,qBAAuB,GAE5BjpI,MAAKygF,MAAMsoD,WAAYb,sBAjDmBloI,iZANJm7G,iBAAA,kFA4EpC4tB,WAAYb,sBACdn8I,KAAKi9I,sBAAwBd,qBAE7Bn8I,KAAKm9I,mBAAmBH,YACxBh9I,KAAKo9I,8DAULp9I,KAAKi9I,sBAAwB,KAC7Bj9I,KAAKk9I,qBAAuB,iDAaVG,qBAMlB,IALA,IAAIC,WAAa,GACbC,oBAAsB7iH,EAAAA,EACpB8iH,SAAW,GACX9wC,KAAO2wC,sBAEJhhJ,EAAI,EAAGA,EAAI2D,KAAKirI,OAAOjuI,OAAQX,IAAK,CACzC,IAAMwuG,OAAS7qG,KAAKirI,OAAO5uI,GAE3BmhJ,SAAS3yC,OAAOlqG,MAAQoyB,KAAK69B,IAAIi6C,OAAOiC,MAAQJ,KAAKI,OAASJ,KAAKh5C,MAGvE,IAAK,IAAM+pF,WAAUD,SACbA,SAASC,SAAUF,qBAEnBA,mBAAqBC,SADrBF,WAAaG,UAKrB,OAAOH,qEAeuBlS,YAC9B,IAAK,IAAI/uI,EAAI,EAAGA,EAAI2D,KAAKhD,OAAQX,IAAK,CACd2D,KAAKirI,OAAO5uI,GAEpB+wG,wBAAwBg+B,6DAUL,IAAjBphC,WAAiB,EAAAnlG,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAJ,GAC/B,OAAO,EAAA2sG,OAAA,SAAMxxG,KAAKirI,OAAQ,CAAEtqI,KAAMqpG,WAAWzuD,iBAAoB,iEAUjC89F,kBAAmBC,sBACnD,OAAOt5I,KAAKk9I,qBAAqB7D,kBAAkB99F,eAAe+9F,qBAAqB/9F,0DAYxE89F,kBAAmBC,sBAMlC,OAL2Bt5I,KAAKswG,oCAC5B+oC,kBACAC,sBAGsB/oC,oDAQXysC,YAAY,IAAA9rD,OAAAlxF,MAC3B,EAAA45G,UAAA,SAASojC,WAAY,SAACnyC,QAClB3Z,OAAKwsD,uBAAuB,IAAIlsB,aAAA,QAAY3mB,OAAQ,EAAG3Z,OAAK+rD,wBAC5D/rD,OAAKwsD,uBAAuB,IAAIlsB,aAAA,QAAY3mB,OAAQ,EAAG3Z,OAAK+rD,yEAS7ChzC,aACnBjqG,KAAKirI,OAAOznI,KAAKymG,iEAYjB,IAAK,IAAI5tG,EAAI,EAAGA,EAAI2D,KAAKhD,OAAQX,IAAK,CAClC,IAAMshJ,cAAgB39I,KAAKirI,OAAO5uI,GAElC2D,KAAKk9I,qBAAqBS,cAAch9I,MAAQ,GAEhDX,KAAK49I,mCAAmCD,2EAYb1zC,aAC/B,IAAK,IAAI5tG,EAAI,EAAGA,EAAI2D,KAAKhD,OAAQX,IAAK,CAClC,IAAMwhJ,iBAAmB79I,KAAKirI,OAAO5uI,GAEjC4tG,YAAYtpG,OAASk9I,iBAAiBl9I,OACtCX,KAAKk9I,qBAAqBjzC,YAAYtpG,MAAMk9I,iBAAiBl9I,MAAQ,IAAIm8I,yBAAA,QACrE7yC,YACA4zC,oDA9KZ,OAAO79I,KAAKirI,yeCjFpB,IAAAzxB,OAAAzrB,uBAAAvxF,QAAA,gBACAk1G,UAAA3jB,uBAAAvxF,QAAA,mBACAszH,YAAA/hC,uBAAAvxF,QAAA,yBACAq5I,qBAAA9nD,uBAAAvxF,QAAA,mCACAypG,mBAAAzpG,QAAA,qCACA6xF,kBAAA7xF,QAAA,oCACAu8F,iBAAAv8F,QAAA,mCACA0pG,QAAA1pG,QAAA,qBAIAq8F,MAAAr8F,QAAA,mBAIA29G,YAAA39G,QAAA,yBAIA4pG,gBAAA5pG,QAAA,kCACA6pG,gBAAA7pG,QAAA,gqCAaqBshJ,iCASjB,SAAAA,cAAqD,IAAA7pI,MAAzCxW,QAAyC,EAAAoH,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAA/B,GAAI8H,IAA2B,EAAA9H,UAAA7H,OAAA6H,UAAA,QAAAjC,EAAtBu5I,qBAAsB,EAAAt3I,UAAA7H,OAAA6H,UAAA,QAAAjC,EAAA,qIAAAksF,CAAA9uF,KAAA89I,cACjD7pI,MAAAs7G,2BAAAvvH,KAAAwvH,gBAAAsuB,aAAA/gJ,KAAAiD,QAOKm8I,qBAAuB,KAQ5BloI,MAAKyvH,eAAiB,KAStBzvH,MAAKtT,KAAO,GASZsT,MAAK64F,OAAS,IAOd74F,MAAK6gD,MAAQ,EAMb7gD,MAAKg2H,IAAM,CACPp5F,SAAS,EACTktG,aAAa,EAAA13C,gBAAAyS,IAAG,IAEhBoxB,oBAAoB,EAAA7jC,gBAAAqD,kBAAiB,IAQzCz1F,MAAKjX,OAAS,KAMdiX,MAAK+pI,iBAAkB,EAAA33C,gBAAAyS,IAAG,GAY1B7kG,MAAKsjC,MAAQ,GASbtjC,MAAKguG,0BAA4B,KAEjChuG,MAAKygF,MAAMj3F,QAASkP,IAAKwvI,sBAxFwBloI,4YAThB67G,YAAA,oFA4GjC9vH,KAAKu3C,MAAQ,GACbv3C,KAAKiiH,0BAA4B,mCA+D/Br8G,KAAM+G,IAAKwvI,sBASb,GARAn8I,KAAKm8I,qBAAuBA,qBAC5Bn8I,KAAKW,KAAOiF,KAAKjF,KAAKgM,KAGlB/G,KAAKkvD,QACL90D,KAAK80D,MAAQlvD,KAAKkvD,MAAMnoD,MAGxB/G,KAAK+G,IAAK,CACV,IAAMsxI,aAAuB,IAARtxI,IACjB,EACA,EAEEuxI,SAAW,IAAIrI,qBAAA,QACjBjwI,KAAK+G,IAAIA,KACT3M,KAAKm8I,qBACLn8I,KAAKm8I,qBAAqBlF,eAExBkH,QAAU,IAAItI,qBAAA,QAChBjwI,KAAK+G,IAAIsxI,cACTj+I,KAAKm8I,qBACLn8I,KAAKm8I,qBAAqBlF,eAI9Bj3I,KAAK0jI,eAAiBwa,SACtBl+I,KAAKhD,QAAS,EAAAqpG,gBAAAyS,IAAGolC,SAASr/B,mBAAmBs/B,UAC7Cn+I,KAAK8sG,MAAQoxC,SAASh4B,kBAAkBi4B,SAGxCv4I,KAAKqkI,MACLjqI,KAAKiqI,IAAIp5F,QAAUjrC,KAAKqkI,IAAIt9H,MAG5B/G,KAAKw4I,eACLp+I,KAAKiqI,IAAI8T,aAAc,EAAA13C,gBAAAyS,IAAGlzG,KAAKw4I,aAAazxI,OAG5C/G,KAAKy4I,aACLr+I,KAAKiqI,IAAIC,oBAAqB,EAAA7jC,gBAAAqD,kBAAiB9jG,KAAKy4I,WAAW1xI,qDAuBjDqvF,SAAUkuC,oBACvBA,qBACDA,mBAAqBlqI,KAAKiqI,IAAIC,oBAGlCluC,SAAWjpE,KAAKi6B,IAAI,EAAGgvC,UACvB,IAAMsiD,MAAO,EAAAzlD,MAAA0lD,MAAI,EAAA1lD,MAAAoV,KAAIi8B,qBAGrB,OAAOlqI,KAAK8uG,UAAawvC,MAAO,EAAAj4C,gBAAAm4C,OAAMxiD,4EAWtC,OAAOh8F,KAAK6jH,uBAAsB,EAAAxd,gBAAAyS,IAAGzqB,kBAAA2xB,kBAAkBC,iGAWvD,IAAMw+B,2BAA6Bz+I,KAAK0+I,0CAGxC,OAFiC,EAAAllC,OAAA,SAAMilC,4BAA6B,0CAepE,OAAO,EAAAr4C,gBAAAkE,cAAatqG,KAAKW,iDAUVyqI,YACfprI,KAAKu3C,MAAM/zC,KAAK4nI,4DAUIA,YACpBprI,KAAKu3C,OAAQ,EAAAm6D,UAAA,SAAS1xG,KAAKu3C,MAAO6zF,sDAWpBA,YACd,OAAOprI,KAAKusG,yBAAyB6+B,cAAgBryC,iBAAA2K,6DAWnC0nC,YAClB,OAAqD,IAA9CprI,KAAKusG,yBAAyB6+B,6DAWhBA,YACrB,OAAOprI,KAAKu3C,MAAM/qC,QAAQ4+H,qEAYGuT,WAC7B,OAAO,EAAAxkC,YAAAuG,yBAAwB1gH,KAAK8sG,MAAO6xC,sDAU5BxlD,eACf,IAAMylD,gBAAiB,EAAAzkC,YAAAyJ,WAAUzqB,cAAen5F,KAAK67F,iBAAkB77F,KAAK8sG,OAEtE8Z,qBAD+B,EAAA/tB,MAAAoV,MAAI,EAAA5H,gBAAA0f,IAAG64B,eAAe,MACC34C,mBAAAqZ,YAAYuH,8DAClEg4B,yBAA+C,EAApBD,eAAe,GAEhD,OAAOh4B,qBAAuBi4B,gFAWHC,qBAG3B,OAFmB,EAAAjmD,MAAAoV,MAAI,EAAA/H,QAAAwK,cAAaouC,oBAAqB9+I,KAAK8sG,QAE1C7G,mBAAAqZ,YAAYy/B,iGAvQhC,OAAO/+I,KAAK0jI,eAAe7nC,uDAW3B,OAAO77F,KAAK0jI,2CAWZ,OAAO1jI,KAAK0jI,eAAe5iB,sCAS3B,OAAO9gH,KAAK0jI,eAAe50B,WAAa9uG,KAAKm8I,qBAAqBrtC,gDAWlE,OAAO,EAAA5I,QAAAuD,mBAAkBzpG,KAAK8sG,MAAQ/5E,KAAK89B,qpBCnMnD,QAAAkpD,gBAAAv9G,QAAA,sDACA6pG,gBAAA7pG,QAAA,kCAKAq8F,MAAAr8F,QAAA,mBACA0pG,QAAA1pG,QAAA,qBACA29G,YAAA39G,QAAA,yBACAoxG,QAAApxG,QAAA,qBACAypG,mBAAAzpG,QAAA,6TAOqBwiJ,mCAOjB,SAAAA,wBAAYrB,cAAeE,kBACvB,iIADyC/uD,CAAA9uF,KAAAg/I,0BACpCrB,gBAAkBE,iBACnB,MAAM,IAAI3rH,UAAU,kFAQxBlyB,KAAKi/I,KAAM,EAAAllC,WAAA,SAAU,4BAOrB/5G,KAAKk/I,cAAgB,IAOrBl/I,KAAKm/I,eAAiB,IAOtBn/I,KAAKo/I,YAAa,EAOlBp/I,KAAKuwG,UAAW,EAOhBvwG,KAAKwwG,mBAAqB,IAE1BxwG,KAAKq/I,4BAA4B1B,cAAeE,mKAWxBF,cAAeE,kBACvC,IAAMr4H,QAAS,EAAA20F,YAAAyJ,WAAU+5B,cAAeE,iBAAiBhiD,iBAAkB8hD,cAAc7wC,OAEzF9sG,KAAKk/I,cAAe,EAAArmD,MAAAoV,KAAIzoF,OAAO,IAC/BxlB,KAAKm/I,eAAgB,EAAAtmD,MAAAoV,KAAIzoF,OAAO,IAChCxlB,KAAKo/I,YAAa,EAAAxxC,QAAA0xC,eACd3B,cAAc9hD,iBACd8hD,cAAc7wC,MACd+wC,iBAAiBhiD,iBACjBgiD,iBAAiB/wC,OAErB9sG,KAAKuwG,UAAW,EAAA1X,MAAAoV,MAAI,EAAA/H,QAAAwK,cAAaitC,cAAc7wC,MAAO+wC,iBAAiB/wC,SAAU,EAAAzG,gBAAAqD,kBAAiB,IAClG1pG,KAAKwwG,kBAAoBxwG,KAAKu/I,oFAqB9B,IAAIrvC,oBAAsBjK,mBAAAwJ,WAAWU,oBAC/BqvC,8BAA+B,EAAAn5C,gBAAAm4C,OAAMx+I,KAAKk/I,cAahD,OAXoC,MAAhCM,8BAAwCA,8BAAgC,KAExEtvC,qBAAsB,EAAA7J,gBAAAyS,IAAG,GACa,KAA/B0mC,8BAAuCA,8BAAgC,KAE9EtvC,qBAAsB,EAAA7J,gBAAAyS,IAAG,KACa,KAA/B0mC,8BAAuCA,8BAAgC,MAE9EtvC,qBAAsB,EAAA7J,gBAAAyS,IAAG,IAGtB5I,sDAQPlwG,KAAKk/I,cAAgB,IACrBl/I,KAAKm/I,eAAiB,IACtBn/I,KAAKo/I,YAAa,EAClBp/I,KAAKuwG,UAAW,EAChBvwG,KAAKwwG,mBAAqB,kgBC7IlC,IAAA1c,WAAAt3F,QAAA,kTAaqBijJ,4BAMjB,SAAAA,iBAAY1wD,SAAUnpF,MA6BlB,qIA7BwBkpF,CAAA9uF,KAAAy/I,kBAQxBz/I,KAAK0/I,oBAAsB95I,KAS3B5F,KAAK2/I,mBAAqB,KAU1B3/I,KAAK4/I,UAAY,KAEV5/I,KAAKojC,KAAK2rD,6HAYhBA,UAID,OAHA/uF,KAAKuvI,gBAAgBxgD,UACrB/uF,KAAK+wF,OAAO/wF,KAAK0/I,qBAEV1/I,qCAeP,OAJAA,KAAK0/I,oBAAsB,KAC3B1/I,KAAK2/I,mBAAqB,KAC1B3/I,KAAK4/I,UAAY,KAEV5/I,6CAcK+uF,UAIZ,OAHA/uF,KAAK4/I,UAAY7wD,SAASjiD,KAAKgnD,WAAAuB,UAAUC,cAAcuqD,yBACvD7/I,KAAK2/I,mBAAqB3/I,KAAK4/I,UAAU9yG,KAAKgnD,WAAAuB,UAAUC,cAAcwqD,oBAE/D9/I,oCAaJ+/I,mBACH//I,KAAK0/I,oBAAsBK,kBAE3B//I,KAAK2/I,mBAAmB13F,KAAKjoD,KAAK0/I,0DAYlC1/I,KAAK4/I,UAAUhpF,YAAYk9B,WAAAuB,UAAUuL,WAAWxmF,8UC7HxD,IAAAg+E,MAAArK,uBAAAvxF,QAAA,eACA2xF,UAAAJ,uBAAAvxF,QAAA,oBACAwjJ,kBAAAjyD,uBAAAvxF,QAAA,uBACA+xF,YAAA/xF,QAAA,qYAWqByjJ,sCAOjB,SAAAA,2BAAYlxD,SAAUkG,iBAAkBirD,aAmDpC,qIAnDiDpxD,CAAA9uF,KAAAigJ,4BAWjDjgJ,KAAKmgJ,kBAAoB,KAUzBngJ,KAAK4/I,UAAY,KASjB5/I,KAAKk0F,UAAY,KAUjBl0F,KAAKogJ,WAAanrD,iBASlBj1F,KAAKqgJ,aAAeH,YAAY3zH,cAEzBvsB,KAAKojC,KAAK2rD,2IAgBjB,OAHA/uF,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAM+D,eAAgB/0F,KAAKsgJ,yBAC7CtgJ,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAMuvD,qBAAsBvgJ,KAAKwgJ,sBAE5CxgJ,uCAcP,OAHAA,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAM+D,eAAgB/0F,KAAKsgJ,yBAC9CtgJ,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAMuvD,qBAAsBvgJ,KAAKwgJ,sBAE7CxgJ,kCAYN+uF,UAOD,OANA/uF,KAAKk0F,UAAY/F,UAAA,QAEjBnuF,KAAKygJ,sBAAsB1xD,UAC3B/uF,KAAKi0G,iBACLj0G,KAAKoyF,SAEEpyF,qCAmBP,OARAA,KAAK0gJ,iBAEL1gJ,KAAKk0F,UAAY,KACjBl0F,KAAK4/I,UAAY,KACjB5/I,KAAKqgJ,aAAe,KACpBrgJ,KAAKmgJ,kBAAoB,KACzBngJ,KAAKogJ,WAAa,KAEXpgJ,mDAYW+uF,UAClB,IAAM4xD,mBAAqB3gJ,KAAK4gJ,gBAAgB5gJ,KAAKqgJ,cAGrD,OAFArgJ,KAAKmgJ,kBAAoB,IAAIH,kBAAA,QAAiBjxD,SAAU4xD,oBAEjD3gJ,8CAgBP,OAHAA,KAAKsgJ,wBAA0BtgJ,KAAK6gJ,iBAAiBnuF,KAAK1yD,MAC1DA,KAAKwgJ,qBAAuBxgJ,KAAK8gJ,cAAcpuF,KAAK1yD,MAE7CA,8CAgBP,OAHAA,KAAKsgJ,wBAA0B,KAC/BtgJ,KAAKwgJ,qBAAuB,KAErBxgJ,6CAaK+gJ,UAOZ,OANoB/gJ,KAAKghJ,gBAAgBD,YAGrCA,SAAW,aAGR/gJ,KAAKogJ,WAAWW,kDAYXlxD,MACZ,OAAO,EAAAuI,MAAA,SAAKp4F,KAAKogJ,WAAYvwD,+CAahB6G,iBACb,IAAMqqD,SAAWrqD,gBAAgB7G,KAAKtjE,cAChC00H,yBAA2BjhJ,KAAK4gJ,gBAAgBG,UAEtD/gJ,KAAKmgJ,kBAAkBpvD,OAAOkwD,kEAY9BjhJ,KAAKmgJ,kBAAkBe,0aC1P/B,QAAAnnC,gBAAAv9G,QAAA,8UASqB2kJ,0BAKjB,SAAAA,gJAAcryD,CAAA9uF,KAAAmhJ,gBAQVnhJ,KAAKi/I,KAAM,EAAAllC,WAAA,WAQX/5G,KAAKirI,OAAS,uHAwBd,MAAM,IAAI/4G,UAAU,0GAapB,MAAM,IAAIA,UAAU,yGA3BpB,OAAOlyB,KAAKirI,OAAOjuI,oUCxC3B,IAAA+8G,WAAAhsB,uBAAAvxF,QAAA,oBACAg+H,WAAAzsC,uBAAAvxF,QAAA,8XASqB4kJ,qBACjB,SAAAA,YAAqC,IAAzBC,UAAyB,EAAAx8I,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAb,2IAAaiqF,CAAA9uF,KAAAohJ,WACjC,IAAME,iBAAmBthJ,KAAKuhJ,eAAeF,WAS7CrhJ,KAAKi/I,KAAM,EAAAllC,WAAA,SAAUunC,iIAcrB,MAAM,IAAIpvH,UAAU,+GAapB,MAAM,IAAIA,UAAU,sHAWTmvH,WACX,KAAK,EAAA7mB,WAAA,SAAU6mB,WACX,MAAM,IAAInvH,UAAU,6FAIxB,MAAA,GAAA1gB,OAAU6vI,UAAV,8UCjER,IAAAte,WAAAh1C,uBAAAvxF,QAAA,oBACAu9G,WAAAhsB,uBAAAvxF,QAAA,oBACAs5I,sBAAAt5I,QAAA,0BAMA0pG,QAAA1pG,QAAA,kBACA6pG,gBAAA7pG,QAAA,+BAOAu8F,iBAAAv8F,QAAA,gCACAglJ,mBAAAhlJ,QAAA,kCAKAoxG,QAAApxG,QAAA,40BAQqBilJ,gCAiBjB,SAAAA,uBAAoE,IAAxD3H,YAAwD,EAAAj1I,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAA1C,GAAI68I,UAAsC,EAAA78I,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAA1B,KAAMgyI,eAAoB,EAAAhyI,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAH,EAC7D,iIADgEiqF,CAAA9uF,KAAAyhJ,wBAC3D,EAAA3L,sBAAA+B,0BAAyBiC,aAC1B,MAAM,IAAI5nH,UAAU,yEAAA,yCAAA1gB,OACyBsoI,YADzB,MAQxB95I,KAAKi/I,KAAM,EAAAllC,WAAA,SAAU,mBASrB/5G,KAAK2hJ,SAAW,EAShB3hJ,KAAK4hJ,UAAY,EASjB5hJ,KAAK8uG,UAAY,EAQjB9uG,KAAK6hJ,mBAAqBH,UAQ1B1hJ,KAAK8hJ,eAAiBjL,eAEtB72I,KAAKojC,KAAK02G,oIA4ETA,aACD95I,KAAK2hJ,UAAW,EAAAt7C,gBAAA07C,iBAAgBjI,YAAY0H,mBAAAQ,qBAAqBC,WACjEjiJ,KAAK4hJ,WAAY,EAAAv7C,gBAAA07C,iBAAgBjI,YAAY0H,mBAAAQ,qBAAqBE,YAGf,MAA/CpI,YAAY0H,mBAAAQ,qBAAqBG,aACjCniJ,KAAK8uG,WAAY,EAAAzI,gBAAAmyC,gBAAesB,YAAY0H,mBAAAQ,qBAAqBG,yDAYrDp3F,UAChB,OAAOA,SAASm7D,kBAAkBlmH,gDAkBpB+qD,UACd,IAAMq3F,IAAK,EAAA/7C,gBAAAqD,kBAAiB1pG,KAAK2hJ,UAC3BU,IAAK,EAAAh8C,gBAAAqD,kBAAiB3+C,SAAS42F,UAC/BW,IAAK,EAAAj8C,gBAAAqD,kBAAiB3+C,SAAS62F,UAAY5hJ,KAAK4hJ,WAChDrtH,EAAIxB,KAAK6tF,IAAI0hC,IAAMvvH,KAAK69B,IAAIyxF,IAC5B/tH,EAAIvB,KAAK69B,IAAIwxF,IAAMrvH,KAAK6tF,IAAIyhC,IAAMtvH,KAAK6tF,IAAIwhC,IAAMrvH,KAAK69B,IAAIyxF,IAAMtvH,KAAK69B,IAAI0xF,IACzEC,EAAIxvH,KAAKyvH,MAAMjuH,EAAGD,GAExB,OAAO,EAAA4xE,QAAAuD,mBAAkB84C,EAAIviJ,KAAK8hJ,2DAWnB/2F,UACf,IAAM03F,EAAI1pD,iBAAA2pD,kBAAkBC,gBACtBP,IAAK,EAAA/7C,gBAAAqD,kBAAiB1pG,KAAK2hJ,UAC3BU,IAAK,EAAAh8C,gBAAAqD,kBAAiB3+C,SAAS42F,UAC/BiB,IAAK,EAAAv8C,gBAAAqD,kBAAiB3+C,SAAS42F,SAAW3hJ,KAAK2hJ,UAC/CW,IAAK,EAAAj8C,gBAAAqD,kBAAiB3+C,SAAS62F,UAAY5hJ,KAAK4hJ,WAChDllJ,EAAIq2B,KAAK6tF,IAAIgiC,GAAK,GAAK7vH,KAAK6tF,IAAIgiC,GAAK,GACnC7vH,KAAK69B,IAAIwxF,IAAMrvH,KAAK69B,IAAIyxF,IACxBtvH,KAAK6tF,IAAI0hC,GAAK,GAAKvvH,KAAK6tF,IAAI0hC,GAAK,GAIzC,OAFUG,GADA,EAAI1vH,KAAKyvH,MAAMzvH,KAAK8vH,KAAKnmJ,GAAIq2B,KAAK8vH,KAAK,EAAInmJ,2EAeXquI,QAAS/uC,UAAU,IAAA8mD,uBAAA3mD,eAC1Cn8F,KAAK+iJ,0CAA0ChY,QAAS/uC,UADd,GAI7D,OAF6B,IAAIylD,qBAAqB,CAFOqB,uBAAA,GAAAA,uBAAA,IAEK9iJ,KAAK6hJ,mBAAoB7hJ,KAAK8hJ,kFAkB1D/W,QAAS/uC,UAC/C,IAAMymD,EAAI1pD,iBAAA2pD,kBAAkBC,gBACtBJ,EAAIxX,QAAU/qI,KAAK8hJ,eAEnBkB,EADIhnD,SACIymD,EACRL,IAAK,EAAA/7C,gBAAAqD,kBAAiB1pG,KAAK2hJ,UAC3BsB,IAAK,EAAA58C,gBAAAqD,kBAAiB1pG,KAAK4hJ,WAC3BS,GAAKtvH,KAAKoxF,KAAKpxF,KAAK6tF,IAAIwhC,IAAMrvH,KAAK69B,IAAIoyF,GAAKjwH,KAAK69B,IAAIwxF,IAAMrvH,KAAK6tF,IAAIoiC,GAAKjwH,KAAK69B,IAAI2xF,IAClFW,GAAKD,GAAKlwH,KAAKyvH,MAAMzvH,KAAK6tF,IAAI2hC,GAAKxvH,KAAK6tF,IAAIoiC,GAAKjwH,KAAK69B,IAAIwxF,IAAKrvH,KAAK69B,IAAIoyF,GAAKjwH,KAAK6tF,IAAIwhC,IAAMrvH,KAAK6tF,IAAIyhC,KAI3G,MAAO,EAHK,EAAAh8C,gBAAAwG,kBAAiBw1C,KACjB,EAAAh8C,gBAAAwG,kBAAiBq2C,4CAYlBtL,gBACX,KAAK,EAAA9B,sBAAA+B,0BAAyBD,gBAC1B,OAAO,IAAI1lH,UAAU,2EAAA,gBAAA1gB,OACDomI,iBAGxB53I,KAAK2hJ,SAAW/J,eAAe4J,mBAAAQ,qBAAqBC,UACpDjiJ,KAAK4hJ,UAAYhK,eAAe4J,mBAAAQ,qBAAqBE,sEAWtBnX,QAAS/uC,UACxC,IAAMmnD,gBAAkBnjJ,KAAK+iJ,0CAA0ChY,QAAS/uC,UAEhFh8F,KAAK6gH,eAAesiC,sEAYpB,OAAKnjJ,KAAKojJ,wBAIH3B,qBAAqBhJ,0BAA0Bz4I,KAAK8gH,IAAK9gH,KAAK6hJ,mBAAoB7hJ,KAAK8hJ,gBAHnFN,mBAAA6B,wEAgBX,OAAmC,OAA5BrjJ,KAAK6hJ,+CA7OZ,MAAO,CACH7hJ,KAAK2hJ,SACL3hJ,KAAK4hJ,yCAYT,MAAO,CACH5hJ,KAAK4hJ,UACL5hJ,KAAK2hJ,gDAUT,OAAO3hJ,KAAK8hJ,wDAUZ,OAAO9hJ,KAAKsjJ,uDAWZ,OAAOtjJ,KAAK67F,iBAAiB2lD,mBAAA+B,+BAA+BC,wCAW5D,OAAOxjJ,KAAK67F,iBAAiB2lD,mBAAA+B,+BAA+BE,6LAmM/ChL,0BAA4B,SAACqB,YAAap1C,kBAAmBuyC,eAC9E,IAAK6C,cAAgBp1C,qBAAsB,EAAAq+B,WAAA,SAAUkU,eACjD,MAAM,IAAI/kH,UAAU,+IAIxB,IAAMyvH,UAAW,EAAAt7C,gBAAA07C,iBAAgBjI,YAAY0H,mBAAAQ,qBAAqBC,WAC5DL,WAAY,EAAAv7C,gBAAA07C,iBAAgBjI,YAAY0H,mBAAAQ,qBAAqBE,YAC7DwB,iBAAkB,EAAA5N,sBAAA6N,8BACpBj/C,kBACAA,kBAAkBi9C,SAClBC,WAEEgC,iBAAkB,EAAA9N,sBAAA+N,8BACpBn/C,kBACAi9C,SACAj9C,kBAAkBk9C,WAhB0EkC,uBAkB/E,EAAAhO,sBAAAiO,wBAAuBL,gBAAiBE,gBAAiB3M,eAE1E,MAAO,CApByF6M,sBAkBxFxvH,EAlBwFwvH,sBAkBrFvvH,IAiBfktH,qBAAqB78C,4CAA8C,SAACo/C,SAAUt/C,mBAC1E,IAAKs/C,WAAat/C,kBACd,MAAM,IAAIxyE,UAAU,iKAIxB,IAAM+xH,iBAAkB,EAAAr2C,QAAAsW,SAAQ8/B,UAC1BhoD,UAAW,EAAAqK,gBAAA0f,KAAG,EAAAnY,QAAAE,MAAKk2C,WAGzB,OAFoBt/C,kBAAkBq+C,0CAA0CkB,gBAAiBjoD,6WCzZrG,QAAAkoD,4BAAA1nJ,QAAA,6DACAglJ,mBAAAhlJ,QAAA,8kCAWqB2nJ,oDAiBjB,SAAAA,sBAAoE,IAAAlwI,MAAxD6lI,YAAwD,EAAAj1I,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAA1C,GAAI68I,UAAsC,EAAA78I,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAA1B,KAAMgyI,eAAoB,EAAAhyI,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAH,EAAG,qIAAAiqF,CAAA9uF,KAAAmkJ,sBAChElwI,MAAAs7G,2BAAAvvH,KAAAwvH,gBAAA20B,qBAAApnJ,KAAAiD,KAAM85I,YAAa4H,UAAW7K,kBAazBuN,kBAAoB5C,mBAAA6B,wBAEzBpvI,MAAKowI,8BAhB2DpwI,oZAjBvBiwI,uBAAA,gGAqFrB,IAAA,IAAAv3H,KAAA9nB,UAAA7H,OAANuK,KAAM,IAAAyd,MAAA2H,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAANrlB,KAAMqlB,MAAA/nB,UAAA+nB,MACpBH,QAAQ4tB,KAAR,2EAAA7oC,OAAwFjK,KAAxF,6DAWA,IAAKvH,KAAKojJ,wBACN,OAAO5B,mBAAA6B,wBAGXrjJ,KAAKokJ,kBAAoBF,uBAAA,QAAqBzL,0BAC1Cz4I,KAAK8gH,IACL9gH,KAAK6hJ,mBACL7hJ,KAAK8hJ,0DA9DT,OAAO9hJ,KAAK6hJ,4DAWZ,OAAO7hJ,KAAKokJ,4CAWZ,OAAOpkJ,KAAKokJ,kBAAkB5C,mBAAA+B,+BAA+BC,wCAW7D,OAAOxjJ,KAAKokJ,kBAAkB5C,mBAAA+B,+BAA+BE,miBCvFrE,QAAAz1D,aAAAxxF,QAAA,mDACAu8F,iBAAAv8F,QAAA,gCAIA0pG,QAAA1pG,QAAA,8TAOgD,SAAC8nJ,YAAD,OAAgBvrD,iBAAAkkC,MAAMsnB,kBAAkBziJ,KAAKwiJ,kDAUjD,SAAC5/C,kBAAmBi9C,SAAUC,WACtE,IAAIttH,GAAI,EAAA4xE,QAAAs+C,iBACJ9/C,kBAAkBi9C,SAClBj9C,kBAAkBk9C,UAClBD,SACAC,WAOJ,OAJIl9C,kBAAkBk9C,UAAYA,YAC9BttH,IAAM,GAGHA,wCAaiC,SAACowE,kBAAmBi9C,SAAUC,WACtE,IAAIrtH,GAAI,EAAA2xE,QAAAs+C,iBACJ9/C,kBAAkBi9C,SAClBj9C,kBAAkBk9C,UAClBD,SACAC,WAQJ,OAJIl9C,kBAAkBi9C,SAAWA,WAC7BptH,IAAM,GAGHA,kCAY2B,SAACkwH,UAAWC,UAAWzN,eACzD,IAAM96I,EAAI42B,KAAKyvH,MAAMkC,UAAWD,WAAaxN,cACvCj7I,EAAI+2B,KAAK8vH,KAAM4B,UAAYA,UAAcC,UAAYA,WAK3D,MAAO,CACHpwH,EAJMt4B,EAAI+2B,KAAK69B,IAAIz0D,GAKnBo4B,EAJMv4B,EAAI+2B,KAAK6tF,IAAIzkH,sCAea,SAACy7I,gBACrC,IAAMx6E,aAAc,EAAA4wB,QAAA,SAAO4pD,gBACrB+M,sBAAkD,IAA1B/M,eAAe56I,QAA0C,IAA1B46I,eAAe56I,OACtE4nJ,6BAA+BnxC,QAAOmkC,eAAe,MAAtBnkC,QAAoCmkC,eAAe,IAExF,IAAKx6E,aAAeunF,wBAA0BC,6BAC1C,OAAO,EAGX,IAAMjD,SAAW/J,eAAe,GAC1BgK,UAAYhK,eAAe,GAEjC,GAAwB,iBAAb+J,SACP,OAAO,EACJ,GAAwB,iBAAbA,SAOlB,OAAO,EANH,IAAMkD,2BAA6B,CAAC,IAAK,KAAKr4I,QAAQm1I,SAAS,GAAGpmG,iBAAmBw9C,iBAAA4f,cAC/EmsC,yBAA2B,CAAC,IAAK,KAAKt4I,QAAQo1I,UAAU,GAAGrmG,iBAAmBw9C,iBAAA4f,cAEpF,OAAOksC,4BAA8BC,iQC9G7C,QAAAtsD,2BAAAh8F,QAAA,oGAS8C,SAACuoJ,qBAC3C,OAAO,IAAIvsD,sBAAA,QACPusD,oBAAoBjkC,IACpBikC,oBAAoBrgD,kBACpBqgD,oBAAoB9N,kLCb5B,IAAAnpD,QAAAC,uBAAAvxF,QAAA,WACAwoJ,YAAAj3D,uBAAAvxF,QAAA,qBACAmxG,SAAA5f,uBAAAvxF,QAAA,kBACA47F,MAAArK,uBAAAvxF,QAAA,eACAyoJ,UAAAl3D,uBAAAvxF,QAAA,mBACAq2F,mBAAA9E,uBAAAvxF,QAAA,iCACA+7F,kBAAAxK,uBAAAvxF,QAAA,uBACA2xF,UAAAJ,uBAAAvxF,QAAA,oBACA42F,gBAAArF,uBAAAvxF,QAAA,2BACAm8F,aAAA5K,uBAAAvxF,QAAA,+BACA+2F,mBAAAxF,uBAAAvxF,QAAA,2CACA4xF,YAAAL,uBAAAvxF,QAAA,yBACA0pG,QAAA1pG,QAAA,kBACAq8F,MAAAr8F,QAAA,gBAIAoxG,QAAApxG,QAAA,kBAOAypG,mBAAAzpG,QAAA,kCAIA0oJ,iBAAA1oJ,QAAA,gCAIA2oJ,QAAA3oJ,QAAA,uBACA+xF,YAAA/xF,QAAA,2BACAu8F,iBAAAv8F,QAAA,gCAKAs8F,qBAAAt8F,QAAA,oCACAi1H,gBAAAj1H,QAAA,+BACAkxI,kBAAAlxI,QAAA,iCACA6pG,gBAAA7pG,QAAA,oxBAUqB4oJ,4BAOjB,SAAAA,iBAAYr2D,SAAU4G,mBAAoBD,YA0JtC,qIA1JkD5G,CAAA9uF,KAAAolJ,kBAOlDplJ,KAAK65F,SAAU,EAAA/L,QAAA,SAAE/gE,QAUjB/sB,KAAK+uF,SAAWA,SAOhB/uF,KAAKy5F,oBAAsB9D,mBAO3B31F,KAAK+5F,YAAcrE,WAOnB11F,KAAKk0F,UAAY/F,UAAA,QAOjBnuF,KAAK8Q,SAAW,GAUhB9Q,KAAKqlJ,eAAgB,EASrBrlJ,KAAKslJ,sBAAuB,EAc5BtlJ,KAAKulJ,mBAAoB,EASzBvlJ,KAAKwlJ,qBAAsB,EAS3BxlJ,KAAKylJ,sBAAuB,EAS5BzlJ,KAAK0lJ,4BAA6B,EASlC1lJ,KAAK2lJ,mBAAoB,EASzB3lJ,KAAK4lJ,oBAAqB,EAS1B5lJ,KAAK6lJ,oBAAqB,EAW1B7lJ,KAAK8lJ,wBAAyB,EAS9B9lJ,KAAK+lJ,MAAQ,KAEN/lJ,KAAK00F,QACPuf,iBACA7hB,+HAYL,OAFApyF,KAAKgmJ,UAAU5yD,gBAAA,QAAeiS,cAAcvM,qBAAAqI,kBAAkB8kD,QAEvDjmJ,8CA6BP,OAnBAA,KAAKkmJ,yBAA2BlmJ,KAAKw0G,kBAAkB9hD,KAAK1yD,MAC5DA,KAAKmmJ,2BAA6BnmJ,KAAKy0G,oBAAoB/hD,KAAK1yD,MAChEA,KAAKomJ,4BAA8BpmJ,KAAKqmJ,qBAAqB3zF,KAAK1yD,MAClEA,KAAKsmJ,4BAA8BtmJ,KAAKumJ,qBAAqB7zF,KAAK1yD,MAClEA,KAAKwmJ,6BAA+BxmJ,KAAKymJ,sBAAsB/zF,KAAK1yD,MACpEA,KAAK0mJ,0BAA4B1mJ,KAAK2mJ,mBAAmBj0F,KAAK1yD,MAC9DA,KAAK4mJ,yBAA2B5mJ,KAAK6mJ,kBAAkBn0F,KAAK1yD,MAC5DA,KAAK8mJ,uBAAyB9mJ,KAAK+mJ,gBAAgBr0F,KAAK1yD,MACxDA,KAAKgnJ,gCAAkChnJ,KAAKinJ,yBAAyBv0F,KAAK1yD,MAC1EA,KAAKknJ,uBAAyBlnJ,KAAKmnJ,gBAAgBz0F,KAAK1yD,MACxDA,KAAKonJ,wBAA0BpnJ,KAAKqnJ,iBAAiB30F,KAAK1yD,MAC1DA,KAAKsgJ,wBAA0BtgJ,KAAK6gJ,iBAAiBnuF,KAAK1yD,MAC1DA,KAAKsnJ,wBAA0BtnJ,KAAKunJ,iBAAiB70F,KAAK1yD,MAC1DA,KAAKwnJ,yBAA2BxnJ,KAAKynJ,kBAAkB/0F,KAAK1yD,MAC5DA,KAAK0nJ,2BAA6B1nJ,KAAK2nJ,oBAAoBj1F,KAAK1yD,MAChEA,KAAK4nJ,iBAAmB5nJ,KAAKm2F,cAAczjC,KAAK1yD,MAEhDA,KAAK6nJ,iBAAmB7nJ,KAAKgmJ,UAAUtzF,KAAK1yD,MAErCA,sCA6BP,OApBAA,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAMuI,gBAAiBv5F,KAAKkmJ,0BAC9ClmJ,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAMyK,kBAAmBz7F,KAAKmmJ,4BAChDnmJ,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAMwiB,gCAAiCxzG,KAAKomJ,6BAC9DpmJ,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAM82D,aAAc9nJ,KAAKsmJ,6BAC3CtmJ,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAM+2D,cAAe/nJ,KAAKwmJ,8BAC5CxmJ,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAMkG,oBAAqBl3F,KAAK0mJ,2BAClD1mJ,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAMg3D,gBAAiBhoJ,KAAK4mJ,0BAC9C5mJ,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAMi3D,cAAejoJ,KAAK8mJ,wBAC5C9mJ,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAMmG,wBAAyBn3F,KAAKgnJ,iCACtDhnJ,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAMk3D,eAAgBloJ,KAAKknJ,wBAC7ClnJ,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAMm3D,gBAAiBnoJ,KAAKonJ,yBAC9CpnJ,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAMuG,eAAgBv3F,KAAKsnJ,yBAC7CtnJ,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAMo3D,iBAAkBpoJ,KAAKwnJ,0BAC/CxnJ,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAMq3D,mBAAoBroJ,KAAK0nJ,4BACjD1nJ,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAM+D,eAAgB/0F,KAAKsgJ,yBAC7CtgJ,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAMs3D,UAAWtoJ,KAAK6nJ,kBACxC96H,OAAOuf,iBAAiB,SAAUtsC,KAAK4nJ,kBAEvC5nJ,KAAK+uF,SAASz4B,SAASt2D,KAAK+lJ,MAAMwC,WAE3BvoJ,uCA0BP,OAlBAA,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAMuI,gBAAiBv5F,KAAKkmJ,0BAC/ClmJ,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAMyK,kBAAmBz7F,KAAKmmJ,4BACjDnmJ,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAMwiB,gCAAiCxzG,KAAKqmJ,sBAC/DrmJ,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAM82D,aAAc9nJ,KAAKumJ,sBAC5CvmJ,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAM+2D,cAAe/nJ,KAAKymJ,uBAC7CzmJ,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAMkG,oBAAqBl3F,KAAK2mJ,oBACnD3mJ,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAMg3D,gBAAiBhoJ,KAAK4mJ,0BAC/C5mJ,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAMi3D,cAAejoJ,KAAK+mJ,iBAC7C/mJ,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAMmG,wBAAyBn3F,KAAKinJ,0BACvDjnJ,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAMk3D,eAAgBloJ,KAAKmnJ,iBAC9CnnJ,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAMm3D,gBAAiBnoJ,KAAKqnJ,kBAC/CrnJ,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAMuG,eAAgBv3F,KAAKunJ,kBAC9CvnJ,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAMo3D,iBAAkBpoJ,KAAKwnJ,0BAChDxnJ,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAMq3D,mBAAoBroJ,KAAK0nJ,4BAClD1nJ,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAM+D,eAAgB/0F,KAAKsgJ,yBAC9CtgJ,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAMs3D,UAAWtoJ,KAAKgmJ,WACzCj5H,OAAO0tB,oBAAoB,SAAUz6C,KAAK4nJ,kBAEnC5nJ,KAAKsyF,4CAoBZ,OAZAtyF,KAAK65F,QAAU,KACf75F,KAAK+uF,SAAW,KAChB/uF,KAAK8Q,SAAW,GAChB9Q,KAAKqlJ,eAAgB,EACrBrlJ,KAAKslJ,sBAAuB,EAC5BtlJ,KAAKulJ,mBAAoB,EACzBvlJ,KAAKylJ,sBAAuB,EAC5BzlJ,KAAK0lJ,4BAA6B,EAClC1lJ,KAAK2lJ,mBAAoB,EACzB3lJ,KAAK4lJ,oBAAqB,EAC1B5lJ,KAAK6lJ,oBAAqB,EAEnB7lJ,2CAYPA,KAAKwoJ,WAAWtD,iBAAAuD,YAAYC,QAC5B1oJ,KAAKwoJ,WAAWtD,iBAAAuD,YAAYE,mDASd,IAAA10I,MAAAjU,KAEd25C,WAAW,WACP1lC,MAAK20I,mBACN,6CAmBH,IAAK,IAAMC,cAPP7oJ,KAAKqlJ,eACL9sD,kBAAA,QAAiBuwD,qBACb9oJ,KAAK65F,QAAQ/tC,SACb9rD,KAAK65F,QAAQhwC,SAII7pD,KAAK8Q,SAAU,CACpC,IAAM1K,QAAUpG,KAAK8Q,SAAS+3I,YAC9BziJ,QAAQ2iJ,OAAOj9F,OAASysC,kBAAA,QAAiBzsC,OACzC1lD,QAAQ2iJ,OAAOl/F,MAAQ0uC,kBAAA,QAAiB1uC,MAExC7pD,KAAKgpJ,aAAaH,YAGtB7oJ,KAAK4oJ,6DAkBL,GAAK5oJ,KAAKslJ,sBAAyBl3D,YAAA,QAAWsE,eAA9C,CAIA,GAAI1yF,KAAKulJ,kBAAmB,CAIxB,IAAM0D,gBAAkBjpJ,KAAKkpJ,wBAAwBhE,iBAAAuD,YAAYC,QAEjE1oJ,KAAKmpJ,oBAAoBF,iBACzBjpJ,KAAKopJ,cAAcH,iBACnBjpJ,KAAKqpJ,aAAaJ,iBAClBjpJ,KAAKspJ,wBAAwBL,iBAC7BjpJ,KAAKupJ,aAAaN,iBAClBjpJ,KAAKwpJ,2BAA2BP,iBAChCjpJ,KAAKypJ,UAAUR,iBACfjpJ,KAAK0pJ,WAAWT,iBAChBjpJ,KAAK2pJ,2BAA2BV,iBAChCjpJ,KAAK4pJ,8BAA8BX,iBACnCjpJ,KAAK6pJ,kBAAkBZ,iBACvBjpJ,KAAK8pJ,kBAAkBb,iBAG3B,IAAMc,iBAAmB/pJ,KAAKkpJ,wBAAwBhE,iBAAAuD,YAAYE,SAElE3oJ,KAAKmpJ,oBAAoBY,kBACzB/pJ,KAAKgqJ,6BAA6BD,kBAClC/pJ,KAAKiqJ,qBAAqBF,kBAC1B/pJ,KAAKkqJ,wBAAwBH,kBAC7B/pJ,KAAKmqJ,iBAAiBJ,kBAEtB/pJ,KAAKslJ,sBAAuB,EAC5BtlJ,KAAKulJ,mBAAoB,0DAazB,OAAO,EAAAN,UAAA,SAAS72D,YAAA,QAAWg8D,qBAAuB,IAAM,IAAM,wCAWvDzpJ,MACP,IAAM0pJ,eAAc,eAAA74I,OAAkB7Q,KAAlB,sBAEpBX,KAAK+uF,SAAS97E,OAAOo3I,gBAErBrqJ,KAAK8Q,SAASnQ,OAAQ,EAAAmtF,QAAA,SAAA,IAAAt8E,OAAM7Q,KAAN,YAAqBkwB,IAAI,GAAGvd,WAAW,2CAQpDu1I,YACT,IAAMyB,iBAAmBv9H,OAAOu9H,kBAAoB,EAC9CC,cAAgBvqJ,KAAK8Q,SAAS+3I,YAEpC,KAAIyB,kBAAoB,GAAxB,CAIA,IAAME,gBAAiB,EAAA18D,QAAA,SAAA,IAAAt8E,OAAM+4I,cAAcxB,OAAO/yI,KAAM6a,IAAI,IAE5D,EAAAi9D,QAAA,SAAE08D,gBAAgBv8G,KAAK,SAAUsqD,kBAAA,QAAiBzsC,OAASw+F,mBAC3D,EAAAx8D,QAAA,SAAE08D,gBAAgB9sG,IAAI,SAAU66C,kBAAA,QAAiBzsC,SACjD,EAAAgiC,QAAA,SAAE08D,gBAAgBv8G,KAAK,QAASsqD,kBAAA,QAAiB1uC,MAAQygG,mBACzD,EAAAx8D,QAAA,SAAE08D,gBAAgB9sG,IAAI,QAAS66C,kBAAA,QAAiB1uC,OAEhD0gG,cAAcxsG,MAAMusG,iBAAkBA,+DAWtBG,IAChBA,GAAGC,UAAU,EAAG,EAAGnyD,kBAAA,QAAiB1uC,MAAO0uC,kBAAA,QAAiBzsC,kDAgB9C2+F,GAAIxgD,YAAa48B,MAC/B,IAAM8jB,cAA+F,GAAhF,EAAA9xD,MAAAhkE,OAAM0jE,kBAAA,QAAiBqyD,6BAA6B3gD,YAAYjtG,OAAS,IACtF8vG,MAA4B7C,YAA5B6C,MAAOjR,iBAAqBoO,YAArBpO,iBACTgvD,qBAAuBtyD,kBAAA,QAAiBuyD,mDAAmDjvD,kBAOjG,GALA4uD,GAAGM,OACHN,GAAGO,UAAHx6I,MAAAi6I,GAAE1uD,mBAAc8uD,uBAChBJ,GAAGQ,OAAOn+C,OAGL+5B,KAQE,CACH,IAAK58B,YAAYggC,IAAIp5F,QAGjB,YAFA45G,GAAGS,UAKPT,GAAGU,YAAcnrJ,KAAK+lJ,MAAM/lD,MAAMorD,2BAClCX,GAAGY,UAAY,EAEfZ,GAAGa,YACHb,GAAGc,OAAO,EAAG,GACbd,GAAGe,OAAO,EAAGjzD,kBAAA,QAAiBqyD,6BAA6B3gD,YAAYggC,IAAI8T,cAC3E0M,GAAGgB,cApBHhB,GAAGU,YAAc,UACjBV,GAAGY,UAAY,IAEfZ,GAAGa,YACHb,GAAGc,OAAO,EAAG,GACbd,GAAGe,OAAO,EAAGb,cACbF,GAAGgB,SAiBPhB,GAAGS,mDAeUT,GAAIxgD,aACjB,IAAMyhD,SAAU,EAAA7yD,MAAAhkE,OAAM0jE,kBAAA,QAAiBqyD,6BAA6B3gD,YAAYjtG,OAAS,IAAM,GACvF8vG,MAA4B7C,YAA5B6C,MAAOjR,iBAAqBoO,YAArBpO,iBACTgvD,qBAAuBtyD,kBAAA,QAAiBuyD,mDAAmDjvD,kBAGjG4uD,GAAGM,OACHN,GAAGkB,UAAY,SACflB,GAAGmB,aAAe,SAClBnB,GAAGO,UAAHx6I,MAAAi6I,GAAE1uD,mBAAc8uD,uBAChBJ,GAAGQ,OAAOn+C,OACV29C,GAAGO,UAAU,EAAGU,QAPG,IAQnBjB,GAAGQ,QAAQn+C,OACX29C,GAAGoB,SAAS5hD,YAAYtpG,KAAM,EAAG,GACjC8pJ,GAAGS,+CAcMT,IACT,GAAKzqJ,KAAKylJ,qBAAV,CAIAgF,GAAGM,OACH/qJ,KAAK8rJ,4CAA4CrB,IACjDA,GAAGsB,KAAO,0BACVtB,GAAGU,YAAcnrJ,KAAK+lJ,MAAM/lD,MAAMgsD,OAClCvB,GAAGwB,UAAYjsJ,KAAK+lJ,MAAM/lD,MAAMgsD,OAChCvB,GAAGY,UAAY,EAMf,IAJA,IAAMthD,aAAelX,mBAAA,QAAkBkV,cAI9B1rG,EAAI,EAAGA,EAAI0tG,aAAa+sC,QAAQ95I,OAAQX,IAC7C2D,KAAKksJ,kBAAkBzB,GAAI1gD,aAAa+sC,QAAQz6I,GAAG,IAAI,GACvD2D,KAAKksJ,kBAAkBzB,GAAI1gD,aAAa+sC,QAAQz6I,GAAG,IAAI,GAI3D,IAAK,IAAIkpC,GAAI,EAAGA,GAAIwkE,aAAa+sC,QAAQ95I,OAAQuoC,KAC7CvlC,KAAKksJ,kBAAkBzB,GAAI1gD,aAAa+sC,QAAQvxG,IAAG,IAAI,GAG3DklH,GAAGS,qDAcWT,IACd,GAAKzqJ,KAAKylJ,qBAAV,CAIA,IAAM17C,aAAelX,mBAAA,QAAkBkV,cAEvC0iD,GAAGM,OACH/qJ,KAAK8rJ,4CAA4CrB,IACjDA,GAAGwB,UAAYjsJ,KAAK+lJ,MAAM/lD,MAAMmsD,cAEhC,IAAK,IAAI9vJ,EAAI,EAAGA,EAAI0tG,aAAa+sC,QAAQ95I,OAAQX,IAC7C2D,KAAKosJ,iBAAiB3B,GAAI1gD,aAAa+sC,QAAQz6I,GAAG,IAClD2D,KAAKosJ,iBAAiB3B,GAAI1gD,aAAa+sC,QAAQz6I,GAAG,IAGtDouJ,GAAGS,qDAcWT,IACdA,GAAGM,OAEH,IAGMsB,UAAW,EAAAxzD,MAAAhkE,QAAM,EAAAwxE,gBAAA0f,IAAG,EAAIxtB,kBAAA,QAAiBx6C,MAAQ,KACjDuuG,UAAW,EAAAjmD,gBAAAyS,IAAGuzC,UACdE,WAAY,EAAA1zD,MAAAhkE,OAAM0jE,kBAAA,QAAiBqyD,6BAA6B0B,WAChEE,gBAAkBj0D,kBAAA,QAAiB1uC,MANzB,GAQhB4gG,GAAGsB,KAAO,0BACVtB,GAAGwB,UAAYjsJ,KAAK+lJ,MAAM/lD,MAAMysD,aAChChC,GAAGU,YAAcnrJ,KAAK+lJ,MAAM/lD,MAAMysD,aAClChC,GAAGY,UAAY,EACfZ,GAAGkB,UAAY,SACflB,GAAGa,YACHb,GAAGc,OAAOiB,gBAbM,IAchB/B,GAAGe,OAAOgB,gBAAiBtmG,IAC3BukG,GAAGe,OAAOgB,gBAAkBD,UAAWrmG,IACvCukG,GAAGe,OAAOgB,gBAAkBD,UAhBZ,IAiBhB9B,GAAGgB,SACHhB,GAAGoB,SAAH,GAAAr6I,OACO66I,SADP,OAEIG,gBAA8B,GAAZD,UAClBrmG,IAEJukG,GAAGS,yDAegBT,GAAIjuD,UACvB,IAAMkwD,kBAAoBn0D,kBAAA,QAAiBuyD,mDAAmDtuD,SAASX,kBAEvG4uD,GAAGM,OACHN,GAAGO,UAAHx6I,MAAAi6I,GAAE1uD,mBAAc2wD,oBAChBjC,GAAGwB,UAAYjsJ,KAAK+lJ,MAAM/lD,MAAM2sD,SAChClC,GAAGmC,yBAA2B,cAC9BnC,GAAGY,UAAY,EACfZ,GAAGa,YACHb,GAAGc,OAAO,GAAI,GACdd,GAAGe,OAAO,EAAG,GACbf,GAAGe,QAAQ,EAAG,GACdf,GAAGoC,YACHpC,GAAGqC,OACHrC,GAAGwB,UAAYjsJ,KAAK+lJ,MAAM/lD,MAAM+sD,SAChCtC,GAAGkB,UAAY,SACflB,GAAGmB,aAAe,MAClBnB,GAAGoB,SAASrvD,SAAS77F,KAAM,EAAG,GAC9B8pJ,GAAGS,6DAcoBT,IACvB,GAAKzqJ,KAAKylJ,qBAAV,CAIAgF,GAAGM,OACH/qJ,KAAK8rJ,4CAA4CrB,IAEjDA,GAAGuC,SAAW,QACdvC,GAAGsB,KAAO7G,iBAAA+H,iBAEV,IAAK,IAAI5wJ,EAAI,EAAGA,EAAIk3F,mBAAA,QAAkB25D,UAAUlwJ,OAAQX,IAAK,CACzD,IAAMmgG,SAAWjJ,mBAAA,QAAkB25D,UAAU7wJ,GAE7C2D,KAAKmtJ,uBAAuB1C,GAAIjuD,UAGpCiuD,GAAGS,6CAeGT,IACN,GAAKzqJ,KAAK2lJ,kBAAV,CAIA,IAAMyH,UAAY,GACZC,SAAW95D,mBAAA,QAAkB+5D,kBAAkB77B,gBAAAyI,eAAeC,KAEpEswB,GAAGM,OACH/qJ,KAAK8rJ,4CAA4CrB,IACjDA,GAAGU,YAAcnrJ,KAAK+lJ,MAAM/lD,MAAMm6B,IAClCswB,GAAGwB,UAAYjsJ,KAAK+lJ,MAAM/lD,MAAMm6B,IAChCswB,GAAG8C,YAAY,CAAC,EAAG,KACnB9C,GAAGsB,KAAO,iCAEV,IAAK,IAAI1vJ,EAAI,EAAGA,EAAIgxJ,SAASrwJ,OAAQX,IAAK,CAItC,IAHA,IAAMmxJ,IAAMH,SAAShxJ,GACjBoxJ,yBAA0B,EAErB3hI,EAAI,EAAGA,EAAI0hI,IAAI7nI,MAAM3oB,OAAQ8uB,IAClC9rB,KAAK0tJ,mCAAmCjD,GAAI+C,IAAI7nI,MAAMmG,IAG1D,IAAK,IAAI6hI,GAAI,EAAGA,GAAIH,IAAII,MAAM5wJ,OAAQ2wJ,KAAK,CACvC,IAAM10B,SAAWu0B,IAAII,MAAMD,IAErB10B,YAAYm0B,YACdA,UAAUn0B,UAAY,IAG1Bm0B,UAAUn0B,UAAUz1H,KAApB,GAAAgO,OAA4Bg8I,IAAIrmH,WAAhC,KAAA31B,OAA8CynH,WAE9Cw0B,yBAA0B,EAG9B,GAAIA,wBAAyB,CAAA,IACjBI,YAAgBL,IAAhBK,YAEFA,eAAeT,YACjBA,UAAUS,aAAe,IAG7BT,UAAUS,aAAarqJ,KAAKgqJ,IAAIrmH,aAKxC,IAAK,IAAMoc,OAAO6pG,UAAW,CACzB,IAAMU,iBAAmBV,UAAU7pG,KAC7BkiF,YAAclyC,mBAAA,QAAkBw6D,uBAAuBxqG,KAE7DvjD,KAAKguJ,UAAUvD,GAAIhlB,YAAaqoB,kBAGpCrD,GAAGS,8CAcIT,IACP,GAAKzqJ,KAAK4lJ,mBAAV,CAIA,IAAMqI,UAAY16D,mBAAA,QAAkB+5D,kBAAkB77B,gBAAAyI,eAAeE,MAC/DgzB,UAAY,GAElB3C,GAAGM,OACH/qJ,KAAK8rJ,4CAA4CrB,IACjDA,GAAGU,YAAcnrJ,KAAK+lJ,MAAM/lD,MAAMo6B,KAClCqwB,GAAGwB,UAAYjsJ,KAAK+lJ,MAAM/lD,MAAMo6B,KAChCqwB,GAAG8C,YAAY,CAAC,EAAG,KACnB9C,GAAGsB,KAAO,iCACVtB,GAAGkB,UAAY,QAEf,IAAK,IAAItvJ,EAAI,EAAGA,EAAI4xJ,UAAUjxJ,OAAQX,IAAK,CAGvC,IAFA,IAAM6xJ,KAAOD,UAAU5xJ,GAEdyvB,EAAI,EAAGA,EAAIoiI,KAAKvoI,MAAM3oB,OAAQ8uB,IACnC9rB,KAAK0tJ,mCAAmCjD,GAAIyD,KAAKvoI,MAAMmG,IAJpB,IAO/BqiI,aAAiBD,KAAjBC,aAEFA,gBAAgBf,YAClBA,UAAUe,cAAgB,IAG9Bf,UAAUe,cAAc3qJ,KAAK0qJ,KAAK/mH,YAItC,IAAK,IAAMoc,OAAO6pG,UAAW,CACzB,IAAMU,iBAAmBV,UAAU7pG,KAC7BkiF,YAAclyC,mBAAA,QAAkBw6D,uBAAuBxqG,KAE7DvjD,KAAKguJ,UAAUvD,GAAIhlB,YAAaqoB,kBAGpCrD,GAAGS,sEAe4BT,GAAI2D,mBACnC,KAAIA,kBAAkBpxJ,OAAS,GAA/B,CAIA,IAAMqxJ,kBAAoB91D,kBAAA,QAAiBuyD,mDAAmDsD,kBAAkB,IAEhH3D,GAAGa,YACHb,GAAGc,OAAH/6I,MAAAi6I,GAAE1uD,mBAAWsyD,oBAEb,IAAK,IAAIryC,EAAI,EAAGA,EAAIoyC,kBAAkBpxJ,OAAQg/G,IAAK,CAC/C,IAAMngB,iBAAmBuyD,kBAAkBpyC,GACrClY,eAAiBvL,kBAAA,QAAiBuyD,mDAAmDjvD,kBAE3F4uD,GAAGe,OAAHh7I,MAAAi6I,GAAE1uD,mBAAW+H,iBAGjB2mD,GAAGgB,4CAiBGhB,GAAI5uD,iBAAkByyD,QAAyB,IAAjBx/F,WAAiB,EAAAjqD,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAJ,GAC3Ci/F,eAAiBvL,kBAAA,QAAiBuyD,mDAAmDjvD,kBACvFqV,GAAsB,UAAjBu5C,GAAGkB,WAAyB,GAAK,GAErB,WAAjBlB,GAAGkB,YACHz6C,GAAK,GAGT,IAAK,IAAI8K,EAAI,EAAGA,EAAIsyC,OAAOtxJ,OAAQg/G,IAAK,CACpC,IAAMuyC,SAAWD,OAAOtyC,GAClBwyC,oBAAsB1qD,eAAe,GAAKoN,GAC1Cu9C,oBAAsB3qD,eAAe,GAAMh1C,WAAaktD,EAE9DyuC,GAAGoB,SAAS0C,SAAUC,oBAAqBC,uEAgB1BhE,GAAItxD,eACzB,GAAK/F,gBAAA,QAAes7D,qCAAqCv1D,eAAzD,CAIAsxD,GAAGM,OALqC,IAOhC3gD,IAA0BjR,cAA1BiR,IAAKvO,iBAAqB1C,cAArB0C,iBACP8yD,wBAA0BvkD,IAAIC,mBAAmBukD,cACjDC,uBAAyBt2D,kBAAA,QAAiBuyD,mDAAmDjvD,kBACnG4uD,GAAGU,YAAcnrJ,KAAK+lJ,MAAM+I,aAAaC,8BACzCtE,GAAGY,UAAY,EAEfZ,GAAGO,UAAHx6I,MAAAi6I,GAAE1uD,mBAAc8yD,yBAChBpE,GAAGQ,OAAO0D,yBACVlE,GAAGa,YAEH,IAEM0D,cAAgBz2D,kBAAA,QAAiBqyD,6BADZ,OAG3BH,GAAGc,QAJwB,GAIKyD,eAChCvE,GAAGe,OALwB,GAKIwD,eAC/BvE,GAAGgB,SAEHhB,GAAGS,8DAiBoBT,GAAIwE,kBAAkB,IAEvCC,eADoBD,iBAAlB91D,cAC6Bg2D,YAGrC,GAAKD,eAAe,GAApB,CAIA,IAAI/D,YAAcnrJ,KAAK+lJ,MAAM+I,aAAaM,cAEtCF,eAAe,KACf/D,YAAcnrJ,KAAK+lJ,MAAM+I,aAAaO,gBAG1C5E,GAAGU,YAAcA,YAEjBV,GAAGa,YACHb,GAAG6E,IAAI,EAAG,EAAG/2D,kBAAA,QAAiBqyD,8BAA6B,EAAAvkD,gBAAAyS,IAf1C,IAeyD,GAAG,EAAA5S,QAAAqpD,QAC7E9E,GAAGgB,oDAeWhB,GAAIwE,kBAClB,GAAKA,iBAAiBO,QAAtB,CAIA,IAAMC,SAAWR,iBAAiBS,WAClCjF,GAAGU,YAAcnrJ,KAAK+lJ,MAAM+I,aAAaa,KAEzClF,GAAGa,YACHb,GAAG6E,IAAI,EAAG,EAAG/2D,kBAAA,QAAiBqyD,8BAA6B,EAAAvkD,gBAAAyS,IAAG22C,WAAY,GAAG,EAAAvpD,QAAAqpD,QAC7E9E,GAAGgB,yDAegBhB,GAAIwE,kBAAkB,IACjC91D,cAAkB81D,iBAAlB91D,cAER,GAAKA,cAAc4b,YAAnB,CAIA01C,GAAGM,OAGH,IAAMhmI,MAAqC,EAA7B82B,KAAKr+C,MAAM67F,SAASr8F,QAAcm8F,cAAcwK,cAAc9nD,KAAKr+C,MAAM67F,UACnF4yD,UAAYjsJ,KAAK+lJ,MAAM+I,aAAac,0BAEpCz2D,cAAcC,gBAA6C,YAA3BD,cAActB,WAC9Co0D,UAAYjsJ,KAAK+lJ,MAAM+I,aAAae,kCAGpC12D,cAAcC,gBAA6C,cAA3BD,cAActB,WAC9Co0D,UAAYjsJ,KAAK+lJ,MAAM+I,aAAagB,oCAGxCrF,GAAGwB,UAAYA,UAIf,IAFA,IAAM8D,gBAAkB52D,cAAc8hB,wBAE7B5+G,EAAI,EAAGA,EAAI0zJ,gBAAgB/yJ,OAAQX,IAAK,CAC7C,IAAM0uD,SAAWouC,cAAc8hB,wBAAwB5+G,GACjDynG,eAAiBvL,kBAAA,QAAiBy3D,mDAAmDjlG,UAE3F0/F,GAAGa,YACHb,GAAG6E,IAAH9+I,MAAAi6I,GAAE1uD,mBACK+H,gBADLtyF,OAAA,CAEE+mF,kBAAA,QAAiBqyD,6BAA6B5qJ,KAAK+lJ,MAAM+I,aAAamB,uBACtE,GACA,EAAA/pD,QAAAqpD,UAEJ9E,GAAGoC,YACHpC,GAAGqC,OAoBP,OAjBArC,GAAGS,UACHT,GAAGM,OAECgF,gBAAgB/yJ,OAASgD,KAAK+lJ,MAAM+I,aAAaoB,iBAGjD/2D,cAAc8hB,wBAA0B80C,gBAAgBppJ,MACpDopJ,gBAAgB/yJ,OAASgD,KAAK+lJ,MAAM+I,aAAaoB,eACjDH,gBAAgB/yJ,SAIpBm8F,cAAciX,yBACdpwG,KAAKmwJ,yBAAyB1F,GAAItxD,eAI9B/F,gBAAA,QAAe6N,KAAK7hD,OAAO8hD,gBAAgB,uBAC/C,IAAK,SACDlhG,KAAKowJ,wBAAwB3F,GAAItxD,cAAep0E,OAEhD,MACJ,IAAK,WACGA,OACA/kB,KAAKowJ,wBAAwB3F,GAAItxD,cAAep0E,OAQ5D,IAAM8pI,uBAAyBt2D,kBAAA,QAAiBy3D,mDAC5C72D,cAAc0C,kBAIlB4uD,GAAGO,UAAHx6I,MAAAi6I,GAAE1uD,mBAAc8yD,yBAEhB7uJ,KAAKqwJ,yBAAyB5F,GAAItxD,eAClCn5F,KAAKswJ,kBAAkB7F,GAAIwE,kBAC3BjvJ,KAAKuwJ,2BAA2B9F,GAAIwE,kBAEpC,IAAIuB,oBAAsBxwJ,KAAK+lJ,MAAM+I,aAAa2B,UAG9C1rI,QACAyrI,oBAAsBxwJ,KAAK+lJ,MAAM+I,aAAa4B,oBAIlDjG,GAAGwB,UAAYjsJ,KAAK+lJ,MAAM+I,aAAaA,aACvCrE,GAAGa,YACHb,GAAG6E,IAAI,EAAG,EAAG/2D,kBAAA,QAAiBqyD,6BAA6B4F,qBAAsB,GAAG,EAAAtqD,QAAAqpD,QACpF9E,GAAGqC,OAEHrC,GAAGS,4DAgBkBT,GAAItxD,eACzB,IAAIA,cAAcqW,IAAlB,CAIAi7C,GAAGM,OAEHN,GAAGwB,UAAYjsJ,KAAK+lJ,MAAM+I,aAAa6B,sBACvClG,GAAGU,YAAcnrJ,KAAK+lJ,MAAM+I,aAAa6B,sBAEzC,IACMC,kBADsB5wJ,KAAK+5F,YAAY82D,UACG93D,iBAAAimB,KAAK8xC,oBAC/CC,eAAgB,EAAA1qD,gBAAAyS,IAAG3f,cAAcqhB,YAAco2C,mBAC/CI,mBAAoB,EAAApjD,QAAA0W,wBAAuBnrB,cAAc6X,aACzDigD,yBAA0B,EAAArjD,QAAAyW,QAAO2sC,kBAAmBD,eACpDG,sBAAwB34D,kBAAA,QAAiBqyD,6BAA6BqG,wBAAwB,IAC9FE,sBAAwB54D,kBAAA,QAAiBqyD,6BAA6BqG,wBAAwB,IAEpGxG,GAAGa,YACHb,GAAGc,OAAO,EAAG,GACbd,GAAGe,OAAO0F,uBAAwBC,uBAClC1G,GAAGgB,SACHhB,GAAGS,qHAsDiBT,GAAItxD,cAAepoD,UACvC,IAAIooD,cAAcuc,aAA6C,IAA9BtnB,YAAA,QAAWgjE,eAA5C,CAIA,IAAIC,YAAa,EACXC,aAAe,GACfC,UAAW,EAAAvM,YAAA,SAAW7rD,cAAciR,KACpConD,MAAO,EAAAxM,YAAA,SAAW7rD,eAExBq4D,KAAKpnD,IAAMmnD,SACXC,KAAKx2C,WAAY,EACjB5sB,YAAA,QAAWqjE,4CAEX,IAAK,IAAIp1J,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzBm1J,KAAKzgE,SAEL,IAAM2gE,WAAaF,KAAKphD,yBAA2BohD,KAAKpnD,IAAI+kB,eAAiBlpB,mBAAAc,aAAayX,SAI1F,GAFA8yC,aAAa9tJ,KAAb,GAAAgO,OAAAuqF,mBAAsBy1D,KAAK31D,kBAA3B,CAA6C61D,cAEzCA,YAAcF,KAAK7oD,SAAW,IAC9B,MAIRva,YAAA,QAAWujE,8CAEXlH,GAAGM,OAGH,IAAII,YAAcnrJ,KAAK+lJ,MAAM+I,aAAa8C,uBAEtCz4D,cAActB,WAAaoO,mBAAAwR,gBAAgB6D,UAEvC6vC,YADAp6G,SACc/wC,KAAK+lJ,MAAM+I,aAAa+C,qBAExB7xJ,KAAK+lJ,MAAM+I,aAAagD,yBAEnC/gH,WACPo6G,YAAcnrJ,KAAK+lJ,MAAM+I,aAAaiD,oBAG1CtH,GAAGU,YAAcA,YACjBV,GAAGmC,yBAA2B,SAC9BnC,GAAGY,UAAY,EACfZ,GAAGa,YAEH,IAAK,IAAI0G,IAAI,EAAGA,IAAIV,aAAat0J,OAAQg1J,MAAK,CAC1C,IAAMC,MAAQX,aAAaU,KACrBE,YAAaD,MAAM,GACnBE,cAAgB55D,kBAAA,QAAiBy3D,mDAAmDiC,QAEtFC,aAAeb,WAcT,IAANW,IACAvH,GAAGc,OAAO4G,cAAc,GAAIA,cAAc,IAE1C1H,GAAGe,OAAO2G,cAAc,GAAIA,cAAc,KAhB1C1H,GAAGe,OAAO2G,cAAc,GAAIA,cAAc,IAE1C1H,GAAGgB,SACHhB,GAAGU,YAAcnrJ,KAAK+lJ,MAAM+I,aAAasD,mCACzC3H,GAAGY,UAAY,EACfZ,GAAGa,YACHb,GAAGc,OAAO4G,cAAc,GAAIA,cAAc,IAE1Cd,YAAa,GAYrB5G,GAAGgB,SAKHhB,GAAGS,oDAcUT,IAAI,IAAAv5D,OAAAlxF,KACjB,GAAK24F,aAAA,QAAYoE,SAAjB,CAIA,IAAMs1D,aAAe15D,aAAA,QAAY25D,gBAEjC7H,GAAGM,OACH/qJ,KAAK8rJ,4CAA4CrB,IAEjD4H,aAAa3+H,QAAQ,SAAC6+H,UAClBrhE,OAAKshE,qBAAqB/H,GAAI8H,UAC9BrhE,OAAKuhE,uBAAuBhI,GAAI8H,YAGpC9H,GAAGS,0DAegBT,GAAI8H,UAMvB,IALA,IAAI71B,IAAM61B,SAASG,SACbn+I,OAAS,GAID,MAAPmoH,KAAa,CAEhB,GAAmB,OAAfA,IAAI4xB,QAAyC,IAAtB5xB,IAAI4xB,OAAOtxJ,OAAc,CAChD,IAAM+tD,SAAWwtC,kBAAA,QAAiBy3D,mDAAmDtzB,IAAIi2B,UAEzFp+I,OAAO/Q,KAAK,CACR8wB,EAAGy2B,SAAS,GACZx2B,EAAGw2B,SAAS,GACZujG,OAAQ5xB,IAAI4xB,SAIpB5xB,IAAMA,IAAIv2G,KAIQ,IAAlB5R,OAAOvX,SAIXytJ,GAAGM,OAGHN,GAAGwB,UAAYjsJ,KAAK+lJ,MAAM/lD,MAAM4yD,mBAChCnI,GAAGsB,KAAO/rJ,KAAK+lJ,MAAM8M,WAAWC,UAEhCv+I,OAAOmf,QAAQ,SAACld,MAAS,IACb8d,EAAiB9d,KAAjB8d,EAAGC,EAAc/d,KAAd+d,EAAG+5H,OAAW93I,KAAX83I,OACRxiG,OAAU,GAAqB,GAAKwiG,OAAOtxJ,OAM3C6sD,MAAS,GALOykG,OAAO1yB,OAAO,SAACm3B,UAAWj7D,OAC5C,IAAMk7D,SAAWvI,GAAGwI,YAAYn7D,OAAOjuC,MAEvC,OAAO92B,KAAKi6B,IAAI+lG,UAAWC,WAC5B,GAGHvI,GAAGyI,SAAS5+H,EAAGC,EAAGs1B,MAAOiC,UAI7B2+F,GAAGwB,UAAYjsJ,KAAK+lJ,MAAM/lD,MAAMmzD,aAEhC5+I,OAAOmf,QAAQ,SAACld,MAAS,IACb83I,OAAW93I,KAAX83I,OACFh6H,EAAI9d,KAAK8d,EA/CE,EAgDXC,EAAI/d,KAAK+d,EAAI,GAEnB+5H,OAAO56H,QAAQ,SAAC7vB,KAAMwS,OAClBo0I,GAAGoB,SAAShoJ,KAAMywB,EAAGC,EAAK,GAAKle,WAIvCo0I,GAAGS,wDAecT,GAAI8H,UAAU,IACvBa,YAAgBb,SAAhBa,YACJ12B,IAAM61B,SAASG,SACbW,WAAa96D,kBAAA,QAAiBy3D,mDAAmDtzB,IAAI42B,YACrFC,cAAgBh7D,kBAAA,QAAiBy3D,mDAAmDtzB,IAAIi2B,UAU9F,GARAlI,GAAGM,OAEHN,GAAGU,YAAcnrJ,KAAK+lJ,MAAM/lD,MAAMwzD,aAElC/I,GAAGa,YAIiB,OAAhB8H,YAAsB,CAAA,IAElBK,MACAL,YADAK,MAAOxd,OACPmd,YADOnd,OAAQyd,WACfN,YADeM,WAAYC,UAC3BP,YAD2BO,UAAWC,WACtCR,YADsCQ,WAEpC7oG,SAAWwtC,kBAAA,QAAiBy3D,mDAAmD/Z,QAC/E4d,OAASt7D,kBAAA,QAAiBqyD,6BAA6BgJ,YAG7DnJ,GAAG6E,IAAIvkG,SAAS,GAAIA,SAAS,GAAI8oG,OAAQH,WAAa3gI,KAAK89B,GAAK,EAAG8iG,UAAY5gI,KAAK89B,GAAK,GAAI4iG,OAQjG,IAJAhJ,GAAGc,OAAO8H,WAAW,GAAIA,WAAW,IACpC5I,GAAGe,OAAO+H,cAAc,GAAIA,cAAc,IAG5B,MAAP72B,KAAa,CAAA,IACRv2G,KAASu2G,IAATv2G,KACF2tI,QAASv7D,kBAAA,QAAiBqyD,6BAA6BluB,IAAIm3B,QAC3DE,UAAYx7D,kBAAA,QAAiBy3D,mDAAmDtzB,IAAIs3B,UAE1F,GAAa,OAAT7tI,KAEAskI,GAAGe,OAAOuI,UAAU,GAAIA,UAAU,QAC/B,CAEH,IAAME,UAAY17D,kBAAA,QAAiBy3D,mDAAmD7pI,KAAKwsI,UAE3FlI,GAAGyJ,MAAMH,UAAU,GAAIA,UAAU,GAAIE,UAAU,GAAIA,UAAU,GAAIH,SACjErJ,GAAGe,OAAOyI,UAAU,GAAIA,UAAU,IAGtCv3B,IAAMv2G,KAGVskI,GAAGgB,SAEHhB,GAAGS,uDAecT,IACjBA,GAAGsB,KAAO7G,iBAAA+H,iBACVxC,GAAGM,OACH/qJ,KAAK8rJ,4CAA4CrB,IAIjD,IAFA,IAAM0J,kBAAoBn0J,KAAK+5F,YAAYnD,sBAAsBw9D,MAExD/3J,EAAI,EAAGA,EAAI83J,kBAAkBn3J,OAAQX,IAC1C2D,KAAKq0J,uBAAuB5J,GAAI0J,kBAAkB93J,IAGtDouJ,GAAGS,+DAgBsBT,GAAIwE,kBAAkB,IACvC91D,cAAkB81D,iBAAlB91D,cAER,GAAKA,cAAc4b,cAAe5b,cAAcqW,IAAhD,CAIAi7C,GAAGM,OAEH,IACIhmI,OAAQ,EAGqB,EAA7B82B,KAAKr+C,MAAM67F,SAASr8F,QAAcm8F,cAAcwK,cAAc9nD,KAAKr+C,MAAM67F,YACzEt0E,OAAQ,GAGZ,IAAIuvI,MAAQn7D,cAAcC,eACtBp5F,KAAK+lJ,MAAM8M,WAAW0B,cACtBv0J,KAAK+lJ,MAAM8M,WAAW2B,kBAEtBzvI,QACAuvI,MAAQt0J,KAAK+lJ,MAAM8M,WAAW4B,eAGlChK,GAAGmB,aAAe,SAzB6B,IA2BzC8I,yBAA6BzF,iBAA7ByF,yBAEFA,2BAA6B37D,iBAAA2K,iBAC7BgxD,yBAA2B10J,KAAK+lJ,MAAM8M,WAAW8B,kBAGrD,IAAIC,gBAAkB,CAClB7hI,KAAK6tF,KAAI,EAAAva,gBAAAqD,kBAAiBgrD,4BACzB3hI,KAAK69B,KAAI,EAAAy1C,gBAAAqD,kBAAiBgrD,4BAIE,QAA7BA,2BACAE,gBAAkB,CAAC,EAAG,IAI1B,IAAMC,oBAAsBt8D,kBAAA,QAAiBuyD,mDACzC3xD,cAAc0C,kBAEZi5D,aAAe90J,KAAK+0J,uBAAuB9F,iBAAiB+F,uBAC5DC,YAAc,CAChBJ,oBAAoB,GAAMD,gBAAgB,GAAK50J,KAAK+lJ,MAAM8M,WAAWqC,8BACrEL,oBAAoB,GAAMD,gBAAgB,GAAK50J,KAAK+lJ,MAAM8M,WAAWqC,+BAEnEC,UAAY,CACdN,oBAAoB,GAAKD,gBAAgB,IAAME,aAAe90J,KAAK+lJ,MAAM8M,WAAWuC,8BACpFP,oBAAoB,GAAKD,gBAAgB,IAAME,aAAe90J,KAAK+lJ,MAAM8M,WAAWuC,+BAElFC,4BAA8B,CAChCR,oBAAoB,GAAKD,gBAAgB,GAAKE,aAC9CD,oBAAoB,GAAKD,gBAAgB,GAAKE,cAGlDrK,GAAGa,YACHb,GAAGc,OAAH/6I,MAAAi6I,GAAawK,aACbxK,GAAGe,OAAHh7I,MAAAi6I,GAAa0K,WACb1K,GAAGU,YAAcmJ,MACjB7J,GAAGgB,SAEH,IAAM6J,8BAAgCrG,iBAAiBsG,yBAAyBF,6BAEhF5K,GAAGO,UAAHx6I,MAAAi6I,GAAE1uD,mBAAcu5D,gCAEhBt1J,KAAKw1J,qBAAqB/K,GAAItxD,eAG9B,IAEMs8D,SAAWxG,iBAAiByG,uBAC9BC,SAAW1G,iBAAiB2G,kCAE5B51J,KAAK61J,iCACLF,SAAW1G,iBAAiB6G,qCAGhC,IAAM7J,UAAY9yD,cAAcC,eAC5Bp5F,KAAK+lJ,MAAM8M,WAAW0B,cACtBv0J,KAAK+lJ,MAAM8M,WAAW2B,kBAE1B/J,GAAGwB,UAAYA,UAGfxB,GAAGsB,KAAO/rJ,KAAK+lJ,MAAM8M,WAAWC,UAChCrI,GAAGkB,UAAY,OACflB,GAAGoB,SAAS4J,SAnFM,EAmFKz1J,KAAK+lJ,MAAM8M,WAAWkD,YAAwB,GACrEtL,GAAGoB,SAAS8J,SApFM,EAoFK31J,KAAK+lJ,MAAM8M,WAAWkD,WAAwBC,GACrEvL,GAAGsB,KAAO7G,iBAAA+H,iBAEVxC,GAAGS,wDAecT,GAAItxD,eACrB,GAAKn5F,KAAK+lJ,MAAM8M,WAAWoD,SAA3B,CAMA,IAAMpsG,MAAQ7pD,KAAK+lJ,MAAM8M,WAAWqD,MAC9BC,UAAYn2J,KAAK+lJ,MAAM8M,WAAWkD,WAElCjqG,OAAS9rD,KAAK+lJ,MAAM8M,WAAWtlB,OAC/B6oB,WAAap2J,KAAK+lJ,MAAM8M,WAAWwD,YAKnCC,UAAYxqG,OAAS,EACrByqG,YAAcD,UAAY,EAC1BE,OAASF,UAJMG,IAKf/5J,EAAI85J,OAASD,YAEbG,oBAAsB3jI,KAAK4jI,KAPZF,IAOqB/5J,GAEpCk6J,SAAW7jI,KAAK89B,GAAK,GACvB9rC,OAAQ,EAGqB,EAA7B82B,KAAKr+C,MAAM67F,SAASr8F,QAAcm8F,cAAcwK,cAAc9nD,KAAKr+C,MAAM67F,YACzEt0E,OAAQ,GAIZ,IAAI8xI,IAAM72J,KAAK+lJ,MAAM8M,WAAWiE,yBAC5BC,MAAQ/2J,KAAK+lJ,MAAM8M,WAAWmE,wBAC9BC,KAAOj3J,KAAK+lJ,MAAM8M,WAAWqE,2BAC7B5C,MAAQt0J,KAAK+lJ,MAAM8M,WAAW2B,kBAiBlC,GAfIr7D,cAAcC,iBACdy9D,IAAM72J,KAAK+lJ,MAAM8M,WAAWsE,qBAC5BJ,MAAQ/2J,KAAK+lJ,MAAM8M,WAAWuE,oBAC9BH,KAAOj3J,KAAK+lJ,MAAM8M,WAAWwE,uBAC7B/C,MAAQt0J,KAAK+lJ,MAAM8M,WAAW0B,cAE1BxvI,QACA8xI,IAAM72J,KAAK+lJ,MAAM8M,WAAWyE,qBAC5BP,MAAQ/2J,KAAK+lJ,MAAM8M,WAAW0E,oBAC9BN,KAAOj3J,KAAK+lJ,MAAM8M,WAAW2E,uBAC7BlD,MAAQt0J,KAAK+lJ,MAAM8M,WAAW4B,iBAKjCt7D,cAAc6O,MAAMQ,sBAAwBxoG,KAAK+lJ,MAAM8M,WAAWoD,SASnE,OAPAxL,GAAGwB,UAAY8K,MACftM,GAAGyI,UAAUiD,WAAYC,WAAYvsG,MAAOiC,QAG5C2+F,GAAGwB,UAAa9yD,cAActB,WAAaoO,mBAAAwR,gBAAgB6D,UAAa27C,KAAOJ,SAC/EpM,GAAGyI,UAAUiD,UA9CA,GA8CuBC,WA9CvB,EA8C6CtqG,QAM9D2+F,GAAGM,OAGHN,GAAGwB,UAAY8K,MACftM,GAAGa,YACHb,GAAGc,QAAQ4K,UAAWC,YACtB3L,GAAGe,OAAO2K,UAAWC,YACrB3L,GAAGe,OAAO2K,WAAYC,YACtB3L,GAAGe,QAAQ2K,WAAYC,YACvB3L,GAAGe,QAAQ2K,WAAYK,QACvB/L,GAAG6E,KAAK6G,UA7DaM,KA8DhBF,YAAaD,UAAY,EA9DTG,IA+DjBC,oBAAsB3jI,KAAK89B,GAAK,EAChC,GACJ45F,GAAGe,OAAoB8K,UAAY,EAAxBH,UAA2BI,aACtC9L,GAAG6E,KAAK6G,UAlEaM,IAmEjBF,YACAD,UAAY,EApEKG,IAqEjB,EACA1jI,KAAK89B,GAAK,EAAI6lG,qBAClBjM,GAAGoC,YACHpC,GAAGqC,OAGHrC,GAAGO,WAAWmL,UA3EOM,IA2EmB,GACxChM,GAAGY,UA7Ec,EA8EjBZ,GAAGU,YAAc0L,IACjBpM,GAAGa,YACHb,GAAG6E,IAAI,GAAIiH,YAAaD,UAAY,GAAIM,SAAU7jI,KAAK89B,GAAK+lG,UAAU,GACtEnM,GAAGc,OAAO,GAAI+K,UAAY,GAC1B7L,GAAGe,OAAO,GAAI4K,YACd3L,GAAGgB,SACHhB,GAAGa,YACHb,GAAG6E,IAAI,EAAGiH,YAAaD,UAAY,EAAGM,SAAU7jI,KAAK89B,GAAK+lG,UAC1DnM,GAAGc,OAAO,EAAG+K,UAtFI,GAuFjB7L,GAAGe,OAAO,EAAG4K,YACb3L,GAAGgB,SAECtyD,cAAciX,0BAEdq6C,GAAGwB,UAAYqI,MACf7J,GAAGa,YACHb,GAAG6E,IAAI,EAAG,EAAGgH,UAAY,EAAG,EAAa,EAAVvjI,KAAK89B,IACpC45F,GAAGqC,QAGPrC,GAAGO,UAAUmL,UAjGQM,IAiGkB,GAEvChM,GAAGa,YACHb,GAAGgB,SAEHhB,GAAGS,2DAciBT,IACpB,IAAM0J,kBAAoBn0J,KAAK+5F,YAAYnD,sBAAsBw9D,MAEjE3J,GAAGM,OACH/qJ,KAAK8rJ,4CAA4CrB,IAEjD,IAAK,IAAIpuJ,EAAI,EAAGA,EAAI83J,kBAAkBn3J,OAAQX,IAC1C2D,KAAKy3J,6BAA6BhN,GAAI0J,kBAAkB93J,IAG5DouJ,GAAGS,6DAcoBT,IACvBA,GAAGM,OAGH/qJ,KAAK8rJ,4CAA4CrB,IACjDzqJ,KAAK03J,oBAAoBjN,IACzBzqJ,KAAK23J,gBAAgBlN,IAErBA,GAAGS,8EAaqCT,IACxCA,GAAGO,WACC,EAAAnyD,MAAAhkE,OAAM0jE,kBAAA,QAAiB49D,YACvB,EAAAt9D,MAAAhkE,OAAM0jE,kBAAA,QAAiB69D,iFAca3L,IACxCA,GAAGO,YACE,EAAAnyD,MAAAhkE,OAAM0jE,kBAAA,QAAiB49D,aACvB,EAAAt9D,MAAAhkE,OAAM0jE,kBAAA,QAAiB69D,qDAehB3L,IACZ,IAAM1gD,aAAelX,mBAAA,QAAkBkV,cACjC6vD,qBAAuBr/D,kBAAA,QAAiBy3D,mDAC1CjmD,aAAa4sC,WAAWV,OAAOp6C,kBAE7Bg8D,aAAe73J,KAAK83J,4BAA4B/tD,cAEtD,GAAqB,IAAjB8tD,aAAJ,CAIApN,GAAGM,OAEHN,GAAGsN,UAAY,EACftN,GAAGU,YAAcnrJ,KAAK+lJ,MAAM/lD,MAAMg4D,iBAGlC,IAAK,IAAI37J,EAAI,EAAGA,EAAIw7J,aAAyC,EAA1B9tD,aAAamL,WAAgB74G,IAC5DouJ,GAAGa,YACHb,GAAG6E,IAAH9+I,MAAAi6I,GAAE1uD,mBAAQ67D,sBAARpmJ,OAAA,CAA8BqmJ,aAAet/D,kBAAA,QAAiBx6C,MAAQ1hD,EAAG,GAAG,EAAA6pG,QAAAqpD,UAC9E9E,GAAGgB,SAGPhB,GAAGS,uDAcaT,IAChBA,GAAGM,OAEH,IAAMt7D,QAAUoD,mBAAA,QAAkBkV,cAClC0iD,GAAGU,YAAcnrJ,KAAK+lJ,MAAM/lD,MAAMi4D,mBAClCxN,GAAGwB,UAAYjsJ,KAAK+lJ,MAAM/lD,MAAMk4D,cAEhC,IAAK,IAAI77J,EAAI,EAAGA,EAAIozF,QAAQ8mD,SAASv5I,OAAQX,IAAK,CAC9C,IAAMk6I,SAAW9mD,QAAQ8mD,SAASl6I,GAElC2D,KAAKm4J,kBAAkB1N,GAAIlU,SAASuE,cAAc,GAOtD2P,GAAGS,gEAcuBT,IAC1B,GAAKzqJ,KAAKwlJ,oBAAV,CAIAiF,GAAGM,OAEH,IAAMt7D,QAAUoD,mBAAA,QAAkBkV,cAClC0iD,GAAGU,YAAc,2BACjBV,GAAGwB,UAAY,2BACfxB,GAAGsB,KAAO,0BACVtB,GAAGkB,UAAY,SACflB,GAAGmB,aAAe,SAElB,IAAK,IAAIvvJ,EAAI,EAAGA,EAAIozF,QAAQ8mD,SAASv5I,OAAQX,IAAK,CAC9C,IAAMk6I,SAAW9mD,QAAQ8mD,SAASl6I,GAElCouJ,GAAGM,OAEH/qJ,KAAK8rJ,4CAA4CrB,IAEjDzqJ,KAAKm4J,kBAAkB1N,GAAIlU,SAASuE,cAAc,GAElD,IAAMsd,mBAAoB,EAAA1qB,kBAAAS,SAAQp7G,KAAKC,MAAMujH,SAASvjH,MAAQ,KAAM,GAC9DqlI,gBAAiB,EAAA3qB,kBAAAS,SAAQp7G,KAAK06B,KAAK8oF,SAASh5B,QAAU,KAAM,GAC5D/yG,QAAO,GAAAgH,OAAM4mJ,kBAAN,KAAA5mJ,OAA2B6mJ,eAA3B,OAAA7mJ,OAA+CnV,EAA/C,KAEbouJ,GAAGS,UACHT,GAAGM,OAEH/qJ,KAAK8rJ,4CAA4CrB,IAhBH,IAAA1S,2BAAA,EAAAC,mBAAA,EAAAC,oBAAAr1I,EAAA,IAmB9C,IAAA,IAAAs1I,MAAAC,UAAoC5B,SAASqC,uBAA7CvzG,OAAAC,cAAAyyG,2BAAAG,MAAAC,UAAAhyH,QAAAd,MAAA0yH,2BAAA,EAAqE,CAAA,IAA1DugB,sBAA0DpgB,MAAA1yI,MACjExF,KAAKguJ,UAAUvD,GAAI6N,sBAAuB,CAAC9tJ,WApBD,MAAAxH,KAAAg1I,mBAAA,EAAAC,eAAAj1I,IAAA,QAAA,IAAA+0I,2BAAA,MAAAI,UAAA,QAAAA,UAAA,SAAA,QAAA,GAAAH,kBAAA,MAAAC,gBAuB9CwS,GAAGS,UAGPT,GAAGS,+DAcqBnhD,cACxB,IAAMwuD,UAAYnlE,gBAAA,QAAeiS,cAAcvM,qBAAAqI,kBAAkBq3D,aAC3DC,WAA2B,YAAdF,UACbG,kBAAoB3uD,aAAa4sC,WAEvC,MAAkB,QAAd4hB,WAAwBE,aAA4C,IAA9BC,kBAAkB7nH,QACjD,EAGN4nH,YAIE,EAAApyD,gBAAAyS,IAAG4/C,kBAAkB1iB,YAHjB,EAAA3vC,gBAAAyS,IAAGtsF,SAAS+rI,UAAWlyD,gBAAAk+B,0DAsBpBkmB,GAAI3P,cAA2B,IAAbgS,OAAa,EAAAjoJ,UAAA7H,aAAA4F,IAAAiC,UAAA,KAAAA,UAAA,GAC7C4lJ,GAAGa,YAEH,IAAK,IAAIjvJ,EAAI,EAAGA,EAAIy+I,aAAa99I,OAAQX,IAAK,CAC1C,IAAMs8J,iBAAmB7d,aAAaz+I,GAChCu8J,eAAiBrgE,kBAAA,QAAiBuyD,mDAAmD6N,kBAE3FlO,GAAGe,OAAHh7I,MAAAi6I,GAAE1uD,mBAAW68D,iBAGjBnO,GAAGoC,YACHpC,GAAGgB,SAECqB,MACArC,GAAGqC,uDAiBarC,GAAIoO,aAAc/pD,WAItC,IAAMgqD,MAAK,QAAAtnJ,OAAWxR,KAAK+lJ,MAAMgT,QAAQC,MAAMlqD,YAE/C27C,GAAGM,OAEHN,GAAGU,YAAH,GAAA35I,OAAoBsnJ,MAApB,MAAAtnJ,OAA8BxR,KAAK+lJ,MAAMgT,QAAQE,eAAjD,KACAxO,GAAGwB,UAAH,GAAAz6I,OAAkBsnJ,MAAlB,MAAAtnJ,OAA4BxR,KAAK+lJ,MAAMgT,QAAQG,aAA/C,KAEA,IAAK,IAAI78J,EAAI,EAAGA,EAAIw8J,aAAa77J,OAAQX,IAAK,CAC1C,IAAM88J,aAAeN,aAAax8J,GAElCouJ,GAAGa,YAEH,IAAK,IAAIx/H,EAAI,EAAGA,EAAIqtI,aAAan8J,OAAQ8uB,IAAK,CAG1C,IAFA,IAAMstI,YAAcD,aAAartI,GAExBkwF,EAAI,EAAGA,EAAIo9C,YAAYp8J,OAAQg/G,IAAK,CACzC,IAAMlY,eAAiBvL,kBAAA,QAAiBuyD,mDAAmDsO,YAAYp9C,IAE7F,IAANA,EACAyuC,GAAGc,OAAH/6I,MAAAi6I,GAAE1uD,mBAAW+H,iBAMb2mD,GAAGe,OAAHh7I,MAAAi6I,GAAE1uD,mBAAW+H,iBAQrB2mD,GAAGoC,YAGPpC,GAAGqC,OACHrC,GAAGgB,SAGPhB,GAAGS,8DAeqBT,GAAI4O,eAC5B5O,GAAGM,OACHN,GAAGsB,KAAO7G,iBAAA+H,iBACVxC,GAAGY,UAAY,EAQf,IANA,IACQxhG,MAAU0uC,kBAAA,QAAV1uC,MACAiC,OAAWysC,kBAAA,QAAXzsC,OAICzvD,EAAI,EAAGA,GAAKg9J,cAAeh9J,GAAK,IAAM,CAC3CouJ,GAAGM,OAIHN,GAAGO,UACCnhG,MAAQ,EAAI,KAAOwvG,cAAgBh9J,GAAK,IAAtB,IACjByvD,OAAS,EAbH,GAagB,IAE3B2+F,GAAGa,YACHb,GAAG3oF,KAAK,EAAG,EAAGw3F,GAZC,GAaf7O,GAAGoC,YAIH,IAAK,IAAI/gI,EAAI,EAAGA,GAAKzvB,EAAGyvB,GAAK,IACzB2+H,GAAGwB,UAAH,QAAAz6I,OAAuBxR,KAAK+lJ,MAAMgT,QAAQC,MAAMltI,GAAhD,MAAAta,OAAuDxR,KAAK+lJ,MAAMgT,QAAQG,aAA1E,KACAzO,GAAGqC,OAGPrC,GAAGU,YAAH,QAAA35I,OAAyBxR,KAAK+lJ,MAAMgT,QAAQC,MAAM38J,GAAlD,MAAAmV,OAAyDxR,KAAK+lJ,MAAMgT,QAAQE,eAA5E,KACAxO,GAAGgB,SAGH,IAAM8N,iBAAmB,CAAC,EAAG,IAAM,IAAO,KAAO,IAAO,KAAO,KAAO3sH,OAAO,SAAC20E,KAC1E,OAAOA,IAAM83C,cAAgB,OAGjC,GAAIh9J,IAAMg9J,eAAiBE,iBAAiB/sJ,QAAQnQ,KAAO08F,iBAAA4f,cAAe,CACtE8xC,GAAGwB,UAAYjsJ,KAAK+lJ,MAAM/lD,MAAM2sD,SAChClC,GAAGkB,UAAY,SACflB,GAAGmB,aAAe,MAClB,IAAM9mI,KAAa,IAANzoB,EAAU,MAAV,GAAAmV,OAAqBnV,EAArB,KAEbouJ,GAAGoB,SAAS/mI,KAAMw0I,KAAqB9zI,IAG3CilI,GAAGS,UAGPT,GAAGS,+CAcMT,IACT,IAAMh7D,QAAUoD,mBAAA,QAAkBkV,cAC5ByxD,eAAiB/pE,QAAQosB,QAC3Bw9C,cAAgB,EAEpB,GAAKr5J,KAAK6lJ,oBAA6D,IAAvCj7H,OAAO8R,KAAK88H,gBAAgBx8J,OAA5D,CAeA,IAAK,IAAM8xG,aAXX27C,GAAGM,OACH/qJ,KAAK8rJ,4CAA4CrB,IAGjDA,GAAGU,YAAcnrJ,KAAK+lJ,MAAM/lD,MAAM2sD,SAGlClC,GAAGwB,UAAYjsJ,KAAK+lJ,MAAM/lD,MAAM2sD,SAChClC,GAAGY,WAAY,EAAAxyD,MAAAkI,OAAM,GAAMxI,kBAAA,QAAiBx6C,MAAQ,GAAK,GACzD0sG,GAAGuC,SAAW,QAEUwM,eAEpB,GAAKA,eAAej0J,eAAeupG,WAAnC,CAIA,IAAM+pD,aAAeW,eAAe1qD,WAEhCA,UAAY,IAAM9uG,KAAK8lJ,wBACvBr5H,QAAQ4tB,KAAK,GAAA7oC,OAAGi+E,QAAQI,KAAX,gCACT,6CAEJ7vF,KAAK8lJ,wBAAyB,IAKlCuT,cAAgBtmI,KAAKi6B,IAAIqsG,cAAevqD,WAExC9uG,KAAKy5J,wBAAwBhP,GAAIoO,aAAc/pD,YAG7B,IAAlBuqD,eACAr5J,KAAK05J,4BAA4BjP,GAAI4O,eAGzC5O,GAAGS,2DAciBT,IACpB,GAAKzqJ,KAAK0lJ,2BAAV,CAIA+E,GAAGM,OACH/qJ,KAAK8rJ,4CAA4CrB,IAEjDA,GAAGwB,UAAYjsJ,KAAK+lJ,MAAM/lD,MAAM25D,oBAChClP,GAAGU,YAAcnrJ,KAAK+lJ,MAAM/lD,MAAM25D,oBAClClP,GAAGY,UAAYt4H,KAAKi6B,IAAIurC,kBAAA,QAAiBx6C,MAAQ,EAAG,GACpD0sG,GAAGuC,SAAW,QACdvC,GAAGsB,KAAO7G,iBAAA+H,iBACVxC,GAAGkB,UAAY,SACflB,GAAGmB,aAAe,MAIlB,IAFA,IAAM7hD,aAAelX,mBAAA,QAAkBkV,cAE9B1rG,EAAI,EAAGA,EAAI0tG,aAAa3S,iBAAiBp6F,OAAQX,IAAK,CAC3D,IAAM6/G,KAAOnS,aAAa3S,iBAAiB/6F,GACrCu9J,sBAAwB19C,KAAKsR,KAEnCxtH,KAAKm4J,kBAAkB1N,GAAImP,uBAAuB,GAIlD,IAFA,IAAM9tG,OAASowD,KAAKpwD,SAAWpxB,EAAAA,EAAW,MAA3B,MAAAlpB,OAAyE,GAAhCuhB,KAAK06B,KAAKyuD,KAAKpwD,OAAS,MAEvEhgC,EAAI,EAAGA,EAAIowF,KAAK08B,uBAAuB57I,OAAQ8uB,IAAK,CACzD,IAAMg4E,eAAiBvL,kBAAA,QAAiBuyD,mDACpC5uC,KAAK08B,uBAAuB9sH,IAE5B+tI,cAAgB,EAEpB,GAAI39C,KAAKv7G,KAAM,CACXk5J,cAAgB,EAChB,IAAMC,uBAAyB,CAACh2D,eAAe,GAAIA,eAAe,GAAK+1D,eAEvEpP,GAAGoB,SAAHr7I,MAAAi6I,GAAE,CAAUvuC,KAAKv7G,MAAf6Q,OAAwBsoJ,yBAG9B,IAAMC,sBAAwB,CAACj2D,eAAe,GAAIA,eAAe,GAAK+1D,eAEtEpP,GAAGoB,SAAHr7I,MAAAi6I,GAAE,CAAU3+F,QAAVt6C,OAAqBuoJ,yBAI/BtP,GAAGS,iDAcOT,IACV,IAAM1gD,aAAelX,mBAAA,QAAkBkV,cAGlCgC,aAAausC,cAAc0jB,iBAIhCvP,GAAGM,OACH/qJ,KAAK8rJ,4CAA4CrB,IAEjDA,GAAGU,YAAcnrJ,KAAK+lJ,MAAM/lD,MAAMi6D,UAClCxP,GAAGY,UAAYt4H,KAAKi6B,IAAI,EAAGurC,kBAAA,QAAiBx6C,MAAQ,IACpD0sG,GAAGuC,SAAW,QACdvC,GAAGsB,KAAO7G,iBAAA+H,iBAEVxC,GAAGa,YAEWvhD,aAAausC,cAAc4jB,qBAEnCxmI,QAAQ,SAACymI,SACX,IAAMC,iBAAmB,CAACD,QAAQ,GAAIA,QAAQ,IACxCE,eAAiB9hE,kBAAA,QAAiBuyD,mDAAmDsP,kBACrFE,eAAiB,CAACH,QAAQ,GAAIA,QAAQ,IACtCI,aAAehiE,kBAAA,QAAiBuyD,mDAAmDwP,gBAEzF7P,GAAGc,OAAH/6I,MAAAi6I,GAAE1uD,mBAAWs+D,iBACb5P,GAAGe,OAAHh7I,MAAAi6I,GAAE1uD,mBAAWw+D,iBAGjB9P,GAAGgB,SACHhB,GAAGS,gEAesBT,IACzB,IAAIr3D,gBAAA,QAAeonE,cAAnB,CAIA,IAAMnhE,SAAWx9C,KAAKr+C,MAAM67F,SAAS99C,cAErC,GAAwB,IAApB89C,SAASr8F,OAAb,CAMA,IAAM+0F,UAAW,EAAA4b,SAAA,SAAQ3tG,KAAKy5F,oBAAoB1H,SAAS7hF,KAAM,SAACrT,GAC9D,OAAOA,EAAE8mG,cAActK,WAAax8F,EAAEk4G,cACvC,GAEH,GAAKhjB,SAAL,CAIA,IAAM0oE,aAAe,CAAC,EAAG,GACnBC,WAAa,CAACniE,kBAAA,QAAiB1uC,MAAO0uC,kBAAA,QAAiBzsC,QACvD6uG,iBAAmB36J,KAAK46J,kBAAkB7oE,SAAS8J,kBAEzD4uD,GAAGM,OAGHN,GAAGU,YAAcnrJ,KAAK+lJ,MAAM/lD,MAAM66D,aAClCpQ,GAAGwB,UAAYjsJ,KAAK+lJ,MAAM/lD,MAAM86D,aAChCrQ,GAAGkB,UAAY,SACflB,GAAGmB,aAAe,SAKlB,IAAK,IAAIzjD,QAAU,EAAGA,SAAW,IAAKA,UAAW,CAG7C,IAAM4yD,eAAgB,EAAAntD,QAAAotD,wBAAuB7yD,SAI7C4yD,cAAc,IAAMA,cAAc,GAGlC,IAAM7yE,cAAe,EAAA0lB,QAAAqtD,iCACjBN,iBACAI,cACAN,aACAC,YAGJ,GAAKxyE,aAAL,CAQA,IAAIgzE,QAAU,EAEV/yD,QAAU,GAAM,IAChB+yD,QAAU/yD,QAAU,IAAO,EAAI,GAAK,IAGxC,IAAMgzD,WAAahzD,QAAU,IAAO,EAAI,EAAI,EAGtCizD,YAAa,EAAAxtD,QAAAyW,QAAO02C,eAAgBG,SACpCG,eAAiBnzE,aACjBozE,cAAe,EAAA1tD,QAAA2W,MAAK82C,eAAgBD,YAU1C,GAPA3Q,GAAGY,UAAY8P,WACf1Q,GAAGa,YACHb,GAAGc,OAAH/6I,MAAAi6I,GAAE1uD,mBAAWs/D,iBACb5Q,GAAGe,OAAHh7I,MAAAi6I,GAAE1uD,mBAAWu/D,eACb7Q,GAAGgB,SAGCtjD,QAAU,IAAO,EAArB,CAKAsiD,GAAGsB,KAAO5jD,QAAU,IAAO,EACvB,+BACA+8C,iBAAA+H,iBAEJ,IAAMnoI,KAAI,GAAAtT,OAAM6kB,OAAO8xE,SAASozD,SAAS,EAAG,MACtCC,UAAY/Q,GAAGwI,YAAYnuI,MAAM+kC,MAGvC4gG,GAAGoB,SACC/mI,KACAw2I,aAAa,GAAKP,cAAc,IAAMS,UAAY,EAAI,GACtDF,aAAa,GAAwB,EAAnBP,cAAc,MAIxCtQ,GAAGS,6DAYiBvqJ,MACpB,OAAOX,KAAK8Q,SAASnQ,gDA+BP86J,mBAOdA,kBAAoB,CAChBljE,kBAAA,QAAiBqyD,6BAA6B6Q,kBAAkB,KAC/DljE,kBAAA,QAAiBqyD,6BAA6B6Q,kBAAkB,KAGrE,IAAMC,4BAA8B,CAACnjE,kBAAA,QAAiBiN,MAAOjN,kBAAA,QAAiBmN,OACxEi2D,mCAAqC,CAACpjE,kBAAA,QAAiB49D,UAAW59D,kBAAA,QAAiB69D,YACnFwF,qCAAsC,EAAAhuD,QAAA2W,MAAKo3C,mCAAoCD,6BAErF,OAAO,EAAA9tD,QAAA2W,MAAKq3C,oCAAqCH,kEAY9BzG,uBACnB,OAAOA,sBACHh1J,KAAK+lJ,MAAM8M,WAAWgJ,+BACtB77J,KAAK+lJ,MAAM8M,WAAWiJ,gCACtB97J,KAAK+lJ,MAAM8M,WAAWuC,6BACtBp1J,KAAK+lJ,MAAM8M,WAAWqC,2EAe1Bl1J,KAAK+7J,oEAeL/7J,KAAK4oJ,kEAeL5oJ,KAAK4oJ,8DAeL5oJ,KAAKwlJ,qBAAuBxlJ,KAAKwlJ,oBAEjCxlJ,KAAK4oJ,4DAeL5oJ,KAAKylJ,sBAAwBzlJ,KAAKylJ,qBAElCzlJ,KAAK4oJ,qEAeL5oJ,KAAK0lJ,4BAA8B1lJ,KAAK0lJ,2BAExC1lJ,KAAK4oJ,4DAeL5oJ,KAAK2lJ,mBAAqB3lJ,KAAK2lJ,kBAE/B3lJ,KAAK4oJ,6DAeL5oJ,KAAK4lJ,oBAAsB5lJ,KAAK4lJ,mBAEhC5lJ,KAAK4oJ,6DAeL5oJ,KAAK6lJ,oBAAsB7lJ,KAAK6lJ,mBAEhC7lJ,KAAK4oJ,4DAcSoT,UACdnpE,mBAAA,QAAkBkV,cAAcuuC,cAAc2lB,eAAeD,UAE7Dh8J,KAAK4oJ,gEAeL5oJ,KAAK4oJ,+DAiBL5oJ,KAAKslJ,sBAAuB,4CAiB5BtlJ,KAAKulJ,mBAAoB,EAEzBvlJ,KAAK+7J,iEAaL/7J,KAAK+7J,mEAaL/7J,KAAK+7J,kEAeYlgE,kBACjB,IAAMqgE,UAAW,EAAArjE,MAAAhkE,OAAM0jE,kBAAA,QAAiBqyD,6BAA6B/uD,iBAAiB,KAChFsgE,SAAU,EAAAtjE,MAAAhkE,OAAM0jE,kBAAA,QAAiBqyD,6BAA6B/uD,iBAAiB,KAErFtD,kBAAA,QAAiBkF,UAAUy+D,QAASC,oDAgBpCn8J,KAAK4oJ,oDAkBCwT,YACD,EAAAhkE,MAAA,SAAK+sD,QAAAc,MAAOmW,YAOE,OAAfp8J,KAAK+lJ,OACL/lJ,KAAK+uF,SAASp4B,YAAY32D,KAAK+lJ,MAAMwC,WAGzCvoJ,KAAK+lJ,MAAQZ,QAAAc,MAAMmW,WAEnBp8J,KAAK+uF,SAASz4B,SAASt2D,KAAK+lJ,MAAMwC,WAClCvoJ,KAAK4oJ,mBAbDn8H,QAAQ1U,MAAR,oDAAAvG,OAAkE4qJ,UAAlE,m9BClvFZ,IAAAhkE,MAAArK,uBAAAvxF,QAAA,eACA2xF,UAAAJ,uBAAAvxF,QAAA,oBACAq8F,MAAAr8F,QAAA,gBACA+xF,YAAA/xF,QAAA,2BACA0oJ,iBAAA1oJ,QAAA,gCAKA8xF,aAAA9xF,QAAA,4BACAu8F,iBAAAv8F,QAAA,m2BAkbe,eA3ZX,SAAA6/J,mBA2FI,qIA3FUvtE,CAAA9uF,KAAAq8J,kBAMVr8J,KAAKk0F,UAAY/F,UAAA,QAUjBnuF,KAAKs8J,QAAUvjE,iBAAA2K,eAUf1jG,KAAKu8J,OAASxjE,iBAAA2K,eAUd1jG,KAAKwlG,MAAQzM,iBAAA2K,eAUb1jG,KAAK0lG,MAAQ3M,iBAAA2K,eAUb1jG,KAAKw8J,cAAgBzjE,iBAAA2K,eAUrB1jG,KAAKy8J,UAAY1jE,iBAAA2K,eAUjB1jG,KAAK08J,UAAY3jE,iBAAA2K,eAajB1jG,KAAK28J,OAAS5jE,iBAAA2K,eAEP1jG,KAAK00F,8HAiDZ10F,KAAKs8J,QAAUpX,iBAAA0X,oBAAoBrvB,OACnCvtI,KAAKu8J,OAASrX,iBAAA0X,oBAAoB1G,MAClCl2J,KAAKwlG,MAAQ0/C,iBAAA2X,IAAIC,EACjB98J,KAAK0lG,MAAQw/C,iBAAA2X,IAAIE,EACjB/8J,KAAKw8J,cAAgBtX,iBAAA8X,MAAMC,QAC3Bj9J,KAAK08J,UAAYxX,iBAAA8X,MAAME,IACvBl9J,KAAKy8J,UAAYvX,iBAAA8X,MAAMG,IACvBn9J,KAAK28J,OAAS38J,KAAKo9J,yEAQnBp9J,KAAKs8J,QAAUvjE,iBAAA2K,eACf1jG,KAAKu8J,OAASxjE,iBAAA2K,eACd1jG,KAAKwlG,MAAQzM,iBAAA2K,eACb1jG,KAAK0lG,MAAQ3M,iBAAA2K,eACb1jG,KAAKw8J,cAAgBzjE,iBAAA2K,eACrB1jG,KAAKy8J,UAAY1jE,iBAAA2K,eACjB1jG,KAAK08J,UAAY3jE,iBAAA2K,eACjB1jG,KAAK28J,OAAS5jE,iBAAA2K,oEAYW25D,gBACzB,OAAOA,eAAiBr9J,KAAK28J,2EAaWroI,EAAGC,GAK3C,MAFyB,CAFCv0B,KAAK08F,4BAA4BpoE,EAAIt0B,KAAKwlG,OAC1CxlG,KAAK08F,4BAA4BnoE,EAAIv0B,KAAK0lG,wEAehCpxE,EAAGC,GAIvC,MAAO,CAHiBD,EAAIt0B,KAAKm2J,WACR5hI,EAAIv0B,KAAKo2J,gEAaVkH,YACxB,OAAOA,WAAat9J,KAAK28J,kFAcsB9gE,kBAAkB,IAAAuoD,kBAAAjoD,eAClDN,iBADkD,GAC1DvnE,EAD0D8vH,kBAAA,GACvD7vH,EADuD6vH,kBAAA,GAMjE,MAFwB,CAFRpkJ,KAAK4qJ,6BAA6Bt2H,GAAKt0B,KAAKwlG,OACH,EAAxCxlG,KAAK4qJ,6BAA6Br2H,GAAWv0B,KAAK0lG,kFAoBpB7J,kBAC/C,IAAM0hE,gBAAkBv9J,KAAKgwJ,mDAAmDn0D,kBAGhF,MAFwB,EAAC,EAAAhD,MAAAhkE,OAAM0oI,gBAAgB,KAAK,EAAA1kE,MAAAhkE,OAAM0oI,gBAAgB,kDAezDC,WAAYC,WAC7Bz9J,KAAKs8J,QAAUkB,WAAatY,iBAAA0X,oBAAoBc,qBAChD19J,KAAKu8J,OAASkB,4CAWRnpI,EAAGC,GACTv0B,KAAKwlG,MAAQlxE,EACbt0B,KAAK0lG,MAAQnxE,EAEbv0B,KAAKk0F,UAAUjyC,QAAQssC,YAAAyC,MAAM82D,+CAU7B9nJ,KAAK29J,aAFa,qCAYlB39J,KAAK29J,aAFa,uCAYlB39J,KAAK28J,OAAS38J,KAAKw8J,cAEnBx8J,KAAK49J,kBACL59J,KAAKk0F,UAAUjyC,QAAQssC,YAAAyC,MAAM+2D,gFAc7B,OAAK,EAAA3vD,MAAA,SAAKnI,aAAc3B,aAAA4B,YAAY2tE,YAIhB5tE,aAAa6tE,QAAQxvE,aAAA4B,YAAY2tE,YAH1C3Y,iBAAA8X,MAAMC,kDAgBjBhtE,aAAa8tE,QAAQzvE,aAAA4B,YAAY2tE,WAAY79J,KAAK28J,6CAWzCqB,UAELh+J,KAAK28J,OADLqB,SACcjrI,KAAKw5C,IAAIvsE,KAAK28J,OAASzX,iBAAA8X,MAAMiB,cAAej+J,KAAKy8J,WAKrD1pI,KAAKi6B,IAAIhtD,KAAK28J,OAASzX,iBAAA8X,MAAMiB,cAAej+J,KAAK08J,+CAmBvDsB,UAER,IAAME,WAAY,EAAArlE,MAAAhkE,OAAM70B,KAAK08F,4BAA4B18F,KAAKwlG,QACxD24D,WAAY,EAAAtlE,MAAAhkE,OAAM70B,KAAK08F,4BAA4B18F,KAAK0lG,QAE9D1lG,KAAKo+J,aAAaJ,UAIlB,IAAMK,UAAW,EAAAxlE,MAAAhkE,OAAM70B,KAAK4qJ,6BAA6BsT,YACnDI,UAAW,EAAAzlE,MAAAhkE,OAAM70B,KAAK4qJ,6BAA6BuT,YAEzDn+J,KAAKy9F,UAAU4gE,SAAUC,UACzBt+J,KAAK49J,kBACL59J,KAAKk0F,UAAUjyC,QAAQssC,YAAAyC,MAAM+2D,8CApT7B,OAAO/nJ,KAAKs8J,2CAQZ,OAAO,EAAAzjE,MAAAhkE,OAAM70B,KAAKs8J,QAAU,iCAQ5B,OAAOt8J,KAAK28J,qCAQZ,OAAO38J,KAAKu8J,yCAQZ,OAAO,EAAA1jE,MAAAhkE,OAAM70B,KAAKu8J,OAAS,oeCpKnC,IAAAzuE,QAAAC,uBAAAvxF,QAAA,WACA2xF,UAAAJ,uBAAAvxF,QAAA,oBACAs3F,WAAAt3F,QAAA,0BACA8xF,aAAA9xF,QAAA,4BACA+xF,YAAA/xF,QAAA,qYAOqB+hK,+BAKjB,SAAAA,oBAAYnqE,6IAActF,CAAA9uF,KAAAu+J,qBAOtBv+J,KAAKwK,QAAU,KAQfxK,KAAKo0F,aAAe,KAQpBp0F,KAAKw+J,oBAAsB,KAQ3Bx+J,KAAKy+J,eAAiB,KAStBz+J,KAAK0+J,iBAAmB,KAQxB1+J,KAAKk0F,UAAY,KAEjBl0F,KAAKojC,KAAKgxD,oIAUTA,cAWD,OAVAp0F,KAAKwK,QAAU,oBACfxK,KAAKo0F,aAAeA,aACpBp0F,KAAKk0F,UAAY/F,UAAA,QAEjBnuF,KAAKuvI,kBACLvvI,KAAKy+J,eAAex2G,KAAKjoD,KAAKwK,SAC9BxK,KAAK2+J,kBACL3+J,KAAKoyF,SACLpyF,KAAK4+J,uBAEE5+J,qCAmBP,OAVAA,KAAKwK,QAAU,KACfxK,KAAKo0F,aAAe,KACpBp0F,KAAKw+J,oBAAsB,KAC3Bx+J,KAAKy+J,eAAiB,KACtBz+J,KAAK0+J,iBAAmB,KACxB1+J,KAAKk0F,UAAY,KAEjBl0F,KAAK0gJ,iBACL1gJ,KAAK63C,UAEE73C,sCAQPA,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAM6tE,iBAAkB7+J,KAAK8+J,6DAQ/C9+J,KAAK0+J,iBAAiBl9G,IAAI+sC,YAAAyC,MAAM6tE,iBAAkB7+J,KAAK8+J,qEAgBvD,OAJA9+J,KAAKw+J,qBAAsB,EAAA1wE,QAAA,SAAEgG,WAAAuB,UAAUC,cAAcypE,qBACrD/+J,KAAKy+J,gBAAiB,EAAA3wE,QAAA,SAAEgG,WAAAuB,UAAUC,cAAc0pE,mBAChDh/J,KAAK0+J,kBAAmB,EAAA5wE,QAAA,SAAEgG,WAAAuB,UAAUC,cAAcupE,kBAE3C7+J,+CAcP,OAFAA,KAAK8+J,0BAA4B9+J,KAAKi/J,mBAAmBvsG,KAAK1yD,MAEvDA,8CAeP,OAFAA,KAAK8+J,0BAA4B,KAE1B9+J,oDAaY,IAAAiU,MAAAjU,KAKMA,KAAKo0F,aAAanwF,IAJ3B,CACZmzB,IAAK,wBACL+iH,WAAW,IAIE90H,KAAK,SAACzf,MACnBqO,MAAKzJ,QAAU5E,KAAKs5J,UACpBjrJ,MAAKkrJ,4DAYTn/J,KAAKo/J,UAAW,EAChBp/J,KAAKy+J,eAAex2G,KAAKjoD,KAAKwK,SAE1BxK,KAAKq/J,qBACLr/J,KAAKi/J,kEAcTj/J,KAAK0+J,iBAAiB9nG,YAAYk9B,WAAAuB,UAAUuL,WAAWswC,QACvDlxI,KAAKw+J,oBAAoB5nG,YAAYk9B,WAAAuB,UAAUuL,WAAWxmF,kDAY1D,IAAMklJ,kBAAoBrvE,aAAa3B,aAAA4B,YAAYqvE,kBAC7CC,eAAiBx/J,KAAK41B,QACtB6pI,uBAAyBH,oBAAsBE,eAMrD,OAJIC,yBACAxvE,aAAa3B,aAAA4B,YAAYqvE,kBAAoBC,gBAG1CC,kcChPf,QAAA35D,WAAAtpG,QAAA,iDACAw8F,gBAAAx8F,QAAA,uTAsBqBkjK,yBAQjB,SAAAA,gBAA2D,IAA/Ch+D,QAA+C,EAAA78F,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAArC,GAAI86J,YAAiC,EAAA96J,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAnB,GAAIw0F,SAAe,EAAAx0F,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAJ,kIAAIiqF,CAAA9uF,KAAA0/J,eAYvD1/J,KAAK0hG,QAAUA,QAWf1hG,KAAK2/J,YAAcA,YAUnB3/J,KAAKq5F,SAAWA,yHAgBhB,OAAIr5F,KAAK0hG,UAAY1I,gBAAA2I,oBAAoBC,SAC9B5hG,KAAK2/J,YAAY,GAAGp4J,MAGxB,EAAAu+F,MAAA,SAAK9lG,KAAK2/J,YAAa,SAACj+D,SAAD,OAAaA,QAAQk+D,sWCpF3D,IAAAC,4BAAArjK,QAAA,msBAeqBsjK,gCAKjB,SAAAA,uBAAuB,IAAXn/J,KAAW,EAAAkE,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAJ,kIAAIiqF,CAAA9uF,KAAA8/J,sBAOnB9/J,KAAKW,KAAOA,KAeZX,KAAK+/J,mBAAqBF,4BAAAG,4BAA4Br/J,MAetDX,KAAKuH,KAAO,oIA4BZ,QAAuC,IAA5BvH,KAAK+/J,mBAIhB,OAAO//J,KAAK+/J,mBAAmBE,SAASjgK,KAAKuH,0CAc7CvH,KAAKuH,KAAOvH,KAAK+/J,mBAAmB3hK,MAAM4B,KAAKuH,0CAhC/C,MAAA,CACIvH,KAAKW,MADT6Q,OAAAuqF,mBAEO/7F,KAAKuH,oZC9DpB,IAAA8+F,gBAAA7pG,QAAA,kCACA0jK,oBAAA1jK,QAAA,iCAYA2jK,iBAAA3jK,QAAA,kMAqBO,IAAMwxB,KAAO,SAACzmB,MAAD,OAAUA,wBASvB,IAAM64J,cAAgB,SAAC74J,MAAD,MAAU,EAAC,EAAA8+F,gBAAAg6D,uBAAsB94J,4CAS9D,IA+May4J,sbAA2BM,CAAA,GA/ML,CAE/B9qB,MAAO,CACHyqB,SAAUC,oBAAAK,uBACVniK,MAAO4vB,MAEXgmF,KAAM,CACFisD,SAAUC,oBAAAK,uBACVniK,MAAO4vB,MAEX+1C,MAAO,CACHk8F,SAAUC,oBAAAK,uBACVniK,MAAO4vB,MAEXwyI,MAAO,CACHP,SAAUC,oBAAAK,uBACVniK,MAAO4vB,MAEXyyI,SAAU,CACNR,SAAUC,oBAAAK,uBACVniK,MAAO4vB,MAIXgvC,MAAO,CACHijG,SAAUC,oBAAAK,uBACVniK,MAAO4vB,MAEX06E,eAAgB,CACZu3D,SAAUC,oBAAAK,uBACVniK,MAAO4vB,MAEX0yI,OAAQ,CACJT,SAAUC,oBAAAK,uBACVniK,MAAO4vB,MAEX2yI,kBAAmB,CACfV,SAAUC,oBAAAK,uBACVniK,MAAO4vB,MAEXq/E,QAAS,CACL4yD,SAAUC,oBAAAK,uBACVniK,MAAO4vB,MAEX4yI,YAAa,CACTX,SAAUC,oBAAAK,uBACVniK,MAAO4vB,MAEX6yI,oBAAqB,CACjBZ,SAAUC,oBAAAK,uBACVniK,MAAO4vB,MAEX8yI,WAAY,CACRb,SAAUC,oBAAAK,uBACVniK,MAAO4vB,MAEX+yI,mBAAoB,CAChBd,SAAUC,oBAAAK,uBACVniK,MAAO4vB,MAEXgzI,qBAAsB,CAClBf,SAAUC,oBAAAK,uBACVniK,MAAO4vB,MAEXizI,iBAAkB,CACdhB,SAAUC,oBAAAK,uBACVniK,MAAO4vB,MAEX+8E,SAAU,CACNk1D,SAAUC,oBAAAK,uBACVniK,MAAO4vB,OAasB,CACjCyhE,QAAS,CACLwwE,SAAUC,oBAAAgB,wBACV9iK,MAAO4vB,MAEXmzI,OAAQ,CACJlB,SAAUC,oBAAAgB,wBACV9iK,MAAO4vB,MAEXozI,oBAAqB,CACjBnB,SAAUC,oBAAAgB,wBACV9iK,MAAO4vB,MAEXi8G,IAAK,CACDg2B,SAAUC,oBAAAgB,wBACV9iK,MAAO+hK,iBAAAkB,WAEXC,KAAM,CACFrB,SAAUC,oBAAAqB,2BACVnjK,MAAO4vB,MAEXwzI,cAAe,CACXvB,SAAUC,oBAAAgB,wBACV9iK,MAAO4vB,MAEXqvF,KAAM,CACF4iD,SAAUC,oBAAAgB,wBAGV9iK,MAAOgiK,eAEXqB,QAAS,CACLxB,SAAUC,oBAAAgB,wBACV9iK,MAAO4vB,MAEX0zI,MAAO,CACHzB,SAAUC,oBAAAgB,wBACV9iK,MAAO4vB,MAEXw/H,IAAK,CACDyS,SAAUC,oBAAAgB,wBACV9iK,MAAO4vB,MAEX0lC,MAAO,CACHusG,SAAUC,oBAAAgB,wBAGV9iK,MAAOgiK,eAEXlS,KAAM,CACF+R,SAAUC,oBAAAgB,wBACV9iK,MAAO4vB,OAcsB,CACjC2zI,KAAM,CACF1B,SAAUC,oBAAAqB,2BACVnjK,MAAO4vB,MAEX4zI,WAAY,CACR3B,SAAUC,oBAAAqB,2BACVnjK,MAAO4vB,MAKX26E,SAAU,CACNs3D,SAAUC,oBAAA2B,kBACVzjK,MAAO+hK,iBAAA2B,gBAEXnhD,MAAO,CACHs/C,SAAUC,oBAAA6B,kBACV3jK,MAAO+hK,iBAAA6B,gBAEXz+G,IAAK,CACD08G,SAAUC,oBAAA+B,aACV7jK,MAAO4vB,MAEXm6E,QAAS,CACL83D,SAAUC,oBAAAgC,iBACV9jK,MAAO+hK,iBAAAgC,eAEXj/F,KAAM,CACF+8F,SAAUC,oBAAAkC,cACVhkK,MAAO+hK,iBAAAkC,YAEX50D,OAAQ,CACJwyD,SAAUC,oBAAAoC,gBACVlkK,MAAO4vB,MAEXu0I,SAAU,CACNtC,SAAUC,oBAAAqB,2BACVnjK,MAAO+hK,iBAAAqC,gBAEX15D,eAAgB,CACZm3D,SAAUC,oBAAAuC,0BACVrkK,MAAO+hK,iBAAAuC,wBAEX95D,YAAa,CACTq3D,SAAUC,oBAAAuC,0BACVrkK,MAAO+hK,iBAAAuC,mVCpBR,SAAkCC,cACrC,OAAO,EAAAC,UAAA,SAASj7D,qBAAsB,SAACjG,SAAD,OAAwD,IAA3CA,QAAQ1xF,QAAQxD,QAAQm2J,sEA9O/E,QAAAC,eAAApmK,QAAA,qDAoBO,IAAMmrG,qBAAuB,CAChC3qC,MAAO,CACHhtD,QAAS,CAAC,SACV03F,aAAc,WACdm7D,iBAAiB,GAErBrtB,MAAO,CACHxlI,QAAS,CAAC,SACV03F,aAAc,GACdm7D,iBAAiB,GAErBpzE,QAAS,CACLz/E,QAAS,CAAC,WACV03F,aAAc,GACdm7D,iBAAiB,GAErBl6D,SAAU,CACN34F,QAAS,CAAC,IAAK,WAAY,IAAK,QAAS,IAAK,WAC9C03F,aAAc,cACdm7D,iBAAiB,GAErB7uD,KAAM,CACFhkG,QAAS,CAAC,QACV03F,aAAc,GACdm7D,iBAAiB,GAErB9+F,MAAO,CACH/zD,QAAS,CAAC,SACV03F,aAAc,GACdm7D,iBAAiB,GAErBn6D,eAAgB,CACZ14F,QAAS,CAAC,MAAO,kBACjB03F,aAAc,oBACdm7D,iBAAiB,GAErBj6D,YAAa,CACT54F,QAAS,CAAC,cAAe,OACzB03F,aAAc,iBACdm7D,iBAAiB,GAErBliD,MAAO,CACH3wG,QAAS,CAAC,QAAS,KAAM,KACzB03F,aAAc,WACdm7D,iBAAiB,GAErBnC,OAAQ,CACJ1wJ,QAAS,CAAC,MAAO,SAAU,QAC3B03F,aAAc,YACdm7D,iBAAiB,GAErB/5D,eAAgB,CACZ94F,QAAS,CAAC,iBAAkB,OAC5B03F,aAAc,oBACdm7D,iBAAiB,GAErB1B,OAAQ,CACJnxJ,QAAS,CAAC,MAAO,SAAU,MAC3B03F,aAAc,YACdm7D,iBAAiB,GAErBjB,WAAY,CACR5xJ,QAAS,CAAC,WAAY,aAAc,WAAY,SAAU,MAC1D03F,aAAc,0BACdm7D,iBAAiB,GAErBzB,oBAAqB,CACjBpxJ,QAAS,CAAC,KACV03F,aAAc,yBACdm7D,iBAAiB,GAErBt/G,IAAK,CACDvzC,QAAS,CAAC,IAAK,MAAO,SACtB03F,aAAc,SACdm7D,iBAAiB,GAErBlC,kBAAmB,CACf3wJ,QAAS,CAAC,OACV03F,aAAc,uBACdm7D,iBAAiB,GAErB16D,QAAS,CACLn4F,QAAS,CAAC,KAAM,IAAK,UAAW,IAAK,QACrC03F,aAAc,aACdm7D,iBAAiB,GAErB3/F,KAAM,CACFlzD,QAAS,CAAC,QACV03F,aAAc,UACdm7D,iBAAiB,GAErB54B,IAAK,CACDj6H,QAAS,CAAC,IAAK,IAAK,OACpB03F,aAAc,SACdm7D,iBAAiB,GAErBvB,KAAM,CACFtxJ,QAAS,CAAC,QACV03F,aAAc,UACdm7D,iBAAiB,GAErBrB,cAAe,CACXxxJ,QAAS,CAAC,KACV03F,aAAc,mBACdm7D,iBAAiB,GAErBrC,MAAO,CACHxwJ,QAAS,CAAC,SACV03F,aAAc,GACdm7D,iBAAiB,GAErBxlD,KAAM,CACFrtG,QAAS,CAAC,QACV03F,aAAc,GACdm7D,iBAAiB,GAErBpB,QAAS,CACLzxJ,QAAS,CAAC,UAAW,MACrB03F,aAAc,aACdm7D,iBAAiB,GAErBnB,MAAO,CACH1xJ,QAAS,CAAC,SACV03F,aAAc,WACdm7D,iBAAiB,GAErBjC,YAAa,CACT5wJ,QAAS,CAAC,MACV03F,aAAc,iBACdm7D,iBAAiB,GAErBhC,oBAAqB,CACjB7wJ,QAAS,CAAC,OACV03F,aAAc,yBACdm7D,iBAAiB,GAErB9B,mBAAoB,CAChB/wJ,QAAS,CAAC,OACV03F,aAAc,wBACdm7D,iBAAiB,GAErB5B,iBAAkB,CACdjxJ,QAAS,CAAC,OACV03F,aAAc,sBACdm7D,iBAAiB,GAErB/B,WAAY,CACR9wJ,QAAS,CAAC,MACV03F,aAAc,gBACdm7D,iBAAiB,GAErB7B,qBAAsB,CAClBhxJ,QAAS,CAAC,MACV03F,aAAc,0BACdm7D,iBAAiB,GAErB93D,SAAU,CACN/6F,QAAS,CAAC,MACV03F,aAAc,cACdm7D,iBAAiB,GAErBrV,IAAK,CACDx9I,QAAS,CAAC,OACV03F,aAAc,SACdm7D,iBAAiB,GAErBnvG,MAAO,CACH1jD,QAAS,CAAC,IAAK,IAAK,OAAQ,KAAM,SAClC03F,aAAc,WACdm7D,iBAAiB,GAErBp1D,OAAQ,CACJz9F,QAAS,CAAC,KAAM,UAChB03F,aAAc,YACdm7D,iBAAiB,GAErB3U,KAAM,CACFl+I,QAAS,CAAC,QACV03F,aAAc,UACdm7D,iBAAiB,GAErBx1D,QAAS,CACLr9F,QAAS,CAAC,IAAK,MAAO,KAAM,WAC5B03F,aAAc,aACdm7D,iBAAiB,GAErBlB,KAAM,CACF3xJ,QAAS,CAAC,OAAQ,IAAK,QACvB03F,aAAc,UACdm7D,iBAAiB,GAErBN,SAAU,CACNvyJ,QAAS,CAAC,WAAY,MACtB03F,aAAc,GACdm7D,iBAAiB,GAErBpC,SAAU,CACNzwJ,QAAS,CAAC,YACV03F,aAAc,GACdm7D,iBAAiB,uEASD,CAAC,WAAY,gKCpOrC,IAAAC,UAAA/0E,uBAAAvxF,QAAA,mBACAo9G,UAAA7rB,uBAAAvxF,QAAA,mBACAg+H,WAAAzsC,uBAAAvxF,QAAA,oBACAspG,MAAA/X,uBAAAvxF,QAAA,eACAumK,OAAAh1E,uBAAAvxF,QAAA,gBACAwmK,sBAAAj1E,uBAAAvxF,QAAA,4CACA2pG,oBAAA3pG,QAAA,yCAIAw8F,gBAAAx8F,QAAA,kCACAymK,eAAAl1E,uBAAAvxF,QAAA,8nBASA,IAwCqB0mK,yBAMjB,SAAAA,gBAAqC,IAAzBC,mBAAyB,EAAAt+J,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAJ,GAC7B,iIADiCiqF,CAAA9uF,KAAAkjK,iBAC5B,EAAA1oC,WAAA,SAAU2oC,oBAGX,MAAM,IAAIjxI,UAAJ,0EAAA1gB,OAAAiiG,QAA+F0vD,sBAczGnjK,KAAK0hG,QAAU,GAUf1hG,KAAKq5F,SAAW,GAWhBr5F,KAAK2/J,YAAc,GAEnB3/J,KAAKojK,wBAAwBD,mBAAmB52I,kIAQhD,OAAO,IAAI02I,eAAA,QAAcjjK,KAAK0hG,QAAS1hG,KAAK2/J,YAAa3/J,KAAKq5F,0DAa1C8pE,oBACpB,IACME,+BAAiCF,mBAAmB1rJ,MA9GnC,KA8GiEm1B,OAAO,SAACzwC,GAAD,OAAOA,IAChGmnK,4BAA8BD,+BAFL,GAIzBE,oBAAqB,EAAAR,OAAA,SAAMM,gCAE7BrjK,KAAKwjK,iBAAiBF,6BACtBtjK,KAAKyjK,yBAAyBJ,gCAKlCrjK,KAAK0jK,oCAAoCJ,4BAA6BC,qEAUjDA,oBACrB,IAEMI,aAAc,EAAAx9D,oBAAAy9D,0BAAyBL,mBAFxB,IAGfM,YAAcN,mBAFH,GAGXO,qBAAuB,IAAId,sBAAA,QAAqBW,kBAI3B,IAAhBE,aACPC,qBAAqBv8J,KAAK/D,KAAKqgK,aAGnC7jK,KAAK0hG,QAAUiiE,YACf3jK,KAAK2/J,YAAYn8J,KAAKsgK,sBAEtB9jK,KAAK+jK,gGAQ2BT,4BAA6BC,oBAC7DvjK,KAAK0hG,QAAU1I,gBAAA2I,oBAAoBC,SACnC5hG,KAAKq5F,SAAWiqE,4BAChBtjK,KAAK2/J,YAAc3/J,KAAKgkK,kBAAkBT,oBAE1CvjK,KAAK+jK,8EAsBSR,oBAId,IAHA,IACIO,qBADEnE,YAAc,GAGXtjK,EAAI,EAAGA,EAAIknK,mBAAmBvmK,OAAQX,IAAK,CAChD,IAAM4nK,aAAeV,mBAAmBlnK,GAClCsnK,aAAc,EAAAx9D,oBAAAy9D,0BAAyBK,cAE7C,QAAoC,IAAzBH,qBAAsC,CAC7C,QAA2B,IAAhBH,YACP,SAGJG,qBAAuB,IAAId,sBAAA,QAAqBW,iBAC7C,CACH,QAA2B,IAAhBA,YAA6B,CACpCG,qBAAqBv8J,KAAK/D,KAAKygK,cAE/B,SAGJtE,YAAYn8J,KAAKsgK,sBAEjBA,qBAAuB,IAAId,sBAAA,QAAqBW,cAOxD,OAFAhE,YAAYn8J,KAAKsgK,uBAEV,EAAAhB,UAAA,SAASnD,yEAWhB,IAAMuE,iBAAmBlkK,KAAKmkK,4BAEA,EAA1BD,iBAAiBlnK,SACjB,EAAA48G,UAAA,SAASsqD,iBAAkB,SAACnsJ,OACxB,MAAMA,4DAcd,IAAMqsJ,sBAAuB,EAAAt+D,MAAA,SAAK9lG,KAAK2/J,YAAa,SAACj+D,SACjD,QAAuB,IAAZA,QACP,OAAO,KAGX,IAAM2iE,aAAe3iE,QAAQ4iE,eAE7B,GAAID,aAGA,OAAOA,aAGX3iE,QAAQ6iE,cAGZ,OAAO,EAAAzB,UAAA,SAASsB,+DAaHd,6BACb,IAAMK,aAAc,EAAAx9D,oBAAAy9D,0BAAyBN,6BAE7C,YAA2B,IAAhBK,aAIJx9D,oBAAAwB,qBAAqBg8D,aAAad,8wBCzSjD,QAAAppD,iBAAAj9G,QAAA,uDACA0jK,oBAAA1jK,QAAA,wBACAu8F,iBAAAv8F,QAAA,mCACA6pG,gBAAA7pG,QAAA,kCAeA,IAAMgoK,sCACc,gBADdA,kCAEU,YAFVA,gCAGQ,UAHRA,8BAIM,2BAUa,SAACj9J,MAAD,MAAU,CAAC,KAAMA,KAAK,4BASjB,SAACA,MAM3B,MAAO,EALU,EAAA8+F,gBAAA20C,oBAAmBzzI,KAAK,SAGC,IAAZA,KAAK,oCAYD,SAACA,MACnC,OAAuB,IAAhBA,KAAKvK,OAAe,EAAC,EAAAqpG,gBAAA20C,oBAAmBzzI,KAAK,KAAO,IAaxD,IAAMk9J,oBAAsB,SAACv8D,WAChC,IAAIw8D,oBAAsBx8D,UAQ1B,MANkB,MAAdA,UACAw8D,oBAAsB,OACD,MAAdx8D,YACPw8D,oBAAsB,SAGnBA,2FAYkB,SAACn9J,MAC1B,IAEIo9J,eAAgB,EAEpB,OAAQp9J,KAAKvK,QACT,KAAK,EAKD,MAAO,CAHK,MACF,EAAAqpG,gBAAAg6D,uBAAsB94J,KAAK,IAETo9J,eAChC,KAAK,EAKD,OAJAA,cAAmC,IAAnBp9J,KAAK,GAAGvK,QAAmC,IAAnBuK,KAAK,GAAGvK,OAIzC,CAHKynK,oBAAoBl9J,KAAK,KAC3B,EAAA8+F,gBAAAg6D,uBAAsB94J,KAAK,IAETo9J,eAChC,QACI,MAAM,IAAIhoK,MAAM,oDAarB,IAAMioK,eAAiB,SAACx/H,KAAD,OAAS2zD,iBAAAkkC,MAAM4nC,cAAc/iK,KAAKsjC,4CAkBzD,IAAM0/H,sBAAwB,SAACrjK,KAAM8F,MACxC,IAAK,IAAIlL,EAAI,EAAGA,EAAIkL,KAAKvK,OAAQX,IAAK,CAClC,IAAM+oC,IAAM79B,KAAKlL,GAEjB,OAAQoF,MACJ,KAAK+iK,sCACD,KAAK,EAAAtE,oBAAA6E,wBAAuB3/H,KACxB,SAIJ,OAAOq/H,oBAAoBr/H,KAC/B,KAAKo/H,kCACD,IAAKI,eAAex/H,KAChB,SAGJ,OAAOA,IACX,KAAKo/H,gCACD,IAAI,EAAAtE,oBAAA6E,wBAAuB3/H,MAAQw/H,eAAex/H,KAC9C,SAGJ,OAAOA,IACX,KAAKo/H,8BACD,KAAK,EAAAtE,oBAAA8E,qBAAoB5/H,KACrB,SAGJ,OAAO,EAAAihE,gBAAAg6D,uBAAsBj7H,KACjC,QACI,OAAO,MAInB,OAAO,6EAce,SAAC79B,MAEvB,IAAM4hG,QAAU27D,sBAAsBN,gCAAiCj9J,MAcvE,MAAO,EAbe,EAAAkyG,YAAA,SAClBqrD,sBAAsBN,sCAAuCj9J,MAC7D,OAEc,EAAAkyG,YAAA,SACdqrD,sBAAsBN,kCAAmCj9J,MACzD,MAO8B4hG,SALnB,EAAAsQ,YAAA,SACXqrD,sBAAsBN,8BAA+Bj9J,MACrD,+BAcsB,WAAe,IAAdA,KAAc,EAAA1C,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAP,GAGlC,OAAoB,IAAhB0C,KAAKvK,OACE,CAHkB,GAQtB,EACH,EAAAqpG,gBAAAg6D,uBAAsB94J,KAAK,6BAWL,WAO1B,IAPyC,IAGrCohG,SACAj1C,MAJuBnsD,KAAc,EAAA1C,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAP,GAC5B0+C,IAAMh8C,KAAK,GAMRlL,EAAI,EAAGA,EAAIkL,KAAKvK,OAAQX,IACI,MAA7BkL,KAAKlL,GAAG,GAAGkwB,cACXo8E,UAAW,EAAAtC,gBAAA20C,oBAAmBzzI,KAAKlL,GAAGyE,WACjC8kB,OAAO,IACwB,MAA7Bre,KAAKlL,GAAG,GAAGkwB,gBAClBmnC,OAAQ,EAAA2yC,gBAAAg6D,uBAAsB94J,KAAKlL,GAAGyE,WACjC8kB,OAAO,KAIpB,MAAO,CAAC29B,IAAKolD,SAAUj1C,0tBChQ3B,IAAAuxG,QAAAl3E,uBAAAvxF,QAAA,iBACAg+H,WAAAzsC,uBAAAvxF,QAAA,oBACAo9G,UAAA7rB,uBAAAvxF,QAAA,mBACA6pG,gBAAA7pG,QAAA,kCACA2pG,oBAAA3pG,QAAA,yCACA0oK,gBAAA1oK,QAAA,oBACAu8F,iBAAAv8F,QAAA,omBAYsC,WAClC,GAAoB,KAD6B,EAAAqI,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAP,IACjC7H,OACL,OAAOkoK,gBAAAC,cAAcC,iDAWU,WACnC,GAAoB,KAD8B,EAAAvgK,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAP,IAClC7H,OACL,OAAOkoK,gBAAAC,cAAcE,mBAWtB,IAAM9D,2BAA6B,WACtC,GAAkB,GADmC,EAAA18J,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAP,IACrC7H,OACL,OAAOkoK,gBAAAC,cAAcG,sFAWtB,IAAMC,0BAA4B,WAAe,IAAdh+J,KAAc,EAAA1C,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAP,GAC7C,GAAI0C,KAAKvK,OAAS,GAAmB,EAAduK,KAAKvK,OACxB,OAAOkoK,gBAAAC,cAAcK,wHAWe,WAAe,IAAdj+J,KAAc,EAAA1C,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAP,GAChD,GAAoB,IAAhB0C,KAAKvK,QAA8B,EAAduK,KAAKvK,OAC1B,OAAOkoK,gBAAAC,cAAcM,8DAWe,WAAe,IAAdl+J,KAAc,EAAA1C,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAP,GAChD,GAAoB,IAAhB0C,KAAKvK,QAAgC,IAAhBuK,KAAKvK,OAC1B,OAAOkoK,gBAAAC,cAAcO,8DAWe,WAAe,IAAdn+J,KAAc,EAAA1C,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAP,GAChD,GAAoB,IAAhB0C,KAAKvK,QAAgC,IAAhBuK,KAAKvK,OAC1B,OAAOkoK,gBAAAC,cAAcQ,yBAkBtB,IAAM9D,kBAAoB,WAAe,IAAdt6J,KAAc,EAAA1C,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAP,GAC/B+gK,eAAiBL,0BAA0Bh+J,MAEjD,GAAIq+J,eACA,OAAOA,eAGX,IAAMC,kBAAmB,EAAAx/D,gBAAAg6D,uBAAsB94J,KAAK,IAEpD,OAAI,EAAA09J,QAAA,SAAOY,kBACAX,gBAAAC,cAAcW,wBAGL,IAAhBv+J,KAAKvK,QAAgBmpG,oBAAA4/D,SAASv5J,QAAQjF,KAAK,MAAQwxF,iBAAA4f,cAC5CusD,gBAAAC,cAAca,2BADzB,iFAiBqC,WAAe,IAAdz+J,KAAc,EAAA1C,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAP,GACvC+gK,eAAiBrE,2BAA2Bh6J,MAElD,OAAIq+J,iBAIgB,IAAhBr+J,KAAKvK,OACE6kK,kBAAkBt6J,WAD7B,yBAYwB,WAAe,IACnC0+J,aADqB1+J,KAAc,EAAA1C,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAP,GAGhC,OAAI0C,KAAKvK,OAAS,EACPkoK,gBAAAC,cAAce,yBAGzB,EAAAtsD,UAAA,SAASryG,KAAM,SAAC69B,MACP,EAAAo1F,WAAA,SAAUp1F,MAAS6gI,eACpBA,aAAef,gBAAAC,cAAcgB,kBAIjCF,mBAAJ,IAaG,IAAMjB,oBAAsB,SAACx/J,OAEhC,IAAKuzF,iBAAAkkC,MAAMmpC,mBAAmBtkK,KAAK0D,OAC/B,OAAO,EAGX,IAAMogH,QAAS,EAAAvf,gBAAAg6D,uBAAsB76J,OAErC,OAAiB,GAAVogH,QAAeA,QAAU,qDAU7B,IAAMm/C,uBAAyB,SAACv/J,OACnC,MAAiB,SAAVA,OACO,MAAVA,OACU,UAAVA,OACU,MAAVA,sFAmBwB,WAAe,IAGvCqgK,iBAHyBt+J,KAAc,EAAA1C,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAP,GAC5B7H,OAAWuK,KAAXvK,OACF4oK,eAAiBL,0BAA0Bh+J,MAGjD,GAAIq+J,eACA,OAAOA,eAGX,OAAQ5oK,QACJ,KAAK,EACD,IAAKgoK,oBAAoBz9J,KAAK,IAC1B,OAAO29J,gBAAAC,cAAckB,6BAGzB,MACJ,KAAK,EAGD,GAFAR,kBAAmB,EAAAx/D,gBAAAg6D,uBAAsB94J,KAAK,KAEzCw9J,uBAAuBx9J,KAAK,IAC7B,OAAO29J,gBAAAC,cAAcmB,yBAGzB,GAAuB,IAAnB/+J,KAAK,GAAGvK,SAAiBgoK,oBAAoBz9J,KAAK,IAClD,OAAO29J,gBAAAC,cAAckB,6BAGzB,IAAI,EAAApB,QAAA,SAAOY,kBACP,OAAOX,gBAAAC,cAAcoB,uBAGzB,GAAIV,iBAAmB,EACnB,OAAOX,gBAAAC,cAAcqB,qCAGzB,MAGJ,QACI,MAAM,IAAI7pK,MAAM,0EAqBC,WAAe,IAAd4K,KAAc,EAAA1C,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAP,GACjC,GAAkB,EAAd0C,KAAKvK,OACL,OAAOkoK,gBAAAC,cAAcsB,wBAGzB,IAAK,IAAIpqK,EAAI,EAAGA,EAAIkL,KAAKvK,OAAQX,IAC7B,KAAK,EAAAm+H,WAAA,SAAUjzH,KAAKlL,IAChB,OAAO6oK,gBAAAC,cAAcgB,wCAYF,WAAe,IAAd5+J,KAAc,EAAA1C,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAP,GACnC,OAAoB,IAAhB0C,KAAKvK,OACEkoK,gBAAAC,cAAcE,kBAGpBtsE,iBAAAkkC,MAAMypC,iBAAiB5kK,KAAKyF,KAAK,SAAtC,EACW29J,gBAAAC,cAAcwB,0CAgBI,WAAe,IAAdp/J,KAAc,EAAA1C,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAP,GACrC,GAAoB,IAAhB0C,KAAKvK,QAAgC,IAAhBuK,KAAKvK,OAC1B,OAAOkoK,gBAAAC,cAAcQ,wBASzB,IAX4C,IAOxCh9D,SACAj1C,MAHGy1C,QALqChN,eAK1B50F,KAL0B,GAAA,GAWnClL,EAAI,EAAGA,EAAIkL,KAAKvK,OAAQX,IACH,iBAAfkL,KAAKlL,GAAG,KACkB,MAA7BkL,KAAKlL,GAAG,GAAGkwB,cACXo8E,SAAWphG,KAAKlL,GAAGyE,WAAW8kB,OAAO,GACD,MAA7Bre,KAAKlL,GAAG,GAAGkwB,gBAClBmnC,MAAQnsD,KAAKlL,GAAGyE,WAAW8kB,OAAO,KAK9C,KAAK,EAAA40G,WAAA,SAAUrxB,SACX,OAAO+7D,gBAAAC,cAAcgB,eAGzB,GAAIx9D,WACAA,UAAW,EAAAtC,gBAAAg6D,uBAAsB13D,WAE7B,EAAAs8D,QAAA,SAAOt8D,WACP,OAAOu8D,gBAAAC,cAAcW,wBAI7B,GAAIpyG,QACAA,OAAQ,EAAA2yC,gBAAAg6D,uBAAsB3sG,QAE1B,EAAAuxG,QAAA,SAAOvxG,QACP,OAAOwxG,gBAAAC,cAAcyB,qBAI7B,GAAoB,IAAhBr/J,KAAKvK,OAAc,CACnB,GAAgB,MAAZ2rG,SACA,OAAOu8D,gBAAAC,cAAcW,wBAClB,GAAa,MAATpyG,MACP,OAAOwxG,gBAAAC,cAAcyB,8WCpXjC,IAAMC,YAAc,mBAOdC,mBAAkB,GAAAt1J,OAAMq1J,YAAN,WASX1B,cAAgB,CACzBC,gBAAe,GAAA5zJ,OAAKs1J,mBAAL,qCACfzB,kBAAiB,GAAA7zJ,OAAKs1J,mBAAL,mCACjBC,eAAc,GAAAv1J,OAAKs1J,mBAAL,oCACdE,iBAAgB,GAAAx1J,OAAKs1J,mBAAL,sCAChBxB,uBAAsB,GAAA9zJ,OAAKs1J,mBAAL,mCACtBG,yBAAwB,GAAAz1J,OAAKs1J,mBAAL,sCACxBL,wBAAuB,GAAAj1J,OAAKs1J,mBAAL,qCACvBZ,uBAAsB,GAAA10J,OAAKs1J,mBAAL,oCACtBtB,sBAAqB,GAAAh0J,OAAKs1J,mBAAL,mCACrBrB,wBAAuB,GAAAj0J,OAAKs1J,mBAAL,2CACvBpB,wBAAuB,GAAAl0J,OAAKs1J,mBAAL,qCACvBnB,wBAAuB,GAAAn0J,OAAKs1J,mBAAL,qCACvBd,sBAAqB,GAAAx0J,OAAKq1J,YAAL,mEACrBf,wBAAuB,GAAAt0J,OAAKq1J,YAAL,+BACvBD,qBAAoB,GAAAp1J,OAAKq1J,YAAL,4BACpBN,uBAAsB,GAAA/0J,OAAKq1J,YAAL,8BACtBR,6BAA4B,GAAA70J,OAAKq1J,YAAL,yCAC5BL,qCAAoC,GAAAh1J,OAAKq1J,YAAL,0CACpCV,eAAc,GAAA30J,OAAKq1J,YAAL,sBACdP,yBAAwB,GAAA90J,OAAKq1J,YAAL,8FACxBK,qCAAoC,GAAA11J,OAAKq1J,YAAL,kFACpCF,eAAc,GAAAn1J,OAAKq1J,YAAL,iOC5ClB,IAAAvsC,QAAAvsC,uBAAAvxF,QAAA,iBACA47F,MAAArK,uBAAAvxF,QAAA,eACA2qK,OAAAp5E,uBAAAvxF,QAAA,gBACAk1G,UAAA3jB,uBAAAvxF,QAAA,mBACA4qK,SAAAr5E,uBAAAvxF,QAAA,kBACA6qK,iBAAA7qK,QAAA,qBAKA8qK,gBAAA9qK,QAAA,wYAGA,IAAM+qK,qBAAuB,CAAC,KAAM,KAAM,KAAM,MAQ3BC,6BAMjB,SAAAA,kBAAY9lE,wIAAS5S,CAAA9uF,KAAAwnK,mBASjBxnK,KAAKynK,kBAAoB,GASzBznK,KAAK0nK,iBAAmB,GASxB1nK,KAAK2nK,gBAAkB,GAEvB3nK,KAAK00F,MAAMgN,8HAUTA,SACF,IAAMkmE,QAAS,EAAAl2D,UAAA,SAAShQ,QAAQnmD,cAAc9jC,MAAM,KAAM,IAE1DzX,KAAKynK,mBAAoB,EAAAN,OAAA,SAAMS,QAC/B5nK,KAAK2nK,gBAAkB3nK,KAAK6nK,wBAAwBD,QACpD5nK,KAAK0nK,iBAAmB1nK,KAAK8nK,yBAAyBF,yDAWjClmE,SACrB,OAAiE,KAA7D,EAAA0lE,SAAA,SAAQC,iBAAAU,kBAAkBv7J,QAAQxM,KAAK2nK,kBAChC,EAAAj2D,UAAA,SAAShQ,QAAS1hG,KAAKynK,mBAG3B/lE,QAAQlvF,OAAO,EAAGkvF,QAAQ1kG,OAAS,mDAWtB0kG,SACpB,IAAMsmE,cAAe,EAAA1tC,QAAA,SAAO54B,SAE5B,OAAI,EAAAtJ,MAAA,SAAKivE,iBAAAY,kBAAmBD,cACjBX,iBAAAY,kBAAkBD,eAGuB,IAAhDT,qBAAqB/6J,QAAQw7J,cACtBX,iBAAAa,kBAAkBC,iBAGR,MAAjBH,aACOX,iBAAAa,kBAAkBE,YAGwC,IAAjEJ,aAAax7J,QAAQ86J,gBAAAe,wCAAiDL,aAAahrK,OAAS,EACrFqqK,iBAAAa,kBAAkBI,gBAGN,IAAnB5mE,QAAQ1kG,OACDqqK,iBAAAa,kBAAkBK,eAGtBlB,iBAAAa,kBAAkBE,qrBCnH1B,IAAMH,kBAAoB,CAC7BO,GAAI,qBACJC,KAAM,UACNC,GAAI,QACJC,GAAI,6DAUD,IAAMZ,iBAAmB,CAC5BQ,eAAgB,gBAChBJ,iBAAkB,kBAClBG,gBAAiB,gBACjBF,WAAY,iBAQHF,4aAAiB5H,CAAA,6CAEvB2H,sVC7BwB,CAC3BvwD,QAAS,UACT4D,UAAW,YACXC,WAAY,mCAUY,CASxB7Q,MAAO,QASPC,KAAM,OAQNkM,QAAS,UAST7P,QAAS,UAUT2b,MAAO,QAUPC,OAAQ,SAUR7W,KAAM,OAUNsS,QAAS,UAUTG,SAAU,WAWVqE,QAAS,+BAUc,CASvBiK,0CAA2C,IAU3CpN,gEAAiE,IAUjEmI,uCAAwC,EAUxCF,qCAAsC,GAWtCd,8DAA+D,SAW/Dk4B,wDAAyD,SAUzDr2B,oDAAqD,SAUrDiyB,6CAA8C,IAY9CvwB,6BAA8B,GAS9B/G,sBAAuB,IASvB+C,UAAW,YASX7G,uBAAwB,GASxBkN,qBAAsB,GAStBm8C,0BAA2B,0BAUL,CAStBr3D,OAAQ,OASRpB,oBAAqB,MASrBT,YAAa,sCAUuB,CACpCm5D,MAAO,CACHp4C,OAAQ,IACRC,QAAQ,EACRW,OAAQ,IAEZy3C,OAAQ,CACJr4C,OAAQ,IACRC,QAAQ,EACRW,OAAQ,IAEZV,MAAO,CACHF,OAAQ,IACRC,QAAQ,EACRW,OAAQ,SAEZT,MAAO,CACHH,OAAQ,IACRC,QAAQ,EACRW,OAAQ,8BAWW,CACvB03C,SAAU,IACVrrD,IAAK,IACLsrD,OAAQ,IACRC,OAAQ,IACRC,UAAW,sTCjV6B,oCAQL,+CASS,4CASD,iPC5Bd,CAO7BC,2BAA4B,IAQ5BC,2BAA4B,IAQ5BC,iCAAkC,IAUlCppD,+BAAgC,EAUhC6C,yBAA0B,IAQ1BwmD,wBAAyB,IAEzBv4C,wBAAyB,CACrBG,KAAM,IACNC,KAAM,KACNH,KAAM,4CAW+B,CASzCxS,SAAU,MAUVlD,UAAW,MAUXiuD,MAAO,oCAUyB,wWC1GK,CACrC3nE,SAAU,WACV4nE,OAAQ,UAQL,IAAMC,mBAAqB,CAC9BC,SAAU,CACNC,WAAY,mCACZC,QAAS,gCACTC,UAAW,mCAEfC,OAAQ,CACJC,QAAS,8BACTC,MAAO,4EASR,IAAMC,4BAA8Br/I,OAAOrW,OAAOk1J,mBAAmBC,iHAO9B,CAC1ClvE,QAAS,kBACT0vE,MAAO,wDAQiC,CACxCH,QAAS,UACTI,UAAW,YACXH,MAAO,qCAQwB,CAC/BI,WAAY,MACZC,YAAa,QACbC,UAAW,OACXC,UAAW,yPC1DY,CAUvB7hB,OAAQ,SAWRC,QAAS,oCAOmB,sDAMG,CAC/Bpb,OAAQ,IACR2oB,MAAO,IACPwH,qBAAsB,kBAOL,CAEjBO,cAAe,GACfhB,QAAS,EACTC,IAAK,EACLC,IAAK,iBAOU,CACfL,EAAG,EACHC,EAAG,iKC3DoB,CAOvB9jB,4BAA6B,KAc7BhsB,mCAAoC,gLCfnB,CAQjB7Y,aAAc,eAOdrf,eAAgB,iBAOhBy1E,yBAA0B,2BAW1B/uE,kBAAmB,oBAYnBvE,oBAAqB,sBAOrBuzE,0BAA2B,4BAW3B3iB,aAAc,eAYd72D,kBAAmB,oBASnBy5E,oBAAqB,sBASrBC,oBAAqB,sBAWrBj9D,gBAAiB,kBASjBY,yBAA0B,2BAS1BkF,gCAAiC,kCAUjCvV,mBAAoB,qBAUpB1E,gBAAiB,kBASjBgC,YAAa,cASb+Y,mBAAoB,qBASpBg0C,UAAW,YASXsiB,gBAAiB,kBASjB51E,cAAe,gBAOfurD,qBAAsB,uBAOtByH,gBAAiB,kBAOjB6W,iBAAkB,mBAOlB5W,cAAe,gBASf4iB,aAAc,eAOd1zE,wBAAyB,0BAOzB+wD,eAAgB,iBAOhBC,gBAAiB,kBAOjB5wD,eAAgB,iBAOhBuzE,eAAgB,iBAShBC,gBAAiB,kBAOjB3iB,iBAAkB,mBAOlBC,mBAAoB,qBAUpB2iB,QAAS,UAOTtzB,YAAa,cASbqQ,cAAe,wCAGW,CAQ1B/gD,QAAS,UASTwX,SAAU,WASVkF,eAAgB,iBAShBb,QAAS,UASTxJ,SAAU,WASVmV,cAAe,4LCvXnB,IAAAjgC,YAAA/xF,QAAA,gBACAw8F,gBAAAx8F,QAAA,oBAUa2kG,kBAAoB,CAC7BC,eAAgB,gBAChB6pE,kBAAmB,kBACnBC,qBAAsB,qBACtBC,4BAA6B,2BAC7BC,kBAAmB,kBACnB9lE,iBAAkB,iBAClB+lE,6BAA8B,aAC9B7S,YAAa,aACb8S,aAAc,cACdrlB,MAAO,QACP3vC,iBAAkB,mBAYTi1D,mBAAqB,CAC9B,CACI5qK,mDAAwBslJ,MACxBzxG,aAAc,UACdg3H,YAAa,cACb/pK,KAAM,SACNgqK,qBAAsBl9E,YAAAyC,MAAMs3D,UAC5BojB,WAAY,CACR,CACIC,aAAc,UACdnmK,MAAO,WAEX,CACImmK,aAAc,UACdnmK,MAAO,WAEX,CACImmK,aAAc,YACdnmK,MAAO,eAInB,CACI7E,KAAMwgG,kBAAkBmV,iBACxB9hE,aAAc,SACdg3H,YAAa,+BACb/pK,KAAM,SACNgqK,qBAAsB,KACtBC,WAAY,CACR,CACIC,aAAc,oBACdnmK,MAAO,UAEX,CACImmK,aAAc,kBACdnmK,MAAO,UAInB,CACI7E,KAAMwgG,kBAAkBC,eACxB5sD,aAAc,UACdg3H,YAAa,iBACb/pK,KAAM,SACNgqK,qBAAsB,KACtBC,WAAY,CACR,CACIC,aAAc,UACdnmK,MAAO,WAEX,CACImmK,aAAc,aACdnmK,MAAO,YAInB,CACI7E,KAAMwgG,kBAAkBgqE,4BACxB32H,aAAc,aACdg3H,YAAa,4CACbI,KAAM,gGACNnqK,KAAM,SACNgqK,qBAAsB,KACtBC,WAAY,CACR,CACIC,aAAc,aACdnmK,MAAO,cAEX,CACImmK,aAAc,MACdnmK,MAAO,OAEX,CACImmK,aAAc,KACdnmK,MAAO,QAInB,CACI7E,KAAMwgG,kBAAkBkqE,6BACxB72H,aAAc,UACdg3H,YAAa,oDACb/pK,KAAM,SACNgqK,qBAAsB,KACtBC,WAAY,CACR,CACIC,aAAc,gBACdnmK,MAAO,mDAEX,CACImmK,aAAc,gBACdnmK,MAAO,mBAEX,CACImmK,aAAc,wBACdnmK,MAAO,yBAEX,CACImmK,aAAc,cACdnmK,MAAO,eAEX,CACImmK,aAAc,UACdnmK,MAAO,aAInB,CACI7E,KAAMwgG,kBAAkB+pE,qBACxB12H,aAAc,WACdg3H,YAAa,+BACb/pK,KAAM,SACNgqK,qBAAsB,KACtBC,WAAY,CACR,CACIC,aAAc,SACdnmK,MAAO,UAEX,CACImmK,aAAc,WACdnmK,MAAO,YAEX,CACImmK,aAAc,QACdnmK,MAAO,WAInB,CACI7E,KAAMwgG,kBAAkBmqE,aACxB92H,aAAc,MACdg3H,YAAa,6BACbI,KAAM,6JACNnqK,KAAM,SACNgqK,qBAAsB,KACtBC,WAAY,CACR,CACIC,aAAc,MACdnmK,MAAO,OAEX,CACImmK,aAAc,KACdnmK,MAAO,QAInB,CACI7E,KAAMwgG,kBAAkBmE,iBACxB9wD,aAAc,QACdg3H,YAAa,iBACbI,KAAM,sEACNnqK,KAAM,SACNgqK,qBAAsB,KACtBC,WAAY,CACR,CACIC,aAAc,aACdnmK,MAAO,QAEX,CACImmK,aAAc,cACdnmK,MAAO,WAInB,CACI7E,KAAMwgG,kBAAkBq3D,YACxBhkH,aAAc,UACdg3H,YAAa,cACbI,KAAM,2CACNnqK,KAAM,SACNgqK,qBAAsBl9E,YAAAyC,MAAMq3D,mBAC5BqjB,WAAY,CACR,CACIC,aAAc,UACdnmK,MAAO,WAEX,CACImmK,aAAc,MACdnmK,MAAO,OAEX,CACImmK,aAAc,OACdnmK,MAAO,GAEX,CACImmK,aAAc,OACdnmK,MAAO,GAEX,CACImmK,aAAc,OACdnmK,MAAO,GAEX,CACImmK,aAAc,QACdnmK,MAAO,IAEX,CACImmK,aAAc,QACdnmK,MAAO,IAEX,CACImmK,aAAc,QACdnmK,MAAO,MAInB,CACI7E,KAAMwgG,kBAAkBiqE,kBACxB52H,aAAc,IACdg3H,YAAa,qBACbI,KAAM,uEACNnqK,KAAM,SACNgqK,qBAAsBl9E,YAAAyC,MAAMy5E,0BAC5BiB,WAAY,CACR,CACIC,aAAc,sBACdnmK,MAAOwzF,gBAAA6yE,mBAAmBC,UAE9B,CACIH,aAAc,iCACdnmK,MAAOwzF,gBAAA6yE,mBAAmBE,aAE9B,CACIJ,aAAc,kBACdnmK,MAAOwzF,gBAAA6yE,mBAAmBG,aAItC,CACIrrK,KAAMwgG,kBAAkB8pE,kBACxBz2H,aAAc,IACdg3H,YAAa,oBACbI,KAAM,oEACNnqK,KAAM,SACNgqK,qBAAsBl9E,YAAAyC,MAAMw5E,yBAC5BrsH,KAAM,MACN8tH,kBARJ,SAQsBC,QACd,IAAMC,OAAShhH,WAAW+gH,QAE1B,OAAQ1sJ,OAAO6jD,MAAM8oG,SAAoB,EAATA,sUC1QxB,CAChBltD,oBAAqB,KACrBO,oBAAqB,GACrB4sD,yBAA0B,KAC1Btb,oBAAqB,EAAI,GACzBloC,sBAAuB,GACvByjD,2BAA4B,IAC5B/lD,oBAAqB,EAAI,KACzBgG,sBAAuB,EAAI,GAC3BggD,2BAA4B,IAC5BC,yBAA0B,EAAI,KAC9BC,2BAA4B,EAAI,IAChCC,2BAA4B,oBAUX,CACjBC,qBAAsB,yBACtBnoB,kBAAmB,UACnBrnB,WAAY,QACZ2nC,cAAe,6DACf8H,SAAU,oEACVC,kBAAmB,4BACnBC,GAAI,OACJ1vC,WAAY,MACZipC,mBAAoB,aACpBM,iBAAkB,yBAClBoG,QAAS,mBACT1C,WAAY,iCAUiB,CAS7B2C,gBAAiB,QASjBpqB,gBAAiB,KASjBqqB,wBAAyB,8BAYE,yBASD,8TC7FC,CAC3BzyE,SAAU,WACVyF,MAAO,2BAYc,CAErBxB,aAAc,cACdC,cAAe,eACfwuE,WAAY,YACZC,YAAa,aACbvuE,MAAO,QACPP,OAAQ,SACR+B,IAAK,MACLrB,QAAS,SACTE,UAAW,WAEXQ,aAAc,iBACdC,QAAS,YACTC,aAAc,iBACdH,WAAY,eACZX,UAAW,cAEXM,WAAY,YACZG,SAAU,UACVD,YAAa,aACbE,WAAY,YAEZK,GAAI,KACJE,GAAI,KACJstE,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJvtE,GAAI,KACJwtE,GAAI,KACJC,GAAI,KACJC,IAAK,MACLC,IAAK,MACLC,IAAK,MAEL1tE,UAAW,sCAUiB,CAE5BtB,MAAO,GACPP,OAAQ,GACR+B,IAAK,EACLrB,QAAS,GACTE,UAAW,GAEXQ,aAAc,IACdC,QAAS,IACTC,aAAc,IACdH,WAAY,IAEZL,WAAY,GACZG,SAAU,GACVD,YAAa,GACbE,WAAY,GAEZK,GAAI,IACJE,GAAI,IACJstE,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJvtE,GAAI,IACJwtE,GAAI,IACJC,GAAI,IACJC,IAAK,IACLC,IAAK,IACLC,IAAK,IAEL1tE,UAAW,gCAMmB,CAC9B6rE,SAAU,WACVC,YAAa,eACbC,UAAW,oCAUmB,CAC9B7mE,KAAM,OACNyoE,OAAQ,SACR5oE,MAAO,kCAYqB,CAC5BrH,WAAY,EACZE,aAAc,EACdE,YAAa,+BAUkB,CAC/BsF,MAAO,QACPJ,QAAS,UACTT,KAAM,OACNO,MAAO,QACPN,MAAO,QACPgB,KAAM,OACNd,SAAU,WACVf,SAAU,WACVU,SAAU,0JCpJK,CACfnT,MAAO,EACP0+E,KAAM,EACNC,QAAS,EACTC,MAAO,EACPC,MAAO,6PCH4B,CAAC,EAAG,gCASP,CAMhC/rB,SAAU,EAOVC,UAAW,EAOXC,UAAW,0CAU+B,CAM1CsB,YAAa,EAObD,aAAc,2QCpDoB,sBASd,CAQpBjsB,OAAQ,SASRF,OAAQ,SAWRG,UAAW,yDAUoC,2BAOrB,CAC1B2C,IAAK,MACLC,KAAM,0PCxD2C,oCASd,CACnCz6G,EAAG,IACHC,EAAG,GACHjgB,EAAG,GACHH,EAAG,IACHD,EAAG,IACHtC,EAAG,IACHwC,EAAG,IACHG,EAAG,IACHF,EAAG,8KCzBP,QAAAuuK,iBAAAzxK,QAAA,2NAaO,IAAMokG,WAAa,CACtBswC,OAAQ,SACR32C,SAAU,WACVulD,mBAAoB,uBACpBouB,aAAc,eACdC,kBAAmB,oBACnBC,4BAA6B,iCAC7BC,eAAgB,SAChBC,QAAS,SACTnsD,SAAU,WACVzK,QAAS,UACT62D,SAAU,WACVC,SAAU,WACVzP,oBAAqB,wBACrBC,kBAAmB,eACnByP,kBAAmB,oBACnBptE,mBAAoB,aACpBqtE,QAAS,UACTpzD,UAAW,YACXqzD,YAAa,cACb9tE,OAAQ,SACR+tE,YAAa,cACbC,cAAe,gBACfC,eAAgB,gBAChBC,WAAY,aACZjjE,QAAS,UACTkjE,OAAQ,SACRjjE,KAAM,OACN5G,KAAM,OACNU,aAAc,iBACdopE,aAAc,cACdC,QAAS,UACTC,SAAU,WACVC,KAAM,OACNC,eAAgB,gBAChBj1J,KAAM,OACNk1J,eAAgB,gBAChBC,eAAgB,iBAChBC,uBAAwB,0BACxBC,uBAAwB,0BACxBl0D,WAAY,aACZm0D,OAAQ,SACRC,KAAM,OACN3qE,MAAO,QACPgnD,OAAQ,SACR4jB,QAAS,UACTC,QAAS,UACT3jE,MAAO,QACP+jC,yBAA0B,8BAC1BO,gCAAiC,mCACjCF,8BAA+B,iCAC/BxE,yBAA0B,4BAC1BsE,6BAA8B,iCAC9BJ,oBAAqB,yBACrBE,eAAgB,oBAChBK,gCAAiC,mCACjCvE,2BAA4B,8BAC5BqE,gCAAiC,mCACjCI,uBAAwB,2BACxB/E,qBAAsB,yBACtB+F,uBAAwB,wBACxBf,mBAAoB,wBACpBC,kBAAmB,uBACnBR,uBAAwB,4BACxBjE,mBAAoB,uBACpBN,WAAY,eACZkkC,MAAO,QACPC,eAAgB,iBAChBxvB,qBAAsB,uBACtByH,gBAAiB,kBACjB6W,iBAAkB,qBAClB5W,cAAe,gBACf9wD,wBAAyB,0BACzB0zE,aAAc,eACdxzE,YAAa,cACb24E,cAAe,gBACfC,aAAc,eACd14E,eAAgB,iBAChBuzE,eAAgB,iBAChBC,gBAAiB,kBACjB3iB,iBAAkB,mBAClB8nB,KAAM,OACNC,eAAgB,gDAUb,IAAMC,IAAM,CACfC,cAAe,kBACfxwB,wBAAyB,yBACzBywB,eAAgB,iBAChBC,aAAc,eACdC,mBAAoB,qBACpBC,oBAAqB,sBACrBC,oBAAqB,sBACrBC,sBAAuB,wBACvBp7E,SAAU,WACVq7E,MAAO,QACPp2E,QAAS,UACTq2E,QAAS,UACT3hF,IAAK,MACL4hF,eAAgB,iBAChBpB,OAAQ,SACRqB,eAAgB,iBAChBzuE,SAAU,WACV0uE,qBAAsB,0BACtBC,MAAO,QACPC,UAAW,YACXC,QAAS,2BASb,IA0BM77E,waAAagrE,CAAA,IAzBY,EAAA2N,YAAA,SAAWrtE,WAAY,SAACp7F,OAC/C,MAAA,IAAAgM,OAAWhM,UAYK,EAAAyoK,YAAA,SAAWmC,IAAK,SAAC5qK,OACjC,MAAA,IAAAgM,OAAWhM,UAyBN6vF,UAAY,CACrBuL,WAAAA,WACAwvE,IAAAA,IACA96E,cAAAA,wSC7KkB,CAClB,OACA,SACA,QACA,oBACA,2BACA,8CAQuB,wBAOC,2BAOA,uBAOA,oKCnCD,CACvBnF,iBAAkB,mBAClBovE,iBAAkB,mBAClB6R,mBAAoB,qBACpBC,eAAgB,iBAChBxT,WAAY,kJCVhB,IAAAyT,OAAA90K,QAAA,0BACA+0K,QAAA/0K,QAAA,0BACAg1K,QAAAh1K,QAAA,4BAEaypJ,MAAQ,CACjBwrB,QAASH,OAAAI,cACTzU,QAASsU,QAAAI,cACTC,UAAWJ,QAAAK,+QCFM,CACjBC,gBAAiB,0BACjBC,mBAAoB,0BACpBC,WAAY,0BACZC,kBAAmB,yBACnBC,YAAa,0BACbC,iBAAkB,wBAClBC,oBAAqB,wBACrBC,UAAW,wBACXC,eAAgB,wBAChBC,QAAS,uBACTC,QAAS,sBACTC,YAAa,2BACbC,WAAY,oBACZC,oBAAqB,wBACrBC,YAAa,2BACbC,SAAU,wBACVC,YAAa,qBACbC,WAAY,uBACZC,IAAK,2BACLC,OAAQ,2BACRC,MAAO,2BACPC,SAAU,2BACVC,YAAa,mKC5BjB,IAAAC,OAAA72K,QAAA,YAYa82K,iBAAmB,CAO5BC,oCAAqC,EASrCpc,qBAAsBkc,OAAAra,MAAM8Y,gBAS5Bhb,yBAA0Buc,OAAAra,MAAM8Y,gBAShCxa,qBAAsB+b,OAAAra,MAAM8Y,gBAS5B1a,oBAAqBic,OAAAra,MAAM8Y,gBAS3B9a,wBAAyBqc,OAAAra,MAAM8Y,gBAS/Bva,oBAAqB8b,OAAAra,MAAM8Y,gBAS3Bza,uBAAwBgc,OAAAra,MAAM8Y,gBAS9B5a,2BAA4Bmc,OAAAra,MAAM8Y,gBASlCta,uBAAwB6b,OAAAra,MAAM8Y,gBAS9B7b,UAAU,EAQVI,YAAa,GAQbN,WAAY,GAQZxoB,OAAQ,GASRonB,iBAAkB,IASlBmH,iCAAkC,GASlCD,+BAAgC,GAUhC2X,cAAe,EASfpe,8BAA+B,EAS/BF,8BAA+B,EAQ/Bue,2BAA4B,EAQ5B3gB,UAAW,0BASXyB,cAAe8e,OAAAra,MAAMka,MASrB1e,kBAAmB6e,OAAAra,MAAM0Z,WASzBje,cAAe4e,OAAAra,MAAMka,MAQrBhd,MAAO,6MC/OX,IAAAmd,OAAA72K,QAAA,YAQak3K,mBAAqB,CAS9BC,yBAA0BN,OAAAra,MAAMwZ,QAShC5iB,0BAA2ByjB,OAAAra,MAAMwZ,QAQjCviB,sBAAuB,GAQvBC,eAAgB,EAQhBS,sBAAuB0iB,OAAAra,MAAMka,MAS7BnhB,mBAAoBshB,OAAAra,MAAMga,IAS1BphB,uBAAwByhB,OAAAra,MAAMia,OAS9BphB,qBAAsBwhB,OAAAra,MAAM8Y,gBAS5BhgB,yBAA0BuhB,OAAAra,MAAM+Y,mBAShC3f,mCAAoCihB,OAAAra,MAAMga,IAS1ClkB,aAAcukB,OAAAra,MAAMuZ,QAQpB9hB,UAAW,GAQXC,mBAAoB,GAQpBtB,cAAeikB,OAAAra,MAAMkZ,YAQrB7iB,eAAgBgkB,OAAAra,MAAM+Z,WAQtBpjB,KAAM0jB,OAAAra,MAAMkZ,YASZ0B,uCAAuC,EAQvC7kB,8BAA+BskB,OAAAra,MAAM+Z,kNCjKzC,IAAAM,OAAA72K,QAAA,YAQaq3K,YAAc,CAQvB3b,cAAemb,OAAAra,MAAMoa,YAQrBnb,mBAAoBob,OAAAra,MAAMoa,YAQ1BU,WAAYT,OAAAra,MAAM+a,SASlBlZ,aAAcwY,OAAAra,MAAM6Z,SASpB/X,aAAcuY,OAAAra,MAAM6Z,SAUpBmB,iBAAkBX,OAAAra,MAAMga,IAQxBrmB,SAAU0mB,OAAAra,MAAM6Z,SAQhB9lB,SAAUsmB,OAAAra,MAAM6Z,SAQhBoB,uBAAwB,EAQxBC,mBAAoB,GAQpBthB,mBAAoBygB,OAAAra,MAAMoa,YAQ1B5f,aAAc6f,OAAAra,MAAM4Z,YAQpBzf,aAAckgB,OAAAra,MAAM4Z,YAQpB5a,iBAAkBqb,OAAAra,MAAM8Z,YAQxBnZ,oBAAqB0Z,OAAAra,MAAM8Z,YAQ3B1nB,2BAA4BioB,OAAAra,MAAM6Z,SAQlC1mB,cAAeknB,OAAAra,MAAM6Z,SAQrB7mB,OAAQqnB,OAAAra,MAAMka,MAQd/4C,IAAKk5C,OAAAra,MAAM8Y,gBAQX13C,KAAMi5C,OAAAra,MAAMga,IAQZvmB,aAAc4mB,OAAAra,MAAM0Z,WASpBzY,UAAWoZ,OAAAra,MAAM6Z,0NCvLQ,CAOzB5Z,eAAgB,EAQhBC,aAAc,EAcdF,MAAO,CACH35F,EAAG,eACH80G,IAAM,eACNC,IAAM,eACNC,IAAM,eACNC,IAAM,eACNC,IAAM,eACNC,IAAM,eACNC,IAAM,eACNC,IAAM,eACNC,IAAM,eACNC,IAAO,eACPC,KAAO,eACPC,KAAO,eACPC,KAAO,eACPC,KAAO,eACPC,KAAO,eACPC,KAAO,eACPC,KAAO,eACPC,KAAO,eACPC,KAAO,eACPC,IAAO,eACPC,KAAO,eACPC,KAAO,eACPC,KAAO,eACPC,KAAO,eACPC,KAAO,+JC7Df,IAAAtC,OAAA72K,QAAA,YAQao5K,gBAAkB,CAQ3BC,qBAAsBxC,OAAAra,MAAMka,MAQ5B4C,eAAgBzC,OAAAra,MAAMka,MAQtB6C,kBAAmB1C,OAAAra,MAAMka,MAQzB8C,gBAAiB3C,OAAAra,MAAM2Z,oBAQvBsD,gBAAiB5C,OAAAra,MAAM0Z,gNChD3B,IAAAwD,WAAA15K,QAAA,uBACA25K,aAAA35K,QAAA,yBACA45K,OAAA55K,QAAA,mBACA65K,SAAA75K,QAAA,qBACA85K,UAAA95K,QAAA,sBAOaq1K,gBAAkB,CAC3BtpB,UAAW,yBACXsK,WAAYqjB,WAAA5C,iBACZxkB,aAAcqnB,aAAAzC,mBACd1zE,MAAOo2E,OAAAvC,YACP9a,QAASsd,SAAAE,cACTC,UAAWF,UAAAV,uUCZM,CACjB7B,SAAU,qBACVvB,QAAS,2BACTiE,QAAS,2BACTC,QAAS,2BACTC,QAAS,2BACTC,mBAAoB,2BACpBC,WAAY,2BACZC,KAAM,yBACNC,SAAU,yBACVC,SAAU,yBACVC,SAAU,yBACVvE,WAAY,sBACZwE,qBAAsB,4BACtBC,oBAAqB,2BACrBC,qBAAsB,4BACtB3E,YAAa,yBACb4E,aAAc,uBACdpE,OAAQ,2BACRqE,OAAQ,2BACRC,OAAQ,2BACRC,OAAQ,2BACRC,OAAQ,2BACRC,cAAe,uBACf1E,IAAK,2BACL2E,SAAU,2BACVC,SAAU,2BACVzE,SAAU,2BACV0E,SAAU,2BACVC,SAAU,2BACVC,SAAU,2BACV7E,MAAO,2KCpCX,IAAAG,OAAA72K,QAAA,YAEa82K,iBAAmB,CAC5BC,oCAAqC,EACrCpc,qBAAsBkc,OAAAra,MAAMse,OAC5BxgB,yBAA0Buc,OAAAra,MAAMia,OAChC3b,qBAAsB+b,OAAAra,MAAMye,OAC5BrgB,oBAAqBic,OAAAra,MAAMge,SAC3BhgB,wBAAyBqc,OAAAra,MAAM+d,SAC/Bxf,oBAAqB8b,OAAAra,MAAMie,SAC3B5f,uBAAwBgc,OAAAra,MAAMyd,QAC9Bvf,2BAA4Bmc,OAAAra,MAAMwZ,QAClChb,uBAAwB6b,OAAAra,MAAM2d,QAC9BtgB,YAAa,GACbN,WAAY,GACZE,UAAU,EACV1oB,OAAQ,GACRonB,iBAAkB,IAClBmH,iCAAkC,GAClCD,+BAAgC,GAChC2X,cAAe,EACfpe,6BAA8B,EAC9BF,8BAA+B,EAC/Bue,2BAA4B,EAC5B3gB,UAAW,0BACXyB,cAAe8e,OAAAra,MAAMma,SACrB3e,kBAAmB6e,OAAAra,MAAM2e,SACzBljB,cAAe4e,OAAAra,MAAM+e,SACrB7hB,MAAO,6MC5BX,IAAAmd,OAAA72K,QAAA,YAEak3K,mBAAqB,CAC9BC,yBAA0BN,OAAAra,MAAMka,MAChCtjB,0BAA2ByjB,OAAAra,MAAM6d,WACjC5mB,sBAAuB,GACvBC,eAAgB,GAChBS,sBAAuB0iB,OAAAra,MAAMka,MAC7BnhB,mBAAoBshB,OAAAra,MAAMue,OAC1B3lB,uBAAwByhB,OAAAra,MAAMia,OAC9BphB,qBAAsBwhB,OAAAra,MAAM0d,QAC5B5kB,yBAA0BuhB,OAAAra,MAAMwZ,QAChCpgB,mCAAoCihB,OAAAra,MAAMga,IAC1ClkB,aAAcukB,OAAAra,MAAM6d,WACpBpmB,UAAW,GACXC,mBAAoB,IACpBtB,cAAeikB,OAAAra,MAAM2e,SACrBtoB,eAAgBgkB,OAAAra,MAAMga,IACtBrjB,KAAM0jB,OAAAra,MAAMyZ,YACZmB,uCAAuC,EACvC7kB,8BAA+BskB,OAAAra,MAAMwe,8MCpBzC,IAAAnE,OAAA72K,QAAA,YAEaq3K,YAAc,CACvB3b,cAAemb,OAAAra,MAAMke,qBACrBjf,mBAAoBob,OAAAra,MAAMoe,qBAC1BtD,WAAYT,OAAAra,MAAM0Z,WAClB7X,aAAcwY,OAAAra,MAAM6d,WACpB/b,aAAcuY,OAAAra,MAAMka,MACpBc,iBAAkBX,OAAAra,MAAM8d,KACxBnqB,SAAU0mB,OAAAra,MAAMma,SAChBpmB,SAAUsmB,OAAAra,MAAMma,SAChBc,uBAAwB,EACxBC,mBAAoB,GAQpBthB,mBAAoBygB,OAAAra,MAAMqe,aAQ1B7jB,aAAc6f,OAAAra,MAAMyZ,YAQpBtf,aAAckgB,OAAAra,MAAMka,MAEpBlb,iBAAkBqb,OAAAra,MAAMme,oBACxBxd,oBAAqB0Z,OAAAra,MAAM4d,mBAC3BxrB,2BAA4BioB,OAAAra,MAAMqe,aAClClrB,cAAeknB,OAAAra,MAAM8e,SACrB9rB,OAAQqnB,OAAAra,MAAM4e,SACdz9C,IAAKk5C,OAAAra,MAAM0d,QACXt8C,KAAMi5C,OAAAra,MAAMga,IACZvmB,aAAc4mB,OAAAra,MAAM8e,SACpB7d,UAAWoZ,OAAAra,MAAMyZ,6NC9CQ,CACzBxZ,eAAgB,EAChBC,aAAc,GACdF,MAAO,CACH35F,EAAG,iBACH80G,IAAM,gBACNC,IAAM,gBACNC,IAAM,gBACNC,IAAM,eACNC,IAAM,eACNC,IAAM,+JCVd,IAAAnB,OAAA72K,QAAA,YAEao5K,gBAAkB,CAC3BC,qBAAsBxC,OAAAra,MAAM0e,cAC5B5B,eAAgBzC,OAAAra,MAAM6e,SACtB9B,kBAAmB1C,OAAAra,MAAM6e,SACzB7B,gBAAiB3C,OAAAra,MAAM+a,SACvBkC,gBAAiB5C,OAAAra,MAAM6e,4MCP3B,IAAA3B,WAAA15K,QAAA,uBACA25K,aAAA35K,QAAA,yBACA45K,OAAA55K,QAAA,mBACA65K,SAAA75K,QAAA,qBACA85K,UAAA95K,QAAA,sBAOak1K,cAAgB,CACzBnpB,UAAW,uBACXsK,WAAYqjB,WAAA5C,iBACZxkB,aAAcqnB,aAAAzC,mBACd1zE,MAAOo2E,OAAAvC,YACP9a,QAASsd,SAAAE,cACTC,UAAWF,UAAAV,mUCZM,CACjB9D,gBAAiB,0BACjBC,mBAAoB,0BACpBC,WAAY,0BACZC,kBAAmB,yBACnBC,YAAa,wBACbC,iBAAkB,wBAClBC,oBAAqB,wBACrBC,UAAW,wBACXC,eAAgB,wBAChBG,YAAa,yBACbE,oBAAqB,wBACrBK,IAAK,2BACLC,OAAQ,2BACRC,MAAO,2BACPC,SAAU,2BACV6E,SAAU,uBACVC,OAAQ,yKCtBZ,IAAA5E,OAAA72K,QAAA,YAYa82K,iBAAmB,CAO5BC,oCAAqC,EASrCpc,qBAAsBkc,OAAAra,MAAM8Y,gBAS5Bhb,yBAA0Buc,OAAAra,MAAM8Y,gBAShCxa,qBAAsB+b,OAAAra,MAAM8Y,gBAS5B1a,oBAAqBic,OAAAra,MAAM8Y,gBAS3B9a,wBAAyBqc,OAAAra,MAAM8Y,gBAS/Bva,oBAAqB8b,OAAAra,MAAM8Y,gBAS3Bza,uBAAwBgc,OAAAra,MAAM8Y,gBAS9B5a,2BAA4Bmc,OAAAra,MAAM8Y,gBASlCta,uBAAwB6b,OAAAra,MAAM8Y,gBAS9B7b,UAAU,EAQVI,YAAa,GAQbN,WAAY,GAQZxoB,OAAQ,GASRonB,iBAAkB,IASlBmH,iCAAkC,GASlCD,+BAAgC,GAUhC2X,cAAe,EASfpe,8BAA+B,EAS/BF,8BAA+B,EAQ/Bue,2BAA4B,EAQ5B3gB,UAAW,0BASXyB,cAAe8e,OAAAra,MAAMka,MASrB1e,kBAAmB6e,OAAAra,MAAMka,MASzBze,cAAe4e,OAAAra,MAAMka,MAQrBhd,MAAO,6MC/OX,IAAAmd,OAAA72K,QAAA,YAQak3K,mBAAqB,CAS9BC,yBAA0BN,OAAAra,MAAMma,SAShCtjB,iCAAkCwjB,OAAAra,MAAMgf,SASxCloB,mCAAoCujB,OAAAra,MAAMif,OAS1CroB,0BAA2ByjB,OAAAra,MAAMma,SAQjCljB,sBAAuB,GAQvBC,eAAgB,EAQhBS,sBAAuB0iB,OAAAra,MAAMka,MAS7BnhB,mBAAoBshB,OAAAra,MAAMga,IAS1BphB,uBAAwByhB,OAAAra,MAAMia,OAS9BphB,qBAAsBwhB,OAAAra,MAAM8Y,gBAS5BhgB,yBAA0BuhB,OAAAra,MAAM+Y,mBAShC3f,mCAAoCihB,OAAAra,MAAMga,IAS1ClkB,aAAcukB,OAAAra,MAAMka,MAQpBziB,UAAW,GAQXC,mBAAoB,IAQpBtB,cAAeikB,OAAAra,MAAMqZ,UAQrBhjB,eAAgBgkB,OAAAra,MAAMga,IAQtBrjB,KAAM0jB,OAAAra,MAAMyZ,YASZmB,uCAAuC,EAQvC7kB,8BAA+BskB,OAAAra,MAAMga,2MCnLzC,IAAAK,OAAA72K,QAAA,YAQaq3K,YAAc,CAQvB3b,cAAemb,OAAAra,MAAMoZ,oBAQrBna,mBAAoBob,OAAAra,MAAMqZ,UAQ1ByB,WAAYT,OAAAra,MAAMsZ,eASlBzX,aAAcwY,OAAAra,MAAMmZ,iBASpBrX,aAAcuY,OAAAra,MAAMmZ,iBAUpB6B,iBAAkBX,OAAAra,MAAMga,IAQxBrmB,SAAU0mB,OAAAra,MAAMkZ,YAQhBnlB,SAAUsmB,OAAAra,MAAMkZ,YAQhB+B,uBAAwB,EAQxBC,mBAAoB,GAQpBthB,mBAAoBygB,OAAAra,MAAMmZ,iBAQ1B3e,aAAc6f,OAAAra,MAAM8Y,gBAQpB3e,aAAckgB,OAAAra,MAAMka,MAQpBlb,iBAAkBqb,OAAAra,MAAMqZ,UAQxB1Y,oBAAqB0Z,OAAAra,MAAMiZ,kBAQ3B7mB,2BAA4BioB,OAAAra,MAAMmZ,iBAQlChmB,cAAeknB,OAAAra,MAAMgZ,WAQrBhmB,OAAQqnB,OAAAra,MAAMka,MAQd/4C,IAAKk5C,OAAAra,MAAM8Y,gBAQX13C,KAAMi5C,OAAAra,MAAMga,IAQZvmB,aAAc4mB,OAAAra,MAAMka,MASpBjZ,UAAWoZ,OAAAra,MAAMkZ,6NCvLQ,CAOzBjZ,eAAgB,EAQhBC,aAAc,GAcdF,MAAO,CACH35F,EAAG,iBACH80G,IAAM,gBACNC,IAAM,gBACNC,IAAM,gBACNC,IAAM,gBACNC,IAAM,gBACNC,IAAM,eACNC,IAAM,eACNC,IAAM,eACNC,IAAM,eACNC,IAAO,eACPC,KAAO,gBACPC,KAAO,gBACPC,KAAO,gBACPC,KAAO,gBACPC,KAAO,gBACPC,KAAO,gBACPC,KAAO,gBACPC,KAAO,gBACPC,KAAO,gBACPC,IAAO,gBACPC,KAAO,eACPC,KAAO,eACPC,KAAO,eACPC,KAAO,eACPC,KAAO,+JC7Df,IAAAtC,OAAA72K,QAAA,YAQao5K,gBAAkB,CAQ3BC,qBAAsBxC,OAAAra,MAAMka,MAQ5B4C,eAAgBzC,OAAAra,MAAMka,MAQtB6C,kBAAmB1C,OAAAra,MAAMka,MAQzB8C,gBAAiB3C,OAAAra,MAAM2Z,oBAQvBsD,gBAAiB5C,OAAAra,MAAMka,yMChD3B,IAAAgD,WAAA15K,QAAA,uBACA25K,aAAA35K,QAAA,yBACA45K,OAAA55K,QAAA,mBACA65K,SAAA75K,QAAA,qBACA85K,UAAA95K,QAAA,sBAOam1K,cAAgB,CACzBppB,UAAW,uBACXsK,WAAYqjB,WAAA5C,iBACZxkB,aAAcqnB,aAAAzC,mBACd1zE,MAAOo2E,OAAAvC,YACP9a,QAASsd,SAAAE,cACTC,UAAWF,UAAAV,uVCZgB,CAY3BxgF,SAAU,WAWV8iF,qBAAsB,uBAatBp1E,QAAS,UAUTq1E,SAAU,WAQV71E,SAAU,WAQVpK,SAAU,WAQVkgF,OAAQ,4gBCpEgB,wCASe,yBASf,IASrB,IAAM/0C,wBAA0B,CACnC75B,oBAAgB5mG,EAChBsmG,UAAW,OACXyV,kBAAc/7G,EACdgwD,OAAQ,EACRq2C,cAAe,kGAUqB,iCAUJ,uBASV,4BASO,gCASI,iCASD,uCAOM,0CASF,mCAUF,0ICzHtC,IAAAnb,QAAAC,uBAAAvxF,QAAA,WACA67K,sBAAAtqF,uBAAAvxF,QAAA,qYAqBqB87K,6BACjB,SAAAA,kBAAYnkF,4IAAarF,CAAA9uF,KAAAs4K,mBACrBt4K,KAAKm0F,YAAcA,YACnBn0F,KAAKu4K,WAAY,EACjBv4K,KAAKw4K,iBAAmB,GACxBx4K,KAAKy4K,kBAAoB,GACzBz4K,KAAK04K,cAAgB,sHAarBj7K,SACA,IAAIlB,EAAI,IAAI87K,sBAAA,QAAqB56K,SAEjC,GAAIlB,EAAE66B,OAAOp3B,KAAK04K,eAGd,IAFAn8K,EAAIyD,KAAK04K,cAAcn8K,EAAE66B,MAEnB+iH,YAAen6I,KAAK04K,cAAcn8K,EAAE66B,KAAK+iH,UAAY,CACvD,IAAM1vH,IAAMqjE,QAAA,QAAE9oD,QAAQzoC,EAAE66B,IAAKp3B,KAAKw4K,mBAEvB,EAAP/tJ,KACAzqB,KAAKy4K,kBAAkBj1K,KAAKxD,KAAKw4K,iBAAiBhmK,OAAOiY,IAAK,UAItEzqB,KAAK04K,cAAcn8K,EAAE66B,KAAO76B,GAEtB49I,UACFn6I,KAAKy4K,kBAAkBj1K,KAAKjH,EAAE66B,KAE9Bp3B,KAAKw4K,iBAAiBh1K,KAAKjH,EAAE66B,KAQrC,OAJKp3B,KAAKu4K,WACNv4K,KAAK24K,YAGFp8K,EAAE67C,SAASxB,8CASlB,OAAI52C,KAAKy4K,kBAAkBz7K,QACvBgD,KAAKqkD,KAAKrkD,KAAKy4K,kBAAkBhwK,UAE1B,KACAzI,KAAKw4K,iBAAiBx7K,SAC7BgD,KAAKqkD,KAAKrkD,KAAKw4K,iBAAiB/vK,UAEzB,gCAYV2uB,KAAK,IAAAnjB,MAAAjU,KACAzD,EAAIyD,KAAK04K,cAActhJ,KAE7B02D,QAAA,QAAEtvB,QAAQjiE,EAAE66B,KACP/R,KAAK,SAACzf,KAAMwwI,WAAYv8E,OACrBt9D,EAAE67C,SAAS3B,QAAQ7wC,KAAMwwI,WAAYv8E,SAExChjB,KAAK,SAACgjB,MAAOu8E,WAAYiE,aACtB99I,EAAE67C,SAAS1B,OAAOmjB,MAAOu8E,WAAYiE,eAExCliG,OAAO,kBACGlkC,MAAKykK,cAAcn8K,EAAE66B,2VC3G5C,IAAA02D,QAAAC,uBAAAvxF,QAAA,WACAi1G,MAAA1jB,uBAAAvxF,QAAA,iHAQI,SAAAo8K,qBAAYn7K,wIAASqxF,CAAA9uF,KAAA44K,sBACjB54K,KAAKo3B,IAAM35B,QAAQ25B,IACnBp3B,KAAKm6I,WAAY,EAAA1oC,MAAA,SAAKh0G,QAAS,aAAa,GAC5CuC,KAAKyB,KAAO,OACZzB,KAAKo4C,SAAW01C,QAAA,QAAE91C,4KCb1B,IAAA6gD,MAAAr8F,QAAA,gBACAu8F,iBAAAv8F,QAAA,oTAUA,aA2de,eA3cX,SAAAq8K,aAqJI,qIArJU/pF,CAAA9uF,KAAA64K,YAWV74K,KAAK84K,sBAAwB,EAY7B94K,KAAK+4K,mBAAqB,EA+B1B/4K,KAAKg5K,gBAAkB,EAUvBh5K,KAAKi5K,qBAAuB,EAW5Bj5K,KAAKk5K,WAAa,EAqBlBl5K,KAAKm5K,4BAA8B,EAcnCn5K,KAAKo5K,WAAY,EAQjBp5K,KAAKq5K,wBAA0B,EAS/Br5K,KAAKs5K,gBAAkB,EAoBvBt5K,KAAKu5K,gBAAkB,EAEhBv5K,KAAK00F,wHAoFZ,OAAO10F,qCAUPA,KAAK84K,sBAAwB,EAC7B94K,KAAK+4K,mBAAqB,EAC1B/4K,KAAKg5K,gBAAkB,EACvBh5K,KAAKi5K,qBAAuB,EAC5Bj5K,KAAKk5K,WAAa,EAClBl5K,KAAKm5K,4BAA8B,EACnCn5K,KAAKo5K,WAAY,EACjBp5K,KAAKq5K,wBAA0B,EAC/Br5K,KAAKs5K,gBAAkB,EACvBt5K,KAAKu5K,gBAAkB,gEAkBvB,OAAIv5K,KAAKw5K,UAAYx5K,KAAKy5K,yCACf,EAGJz5K,KAAK05K,8EAoBZ15K,KAAKm5K,2BAA6Bn5K,KAAKg5K,gBACvCh5K,KAAKg5K,gBAvTiC,wEAqUtCh5K,KAAKg5K,gBAAkBh5K,KAAKm5K,2BAC5Bn5K,KAAKm5K,4BAA8B,mCAkB9BQ,WACDA,YAAc35K,KAAKo5K,YAIvBp5K,KAAKo5K,UAAYO,kDAcjB,OAAO35K,KAAK+4K,mBAAqB/4K,KAAKk5K,YAAe,mCAcrD,IAAyC,IAArCl5K,KAAKm5K,2BAAT,CAIA,IAAMlnH,YAAcjyD,KAAK45K,gBAEzB55K,KAAK65K,kBACL75K,KAAK85K,wBAAwB7nH,aAC7BjyD,KAAK+5K,oEAaYC,cACbA,aAAe,IAInBh6K,KAAKu5K,gBAAkBS,wDAevBh6K,KAAK+4K,oBAAsB,kDAcP9mH,aACD,EACHA,YAAcjyD,KAAKi5K,uBAG/Bj5K,KAAKi5K,qBAAuBhnH,aAGhCjyD,KAAKg5K,gBAAkB/mH,YAAcjyD,KAAKq5K,wBAC1Cr5K,KAAKq5K,wBAA0BpnH,YAC/BjyD,KAAK84K,uBAAyB94K,KAAKsrH,oFAcnCtrH,KAAKk5K,WAAanmJ,KAAK8B,OAAM,EAAAgkE,MAAA0xB,yBAAwB,EAAGvqH,KAAKu5K,gBAAiB,GAAI,GAAI,qEAetF,OAAyB,GAAlBv5K,KAAK05K,WAA2C,IAAzB15K,KAAKu5K,kBAA8D,IAArCv5K,KAAKm5K,wEAxSjE,OAAOn5K,KAAK84K,mEAcZ,OAAQ,IAAIvyI,MAAQglD,kDAUpB,OAAQ,IAAIhlD,MAAQglD,UAAYwN,iBAAAimB,KAAKytD,6DAiBrC,IAAMwN,gCAAkCj6K,KAAKg5K,gBAAkBh5K,KAAKu5K,gBAEpE,OAAOxmJ,KAAKw5C,IAAI0tG,gCAAiC,sCAQjD,OAAOj6K,KAAKo5K,iDAYZ,OAAOp5K,KAAKu5K,wXCzPpB,IAAAzrF,QAAAC,uBAAAvxF,QAAA,WACAo9G,UAAA7rB,uBAAAvxF,QAAA,mBACA47F,MAAArK,uBAAAvxF,QAAA,eACA2xF,UAAAJ,uBAAAvxF,QAAA,oBACA22F,cAAApF,uBAAAvxF,QAAA,oBACA09K,aAAAnsF,uBAAAvxF,QAAA,kBACA4xF,YAAAL,uBAAAvxF,QAAA,yBACAq8F,MAAAr8F,QAAA,gBACA+xF,YAAA/xF,QAAA,2BACAs8F,qBAAAt8F,QAAA,oCACAu8F,iBAAAv8F,QAAA,gCACAu3F,iBAAAv3F,QAAA,gCACAs3F,WAAAt3F,QAAA,0BACA2oJ,QAAA3oJ,QAAA,6XAOA,IAAM29K,yBAA2B,CAC7B1sD,eAAgB,IAChB/V,QAAS,GACTnI,WAAY,IACZ+L,UAAW,GACX8+D,6BAA8B,GAC9BC,4BAA6B,GAC7BC,WAAY,GACZC,0BAA2B,EAC3BC,yBAA0B,GAC1BC,4BAA6B,GAC7BC,sCAAuC,GACvCC,sBAAuB,GACvBC,iBAAkB,IAClBC,uBAAwB,KAOfvrE,YAAc,CACvBme,cAAe,gBACf/V,QAAS,UACTnI,UAAW,YACX+L,UAAW,YACX8+D,4BAA6B,8BAC7BC,2BAA4B,6BAC5BC,UAAW,YACXC,yBAA0B,2BAC1BC,wBAAyB,0BACzBC,2BAA4B,6BAY5BC,qCAAsC,uCACtCC,qBAAsB,uBACtBC,gBAAiB,kBACjBC,sBAAuB,yDAO3B,IAAMC,wBAA0B,CAC5BrtD,cAAe,0CACf/V,QAAS,+BACTnI,UAAW,6BACX+L,UAAW,wCACX8+D,4BAA6B,2CAC7BC,2BAA4B,0CAC5BC,UAAW,4BACXC,yBAA0B,wCAC1BC,wBAAyB,uCACzBC,2BAA4B,4CAC5BC,qCAAsC,kDACtCC,qBAAsB,gDACtBC,gBAAiB,4CACjBC,sBAAuB,kEAkjBZ,eAxiBX,SAAAE,iBAAc,kBAAA9mK,MAAAjU,oIAAA8uF,CAAA9uF,KAAA+6K,sBA6hBF,SAAC3e,YACJ,EAAAhkE,MAAA,SAAK+sD,QAAAc,MAAOmW,WAMjBnoJ,MAAK8xI,MAAQZ,QAAAc,MAAMmW,WALf3vI,QAAQ1U,MAAR,oDAAAvG,OAAkE4qJ,UAAlE,YA/hBM,mBAAAp8J,4GASVA,KAAKihG,KAAO,GACZjhG,KAAKihG,KAAK+5E,SAAU,EACpBh7K,KAAKihG,KAAKg6E,UAAY,EACtBj7K,KAAKihG,KAAK5+C,OAAS,GACnBriD,KAAKihG,KAAKi6E,SAAW,GACrBl7K,KAAKihG,KAAKk6E,WAAa,EACvBn7K,KAAKihG,KAAKm6E,MAAQ,EAClBp7K,KAAKihG,KAAK7hD,OAAS,IAAI86H,aAAA,QACvBl6K,KAAK+lJ,MAAQZ,QAAAc,MAAMgX,QAEnBj9J,KAAKk0F,UAAY/F,UAAA,+HAQjB,OAAOnuF,KAAKqvF,gBACPgsF,iBACAjpF,iDAcL,OAHApyF,KAAKs7K,qBAAuBt7K,KAAKu7K,cAAc7oH,KAAK1yD,MACpDA,KAAKw7K,sBAAwBx7K,KAAKy7K,eAAe/oH,KAAK1yD,MAE/CA,8CAcP,OAAOA,sCAQF,IAAAkxF,OAAAlxF,KAcL,OAbAA,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAMs3D,UAAWtoJ,KAAKgmJ,WAExCj5H,OAAOuf,iBAAiB,OAAQtsC,KAAKs7K,sBACrCvuJ,OAAOuf,iBAAiB,QAAStsC,KAAKw7K,uBAEtCl6I,SAASgL,iBAAiB,mBAAoB,WAC1C,MAAiC,WAA7BhL,SAASo6I,gBACFxqF,OAAKoqF,uBAGTpqF,OAAKsqF,0BAGTx7K,KAAK27K,yDAWZ,OAFA37K,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAMs3D,UAAWtoJ,KAAKgmJ,WAElChmJ,KAAKsyF,4CA0BZ,OAXAtyF,KAAKihG,KAAO,GACZjhG,KAAKihG,KAAK+5E,SAAU,EAEpBh7K,KAAKihG,KAAKg6E,UAAY,EACtBj7K,KAAKihG,KAAK5+C,OAAS,GACnBriD,KAAKihG,KAAKi6E,SAAW,GACrBl7K,KAAKihG,KAAKk6E,WAAa,EACvBn7K,KAAKihG,KAAKm6E,MAAQ,EAClBp7K,KAAKihG,KAAK7hD,OAAS,IAAI86H,aAAA,QACvBl6K,KAAK+lJ,MAAQZ,QAAAc,MAAMgX,QAEZj9J,oDASY,IAAAoxF,OAAApxF,MACnB,EAAA45G,UAAA,SAAStK,YAAa,SAACssE,UAAWt2K,KAC9B8rF,OAAK6P,KAAK5+C,OAAO/8C,KAAO,6CAYfs2K,WACb,KAAK,EAAAxjF,MAAA,SAAKkX,YAAassE,WACnB,MAAM,IAAI1pJ,UAAJ,qEAAA1gB,OAAmFoqK,YAG7F57K,KAAKihG,KAAK5+C,OAAOu5H,YAAc,EAC/B57K,KAAKihG,KAAKm6E,OAASjB,yBAAyByB,WAE5C57K,KAAK67K,mBACL77K,KAAK87K,mBAAmBF,6DASxB,IAAMG,YAAc3tF,YAAA,QAAW4gB,qBAAuBjW,iBAAAimB,KAAKC,oBAG3D,OAFqBj/G,KAAKihG,KAAKm6E,MAAQW,kEASb,IAAAxqF,OAAAvxF,MAE1B,EAAA45G,UAAA,SAAS55G,KAAKihG,KAAK5+C,OAAQ,SAACu5H,UAAWt2K,KACnCisF,OAAK0P,KAAK5+C,OAAO/8C,KAAO,IAI5BtF,KAAKihG,KAAKm6E,MAAQ,EAElBp7K,KAAK67K,2DASOG,WACZ,GAAkB,IAAdA,WAGG,KAAIA,UAAY,GAAhB,CAIP5tF,YAAA,QAAW6tF,qBAAqBD,WAChC7oF,cAAA,QAAa+B,YAAYnB,iBAAAoB,gBAAgB2N,QAAS,WAAYk5E,WAE9D,IAAME,eAAgB,EAAApuF,QAAA,SAAEgG,WAAAuB,UAAUC,cAAcu5E,eAE9B,IAAdmN,WACAE,cAAcvlH,YAAYm9B,WAAAuB,UAAUuL,WAAWgvE,SAC/CsM,cAAcvlH,YAAYm9B,WAAAuB,UAAUuL,WAAWivE,SAC/CqM,cAAcrgI,KAAK,QAAS,uBACrBmgI,UAAY,GACnBE,cAAcvlH,YAAYm9B,WAAAuB,UAAUuL,WAAWivE,SAC/CqM,cAAc5lH,SAASw9B,WAAAuB,UAAUuL,WAAWgvE,SAC5CsM,cAAcrgI,KAAK,QAAS,wBAE5BqgI,cAAcvlH,YAAYm9B,WAAAuB,UAAUuL,WAAWgvE,SAC/CsM,cAAc5lH,SAASw9B,WAAAuB,UAAUuL,WAAWivE,SAC5CqM,cAAcrgI,KAAK,QAAS,0BAtB5B77C,KAAKm8K,sEAoCwB,GAA7B/tF,YAAA,QAAWgjE,eACXpxJ,KAAK6iG,gBAAgB,GACgB,IAA9BzU,YAAA,QAAWgjE,eAClBpxJ,KAAK6iG,gBAAgB,GAErB7iG,KAAK6iG,gBAAgB,wCASzBzU,YAAA,QAAWguF,UAAS,GAEpB,IAAMC,qBAAsB,EAAAvuF,QAAA,SAAEgG,WAAAuB,UAAUC,cAAcu1E,cAEtDwR,oBAAoB/lH,SAASw9B,WAAAuB,UAAUuL,WAAWswC,QAClDmrC,oBAAoBpuI,KAAK,QAAS,sBAClC,EAAA6/C,QAAA,SAAE,QAAQx3B,SAASw9B,WAAAuB,UAAUuL,WAAW8uE,+CAQxCthF,YAAA,QAAWguF,UAAS,GAEpB,IAAMC,qBAAsB,EAAAvuF,QAAA,SAAEgG,WAAAuB,UAAUC,cAAcu1E,cAEtDwR,oBAAoB1lH,YAAYm9B,WAAAuB,UAAUuL,WAAWswC,QACrDmrC,oBAAoBpuI,KAAK,QAAS,qBAClC,EAAA6/C,QAAA,SAAE,QAAQn3B,YAAYm9B,WAAAuB,UAAUuL,WAAW8uE,oDAQ3C,GAAIthF,YAAA,QAAWorF,SAIX,OAHArmF,cAAA,QAAa+B,YAAYnB,iBAAAoB,gBAAgB2N,QAAS,QAAS,cAC3D9iG,KAAKs8K,eAKTnpF,cAAA,QAAa+B,YAAYnB,iBAAAoB,gBAAgB2N,QAAS,QAAS,QAC3D9iG,KAAKu8K,mDASL,OAAQv8K,KAAKihG,KAAK+5E,SAAW5sF,YAAA,QAAWorF,gDASxC,OAAQx5K,KAAKw6J,cAA4C,EAA5BpsE,YAAA,QAAWgjE,oDAY/BorB,eAAgB1nH,MAAO5b,KAAMtzC,MACtC,IACM62K,YAAc,CAACD,eADFpuF,YAAA,QAAW4gB,qBAAuBl6C,MACJlvD,KAAMkvD,OAAO,EAAO5b,MAIrE,OAFAl5C,KAAKihG,KAAKi6E,SAAS13K,KAAKi5K,aAEjBA,kDAYGxkI,KAAM6c,MAAO5b,KAAMtzC,MAC7B,IAAMkuD,GAAK,CAAC7b,KAAMm2C,YAAA,QAAW4gB,qBAAuBl6C,MAAOlvD,KAAMkvD,OAAO,EAAM5b,MAI9E,OAFAl5C,KAAKihG,KAAKi6E,SAAS13K,KAAKswD,IAEjBA,wCAUElB,OACT5yD,KAAKihG,KAAKi6E,SAAS1oK,OAAOxS,KAAKihG,KAAKi6E,SAAS1uK,QAAQomD,OAAQ,2CAa7D5yD,KAAKihG,KAAKi6E,SAAW,8CASrB,GAAIl7K,KAAKihG,KAAKm6E,QAAUp7K,KAAKihG,KAAKk6E,WAAlC,CAIA,IAAMuB,eAAgB,EAAA5uF,QAAA,SAAEgG,WAAAuB,UAAUC,cAAc27E,OAEhDyL,cAAc53J,MAAK,EAAA+zE,MAAAhkE,OAAM70B,KAAKihG,KAAKm6E,QAG/Bp7K,KAAKihG,KAAKm6E,OAAS,IACnBsB,cAAcpmH,SAASw9B,WAAAuB,UAAUuL,WAAWuuE,UAE5CuN,cAAc/lH,YAAYm9B,WAAAuB,UAAUuL,WAAWuuE,UAGnDnvK,KAAKihG,KAAKk6E,WAAan7K,KAAKihG,KAAKm6E,kDAQlB75H,OACf,IAAIo7H,OAASxC,yBAAyB54H,OAElCo7H,OAAS,IACTA,OAAM,kDAAAnrK,OAAqDmrK,OAArD,YAGV,IAAM10H,MAAO,EAAA6lC,QAAA,SAAA,OAAAt8E,OAASspK,wBAAwBv5H,OAAjC,MAAA/vC,OAA4CmrK,OAA5C,UACPtvC,UAAW,EAAAv/C,QAAA,SAAEgG,WAAAuB,UAAUC,cAAc47E,WAE3C7jC,SAASp6H,OAAOg1C,MAChBolF,SAAS78E,UAAU68E,SAASx8G,IAAI,GAAG+rJ,mDAQnC,IAAMC,cAAe,EAAA/uF,QAAA,SAAE,SAElB9tF,KAAKw6J,eAAiBqiB,aAAa7lH,SAAS88B,WAAAuB,UAAUuL,WAAW8uE,SAClEmN,aAAalmH,YAAYm9B,WAAAuB,UAAUuL,WAAW8uE,QAGlD1vK,KAAK88K,sDAUL,IAFA,IAAMC,gBAAkB3uF,YAAA,QAAW4gB,qBAE1B3yG,EAAI2D,KAAKihG,KAAKi6E,SAASl+K,OAAS,EAAQ,GAALX,EAAQA,IAAK,CACrD,IAAI2gL,yBAA0B,EACxBhoH,QAAUh1D,KAAKihG,KAAKi6E,SAAS7+K,GAC7Boa,SAAWu+C,QAAQ,GACnBioH,cAAgBjoH,QAAQ,GACxBkoH,kBAAoBloH,QAAQ,GAC5BmoH,cAAgBnoH,QAAQ,GACxBooH,aAAepoH,QAAQ,GAEPioH,cAAlBF,kBACAtmK,SAAS1Z,KAAKi4D,QAAQ,GAAIkoH,mBAC1BF,yBAA0B,EAEtBI,eACApoH,QAAQ,GAAKioH,cAAgBE,cAC7BH,yBAA0B,IAI9BA,0BACAh9K,KAAKihG,KAAKi6E,SAAS1oK,OAAOnW,EAAG,GAC7BA,GAAK,uCAUb+xF,YAAA,QAAWguF,UAAS,yCAcViB,YACV,OAAOr9K,KAAKihG,KAAK7hD,OAAO8hD,gBAAgBm8E,yEAcPtrF,UACjC,IAAMurF,kBAAoBt9K,KAAKqlG,cAAcvM,qBAAAqI,kBAAkBgqE,6BAC3DoS,mBAA2C,QAAtBD,kBAMzB,MAJ0B,eAAtBA,oBACAC,mBAAqBv9K,KAAK+lJ,MAAM+I,aAAa8kB,uCAG1C2J,oBAAsBxrF,SAASqkB,kDAS5B70D,OACVvhD,KAAKihG,KAAK+5E,SAAU,EAIpB5sF,YAAA,QAAW6tF,qBAAqB,GAChC7tF,YAAA,QAAWguF,UAAS,GAGpB,IAAMF,eAAgB,EAAApuF,QAAA,SAAEgG,WAAAuB,UAAUC,cAAcu5E,eAEhDqN,cAAcvlH,YAAYm9B,WAAAuB,UAAUuL,WAAWgvE,SAC/CsM,cAAcvlH,YAAYm9B,WAAAuB,UAAUuL,WAAWivE,SAC/CqM,cAAcrgI,KAAK,QAAS,6DASjB0F,OACXvhD,KAAKihG,KAAK+5E,SAAU,GAGhB,EAAAltF,QAAA,SAAE,QAAQ92B,SAAS88B,WAAAuB,UAAUuL,WAAW8uE,SAI5CthF,YAAA,QAAWguF,UAAS,upBC7mB5B,IAAApuF,QAAAD,uBAAAvxF,QAAA,iBACA2xF,UAAAJ,uBAAAvxF,QAAA,oBACA22F,cAAApF,uBAAAvxF,QAAA,oBACAs8F,qBAAAt8F,QAAA,oCACAu3F,iBAAAv3F,QAAA,0YAOqBghL,uBAKjB,SAAAA,6IAAc1uF,CAAA9uF,KAAAw9K,aAMVx9K,KAAKk0F,UAAY/F,UAAA,QAQjBnuF,KAAKy9K,SAAW,GAYhBz9K,KAAK09K,2IAUL,IAAK,IAAIrhL,EAAI,EAAGA,EAAIy8F,qBAAAyyE,mBAAmBvuK,OAAQX,IAAK,CAChD,IAAM+iD,OAAS05C,qBAAAyyE,mBAAmBlvK,GAElC2D,KAAK29K,UAAUv+H,2CASbw+H,aACN,IAAMC,iBAAmB79K,KAAK89K,iBAAiBF,YAAYj9K,MACrDo9K,kBAAoBjxJ,OAAOmjE,aAAa6tE,QAAQ+f,kBAElDG,aADJh+K,KAAKy9K,SAASG,YAAYj9K,MAAQi9K,aACJppI,cAEzB,EAAAw5C,QAAA,SAAO+vF,qBACRC,YAAcD,mBAGlB/9K,KAAK49K,YAAYj9K,MAAQq9K,sDASzB,OAAOh+K,KAAKy9K,iDAWA98K,MACZ,OAAOX,KAAKW,8CAaAA,KAAM6E,OAClBxF,KAAKW,MAAQ6E,MACb,IAAMq4K,iBAAmB79K,KAAK89K,iBAAiBn9K,MAS/C,OAPAmsB,OAAOmjE,aAAa8tE,QAAQ8f,iBAAkBr4K,OAC9C2tF,cAAA,QAAa+B,YAAYnB,iBAAAoB,gBAAgBgjF,SAAUx3K,KAAM6E,OAErDxF,KAAKy9K,SAAS98K,MAAM8qK,sBACpBzrK,KAAKk0F,UAAUjyC,QAAQjiD,KAAKy9K,SAAS98K,MAAM8qK,qBAAsBjmK,OAG9DA,+CAWM63K,YACb,MAAA,mBAAA7rK,OAA0B6rK,wiBCnIlC,IAAAlvF,UAAAJ,uBAAAvxF,QAAA,oBACA42F,8XAAA10F,CAAAlC,QAAA,qBACAm3F,cAAA5F,uBAAAvxF,QAAA,uBACA6pG,gBAAA7pG,QAAA,+BACA+xF,YAAA/xF,QAAA,2BACA6xF,kBAAA7xF,QAAA,iCACAwpG,sBAAAxpG,QAAA,0ZAKqByhL,2BACjB,SAAAA,gBAAYtoF,mJAAoB7G,CAAA9uF,KAAAi+K,iBAS5Bj+K,KAAKy5F,oBAAsB9D,mBAE3B31F,KAAKojC,OACAisD,gBACA+C,6HAIL,OAAOpyF,6CAaP,OAJAA,KAAKk+K,mBAAqBl+K,KAAKm+K,YAAYzrH,KAAK1yD,MAChDA,KAAKo+K,kBAAoBp+K,KAAKq+K,WAAW3rH,KAAK1yD,MAC9CA,KAAKs+K,uBAAyBt+K,KAAKu+K,gBAAgB7rH,KAAK1yD,MAEjDA,sCAaP,OAJAmuF,UAAA,QAAS/sC,GAAGmtC,YAAA6qB,eAAeoF,SAAUx+G,KAAKk+K,oBAC1C/vF,UAAA,QAAS/sC,GAAGmtC,YAAA6qB,eAAeC,SAAUr5G,KAAKo+K,mBAC1CjwF,UAAA,QAAS/sC,GAAGmtC,YAAA6qB,eAAeoV,cAAexuH,KAAKs+K,wBAExCt+K,uCAaP,OAJAmuF,UAAA,QAAS3sC,IAAI+sC,YAAA6qB,eAAeoF,SAAUx+G,KAAKk+K,oBAC3C/vF,UAAA,QAAS3sC,IAAI+sC,YAAA6qB,eAAeC,SAAUr5G,KAAKo+K,mBAC3CjwF,UAAA,QAAS3sC,IAAI+sC,YAAA6qB,eAAeoV,cAAexuH,KAAKs+K,wBAEzCt+K,yCAQCm5F,eACRn5F,KAAKw+K,oCAAoCrlF,kDAclCA,cAAe8Q,aACtBjqG,KAAKy+K,WAAWtlF,cAAe,UAC/Bn5F,KAAK0+K,uBAAuBvlF,cAAe8Q,YAAa,kDAQ5C9Q,eACRA,cAAcid,YACdp2G,KAAK2+K,0BAA0BxlF,eAK/BA,cAAckS,IAAIO,cAAgB5F,sBAAA6F,SAASC,QAAQ6Y,KAMvD3kH,KAAK4+K,6BAA6BzlF,eAL9Bn5F,KAAK6+K,gCAAgC1lF,iEAgBnBA,eACtBA,cAAcmlB,UAAU,oCAAqCjwB,kBAAAkwB,8BAA8BC,UAAU,GACrGprB,gBAAA,QAAeic,iBAAiBjc,gBAAAkc,YAAYme,oEASnBt0B,eACzBA,cAAcmlB,UAAU,gCAAiCjwB,kBAAAkwB,8BAA8BjD,WACvFloB,gBAAA,QAAeic,iBAAiBjc,gBAAAkc,YAAYgM,mEAShBniB,eAC5BA,cAAcmlB,UAAU,8CAA+CjwB,kBAAAkwB,8BAA8BjD,WAAW,GAChHloB,gBAAA,QAAeic,iBAAiBjc,gBAAAkc,YAAYqrE,yDASrCxhF,cAAe50E,QACtB,IACMmoF,KAAOvT,cAAc2lF,oBAGT,IAAdpyE,KAAKiU,OACLvtB,gBAAA,QAAeic,iBAAiBjc,gBAAAkc,YAAY8qE,6BAC5CzmF,cAAA,QAAa6N,OAAb,GAAAhwF,OAAuB2nF,cAAcE,SAArC,KAAA7nF,OAAiD+S,OAAjD,0BANc,IAOO,IAAdmoF,KAAKiU,QACZvtB,gBAAA,QAAeic,iBAAiBjc,gBAAAkc,YAAYirE,0BAC5C5mF,cAAA,QAAa6N,OAAb,GAAAhwF,OAAuB2nF,cAAcE,SAArC,KAAA7nF,OAAiD+S,OAAjD,oBATc,IAYdmoF,KAAK7pE,OAAS,IACduwD,gBAAA,QAAeic,iBAAiBjc,gBAAAkc,YAAY+qE,4BAC5C1mF,cAAA,QAAa6N,OAAb,GAAAhwF,OAAuB2nF,cAAcE,SAArC,KAAA7nF,OAAiD+S,OAAjD,yBAdc,IAePmoF,KAAK7pE,OAAS,IACrBuwD,gBAAA,QAAeic,iBAAiBjc,gBAAAkc,YAAYkrE,yBAC5C7mF,cAAA,QAAa6N,OAAb,GAAAhwF,OAAuB2nF,cAAcE,SAArC,KAAA7nF,OAAiD+S,OAAjD,mBAjBc,mDA4BC40E,cAAe8Q,YAAa1lF,QAC/C,IAAMw6J,iBAAmB90E,YAAYgY,0BAGrC,GAAK88D,mBAAoBA,iBAAiBjoE,kCAInB,EAAAzQ,gBAAA6c,OAAM/pB,cAAcgqB,mBAAmB47D,mBACrC5lF,cAAcgf,MAAMiL,4CAA4C27D,iBAAiB5mE,QAEjE4mE,iBAAiB5vE,cAAc,CAGpE/b,gBAAA,QAAeic,iBAAiBjc,gBAAAkc,YAAYurE,uBAC5ClnF,cAAA,QAAa6N,OAAO,GAAAhwF,OAAG2nF,cAAcE,SAAjB,KAAA7nF,OAA6B+S,OAA7B,8CAChB,kCAJc,gEAeU40E,eAChC,GAAKA,cAAc6lF,mBAAnB,CAMArrF,cAAA,QAAa6N,OAAb,GAAAhwF,OAAuB2nF,cAAcE,SAArC,4CAFkB,GAGlBjG,gBAAA,QAAeic,iBAAiBjc,gBAAAkc,YAAYorE,gGAUfvhF,eAG7BxF,cAAA,QAAa6N,OAAb,GAAAhwF,OAAuB2nF,cAAcE,SAArC,iEAFkB,GAGlBjG,gBAAA,QAAeic,iBAAiBjc,gBAAAkc,YAAYmrE,kiBC5OpD,IAAA3sF,QAAAC,uBAAAvxF,QAAA,WACAyiL,KAAAlxF,uBAAAvxF,QAAA,4FAEAA,QAAQ,OAAOoxF,eAQLgM,gBAAAA,OAAQ,EAAA9L,QAAA,SAAE,aAEJ,IAAImxF,KAAA,QAAIrlF,oMCbxB,IAAA9L,QAAAC,uBAAAvxF,QAAA,WACAkxI,kBAAAlxI,QAAA,iCACA6pG,gBAAA7pG,QAAA,+BACAq2F,mBAAA9E,uBAAAvxF,QAAA,iCACA0iL,oBAAAnxF,uBAAAvxF,QAAA,yBACA2xF,UAAAJ,uBAAAvxF,QAAA,oBACAu8F,iBAAAv8F,QAAA,gCACA+xF,YAAA/xF,QAAA,2BACA2iL,qBAAA3iL,QAAA,yBACAypG,mBAAAzpG,QAAA,wYAOA,IAAM4iL,gCAEW,8BAFXA,+BAIU,6BAJVA,oCAMe,kCANfA,oCAQe,kCASAC,iCAMjB,SAAAA,sBAAYtwF,UAkGR,qIAlGkBD,CAAA9uF,KAAAq/K,uBAQlBr/K,KAAK+uF,SAAWA,SAShB/uF,KAAKs/K,UAAY,KASjBt/K,KAAKu/K,eAAiB,KAStBv/K,KAAKw/K,WAAa,KASlBx/K,KAAKy/K,eAAiB,KAStBz/K,KAAK0/K,UAAY,KAOjB1/K,KAAK2/K,UAAY5mF,iBAAA2K,eAOjB1jG,KAAK8uG,UAAY,GAOjB9uG,KAAK6vF,KAAO,GAMZ7vF,KAAK4/K,mBAAqB,KAO1B5/K,KAAK0sG,KAAO,GASZ1sG,KAAKk0F,UAAY/F,UAAA,QAEVnuF,KAAKojC,OACPmsG,kBACAt7B,iBACA7hB,SACAwC,4IAuBL,OAZA50F,KAAKs/K,WAAY,EAAAxxF,QAAA,SAAEqxF,qBAAAU,uBACnB7/K,KAAKu/K,eAAiBv/K,KAAKs/K,UAAUxyI,KAAKsyI,qCAC1Cp/K,KAAKw/K,WAAax/K,KAAKs/K,UAAUxyI,KAAKsyI,iCACtCp/K,KAAKy/K,eAAiBz/K,KAAKs/K,UAAUxyI,KAAKsyI,qCAC1Cp/K,KAAK0/K,UAAY1/K,KAAKs/K,UAAUxyI,KAAKsyI,gCACrCp/K,KAAK2/K,UAAY5mF,iBAAA2K,eACjB1jG,KAAK8uG,UAAY,GACjB9uG,KAAK6vF,KAAO,GACZ7vF,KAAK4/K,mBAAqB,IAAIV,oBAAA,QAC9Bl/K,KAAK0sG,KAAO,GACZ1sG,KAAKk0F,UAAY/F,UAAA,QAEVnuF,+CAgBP,OAFAA,KAAK+uF,SAAS97E,OAAOjT,KAAKs/K,WAEnBt/K,8CAaP,OAHAA,KAAKsgJ,wBAA0BtgJ,KAAK40F,gBAAgBliC,KAAK1yD,MACzDA,KAAK8/K,qBAAuB9/K,KAAK+/K,aAAartH,KAAK1yD,MAE5CA,sCAcP,OAHAA,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAM+D,eAAgB/0F,KAAKsgJ,yBAC7CtgJ,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAM0mD,YAAa13I,KAAK8/K,sBAEnC9/K,uCAcP,OAHAA,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAM+D,eAAgB/0F,KAAKsgJ,yBAC9CtgJ,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAM0mD,YAAa13I,KAAK8/K,sBAEpC9/K,qCAkBP,OATAA,KAAK+uF,SAAW,KAChB/uF,KAAKs/K,UAAY,KACjBt/K,KAAK2/K,UAAY,KACjB3/K,KAAK8uG,UAAY,KACjB9uG,KAAK6vF,KAAO,KACZ7vF,KAAK4/K,mBAAqB,KAC1B5/K,KAAK0sG,KAAO,KACZ1sG,KAAKk0F,UAAY,KAEVl0F,+CAaP,IAAMyvF,QAAUoD,mBAAA,QAAkBkV,cAC5B42C,UAAY5rH,KAAK8B,OAAM,EAAAwxE,gBAAAwG,kBAAiBpd,QAAQid,KAAKI,QAE3D9sG,KAAK0sG,KAAO1sG,KAAKggL,yBAAyB,CAAEtsH,MAAO+7B,QAAQid,KAAKh5C,MAAOo5C,MAAO6xC,YAC9E3+I,KAAK2/K,UAAY3/K,KAAKigL,8BAA8BxwF,QAAQid,KAAKh5C,OACjE1zD,KAAK8uG,UAAL,GAAAt9F,OAAoBi+E,QAAQqf,WAC5B9uG,KAAK6vF,KAAOJ,QAAQI,KAAKt0C,cAEzBv7C,KAAKkgL,+CASIpnC,aACT94I,KAAK0sG,KAAO1sG,KAAKggL,yBAAyB,CAAEtsH,MAAOolF,YAAYplF,MAAOo5C,MAAOgsC,YAAYhsC,QAEzF9sG,KAAKkgL,gDAUL,IAAMC,QAAUngL,KAAK4/K,mBAAmBQ,oBAExCpgL,KAAKw/K,WAAW16J,KAAKq7J,0DAiBAzzE,MACrB,IACQh5C,MAAUg5C,KAAVh5C,MACAo5C,MAAUJ,KAAVI,MACFuzE,UAAW,EAAA3yC,kBAAAS,SAASrhC,OAAS,IAAM,GACnCwzE,UAAW,EAAA5yC,kBAAAS,SAAQz6E,MAAO,GAE1B6sH,aAAe7sH,MAAQ3gC,KAAK+B,SAC5B0rJ,WAAY,EAAA9yC,kBAAAS,SAAQp7G,KAAK8B,MAAM6+B,MAAQ6sH,cAAe,GAE5D,OAAIA,aAToB,EAUpB,GAAA/uK,OAAU6uK,SAAV,KAAA7uK,OAAsB8uK,UAG1B,GAAA9uK,OAAU6uK,SAAV,KAAA7uK,OAAsB8uK,SAAtB,MAAA9uK,OAAmCgvK,iEAYTC,WAG1B,OAFiBx6E,mBAAAqZ,YAAYspD,0BAA6B6X,UAAY1tJ,KAAK+B,SAAW,KAEtEsvE,QAAQ,qCAWxBpkG,KAAK0/K,UAAU56J,KAAf,GAAAtT,OAAuBxR,KAAK6vF,KAA5B,KAAAr+E,OAAoCxR,KAAK0sG,OACzC1sG,KAAKu/K,eAAez6J,KAApB,GAAAtT,OAA4BxR,KAAK6vF,KAAjC,KAAAr+E,OAAyCxR,KAAK2/K,YAC9C3/K,KAAKy/K,eAAe36J,KAApB,GAAAtT,OAA4BxR,KAAK6vF,KAAjC,KAAAr+E,OAAyCxR,KAAK8uG,umBCvVtD,QAAA1gB,iBAAA5xF,QAAA,2DACA4pG,gBAAA5pG,QAAA,+BACAu8F,iBAAAv8F,QAAA,wTAMqBkkL,8BAKjB,SAAAA,qBASI,qIATU5xF,CAAA9uF,KAAA0gL,oBAOV1gL,KAAKkyD,UAAY,EAEVlyD,KAAK00F,gIAWZ,OAFA10F,KAAKkyD,UAAYlyD,KAAK2gL,yBAEf3gL,qCAoCP,OAFAA,KAAKkyD,UAAY,EAEVlyD,iDAWP,IAAM4gL,0BAA4BxyF,YAAA,QAAW4gB,qBAAuBjW,iBAAAimB,KAAKstD,2BACnEuU,UAAY,IAAIt6I,KAAKvmC,KAAKkyD,UAAY0uH,2BACtCE,OAAQ,EAAA16E,gBAAA26E,gBAAeF,UAAUG,WAAY,GAC7CC,SAAU,EAAA76E,gBAAA26E,gBAAeF,UAAUK,aAAc,GACjDC,SAAU,EAAA/6E,gBAAA26E,gBAAeF,UAAUO,aAAc,GAGvD,MAFe,GAAA5vK,OAAMsvK,OAANtvK,OAAcyvK,QAAd,KAAAzvK,OAAyB2vK,2DAzCxC,OAAO,IAAI56I,MAAOglD,2DAWlB,IAAM81F,KAAO,IAAI96I,KAGjB,OAFY86I,KAAK91F,UAAa81F,KAAKC,oBAAsBvoF,iBAAAimB,KAAKqtD,sdCjDjC,08BCPrC,IAAAj0E,MAAArK,uBAAAvxF,QAAA,eACA+kL,YAAAxzF,uBAAAvxF,QAAA,oYAoKe,eA/IX,SAAAglL,0IAAc1yF,CAAA9uF,KAAAwhL,UASVxhL,KAAKyhL,QAAU,mHAQfzhL,KAAKyhL,QAAU,8BAahBC,UAAWjrK,UACNzW,KAAK6vB,IAAI6xJ,WACT1hL,KAAKyhL,QAAQC,WAAWC,YAAYlrK,WAKxCzW,KAAKyhL,QAAQC,WAAa,IAAIH,YAAA,QAAWG,WAEzC1hL,KAAK4hL,aAAaF,UAAWjrK,uCAgB7BirK,UAAWjrK,UACNzW,KAAK6vB,IAAI6xJ,aAId1hL,KAAK6hL,gBAAgBH,UAAWjrK,UAE5BzW,KAAKyhL,QAAQC,WAAWI,UAAU9kL,OAAS,GAC3CgD,KAAK+hL,gBAAgBL,4CAerBA,WACJ,GAAK1hL,KAAK6vB,IAAI6xJ,WAAd,CADwB,IAAA,IAKhBI,UAAc9hL,KAAKyhL,QAAQC,WAA3BI,UALgBn1J,KAAA9nB,UAAA7H,OAANuK,KAAM,IAAAyd,MAAA,EAAA2H,KAAAA,KAAA,EAAA,GAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAANrlB,KAAMqlB,KAAA,GAAA/nB,UAAA+nB,MAOxB,IAAK,IAAIvwB,EAAI,EAAGA,EAAIylL,UAAU9kL,OAAQX,IAClCylL,UAAUzlL,GAAVmU,MAAAsxK,UAAgBv6K,mCAWpBm6K,WACA,OAAO,EAAAtpF,MAAA,SAAKp4F,KAAKyhL,QAASC,gDAYjBA,UAAWjrK,UACpBzW,KAAKyhL,QAAQC,WAAWC,YAAYlrK,kDAYxBirK,UAAWjrK,UACvBzW,KAAKyhL,QAAQC,WAAWM,eAAevrK,kDAc3BirK,kBACL1hL,KAAKyhL,QAAQC,2UCjK5B,IAAA3oF,iBAAAv8F,QAAA,wTASqBylL,sBAKjB,SAAAA,WAAYthL,qIAAMmuF,CAAA9uF,KAAAiiL,YAQdjiL,KAAKW,KAAO,GASZX,KAAK8hL,UAAY,GAEjB9hL,KAAKojC,KAAKziC,mHAQTA,MACDX,KAAKW,KAAOA,uCAQZX,KAAKW,KAAO,GACZX,KAAK8hL,UAAY,uCAUTI,UACJliL,KAAKmiL,YAAYD,WAIrBliL,KAAK8hL,UAAUt+K,KAAK0+K,iDAUTA,UACX,GAAKliL,KAAKmiL,YAAYD,UAAtB,CAIA,IAAM7rK,MAAQrW,KAAK8hL,UAAUt1K,QAAQ01K,UACrCliL,KAAK8hL,UAAUtvK,OAAO6D,MAAO,wCAWrB6rK,UACR,OAAOliL,KAAK8hL,UAAUt1K,QAAQ01K,YAAcnpF,iBAAA4f,6aC9FpD,IAAA9f,MAAAr8F,QAAA,UACA6pG,gBAAA7pG,QAAA,+BAQa+yJ,IAAM,WACf,OAAiB,EAAVx8H,KAAK89B,yCAWY,SAACn0D,EAAGmK,GAG5B,IAAIq+B,QAAS,EAEb,IAJAxoC,GAAI,EAAA2pG,gBAAAwG,kBAAiBnwG,KACrBmK,GAAI,EAAAw/F,gBAAAwG,kBAAiBhmG,IAGV,CACPq+B,QAAS,EACT,IAAM1Q,KAAO93B,EAEbA,EAAImK,EACJA,EAAI2tB,KAGR,IAAIhP,QAAS,EAAAqzE,MAAAupF,KAAI1lL,EAAImK,EAAG,KAWxB,OAVa,IAAT2e,SACAA,QAAU,KAGV0f,SACA1f,SAAW,GAGfA,QAAS,EAAA6gF,gBAAAqD,kBAAiBlkF,mCAUG,SAAC68J,SAC9B,OAAe,GAAXA,QACOA,QAAU,IAGd,IAAOA,QAAU,+BAQK,SAACC,SAC9B,OAAe,GAAXA,QACOA,QAAU/yB,MAGdA,MAAS+yB,QAAU/yB,+BAmBC,SAACgzB,cAAeC,eAAgBC,YAAaC,cAExE,IACMC,sBAAuB,EAAAt8E,gBAAAqD,kBAAiB64E,eACxCK,oBAAqB,EAAAv8E,gBAAAqD,kBAAiB+4E,aACtCI,kBAAmB,EAAAx8E,gBAAAqD,kBAAiB64E,cAAgBE,aACpDK,mBAAoB,EAAAz8E,gBAAAqD,kBAAiB84E,eAAiBE,cAGtDhmL,EAAIq2B,KAAK4qF,IAAI5qF,KAAK6tF,IAAIiiE,iBAAmB,GAAI,GAC9C9vJ,KAAK69B,IAAI+xH,sBAAwB5vJ,KAAK69B,IAAIgyH,oBAAsB7vJ,KAAK4qF,IAAI5qF,KAAK6tF,IAAIkiE,kBAAoB,GAAI,GAK/G,OAFiC,EAAI/vJ,KAAKyvH,MAAMzvH,KAAK8vH,KAAKnmJ,GAAIq2B,KAAK8vH,KAAK,EAAInmJ,IAXpD,mMC5ErB,SAAaR,GAChB,OAAO62B,KAAKk7E,IAAI/xG,gBAQb,SAAaA,GAChB,OAAOA,EAAE0/H,OAAO,SAACl/H,EAAGmK,GAAJ,OAAUnK,EAAImK,IAAK3K,EAAEc,oBAOlC,SAAaN,GAChB,OAAOq2B,KAAK6tF,IAAIlkH,gBAOb,SAAaA,GAChB,OAAOq2B,KAAK69B,IAAIl0D,gBAOb,SAAaA,GAChB,OAAOq2B,KAAKwrH,IAAI7hJ,eAQb,SAAYR,GAAe,IAAZqP,OAAY,EAAA1G,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAH,EAC3B,OAAOkuB,KAAKC,MAAM92B,EAAIqP,QAAUA,wBAQ7B,SAAiBopB,IAAKC,MACzB,OAAO7B,KAAKC,MAAMD,KAAK+B,UAAYF,KAAOD,IAAM,IAAMA,eAQnD,SAAWt4B,GACd,OAAc,IAANA,EAAW,GAAK,uDAqCrB,SAAyBmJ,MAAOu9K,eACnC,IAAMC,WAAaD,cAAgBvjK,OAAOyjK,QACpCC,WAAaH,cAAgBvjK,OAAOyjK,QAE1C,OAAOE,SAAS39K,MAAOw9K,WAAYE,qCAWhC,WAAoC,IAAX19K,MAAW,EAAAX,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAH,EACpC,IAAK,EAAAk+H,WAAA,SAAUv9H,OAIf,OAAOqvB,MAAMrvB,MAAQ,GAHjB,MAAM,IAAI0sB,UAAJ,kDAAA1gB,OAAAiiG,QAAuEjuG,sBAa9E,SAAa49K,WAAYC,aAC5B,OAASD,WAAaC,YAAeA,aAAeA,gDAwDjD,SAAgB79K,MAAO89K,WAAYC,YACtC,IAAMC,iBAAmBF,WAAaC,YAAc,EAEpD,GAAI/9K,OAAS89K,YAAuBC,YAAT/9K,MACvB,OAAOA,MAGX,GAAIA,MAAQg+K,gBACR,OAAOF,WAGX,OAAOC,4CAmCJ,SAAiCE,UAAWC,YAAaC,UAAWC,UAAWC,WAGlF,OAAO9iF,OArBgB+iF,WAmBuBL,UAnBXM,WAmBsBL,YAnBVM,WAmBuBL,UAnBXM,WAmBsBL,UAnBVM,WAmBqBL,UAlBrFI,YAAcC,WAAaD,aAAeF,WAAaD,aAAeE,WAAaF,aAoBxDF,UAAWC,WArBjD,IAA2BC,WAAYC,WAAYC,WAAYC,WAAYC,kDA8BpE,WAGH,IAHsD,IAAZlnL,OAAY,EAAA6H,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAH,EAC7CW,MAAQ,GAELnJ,EAAI,EAAGA,EAAIW,OAAQX,IAAK,CAC7B,IAAM8nL,aAAc,EAAA94C,SAAA,SAAQ,EAAG,GAE/B7lI,MAAMhC,KAAK2gL,aAGf,OAAO,EAAAz2C,kBAAAS,SAAQ3oI,MAAMtB,KAAK,IAAKlH,SA5QnC,IAAA+lI,WAAAh1C,uBAAAvxF,QAAA,oBACA6uI,SAAAt9C,uBAAAvxF,QAAA,kBACAkxI,kBAAAlxI,QAAA,sXAMO,SAASq4B,MAAM34B,GAAe,IAAZ84G,OAAY,EAAAnwG,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAH,EAC9B,OAAOkuB,KAAK8B,MAAM34B,EAAI84G,QAAUA,OAoF7B,SAASmuE,SAAS39K,MAAO4+K,OAAQC,QACpC,GAAaA,OAATD,OAAiB,CACjB,IAAME,UAAYF,OAClBA,OAASC,OACTA,OAASC,UAGb,OAAOF,QAAU5+K,OAASA,OAAS6+K,OA2DhC,SAAStjF,MAAMx0B,IAAKg4G,cAA8B,IACjD/vJ,KADiCw4B,IAAgB,EAAAnoD,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAV61B,EAAAA,EAG3C,KAAK,EAAAqoG,WAAA,SAAUwhD,cACX,MAAM,IAAIryJ,UAAU,6DAGxB,OAAI86B,MAAQtyB,EAAAA,EACE6pJ,aAANh4G,IACOA,IAGJg4G,cAGDv3H,IAANuf,MACA/3C,KAAOw4B,IACPA,IAAMuf,IACNA,IAAM/3C,MAGA+vJ,aAANh4G,IACOA,IAGPvf,IAAMu3H,aACCv3H,IAGJu3H,wPCpLe,SAAC7nL,EAAGmK,GAC1B,IAAMytB,EAAI53B,EAAE,GAAKmK,EAAE,GACb0tB,EAAI73B,EAAE,GAAKmK,EAAE,GAEnB,OAAOksB,KAAK8vH,KAAMvuH,EAAIA,EAAMC,EAAIA,qJCwB7B,SAAmCm/B,MAAO8wH,WAG7C,OAAQ9wH,MAAQA,OAFS,MAEoB3gC,KAAKwrH,IAAIimC,gKA4CnD,SAAwB5nC,cAAeC,aAC1C,OAAO,EAAAjvC,QAAAsW,UAAQ,EAAAtW,QAAAG,MAAK8uC,YAAaD,mCAiB9B,SAAmB7qD,SAAU3tD,QAAkC,IAA1BqgJ,kBAA0B,EAAA5/K,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAN,KACvD4/K,oBACDA,kBAAoB1yF,SAASoW,SAGjC,IAAM3iF,OAAS,CAAC,EAAG,EAAG,GAChBk/J,QAAS,EAAA92E,QAAAG,MAAK3pE,OAAQ2tD,SAAS8J,kBAC/B8oF,iBAAkB,EAAA/2E,QAAAsW,SAAQwgE,QAMhC,OAJAl/J,OAAO,IAAK,EAAAooF,QAAAE,MAAK42E,QACjBl/J,OAAO,GAAKA,OAAO,IAAK,EAAAqzE,MAAA+nB,KAAI6jE,kBAAoBE,iBAChDn/J,OAAO,GAAKA,OAAO,IAAK,EAAAqzE,MAAAjoC,KAAI6zH,kBAAoBE,iBAEzCn/J,gDAgDJ,SAAyCusE,SAAU6yF,yBACtD,IAAMC,kBAAoB9yF,SAASqY,IAAI2pB,aAEvC,IAAKhiC,SAASqY,IAAI4d,mBAAqB68D,kBAAkB59D,iBACrD,OAAO,EAJoE,IAUzE7K,cAAkBrqB,SAAlBqqB,cAEFA,cAAgB,IAChBA,gBAAiB,EAAAlW,QAAAqpD,QAGrB,IAAMu1B,SAAW7+E,mBAAAqZ,YAAY8G,UACvB2+D,iBAxDV,SAAoCC,6BAA8BC,iCAC9D,IAAIF,kBAAmB,EAAAn3E,QAAAsW,UAAQ,EAAAtW,QAAAG,MAAKi3E,6BAA8BC,kCAG9DF,iBAAmB,IACnBA,mBAAoB,EAAA7+E,QAAAqpD,QAGxB,OAAOw1B,iBAgDkBG,CACrBL,kBAAkBhpF,iBAClB+oF,wBAAwB/oF,kBAEtBspF,aA3CV,SAAyC7+C,eAAgBy+C,kBACrD,IAAII,cAAe,EAAAtsF,MAAAoV,MAAI,EAAA5H,gBAAAwG,kBAAiBy5B,iBAAkB,EAAAjgC,gBAAAwG,kBAAiBk4E,mBAExD,IAAfI,eACAA,aAAe,IAAMA,cAGzB,OAAO,EAAA9+E,gBAAAqD,kBAAiBy7E,cAoCHC,CAAgChpE,cAAe2oE,kBAGpE,OAFiCM,6BAA6BtzF,SAASyoB,YAAasqE,SAAUK,+CAW3F,SAAiCG,YAAa3mC,WACjD,OAAO,EAAA9lD,MAAAoV,MAAI,EAAA/H,QAAAwK,cAAa40E,YAAa3mC,aApMzC,IAAA9lD,MAAAr8F,QAAA,UAKA0pG,QAAA1pG,QAAA,YAIAoxG,QAAApxG,QAAA,YAKA6pG,gBAAA7pG,QAAA,+BAIAypG,mBAAAzpG,QAAA,kCAsCO,SAAS+oL,yBAAyB7xH,MAAOoxH,UAC5C,OAAOpxH,OAAoB,IAAXoxH,SAAiB,IAa9B,SAASO,6BAA6B3xH,MAAOoxH,SAAUK,cAG1D,OAFqBI,yBAAyB7xH,MAAOoxH,UAE/B/xJ,KAAKwrH,IAAmB,GAAf4mC,qkBCzEnC,IAAAvrE,UAAA7rB,uBAAAvxF,QAAA,mBACAspG,MAAA/X,uBAAAvxF,QAAA,eACAq8F,MAAAr8F,QAAA,UAMA0pG,QAAA1pG,QAAA,YACA6pG,gBAAA7pG,QAAA,4fAOO,IAAMsxG,KAAO,SAACz3D,GACjB,IACI,OAAOtjB,KAAK8vH,KAAMxsG,EAAE,GAAKA,EAAE,GAAOA,EAAE,GAAKA,EAAE,IAC7C,MAAOrzC,KACLypB,QAAQ1U,MAAR,4BAAAvG,OAA0C6kC,EAA1C,WAAA7kC,OAAqDxO,0CAWtC,SAACqzC,GACpB,OAAOtjB,KAAKyvH,MAAMnsG,EAAE,GAAIA,EAAE,KAWvB,IAAM03D,KAAO,SAACy3E,GAAIC,IACrB,IAKI,IAJA,IAAMpvI,EAAI,GACJ8uF,MAAQpyG,KAAKw5C,IAAIi5G,GAAGxoL,OAAQyoL,GAAGzoL,QAG5BX,EAAI,EAAGA,EAAI8oI,MAAO9oI,IACvBg6C,EAAE7yC,KAAKgiL,GAAGnpL,GAAKopL,GAAGppL,IAGtB,OAAOg6C,EACT,MAAOrzC,KACLypB,QAAQ1U,MAAR,8BAAAvG,OAA4Cg0K,GAA5C,UAAAh0K,OAAuDi0K,GAAvD,YAAAj0K,OAAoExO,0BAarE,IAAM0iL,MAAQ,SAACrvI,EAAGr5C,QACrB,IAAMs3B,EAAI+hB,EAAE,GACN9hB,EAAI8hB,EAAE,GACNy2D,MAAQ/5E,KAAKyvH,MAAMluH,EAAGC,GAM5B,OAJKv3B,SACDA,OAAS,GAGN,EACH,EAAA67F,MAAA+nB,KAAI9T,OAAS9vG,QACb,EAAA67F,MAAAjoC,KAAIk8C,OAAS9vG,6BAUd,IAAMsnH,uBAAyB,SAACqhE,eAInC,OAFAA,eAAgB,EAAAz/E,QAAAuD,mBAAkBk8E,eAE3B,EACH,EAAA9sF,MAAA+nB,KAAI+kE,gBACJ,EAAA9sF,MAAAjoC,KAAI+0H,sGAU0B,SAACA,eACnC,OAAOrhE,wBAAuB,EAAAje,gBAAAqD,kBAAiBi8E,iBAM5C,IAAMphE,KAAO,SAACihE,GAAIC,IAErB,IAKI,IAJA,IAAMpvI,EAAI,GACJ8uF,MAAQpyG,KAAKw5C,IAAIi5G,GAAGxoL,OAAQyoL,GAAGzoL,QAG5BX,EAAI,EAAGA,EAAI8oI,MAAO9oI,IACvBg6C,EAAE7yC,KAAKgiL,GAAGnpL,GAAKopL,GAAGppL,IAGtB,OAAOg6C,EACT,MAAOrzC,KACLypB,QAAQ1U,MAAR,6BAAAvG,OAA2Cg0K,GAA3C,UAAAh0K,OAAsDi0K,GAAtD,WAAAj0K,OAAkExO,0BA+CnE,IAAMqhH,OAAS,SAACuhE,QAAS5wE,QAC5B,OAAO,EAAAlP,MAAA,SAAK8/E,QAAS,SAACvvI,GAAD,OAAOA,EAAI2+D,gCAsBpC,IAAM6wE,KAAO,SAAPA,KAAQL,GAAIC,GAAmBK,IACjC,OAAuC,IAAnC/yJ,KAAKw5C,IAAIi5G,GAAGxoL,OAAQyoL,GAAGzoL,QAEfwoL,GAAG,GAAKC,GAAG,GAAOD,GAAG,GAAKC,GAAG,GACgB,IAA9C1yJ,KAAKw5C,IAAIi5G,GAAGxoL,OAAQyoL,GAAGzoL,OAAQ8oL,GAAG9oL,SAAiB8oL,GAGtDN,GAAG,GACHK,KAAK,CAACJ,GAAG,GAAIA,GAAG,IAAK,CAACK,GAAG,GAAIA,GAAG,KAAON,GAAG,GAC1CK,KAAK,CAACJ,GAAG,GAAIA,GAAG,IAAK,CAACK,GAAG,GAAIA,GAAG,KAAON,GAAG,GAC1CK,KAAK,CAACJ,GAAG,GAAIA,GAAG,IAAK,CAACK,GAAG,GAAIA,GAAG,UANjC,GAiBLC,IAAM,SAANA,IAAOP,GAAIC,IACb,OAAuC,IAAnC1yJ,KAAKw5C,IAAIi5G,GAAGxoL,OAAQyoL,GAAGzoL,QAEhB+oL,IAAI,CAACP,GAAG,GAAIA,GAAG,GAAI,GAAI,CAACC,GAAG,GAAIA,GAAG,GAAI,IAAI,GAGd,IAAnC1yJ,KAAKw5C,IAAIi5G,GAAGxoL,OAAQyoL,GAAGzoL,QAEhB,CACH6oL,KAAK,CAACL,GAAG,GAAIA,GAAG,IAAK,CAACC,GAAG,GAAIA,GAAG,MAC/BI,KAAK,CAACL,GAAG,GAAIA,GAAG,IAAK,CAACC,GAAG,GAAIA,GAAG,KACjCI,KAAK,CAACL,GAAG,GAAIA,GAAG,IAAK,CAACC,GAAG,GAAIA,GAAG,WALxC,iBAaiB,SAACnD,QAASjsI,GACtBA,IACDA,EAAI,CAAC,EAAG,IAGZ,IAAM/hB,EAAI+hB,EAAE,GACN9hB,EAAI8hB,EAAE,GACN2vI,IAAK,EAAAntF,MAAAjoC,MAAK0xH,SACV2D,IAAK,EAAAptF,MAAA+nB,MAAK0hE,SAEhB,MAAO,CACHhuJ,EAAI0xJ,GAAKzxJ,EAAI0xJ,GACb3xJ,EAAI2xJ,GAAK1xJ,EAAIyxJ,2BAQQ,SAACE,KAAMC,KAAMC,KAAMC,KAAMC,eAC7CA,gBAEDA,cAAgB,GAGpB,IAAMzpL,EAAIqpL,KACJlxJ,EAAIoxJ,KACJpqL,EAAIsoH,uBAAuB6hE,MAC3BxvJ,EAAI2tF,uBAAuB+hE,MAC3BlqL,GAAI,EAAA08F,MAAAoV,KAAI83E,IAAIh4E,KAAK/4E,EAAGn4B,GAAI85B,GAAKovJ,IAAI/pL,EAAG26B,IACpC4vJ,QAAS,EAAA1tF,MAAAoV,KAAI83E,IAAIh4E,KAAK23E,MAAM1wJ,GAAI0wJ,MAAM7oL,IAAK85B,GAAKovJ,IAAI/pL,EAAG26B,IACvD6vJ,QAAS,EAAA3tF,MAAAoV,KAAI83E,IAAIh4E,KAAK23E,MAAM1wJ,GAAI0wJ,MAAM7oL,IAAKb,GAAK+pL,IAAI/pL,EAAG26B,IAE7D,OAAI,EAAAkiE,MAAAoV,KAAI83E,IAAI/pL,EAAG26B,KAAM,EAAAkiE,MAAAoV,KAAI83E,IAAI,CAAC,EAAG,GAAIzhE,wBAAuB,EAAAje,gBAAAqD,kBAAiB48E,kBAOpD,IALAP,IACjBh4E,KAAK23E,MAAM1wJ,GAAI0wJ,MAAM7oL,IACrBb,GAUc,GAAVuqL,QAAeA,QAAU,GAAiB,GAAVC,QAAeA,QAAU,GAE1DjiE,KAAK1nH,EAAGwnH,OAAOroH,EAAGG,KAWjC,IAmCauxH,iBAAmB,SAACusB,MAAOzsB,MACpC,IAAMi5D,OAAQ,EAAA3gF,MAAA,SAAK0nB,KAAM,SAACk5D,QAASrqL,GAC/B,IAAM0sB,MAAc,IAAN1sB,EAAUmxH,KAAKxwH,OAASX,GAAK,EACrCsqL,QAAUn5D,KAAKzkG,MACf69J,KAAO74E,KAAK44E,QAASD,SAE3B,GAAmB,IAAf54E,KAAK84E,MACL,OAAO94E,KAAKC,KAAKksC,MAAOysC,UAI5B,IA9CQrwI,EAuDJ2lE,EACAlwF,EAVE+6J,KA7CH,GADKxwI,EA8CYuwI,MA7Cb,GAAIvwI,EAAE,IA8CPywI,GAAK7sC,MAAM,GACX8sC,GAAKF,KAAK,GACVG,GAAKN,QAAQ,GACbO,GAAKL,KAAK,GACVM,GAAKjtC,MAAM,GACXktC,GAAKN,KAAK,GACVO,GAAKV,QAAQ,GACbW,GAAKT,KAAK,GAYhB,OARW,IAAPO,GAEAnrE,GAAKorE,IADLt7J,GAAKk7J,GAAKF,GAAKC,GAAKK,GAAKD,GAAKJ,GAAKG,GAAKC,KAAOJ,GAAKM,GAAKF,GAAKF,KAChDI,GAAKH,IAAMC,GACX,IAAPJ,KAEP/qE,GAAKgrE,IADLl7J,GAAKs7J,GAAKF,GAAKC,GAAKH,GAAKD,GAAKI,GAAKL,GAAKC,KAAOI,GAAKF,GAAKF,GAAKM,KAChDJ,GAAKH,IAAMC,IAGzBj7J,EAAI,GAAS,EAAJA,IAAUA,EACZiH,KAAKw5C,IACRuhC,KAAKC,KAAKksC,MAAOysC,UACjB54E,KAAKC,KAAKksC,MAAO0sC,WAIlB74E,KAAKuW,OAAOwiE,KAAM7qE,MAG7B,OAAOjpF,KAAKw5C,IAAL/7D,MAAAuiB,KAAIgpE,mBAAQ0qF,mDAIhB,IAAMl5D,cAAgB,SAAC0sB,MAAOqtC,IAGjC,IAAMhzJ,EAAI2lH,MAAM,GACV1lH,EAAI0lH,MAAM,GACZnuH,EAAIw7J,GAAGtqL,OAAS,EAChBm/G,QAAS,EAiBb,OAdA,EAAAvC,UAAA,SAAS0tE,GAAI,SAAC95D,KAAMnxH,GAChB,IAAMkrL,GAAK/5D,KAAK,GACVg6D,GAAKh6D,KAAK,GACVi6D,GAAKH,GAAGx7J,GAAG,GACX47J,GAAKJ,GAAGx7J,GAAG,GACQyI,EAALizJ,IAAkBjzJ,EAALmzJ,IAAapzJ,GAAKmzJ,GAAKF,KAAOhzJ,EAAIizJ,KAAOE,GAAKF,IAAMD,KAGjFprE,QAAUA,QAGdrwF,EAAIzvB,IAGD8/G,mEAUmB,SAAC89B,MAAO0tC,OAElC,IAAIxrE,QAAS,EAoBb,OAlBA,EAAAvC,UAAA,SAAS+tE,MAAO,SAACC,KAAM5rE,GAGnB,GAAIuR,cAAc0sB,MAAO2tC,MAOrB,OANU,IAAN5rE,IAEAG,QAAS,GAIN,CACHA,QAAQ,EACRngB,SAAU0xB,iBAAiBusB,MAAO2tC,SAMvC,CACHzrE,OAAQA,OACRngB,SAAU0xB,iBAAiBusB,MAAO0tC,MAAM,MASzC,IAAME,aAAe,SAAC3rE,MACzB,OAAO,EAAApW,MAAA,SAAKoW,KAAKsR,KAAM,SAACn3E,GAAD,OAAOA,EAAEwlD,4EAMP,SAACo+C,MAAO/9B,MACjC,OAAOqR,cAAc0sB,MAAO4tC,aAAa3rE,gDAoBE,SAAC7rD,IAAK9mB,IAAKu+I,QAASC,UAC/D,IAII5rL,EACAm4B,EACAC,EANEm7B,KAAOo4H,QAAQ,GACfl9H,MAAQk9H,QAAQ,GAAKC,SAAS,GAC9BlxK,IAAMixK,QAAQ,GACdE,OAASF,QAAQ,GAAKC,SAAS,GAQrC,GAHAx+I,IAAMm8I,MAAMn8I,MAGR,EAAAsvD,MAAAkI,OAAMrxC,KAAMW,IAAI,GAAIzF,SAAWyF,IAAI,KAAM,EAAAwoC,MAAAkI,OAAMlqF,IAAKw5C,IAAI,GAAI23H,UAAY33H,IAAI,GAKhF,OAAI9mB,IAAI,GAAK,IACTptC,GAAK0a,IAAMw5C,IAAI,IAAM9mB,IAAI,GACzBjV,EAAI+7B,IAAI,GAAK9mB,IAAI,GAAKptC,GAElB,EAAA08F,MAAAkI,OAAMrxC,KAAMp7B,EAAGs2B,SAAWt2B,GACnB,CAACA,EAAGzd,KAKN,EAAT0yB,IAAI,KACJptC,GAAK6rL,OAAS33H,IAAI,IAAM9mB,IAAI,GAC5BjV,EAAI+7B,IAAI,GAAK9mB,IAAI,GAAKptC,GAElB,EAAA08F,MAAAkI,OAAMrxC,KAAMp7B,EAAGs2B,SAAWt2B,GACnB,CAACA,EAAG0zJ,QAKfz+I,IAAI,GAAK,IACTptC,GAAKuzD,KAAOW,IAAI,IAAM9mB,IAAI,GAC1BhV,EAAI87B,IAAI,GAAK9mB,IAAI,GAAKptC,GAElB,EAAA08F,MAAAkI,OAAMlqF,IAAK0d,EAAGyzJ,UAAYzzJ,GACnB,CAACm7B,KAAMn7B,GAKT,EAATgV,IAAI,KACJptC,GAAKyuD,MAAQyF,IAAI,IAAM9mB,IAAI,GAC3BhV,EAAI87B,IAAI,GAAK9mB,IAAI,GAAKptC,GAElB,EAAA08F,MAAAkI,OAAMlqF,IAAK0d,EAAGyzJ,UAAYzzJ,GACnB,CAACq2B,MAAOr2B,QALvB,4OCrgBJ,IAAA2xE,QAAA1pG,QAAA,kBACA29G,YAAA39G,QAAA,sBACA01G,UAAA11G,QAAA,4SASqByrL,2BAOjB,SAAAA,gBAAYj0B,UAA0C,IAAhCH,OAAgC,EAAAhvJ,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAvB,EAAGqjL,YAAoB,EAAArjL,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAN,oIAAMiqF,CAAA9uF,KAAAioL,iBAUlDjoL,KAAKmoL,SAAW,KAUhBnoL,KAAKg0J,SAAWA,SAWhBh0J,KAAKkyG,UAAY,KAUjBlyG,KAAKsuJ,OAAS,KAWdtuJ,KAAKooL,UAAY,KAWjBpoL,KAAKqoL,MAAQ,KAWbroL,KAAKsoL,UAAYJ,YAWjBloL,KAAK8zJ,QAAUD,OAEf7zJ,KAAK00F,MAAMwzF,gIA+FTA,aACkB,OAAhBA,cACAA,YAAYG,MAAQroL,MAEfuoL,4EAgBT,IAAM3jL,MAAQ5E,KAAKszJ,WACb3mJ,IAAM3M,KAAKg0J,SAEjBh0J,KAAKooL,UAAY,EACZxjL,MAAM,GAAK+H,IAAI,IAAM,GACrB/H,MAAM,GAAK+H,IAAI,IAAM,GAE1B3M,KAAKmoL,UAAW,EAAAhuE,YAAAquE,gBAAe5jL,MAAO+H,KACtC3M,KAAKkyG,WAAY,EAAAA,UAAA4C,YAAWlwG,MAAO+H,+CAcnC,IAAMkxH,QAAU79H,KAAKmmB,KAErB,GAAgB,OAAZ03G,QACA,OAAO,EAMX,IAAM7tB,GAAKhwG,KAAK+qI,QACV96B,GAAKjwG,KAAKmmB,KAAK4kH,QAAUh4G,KAAK89B,GAC9B43H,WAAa11J,KAAKw5C,IAAIvsE,KAAKg8F,SAAU6hC,QAAQ7hC,UAAY,EACzD0sF,kBAAoB31J,KAAKk7E,KAAI,EAAA/H,QAAAwK,cAAaV,GAAIC,KAGpD,OAFoB,EAAIl9E,KAAKyvH,MAAMxiJ,KAAK8zJ,QAAS20B,aAE1CC,kDA7IP,OAAO1oL,KAAKmoL,0CAWZ,OAAOnoL,KAAKkyG,2CAWZ,OAAOlyG,KAAKooL,uCAWZ,OAAOpoL,KAAKqoL,uCAWZ,OAAOroL,KAAKsoL,yCAWZ,IAAMz0B,OAAS7zJ,KAAK8zJ,QAGpB,OAAe,IAAXD,OACOA,OAGJ7zJ,KAAK2oL,kBAAoB90B,OAAS,qCAWzC,OAA0B,OAAnB7zJ,KAAKsoL,UAAqB,KAAOtoL,KAAKsoL,UAAUt0B,uXC7L/D,IAAAjuD,QAAAhY,uBAAAvxF,QAAA,iBACA0pG,QAAA1pG,QAAA,kBACA29G,YAAA39G,QAAA,sBACA01G,UAAA11G,QAAA,oBACA6pG,gBAAA7pG,QAAA,+BAKAosL,iBAAA76F,uBAAAvxF,QAAA,sBACAo1G,eAAA7jB,uBAAAvxF,QAAA,8BACAqsL,UAAA96F,uBAAAvxF,QAAA,kCACAw8F,gBAAAx8F,QAAA,+BACAu8F,iBAAAv8F,QAAA,whCAYqBssL,uBAOjB,SAAAA,YAAYtrI,sIAAOsxC,CAAA9uF,KAAA8oL,aAYf9oL,KAAK+oL,QAAU,GAWf/oL,KAAKgpL,OAASxrI,MAEdx9C,KAAK00F,2JAuFAlvF,OACLxF,KAAKipL,qBAAqBzjL,OAE1BxF,KAAK+oL,QAAQvlL,KAAKgC,+CAUN,IAAAyO,MAAAjU,KACZ,IAAKA,KAAKkpL,QACN,OAAO,KAFC,IAMJn3F,SAAa/xF,KAAb+xF,SACFyoB,YAA2B,OAAbzoB,SAAoB,KAAOA,SAASyoB,YAClD44C,YAAcpzJ,KAAKmpL,8BACnBC,WAAUrtF,mBAAO/7F,KAAK+oL,SACxBl1B,OAAS,EAEO,OAAhBT,aAAwBpzJ,KAAKqpL,gBAC7Bx1B,OAAST,YAAYQ,YAIzB,IAAM01B,cAAgB,CAClBpB,YAAa,KACbqB,cAAe,EACfC,cAAe,GAKnB,GAAoB,OAAhBp2B,YAAsB,CAAA,IACdt+B,UAAcs+B,YAAdt+B,UAERw0D,cAAcG,UAAY30D,UAE1Bs0D,WAAW,GAAKt0D,UAIpB,IAAMu+B,WAAarzJ,KAAK0pL,qBAAqBN,WAAW3gL,SAClDkhL,WAAa,IAAIf,iBAAA,QAAgBv1B,YA+CvC,OA9CAi2B,cAAcpB,YAAcyB,WAE5BP,WAAWxtD,OAAO,SAACguD,WAAY3vC,MAAO5jI,OAAU,IACpC6xK,YAAgB0B,WAAhB1B,YACFqB,cAAiCK,WAAjCL,cAAeC,cAAkBI,WAAlBJ,cACf9sD,IAAM,IAAIksD,iBAAA,QACZ30K,MAAKy1K,qBAAqBzvC,OAC1B4Z,OACAq0B,aAEEn9C,SAAU,EAAA1kC,gBAAAqF,mBAAkBgxB,IAAIqO,SAClC/uC,UAAW,EAAAqK,gBAAA0f,IAAG2W,IAAI1gC,UAClB5rC,SAAW,EAYf,GATc,IAAV/5C,OAA+B,OAAhB+8I,cACfp3D,WAAY,EAAAqK,gBAAA0f,IAAGqtC,YAAYy2B,YAGX,OAAhBrvE,cACApqD,UAAW,EAAA21C,QAAA,SAAQ/J,SAAWwe,YAAezhB,iBAAAimB,KAAKQ,oBAAqB,IAI5D,EAAXxjB,SAAc,CACd,IAAMsyD,OAAS,CACXr6I,MAAK61K,YAAY9tF,SAAU5rC,SAAU26E,UAGzCw+C,eAAiBvtF,SACjBwtF,eAAgB,EAAAzjF,QAAA,SAAOyjF,cAAgBp5H,SAAU,GAE7Cm5H,gBAAkBvtF,UAClBsyD,OAAO9qJ,KAAKyQ,MAAK61K,YAAYP,cAAeC,gBAGhD9sD,IAAI4xB,OAASA,OAGjB,MAAO,CACH45B,YAAaxrD,IACb6sD,cAAAA,cACAC,cAAAA,gBAELF,eAEI,CACHl2B,YAAAA,YACAV,SAAUi3B,WAAWxjK,gDAYzBnmB,KAAK+oL,QAAQn0K,oDASK,IAGV5X,OAAWgD,KAAK+oL,QAAhB/rL,OAEK,EAATA,QACAgD,KAAK+oL,QAAQv2K,OAAOxV,OAAS,EAAG,oCAc/BwgD,OACLx9C,KAAKgpL,OAASxrI,8CAaFh4C,OACZxF,KAAKipL,qBAAqBzjL,OAErBxF,KAAK28F,aAIL38F,KAAKkpL,QAMVlpL,KAAK+oL,QAAQ/oL,KAAK+oL,QAAQ/rL,OAAS,GAAKwI,MALpCxF,KAAK68F,SAASr3F,8DAmBlB,IAAKxF,KAAK+pL,oBACN,OAAO,KAFe,IAKlBh4F,SAAa/xF,KAAb+xF,SAER,GAAiB,OAAbA,SACA,OAAO,KARe,IA6CtBi4F,UAlCIxvE,YAA6BzoB,SAA7ByoB,YAAaxJ,YAAgBjf,SAAhBif,YAEf4iD,YAAa,EAAAvtD,gBAAAyS,IAAG0B,aAAesqE,GAAgB/xJ,KAAK89B,KACpDjsD,MAAQmtF,SAAS8J,iBACjBt4C,IAAMvjD,KAAKiqL,4BAA4B,GAGvCC,cAAe,EAAA/vE,YAAAquE,gBAAe5jL,MAAO2+C,KACrCkwG,OAAQ,EAAAvtD,QAAAuD,mBAAkBygF,aAAel5E,aAAej+E,KAAK89B,GAC7Dq3C,UAAYurD,MAAQ,GAAK,EAGzB02B,gBAAkBn5E,YAAe9I,UAAYn1E,KAAK89B,GAAK,EACvDolF,OAAS,CACXrxI,MAAM,GAAMgvJ,WAAa7gI,KAAK6tF,IAAIupE,iBAClCvlL,MAAM,GAAMgvJ,WAAa7gI,KAAK69B,IAAIu5H,kBAIhCC,oBAAqB,EAAAjwE,YAAAquE,gBAAevyC,OAAQ1yF,KAC5C8mI,qBAAsB,EAAAn4E,UAAA4C,YAAWmhC,OAAQ1yF,KACzC+mI,eAAiBF,mBAAsBliF,UAAYn1E,KAAKoxF,KAAKyvC,WAAay2B,qBAG1E32B,WAAay2B,gBAAkBp3J,KAAK89B,GACpC8iG,UAAY22B,eAAkBpiF,UAAYn1E,KAAK89B,GAAK,EAGpDikE,UAAY,CACdmhB,OAAO,GAAM2d,WAAa7gI,KAAK6tF,IAAI+yC,WACnC1d,OAAO,GAAM2d,WAAa7gI,KAAK69B,IAAI+iG,YAYvC,OANIq2B,UADAv2B,MACYE,UAAYD,WAEZA,WAAaC,UAItB,CACHF,MAAAA,MACAG,WAAAA,WACAi2B,UALcj2B,YAAa,EAAA1tD,QAAAuD,mBAAkBugF,WAM7Ct2B,WAAAA,WACAC,UAAAA,UACA1d,OAAAA,OACAnhB,UAAAA,+CAeI94B,SAAU5rC,UAA0B,IAAhB26E,QAAgB,EAAAlmI,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAN,KAClCizF,MAAK,GAAAtmF,OAAMwqF,SAASuuF,YAAY,GAA3B,OAUT,OARiB,IAAbn6H,WACA0nC,OAAK,KAAAtmF,OAAS4+C,SAASg0C,QAAQ,GAA1B,SAGO,OAAZ2mC,UACAjzC,OAAK,KAAAtmF,OAASu5H,QAAT,QAGFjzC,0DAWiBzhF,OACxB,IAAM4jI,MAAQj6I,KAAK+oL,QAAQ1yK,OAE3B,OAAOrW,KAAK0pL,qBAAqBzvC,oDAWhBA,OACjB,OAAOA,MAAMp+C,kBAAoBo+C,mDAUhBz0I,OACjB,KAAMA,iBAAiBwf,OAASxf,iBAAiBosG,eAAA,SAAiBpsG,iBAAiBqjL,UAAA,SAC/E,MAAM,IAAI32J,UAAJ,mBAAA1gB,OAAAiiG,QAAwCjuG,OAAxC,wFA3XV,OAAKxF,KAAK28F,YAAgB38F,KAAK+oL,QAAQ,aAAcn3E,eAAA,QAI9C5xG,KAAK+oL,QAAQ,GAHT,qCAcX,OAA6B,EAAtB/oL,KAAK+oL,QAAQ/rL,0CAYpB,OAA+B,IAAxBgD,KAAK+oL,QAAQ/rL,mDAYpB,OAAOgD,KAAKgpL,SAAWhwF,gBAAA6yE,mBAAmBE,aACtC/rK,KAAKgpL,SAAWhwF,gBAAA6yE,mBAAmBG,gDAYvC,OAAOhsK,KAAKgpL,SAAWhwF,gBAAA6yE,mBAAmBG,skBCvHlD,IAAA79E,UAAAJ,uBAAAvxF,QAAA,oBACAguL,aAAAz8F,uBAAAvxF,QAAA,kBACA42F,gBAAArF,uBAAAvxF,QAAA,2BACA+xF,YAAA/xF,QAAA,2BACAw8F,gBAAAx8F,QAAA,+BACAs8F,qBAAAt8F,QAAA,uZAkTe,eApSX,SAAAiuL,6IAAc37F,CAAA9uF,KAAAyqL,aAUVzqL,KAAK0qL,aAAe,KAQpB1qL,KAAKk0F,UAAY/F,UAAA,QAYjBnuF,KAAK2qL,OAAS,GAWd3qL,KAAKgpL,OAAS,KAEdhpL,KAAK00F,QACAuf,iBACA7hB,0HAgDL,OAFApyF,KAAK4qL,SAASx3F,gBAAA,QAAeiS,cAAcvM,qBAAAqI,kBAAkBiqE,oBAEtDprK,8CAYP,OAFAA,KAAK6qL,gCAAkC7qL,KAAK8qL,yBAAyBp4H,KAAK1yD,MAEnEA,uCAWP,OAFAA,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAMy5E,0BAA2BzqK,KAAK6qL,iCAElD7qL,sCAWP,OAFAA,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAMy5E,0BAA2BzqK,KAAK6qL,iCAEjD7qL,qCAQPA,KAAK2qL,OAAS,GACd3qL,KAAK0qL,aAAe,sCAefllL,OACLxF,KAAK+qL,uBAEL/qL,KAAK0qL,aAAa7tF,SAASr3F,+CAW3B,OAAOxF,KAAK2qL,OAAO/uD,OAAO,SAAC1rH,KAAMrO,MAK7B,OAJIA,KAAKqnL,SACLh5K,KAAK1M,KAAK3B,KAAKywJ,iBAGZpiJ,MACR,sCAUHlQ,KAAK+qL,uBAIL/qL,KAAK0qL,aAAaM,kBAGbhrL,KAAK0qL,aAAaxB,SACnBlpL,KAAK2qL,OAAO/1K,MAGhB5U,KAAK0qL,aAAe,mDAUpB1qL,KAAK+qL,uBAEL/qL,KAAK0qL,aAAa5tF,6DAUlB,GAAI98F,KAAKg9F,YACL,MAAM,IAAIrgG,MAAM,gEAGpB,IAAMkF,KAAO,IAAI2oL,aAAA,QAAYxqL,KAAKgpL,QAElChpL,KAAK2qL,OAAOnnL,KAAK3B,MACjB7B,KAAK0qL,aAAe7oL,sCAaf27C,OACL,IAAMytI,QAAUrgK,OAAO8R,KAAKs8D,gBAAA6yE,oBAAoBhxI,KAAK,SAACmhF,GAClD,OAAOhjB,gBAAA6yE,mBAAmB7vD,KAAOx+D,QAGrCx9C,KAAKgpL,OAASiC,QAAUztI,MAAQw7C,gBAAA6yE,mBAAmBC,SAEnD9rK,KAAK2qL,OAAOj3J,QAAQ,SAAC7xB,MAAD,OAAUA,KAAK+oL,SAASptI,iDAahCh4C,OACZxF,KAAK+qL,uBAEL/qL,KAAK0qL,aAAa9tF,gBAAgBp3F,wDAebg4C,OACrBx9C,KAAK4qL,SAASptI,sDAUd,IAAKx9C,KAAKg9F,YACN,MAAMrgG,MAAK,oDAAA6U,OAAqDxR,KAAKg9F,+CApOzE,OAA8B,IAAvBh9F,KAAK2qL,OAAO3tL,0CAYnB,OAAOgD,KAAKg9F,aAAeh9F,KAAK0qL,aAAa/tF,+CAW7C,OAA6B,OAAtB38F,KAAK0qL,0dClGpB,IAAA9wE,UAAA7rB,uBAAAvxF,QAAA,mBACAq9G,UAAA9rB,uBAAAvxF,QAAA,mBACAspG,MAAA/X,uBAAAvxF,QAAA,eACA+2F,mBAAAxF,uBAAAvxF,QAAA,wBACA25H,eAAApoC,uBAAAvxF,QAAA,qDACAu8F,iBAAAv8F,QAAA,0YAEqB0uL,uBACjB,SAAAA,YAAYr7F,KAAMs7F,UACd,iIADwBr8F,CAAA9uF,KAAAkrL,cACpB,EAAArxE,UAAA,SAAShqB,MACT,MAAM,IAAI39D,UAAU,0EAGxB,IAAI,EAAA2nF,UAAA,SAASsxE,UACT,MAAM,IAAIj5J,UAAJ,4CAAA1gB,OAA0Dq+E,KAA1D,yBAGV7vF,KAAKorL,mBAAqB,GAE1BprL,KAAKqrL,MAAQ,GAEbrrL,KAAKojC,KAAKysD,KAAMs7F,wHAoBft7F,KAAMs7F,UAMP,OALAnrL,KAAKorL,mBAAqBD,SAC1BnrL,KAAKqrL,MAAQx7F,KAEb7vF,KAAKsrL,wCAAwCH,UAEtCnrL,qCAOP,OAHAA,KAAKorL,mBAAqB,GAC1BprL,KAAKqrL,MAAQ,GAENrrL,qEAG6BmrL,UAAU,IAAAl3K,MAAAjU,MAC9C,EAAA45G,UAAA,SAASuxE,SAAU,SAAChiF,SAChB,IAAK5V,mBAAA,QAAkBwmC,WAAW5wB,SAC9B,MAAM,IAAIj3E,UAAU,yBAAA1gB,OAAyB23F,QAAzB,UAAA,WAAA33F,OACLyC,MAAKo3K,MADA,+FAQCryD,UAAWC,UACxC,GAAID,YAAcC,SAAlB,CAMA,IAAMsyD,gBAAkBvrL,KAAKorL,mBAAmB5+K,QAAQwsH,WAClDwyD,eAAiBxrL,KAAKorL,mBAAmB5+K,QAAQysH,UAEvD,GAAIsyD,kBAAoBxyF,iBAAA4f,cAAxB,CAMA,GAAI6yE,iBAAmBzyF,iBAAA4f,cAAvB,CAMA,IAAMwyE,SAAWnrL,KAAKyrL,6BAA6BF,gBAAiBC,gBAGpE,OAFuB,EAAA1lF,MAAA,SAAKqlF,SAAU,SAAChiF,SAAD,OAAa,IAAIgtB,eAAA,QAAchtB,WANjE18E,QAAQ1U,MAAR,2BAAAvG,OAAyCxR,KAAKqrL,MAA9C,4BAAA75K,OAA8EynH,SAA9E,WANAxsG,QAAQ1U,MAAR,4BAAAvG,OAA0CxR,KAAKqrL,MAA/C,4BAAA75K,OAA+EwnH,UAA/E,WATAvsG,QAAQ1U,MAAM,2FAiCXoxF,SACP,OAAOnpG,KAAKorL,mBAAmB5+K,QAAQ28F,WAAapQ,iBAAA4f,mEAK3B+yE,WAAYC,UACrC,GAAID,aAAeC,SACf,MAAM,IAAIz5J,UAAU,wDAGxB,IAAM05J,cAAgB74J,KAAKk7E,IAAI09E,SAAWD,YAAc,EAExD,OAAeA,WAAXC,SACO3rL,KAAKorL,mBAAmBzkL,QAAQ6L,OAAOk5K,WAAYE,eAGvD5rL,KAAKorL,mBAAmBzkL,QAAQ6L,OAAOm5K,SAAUC,eAAe11I,oDAxFvE,OAAOl2C,KAAKorL,gDAIZ,OAAOprL,KAAKqrL,sdCpCpB,IAAA75E,OAAAzjB,uBAAAvxF,QAAA,gBACAo9G,UAAA7rB,uBAAAvxF,QAAA,mBAGA4yH,iBAAArhC,uBAAAvxF,QAAA,2BACA01G,UAAA11G,QAAA,oBACAqsL,UAAA96F,uBAAAvxF,QAAA,smDAqMe,+qBAxLa4yH,iBAAA,kFASfy8D,QAASnnF,mBACM,IAAhB1kG,KAAKhD,QAKLgD,KAAK8rL,cAGT9rL,KAAK+rL,wBAAwBF,QAASnnF,yDAUtC1kG,KAAKgsL,kBAELhsL,KAAKirI,OAAS,8CAUCghD,UACf,KAAMA,oBAAoBpD,UAAA,SACtB,MAAM,IAAI32J,UAAU,mDAGxBlyB,KAAKirI,OAAOznI,KAAKyoL,gDAWP9iF,SACV,OAAKA,UAIY,EAAAqI,OAAA,SAAMxxG,KAAKirI,OAAQ,CAAEtqI,KAAMwoG,QAAQ5tD,iBAHzC,oDAeQ4tD,SACnB,IAAM3M,SAAWx8F,KAAKqpG,cAAcF,SAEpC,OAAK3M,SAIEA,SAASX,iBAHL,8CAcEsN,SACb,IAAM3M,SAAWx8F,KAAKqpG,cAAcF,SAEpC,OAAK3M,SAIEA,SAAS0vF,OAHL/iF,QAAQ58E,oDAcTw+B,UAA+B,IAArBohI,YAAqB,EAAAtnL,UAAA7H,aAAA4F,IAAAiC,UAAA,IAAAA,UAAA,GACzC,OAAO7E,KAAKirI,OAAOrP,OAAO,SAACwwD,WAAY7oI,KAAQ,IAAA8oI,YAAAlwF,eACjBiwF,WADiB,GACtCz3E,QADsC03E,YAAA,GAC7BrwF,SAD6BqwF,YAAA,GAErCx3E,GAAI,EAAA3C,UAAA4C,YAAWvxD,IAAIs4C,iBAAkB9wC,UAO3C,OALKxH,IAAI+oI,WAAaH,cAAgBt3E,EAAI7Y,WACtC2Y,QAAUpxD,IACVy4C,SAAW6Y,GAGR,CAACF,QAAS3Y,WAClB,CAAC,KAAMthE,EAAAA,uDAWayuE,SACvB,IAAM3M,SAAWx8F,KAAKqpG,cAAcF,SAEpC,OAAK3M,SAIEA,SAASmI,cAHL,6CAcX,OAAO3kG,KAAKirI,OAAOr+F,OAAO,SAAC2W,KAAD,OAASA,IAAI+oI,4DAanBT,QAASnnF,mBAAmB,IAAAzwF,MAAAjU,MAChD,EAAA45G,UAAA,SAASiyE,QAAS,SAACU,QAASpjF,SACxB,IAAM3M,SAAW,IAAIqsF,UAAA,QAAS1/E,QAASojF,QAAS7nF,mBAGhDzwF,MAAKu4K,mBAAmBhwF,uDAU5B,EAAAod,UAAA,SAAS55G,KAAKirI,OAAQ,SAACzuC,UACnBA,SAAS7qD,uZCrMrB,IAAAqzG,YAAAj3D,uBAAAvxF,QAAA,qBACAszH,YAAA/hC,uBAAAvxF,QAAA,sBACAq5I,qBAAA9nD,uBAAAvxF,QAAA,gCACAwmI,mBAAAxmI,QAAA,gnDAUqBiwL,8BAQjB,SAAAA,SAAYtjF,QAASojF,QAAS7nF,mBAAmB,IAAAzwF,MAAA,qIAAA66E,CAAA9uF,KAAAysL,WAC7Cx4K,MAAAs7G,2BAAAvvH,KAAAwvH,gBAAAi9D,UAAA1vL,KAAAiD,QASKW,KAAO,GASZsT,MAAKy4K,QAAU,GASfz4K,MAAKyvH,eAAiB,KAEtBzvH,MAAKmvB,KAAK+lE,QAASojF,QAAS7nF,mBA9BiBzwF,yYARf67G,YAAA,yEA4F7B3mB,QAASojF,QAAS7nF,mBACnB,IAAKyE,UAAYojF,UAAY7nF,kBACzB,MAAM,IAAIxyE,UAAU,qBAAA1gB,OAAqB23F,QAArB,uDAAA,YAAA33F,OAAAiiG,QACGtK,SADH,MAAA33F,OAAAiiG,QACsB84E,SADtB,MAAA/6K,OAAAiiG,QACyC/O,qBAH3B,IAAAioF,SAAAxwF,eAMXowF,QANW,GAM/BK,IAN+BD,SAAA,GAM1BE,IAN0BF,SAAA,GAMrBT,OANqBS,SAAA,GAgBtC,OATA3sL,KAAKW,KAAOwoG,QAAQ5tD,cACpBv7C,KAAK0jI,eAAiB,IAAImS,qBAAA,QAAoB,CAAC+2C,IAAKC,KAAMnoF,kBAAmBA,kBAAkBuyC,eAG3Fj3I,KAAK0sL,aADa,IAAXR,OACQ/iF,QAAQ58E,cAER2/J,OAAO3/J,cAGnBvsB,qCAeP,OAJAA,KAAKW,KAAO,GACZX,KAAK0sL,QAAU,GACf1sL,KAAK0jI,eAAiB,KAEf1jI,6CAiBP,OAAO,EAAAglJ,YAAA,SAAWhlJ,KAAK0jI,kDA3FvB,OAAO1jI,KAAKW,KAAK,KAAOqiI,mBAAAmB,2DAUxB,OAAOnkI,KAAK0jI,wDAUZ,OAAO1jI,KAAK0jI,eAAe7nC,gDAU3B,OAAO77F,KAAK0sL,yZC5FpB,IAAAI,WAAA/+F,uBAAAvxF,QAAA,oBACAuwL,WAAAh/F,uBAAAvxF,QAAA,gBACA4yH,iBAAArhC,uBAAAvxF,QAAA,ypCAWqBwwL,yCAKjB,SAAAA,eAAYC,UAAU,IAAAh5K,MAIlB,iIAJkB66E,CAAA9uF,KAAAgtL,gBAClB/4K,MAAAs7G,2BAAAvvH,KAAAwvH,gBAAAw9D,gBAAAjwL,KAAAiD,OAGgB,MAAZitL,YAAqB,EAAAH,WAAA,SAAUG,UAC/B,MAAM,IAAI/6J,UAAJ,qFAAA1gB,OAAAiiG,QAC0Fw5E,YANlF,OA0BlBh5K,MAAKygF,MAAMu4F,UA1BOh5K,+YALkBm7G,iBAAA,gFAsDlC69D,UACFjtL,KAAKktL,cAAcD,0CAQnBjtL,KAAKmtL,MAAMz5J,QAAQ,SAACld,MAAD,OAAUA,KAAKm7B,UAElC3xC,KAAKirI,OAAS,8CAaC9hC,SACf,QAAKA,UAILA,QAAUA,QAAQ5tD,cAEXv7C,KAAKirI,OAAOpwG,KAAK,SAACqoC,MAAD,OAAUA,KAAKimC,UAAYA,2DAW/BA,SACpB,IAAKA,QACD,OAAO,KAGXA,QAAUA,QAAQ5tD,cAElB,IAAM48D,MAAQn4G,KAAKirI,OAAOn+F,KAAK,SAACo2B,MAAD,OAAUA,KAAKimC,UAAYA,UAE1D,OAAOgP,MAAQA,MAAM5O,eAAiB,2CAU5B0jF,UAAU,IAAA/7F,OAAAlxF,KACfitL,UAMLriK,OAAO8R,KAAKuwJ,UAAUv5J,QAAQ,SAACy1E,SACvBjY,OAAKk8F,mBAAmBjkF,UAI5BjY,OAAK+5C,OAAOznI,KAAK,IAAIupL,WAAA,QAAU5jF,QAAS8jF,SAAS9jF,2CArFrD,OAAOnpG,KAAKirI,mXCvDpB,IAAAzQ,WAAAzsC,uBAAAvxF,QAAA,oBACAszH,YAAA/hC,uBAAAvxF,QAAA,sBACA0pG,QAAA1pG,QAAA,kBACA0jK,oBAAA1jK,QAAA,0CACA2jK,iBAAA3jK,QAAA,uCACAo+H,qBAAAp+H,QAAA,oCACA6pG,gBAAA7pG,QAAA,6mDAUqB6wL,+BAOjB,SAAAA,UAAYlkF,QAASmkF,YAAY,IAAAr5K,MAG7B,iIAH6B66E,CAAA9uF,KAAAqtL,WAC7Bp5K,MAAAs7G,2BAAAvvH,KAAAwvH,gBAAA69D,WAAAtwL,KAAAiD,SAEK,EAAAw6H,WAAA,SAAUrxB,SACX,MAAM,IAAIj3E,UAAJ,0DAAA1gB,OAAAiiG,QAC+DtK,WAElE,KAAK,EAAAqxB,WAAA,SAAU8yD,YAClB,MAAM,IAAIp7J,UAAJ,6DAAA1gB,OAAAiiG,QACkE65E,cAT/C,OAoB7Br5K,MAAKk1F,QAAU,GASfl1F,MAAKs1F,eAAiB,KAEtBt1F,MAAKygF,MAAMyU,QAASmkF,YA/BSr5K,0YAPE67G,YAAA,2EAoD7B3mB,QAASmkF,YAIX,OAHAttL,KAAKmpG,QAAUA,QACfnpG,KAAKupG,eAAiBvpG,KAAKutL,qBAAqBD,YAEzCttL,qCAQPA,KAAKmpG,QAAU,GACfnpG,KAAKupG,eAAiB,kDAcL+jF,YAAY,IAAAp8F,OAAAlxF,KACvBupG,eAAiB,GAoCvB,GAlCA+jF,WAAW71K,MAAM,KAAKic,QAAQ,SAACld,MAC3B,GAAqC,MAAjC+yF,eAAeC,iBAA0B,EAAA02D,oBAAA8E,qBAAoBxuJ,MAC7D+yF,eAAeC,gBAAiB,EAAAtD,QAAAuD,oBAAkB,EAAApD,gBAAAqD,kBAAiB,IAAMl9E,SAAShW,KAAM,WAK5F,GAAoC,MAAhC+yF,eAAeN,gBAAyB,EAAAi3D,oBAAA6E,wBAAuBvuJ,MAC/D+yF,eAAeN,eAAgB,EAAAk3D,iBAAAsE,qBAAoBjuJ,WAKvD,GAAgC,MAA5B+yF,eAAeL,YAAqB,EAAAi3D,iBAAAyE,gBAAepuJ,MACnD+yF,eAAeL,UAAY1yF,SAD/B,CAboC,IAAA+uH,uBAAAppC,gBAoBb,EAAAy+B,qBAAA4K,uBAAsBhvH,MApBT,GAoB7BhR,MApB6B+/H,uBAAA,GAoBtBJ,MApBsBI,uBAAA,GAqBpC,GAAa,MAAT//H,MAUJ,MAAM,IAAI7I,MAAJ,iCAAA6U,OAA2C0/E,OAAKiY,QAAhD,OAAA33F,OAA6DgF,OAT/D,GAAc,MAAV2uH,MACA,MAAM,IAAIxoI,MAAJ,2CAAA6U,OAAqD0/E,OAAKiY,QAA1D,OAAA33F,OAAuEgF,KAAvE,kBAGV+yF,eAAeoV,aAAen5G,SAQD,MAAjC+jG,eAAeC,eACf,MAAM,IAAI7sG,MAAJ,qCAAA6U,OAA+CxR,KAAKmpG,QAApD,OAAA33F,OAAiE87K,aAG3E,GAAoC,MAAhC/jF,eAAeN,cACf,MAAM,IAAItsG,MAAJ,4CAAA6U,OAAsDxR,KAAKmpG,QAA3D,OAAA33F,OAAwE87K,aAGlF,GAAgC,MAA5B/jF,eAAeL,UACf,MAAM,IAAIvsG,MAAJ,wCAAA6U,OAAkDxR,KAAKmpG,QAAvD,OAAA33F,OAAoE87K,aAG9E,OAAO/jF,+gBChJf,IAAAoE,SAAA5f,uBAAAvxF,QAAA,kBACAk1I,UAAA3jD,uBAAAvxF,QAAA,mBACAo9G,UAAA7rB,uBAAAvxF,QAAA,mBACAwxF,QAAAD,uBAAAvxF,QAAA,iBACAq9G,UAAA9rB,uBAAAvxF,QAAA,mBACAspG,MAAA/X,uBAAAvxF,QAAA,eACAk1G,UAAA3jB,uBAAAvxF,QAAA,mBACAm2I,OAAA5kD,uBAAAvxF,QAAA,gBACAgxL,aAAAz/F,uBAAAvxF,QAAA,kBACAo8F,eAAA7K,uBAAAvxF,QAAA,oBACAixL,gBAAA1/F,uBAAAvxF,QAAA,qBACAkxL,gBAAA3/F,uBAAAvxF,QAAA,qBACAq5I,qBAAA9nD,uBAAAvxF,QAAA,gCACAi1H,gBAAAj1H,QAAA,+BACA6pG,gBAAA7pG,QAAA,+BACAu8F,iBAAAv8F,QAAA,8xBAwkBe,eA3jBX,SAAAmxL,mJAAc7+F,CAAA9uF,KAAA2tL,mBACV3tL,KAAK4tL,kBAAoB,GASzB5tL,KAAK6tL,gBAAkB,IAAIJ,gBAAA,QA2B3BztL,KAAK8tL,qBAAuB,GAS5B9tL,KAAK6hJ,mBAAqB,KAS1B7hJ,KAAK+tL,gBAAkB,uHA0DtB14C,aAAa,IAEV24C,QACA34C,YADA24C,QAASC,MACT54C,YADS44C,MAAOd,MAChB93C,YADgB83C,MAAOe,KACvB74C,YADuB64C,KAAMC,MAC7B94C,YAD6B84C,MAGjCnuL,KAAKouL,6BAA6B/4C,aAClCr1I,KAAKquL,yBAAyBJ,OAC9BjuL,KAAKsuL,4BAA4BN,SACjChuL,KAAKuuL,0BAA0BpB,OAC/BntL,KAAKwuL,+BAA+BN,KAAMC,OAC1CnuL,KAAKyuL,sBACLzuL,KAAK0uL,uBACL1uL,KAAK2uL,2FASmBX,SAAS,IAAA/5K,MAAAjU,MACjC,EAAA45G,UAAA,SAASo0E,QAAS,SAAC7C,SAAUhrD,YACzB,GAAIA,cAAclsH,MAAK25K,kBACnB,MAAM,IAAI17J,UAAJ,mCAAA1gB,OAAiD2uH,WAAjD,oCAGVlsH,MAAK25K,kBAAkBztD,YAAc,IAAIqtD,aAAA,QAAYrtD,WAAYgrD,SAAUl3K,0DAU1Dg6K,OACrBr1F,eAAA,QAAcg2F,SAASX,MAAOjuL,KAAK6hJ,sEASbsrC,OACtBntL,KAAK6tL,gBAAgBX,cAAcC,8DAURe,KAAMC,OAAO,IAAAj9F,OAAAlxF,MACxC,EAAA45G,UAAA,SAASs0E,KAAM,SAAC1gC,IAAKqhC,OACjB,GAAIA,SAAS39F,OAAK48F,qBACd,MAAM,IAAI57J,UAAJ,mCAAA1gB,OAAiDq9K,MAAjD,uCAGV39F,OAAK48F,qBAAqBe,OAAS,IAAInB,gBAAA,QAAej8D,gBAAAyI,eAAeC,IAAKqzB,QAG9E,EAAA5zC,UAAA,SAASu0E,MAAO,SAACjgC,KAAM4gC,QACnB,GAAIA,UAAU59F,OAAK48F,qBACf,MAAM,IAAI57J,UAAJ,mCAAA1gB,OAAiDs9K,OAAjD,uCAGV59F,OAAK48F,qBAAqBgB,QAAU,IAAIpB,gBAAA,QAAej8D,gBAAAyI,eAAeE,KAAM8zB,6DAUvD7Y,aACzBr1I,KAAK6hJ,mBAAqB,IAAIhM,qBAAA,QAC1BR,YAAYtqF,SACZ,MACA,EAAAs7C,gBAAAqD,kBAAiB2rC,YAAYwB,+DAWjC,IAAMq3C,KAAOluL,KAAK+uL,oBAAoBt9D,gBAAAyI,eAAeC,KACrDn6H,KAAK+tL,gBAAgBt8D,gBAAAyI,eAAeC,KAAOn6H,KAAKgvL,oBAAoBd,qDAUpE,IAAMC,MAAQnuL,KAAK+uL,oBAAoBt9D,gBAAAyI,eAAeE,MACtDp6H,KAAK+tL,gBAAgBt8D,gBAAAyI,eAAeE,MAAQp6H,KAAKgvL,oBAAoBb,mDAWrDc,YAIhB,IAHA,IAAMC,eAAiB,GAGd7yL,EAAI,EAAGA,EAAI4yL,WAAWjyL,OAAQX,IAAK,CAOxC,IANA,IAAMq8H,UAAYu2D,WAAW5yL,GACvBspB,MAAQ,GACRioI,MAAQ,GACVO,aAAe,KACfghC,kBAAoB,GAEfrjK,EAAI,EAAGA,EAAI4sG,UAAU02D,KAAKpyL,OAAQ8uB,IAAK,CAI5C,IAHA,IAAM+/J,QAAUnzD,UAAU02D,KAAKtjK,GACzBujK,UAAY,GAETrzE,EAAI,EAAGA,EAAI6vE,QAAQ7uL,OAAQg/G,IAAK,CACrC,IAAM7S,QAAU0iF,QAAQ7vE,IACxBmzE,kBAAoBhmF,SAER38F,QAAQ,OAASusF,iBAAA4f,gBACzBw2E,kBAAoBhmF,QAAQjkG,QAAQ,IAAK,IACzC0oJ,MAAMpqJ,KAAK2rL,oBAGf,IAAM1pD,YAAczlI,KAAK+tJ,uBAAuBohC,mBAE3C1pD,aAKgB,OAAjB0oB,eACAA,aAAeghC,mBAGnBE,UAAU7rL,KAAKiiI,cARXh5G,QAAQ4tB,KAAR,2BAAA7oC,OAAwC23F,QAAxC,2CAWe,EAAnBkmF,UAAUryL,QACV2oB,MAAMniB,KAAK6rL,WAInBH,eAAe1rL,KAAK,CAChB2jC,WAAYuxF,UAAU7oC,KACtBlqE,MAAOA,MACPwoI,aAAcA,aACdN,YAAashC,kBACbvhC,MAAOA,QAIf,OAAOshC,+CAUPt2F,eAAA,QAAckzF,cACd9rL,KAAK6tL,gBAAgBl8I,QAErB3xC,KAAK4tL,kBAAoB,GACzB5tL,KAAK8tL,qBAAuB,GAC5B9tL,KAAK6hJ,mBAAqB,KAC1B7hJ,KAAK+tL,gBAAkB,mDAiGH5kF,SACpB,OAAOnpG,KAAK6tL,gBAAgBp2D,wBAAwBtuB,+CAW1CA,SACV,OAAOvQ,eAAA,QAAcyQ,cAAcF,2CAU7BmmF,UACN,OAAKtvL,KAAKs3H,UAAUg4D,UAIbtvL,KAAK4tL,kBAAkB0B,UAHnB,0CAcF96D,aACT,OAAKx0H,KAAKy0H,aAAaD,aAIhBx0H,KAAK8tL,qBAAqBt5D,aAHtB,iDAcKyF,eAChB,OAAO,EAAAtsB,SAAA,SAAQ3tG,KAAK8tL,qBAAsB,SAACyB,gBACvC,QAAQ,EAAA11E,UAAA,SAAS01E,iBAAmBA,eAAet1D,gBAAkBA,+DAYtD9wB,SACnB,OAAOvQ,eAAA,QAAcm1D,uBAAuB5kD,kDAW/BA,SACb,OAAOvQ,eAAA,QAAcw6B,iBAAiBjqB,mDAWxBqrB,aACd,OAAOx0H,KAAK+tL,gBAAgBv5D,+CAWtB86D,UACN,OAAOA,YAAYtvL,KAAK4tL,qDAYjBzkF,SACP,IAAMqmF,UAAYxvL,KAAKqpG,cAAcF,SAErC,QAAQ,EAAAnb,QAAA,SAAOwhG,gDAYNh7D,aACT,OAAOA,eAAex0H,KAAK8tL,oFAY3B,IACM2B,aADczvL,KAAK0vL,uBACQ9iJ,OAAO,SAAC2W,KAAD,OAAUq1C,eAAA,QAAcyQ,cAAc9lD,OAE1EksI,aAAazyL,OAAS,GAI1ByvB,QAAQ4tB,KAAR,wEAAA7oC,OAAqFi+K,8DAYrF,IAAME,aAAc,EAAA7pF,MAAA,SAAK9lG,KAAK4tL,kBAAmB,SAACgC,aAAD,OAAiBA,YAAYC,oBACxEC,WAAY,EAAAhqF,MAAA,SAAK9lG,KAAK8tL,qBAAsB,SAACyB,gBAAD,OAAoBA,eAAeQ,wBAGrF,OAFuB,EAAAr+E,UAAA,UAAS,EAAAihC,OAAA,UAAM,EAAAjB,UAAA,SAAA,GAAAlgI,OAAAuqF,mBAAa4zF,aAAb5zF,mBAA6B+zF,mBAAcltL,GAE3DuxB,uCAlftB,OAAmC,GAJR,EAAAw5E,SAAA,SAAQ3tG,KAAK8tL,qBAAsB,SAACp1D,WAC3D,OAAOA,UAAUuB,gBAAkBxI,gBAAAyI,eAAeC,MAG5Bn9H,wCAc1B,OAAoC,GAJR,EAAA2wG,SAAA,SAAQ3tG,KAAK8tL,qBAAsB,SAACp1D,WAC5D,OAAOA,UAAUuB,gBAAkBxI,gBAAAyI,eAAeE,OAG3Bp9H,yCAkB3B,OAAO47F,eAAA,QAAco3F,orBCjI7B,IAAAp2E,UAAA7rB,uBAAAvxF,QAAA,mBACAsmI,UAAA/0C,uBAAAvxF,QAAA,mBACAwxF,QAAAD,uBAAAvxF,QAAA,iBACAspG,MAAA/X,uBAAAvxF,QAAA,eACA6uI,SAAAt9C,uBAAAvxF,QAAA,kBACAm2I,OAAA5kD,uBAAAvxF,QAAA,gBACA25H,eAAApoC,uBAAAvxF,QAAA,qDACAixL,gBAAA1/F,uBAAAvxF,QAAA,qBACAi1H,gBAAAj1H,QAAA,oxBAcqByzL,0BAOjB,SAAAA,eAAYh2D,cAAer0H,MACvB,iIAD6BkpF,CAAA9uF,KAAAiwL,iBACzB,EAAAjiG,QAAA,SAAOpoF,MACP,MAAM,IAAIssB,UAAJ,gDAAA1gB,OAA8D5L,KAA9D,MAgBV5F,KAAKkwL,MAAQ,GAgBblwL,KAAKmwL,MAAQ,GAabnwL,KAAKowL,aAAe,GAapBpwL,KAAKqwL,YAAc,GAUnBrwL,KAAKqrL,MAAQ,GAUbrrL,KAAK6tL,gBAAkB,KAavB7tL,KAAKqI,MAAQ,GAUbrI,KAAKswL,eAAiB,GAUtBtwL,KAAKuwL,UAAY,KAEjBvwL,KAAKojC,KAAK62F,cAAer0H,uHAqExBq0H,cAAer0H,MAShB,GARA5F,KAAKkwL,MAAQtqL,KAAK+C,KAClB3I,KAAKmwL,MAAQvqL,KAAKwpL,KAClBpvL,KAAK6tL,gBAAkB,IAAIJ,gBAAA,QAAe7nL,KAAKunL,OAC/CntL,KAAKqrL,MAAQzlL,KAAKiqF,KAClB7vF,KAAKqI,MAAQzC,KAAKjF,KAClBX,KAAKuwL,UAAY3qL,KAAK+iG,SACtB3oG,KAAKswL,eAAiBr2D,cAElBj6H,KAAKswL,iBAAmB7+D,gBAAAyI,eAAeC,IACvC,OAAOn6H,KAAKwwL,2BAA2B5qL,MACpC,GAAI5F,KAAKswL,iBAAmB7+D,gBAAAyI,eAAeE,KAC9C,OAAOp6H,KAAKywL,4BAA4B7qL,MAG5C,MAAM,IAAIssB,UAAU,kDAAA,8BAAA1gB,OACcxR,KAAKswL,eADnB,sCAqBpB,OATAtwL,KAAKkwL,MAAQ,GACblwL,KAAKmwL,MAAQ,GACbnwL,KAAKowL,aAAe,GACpBpwL,KAAKqwL,YAAc,GACnBrwL,KAAKqrL,MAAQ,GACbrrL,KAAKqI,MAAQ,GACbrI,KAAKswL,eAAiB,GACtBtwL,KAAKuwL,UAAY,KAEVvwL,wDAYgB4F,MAIvB,OAHA5F,KAAKowL,aAAexqL,KAAK8qL,IACzB1wL,KAAKqwL,YAAczqL,KAAK+qL,WAEjB3wL,yDAYiB4F,MAIxB,OAHA5F,KAAKowL,aAAexqL,KAAKgrL,YACzB5wL,KAAKqwL,YAAczqL,KAAK8qL,IAEjB1wL,mDAaP,KAAK,EAAA8iI,UAAA,SAAS9iI,KAAKmwL,MAAM,IACrB,MAAM,IAAIj+J,UAAU,2CAAA1gB,OAA2CxR,KAAKqrL,MAAhD,8BAChB,+LAIR,IAAMwF,cAAgB7wL,KAAK8wL,0BACrBC,aAAe/wL,KAAKgxL,uBACpBC,aAAejxL,KAAKkxL,wBACpBC,aAAenxL,KAAKoxL,uBACpBC,YAAW,GAAA7/K,OAAAuqF,mBAAO80F,eAAP90F,mBAAyBg1F,cAAzBh1F,mBAA0Ck1F,cAA1Cl1F,mBAA2Do1F,eAG5E,OAFuB,EAAAx+C,OAAA,SAAM0+C,0DAa7B,IAAMC,UAAY1mK,OAAO8R,KAAK18B,KAAKqwL,aAC7BkB,SAAWD,UAAUt0L,OAAS,EAGpC,OAAOs0L,WAFa,EAAAjmD,SAAA,SAAQ,EAAGkmD,wDAqB/B,IAAMC,WAAa5mK,OAAO8R,KAAK18B,KAAKowL,cAEpC,OAA0B,IAAtBoB,WAAWx0L,OACJ,KAGJw0L,WAAW,iDAWlB,IAAMA,WAAa5mK,OAAO8R,KAAK18B,KAAKowL,cAEpC,OAA0B,IAAtBoB,WAAWx0L,OACJ,GAGJw0L,WAAW,4DAYWx6K,MAAO8/G,MACpC,GAAM9/G,SAAShX,KAAKowL,aAApB,CAMA,GAAMt5D,QAAQ92H,KAAKqwL,YAAnB,CAMA,IAAMoB,oBAAsBzxL,KAAK0xL,2BAA2B16K,OACtD26K,mBAAqB3xL,KAAK4xL,4BAC1BC,mBAAqB7xL,KAAK8xL,0BAA0Bh7D,MAE1D,MAAA,GAAAtlH,OAAAuqF,mBAAW01F,qBAAX11F,mBAAmC41F,oBAAnC51F,mBAA0D81F,qBATtDplK,QAAQ1U,MAAR,0BAAAvG,OAAwCxR,KAAKqrL,MAA7C,mBAAA75K,OAAoEslH,YANpErqG,QAAQ1U,MAAR,2BAAAvG,OAAyCxR,KAAKqrL,MAA9C,mBAAA75K,OAAqEwF,yCAyBpEgiH,WACL,OAAOA,aAAah5H,KAAKowL,6CAUrBn3D,UACJ,OAAOA,YAAYj5H,KAAKqwL,4CAWxB,OAAOrwL,KAAKswL,iBAAmB7+D,gBAAAyI,eAAeC,qCAW9C,OAAOn6H,KAAKswL,iBAAmB7+D,gBAAAyI,eAAeE,+CAchCx0H,MACd,IAAMkkH,SAAW,IAAIqM,eAAA,QAAcvwH,MAE7B2jG,eAAiBvpG,KAAK6tL,gBAAgBp2D,wBAAwB3N,SAASnpH,MAM7E,OAJsB,MAAlB4oG,gBACAugB,SAAS4N,yBAAyBnuB,gBAG/BugB,6DAWiB,IAAA71G,MAAAjU,KACxB,OAAO,EAAA8lG,MAAA,SAAK9lG,KAAKkwL,MAAO,SAACpmE,UAAD,OAAc71G,MAAK0jH,kBAAkB7N,+DAYtCmL,YAAY,IAAA/jC,OAAAlxF,KACnC,KAAMi1H,cAAcj1H,KAAKowL,cACrB,MAAM,IAAIl+J,UAAJ,2BAAA1gB,OAAyCxR,KAAKqrL,MAA9C,mBAAA75K,OAAqEyjH,aAG/E,OAAO,EAAAnvB,MAAA,SAAK9lG,KAAKowL,aAAan7D,YAAa,SAACnL,UAAD,OAAc54B,OAAKymC,kBAAkB7N,8DAY1DgL,WAAW,IAAA1jC,OAAApxF,KACjC,KAAM80H,aAAa90H,KAAKqwL,aACpB,MAAM,IAAIn+J,UAAJ,0BAAA1gB,OAAwCxR,KAAKqrL,MAA7C,mBAAA75K,OAAoEsjH,YAG9E,OAAO,EAAAhvB,MAAA,SAAK9lG,KAAKqwL,YAAYv7D,WAAY,SAAChL,UAAD,OAAc14B,OAAKumC,kBAAkB7N,2DAW3D,IAAAv4B,OAAAvxF,KACnB,OAAO,EAAA8lG,MAAA,SAAK9lG,KAAKkwL,MAAO,SAAC6B,eACrB,OAAOxgG,OAAKygG,kCAAkCD,gEAgBlD,OAHqB/xL,KAAKmwL,MAAMv0D,OAAO,SAACiwD,QAASoG,aAAV,OAA0BpG,QAAQr6K,OAAOygL,eAC9B9gL,IAAI,SAACg4F,SAAD,OAAaA,QAAQjkG,QAAQ,IAAK,wDAalE,IAAAo1I,OAAAt6I,KAClBmrL,SAAW,GAUf,OARA,EAAAvxE,UAAA,SAAS55G,KAAKowL,aAAc,SAAC12J,SACzB,IAAMw4J,gBAAiB,EAAApsF,MAAA,SAAKpsE,QAAS,SAACq4J,eAClC,OAAOz3C,OAAK03C,kCAAkCD,iBAGlD5G,SAAWA,SAAS35K,OAAO0gL,mBAGxB,EAAAv/C,OAAA,SAAMw4C,0DAWO,IAAAgH,OAAAnyL,KAChBmrL,SAAW,GAUf,OARA,EAAAvxE,UAAA,SAAS55G,KAAKqwL,YAAa,SAAC32J,SACxB,IAAMw4J,gBAAiB,EAAApsF,MAAA,SAAKpsE,QAAS,SAACq4J,eAClC,OAAOI,OAAKH,kCAAkCD,iBAGlD5G,SAAWA,SAAS35K,OAAO0gL,mBAGxB,EAAAv/C,OAAA,SAAMw4C,oEAciB4G,eAK9B,IAJI,EAAAjvD,UAAA,SAASivD,iBACTA,cAAgBA,cAAc,KAGE,IAAhCA,cAAcvlL,QAAQ,KAI1B,OAAOulL,cAAc7sL,QAAQ,IAAK,IAAIA,QAAQ,IAAK,iCA/bnD,OAAOlF,KAAKmwL,mCAWZ,OAAOnwL,KAAKqrL,mCAWZ,OAAOrrL,KAAKqI,4CAWZ,OAAOrI,KAAKswL,gDAWZ,OAAOtwL,KAAKuwL,qhBCvMpB,IAAA5iF,SAAA5f,uBAAAvxF,QAAA,kBACA47F,MAAArK,uBAAAvxF,QAAA,eACA41L,kBAAArkG,uBAAAvxF,QAAA,uBACA4yH,iBAAArhC,uBAAAvxF,QAAA,2BACA2xF,UAAAJ,uBAAAvxF,QAAA,oBACA+xF,YAAA/xF,QAAA,2BACA2oJ,QAAA3oJ,QAAA,stCAOqB61L,gDAMjB,SAAAA,sBAAYtsC,OAAO,IAAA9xI,gBAAA,qIAAA66E,CAAA9uF,KAAAqyL,4BACfryL,UAAAwvH,gBAAA6iE,uBAAAt1L,KAAAiD,MADek5F,gBAAAo5F,uBACfr+K,kGADe,sCA4FmB,SAACklF,eACnC,IAAM81D,iBAAmB,IAAImjC,kBAAA,QAAiBn+K,MAAKq9J,OAAQn4E,eAE3DllF,MAAKs+K,oBAAoBtjC,oBA/FV/1D,gBAAAo5F,uBAAAr+K,OAAA,yCA4JsB,SAACklF,eACtC,IAAMq5F,+BAAgC,EAAA7kF,SAAA,SAAQ15F,MAAKg3H,OAAQ,SAACgkB,kBACxD,OAAOA,iBAAiB91D,cAAcnjF,KAAOmjF,cAAcnjF,KAG/D/B,MAAKg3H,OAASunD,gCAjKCt5F,gBAAAo5F,uBAAAr+K,OAAA,YA0MP,SAACmoJ,YACJ,EAAAhkE,MAAA,SAAK+sD,QAAAc,MAAOmW,WAMjBnoJ,MAAKq9J,OAASnsB,QAAAc,MAAMmW,WALhB3vI,QAAQ1U,MAAR,oDAAAvG,OAAkE4qJ,UAAlE,QAlMJnoJ,MAAKigF,UAAY/F,UAAA,QASjBl6E,MAAKq9J,OAASvrB,MAEd9xI,MAAKygF,QACAtC,SAtBUn+E,sZAN4Bm7G,iBAAA,yFAmD3C,OAAOpvH,sCAUPA,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAMojB,aAAcp0G,KAAKyyL,qCAC3CzyL,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAMs3D,UAAWtoJ,KAAKgmJ,6CAUxChmJ,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAMojB,aAAcp0G,KAAKyyL,qCAC5CzyL,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAMs3D,UAAWtoJ,KAAKgmJ,uDAUzBiJ,kBAChB,KAAMA,4BAA4BmjC,kBAAA,SAC9B,MAAM,IAAIlgK,UAAJ,uDAAA1gB,OAAqEy9I,iBAArE,MAGVjvJ,KAAKirI,OAAOznI,KAAKyrJ,+EAwBgB91D,eAEjC,IAAMg7D,kBAAoBn0J,KAAKirI,OACzBlmG,SAAU,EAAA4oE,SAAA,SACZwmD,kBACA,SAAClF,kBAAD,OAAsBA,iBAAiB91D,cAAcnjF,KAAOmjF,cAAcnjF,KAG9E,GAAqB,EAAjB+uB,QAAQ/nC,OACR,MAAM,IAAIL,MAAJ,sCAAA6U,OAAgDuzB,QAAQ/nC,OAAxD,kCAKV,OAFyB+nC,QAAQ,oEAcI0iI,mBAErC,IAAMtT,kBAAoBn0J,KAAKirI,OACzBlmG,SAAU,EAAA4oE,SAAA,SAAQwmD,kBAAmB,SAAAl+C,MAAuB,IAApB9c,cAAoB8c,KAApB9c,cAC1C,OAAOA,cAAc4Z,kBAAoB00D,mBACrCtuE,cAAcE,WAAaouE,oBAGnC,KAAqB,EAAjB1iI,QAAQ/nC,QAMZ,OAFyB+nC,QAAQ,mCA2BjC/kC,KAAKirI,OAAS,kDAYd,IAFA,IAAMkpB,kBAAoBn0J,KAAKirI,OAEtB5uI,EAAI,EAAGA,EAAI83J,kBAAkBn3J,OAAQX,IAC1C83J,kBAAkB93J,GAAGs1C,sCAvJzB,OAAO3xC,KAAKirI,qeCpDpB,IAAA7yC,MAAArK,uBAAAvxF,QAAA,eACAq9G,UAAA9rB,uBAAAvxF,QAAA,mBACAyoK,QAAAl3E,uBAAAvxF,QAAA,iBACAk2L,SAAA3kG,uBAAAvxF,QAAA,kBACA2xF,UAAAJ,uBAAAvxF,QAAA,oBACAq8F,MAAAr8F,QAAA,gBACAoxG,QAAApxG,QAAA,kBACAkxI,kBAAAlxI,QAAA,iCACA+xF,YAAA/xF,QAAA,2BACAu8F,iBAAAv8F,QAAA,gCACA6pG,gBAAA7pG,QAAA,+BACA8qK,gBAAA9qK,QAAA,+BAIA2oJ,QAAA3oJ,QAAA,uBACAypG,mBAAAzpG,QAAA,4YASqBm2L,4BAOjB,SAAAA,iBAAY5sC,MAAO5sD,eAAe,kBAAAllF,MAAAjU,oIAAA8uF,CAAA9uF,KAAA2yL,wBA2hBtB,SAACv2B,YACJ,EAAAhkE,MAAA,SAAK+sD,QAAAc,MAAOmW,WAMjBnoJ,MAAKq9J,OAASnsB,QAAAc,MAAMmW,WALhB3vI,QAAQ1U,MAAR,oDAAAvG,OAAkE4qJ,UAAlE,YA7hB0B,mBAAAp8J,4GAQ9BA,KAAKm5F,cAAgB,KASrBn5F,KAAK4yL,gBAAkB75F,iBAAA2K,eAUvB1jG,KAAK6yL,0BAA4B95F,iBAAA2K,eAUjC1jG,KAAK8yL,uBAAyB/sC,MAAM8M,WAAW2gB,cAS/CxzK,KAAKk0F,UAAY/F,UAAA,QAcjBnuF,KAAK+yL,mBAAoB,EAYzB/yL,KAAKgzL,YAAcj6F,iBAAA2K,eAUnB1jG,KAAKizL,yBAA0B,EAS/BjzL,KAAKkzL,iBAAmBn6F,iBAAA2K,eAaxB1jG,KAAKmzL,oBAAqB,EAa1BnzL,KAAKy2H,aAAe,GAUpBz2H,KAAKozL,gBAAkB,GASvBpzL,KAAKsxK,OAASvrB,MAEd/lJ,KAAK00F,MAAMyE,eACN/G,6HAwFH+G,eASF,OARAn5F,KAAKm5F,cAAgBA,cACrBn5F,KAAK4yL,gBAAkBz5F,cAAciR,IAAIkS,mBACzCt8G,KAAK6yL,0BAA4B7yL,KAAKsxK,OAAOze,WAAW8B,iBACxD30J,KAAK8yL,uBAAyB9yL,KAAKsxK,OAAOze,WAAW2gB,cACrDxzK,KAAKy2H,aAAet9B,cAAciR,IAAI6pB,iBAEtCj0H,KAAKqzL,uBAEErzL,sCAaP,OAFAA,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAMs3D,UAAWtoJ,KAAKgmJ,WAEjChmJ,uCAaP,OAFAA,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAMs3D,UAAWtoJ,KAAKgmJ,WAElChmJ,qCAsBP,OAXAA,KAAKm5F,cAAgB,KACrBn5F,KAAK4yL,gBAAkB75F,iBAAA2K,eACvB1jG,KAAK6yL,0BAA4B95F,iBAAA2K,eACjC1jG,KAAK8yL,uBAAyB9yL,KAAKsxK,OAAOze,WAAW2gB,cACrDxzK,KAAK+yL,mBAAoB,EACzB/yL,KAAKgzL,YAAcj6F,iBAAA2K,eACnB1jG,KAAKizL,yBAA0B,EAC/BjzL,KAAKkzL,iBAAmBn6F,iBAAA2K,eACxB1jG,KAAKmzL,oBAAqB,EAC1BnzL,KAAKy2H,aAAe,GAEbz2H,2CAUG2oG,UAGV,OAFA3oG,KAAK4yL,gBAAkBjqF,SAEhB,EAAC,EAAM,iEAUK,IAAAynB,oBAAAl/B,OAAAlxF,KACfszL,gBAAkBtzL,KAAKm5F,cAAcE,SAEnCi3B,IAAG,QAAAF,oBAAGxlG,OAAOrW,OAAO0xF,mBAAAsqB,0BAA0BzjF,KAAK,SAAC0jF,KAAD,OAASA,IAAIC,SAAWv/B,OAAKiI,cAAcgf,MAAM8X,qBAAjG,IAAAG,oBAAAA,oBACL,CAAEM,QAAQ,GAOd,OALIJ,IAAII,SAEJ4iE,iBAAe,IAAA9hL,OAAQ8+G,IAAIG,SAGxB6iE,0EAWP,IAAMC,kBAAmB,EAAA16F,MAAAhkE,OAAM70B,KAAKm5F,cAAcwP,SAAW,KACvD6qF,eAAgB,EAAA36F,MAAAhkE,OAAM70B,KAAKm5F,cAAcqhB,YAAc,IAE7D,MAAA,GAAAhpG,QAAU,EAAAk8H,kBAAAS,SAAQolD,iBAAkB,GAApC,KAAA/hL,QAA0C,EAAAk8H,kBAAAS,SAAQqlD,cAAe,gEAYjE,IAAMC,sBAAuB,EAAAf,SAAA,SACzB1yL,KAAK0zL,eACL1zL,KAAKsxK,OAAOze,WAAW4gB,2BACvB,KAEEkgB,yBAA0B,EAAAjB,SAAA,SAC5B1yL,KAAKm5F,cAAcgf,MAAMtoB,KAAKt0C,cAC9Bv7C,KAAKsxK,OAAOze,WAAW0gB,oCACvB,KAEEmgB,eAAiBD,qBAAqB9sL,MAAM,EAAG3G,KAAKsxK,OAAOze,WAAW4gB,4BACtEmgB,kBAAoBD,wBAAwBhtL,MAAM,EAAG3G,KAAKsxK,OAAOze,WAAW0gB,qCAElF,MAAA,GAAA/hK,OAAUkiL,eAAV,KAAAliL,OAA4BoiL,oEASPv+B,6BACrB,IAWMw+B,uBAXoB,CACtBC,IAAK,CAAC,EAAG,GACTC,IAAK,CAAC,GAAI/zL,KAAKsxK,OAAOze,WAAWwD,aACjCp1I,GAAI,CAACjhB,KAAKsxK,OAAOze,WAAWkD,YAAa/1J,KAAKsxK,OAAOze,WAAWwD,aAChE29B,GAAI,CAACh0L,KAAKsxK,OAAOze,WAAWkD,WAAY,GACxCk+B,IAAK,CAACj0L,KAAKsxK,OAAOze,WAAWkD,WAAY/1J,KAAKsxK,OAAOze,WAAWwD,aAChE69B,IAAK,CAAC,EAAGl0L,KAAKsxK,OAAOze,WAAWwD,aAChC89B,IAAK,EAAEn0L,KAAKsxK,OAAOze,WAAWkD,WAAY/1J,KAAKsxK,OAAOze,WAAWwD,aACjE+9B,IAAK,EAAEp0L,KAAKsxK,OAAOze,WAAWkD,WAAY,GAC1Cs+B,IAAK,EAAEr0L,KAAKsxK,OAAOze,WAAWkD,YAAa/1J,KAAKsxK,OAAOze,WAAWwD,cAErBr2J,KAAK00J,0BAEtD,OAAO,EAAA9mD,QAAA2W,MAAK8wC,4BAA6Bw+B,sEAYzC7zL,KAAKmzL,oBAAqB,6CAY1BnzL,KAAKmzL,oBAAqB,wCAWhBzrB,kBACV,IAAI,EAAA7tD,UAAA,SAAS6tD,kBACT,MAAO,EAAC,EAAO,mBAGnB,IAAI4sB,iBAAmB5sB,iBACnB6sB,cAAgB,GAEpB,GAAI7sB,iBAAiBl7J,QAAQ86J,gBAAAe,yCAA2CtvE,iBAAA2K,eAAgB,CACpF,IAAM8wF,eAAiB9sB,iBAAiBjwJ,MAAM6vJ,gBAAAe,uCAC9CisB,iBAAmB9nK,SAASgoK,eAAe,GAAInuF,gBAAAk+B,eAC/CgwD,cAAgB/nK,SAASgoK,eAAe,GAAInuF,gBAAAk+B,gBAExC,EAAA1qB,UAAA,SAAS26E,eAAe,MACxBF,iBAAmB,IAI3B,GAAoB,EAAhBC,eAAqBA,cAAgB,EACrC,MAAO,EAAC,EAAO,+BAGnB,GAAyB,KAArBD,oBAA4B,EAAArvB,QAAA,SAAOqvB,kBAAmB,CACtD,KAAK,EAAAl8F,MAAA,SAAKkvE,gBAAAmtB,wBAAyBH,kBAC/B,MAAO,EAAC,EAAO,mBAGnBt0L,KAAK6yL,0BAA4BvrB,gBAAAmtB,wBAAwBH,kBAO7D,MAJsB,KAAlBC,gBAAyB,EAAAtvB,QAAA,SAAOsvB,iBAChCv0L,KAAK8yL,uBAAyByB,eAG3B,EAAC,EAAM,0DAWd,GAAKv0L,KAAKwvJ,QAMV,OAFAxvJ,KAAKgzL,YAAcj6F,iBAAA2K,eAEZ,EAAC,EAAM,+CAWVmwD,QACJ,OAAK7zJ,KAAKwvJ,QAMNqE,SAAW7zJ,KAAKgzL,YACThzL,KAAK00L,cAGhB10L,KAAKgzL,YAAcn/B,OAEZ,EAAC,EAAM,iBAXV7zJ,KAAKgzL,YAAcn/B,OAEZ,EAAC,EAAM,+DAoBlB,OAAI7zJ,KAAKm5F,cAAcgd,cACnBn2G,KAAK0zL,eAAiB1zL,KAAKm5F,cAAciR,IAAI0pB,qBAKjD9zH,KAAK0zL,eAAiB1zL,KAAKm5F,cAAc4e,YAAYnyF,OAAO,EAAG,GAHpD,EAAC,EAAM,0DAgBR8tK,gBAGV,OAFA1zL,KAAK0zL,eAAiBA,eAEf,EAAC,EAAM,mEArXd,OAAO1zL,KAAK6yL,wEAWZ,OAAO7yL,KAAK8yL,6DAWZ,OAAO9yL,KAAKm5F,cAAcwL,wDAW1B,OAAO3kG,KAAKm5F,cAAcwP,gDAS1B,OAAO3oG,KAAKozL,8BAGGtuK,MACf9kB,KAAKozL,gBAAkBtuK,KAAKne,MAAM,EAAG,GAAG40C,iDASxC,OAAOv7C,KAAKgzL,4CASZ,OAA0B,EAAnBhzL,KAAKgzL,0qBCrPpB,IAAA56F,MAAArK,uBAAAvxF,QAAA,eACAwxF,QAAAD,uBAAAvxF,QAAA,iBACA42F,gBAAArF,uBAAAvxF,QAAA,2BACAm4L,uBAAA5mG,uBAAAvxF,QAAA,4BACA2xF,UAAAJ,uBAAAvxF,QAAA,oBACA+xF,YAAA/xF,QAAA,2BACAs8F,qBAAAt8F,QAAA,oCACA2oJ,QAAA3oJ,QAAA,uBACA6pG,gBAAA7pG,QAAA,oxBASqBo4L,sBAKjB,SAAAA,aAAc,kBAAA3gL,MAAAjU,oIAAA8uF,CAAA9uF,KAAA40L,kBA0UF,SAACx4B,YACJ,EAAAhkE,MAAA,SAAK+sD,QAAAc,MAAOmW,WAMjBnoJ,MAAKq9J,OAASnsB,QAAAc,MAAMmW,WALhB3vI,QAAQ1U,MAAR,oDAAAvG,OAAkE4qJ,UAAlE,YA5UM,mBAAAp8J,4GASVA,KAAKk0F,UAAY/F,UAAA,QAWjBnuF,KAAK60L,WAAa,EAclB70L,KAAK80L,kBAAoB,KAUzB90L,KAAKsxK,OAASnsB,QAAAc,MAAMgX,QASpBj9J,KAAK42F,sBAAwB,IAAI+9F,uBAAA,QAAsB30L,KAAKsxK,QAE5DtxK,KAAKojC,OACAgvD,wHAiBL,OAAOpyF,sCAUPA,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAMs3D,UAAWtoJ,KAAKgmJ,6CAUxChmJ,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAMs3D,UAAWtoJ,KAAKgmJ,mDAgBzC,MAAO,EAAC,EAAO,iFAYLiJ,iBAAkBtmD,UAG5B,OAFAA,SAAWn8E,SAASm8E,SAAUtC,gBAAAk+B,eAEvB0qB,iBAAiB8lC,cAAcpsF,kDAU1BT,WACZ,IAAM8sF,YAAc5hG,gBAAA,QAAeiS,cAAcvM,qBAAAqI,kBAAkBkqE,8BAC9D5zJ,MAAM,KACNtG,IAAI,SAAC/E,KAAD,OAAS++C,WAAW/+C,OAEvB6oL,UADeD,YAAYxoL,QAAQxM,KAAK60L,YACb9hK,KAAKmiK,KAAKhtF,WAE3C,KAAI+sF,WAAaD,YAAYh4L,QAA7B,CAIA,GAAIi4L,UAAY,EAKZ,OAJAj1L,KAAK60L,WAAa,OAElB70L,KAAKk0F,UAAUjyC,QAAQssC,YAAAyC,MAAMkG,qBAKjCl3F,KAAK60L,WAAaG,YAAYC,WAE9Bj1L,KAAKk0F,UAAUjyC,QAAQssC,YAAAyC,MAAMkG,kEAY7Bl3F,KAAKm1L,iBAFc,+CAcnBn1L,KAAKm1L,gBAFa,6CAiBlB,MAAO,EAAC,EAAO,mFAYLlmC,iBAAkByY,kBAC5B,OAAOzY,iBAAiBuS,cAAckG,+DAgBtC,MAAO,EAAC,EAAO,gFAef,MAAO,EAAC,EAAO,2EASHzlE,mBACZ,IAAMyF,aAAezF,kBAAkB0lE,gBACjCytB,kBAAoBnzF,kBAAkBylE,iBACtCzY,iBAAmBjvJ,KAAK42F,sBAAsBy+F,yCAChDpzF,kBAAkBwlE,mBAGtB,OAAM//D,gBAAgB1nG,MAIlB,EAAAguF,QAAA,SAAOihE,kBACA,EAAC,EAAO,yBAKZjvJ,KAAK0nG,cAALl3F,MAAAxQ,KAAA,CAAmBivJ,kBAAnBz9I,OAAAuqF,mBAAwCq5F,qBATpC,EAAC,EAAO,yDAqBTnmC,iBAAkBykC,gBAC5B,OAA4B,EAAxBA,eAAe12L,OACR,EAAC,EAAO,8BAGI,MAAnB02L,eACOzkC,iBAAiBokC,uBAGrBpkC,iBAAiBqmC,cAAc5B,eAAen4I,+CAWjD0zG,iBAAkB4E,QACtB,IAAM0hC,kBAAoBv1L,KAAKsxK,OAAOtxE,MAAMi0E,uBACtCuhB,cAAgBx1L,KAAKsxK,OAAOtxE,MAAMk0E,mBAExC,OAAIrgB,QAAU,EACH,EAAC,EAAO,0BAGN2hC,cAAT3hC,OACO,EAAC,EAAD,iBAAAriJ,OAAyBgkL,cAAzB,SAGN3hC,SACDA,OAAS0hC,mBAGNtmC,iBAAiBwmC,QAAQ5hC,2CA5PhC,OAAO7zJ,KAAK60L,ymBClFpB,IAAA/mG,QAAAC,uBAAAvxF,QAAA,WACAi1G,MAAA1jB,uBAAAvxF,QAAA,eAEA22F,eADApF,uBAAAvxF,QAAA,eACAuxF,uBAAAvxF,QAAA,oBACA4pG,gBAAA5pG,QAAA,8BACA8xF,aAAA9xF,QAAA,2BACAs3F,WAAAt3F,QAAA,yBACAk5L,iBAAAl5L,QAAA,+BAOAu3F,iBAAAv3F,QAAA,qIAM2B,WACvBq/C,KAAK85I,OAAS,GACd95I,KAAK85I,OAAOC,UAAY7oK,OAAO8oK,kBAC/Bh6I,KAAK85I,OAAO9kJ,SAAU,MAElB,EAAA4gE,MAAA,SAAKxhB,aAAc3B,aAAA4B,YAAYkhF,oBAAoB,KACnDv1H,KAAK85I,OAAO9kJ,SAAU,GACtB,EAAAi9C,QAAA,SAAEgG,WAAAuB,UAAUC,cAAc06E,eAAe15G,SAASw9B,WAAAuB,UAAUuL,WAAWswC,sCAQ5C,WAK/B,MAAO,CACH4kD,MALUJ,iBAAAK,OAAOhjK,KAAKC,MAAMD,KAAK+B,SAAW4gK,iBAAAK,OAAO/4L,SAMnDg5L,OALWjjK,KAAK+B,UAAY4gK,iBAAAO,YAAcP,iBAAAQ,cAAgBR,iBAAAQ,cAAc9xF,QAAQ,GAMhFiZ,MALUtqF,KAAK+B,UAAY4gK,iBAAAS,aAAeT,iBAAAU,cAAgBV,iBAAAU,cAAchyF,QAAQ,wBAc9D,SAACiyF,SAAU5uF,YACjC,GAA6B,MAAzB5rD,KAAK85I,OAAOC,WAAqB/5I,KAAK85I,OAAO9kJ,QAAS,CAGtD,IAFA,IAAIylJ,UAAY,GAEPj6L,EAAI,EAAGA,EAAIg6L,SAASr5L,OAAQX,IAAK,CACtC,IAAMk6L,eAAiBF,SAASh6L,GAEhC,OAAQk6L,eAAe90L,MACnB,IAAK,WACD60L,WAAS,IAAA9kL,OAAQ+kL,eAAe/rL,QAAQyiG,mBAA/B,KACT,MACJ,IAAK,WACDqpF,WAAS,IAAA9kL,QAAQ,EAAA40F,gBAAAqF,gBAAe8qF,eAAe/rL,SAAtC,KACT,MACJ,IAAK,QAAS,IAAK,UACf8rL,WAAS,IAAA9kL,QAAQ,EAAA40F,gBAAAuF,eAAc4qF,eAAe/rL,SAArC,KACT,MACJ,IAAK,OACD8rL,WAAS,IAAA9kL,OAAQ+kL,eAAe/rL,QAAvB,MAOrB,IAAMgsL,UAAY,IAAIC,yBAAyBH,WAC/CE,UAAUlmJ,KAAO,QACjBkmJ,UAAUV,MAAQj6I,KAAK85I,OAAOC,UAAUc,YAAY9pJ,OAAO,SAACkpJ,OAExD,OAAOA,MAAMn1L,OAAS8mG,WAAWquF,QAClC,GACHU,UAAUn5E,KAAO5V,WAAW4V,KAC5Bm5E,UAAUR,MAAQvuF,WAAWuuF,MAG7Bn6I,KAAK85I,OAAOC,UAAUe,MAAMH,mCAQP,WACzB,IAAMI,sBAAuB,EAAA9oG,QAAA,SAAEgG,WAAAuB,UAAUC,cAAc06E,eACvDn0H,KAAK85I,OAAO9kJ,SAAWgL,KAAK85I,OAAO9kJ,QAE9BgL,KAAK85I,OAAO9kJ,SACbgL,KAAK85I,OAAOC,UAAUjoG,SAG1BipG,qBAAqBhgI,YAAYk9B,WAAAuB,UAAUuL,WAAWswC,QAEtDjhD,aAAa3B,aAAA4B,YAAYkhF,oBAAsBv1H,KAAK85I,OAAO9kJ,QAC3D,IAAMmmB,SAAW4/H,qBAAqB5/H,SAAS88B,WAAAuB,UAAUuL,WAAWswC,QAEpE/9C,cAAA,QAAa+B,YAAYnB,iBAAAoB,gBAAgB2N,QAAS,SAAlD,GAAAtxF,OAA+DwlD,iXC7GnE,IAAA22C,SAAA5f,uBAAAvxF,QAAA,kBACAo9G,UAAA7rB,uBAAAvxF,QAAA,mBACAyoK,QAAAl3E,uBAAAvxF,QAAA,iBACA6uI,SAAAt9C,uBAAAvxF,QAAA,kBACA4yH,iBAAArhC,uBAAAvxF,QAAA,2BACAq6L,mBAAA9oG,uBAAAvxF,QAAA,wBACAypG,mBAAAzpG,QAAA,kCACA41G,oBAAA51G,QAAA,0qCA4Ne,mtBApNsB4yH,iBAAA,uFAgC5BimB,aACD,IAAI,EAAAjjC,oBAAA4d,oBAAmBqlB,aACnB,MAAM,IAAInjH,UAAU,8DAAA,6CAAA1gB,OAAAiiG,QACoC4hC,eAG5Dr1I,KAAK82L,yBAAyBzhD,YAAY0hD,gDAY1C,EAAAn9E,UAAA,SAAS55G,KAAKirI,OAAQ,SAAC34B,mBACnBA,kBAAkB3gE,UAKtB3xC,KAAKirI,OAAS,wCAYdjrI,KAAKirI,OAAOv3G,QAAQ,SAAC4+E,mBACjBA,kBAAkB0kF,iDASL,IAAZ5iC,MAAY,EAAAvvJ,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAJ,GACb,GAAqB,IAAjBuvJ,MAAMp3J,OAIV,IAAK,IAAIX,EAAI,EAAGA,EAAI+3J,MAAMp3J,OAAQX,IAAK,CACnC,IAAM46L,UAAY7iC,MAAM/3J,GAExB2D,KAAKq0G,QAAQ4iF,4CASbzgL,MACJ,KAAMA,gBAAgBqgL,mBAAA,SAClB,MAAM,IAAI3kK,UAAU,8EAGxBlyB,KAAKirI,OAAOznI,KAAKgT,8DAkBjB,IAAM0gL,+BAAiC,GADXn/C,2BAAA,EAAAC,mBAAA,EAAAC,oBAAAr1I,EAAA,IAK5B,IAAA,IAAAs1I,MAAAC,UAA2Bn4I,KAAKm3L,gBAAhC9xJ,OAAAC,cAAAyyG,2BAAAG,MAAAC,UAAAhyH,QAAAd,MAAA0yH,2BAAA,EAAiD,CAAA,IAAtCq/C,aAAsCl/C,MAAA1yI,MACvCwiK,aAAeovB,aAAapsF,YAAYvzF,MAAM,KAAK,GAGzD,GAAIuwJ,aAAahrK,OAAS,IAAK,EAAAioK,QAAA,UAAQ+C,aAAa,IAC1C,kBAAmBkvB,iCACrBA,+BAA+BG,cAAgB,IAGnDH,+BAA+BG,cAAc7zL,KAAK4zL,kBALtD,CAWA,IAAME,kBAAoBtvB,aAAapiJ,OAAO,GAExC0xK,qBAAqBJ,iCACvBA,+BAA+BI,mBAAqB,IAGxDJ,+BAA+BI,mBAAmB9zL,KAAK4zL,gBA1B/B,MAAAp0L,KAAAg1I,mBAAA,EAAAC,eAAAj1I,IAAA,QAAA,IAAA+0I,2BAAA,MAAAI,UAAA,QAAAA,UAAA,SAAA,QAAA,GAAAH,kBAAA,MAAAC,gBAiC5B,IAJA,IAAMs/C,wBAA0B,GAIhChyJ,GAAA,EAAAiyJ,aAAqB5sK,OAAO8R,KAAKw6J,gCAAjC3xJ,GAAAiyJ,aAAAx6L,OAAAuoC,KAAkE,CAA7D,IAAMslE,OAAM2sF,aAAAjyJ,IACb,KAAe,kBAAXslE,QACyD,EAArDjgF,OAAO8R,KAAKw6J,gCAAgCl6L,QAcpD,IANA,IAAM+5L,cAAgBG,+BAA+BrsF,QAAQj+D,OAAO,SAAC/vC,GAAD,OAAgB,EAATA,EAAEwgH,OACvEo6E,QAAUV,cAAc5lL,IAAI,SAACi+B,SAAD,OAAaA,QAAQiuE,OACjDq6E,UAAYX,cAAcn7D,OAAO,SAACygB,IAAKjtG,SAAN,OAAkBitG,IAAMjtG,QAAQiuE,MAAM,GACvEs6E,gBAAiB,EAAAtsD,SAAA,SAAQqsD,WAAW,GACtC3sI,SAAW,EAEN1uD,EAAI,EAAGA,EAAIo7L,QAAQz6L,OAAQX,IAAK,CAGrC,GAAIs7L,gBAFmB5sI,SAAW0sI,QAAQp7L,GAEJ,CAClCk7L,wBAAwB/zL,KAAKuzL,cAAc16L,IAE3C,MAGJ0uD,UAAY0sI,QAAQp7L,IAI5B,OAAOk7L,4EAWiBK,gBACxB,OAAO,EAAAjqF,SAAA,SAAQ3tG,KAAKirI,OAAQ,CAAEpzC,SAAU+/F,kEAYnBb,eAAe,IAAA9iL,MAAAjU,MACpC,EAAA45G,UAAA,SAASm9E,cAAe,SAACK,cACrB,IAAM9kF,kBAAoB,IAAIukF,mBAAA,QAAkBO,cAEhDnjL,MAAKogG,QAAQ/B,gEAvMjB,OAAOtyG,KAAKirI,+CAYZ,OAAO,EAAAt9B,SAAA,SAAQ3tG,KAAKirI,OAAQ,CAAEpzC,SAAUoO,mBAAAwR,gBAAgB6D,wgBCnChE,IAAA1B,UAAA7rB,uBAAAvxF,QAAA,mBACAi1G,MAAA1jB,uBAAAvxF,QAAA,eACAspG,MAAA/X,uBAAAvxF,QAAA,eACAsmI,UAAA/0C,uBAAAvxF,QAAA,mBACAq9G,UAAA9rB,uBAAAvxF,QAAA,mBACA6uI,SAAAt9C,uBAAAvxF,QAAA,kBACAupG,QAAAhY,uBAAAvxF,QAAA,iBACA+0H,YAAAxjC,uBAAAvxF,QAAA,kDACAq2F,mBAAA9E,uBAAAvxF,QAAA,iCACAszH,YAAA/hC,uBAAAvxF,QAAA,sBACAq5I,qBAAA9nD,uBAAAvxF,QAAA,gCACAq7L,wBAAAr7L,QAAA,2BACAs7L,gCAAAt7L,QAAA,oCACA0pG,QAAA1pG,QAAA,kBACAypG,mBAAAzpG,QAAA,kCACA6xF,kBAAA7xF,QAAA,iCACAu8F,iBAAAv8F,QAAA,gCAIA6pG,gBAAA7pG,QAAA,ymDAWA,IAAMu7L,oBACM,SADNA,oBAEM,SAFNA,mBAGK,QAHLA,kBAII,OAsDWC,uCAOjB,SAAAA,kBAAYC,kBAAkB,IAAAhkL,MAAA,qIAAA66E,CAAA9uF,KAAAg4L,oBAC1B/jL,MAAAs7G,2BAAAvvH,KAAAwvH,gBAAAwoE,mBAAAj7L,KAAAiD,KAAM,uBAgBDk4L,WAAan/F,iBAAA2K,eASlBzvF,MAAK4jF,SAAW,GAWhB5jF,MAAKyY,OAAS,GASdzY,MAAK69E,SAAW,GAoBhB79E,MAAKkkL,qBAAuB,GAY5BlkL,MAAKy+F,qBAAuB,GAY5Bz+F,MAAK29G,YAAc,KAWnB39G,MAAK6jG,OAAS,GAUd7jG,MAAK8jG,YAAc,GASnB9jG,MAAK+2F,YAAc,GASnB/2F,MAAK0yF,SAAW,GAahB1yF,MAAKmkG,UAAY,GAUjBnkG,MAAKmkL,iBAAmBr/F,iBAAA2K,eAUxBzvF,MAAKokL,iBAAmBt/F,iBAAA2K,eASxBzvF,MAAKy/C,MAAQ,EASbz/C,MAAKk0F,SAAW,IAShBl0F,MAAKyvH,eAAiB,KAWtBzvH,MAAKopG,KAAOtkB,iBAAA2K,eAUZzvF,MAAKqkL,YAAcv/F,iBAAA2K,eAWnBzvF,MAAKskL,eAAiBx/F,iBAAA2K,eAWtBzvF,MAAKuR,OAASuzE,iBAAA2K,eAWdzvF,MAAKukL,OAASz/F,iBAAA2K,eASdzvF,MAAKwkL,UAAY1/F,iBAAA2K,eAYjBzvF,MAAKykL,QAAU,CAAC,IAAK,IAarBzkL,MAAK0kL,mBAAqB5/F,iBAAA2K,eAa1BzvF,MAAK2kL,qBAAuB7/F,iBAAA2K,eAa5BzvF,MAAK4kL,QAAU9/F,iBAAA2K,eAEfzvF,MAAKmvB,KAAK60J,kBAjTgBhkL,kZAPa67G,YAAA,kFAmZtCmoE,mBAEG,EAAAp+E,UAAA,SAASo+E,qBAIR,EAAAH,gCAAAgB,gCAA+Bb,mBAChCxrK,QAAQ1U,MAAM,wCAAyCkgL,kBAG3Dj4L,KAAK83G,OAASmgF,iBAAiBngF,OAC/B93G,KAAK+3G,YAAckgF,iBAAiBlgF,YACpC/3G,KAAK63F,SAAWogG,iBAAiBpgG,SACjC73F,KAAKgrG,YAAcitF,iBAAiBv2B,MACpC1hK,KAAK2mG,SAAWsxF,iBAAiBtxF,SACjC3mG,KAAK0zD,MAAQ1zD,KAAK+4L,sBAAsBd,kBACxCj4L,KAAK0sB,OAASurK,iBAAiBvrK,OAC/B1sB,KAAKq9G,KAAOlyD,WAAW8sI,iBAAiB56E,MACxCr9G,KAAKs4L,YAAct4L,KAAKq9G,KACxBr9G,KAAK04L,SAAU,EAAAjnF,MAAA,SAAKwmF,iBAAkB,UAAWj4L,KAAK04L,SAEtD14L,KAAK4xH,YAAc,IAAIL,YAAA,QAAW0mE,iBAAiBv2B,OACnD1hK,KAAKu4L,eAAiB,EACtBv4L,KAAKw4L,OAASz/F,iBAAAimB,KAAKC,oBAAsB,EACzCj/G,KAAK0jI,eAAiB1jI,KAAKg5L,8CAC3Bh5L,KAAK8xF,SAAW9xF,KAAKi5L,0CAA0ChB,iBAAiBnmG,UAChF9xF,KAAKm4L,qBAAuBn4L,KAAKk5L,4BACjCl5L,KAAK0yG,qBAAuB1yG,KAAKm5L,uBAAuBlB,kBAExDj4L,KAAKo5L,yCAAyCnB,kBAC9Cj4L,KAAKq5L,yBAAyBpB,kBAC9Bj4L,KAAKs5L,iDAAiDrB,kBACtDj4L,KAAKu5L,mBAAmBtB,iBAAiBtvF,2CAYzC3oG,KAAKk4L,WAAan/F,iBAAA2K,eAClB1jG,KAAK63F,SAAW,GAChB73F,KAAK0sB,OAAS,GACd1sB,KAAK83G,OAAS,GACd93G,KAAK+3G,YAAc,GACnB/3G,KAAKgrG,YAAc,GACnBhrG,KAAK2mG,SAAW,GAChB3mG,KAAKo4L,iBAAmBr/F,iBAAA2K,eACxB1jG,KAAKq4L,iBAAmBt/F,iBAAA2K,eACxB1jG,KAAK0zD,MAAQ,EACb1zD,KAAKmoG,QAAUpP,iBAAA2K,eACf1jG,KAAK0jI,eAAiB,KAEtB1jI,KAAKu4L,eAAiBx/F,iBAAA2K,eACtB1jG,KAAKq9G,KAAOtkB,iBAAA2K,eACZ1jG,KAAKwlB,OAASuzE,iBAAA2K,eACd1jG,KAAKw4L,OAASz/F,iBAAA2K,eACd1jG,KAAKy4L,UAAY1/F,iBAAA2K,eAEjB1jG,KAAK8xF,SAAW,GAChB9xF,KAAKm4L,qBAAuB,GAC5Bn4L,KAAK0yG,qBAAuB,uCAU5B1yG,KAAKq9G,KAAOr9G,KAAKs4L,+CAaVpmI,WACHlyD,KAAKu4L,iBAAmBx/F,iBAAA2K,iBAI5B1jG,KAAKu4L,eAAiBrmI,UAAYlyD,KAAKwlB,2DAavC,IAAMnP,MAAQrW,KAAKw5L,wBAAwBx5L,KAAKm4L,sBAGhD,OAFkBn4L,KAAKm4L,qBAAqB9hL,mDAiBhB,IAAd04F,SAAc,EAAAlqG,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAH,EACzB,OAAQ7E,KAAK0sB,QACT,KAAKqrK,oBACD,OAAO/3L,KAAKy5L,8BAChB,KAAK1B,oBACD,OAAO/3L,KAAK05L,gCAAgC3qF,UAChD,KAAKgpF,mBACD,OAAO/3L,KAAK25L,+BAA+B5qF,UAC/C,KAAKgpF,kBACD,OAAO/3L,KAAK45L,8BAA8B7qF,uDAclD,OAAO/uG,KAAKo2G,aAAep2G,KAAKkgH,mDAWhC,OAAOlgH,KAAK63F,WAAaoO,mBAAAwR,gBAAgBC,8CAWzC,OAAO13G,KAAK63F,WAAaoO,mBAAAwR,gBAAgB6D,iDAWzC,OAAOt7G,KAAK63F,WAAaoO,mBAAAwR,gBAAgB8D,0DAUtB5lB,oBACsB,IAArC31F,KAAK0yG,qBAAqB11G,SAC1BgD,KAAK0yG,qBAAuB1yG,KAAKm5L,uBAAuBn5L,OAGxDA,KAAK65L,qBAA0D,EAAnC75L,KAAK0yG,qBAAqB11G,QACtD24F,mBAAmBmkG,4CAA4C95L,uEAY9Bi4L,kBACrC,GAAIA,iBAAiBvrK,SAAWqrK,mBAAhC,CAIA/3L,KAAK24L,mBAAqB34L,KAAK0zD,MAAQ1zD,KAAK04L,QAAQ,GACpD14L,KAAK44L,qBAAuB54L,KAAK0zD,MAAQ1zD,KAAK04L,QAAQ,GAGtD14L,KAAKsrF,QAAUtrF,KAAKw4L,OAASx4L,KAAKq9G,KAAOr9G,KAAKw4L,OAASx4L,KAAK44L,uBACvD54L,KAAK24L,mBAAqB34L,KAAK44L,sBACpC54L,KAAKsrF,QAAUtrF,KAAKsrF,QAAUyN,iBAAAimB,KAAKC,oBAAsBj/G,KAAK24L,oBAI9D,IAIMoB,kBAJmB/5L,KAAKq9G,KAAOr9G,KAAKw4L,OAASz/F,iBAAAimB,KAAKsH,oBAC9BtmH,KAAK24L,mBAAqB34L,KAAKsrF,OAASyN,iBAAAimB,KAAKsH,uBACtDtmH,KAAKw4L,OAASx4L,KAAKsrF,QACYyN,iBAAAimB,KAAKsH,qBAGrDtmH,KAAK44L,qBAAuBmB,iBAIxB/5L,KAAKq9G,KAAOr9G,KAAK24L,oBACjBlsK,QAAQ4tB,KAAK,0CAAA,GAAA7oC,OACNxR,KAAKq9G,KADC,6DAAA,GAAA7rG,OAENuhB,KAAK06B,KAAKztD,KAAK44L,sBAFT,YAAApnL,OAEyCuhB,KAAKC,MAAMhzB,KAAK24L,oBAFzD,UAIb34L,KAAKq9G,KAAOr9G,KAAK24L,mBACjB34L,KAAK44L,qBAAuB54L,KAAK24L,oBAC1B34L,KAAKq9G,KAAOr9G,KAAK44L,uBACxBnsK,QAAQ4tB,KAAK,yCAAA,GAAA7oC,OACNxR,KAAKq9G,KADC,6DAAA,GAAA7rG,OAENuhB,KAAK06B,KAAKztD,KAAK44L,sBAFT,YAAApnL,OAEyCuhB,KAAKC,MAAMhzB,KAAK24L,oBAFzD,UAIb34L,KAAKq9G,KAAOr9G,KAAK44L,qBACjB54L,KAAK24L,mBAAqB34L,KAAK44L,wEAYdX,kBACrB,IAAMzyK,QAAS,EAAAisF,MAAA,SAAKwmF,iBAAkB,SAAU,GAC1CO,QAAS,EAAA/mF,MAAA,SAAKwmF,iBAAkB,SAAU,MAEhDj4L,KAAKwlB,QAAS,EAAA6gF,gBAAA2zF,yBAAwBx0K,QACtCxlB,KAAKw4L,OAASA,QACV,EAAAnyF,gBAAA2zF,yBAAwBxB,QACxBx4L,KAAKw4L,OACTx4L,KAAKy4L,WAAY,EAAAhnF,MAAA,SAAKwmF,iBAAkB,YAAa,8CAetCtvF,UACf,IAAI,EAAAm6B,UAAA,SAASn6B,UAAW,CAAA,IAAA4nF,UAAAp0F,eACDwM,SADC,GACbp8B,IADagkH,UAAA,GACRvjI,IADQujI,UAAA,GAMpB,OAHAvwL,KAAKo4L,iBAAmB5rK,SAAS+/C,IAAK85B,gBAAAk+B,oBACtCvkI,KAAKq4L,iBAAmB7rK,SAASwgC,IAAKq5C,gBAAAk+B,gBAK1CvkI,KAAKo4L,iBAAmB5rK,SAASm8E,SAAUtC,gBAAAk+B,eAC3CvkI,KAAKq4L,iBAAmB7rK,SAASm8E,SAAUtC,gBAAAk+B,qEAY3C,IAAM01D,aAAej6L,KAAKk6L,kCACpBC,aAAephG,iBAAAimB,KAAKC,oBAAsBj/G,KAAKq9G,KAErD,GAAI88E,aAAeF,aAGf,OAFAxtK,QAAQ1U,MAAR,iDAAAvG,OAA+DxR,KAAKgrG,YAApE,MAEOivF,aAGX,IACMG,aAAeD,cADEA,aAAeF,cAGtC,OAAO,EAAA5uD,SAAA,SAAQ4uD,aAAcG,wEAU7B,OAAmB,IAAfp6L,KAAK0zD,MACE,EAGJ3gC,KAAKC,MAAMq7D,kBAAA2xB,kBAAkBspD,yBAA2BvwE,iBAAAimB,KAAKC,oBAAsBj/G,KAAK0zD,gEAsBnEq7C,UAC5B,IAAMsrF,UAAYtrF,SAAW/uG,KAAKu4L,eAC5B+B,iBAAmBD,WAAar6L,KAAKw4L,OAAS,GAEpD,OAAwB,GAApB8B,kBACAt6L,KAAKu4L,gBAAkBv4L,KAAKw4L,OAErBz/F,iBAAAimB,KAAKC,qBAAuBj/G,KAAKq9G,MAAQi9E,iBAAmB,GAAKt6L,KAAKy4L,YAG7E6B,kBAAoB,EACbvhG,iBAAAimB,KAAKC,qBAAuBj/G,KAAKq9G,KAAOi9E,iBAAmBt6L,KAAKy4L,WAGvE6B,kBAAoB,EACbvhG,iBAAAimB,KAAKC,qBAAuBj/G,KAAKq9G,KAAQ,GAAKr9G,KAAKw4L,OAAS,EAAI6B,WAAar6L,KAAKw4L,OAAUx4L,KAAKy4L,WAGxG6B,kBAAoB,EACbvhG,iBAAAimB,KAAKC,qBAAuBj/G,KAAKq9G,MAAQi9E,iBAAmB,GAAKt6L,KAAKy4L,WAG7E6B,iBAAmB,EACZvhG,iBAAAimB,KAAKC,qBAAuBj/G,KAAKq9G,KAAQ,GAAKr9G,KAAKw4L,OAAS6B,WAAar6L,KAAKw4L,OAAUx4L,KAAKy4L,gBADxG,yDAwB2B1pF,UAC3B,IAAMsrF,UAAYtrF,SAAW/uG,KAAKu4L,eAC5B+B,iBAAmBD,UAAYr6L,KAAKw4L,OACpC+B,WAAaxhG,iBAAAimB,KAAKC,oBAAsBj/G,KAAK24L,mBAC7C6B,aAAezhG,iBAAAimB,KAAKC,oBAAsBj/G,KAAK44L,qBAE/C6B,cAAgBz6L,KAAKw4L,OAAS6B,UAEpC,OAAwB,GAApBC,kBACAt6L,KAAKu4L,gBAAkBv4L,KAAKw4L,OAErB+B,YAIPF,WAAar6L,KAAKsrF,OACXivG,WAGSC,aAAeD,WAA/BE,cAEOD,aAGSA,aAAhBC,cAEOD,cAAgBH,UAAYG,aAAeD,WAAav6L,KAAKw4L,SAIxEx4L,KAAKu4L,gBAAkBv4L,KAAKw4L,OAErB+B,kEAyBmBxrF,UAC1B,IACMurF,kBADIvrF,SAAW/uG,KAAKu4L,gBACGv4L,KAAKw4L,OAEV,GAApB8B,mBACAt6L,KAAKu4L,gBAAkBv4L,KAAKw4L,QAGhC,IAAMn7E,KAAOr9G,KAAKq9G,KAAOr9G,KAAKy4L,UAAY1lK,KAAK6tF,IAAI05E,kBAAmB,EAAAp0F,QAAAqpD,QAEtE,OAAOx2D,iBAAAimB,KAAKC,oBAAsB5B,8CAYrBxlB,UACb,OAAOA,WAAaoO,mBAAAwR,gBAAgBC,SAChC7f,WAAaoO,mBAAAwR,gBAAgB6D,WAC7BzjB,WAAaoO,mBAAAwR,gBAAgB8D,2DAYbrrG,MACpB,OAAO,EAAAm7H,SAAA,SAAQ,EAAGn7H,KAAKlT,OAAS,iDAWdi7L,kBAClB,OAAKA,iBAAiBvkI,MAIflnC,SAASyrK,iBAAiBvkI,MAAO2yC,gBAAAk+B,eAH7B,oEAoB2Bm2D,sBAMtC,OALkC,EAAA50F,MAAA,SAAK40F,qBAAsB,SAACC,qBAAD,MAA0B,CACnFh6L,KAAMg6L,oBAAoB,GAC1Bt9E,KAAMs9E,oBAAoB,0DAkB9B,IAAMC,oBAAsB,GAQ5B,OANA,EAAAhhF,UAAA,SAAS55G,KAAK8xF,SAAU,SAACkmB,SACrB,IAAK,IAAI37G,EAAI,EAAGA,EAAI27G,QAAQqF,KAAMhhH,IAC9Bu+L,oBAAoBp3L,KAAKw0G,QAAQr3G,QAIlCi6L,mEAWY3C,kBACnB,GAAIj4L,KAAKm2G,cAAe,CAMpB,MAJkC,CAAC,CAC/B10G,KAAM,cAWd,OALoC,EAAAo2L,wBAAAgD,uBAChC5C,iBACAplG,mBAAA,QAAkBlgF,kFAgBuBslL,kBACzCA,iBAAiBpgG,WAAaoO,mBAAAwR,gBAAgB6D,YAIlDt7G,KAAK0jI,eAAiB1jI,KAAK4xH,YAAYxZ,UAAU,GAAGzT,cACpD3kG,KAAKmoG,QAAUnoG,KAAK86L,2EAapB,IAAMC,2BAA6B/6L,KAAK4xH,YAAYxZ,UAAU,GAAGzT,cAC3Dq2F,4BAA8Bh7L,KAAK4xH,YAAYxZ,UAAU,GAAGzT,cAGlE,OAFgBo2F,2BAA2B70E,kBAAkB80E,mGAY7D,IAAMngD,gBAAkBhoD,mBAAA,QAAkBkV,cAAcpD,cAOxD,OANgC,IAAIkxC,qBAAA,QAChCgF,gBAAgB/5B,IAChB+5B,gBACAA,gBAAgB5D,0CAvsBpB,OAAOj3I,KAAKi/I,wCAUZ,OAAO,EAAAn5C,MAAA,SAAK9lG,KAAK8xF,SAAU,SAACkmB,SAAD,OAAaA,QAAQr3G,2CAahD,OAAIX,KAAKkgH,eACE,aAGJlgH,KAAKo2G,YACNp2G,KAAK+3G,YACL/3G,KAAK83G,wCAYX,IAAMnP,UAAW,EAAA0iC,SAAA,SAAQrrI,KAAKo4L,iBAAkBp4L,KAAKq4L,kBAErD,OAAO,EAAAtyF,QAAA,SAAO4C,UAAW,yCAWzB,OAAO3oG,KAAK0jI,wDAWZ,OAAO1jI,KAAK0jI,eAAe7nC,+zBC7dnC,IAAA+d,UAAA7rB,uBAAAvxF,QAAA,mBACAi3F,wBAAA1F,uBAAAvxF,QAAA,6BACA4xF,YAAAL,uBAAAvxF,QAAA,yBACA42F,gBAAArF,uBAAAvxF,QAAA,2BACAu8F,iBAAAv8F,QAAA,mZA2Me,eA3LX,SAAAy+L,iBAAc,kBAAAhnL,MAAAjU,oIAAA8uF,CAAA9uF,KAAAi7L,sBAgLyB,WAAa,IAAA,IAAAtuK,KAAA9nB,UAAA7H,OAATuK,KAAS,IAAAyd,MAAA2H,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAATrlB,KAASqlB,MAAA/nB,UAAA+nB,MAChD,IAAM0lF,kBAAoB/qG,KAAK,GAAG,GACPA,KAAK,GAAG,GAEhB2zL,oCAAoC5oF,mBAEvDA,kBAAkB4lF,WAAajkL,MAAKknL,mBAAmB7oF,yBAtL7C,8CAAAtyG,4GAOVA,KAAKy5F,oBAAsB,sHAS1B9D,oBACD,QAAkC,IAAvBA,mBACP,MAAM,IAAIzjE,UAAU,gFAOxB,OAJAlyB,KAAKy5F,oBAAsB9D,mBAE3B31F,KAAK82F,iBAEE92F,8CAWPA,KAAKo7L,0BAGLp7L,KAAKg3F,6EASiB,IAAA9F,OAAAlxF,MACtB,EAAA45G,UAAA,SAASnmB,wBAAA,QAAuB4nG,mBAAoB,SAAC/oF,mBAEjDA,kBAAkBgpF,WAAWltG,YAAA,QAAW4gB,sBACxCsD,kBAAkB4lF,WAAahnG,OAAKiqG,mBAAmB7oF,mBACvDA,kBAAkBipF,uBAAuBrqG,OAAKuI,sEAY/B,IAAArI,OAAApxF,KACnByzF,wBAAA,QAAuB4nG,mBAAmBzuJ,OAAO,SAACjW,GAAD,OAAOA,EAAEkjK,sBAAqBnmK,QAAQ,SAAC4+E,mBACpFA,kBAAkBI,qBAAuB,GACzCJ,kBAAkBipF,uBAAuBnqG,OAAKqI,qBAC9CrI,OAAKoqG,WAAWlpF,wEAmBpB,IAFA,IAAMmpF,0BAA4BhoG,wBAAA,QAAuBioG,gCAEhDr/L,EAAI,EAAGA,EAAIo/L,0BAA0Bz+L,OAAQX,IAAK,CACvD,IAAMi2G,kBAAoBmpF,0BAA0Bp/L,GACpD2D,KAAKy5F,oBAAoByhG,oCAAoC5oF,+DAYlDA,mBACf,IAAMx9C,MAAQw9C,kBAAkBqpF,kBAAkBvtG,YAAA,QAAW4gB,sBAE7D,OAAOhvG,KAAK47L,eAAetpF,kBAAmBx9C,0CAUvCw9C,mBACP,IAAIupF,WAAa,EACT3D,WAAe5lF,kBAAf4lF,WAER,GAAIA,YAAcA,aAAen/F,iBAAA2K,eAAgB,CAC7CtQ,gBAAA,QAAe0oG,aAAaxpF,kBAAkB4lF,YAE9C,IAAM6D,WAAazpF,kBAAkB4lF,WAAW,GAAK5lF,kBAAkB4lF,WAAW,GAClF2D,WAAaztG,YAAA,QAAW4gB,qBAAuB+sF,WAC/CzpF,kBAAkB4lF,WAAa,KAGnC,KAAI5lF,kBAAkB+K,MAAQ,GAA9B,CAIA,IAAI2+E,UAAY1pF,kBAAkBqpF,kBAAkBvtG,YAAA,QAAW4gB,sBAE3D6sF,WAAaG,UACbA,WAAaH,WAEb77L,KAAKy5F,oBAAoByhG,oCAAoC5oF,mBAGjEA,kBAAkB4lF,WAAal4L,KAAK47L,eAAetpF,kBAAmB0pF,mDAY3D1pF,kBAAmBx9C,OAC9B,OAAOs+B,gBAAA,QAAe6oG,aAClBj8L,KAAKk8L,qCAELpnI,MAEA,KAEA,CAACw9C,kBAAmBtyG,KAAKy5F,uvBCnLrC,IAAAigB,YAAA3rB,uBAAAvxF,QAAA,qBACAm9G,QAAA5rB,uBAAAvxF,QAAA,iBACAsmI,UAAA/0C,uBAAAvxF,QAAA,mBACAwxF,QAAAD,uBAAAvxF,QAAA,iBACA6uI,SAAAt9C,uBAAAvxF,QAAA,kBACAk1G,UAAA3jB,uBAAAvxF,QAAA,mBACAu4I,cAAAhnD,uBAAAvxF,QAAA,4BACA+0H,YAAAxjC,uBAAAvxF,QAAA,kDACAu8F,iBAAAv8F,QAAA,gCACA6pG,gBAAA7pG,QAAA,+BACA41G,oBAAA51G,QAAA,mCACA01G,UAAA11G,QAAA,oBACA49G,sBAAA59G,QAAA,qCACAq8F,MAAAr8F,QAAA,gvBAUO,SAAS2/L,uCAAuCC,mBAMnD,IAJA,IAAMC,kBAAoB,CAAC,GACvBC,sBAAwB,EAGnBjgM,EAAI,EAAGA,EAAI+/L,kBAAkBp/L,OAAQX,IAC1C,IAAI+/L,kBAAkB//L,GAAG4qH,mBAAoBm1E,kBAAkB//L,EAAI,GAAG4qH,iBAAtE,CAIA,IAAMs1E,sBAAwBH,kBAAkB//L,EAAI,GAC9CwoL,kBAAoBuX,kBAAkB//L,GAE5CigM,uBAD+BC,sBAAsBC,4BAA4B3X,mBAGjFwX,kBAAkB74L,KAAK84L,uBAG3B,OAAOD,kBAiBJ,SAASI,0BAA0BL,kBAAmBC,mBAGzD,IAFA,IAAMK,gBAAkB,GAEfrgM,EAAI,EAAGA,EAAI+/L,kBAAkBp/L,OAAQX,IAAK,CAC/C,IAAMoiH,cAAgB29E,kBAAkB//L,GAExC,GAAKoiH,cAAcsd,uBAAnB,CAIA,IAAM4gE,WAAY,EAAAjrF,UAAA,SAAS,CAAC+M,cAAc4K,gBAAiB5K,cAAcgL,kBAAmB,GAE5FizE,gBAAgBl5L,KAAK,CACjB64L,kBAAkBhgM,GAClB02B,KAAKw5C,IAAL/7D,MAAAuiB,KAAIgpE,mBAAQ4gG,eAIpB,OAAOD,gBAWJ,SAASE,2BAA2BF,gBAAiBG,gBACxD,IAEMC,gCAAiC,EAAApjF,YAAA,SAAWgjF,gBAAiB,SAACK,gBAChE,OAAOA,eAHa,IAGsBF,iBAE1CG,mCAAqCF,+BAAiC,EAM1E,GAJIE,oCAAsC,IACtCA,mCAAqCN,gBAAgB1/L,OAAS,GAG9D8/L,+BAAiC,EAAG,CACpC,GAAIE,mCAAqC,EACrC,MAAM,IAAI9qK,UAAU,kGAGxB,OAAOwqK,gBAAgBM,oCAfH,GAkBxB,GAAIA,mCAAqC,EACrC,OAAO,EAAArjF,QAAA,SAAO+iF,gBAAgBI,gCAnBV,IAmB6D,GAGrF,IAAMG,4BAA8BP,gBAAgBM,oCAC9CE,wBAA0BR,gBAAgBI,gCAC1CK,4BAA8BD,wBAzBZ,GAyBuDD,4BAzBvD,GA6BlBG,uCAH8BF,wBAzBZ,GAyBuDD,4BAzBvD,MA0BgCJ,eAAiBI,4BA3BjD,IA4B8DE,6BAGtF,OAAO,EAAAxjF,QAAA,SAAOsjF,4BA9BU,GA8BqCG,uCAAwC,GAelG,SAASC,qCACZX,gBACAG,eACAS,WACAC,cACAhU,cACA7tE,iBAEA,IAEI8hF,yBAA2Bd,gBAAgB,GAM/C,GAJKc,2BACDA,yBAA2B,CAACjU,cAAe7tE,kBAG3CmhF,gBAAkBW,yBARE,GASpB,OAAOZ,2BAA2BF,gBAAiBG,gBAGvD,IACMY,mCADqCD,yBAZnB,GAY+DX,gBACRS,WAAavkG,iBAAAimB,KAAKQ,oBAE3Fk+E,0BAA4BF,yBAdV,GAaG,IAEDC,kCAM1B,OAJI,EAAA36D,UAAA,SAASy6D,iBACTA,cAA4E,KAA5D,EAAAlyD,SAAA,SAAQkyD,cAAc,GAAK,IAAMA,cAAc,GAAK,MAGjExqK,KAAKw5C,KAAI,EAAAotC,QAAA,SAAO+jF,2BAA4B,GAAIH,eAuF3D,IAkGMI,UAAY,SAAC1F,iBAAkBxoG,SACjC,IAAMmuG,UAAY3F,iBAAiB56E,KAEnC,GAAIugF,WAAa,EACb,MAAO,GAGX,IAAMliF,gBAAkBjsB,QAAQksB,sBAC1B2hF,WAAarF,iBAAiBvkI,MAC9B6pI,cAAgBtF,iBAAiBtvF,SAMjCk1F,gBAFuBP,YAAc,GAHlBt4K,MAAM3hB,QAAQk6L,gBAAiB,EAAA1kG,MAAAilG,KAAIP,eAAiBA,eAEvBnjF,sBAAA4S,YAAYC,oCAGnB2wE,UAEzCxB,mBADanE,iBAAiBrmE,YAAcqmE,iBAAiBrmE,YAAc,IAAIL,YAAA,QAAW0mE,iBAAiBv2B,QAC5EtpD,UAC/BmxE,cArEgC,SAAC6S,kBAAmB3sG,SAQ1D,IALA,IAAI85F,cAAgB,EAKXltL,EAAI,EAAGA,EAAI+/L,kBAAkBp/L,OAAQX,IAAK,CAC/C,IAAMoiH,cAAgB29E,kBAAkB//L,GAClC0hM,iBAAmB3B,kBAAkB//L,EAAI,GAE/C,IAAIoiH,cAAcwI,mBAAoB82E,iBAAiB92E,iBAAvD,CAOA,IAHA,IAAM+2E,0BAA2B,EAAA33F,gBAAA0f,KAAG,EAAA7T,UAAA4C,YAAWipF,iBAAiBliG,iBAAkB4iB,cAAc5iB,mBAC5FoiG,mBAAqBvjK,EAAAA,EAEhB5O,EAAI,EAAGA,EAAI2jE,QAAQ8mD,SAASv5I,OAAQ8uB,IAAK,CAC9C,IAAMyqH,SAAW9mD,QAAQ8mD,SAASzqH,GAElC,GAAIyqH,SAASoF,gBAAgBl9B,cAAc5iB,kBAAmB,CAC1D,IAAMqiG,mBAAqB3nD,SAAS0nD,mBAAmBF,iBAAiBliG,kBAExEoiG,mBAAqBlrK,KAAKw5C,IAAI0xH,mBAAoBC,qBAK1D,GAAID,qBAAuBvjK,EAAAA,EAAU,CACjC6uJ,eAAiB0U,mBAEjB,MAGJ1U,eAAiByU,0BAGrB,OAAOzU,cA8Be4U,CAAkC/B,kBAAmB3sG,SAa3E,OAzMJ,SACI2sG,kBACAgC,aACAd,WACAC,cACAhU,cACA7tE,iBAOA,IALA,IAAM2iF,2BAA6B,GAC7BhC,kBAAoBF,uCAAuCC,mBAC3DM,gBAAkBD,0BAA0BL,kBAAmBC,mBAHvEiC,MAAA,SAMWjiM,GACL,IAAMkiM,YAAcH,aAAa/hM,GAC3BmiM,mBAAoB,EAAA9kF,YAAA,SAAW2iF,kBAAmB,SAAC/0E,oBAMrD,OAA4Bi3E,YAArBj3E,qBAELu9D,kBAAoBuX,kBAAkBoC,mBACtCC,sBAAwB1rK,KAAKi6B,IAAI,EAAGwxI,kBAAoB,GACxDjC,sBAAwBH,kBAAkBqC,uBAC1CC,yCAA2CH,YAAclC,kBAAkBoC,uBAC3Et2F,QAAUo0F,sBAAsBoC,2BAA2B9Z,mBAC3D+Z,mBAAqBrC,sBAAsB53F,cAAck6F,8CAC3D12F,QACAu2F,0CAEE/1F,SAAW00F,qCACbX,gBACA6B,YACAjB,WACAC,cACAhU,cACA7tE,iBAGJ2iF,2BAA2B76L,KAAK,CAC5BmlG,SAAAA,SACAR,QAAAA,QACA0pB,QAASgzD,kBAAkBlkL,KAC3BgkG,cAAei6F,sBAhCdviM,EAAI,EAAGA,EAAI+hM,aAAaphM,OAAQX,IAAKiiM,MAArCjiM,GAoCT,OAAOgiM,2BA+IgBS,CACnB1C,kBAzHsB,SAACyB,iBAAuC,IAC5DkB,yBAD4D,EAAAl6L,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAN,GACZ,EAE1Cm6L,uBAAyBjsK,KAAKi6B,IAAI,EAAG6wI,iBACvCoB,mBAAqB,GAEnBC,kBAAoBnsK,KAAKi6B,IAAIgyI,uBAAwBA,wBACtDA,uBAAyBC,qBAE1BD,uBAAyB,GACzBvyK,QAAQ1U,MAAR,kDAAAvG,OAAgEqsL,gBAAhE,sBAAArsL,OAAoGwtL,yBAI/EE,kBAArBD,qBACAA,mBAAqBC,mBAOzB,IAJA,IAAMd,aAAe,CAACW,yBAClBI,mBAAqBJ,wBAGGE,mBAArBE,uBAEHA,qBADiB,EAAA9zD,SAAA,SAAQ4zD,mBAAoBC,mBAAmB,IAGvCD,qBAIzBb,aAAa56L,KAAK27L,oBAMtB,OAFAf,aAAa56L,KAAK,GAEX46L,aAkFcgB,CAAsBvB,gBAAiBtU,eAKxD+T,WACAC,cACAhU,cACA7tE,gDAsB6B,SAACu8E,iBAAkBoH,gBACpD,IAAI,EAAArxG,QAAA,SAAOiqG,oBAAqB,EAAAjqG,QAAA,SAAOqxG,gBACnC,MAAM,IAAIntK,UAAU,qHAAA,gBAAA1gB,OAAAiiG,QAEOwkF,kBAFP,SAAAzmL,OAAAiiG,QAEsC4rF,kBAG9D,IAAI,EAAAjtF,oBAAA4d,oBAAmBioE,kBACnB,MAAM,IAAI/lK,UAAU,6DAAA,6CAAA1gB,OAAAiiG,QACoCwkF,oBAG5D,KAAMoH,0BAA0BtqD,cAAA,SAC5B,MAAM,IAAI7iH,UAAU,2DAAA,mDAAA1gB,OAAAiiG,QAC0C4rF,kBAGlE,OAAO1B,UAAU1F,iBAAkBoH,ujBChavC,IAAAC,aAAAvxG,uBAAAvxF,QAAA,sBACA47F,MAAArK,uBAAAvxF,QAAA,eACA+iM,OAAAxxG,uBAAAvxF,QAAA,kGAEA,IAAMgjM,cAAgB,CAClB,cACA,SACA,WACA,QACA,WACA,SACA,OACA,QACA,YAGEC,uBAAyB,CAC3B,WACA,SACA,SACA,aAGEC,SAAQ,GAAAluL,OACPguL,cACAC,+DAmDuC,SAAC1kI,MAG3C,IAFA,IAAIkwH,SAAU,EAEL5uL,EAAI,EAAGA,EAAImjM,cAAcxiM,OAAQX,IAAK,CAC3C,IAAMiJ,IAAMk6L,cAAcnjM,IAEb,aAARiJ,KAA8B,UAARA,KAAsC,cAAlBy1D,KAAK88B,YAIxC,WAARvyF,KAAsC,YAAlBy1D,KAAK88B,WAIxB,EAAAO,MAAA,SAAKr9B,KAAMz1D,OAAS,EAAA8yF,MAAA,SAAKqnG,uBAAwBn6L,OAClDmnB,QAAQ4tB,KAAR,2CAAA7oC,OAAwDlM,MAExD2lL,SAAU,IAIlB,IAAM0U,UAAW,EAAAJ,OAAA,SAAMxkI,MACjB6kI,iBAAkB,EAAAN,aAAA,SAAYK,SAAUD,UAM9C,OAJ6B,EAAzBE,gBAAgB5iM,QAChByvB,QAAQ4tB,KAAR,6CAAA7oC,OAA0DouL,gBAAgB17L,KAAK,QAG5E+mL,yMCzGX,IAAAn9F,QAAAC,uBAAAvxF,QAAA,WACAo9G,UAAA7rB,uBAAAvxF,QAAA,mBAEA42F,iBADArF,uBAAAvxF,QAAA,iBACAuxF,uBAAAvxF,QAAA,4BACAs3F,WAAAt3F,QAAA,gYAOA,IA6CqBqjM,8BACjB,SAAAA,mBAAY9wG,yIAAUD,CAAA9uF,KAAA6/L,oBAQlB7/L,KAAK+uF,SAAWA,SAShB/uF,KAAK8/L,QAAU,KASf9/L,KAAK+/L,YAAc,KAEnB//L,KAAKojC,8HASF,IAAAnvB,MAAAjU,KACHA,KAAK8/L,SAAU,EAAAhyG,QAAA,SApFS,4KAqFxB9tF,KAAK+/L,YAAc//L,KAAK8/L,QAAQhzJ,KAAKgnD,WAAAuB,UAAUC,cAAcs5E,aAC7D,IAAMoxB,aAAe5sG,gBAAA,QAAe6N,KAAK7hD,OAAO6gJ,mBAEhD,EAAArmF,UAAA,SAASomF,aAAc,SAACrsI,KACpB,IAAIusI,WAAajsL,MAAKksL,wBAAwBxsI,KAE7B,WAAbA,IAAIlyD,OACJy+L,WAAajsL,MAAKmsL,0BAA0BzsI,MAGhD1/C,MAAK8rL,YAAY9sL,OAAOitL,cAG5B,IAAMG,SAAWrgM,KAAKsgM,wBAKtB,OAHAtgM,KAAK8/L,QAAQ7sL,OAAOotL,UACpBrgM,KAAK+uF,SAAS97E,OAAOjT,KAAK8/L,SAEnB9/L,4CAWP,OAAOA,KAAK8/L,QAAQ9oI,SAAS88B,WAAAuB,UAAUuL,WAAWxmF,6CAQlDpa,KAAK8/L,QAAQlpI,YAAYk9B,WAAAuB,UAAUuL,WAAWxmF,wDAYxBglC,QACtB,IAAM8gJ,YAAa,EAAApyG,QAAA,SArHU,oCAsHvByyG,QAAS,EAAAzyG,QAAA,SA/GU,oCAgHnB0yG,iBAAkB,EAAA1yG,QAAA,SAzGI,0CA0GtB2yG,WAAY,EAAA3yG,QAAA,SAAA,iBAAAt8E,OAAmB4tC,OAAOz+C,KAA1B,gBACZ+/L,eAAiBttG,gBAAA,QAAe6N,KAAK7hD,OAAO8hD,gBAAgB9hD,OAAOz+C,MAEzE4/L,OAAOz7K,KAAKs6B,OAAOosH,aACnB00B,WAAWjtL,OAAOstL,QAGlB,IAAK,IAAIlkM,EAAI,EAAGA,EAAI+iD,OAAOssH,WAAW1uK,OAAQX,IAAK,CAC/C,IAAMskM,uBAAyB3gM,KAAK4gM,2BAA2BxhJ,OAAOssH,WAAWrvK,GAAIqkM,gBAErFD,UAAUxtL,OAAO0tL,wBAarB,OATAF,UAAUI,OAAO,SAACt/I,OACd,IAAMu/I,gBAAiB,EAAAhzG,QAAA,SAAEvsC,MAAMoC,eAE/ByvC,gBAAA,QAAe6N,KAAK7hD,OAAO2hJ,gBAAgBD,eAAe7yJ,KAAK,QAAS6yJ,eAAe10L,SAG3Fo0L,gBAAgBvtL,OAAOwtL,WACvBP,WAAWjtL,OAAOutL,iBAEXN,8DAagBc,WAAYN,gBACnC,OAAIM,WAAWx7L,QAAUk7L,eACrB,kBAAAlvL,OAAyBwvL,WAAWx7L,MAApC,eAAAgM,OAAuDwvL,WAAWr1B,aAAlE,aAGJ,kBAAAn6J,OAAyBwvL,WAAWx7L,MAApC,MAAAgM,OAA8CwvL,WAAWr1B,aAAzD,6DAWoBvsH,QACpB,IAAM8gJ,YAAa,EAAApyG,QAAA,SA7KU,oCA8KvByyG,QAAS,EAAAzyG,QAAA,SAvKU,oCAwKnB7vC,aAAem1C,gBAAA,QAAe6N,KAAK7hD,OAAO8hD,gBAAgB9hD,OAAOz+C,MACjE8/L,WAAY,EAAA3yG,QAAA,SAAA,mFAAAt8E,OACkB4tC,OAAO39C,KADzB,iDAAA+P,OAEkB4tC,OAAOz+C,KAFzB,kDAAA6Q,OAGmBysC,aAHnB,OAIZgjJ,OAAQ,EAAAnzG,QAAA,SAAA,4BAAAt8E,OAA8B4tC,OAAOjB,KAArC,YA4Bd,OA1BAoiJ,OAAOz7K,KAAKs6B,OAAOosH,aACnB00B,WAAWjtL,OAAOstL,QAGlBE,UAAUI,OAAO,SAACt/I,OACd,IAAMu/I,gBAAiB,EAAAhzG,QAAA,SAAEvsC,MAAMoC,eACzB1F,aAAe6iJ,eAAe10L,MAEpC,GAAKgzC,OAAO6sH,kBAAkBhuH,cAA9B,CAOA,IAAI+9H,UAAY/9H,aACI,WAAhBmB,OAAO39C,OACPu6K,UAAY7wH,WAAW6wH,YAG3B5oF,gBAAA,QAAe6N,KAAK7hD,OAAO2hJ,gBAAgBD,eAAe7yJ,KAAK,QAAS+tI,gBAVpEykB,UAAUr0L,IAAI6xC,gBAatBiiJ,WAAWjtL,OAAOwtL,WAClBP,WAAWjtL,OAAOguL,OAEXf,wDAiBUpoG,OAAmB,IAAZtyF,MAAY,EAAAX,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAJ,GAC1Bq7L,YAAa,EAAApyG,QAAA,SAlOU,oCAmOvByyG,QAAS,EAAAzyG,QAAA,SA5NU,oCA6NnBozG,QAAS,EAAApzG,QAAA,SA9MS,4CAqNxB,OALAoyG,WAAWjtL,OAAOstL,QAClBL,WAAWjtL,OAAOiuL,QAClBX,OAAOz7K,KAAKgzE,OACZopG,OAAOp8K,KAAKtf,OAEL06L,2DAWP,IAAMiB,iBAAmBp0K,OAAOq0K,OAAOC,QACjCnB,YAAa,EAAApyG,QAAA,SA9PO,qCAkQ1B,OAFAoyG,WAAWp7K,KAAX,4BAAAtT,OAA4C2vL,mBAErCjB,saCxRf,IAAApyG,QAAAC,uBAAAvxF,QAAA,WACAo9G,UAAA7rB,uBAAAvxF,QAAA,mBACA2xF,UAAAJ,uBAAAvxF,QAAA,oBACA22F,cAAApF,uBAAAvxF,QAAA,oBACAi3F,wBAAA1F,uBAAAvxF,QAAA,+CACAk3F,gBAAA3F,uBAAAvxF,QAAA,uCACAs3F,WAAAt3F,QAAA,0BACAypG,mBAAAzpG,QAAA,kCACA+xF,YAAA/xF,QAAA,2BACAu8F,iBAAAv8F,QAAA,gCACAu3F,iBAAAv3F,QAAA,gCACAq2F,mBAAA9E,uBAAAvxF,QAAA,iCACA6pG,gBAAA7pG,QAAA,qYAOA,IAaqB8kM,iCACjB,SAAAA,sBAAYvyG,yIAAUD,CAAA9uF,KAAAshM,uBAOlBthM,KAAKk0F,UAAY/F,UAAA,QASjBnuF,KAAK+uF,SAAWA,SAShB/uF,KAAK8/L,QAAU,KASf9/L,KAAKuhM,OAAS,KASdvhM,KAAK24H,UAAY,KASjB34H,KAAKwhM,MAAQ,KAEbxhM,KAAKi0G,iBACA7wE,OACAgvD,mIAkBL,OARApyF,KAAK8/L,SAAU,EAAAhyG,QAAA,SAhFQ,mbAiFvB9tF,KAAK+/L,YAAc//L,KAAK8/L,QAAQhzJ,KAAb,IAAAt7B,OAAsBsiF,WAAA8M,WAAWguE,cAEpD5uK,KAAKyhM,mBACLzhM,KAAK+uF,SAAS97E,OAAOjT,KAAK8/L,SAC1B9/L,KAAK8/L,QAAQhzJ,KAAKgnD,WAAAuB,UAAUC,cAAck6E,wBAAwBjrH,MAAMvkD,KAAK0hM,qBAC7E1hM,KAAK8/L,QAAQhzJ,KAAKgnD,WAAAuB,UAAUC,cAAcm6E,wBAAwBlrH,MAAMvkD,KAAK2hM,wBAEtE3hM,8CAmBP,OANAA,KAAKsgJ,wBAA0BtgJ,KAAK40F,gBAAgBliC,KAAK1yD,MACzDA,KAAK4hM,8BAAgC5hM,KAAK6hM,sBAAsBnvI,KAAK1yD,MACrEA,KAAK8hM,0BAA4B9hM,KAAK+hM,kBAAkBrvI,KAAK1yD,MAC7DA,KAAK0hM,oBAAsB1hM,KAAKgiM,YAAYtvI,KAAK1yD,MACjDA,KAAK2hM,uBAAyB3hM,KAAK80F,eAAepiC,KAAK1yD,MAEhDA,sCAeP,OAFAA,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAM+D,eAAgB/0F,KAAKsgJ,yBAEtCtgJ,uCAaP,OAFAA,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAM+D,eAAgB/0F,KAAKsgJ,yBAEvCtgJ,4CAWP,OAAOA,KAAK8/L,QAAQ9oI,SAAS88B,WAAAuB,UAAUuL,WAAWxmF,6CAQlDpa,KAAK8/L,QAAQlpI,YAAYk9B,WAAAuB,UAAUuL,WAAWxmF,gDAU9Cpa,KAAKyhM,yDAUL,IAAMhyG,QAAUoD,mBAAA,QAAkBkV,cAClC/nG,KAAKwhM,MAAQ,CAAE9tI,MAAO+7B,QAAQgnD,YAAY/iF,MAAOo5C,MAAO/5E,KAAK8B,OAAM,EAAAwxE,gBAAAwG,kBAAiBpd,QAAQgnD,YAAY3pC,SAExG9sG,KAAKk0F,UAAUjyC,QAAQssC,YAAAyC,MAAM0mD,YAAa13I,KAAKwhM,OAC/C/tG,wBAAA,QAAuBwuG,aACvBjiM,KAAKyhM,4DAULzhM,KAAKk0F,UAAUjyC,QAAQssC,YAAAyC,MAAMgE,0DASd,IAAA/gF,MAAAjU,KACfA,KAAK+/L,YAAYv7L,QACjBxE,KAAKuhM,OAAS,GACdvhM,KAAK24H,UAAY,GAEjB,IAAMlpC,QAAUoD,mBAAA,QAAkBkV,cAClC/nG,KAAKwhM,MAAQ,CAAE9tI,MAAO+7B,QAAQid,KAAKh5C,MAAOo5C,MAAO/5E,KAAK8B,OAAM,EAAAwxE,gBAAAwG,kBAAiBpd,QAAQid,KAAKI,SAE1F,IAAMo1F,eAAiBliM,KAAKmiM,0BAA0BniM,KAAKwhM,MAAM10F,OAC3Ds1F,eAAiBpiM,KAAKqiM,sBAAsBriM,KAAKwhM,MAAM9tI,OAE7D1zD,KAAK+/L,YAAY9sL,OAAOivL,gBACxBliM,KAAK+/L,YAAY9sL,OAAOmvL,gBACxBpiM,KAAK+/L,YAAY9sL,OAAO,UAExB,IAAA,IAAAsyB,GAAA,EAAA+8J,eAAuB13K,OAAOrW,OAAO0xF,mBAAAwR,iBAArClyE,GAAA+8J,eAAAtlM,OAAAuoC,KAAuD,CAAlD,IAAMsyD,SAAQyqG,eAAA/8J,IACfvlC,KAAKuhM,OAAO1pG,UAAY,EACxB73F,KAAK24H,UAAU9gC,UAAY,GAC3B,IAAM0qG,aAAeviM,KAAKwiM,aAAa3qG,SAAUA,SAAUA,SAAU73F,KAAKyiM,6BAE1EziM,KAAK+/L,YAAY9sL,OAAOsvL,cAG5B,IAvBe,IAAAjE,MAAA,WAuBV,IAAMzmG,SAAQ6qG,gBAAA1wC,KACT+kC,cAAgBtjG,wBAAA,QAAuBkvG,4BAA4B9qG,UAE9C,EAAvBk/F,cAAc/5L,QACdiX,MAAK8rL,YAAY9sL,OAAO,WAG5B,EAAA2mG,UAAA,SAASm9E,cAAe,SAACK,cACrB,IAAMt/F,MAAQs/F,aAAapsF,YAAY9lG,QAAQ6zF,iBAAAkkC,MAAME,WAAY,KACjElpH,MAAKstL,OAAOnK,aAAaphL,IAAMohL,aAAa/5E,KAC5C,IAAMklF,aAAetuL,MAAK2uL,iBAAiBxL,aAAaphL,GAAI8hF,MAAOs/F,aAAcnjL,MAAK4uL,2BAEtF5uL,MAAK8rL,YAAY9sL,OAAOsvL,cACxBtuL,MAAK0kH,UAAU9gC,UAAUr0F,KAAK,CAAE4zL,aAAAA,aAAcmL,aAAAA,kBAbtDvwC,IAAA,EAAA0wC,gBAAuB93K,OAAOrW,OAAO0xF,mBAAAwR,iBAArCu6C,IAAA0wC,gBAAA1lM,OAAAg1J,MAAuDssC,6CA4B9Ch5L,IAAKwyF,MAAOlyF,KAAMk9L,gBAC3B,IAAMzlF,KAAOr9G,KAAKuhM,OAAOj8L,KACnBjG,SAAQ,qFAAAmS,OAEoBsmF,MAFpB,0EAAAtmF,OAG0ClM,IAH1C,aAAAkM,OAGyD6rG,KAHzD,+EAAA7rG,OAIqB6rG,KAJrB,+BAMRtuB,UAAW,EAAAjB,QAAA,SAAEzuF,UACb0jM,gBAAkBD,eAAepwI,KAAK1yD,MAI5C,OAFA+uF,SAAS3tC,GAAG,SAAU,CAAE4hJ,QAASp9L,MAAQm9L,iBAElCh0G,2DAWevpF,OACtB,IAAM7E,KAAO,iBACPtB,SAAQ,qFAAAmS,OAEoB7Q,KAFpB,0EAAA6Q,OAG0C7Q,KAH1C,aAAA6Q,OAG0DhM,MAH1D,gFAAAgM,OAIqBhM,MAJrB,+BAMRupF,UAAW,EAAAjB,QAAA,SAAEzuF,UAInB,OAFA0vF,SAAS3tC,GAAG,SAAUphD,KAAK4hM,+BAEpB7yG,uDAaWvpF,OAClB,IACMnG,SAAQ,qFAAAmS,OADD,aACC,0EAAAA,OADD,aACC,aAAAA,OAG0DhM,MAH1D,6EAAAgM,OAIqBhM,MAJrB,+BAMRupF,UAAW,EAAAjB,QAAA,SAAEzuF,UAInB,OAFA0vF,SAAS3tC,GAAG,SAAUphD,KAAK8hM,2BAEpB/yG,kDAaMzpF,IAAKwyF,MAAOlyF,KAAMk9L,gBAC/B,IAAMzlF,KAAOr9G,KAAKuhM,OAAOj8L,KACnBjG,SAAQ,qFAAAmS,OAEoBsmF,MAFpB,0EAAAtmF,OAG0ClM,IAH1C,aAAAkM,OAGyD6rG,KAHzD,kEAAA7rG,OAIqB6rG,KAJrB,+BAMRtuB,UAAW,EAAAjB,QAAA,SAAEzuF,UACb0jM,gBAAkBD,eAAepwI,KAAK1yD,MAI5C,OAFA+uF,SAAS3tC,GAAG,SAAU,CAAE4hJ,QAASp9L,MAAQm9L,iBAElCh0G,uDAUWxtC,OAClB,IAAM0hJ,SAAU,EAAAn1G,QAAA,SAAEvsC,MAAMnd,QAClB8+J,eAAiBD,QAAQ98K,KAAR,IAAA3U,OAAiBsiF,WAAA8M,WAAWmuE,aAC7CvpK,MAAQy9L,QAAQ72L,MACtBpM,KAAKwhM,MAAM10F,MAAQttF,OAAOha,OAE1B09L,eAAep+K,KAAKtf,OACpBxF,KAAKk0F,UAAUjyC,QAAQssC,YAAAyC,MAAM0mD,YAAa13I,KAAKwhM,iDAUjCjgJ,OACd,IAAM0hJ,SAAU,EAAAn1G,QAAA,SAAEvsC,MAAMnd,QAClB++J,WAAaF,QAAQ98K,KAAR,IAAA3U,OAAiBsiF,WAAA8M,WAAWmuE,aACzCvpK,MAAQy9L,QAAQ72L,MACtBpM,KAAKwhM,MAAM9tI,MAAQl0C,OAAOha,OAE1B29L,WAAWr+K,KAAKtf,OAChBxF,KAAKk0F,UAAUjyC,QAAQssC,YAAAyC,MAAM0mD,YAAa13I,KAAKwhM,2DAUvBjgJ,OACxB,IAAM0hJ,SAAU,EAAAn1G,QAAA,SAAEvsC,MAAMnd,QAClBg/J,QAAUH,QAAQ98K,KAAR,IAAA3U,OAAiBsiF,WAAA8M,WAAWmuE,aACtCvpK,MAAQy9L,QAAQ72L,MAChByrF,SAAWt2C,MAAM37C,KAAKo9L,QACtBh1J,SAAWhuC,KAAK24H,UAAU9gC,UACxBqL,YAAgBl1D,SAAS,GAAGopJ,aAA5Bl0F,YACRljG,KAAKuhM,OAAO1pG,UAAY1sC,WAAW3lD,OAEnC49L,QAAQt+K,KAAKtf,OACb2tF,cAAA,QAAa+B,YAAYnB,iBAAAoB,gBAAgB+iF,qBAAsB,kBAA/D,GAAA1mK,OAAqF0xF,YAArF,KAAA1xF,OAAoGqmF,SAApG,KAAArmF,OAAgHhM,QAVjF,IAAAuyI,2BAAA,EAAAC,mBAAA,EAAAC,oBAAAr1I,EAAA,IAY/B,IAAA,IAAAs1I,MAAAC,UAA6CnqG,SAA7C3I,OAAAC,cAAAyyG,2BAAAG,MAAAC,UAAAhyH,QAAAd,MAAA0yH,2BAAA,EAAuD,CAAA,IAAAr/B,MAAAw/B,MAAA1yI,MAA1C4xL,aAA0C1+E,MAA1C0+E,aACHiM,aAD6C3qF,MAA5B6pF,aACW/6L,SAAb,IAAAgK,OAA0BsiF,WAAA8M,WAAWmuE,aAE1D/uK,KAAKsjM,YAAYlM,aAAciM,eAfJ,MAAArgM,KAAAg1I,mBAAA,EAAAC,eAAAj1I,IAAA,QAAA,IAAA+0I,2BAAA,MAAAI,UAAA,QAAAA,UAAA,SAAA,QAAA,GAAAH,kBAAA,MAAAC,mEA0BT12F,OACtB,IAAM0hJ,SAAU,EAAAn1G,QAAA,SAAEvsC,MAAMnd,QAClBg/J,QAAUH,QAAQ98K,KAAR,IAAA3U,OAAiBsiF,WAAA8M,WAAWmuE,aACtCvpK,MAAQy9L,QAAQ72L,MAChBgrL,aAAe71I,MAAM37C,KAAKo9L,QAC1BO,SAAWp4I,WAAW3lD,OAC5BxF,KAAKuhM,OAAOnK,aAAaphL,IAAMutL,SAE/BpwG,cAAA,QAAa+B,YACTnB,iBAAAoB,gBAAgB+iF,qBAChB,gBAFJ,GAAA1mK,OAGO4lL,aAAal0F,YAHpB,KAAA1xF,OAGmC4lL,aAAapsF,YAHhD,KAAAx5F,OAG+D4lL,aAAa/5E,KAH5E,KAAA7rG,OAGoF+xL,WAEpFvjM,KAAKsjM,YAAYlM,aAAcgM,6CAWvBhM,aAAcgM,SAAS,IACvBvrG,SAAau/F,aAAbv/F,SACRu/F,aAAa/5E,KAAOr9G,KAAKuhM,OAAO1pG,UAAY73F,KAAKuhM,OAAOnK,aAAaphL,IAErEotL,QAAQt+K,KAAKsyK,aAAa/5E,MAC1B3pB,gBAAA,QAAe8nG,WAAWpE,mtBCtclC,QAAA3lF,WAAAj1G,QAAA,qUAEA,IAAMgnM,sBAAwB,CAAC,EAAG,GASbC,wBAKjB,SAAAA,eAA0B,IAAdhmM,QAAc,EAAAoH,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAJ,kIAAIiqF,CAAA9uF,KAAAyjM,cACtBzjM,KAAKusF,OAAQ,EAAAklB,MAAA,SAAKh0G,QAAS,QAAS,KACpCuC,KAAK8kB,MAAO,EAAA2sF,MAAA,SAAKh0G,QAAS,OAAQ,KAClCuC,KAAK5B,OAAQ,EAAAqzG,MAAA,SAAKh0G,QAAS,QAAS,MACpCuC,KAAK0jM,MAAO,EAAAjyF,MAAA,SAAKh0G,QAAS,OAAQ,QAElCuC,KAAK+qD,UAAW,EAAA0mD,MAAA,SAAKh0G,QAAS,WAAY+lM,uBAC1CxjM,KAAK0nB,SAAU,EAAA+pF,MAAA,SAAKh0G,QAAS,UAAW+lM,2IAYxC,OAAIxjM,KAAK5B,MACE4B,KAAK5B,MAAM4B,KAAK8kB,MAGpB9kB,KAAK8kB,yTCtCpB,IAAAgpE,QAAAC,uBAAAvxF,QAAA,WACA47F,MAAArK,uBAAAvxF,QAAA,eACAmnM,OAAA51G,uBAAAvxF,QAAA,gBACAq2F,mBAAA9E,uBAAAvxF,QAAA,iCACA2xF,UAAAJ,uBAAAvxF,QAAA,oBACA22F,cAAApF,uBAAAvxF,QAAA,oBACA4xF,YAAAL,uBAAAvxF,QAAA,yBACAonM,cAAA71G,uBAAAvxF,QAAA,mBACAq8F,MAAAr8F,QAAA,gBACA+xF,YAAA/xF,QAAA,2BACA8xF,aAAA9xF,QAAA,4BACAs3F,WAAAt3F,QAAA,0BACAu3F,iBAAAv3F,QAAA,ixBAEA,IAAMikK,SAAW,GAaIojC,wBAIjB,SAAAA,eAA6B,IAAjB90G,SAAiB,EAAAlqF,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAN,oIAAMiqF,CAAA9uF,KAAA6jM,cAOzB7jM,KAAKk0F,UAAY/F,UAAA,QAOjBnuF,KAAKygK,SAAW,KAShBzgK,KAAK+uF,SAAWA,SAShB/uF,KAAK8jM,cAAgB,KASrB9jM,KAAK+jM,kBAAoB,KASzB/jM,KAAKgkM,cAAgB,KAUrBhkM,KAAKikM,gBAAkB,KAEvBjkM,KAAK00F,QACAuf,iBACAiwF,SACA9xG,2HAwBL,OAXApyF,KAAK8jM,eAAgB,EAAAh2G,QAAA,SA7FH,qPA8FlB9tF,KAAK+jM,kBAAoB/jM,KAAK8jM,cAAch3J,KAAKgnD,WAAAuB,UAAUC,cAAcq6E,MACzE3vK,KAAKgkM,cAAgBhkM,KAAK8jM,cAAch3J,KAAKgnD,WAAAuB,UAAUC,cAAc85E,MACrEpvK,KAAKikM,iBAAkB,EAAAn2G,QAAA,SAAEgG,WAAAuB,UAAUC,cAAcy1E,iBAEjD/qK,KAAKygK,SAAWA,SAChBzgK,KAAKygK,SAAS0jC,MAAQ,GACtBnkM,KAAKygK,SAASnwG,KAAO,EACrBtwD,KAAKygK,SAAS2jC,SAAW,GACzBpkM,KAAKygK,SAASzzJ,MAAO,EAEdhN,8CAgBP,OAHAA,KAAKsgJ,wBAA0BtgJ,KAAK40F,gBAAgBliC,KAAK1yD,MACzDA,KAAKqkM,yBAA2BrkM,KAAKskM,gBAAgB5xI,KAAK1yD,MAEnDA,sCAaP,IAAKA,KAAK+uF,SACN,MAAM,IAAIpyF,MAAM,yEAMpB,OAHAqD,KAAKygK,SAASx4G,KAAOjoD,KAAK8jM,cAC1B9jM,KAAK+uF,SAAS97E,OAAOjT,KAAK8jM,eAEnB9jM,sCAUF,IAAAiU,MAAAjU,KAOL,OANAA,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAM+5E,gBAAiB/qK,KAAKqkM,0BAC9CrkM,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAM+D,eAAgB/0F,KAAKsgJ,yBAE7CtgJ,KAAK+jM,kBAAkB3iJ,GAAG,QAAS,SAACG,OAAD,OAAWttC,MAAKswL,cAAchjJ,SACjEvhD,KAAKgkM,cAAc5iJ,GAAG,QAAS,SAACG,OAAD,OAAWttC,MAAKuwL,cAAcjjJ,SAEtDvhD,uCAUD,IAAAkxF,OAAAlxF,KAON,OANAA,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAM+5E,gBAAiB/qK,KAAKqkM,0BAC/CrkM,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAM+D,eAAgB/0F,KAAKsgJ,yBAE9CtgJ,KAAK+jM,kBAAkBviJ,IAAI,QAAS,SAACD,OAAD,OAAW2vC,OAAKqzG,cAAchjJ,SAClEvhD,KAAKgkM,cAAcxiJ,IAAI,QAAS,SAACD,OAAD,OAAW2vC,OAAKszG,cAAcjjJ,SAEvDvhD,KAAKsyF,4CAoBZ,OATAtyF,KAAK8jM,cAAgB,KACrB9jM,KAAK+jM,kBAAoB,KACzB/jM,KAAKgkM,cAAgB,KACrBhkM,KAAKygK,SAAW,GAChBzgK,KAAKygK,SAAS0jC,MAAQ,GACtBnkM,KAAKygK,SAASnwG,KAAO,EACrBtwD,KAAKygK,SAAS2jC,SAAW,GACzBpkM,KAAKygK,SAASzzJ,MAAO,EAEdhN,oDAWP,OAAOA,KAAK8jM,cAAc9sI,SAAS88B,WAAAuB,UAAUuL,WAAWxmF,gDAUxDpa,KAAKykM,sEAOW,IAAArzG,OAAApxF,KAChBA,KAAKygK,SAAW,GAChBzgK,KAAKygK,SAAS0jC,MAAQ,GACtBnkM,KAAKygK,SAASnwG,KAAO,EAGrBtwD,KAAKygK,SAAS2jC,SAAW,CACrB30G,QAAS,WACL,OAAOoD,mBAAA,QAAkBkV,eAE7B28F,kBAAmB,WACf,OAAO7oJ,KAAKk2C,SAAS7hF,KAAK08B,OAAO,SAACusD,eAAD,OAAmBA,cAAcgd,gBAAe,KAIzF1nB,KAAKC,IAAI8G,UAAU,CAAEp+D,IAAK,gCAAiC+iH,WAAW,IACjE90H,KAAK,SAACw4C,UACHA,SAASnqC,QAAQ,SAAC48B,MACd8gC,OAAKuzG,kBAAkBr0I,UAG9BzZ,KAAK,SAAC+tJ,MAAOxuD,WAAYr+H,OACtB0U,QAAQ1U,MAAR,iCAAAvG,OAA+C4kI,WAA/C,MAAA5kI,OAA8DuG,QAC9Dq5E,OAAKyzG,cAAc,CAAEt4G,MAAO,QAASznE,KAAI,gCAAAtT,OAAkC4kI,WAAlC,MAAA5kI,OAAiDuG,qDAUpFu4C,MAAM,IAAAihC,OAAAvxF,KAChBglB,MAAM3hB,QAAQitD,KAAKprD,WAEnBorD,KAAKprD,QAAQwuB,QAAQ,SAACoxK,aAClB,IAAMC,WAAaxzG,OAAKkvE,SAAS2jC,SAASU,YAAYh8I,YAAYngC,QAClE,GAAKo8K,WAAL,CAKA,IAAMC,YAAczzG,OAAK0zG,gBAAgBH,YAAYh8I,YAAYo8I,UAC3DC,YAAc,SAAChpM,GACjB,IAAMqJ,MAAQw/L,YAAYD,cAC1B,OAAa,MAATv/L,OACAinB,QAAQ4tB,KAAR,aAAA7oC,OAA0B8+C,KAAKi8B,MAA/B,MAAA/6E,OAAyCszL,YAAYh8I,YAAYngC,OAAjE,KAAAnX,OAA2EszL,YAAYh8I,YAAYo8I,SAAnG,SAAA1zL,OAAmHhM,MAAnH,YACOrJ,GAEJA,EAAE+I,QAAQ4/L,YAAYM,SAAU5/L,QAGvCwf,MAAM3hB,QAAQitD,KAAKlyD,OACnBkyD,KAAKlyD,MAAMoF,KAAK2hM,aAEhB70I,KAAKlyD,MAAQ,CAAC+mM,kBAhBd14K,QAAQ1U,MAAR,aAAAvG,OAA2B8+C,KAAKi8B,MAAhC,MAAA/6E,OAA0CszL,YAAYh8I,YAAYngC,OAAlE,qBAqBJ3D,MAAM3hB,QAAQitD,KAAKlyD,SACnBkyD,KAAKlyD,MAAQulM,OAAA,QAAAnzL,WAAA,EAAAurF,mBAASzrC,KAAKlyD,gBAGxBkyD,KAAKprD,SAEhBlF,KAAK6kM,cAAcv0I,8CAYP+0I,MACZ,OAAQ,SAACjgM,KAGL,IAFA,IAAImD,OAASnD,IACPq8B,IAAM4jK,KAAK5tL,MAAM,KAChBgqB,IAAIzkC,QAAQ,CACf,GAAc,MAAVuL,OACA,OAAOA,OAEXA,OAASA,OAAOk5B,IAAIh5B,SAExB,OAAOF,kDAaPvI,KAAKslM,uBACLtlM,KAAKulM,iBAKTvlM,KAAKwlM,uDAMiB,IAAbl1I,KAAa,EAAAzrD,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAN,KAKhB,OAJKyrD,OACDA,KAAOtwD,KAAKygK,SAASnwG,MAGlBtwD,KAAKygK,SAAS0jC,MAAM7zI,8CAO3B,IAAMA,KAAOtwD,KAAKylM,eACZ/9K,QAAU,CAAC,GAAI,IACfgoC,KAAOY,KAAKvF,SAAS,KAAM,EAAA+iC,QAAA,SAAE/gE,QAAQ88B,QAAU7pD,KAAK8jM,cAAc4B,aAAeh+K,QAAQ,IAC3F7Q,IAAMy5C,KAAKvF,SAAS,IAAM,EAAA+iC,QAAA,SAAE/gE,QAAQ++B,SACxCj1C,KAAQ7W,KAAK8jM,cAAc6B,cAAgBj+K,QAAQ,GAKnD1nB,KAAK8jM,cAAct+K,OAAO,CACtB3O,KAAK,EAAAgiF,MAAAhkE,OAAMhe,KACX64C,MAAM,EAAAmpC,MAAAhkE,OAAM66B,8CAONjyD,SACVuC,KAAKygK,SAAS0jC,MAAM3gM,KAAK,IAAIogM,cAAA,QAAanmM,4DAO1C,IAAM6yD,KAAOtwD,KAAKylM,eAElBzlM,KAAK8jM,cAAch3J,KAAK,MAAMmb,KAAKqI,KAAKi8B,OACxCvsF,KAAK8jM,cAAch3J,KAAK,QAAQmb,KAAKqI,KAAK5qB,WAC1C1lC,KAAK8jM,cAAcntI,YAAY,cAE3BrG,KAAKozI,OAAS5vG,WAAAuB,UAAUuL,WAAWuE,KACnCnlG,KAAK8jM,cAAcxtI,SAASw9B,WAAAuB,UAAUuL,WAAWuE,MAC1C70C,KAAKozI,OAAS5vG,WAAAuB,UAAUuL,WAAWoE,OAC1ChlG,KAAK8jM,cAAcxtI,SAASw9B,WAAAuB,UAAUuL,WAAWoE,OAGrDhlG,KAAK4lM,wDAOL5lM,KAAK8jM,cAAcxtI,SAASw9B,WAAAuB,UAAUuL,WAAWxmF,MACjDpa,KAAKikM,gBAAgB3tI,SAASw9B,WAAAuB,UAAUuL,WAAWswC,QAEnDlxI,KAAKykM,mEAOLzkM,KAAK8jM,cAAcntI,YAAYm9B,WAAAuB,UAAUuL,WAAWxmF,MACpDpa,KAAKikM,gBAAgBttI,YAAYm9B,WAAAuB,UAAUuL,WAAWswC,QAEtDlxI,KAAK4lM,6DAQA,EAAAxtG,MAAA,SAAKnI,aAAc3B,aAAA4B,YAAYmhF,iBAChCrxK,KAAKwlM,gBAGTv1G,aAAa3B,aAAA4B,YAAYmhF,gBAAkBjjF,YAAA,QAAWy3G,0DAOlD7lM,KAAKygK,SAASnwG,OAAStwD,KAAKygK,SAAS0jC,MAAMnnM,OAAS,GAMxDgD,KAAKygK,SAASnwG,MAAO,EAAAuoC,MAAAkI,OAAM,EAAG/gG,KAAKygK,SAASnwG,KAAO,EAAGtwD,KAAKygK,SAAS0jC,MAAMnnM,OAAS,GAEnFm2F,cAAA,QAAa+B,YAAYnB,iBAAAoB,gBAAgBmN,SAAU,OAAnD,GAAA9wF,OAA8DxR,KAAKygK,SAASnwG,OAC5EtwD,KAAKykM,2BARDzkM,KAAKulM,yDAeTvlM,KAAKygK,SAASnwG,MAAO,EAAAuoC,MAAAkI,OAAM,EAAG/gG,KAAKygK,SAASnwG,KAAO,EAAGtwD,KAAKygK,SAAS0jC,MAAMnnM,OAAS,GAEnFm2F,cAAA,QAAa+B,YAAYnB,iBAAAoB,gBAAgBmN,SAAU,OAAnD,GAAA9wF,OAA8DxR,KAAKygK,SAASnwG,OAC5EtwD,KAAKykM,ynBC7cb,IAAA32G,QAAAC,uBAAAvxF,QAAA,WACA+iM,OAAAxxG,uBAAAvxF,QAAA,gBACAq2F,mBAAA9E,uBAAAvxF,QAAA,iCACA2xF,UAAAJ,uBAAAvxF,QAAA,oBACA22F,cAAApF,uBAAAvxF,QAAA,oBACA42F,gBAAArF,uBAAAvxF,QAAA,2BACAspM,oBAAA/3G,uBAAAvxF,QAAA,yBACAupM,uBAAAh4G,uBAAAvxF,QAAA,4BACAwpM,oBAAAj4G,uBAAAvxF,QAAA,yBACAypM,cAAAl4G,uBAAAvxF,QAAA,mBACAq3F,QAAAr3F,QAAA,aACA+xF,YAAA/xF,QAAA,2BACAs3F,WAAAt3F,QAAA,0BACAu3F,iBAAAv3F,QAAA,mZA+9Be,eAp9BX,SAAA0pM,8IAAcp3G,CAAA9uF,KAAAkmM,cASVlmM,KAAKk0F,UAAY,KAQjBl0F,KAAKmmM,aAAe,KAQpBnmM,KAAKomM,mBAAqB,KAQ1BpmM,KAAKqmM,sBAAwB,KAQ7BrmM,KAAKsmM,mBAAqB,KAU1BtmM,KAAK+uF,SAAW,KAUhB/uF,KAAKumM,eAAiB,KAUtBvmM,KAAKwmM,mBAAqB,KAU1BxmM,KAAKymM,oBAAsB,KAW3BzmM,KAAK0mM,eAAiB,KAUtB1mM,KAAK2mM,iBAAmB,KAUxB3mM,KAAKk8K,cAAgB,KAUrBl8K,KAAK4mM,mBAAqB,KAU1B5mM,KAAK6mM,KAAO,KAUZ7mM,KAAK8mM,gBAAkB,KAUvB9mM,KAAK+mM,WAAa,KAUlB/mM,KAAKgnM,eAAiB,KAUtBhnM,KAAKinM,oBAAsB,KAU3BjnM,KAAKknM,gBAAkB,KAUvBlnM,KAAKmnM,iBAAmB,KAUxBnnM,KAAKonM,cAAgB,KAUrBpnM,KAAKqnM,eAAiB,KAUtBrnM,KAAKsnM,aAAe,KAUpBtnM,KAAKunM,uBAAyB,KAU9BvnM,KAAKwnM,YAAc,KAUnBxnM,KAAKynM,cAAgB,KAUrBznM,KAAK0nM,aAAe,KAUpB1nM,KAAK2nM,eAAiB,KAUtB3nM,KAAK4nM,eAAiB,KAUtB5nM,KAAKikM,gBAAkB,KAUvBjkM,KAAK6nM,gBAAkB,KAUvB7nM,KAAK8nM,gBAAkB,oHAYtB/4G,UAmCD,OAlCA/uF,KAAKk0F,UAAY/F,UAAA,QACjBnuF,KAAKmmM,aAAe,IAAIF,cAAA,QAAal3G,UACrC/uF,KAAKomM,mBAAqB,IAAIN,oBAAA,QAAmB/2G,UACjD/uF,KAAKqmM,sBAAwB,IAAIN,uBAAA,QAAsBh3G,UACvD/uF,KAAKsmM,mBAAqB,IAAIN,oBAAA,QAAmBj3G,UAEjD/uF,KAAK+uF,SAAWA,SAChB/uF,KAAKumM,eAAiBvmM,KAAK+uF,SAASjiD,KAAKgnD,WAAAuB,UAAUC,cAAcg7E,gBACjEtwK,KAAKwmM,mBAAqBxmM,KAAKumM,eAAez5J,KAAKgnD,WAAAuB,UAAUC,cAAcs5E,aAC3E5uK,KAAKymM,oBAAsBzmM,KAAK+uF,SAASjiD,KAAKgnD,WAAAuB,UAAUC,cAAcuqD,yBACtE7/I,KAAK0mM,eAAiB1mM,KAAK+uF,SAASjiD,KAAKgnD,WAAAuB,UAAUC,cAAc+4E,gBACjEruK,KAAK2mM,iBAAmB3mM,KAAK+uF,SAASjiD,KAAKgnD,WAAAuB,UAAUC,cAAcypE,qBACnE/+J,KAAKk8K,cAAgBl8K,KAAK+uF,SAASjiD,KAAKgnD,WAAAuB,UAAUC,cAAcu5E,eAChE7uK,KAAK4mM,mBAAqB5mM,KAAK+uF,SAASjiD,KAAKgnD,WAAAuB,UAAUC,cAAc07E,sBACrEhxK,KAAK6mM,KAAO7mM,KAAK+uF,SAASjiD,KAAKgnD,WAAAuB,UAAUC,cAAcpG,KACvDlvF,KAAK+mM,WAAa/mM,KAAK+uF,SAASjiD,KAAd,GAAAt7B,OAAsBsiF,WAAAuB,UAAUC,cAAco6E,OAA9C,SAClB1vK,KAAKgnM,eAAiBhnM,KAAK+uF,SAASjiD,KAAKgnD,WAAAuB,UAAUC,cAAcy6E,gBACjE/vK,KAAKinM,oBAAsBjnM,KAAK+uF,SAASjiD,KAAKgnD,WAAAuB,UAAUC,cAAcirD,sBACtEvgJ,KAAKknM,gBAAkBlnM,KAAK+uF,SAASjiD,KAAKgnD,WAAAuB,UAAUC,cAAc0yD,iBAClEhoJ,KAAKmnM,iBAAmBnnM,KAAK+uF,SAASjiD,KAAKgnD,WAAAuB,UAAUC,cAAcupE,kBACnE7+J,KAAKonM,cAAgBpnM,KAAK+uF,SAASjiD,KAAKgnD,WAAAuB,UAAUC,cAAc2yD,eAChEjoJ,KAAKqnM,eAAiBrnM,KAAK+uF,SAASjiD,KAAKgnD,WAAAuB,UAAUC,cAAcy7E,gBACjE/wK,KAAKsnM,aAAetnM,KAAK+uF,SAASjiD,KAAKgnD,WAAAuB,UAAUC,cAAcu1E,cAC/D7qK,KAAKunM,uBAAyBvnM,KAAK+uF,SAASjiD,KAAKgnD,WAAAuB,UAAUC,cAAc6B,yBACzEn3F,KAAKwnM,YAAcxnM,KAAK+uF,SAASjiD,KAAKgnD,WAAAuB,UAAUC,cAAc+B,aAC9Dr3F,KAAKynM,cAAgBznM,KAAK+uF,SAASjiD,KAAKgnD,WAAAuB,UAAUC,cAAc06E,eAChEhwK,KAAK0nM,aAAe1nM,KAAK+uF,SAASjiD,KAAKgnD,WAAAuB,UAAUC,cAAc26E,cAC/DjwK,KAAK2nM,eAAiB3nM,KAAK+uF,SAASjiD,KAAKgnD,WAAAuB,UAAUC,cAAciC,gBACjEv3F,KAAK4nM,eAAiB5nM,KAAK+uF,SAASjiD,KAAKgnD,WAAAuB,UAAUC,cAAcw1E,gBACjE9qK,KAAKikM,gBAAkBjkM,KAAK+uF,SAASjiD,KAAKgnD,WAAAuB,UAAUC,cAAcy1E,iBAClE/qK,KAAK6nM,gBAAkB7nM,KAAK+uF,SAASjiD,KAAKgnD,WAAAuB,UAAUC,cAAc8yD,kBAClEpoJ,KAAK8nM,gBAAkB9nM,KAAK+uF,SAASjiD,KAAKgnD,WAAAuB,UAAUC,cAAcgN,UAClEtiG,KAAK8mM,gBAAkB1zG,gBAAA,QAAe6N,KAAK7hD,OAAO8hD,gBAAgB,mBAE3DlhG,KAAKqvF,gBACP+C,iDAYL,OAHApyF,KAAK20F,uBAAyB30F,KAAK40F,gBAAgBliC,KAAK1yD,MACxDA,KAAK+nM,+BAAiC/nM,KAAKgoM,wBAAwBt1I,KAAK1yD,MAEjEA,sCAUF,IAAAiU,MAAAjU,KA2BL,OA1BAA,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAM+D,eAAgB/0F,KAAK20F,wBAC7C30F,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAMw5E,yBAA0BxqK,KAAK+nM,gCAKvD/nM,KAAK0mM,eAAetlJ,GAAG,QAAS,SAACG,OAAD,OAAWttC,MAAKg0L,yBAAyB1mJ,SACzEvhD,KAAKk8K,cAAc96H,GAAG,QAAS,SAACG,OAAD,OAAW6xC,gBAAA,QAAe+oF,qBAAqB56H,SAC9EvhD,KAAK4mM,mBAAmBxlJ,GAAG,QAAS,SAACG,OAAD,OAAWttC,MAAKi0L,kBAAkB3mJ,SACtEvhD,KAAK+mM,WAAW3lJ,GAAG,QAAS,SAACG,OAAD,OAAW6xC,gBAAA,QAAekpF,aAAa/6H,SACnEvhD,KAAKgnM,eAAe5lJ,GAAG,QAAS,SAACG,OAAD,OAAWttC,MAAKk0L,oBAAoB5mJ,SACpEvhD,KAAKinM,oBAAoB7lJ,GAAG,QAAS,SAACG,OAAD,OAAWttC,MAAKm0L,qBAAqB7mJ,SAC1EvhD,KAAKknM,gBAAgB9lJ,GAAG,QAAS,SAACG,OAAD,OAAWttC,MAAKo0L,iBAAiB9mJ,SAClEvhD,KAAKmnM,iBAAiB/lJ,GAAG,QAAS,SAACG,OAAD,OAAWttC,MAAKq0L,kBAAkB/mJ,SACpEvhD,KAAKonM,cAAchmJ,GAAG,QAAS,SAACG,OAAD,OAAWttC,MAAKs0L,eAAehnJ,SAC9DvhD,KAAKqnM,eAAejmJ,GAAG,QAAS,SAACG,OAAD,OAAWttC,MAAKu0L,gBAAgBjnJ,SAChEvhD,KAAKsnM,aAAalmJ,GAAG,QAAS,SAACG,OAAD,OAAW6xC,gBAAA,QAAesP,kBAAkBnhD,SAC1EvhD,KAAKunM,uBAAuBnmJ,GAAG,QAAS,SAACG,OAAD,OAAWttC,MAAKw0L,wBAAwBlnJ,SAChFvhD,KAAKwnM,YAAYpmJ,GAAG,QAAS,SAACG,OAAD,OAAWttC,MAAKy0L,aAAannJ,SAC1DvhD,KAAKynM,cAAcrmJ,GAAG,QAAS,SAACG,OAAD,OAAW,EAAAsyC,QAAA80G,eAAcpnJ,SACxDvhD,KAAK0nM,aAAatmJ,GAAG,QAAS,SAACG,OAAD,OAAWttC,MAAK20L,cAAcrnJ,SAC5DvhD,KAAK2nM,eAAevmJ,GAAG,QAAS,SAACG,OAAD,OAAWttC,MAAK40L,gBAAgBtnJ,SAChEvhD,KAAK4nM,eAAexmJ,GAAG,QAAS,SAACG,OAAD,OAAWttC,MAAK60L,gBAAgBvnJ,SAChEvhD,KAAKikM,gBAAgB7iJ,GAAG,QAAS,SAACG,OAAD,OAAWttC,MAAKsuF,iBAAiBhhD,SAClEvhD,KAAK6nM,gBAAgBzmJ,GAAG,QAAS,SAACG,OAAD,OAAWttC,MAAK80L,iBAAiBxnJ,SAE3DvhD,uCAUD,IAAAkxF,OAAAlxF,KAuBN,OAtBAA,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAM+D,eAAgB/0F,KAAK20F,wBAC9C30F,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAMw5E,yBAA0BxqK,KAAK+nM,gCACxD/nM,KAAK0mM,eAAellJ,IAAI,QAAS,SAACD,OAAD,OAAW2vC,OAAK+2G,yBAAyB1mJ,SAC1EvhD,KAAKk8K,cAAc16H,IAAI,QAAS,SAACD,OAAD,OAAW6xC,gBAAA,QAAe+oF,qBAAqB56H,SAC/EvhD,KAAK4mM,mBAAmBplJ,IAAI,QAAS,SAACD,OAAD,OAAW2vC,OAAKg3G,kBAAkB3mJ,SACvEvhD,KAAK+mM,WAAWvlJ,IAAI,QAAS,SAACD,OAAD,OAAW6xC,gBAAA,QAAekpF,aAAa/6H,SACpEvhD,KAAKgnM,eAAexlJ,IAAI,QAAS,SAACD,OAAD,OAAW2vC,OAAKi3G,oBAAoB5mJ,SACrEvhD,KAAKinM,oBAAoBzlJ,IAAI,QAAS,SAACD,OAAD,OAAW2vC,OAAKk3G,qBAAqB7mJ,SAC3EvhD,KAAKknM,gBAAgB1lJ,IAAI,QAAS,SAACD,OAAD,OAAW2vC,OAAKm3G,iBAAiB9mJ,SACnEvhD,KAAKmnM,iBAAiB3lJ,IAAI,QAAS,SAACD,OAAD,OAAW2vC,OAAKo3G,kBAAkB/mJ,SACrEvhD,KAAKonM,cAAc5lJ,IAAI,QAAS,SAACD,OAAD,OAAW2vC,OAAKq3G,eAAehnJ,SAC/DvhD,KAAKqnM,eAAe7lJ,IAAI,QAAS,SAACD,OAAD,OAAW2vC,OAAKs3G,gBAAgBjnJ,SACjEvhD,KAAKsnM,aAAa9lJ,IAAI,QAAS,SAACD,OAAD,OAAW6xC,gBAAA,QAAesP,kBAAkBnhD,SAC3EvhD,KAAKunM,uBAAuB/lJ,IAAI,QAAS,SAACD,OAAD,OAAW2vC,OAAKu3G,wBAAwBlnJ,SACjFvhD,KAAKwnM,YAAYhmJ,IAAI,QAAS,SAACD,OAAD,OAAW2vC,OAAKw3G,aAAannJ,SAC3DvhD,KAAKynM,cAAcjmJ,IAAI,QAAS,SAACD,OAAD,OAAW,EAAAsyC,QAAA80G,eAAcpnJ,SACzDvhD,KAAK0nM,aAAalmJ,IAAI,QAAS,SAACD,OAAD,OAAW2vC,OAAK03G,cAAcrnJ,SAC7DvhD,KAAK2nM,eAAenmJ,IAAI,QAAS,SAACD,OAAD,OAAW2vC,OAAK23G,gBAAgBtnJ,SACjEvhD,KAAK4nM,eAAepmJ,IAAI,QAAS,SAACD,OAAD,OAAW2vC,OAAK43G,gBAAgBvnJ,SACjEvhD,KAAKikM,gBAAgBziJ,IAAI,QAAS,SAACD,OAAD,OAAW2vC,OAAKqR,iBAAiBhhD,SACnEvhD,KAAK6nM,gBAAgBrmJ,IAAI,QAAS,SAACD,OAAD,OAAW2vC,OAAK63G,iBAAiBxnJ,SAE5DvhD,uCA6CP,OAnCAA,KAAK63C,UAEL73C,KAAKk0F,UAAY,KACjBl0F,KAAKmmM,aAAe,KACpBnmM,KAAKomM,mBAAqB,KAC1BpmM,KAAKqmM,sBAAwB,KAE7BrmM,KAAK+uF,SAAW,KAChB/uF,KAAKumM,eAAiB,KACtBvmM,KAAKwmM,mBAAqB,KAC1BxmM,KAAKymM,oBAAsB,KAC3BzmM,KAAK0mM,eAAiB,KACtB1mM,KAAK2mM,iBAAmB,KACxB3mM,KAAKk8K,cAAgB,KACrBl8K,KAAK4mM,mBAAqB,KAC1B5mM,KAAK6mM,KAAO,KACZ7mM,KAAK8mM,gBAAkB,KACvB9mM,KAAK+mM,WAAa,KAClB/mM,KAAKgnM,eAAiB,KACtBhnM,KAAKinM,oBAAsB,KAC3BjnM,KAAKknM,gBAAkB,KACvBlnM,KAAKmnM,iBAAmB,KACxBnnM,KAAKonM,cAAgB,KACrBpnM,KAAKqnM,eAAiB,KACtBrnM,KAAKsnM,aAAe,KACpBtnM,KAAKunM,uBAAyB,KAC9BvnM,KAAKwnM,YAAc,KACnBxnM,KAAKynM,cAAgB,KACrBznM,KAAK0nM,aAAe,KACpB1nM,KAAK2nM,eAAiB,KACtB3nM,KAAK4nM,eAAiB,KACtB5nM,KAAKikM,gBAAkB,KACvBjkM,KAAK6nM,gBAAkB,KACvB7nM,KAAK8nM,gBAAkB,KAEhB9nM,uCAQPA,KAAKmmM,aAAa6C,oBAClBhpM,KAAKk8K,cAAcrgI,KAAK,QAAS,4DAQjC77C,KAAKipM,mDAOF1+K,SAAuB,IAAd8vB,KAAc,EAAAx1C,UAAA7H,aAAA4F,IAAAiC,UAAA,IAAAA,UAAA,GACpBojD,MAAO,EAAA6lC,QAAA,SAAA,4CAAAt8E,OAA8C+Y,QAA9C,mBAET8vB,OACA4N,KAAKqO,SAASw9B,WAAAuB,UAAUuL,WAAWsvE,MACnC/8E,cAAA,QAAa+B,YAAYnB,iBAAAoB,gBAAgBijF,OAAQ,QAAS7tJ,UAG9DvqB,KAAK6mM,KAAK5zL,OAAOg1C,MACjBjoD,KAAK6mM,KAAKr2I,UAAUxwD,KAAK6mM,KAAKh2K,IAAI,GAAG+rJ,cAErCxpF,gBAAA,QAAe6oG,aAAa,SAACiN,WACzBA,UAAU5yI,SAASw9B,WAAAuB,UAAUuL,WAAWouE,QAExCr1H,WAAW,WACPuvJ,UAAUtxJ,UACX,MACJ53C,KAAK8mM,gBAAiB/5K,OAAQk7B,gDAQjCjoD,KAAK6mM,KAAKriM,0DAQVxE,KAAK8mM,gBAAkB1zG,gBAAA,QAAe6N,KAAK7hD,OAAO8hD,gBAAgB,6DAU9DlhG,KAAKmpM,4BACLnpM,KAAKooM,uBAGLpoM,KAAKopM,gCACLppM,KAAKmoM,sBAGLnoM,KAAKqpM,yBACLrpM,KAAKsoM,oBAGLtoM,KAAKomM,mBAAmBkD,gBACxBtpM,KAAKwoM,kBAGLxoM,KAAKqmM,sBAAsBiD,gBAC3BtpM,KAAK8oM,kBAGL9oM,KAAKslM,wBACLtlM,KAAKuiG,mBAGLviG,KAAKsmM,mBAAmBgD,gBACxBtpM,KAAK+oM,sEAYT,OAAO/oM,KAAKymM,oBAAoBzvI,SAAS88B,WAAAuB,UAAUuL,WAAWxmF,6DAW9D,OAAOpa,KAAKumM,eAAevvI,SAAS88B,WAAAuB,UAAUuL,WAAWxmF,sDAWzD,OAAOpa,KAAK2mM,iBAAiB3vI,SAAS88B,WAAAuB,UAAUuL,WAAWxmF,qDAW3D,OAAOpa,KAAK8nM,gBAAgB9wI,SAAS88B,WAAAuB,UAAUuL,WAAWxmF,4DAQhCmnC,OACtBA,MAAM37C,OAASitF,mBAAA,QAAkBkV,cAAclY,OAC/CgD,mBAAA,QAAkBuQ,YAAY7hD,MAAM37C,MACpC5F,KAAKupM,0EAYO,IAAAn4G,OAAApxF,KAEhBA,KAAKwmM,mBAAmBhiM,QAKxB,IAHA,IAAM2+F,UAAW,EAAAo8F,OAAA,SAAM1sG,mBAAA,QAAkBsQ,UAAUhvE,OAC/Cq1K,WAAa,GAERntM,EAAI,EAAGA,EAAI8mG,SAASnmG,OAAQX,IAAK,CAAA,IAAAotM,sBACR52G,mBAAA,QAAkBsQ,SAASA,SAAS9mG,IAA1DsE,KAD8B8oM,sBAC9B9oM,KAAMkvF,KADwB45G,sBACxB55G,KAAM3jE,MADkBu9K,sBAClBv9K,MAEpBs9K,WAAaxpM,KAAK0pM,wCAAwCx9K,OAC1D,IAAMy9K,kBAAmB,EAAA77G,QAAA,SAAE9tF,KAAK4pM,8BAA8B/5G,KAAM25G,WAAY7oM,OAGhFgpM,iBAAiBplJ,MAAMsrC,KAAKtjE,cAAe,SAACg1B,OACpCA,MAAM37C,OAASitF,mBAAA,QAAkBkV,cAAclY,OAC/CgD,mBAAA,QAAkBuQ,YAAY7hD,MAAM37C,MAEpCwrF,OAAKm4G,gCAIbvpM,KAAKwmM,mBAAmBvzL,OAAO02L,mFAcCE,iBACpC,IAAIL,WACEM,KAAO,UAEb,OAAQD,iBACJ,IAAK,WACDL,WAAaM,KACb,MACJ,IAAK,OACDN,WAAaM,KAAKC,OAAO,GACzB,MACJ,IAAK,SACDP,WAAaM,KAAKC,OAAO,GACzB,MACJ,IAAK,OACDP,WAAaM,KAAKC,OAAO,GACzB,MACJ,IAAK,SACDP,WAAaM,KAAKC,OAAO,GACzB,MACJ,QACIP,WAAa,IAIrB,OAAOA,iEAWmB35G,KAAM25G,WAAY7oM,MAC5C,MAAA,0DAAA6Q,OAC+Cq+E,KAAKtjE,cADpD,wEAAA/a,OAE0Dg4L,WAF1D,gDAAAh4L,OAG6Bq+E,KAAKt0C,cAHlC,gDAAA/pC,OAI6B7Q,KAJ7B,4FAeAwyF,cAAA,QAAa+B,YAAYnB,iBAAAoB,gBAAgBC,SAAU,mBAAoB,QACvEp1F,KAAKumM,eAAejwI,SAASw9B,WAAAuB,UAAUuL,WAAWxmF,MAElD,IAAM4vL,uBAAyBhqM,KAAKwmM,mBAAmB15J,KAAKgnD,WAAAuB,UAAUC,cAAc84E,6BAG9C,IAAlC47B,uBAAuBhtM,QACvBgtM,uBAAuBrzI,YAAYm9B,WAAAuB,UAAUuL,WAAWwtE,6BAG5D,IAAMv+E,KAAOgD,mBAAA,QAAkBkV,cAAclY,KAAKtjE,cAClDvsB,KAAKwmM,mBAAmB15J,KAAxB,iBAAAt7B,OAA8Cq+E,KAA9C,OAAwDv5B,SAASw9B,WAAAuB,UAAUuL,WAAWwtE,6BAEtFpuK,KAAKgnM,eAAe1wI,SAASw9B,WAAAuB,UAAUuL,WAAWswC,2DASlD/9C,cAAA,QAAa+B,YAAYnB,iBAAAoB,gBAAgBC,SAAU,iBAAkB,SAErE,IAAM5vF,MAAQxF,KAAK0mM,eAAet6L,MAAMmgB,eAExC,EAAAuhE,QAAA,SAAE,mBAAmBrpF,KACjB,YACI,EAAAqpF,QAAA,SAAE9tF,MAAM2+C,QAAsD,GAA/C,EAAAmvC,QAAA,SAAE9tF,MAAM8kB,OAAOyH,cAAc/f,QAAQhH,+DAUnC,IAAA+rF,OAAAvxF,KACzBmzF,cAAA,QAAa+B,YAAYnB,iBAAAoB,gBAAgBC,SAAU,mBAAoB,SACvEp1F,KAAKumM,eAAe5vI,YAAYm9B,WAAAuB,UAAUuL,WAAWxmF,MACrDpa,KAAKgnM,eAAerwI,YAAYm9B,WAAAuB,UAAUuL,WAAWswC,QACrDlxI,KAAK0mM,eAAet6L,IAAI,OACxB,EAAA0hF,QAAA,SAAE,mBAAmBrpF,KAAK,WAAA,OAAM,EAAAqpF,QAAA,SAAEyD,QAAM5yC,QAAO,mDAQ3C3+C,KAAKumM,eAAevvI,SAAS88B,WAAAuB,UAAUuL,WAAWxmF,MAClDpa,KAAKupM,6BAKTvpM,KAAKiqM,2EAQLjqM,KAAKinM,oBAAoBrwI,YAAYk9B,WAAAuB,UAAUuL,WAAWswC,QAC1D/9C,cAAA,QAAa+B,YACTnB,iBAAAoB,gBAAgB2N,QAChB,gBAFJ,iBAAAtxF,OAGqBxR,KAAKinM,oBAAoBjwI,SAAS88B,WAAAuB,UAAUuL,WAAWswC,UAE5ElxI,KAAKk0F,UAAUjyC,QAAQssC,YAAAyC,MAAMuvD,+DAQhBh/F,OACbvhD,KAAKknM,gBAAgBtwI,YAAYk9B,WAAAuB,UAAUuL,WAAWswC,QACtD/9C,cAAA,QAAa+B,YACTnB,iBAAAoB,gBAAgB2N,QAChB,WAFJ,GAAAtxF,OAGOxR,KAAKknM,gBAAgBlwI,SAAS88B,WAAAuB,UAAUuL,WAAWswC,UAE1DlxI,KAAKk0F,UAAUjyC,QAAQssC,YAAAyC,MAAMg3D,6DAQ7BhoJ,KAAKk0F,UAAUjyC,QAAQssC,YAAAyC,MAAM6tE,yDAQlBt9G,OACXvhD,KAAKonM,cAAcxwI,YAAYk9B,WAAAuB,UAAUuL,WAAWswC,QACpD/9C,cAAA,QAAa+B,YACTnB,iBAAAoB,gBAAgB2N,QAChB,oBAFJ,GAAAtxF,OAGOxR,KAAKonM,cAAcpwI,SAAS88B,WAAAuB,UAAUuL,WAAWswC,UAExDlxI,KAAKk0F,UAAUjyC,QAAQssC,YAAAyC,MAAMi3D,yDAQ7BjoJ,KAAKqnM,eAAezwI,YAAYk9B,WAAAuB,UAAUuL,WAAWswC,QACrD/9C,cAAA,QAAa+B,YACTnB,iBAAAoB,gBAAgBgjF,SAChB,gBAFJ,GAAA3mK,OAGOxR,KAAKqnM,eAAerwI,SAAS88B,WAAAuB,UAAUuL,WAAWswC,UAEzDlxI,KAAKomM,mBAAmB8D,+DAOJ3oJ,OACpBvhD,KAAKunM,uBAAuB3wI,YAA5B,GAAAplD,OAA2CsiF,WAAAuB,UAAUC,cAAc66E,eAAnE,KAAA3+J,OAAqFsiF,WAAAuB,UAAUuL,WAAWswC,SAC1G/9C,cAAA,QAAa+B,YACTnB,iBAAAoB,gBAAgB2N,QAChB,aAFJ,GAAAtxF,OAGOxR,KAAKunM,uBAAuBvwI,SAAS88B,WAAAuB,UAAUuL,WAAWswC,UAEjElxI,KAAKk0F,UAAUjyC,QAAQssC,YAAAyC,MAAMmG,8DAQpB51C,OACTvhD,KAAKwnM,YAAY5wI,YAAYk9B,WAAAuB,UAAUuL,WAAWswC,QAClD/9C,cAAA,QAAa+B,YACTnB,iBAAAoB,gBAAgB2N,QAChB,OAFJ,GAAAtxF,OAGOxR,KAAKwnM,YAAYxwI,SAAS88B,WAAAuB,UAAUuL,WAAWswC,UAEtDlxI,KAAKk0F,UAAUjyC,QAAQssC,YAAAyC,MAAMk3D,sDAQnB3mG,OACVvhD,KAAK0nM,aAAa9wI,YAAYk9B,WAAAuB,UAAUuL,WAAWswC,QACnD/9C,cAAA,QAAa+B,YACTnB,iBAAAoB,gBAAgB2N,QAChB,QAFJ,GAAAtxF,OAGOxR,KAAK0nM,aAAa1wI,SAAS88B,WAAAuB,UAAUuL,WAAWswC,UAEvDlxI,KAAKk0F,UAAUjyC,QAAQssC,YAAAyC,MAAMm3D,yDAQjB5mG,OACZvhD,KAAK2nM,eAAe/wI,YAAYk9B,WAAAuB,UAAUuL,WAAWswC,QACrD/9C,cAAA,QAAa+B,YACTnB,iBAAAoB,gBAAgB2N,QAChB,UAFJ,GAAAtxF,OAGOxR,KAAK2nM,eAAe3wI,SAAS88B,WAAAuB,UAAUuL,WAAWswC,UAEzDlxI,KAAKk0F,UAAUjyC,QAAQssC,YAAAyC,MAAMuG,wDAUjBh2C,OACZvhD,KAAK4nM,eAAehxI,YAAYk9B,WAAAuB,UAAUuL,WAAWswC,QACrD/9C,cAAA,QAAa+B,YACTnB,iBAAAoB,gBAAgB2N,QAChB,UAFJ,GAAAtxF,OAGOxR,KAAK4nM,eAAe5wI,SAAS88B,WAAAuB,UAAUuL,WAAWswC,UAEzDlxI,KAAKqmM,sBAAsB6D,wDAQd3oJ,OACbvhD,KAAKk0F,UAAUjyC,QAAQssC,YAAAyC,MAAM+5E,iBAC7B53E,cAAA,QAAa+B,YACTnB,iBAAAoB,gBAAgB2N,QAChB,WAFJ,GAAAtxF,OAGOxR,KAAKikM,gBAAgBjtI,SAAS88B,WAAAuB,UAAUuL,WAAWswC,mDAW7C3vF,OACbvhD,KAAK6nM,gBAAgBjxI,YAAYk9B,WAAAuB,UAAUuL,WAAWswC,QACtD/9C,cAAA,QAAa+B,YACTnB,iBAAAoB,gBAAgB2N,QAChB,YAFJ,GAAAtxF,OAGOxR,KAAK6nM,gBAAgB7wI,SAAS88B,WAAAuB,UAAUuL,WAAWswC,UAE1DlxI,KAAKsmM,mBAAmB4D,yDAUV3oJ,OACd4xC,cAAA,QAAag3G,0BAA0B5oJ,MAAMnd,OAAOuM,qoBCx+B5D,IAAAm9C,QAAAC,uBAAAvxF,QAAA,WACA2xF,UAAAJ,uBAAAvxF,QAAA,oBACAs3F,WAAAt3F,QAAA,0BACA+xF,YAAA/xF,QAAA,2BACAq2F,mBAAA9E,uBAAAvxF,QAAA,uYAOA,IASqB4tM,8BACjB,SAAAA,mBAAYr7G,yIAAUD,CAAA9uF,KAAAoqM,oBAOlBpqM,KAAKk0F,UAAY/F,UAAA,QASjBnuF,KAAK+uF,SAAWA,SAShB/uF,KAAK8/L,QAAU,KASf9/L,KAAKqqM,cAAgB,KAGrBrqM,KAAKi0G,iBACA7wE,OACAgvD,gIAgBL,OANApyF,KAAK8/L,SAAU,EAAAhyG,QAAA,SA3DI,2KA4DnB9tF,KAAK+/L,YAAc//L,KAAK8/L,QAAQhzJ,KAAb,IAAAt7B,OAAsBsiF,WAAA8M,WAAWguE,cAEpD5uK,KAAKyhM,mBACLzhM,KAAK+uF,SAAS97E,OAAOjT,KAAK8/L,SAEnB9/L,8CAgBP,OAHAA,KAAKsgJ,wBAA0BtgJ,KAAK40F,gBAAgBliC,KAAK1yD,MACzDA,KAAKsqM,6BAA+BtqM,KAAKuqM,qBAAqB73I,KAAK1yD,MAE5DA,sCAeP,OAFAA,KAAKk0F,UAAU9yC,GAAGmtC,YAAAyC,MAAM+D,eAAgB/0F,KAAKsgJ,yBAEtCtgJ,uCAaP,OAFAA,KAAKk0F,UAAU1yC,IAAI+sC,YAAAyC,MAAM+D,eAAgB/0F,KAAKsgJ,yBAEvCtgJ,4CAWP,OAAOA,KAAK8/L,QAAQ9oI,SAAS88B,WAAAuB,UAAUuL,WAAWxmF,6CAQlDpa,KAAK8/L,QAAQlpI,YAAYk9B,WAAAuB,UAAUuL,WAAWxmF,gDAU9Cpa,KAAKyhM,8DAULzhM,KAAK+/L,YAAYv7L,QAEjB,IAAMulG,aAAelX,mBAAA,QAAkBkV,cACjCi0D,SAAWjyD,aAAausC,cAAck0D,cAC5CxqM,KAAKqqM,cAAgBtgG,aAAausC,cAAcm0D,qBALjC,IAAA1yD,2BAAA,EAAAC,mBAAA,EAAAC,oBAAAr1I,EAAA,IAOf,IAAA,IAAAs1I,MAAAC,UAAsB6jB,SAAtB32H,OAAAC,cAAAyyG,2BAAAG,MAAAC,UAAAhyH,QAAAd,MAAA0yH,2BAAA,EAAgC,CAAA,IAArB2yD,QAAqBxyD,MAAA1yI,MACtBmlM,UAAY3qM,KAAKqqM,cAAcz/H,SAAS8/H,SACxCnI,aAAeviM,KAAK4qM,UAAUF,QAASA,QAASC,WAEtD3qM,KAAK+/L,YAAY9sL,OAAOsvL,eAXb,MAAAv/L,KAAAg1I,mBAAA,EAAAC,eAAAj1I,IAAA,QAAA,IAAA+0I,2BAAA,MAAAI,UAAA,QAAAA,UAAA,SAAA,QAAA,GAAAH,kBAAA,MAAAC,mDA0BT3yI,IAAKwyF,MAAOhnD,SAClB,IAAMzxC,SAAQ,gHAAAmS,OAE+ClM,IAF/C,oDAAAkM,OAGuBsmF,MAHvB,gCAKR/I,UAAW,EAAAjB,QAAA,SAAEzuF,UAKnB,OAHA0vF,SAASjiD,KAAK,kBAAkB+O,KAAK,UAAW/K,SAChDi+C,SAAS3tC,GAAG,SAAU,CAAEzgD,KAAMm3F,OAAS93F,KAAKsqM,8BAErCv7G,sDAUUxtC,OACjB,IACMopJ,WADU,EAAA78G,QAAA,SAAEvsC,MAAMnd,QACEyX,KAAK,WACzB1qC,IAAMowC,MAAM37C,KAAKjF,KAElBgqM,UAKL3qM,KAAK6qM,QAAQ15L,KAJTnR,KAAK8qM,WAAW35L,qCAahBA,KACJnR,KAAKqqM,cAAc7mM,KAAK2N,KACxBnR,KAAKk0F,UAAUjyC,QAAQssC,YAAAyC,MAAMo3D,iBAAkBpoJ,KAAKqqM,kDAS7Cl5L,KACP,IAAMkF,MAAQrW,KAAKqqM,cAAc79L,QAAQ2E,MAE5B,EAATkF,OACArW,KAAKqqM,cAAc73L,OAAO6D,MAAO,GAGrCrW,KAAKk0F,UAAUjyC,QAAQssC,YAAAyC,MAAMo3D,iBAAkBpoJ,KAAKqqM,0fClPjB,kjBCAD,qXCA1C,IAAAv8G,QAAAC,uBAAAvxF,QAAA,WACAsmI,UAAA/0C,uBAAAvxF,QAAA,mBACAq9G,UAAA9rB,uBAAAvxF,QAAA,mBACAuuM,YAAAh9G,uBAAAvxF,QAAA,iBACAwuM,uBAAAxuM,QAAA,yCAQAw8F,gBAAAx8F,QAAA,kCAKAs3F,WAAAt3F,QAAA,6BACAyuM,6BAAAzuM,QAAA,iCACA0uM,8BAAA1uM,QAAA,wYAEA,IAAMqwB,WAAarwB,QAAQ,cAKN2uM,kCAOjB,SAAAA,uBAAYp8G,SAAUwF,gBAAiBoB,mJAAoB7G,CAAA9uF,KAAAmrM,wBACvDnrM,KAAK+uF,SAAWA,SAChB/uF,KAAKorM,cAAgB,KACrBprM,KAAKqrM,mBAAqB,KAC1BrrM,KAAKsrM,oBAAsB,KAC3BtrM,KAAKurM,oBAAsB,KAC3BvrM,KAAKwrM,sBAAwB,KAE7BxrM,KAAKyrM,iBAAmBl3G,gBACxBv0F,KAAKy5F,oBAAsB9D,mBAE3B31F,KAAK0rM,YAAc,GACnB1rM,KAAKoI,OAAS,GACdpI,KAAKq1C,OAAQ,EAEbr1C,KAAKs6D,QAAS,EACdt6D,KAAKskB,MAAQ0mL,uBAAAvhC,mBAAmBC,SAASC,WACzC3pK,KAAK2rM,YAAcX,uBAAAY,0BAA0BhqG,SAC7C5hG,KAAK6rM,aAAe,GACpB7rM,KAAK8rM,YAAc,GACnB9rM,KAAK+rM,YAAc,KACnB/rM,KAAKgsM,YAAc,KACnBhsM,KAAK0B,OAAS,GAEd1B,KAAK00F,oIAkBL,OATA10F,KAAKorM,cAAgBprM,KAAK+uF,SAASjiD,KAAKgnD,WAAAuB,UAAUC,cAAci7E,cAChEvwK,KAAKqrM,mBAAqBrrM,KAAKorM,cAAct+J,KAAKgnD,WAAAuB,UAAUC,cAAck7E,oBAC1ExwK,KAAKsrM,oBAAsBtrM,KAAKorM,cAAct+J,KAAKgnD,WAAAuB,UAAUC,cAAcm7E,qBAC3EzwK,KAAKurM,oBAAsBvrM,KAAKorM,cAAct+J,KAAKgnD,WAAAuB,UAAUC,cAAco7E,qBAC3E1wK,KAAKwrM,sBAAwBxrM,KAAKorM,cAAct+J,KAAKgnD,WAAAuB,UAAUC,cAAcq7E,uBAE7E3wK,KAAKisM,gBAAkBp/K,WAAWtvB,QAAQ0tM,6BAAAiB,+BAC1ClsM,KAAKmsM,iBAAmBt/K,WAAWtvB,QAAQ2tM,8BAAAkB,gCAEpCpsM,KAAKi0G,iBAAiBo4F,wDAe7B,OALArsM,KAAKssM,uBAAyBtsM,KAAKusM,iBAAiB75I,KAAK1yD,MACzDA,KAAKwsM,iCAAmCxsM,KAAKysM,2BAA2B/5I,KAAK1yD,MAC7EA,KAAKy6F,iBAAmBz6F,KAAK06F,WAAWhoC,KAAK1yD,MAC7CA,KAAK0sM,yBAA2B1sM,KAAK2sM,mBAAmBj6I,KAAK1yD,MAEtDA,4CAUI,IAAAiU,MAAAjU,KACX8tF,QAAA,QAAEtvB,QAAQ,sDACLn5C,KAAK,SAACw4C,UAAD,OAAc5pD,MAAKq4L,uBAAuBzuI,YAC/ChnB,KAAK,SAACgjB,OAAD,OAAWptC,QAAQ1U,MAAR,8CAAAvG,OAA4DqoD,MAAMkD,OAAlE,MAAAvrD,OAA6EqoD,MAAMoD,wDAU3Fr3D,MAAM,IAAAsrF,OAAAlxF,KACnBA,KAAK0rM,YAAc9lM,KADA,IAAA04L,MAAA,SAGRqN,aACPz6G,OAAK9oF,OAAOujM,aAAe,GAC3B/lM,KAAK+lM,aAAaj4K,QAAQ,SAACk5K,YAEvBA,WAAWC,SAASn5K,QAAQ,SAACo5K,SACzBA,QAAQ98L,QAAQ0jB,QAAQ,SAAChiB,OACrBw/E,OAAK9oF,OAAOujM,aAAaj6L,OAASk7L,eAK1CA,WAAWG,UAAUr5K,QAAQ,SAACs5K,UAC1BA,SAASC,UAAY/7G,OAAKg8G,mBAAmBF,SAASC,UAAW,KACjED,SAAS/sC,SAAW/uE,OAAKg8G,mBAAmBF,SAAS/sC,SAAU,UAb3E,IAAK,IAAM0rC,eAAe/lM,KAAM04L,MAArBqN,aAkBX3rM,KAAKoyF,SACLpyF,KAAKq1C,OAAQ,6CAYE83J,UAAWC,OAC1B,OAAI,EAAAtqE,UAAA,SAASqqE,WACF,IAAIpC,YAAA,QAAWoC,UAAWC,OAG9B,IAAI7lK,OAAO4lK,UAAWC,wCAa7B,OAFAptM,KAAKqrM,mBAAmBjqJ,GAAG,QAASphD,KAAKwsM,kCAElCxsM,uCAaP,OAFAA,KAAKqrM,mBAAmB7pJ,IAAI,QAASxhD,KAAKwsM,kCAEnCxsM,uCAyBP,OAdAA,KAAK+uF,SAAW,KAChB/uF,KAAKorM,cAAgB,KACrBprM,KAAKqrM,mBAAqB,KAC1BrrM,KAAKsrM,oBAAsB,KAC3BtrM,KAAKurM,oBAAsB,KAC3BvrM,KAAKwrM,sBAAwB,KAE7BxrM,KAAK0rM,YAAc,GACnB1rM,KAAKoI,OAAS,GACdpI,KAAKq1C,OAAQ,EAEbr1C,KAAK6rM,aAAe,GACpB7rM,KAAK8rM,YAAc,GAEZ9rM,0CAaEwkB,UACLxkB,KAAKskB,QAAUE,WAInBxkB,KAAKorM,cAAcz0I,YAAY32D,KAAKskB,OACpCtkB,KAAKskB,MAAQE,SACbxkB,KAAKorM,cAAc90I,SAASt2D,KAAKskB,qDAYhB+oL,OAAQvB,aACzB,IAAMwB,cAAgBD,OAAO1mM,MAAM,EAAGmlM,YAAYlnM,OAAO6S,MAAM,IAAIy+B,UAAUhyC,KAAK,IAClF4nM,YAAYlnM,OAASomM,uBAAAuC,oBAAoBhjC,UAAUxgJ,KAAKujL,eAAej3L,MAAQ,gDAY7Dg3L,OAAQvB,aAC1BA,YAAYn/L,KAAOq+L,uBAAAuC,oBAAoBhjC,UAAUxgJ,KAAKsjL,OAAO1mM,MAAMmlM,YAAYn/L,MAAM0J,MAAQ,qCAUtF,IAAAm3L,uBACP,GAAKxtM,KAAKq1C,MAAV,CAIA,IAAMg4J,OAASrtM,KAAKyrM,iBAAiBnyG,cAAcltF,MAUnD,GARApM,KAAK6rM,aAAe,CAChBjnM,MAAO5E,KAAKyrM,iBAAiBnyG,cAAcz9C,KAAK,kBAChDlvC,IAAK3M,KAAKyrM,iBAAiBnyG,cAAcz9C,KAAK,iBAGlD77C,KAAK8rM,YAAclhL,OAAOioF,OAAO,GAAI7yG,KAAK6rM,cAGb,EAAzB7rM,KAAK8rM,YAAYlnM,MACjB,GAAI5E,KAAK8rM,YAAYlnM,QAAU5E,KAAK8rM,YAAYn/L,IACvCq+L,uBAAAuC,oBAAoBnjC,WAAWtoK,KAAKurM,OAAOngM,OAAOlN,KAAK8rM,YAAYlnM,MAAQ,KAE5E5E,KAAKytM,qBAAqBJ,OAAQrtM,KAAK8rM,iBAExC,CAAA,IAAA4B,sBACGC,aAAeN,OAAO1mM,MAAM3G,KAAK8rM,YAAYlnM,MAAQ,EAAG5E,KAAK8rM,YAAYlnM,MAAQ,GACnFomM,uBAAAuC,oBAAoBjjC,UAAUxoK,KAAK6rM,cAEnC3tM,KAAKytM,qBAAqBJ,OAAQrtM,KAAK8rM,aAC4B,KAA5D,QAAA4B,sBAAA1C,uBAAAuC,oBAAoBhjC,UAAUxgJ,KAAK4jL,qBAAnC,IAAAD,2BAAA,EAAAA,sBAAkDr3L,SAGzDrW,KAAK8rM,YAAYlnM,OAAS,GAMlC5E,KAAK8rM,YAAYn/L,IAAM0gM,OAAOrwM,QAC9BgD,KAAK8rM,YAAYlnM,MAAQ5E,KAAK8rM,YAAYn/L,KAC1Cq+L,uBAAAuC,oBAAoBjjC,UAAUxoK,KAAKurM,OAAO1mM,MAAM3G,KAAK8rM,YAAYn/L,IAAM,EAAG3M,KAAK8rM,YAAYn/L,IAAM,KAGjG3M,KAAK4tM,sBAAsBP,OAAQrtM,KAAK8rM,aAxCrC,IAAA71F,KAAA,QAAAu3F,uBA4CqCxC,uBAAAuC,oBAAoBljC,YAAYtgJ,KAAKsjL,eA5C1E,IAAAG,uBAAAA,uBA4CqF,GAA7EK,UA5CR53F,KA4CC5/F,MAAqBy3L,WA5CtB73F,KA4CmB,GAGpBlkB,SAAW/xF,KAAKy5F,oBAAoBC,uBAAuBo0G,YAO7DC,SAAW,GAGf,QAAkBnrM,IAAdirM,UAEA7tM,KAAK2rM,YAAcX,uBAAAY,0BAA0BpiC,YAC1C,GAAIxpK,KAAK8rM,YAAYlnM,OAASipM,UAEjC,GAAI97G,SAAU,CAEV,IAAIi8G,qBAAuBH,UAAYC,WAAW9wM,OAAS,EAGvDgxM,qBAAuBX,OAAOrwM,SAC9BgxM,qBAAuBX,OAAOrwM,OAC9B+wM,SAAW,KAGf/tM,KAAK8rM,YAAYlnM,MAAQopM,qBACzBhuM,KAAK8rM,YAAYn/L,IAAMomB,KAAKi6B,IAAIhtD,KAAK8rM,YAAYlnM,MAAO5E,KAAK8rM,YAAYn/L,KACzE3M,KAAK2rM,YAAcX,uBAAAY,0BAA0BhqG,cAG7C5hG,KAAK2rM,YAAcX,uBAAAY,0BAA0BpiC,YAIjDxpK,KAAK2rM,YAAcX,uBAAAY,0BAA0BhqG,SAGjD5hG,KAAKiuM,aAAajD,uBAAAvhC,mBAAmBC,SAASC,YAC9C3pK,KAAKurM,oBAAoBzmL,KAAKuoL,OAAO1mM,MAAM,EAAG3G,KAAK8rM,YAAYlnM,OAAO4M,OAAOu8L,WAC7E/tM,KAAKqrM,mBAAmBj/L,IAAIihM,OAAO1mM,MAAM3G,KAAK8rM,YAAYlnM,MAAO5E,KAAK8rM,YAAYn/L,MAClF3M,KAAKqrM,mBAAmBp9J,KAAK,cAAe+8J,uBAAAkD,+BAA+B1zG,SAC3Ex6F,KAAKwsM,mCACLxsM,KAAKorM,cAAc90I,SAAS,UAC5Bt2D,KAAKqrM,mBAAmB76J,QACxBxwC,KAAKs6D,QAAS,2CAUd,IAAM6zI,cAAgBnuM,KAAKwrM,sBAAsB1+J,KAAK,gBAClDshK,cAAgBpuM,KAAKwrM,sBAAsB1+J,KAAK,MAAMnhB,OAE1D,GAAIwiL,cAAcnxM,OAAQ,CACtBmxM,cAAcx3I,YAAY,aAC1B,IAAM03I,kBAAoBF,cAAcplL,OAEpCslL,kBAAkBrxM,SAClBoxM,cAAgBC,mBAIxBD,cAAc93I,SAAS,aACvBt2D,KAAK+rM,YAAcqC,cAAcxoM,KAAK,WACtC5F,KAAKiuM,aAAajD,uBAAAvhC,mBAAmBC,SAASG,mDAU9C,IAAMskC,cAAgBnuM,KAAKwrM,sBAAsB1+J,KAAK,gBAClDshK,cAAgBpuM,KAAKwrM,sBAAsB1+J,KAAK,MAAMlhB,QAE1D,GAAIuiL,cAAcnxM,OAAQ,CACtBmxM,cAAcx3I,YAAY,aAC1B,IAAM23I,kBAAoBH,cAAchoL,OAEpCmoL,kBAAkBtxM,SAClBoxM,cAAgBE,mBAIxBF,cAAc93I,SAAS,aACvBt2D,KAAK+rM,YAAcqC,cAAcxoM,KAAK,WACtC5F,KAAKiuM,aAAajD,uBAAAvhC,mBAAmBC,SAASG,4CAW9C7pK,KAAKyrM,iBAAiBnyG,cAAcz9C,KAAK,iBAAkB77C,KAAK6rM,aAAajnM,OAC7E5E,KAAKyrM,iBAAiBnyG,cAAcz9C,KAAK,eAAgB77C,KAAK6rM,aAAal/L,KAC3E3M,KAAKyrM,iBAAiBnyG,cAAc9oD,QAEpCxwC,KAAK6rM,aAAe,GACpB7rM,KAAK8rM,YAAc,GACnB9rM,KAAK+rM,YAAc,KAEnB/rM,KAAKorM,cAAcz0I,cACnB32D,KAAKs6D,QAAS,wCAWJonC,SAEV1hG,KAAKgsM,YAAchsM,KAAKqrM,mBAAmBj/L,MAE3C,IAAMyb,IAAG,GAAArW,OAAMkwF,QAAN,KACT1hG,KAAKsrM,oBAAoBl/L,IAAIyb,KAC7B7nB,KAAKsrM,oBAAoBr9J,KAAK,OAAQpmB,IAAI7qB,QAE1CgD,KAAK0B,OAAS,CAAEggG,QAASA,SACzB1hG,KAAK0B,OAAOqrM,UAAY/sM,KAAKoI,OAAOpI,KAAK2rM,aAAajqG,SAASqrG,UAE/D/sM,KAAKiuM,aAAajD,uBAAAvhC,mBAAmBK,OAAOC,SAC5C/pK,KAAKqrM,mBAAmBj/L,IAAI,IAC5BpM,KAAKqrM,mBAAmBp9J,KAAK,cAAe+8J,uBAAAkD,+BAA+BhkC,OAC3ElqK,KAAKwsM,mCACLxsM,KAAKqrM,mBAAmB76J,yCAUxBxwC,KAAKsrM,oBAAoBl/L,IAAI,IAC7BpM,KAAKsrM,oBAAoBr9J,KAAK,OAAQ,GAEtCjuC,KAAKiuM,aAAajD,uBAAAvhC,mBAAmBC,SAASG,WAC9C7pK,KAAKqrM,mBAAmBj/L,IAAIpM,KAAKgsM,aACjChsM,KAAKqrM,mBAAmBp9J,KAAK,cAAe+8J,uBAAAkD,+BAA+B1zG,SAC3Ex6F,KAAKwsM,mCACLxsM,KAAKqrM,mBAAmB76J,QAExBxwC,KAAK0B,OAAS,GACd1B,KAAKgsM,YAAc,sCAWnB,IAAIqB,OAASrtM,KAAKyrM,iBAAiBnyG,cAAcltF,MAE3Cw8C,OAASykJ,OAAO1mM,MAAM,EAAG3G,KAAK8rM,YAAYlnM,OAAO2pM,YAEjD1lJ,MAAQwkJ,OAAO1mM,MAAM3G,KAAK8rM,YAAYn/L,KAAK6hM,WAE7CC,SAAWzuM,KAAKqrM,mBAAmBj/L,MAAMk3D,OAEzCmrI,SAASzxM,SACTyxM,SAAWA,SAASvpM,QAAQ8lM,uBAAAuC,oBAAoBnjC,WAAY,KAAK54J,OAAO,MAG5E67L,OAASzkJ,OAAOp3C,OAAwB,EAAhBo3C,OAAO5rD,OAAc,IAAM,GAAIgD,KAAK0B,OAAOggG,QAAS,IAAK+sG,UACjFzuM,KAAKyrM,iBAAiBnyG,cAAcltF,IAAIihM,OAASxkJ,OACjD7oD,KAAKyrM,iBAAiBnyG,cAAcz9C,KAAK,iBAAkBwxJ,OAAOrwM,QAClEgD,KAAKyrM,iBAAiBnyG,cAAcz9C,KAAK,eAAgBwxJ,OAAOrwM,QAChEgD,KAAKyrM,iBAAiBnyG,cAAc9oD,QAEpCxwC,KAAK6rM,aAAe,GACpB7rM,KAAK8rM,YAAc,GACnB9rM,KAAK+rM,YAAc,KACnB/rM,KAAKgsM,YAAc,KACnBhsM,KAAK0B,OAAS,GAEd1B,KAAKorM,cAAcz0I,cACnB32D,KAAKs6D,QAAS,qCASP/Y,OAAO,IACR3kD,KAAS2kD,MAAM4C,cAAfvnD,KAON,OALY,MAARA,OAEAA,KAAO2kD,MAAM4C,cAAc0B,SAGvBjpD,MAEJ,KAAKo8F,gBAAAmF,UAAUkB,SACf,KAAKrG,gBAAAqF,iBAAiBgB,SAClB99C,MAAMS,iBAEFhiD,KAAKskB,QAAU0mL,uBAAAvhC,mBAAmBC,SAASG,WAAa7pK,KAAKskB,QAAU0mL,uBAAAvhC,mBAAmBC,SAASE,SACnG5pK,KAAK0uM,gBAGT,MACJ,KAAK11G,gBAAAmF,UAAUmB,WACf,KAAKtG,gBAAAqF,iBAAiBiB,WAClB/9C,MAAMS,iBAEFhiD,KAAKskB,QAAU0mL,uBAAAvhC,mBAAmBC,SAASG,WAAa7pK,KAAKskB,QAAU0mL,uBAAAvhC,mBAAmBC,SAASE,SACnG5pK,KAAK2uM,gBAGT,MACJ,KAAK31G,gBAAAmF,UAAUgC,IACf,KAAKnH,gBAAAqF,iBAAiB8B,IAClB5+C,MAAMS,iBAEFhiD,KAAKskB,QAAU0mL,uBAAAvhC,mBAAmBC,SAASG,UAE3C7pK,KAAK4uM,cAAc5uM,KAAK+rM,aACjB/rM,KAAKskB,QAAU0mL,uBAAAvhC,mBAAmBK,OAAOE,OAEhDhqK,KAAK6uM,SAGT,MACJ,KAAK71G,gBAAAmF,UAAUQ,MACf,KAAK3F,gBAAAmF,UAAUS,UACf,KAAK5F,gBAAAqF,iBAAiBM,MACd3+F,KAAKskB,QAAU0mL,uBAAAvhC,mBAAmBK,OAAOE,QAEzChqK,KAAK6uM,SACL7uM,KAAKyrM,iBAAiB5sG,kBAG1B,MAEJ,KAAK7F,gBAAAmF,UAAUC,OACf,KAAKpF,gBAAAqF,iBAAiBD,OACd4sG,uBAAA/gC,4BAA4Br/F,SAAS5qE,KAAKskB,OAC1CtkB,KAAK2tF,SAEL3tF,KAAK8uM,SAGT,MACJ,QACI9uM,KAAKqrM,mBAAmB76J,oDASjB+Q,OACf,GAAIA,MAAMmF,QAAUsyC,gBAAA0E,iBAAiBC,WAAY,CAC7C,IAAM+D,SAAU,EAAA5T,QAAA,SAAEvsC,MAAMoC,eAAe/9C,KAAK,WAExC87F,UACA1hG,KAAK+rM,YAAcrqG,QACnB1hG,KAAK4uM,cAAcltG,gEAW3B,IAAMqtG,8BAAgC/uM,KAAKqrM,mBAAmBj/L,MACxD4iM,YAAcD,8BAA8B/xM,OAClDgD,KAAKqrM,mBAAmBp9J,KAAK,OACR,IAAhB+gK,YAAoBhvM,KAAKqrM,mBAAmBp9J,KAAK,eAAejxC,OAASgyM,aAE1EhE,uBAAA/gC,4BAA4Br/F,SAAS5qE,KAAKskB,OAC1CtkB,KAAKivM,eAAeF,8BAA8BzrI,OAAO/2C,eAEzDvsB,KAAKkvM,cAAcH,8BAA8BzrI,+CAU1C5sD,QACX,IAAI+P,QAAU,GAad,IAPoB,EAAhB/P,OAAO1Z,QAAcgD,KAAK2rM,cAAgBX,uBAAAY,0BAA0BpiC,UACpE/iJ,QAAUzmB,KAAKmvM,uBAAuBz4L,SAG1C1W,KAAKwrM,sBAAsBvjJ,KAAKjoD,KAAKisM,gBAAgBxlL,UACrDzmB,KAAKwrM,sBAAsB1+J,KAAK,MAAMsU,GAAG,QAASphD,KAAK0sM,2BAEnD,EAAA7yF,UAAA,SAASpzF,SACTzmB,KAAKiuM,aAAajD,uBAAAvhC,mBAAmBC,SAASC,gBAC3C,CAEH,IAAIylC,iBAAmBpvM,KAAKskB,QAAU0mL,uBAAAvhC,mBAAmBC,SAASG,UAQlE,GALIj/I,OAAO8R,KAAK18B,KAAKoI,OAAOpI,KAAK2rM,cAAc/gI,SAASl0D,UACpD1W,KAAK+rM,YAAcr1L,OACnB04L,kBAAmB,GAGnBA,iBAAkB,CAClB,IAAMC,WAAarvM,KAAKwrM,sBAAsB1+J,KAA3B,oBAAAt7B,OAAoDxR,KAAK+rM,YAAzD,OAEnB,GAAIsD,WAAWryM,OAGX,OAFAqyM,WAAW/4I,SAAS,kBACpBt2D,KAAKiuM,aAAajD,uBAAAvhC,mBAAmBC,SAASG,WAKtD7pK,KAAKiuM,aAAajD,uBAAAvhC,mBAAmBC,SAASE,SAGlD5pK,KAAK+rM,YAAc,oDAYAr1L,QACnB,IAAM+P,QAAU,GADWsxH,2BAAA,EAAAC,mBAAA,EAAAC,oBAAAr1I,EAAA,IAE3B,IAAA,IAAAs1I,MAAAC,UAAsBn4I,KAAK0rM,YAAY1rM,KAAK2rM,aAA5CtmK,OAAAC,cAAAyyG,2BAAAG,MAAAC,UAAAhyH,QAAAd,MAAA0yH,2BAAA,EAA0D,CAAA,IAA/Cr2C,QAA+Cw2C,MAAA1yI,MAAA8pM,4BAAA,EAAAC,oBAAA,EAAAC,qBAAA5sM,EAAA,IACtD,IAAA,IAAA6sM,OAAAC,WAAsBhuG,QAAQmrG,SAA9BxnK,OAAAC,cAAAgqK,4BAAAG,OAAAC,WAAAvpL,QAAAd,MAAAiqL,4BAAA,EAAwC,CAAA,IAA7BxC,QAA6B2C,OAAAjqM,MAAAmqM,4BAAA,EAAAC,oBAAA,EAAAC,qBAAAjtM,EAAA,IAEpC,IAAA,IAAAktM,OAAAC,WAAoBjD,QAAQ98L,QAA5Bq1B,OAAAC,cAAAqqK,4BAAAG,OAAAC,WAAA5pL,QAAAd,MAAAsqL,4BAAA,EAAqC,CAAA,IAA1Bj+L,MAA0Bo+L,OAAAtqM,MAC7BkM,MAAMs+L,WAAWt5L,eACe,IAAxB+P,QAAQi7E,QAAQ1rF,MACO,IAA/ByQ,QAAQi7E,QAAQ1rF,IAAImrJ,QACpBzvJ,MAAM1U,OAASypB,QAAQi7E,QAAQ1rF,IAAI0rF,QAAQ1kG,UAC3CypB,QAAQi7E,QAAQ1rF,IAAM,CAAEmrJ,QAAQ,EAAMz/D,QAAShwF,MAAOu+L,YAAanD,QAAQoD,WAP/C,MAAAltM,KAAA4sM,oBAAA,EAAAC,gBAAA7sM,IAAA,QAAA,IAAA2sM,4BAAA,MAAAI,WAAA,QAAAA,WAAA,SAAA,QAAA,GAAAH,mBAAA,MAAAC,iBAapC,SAAmC,IAAxBppL,QAAQi7E,QAAQ1rF,MAAsD,IAA/ByQ,QAAQi7E,QAAQ1rF,IAAImrJ,SAIlE2rC,QAAQqD,QAAQt1K,KAAK,SAAC0mF,KAAD,OAASA,IAAIyuF,WAAWt5L,UAAU,CACvD,IAAMna,EAAIuwM,QAAQ98L,QAAQ,SAES,IAAxByW,QAAQi7E,QAAQ1rF,KACvBzZ,EAAES,OAASypB,QAAQi7E,QAAQ1rF,IAAI0rF,QAAQ1kG,UACvCypB,QAAQi7E,QAAQ1rF,IAAM,CAAEmrJ,QAAQ,EAAOz/D,QAASnlG,EAAG0zM,YAAanD,QAAQoD,YAvB9B,MAAAltM,KAAAusM,oBAAA,EAAAC,gBAAAxsM,IAAA,QAAA,IAAAssM,4BAAA,MAAAI,WAAA,QAAAA,WAAA,SAAA,QAAA,GAAAH,mBAAA,MAAAC,mBAF/B,MAAAxsM,KAAAg1I,mBAAA,EAAAC,eAAAj1I,IAAA,QAAA,IAAA+0I,2BAAA,MAAAI,UAAA,QAAAA,UAAA,SAAA,QAAA,GAAAH,kBAAA,MAAAC,gBA+B3B,OAAOxxH,8CAUGgoL,UAC2B,IAAjCzuM,KAAK0B,OAAOqrM,UAAU/vM,OACE,IAApByxM,SAASzxM,QACTgD,KAAK0B,OAAO0uM,SAAWpF,uBAAAqF,6BAA6BrmC,MACpDhqK,KAAKiuM,aAAajD,uBAAAvhC,mBAAmBK,OAAOE,SAE5ChqK,KAAK0B,OAAO0uM,SAAWpF,uBAAAqF,6BAA6BtmC,QACpD/pK,KAAKiuM,aAAajD,uBAAAvhC,mBAAmBK,OAAOC,WAGhD/pK,KAAK0B,OAAOqrM,UAAUr5K,QAAQ,SAACs5K,UACvBA,SAAS/sC,SAASn+J,KAAK2sM,UACvBzB,SAASoD,SAAWpF,uBAAAqF,6BAA6BrmC,MAC1CgjC,SAASC,UAAUnrM,KAAK2sM,UAC/BzB,SAASoD,SAAWpF,uBAAAqF,6BAA6BlmC,UAEjD6iC,SAASoD,SAAWpF,uBAAAqF,6BAA6BtmC,UAGrD/pK,KAAK0B,OAAOqrM,UAAUlyK,KAAK,SAACmyK,UAAD,OAAcA,SAASoD,WAAapF,uBAAAqF,6BAA6BrmC,QAC5FhqK,KAAKiuM,aAAajD,uBAAAvhC,mBAAmBK,OAAOE,OAE5ChqK,KAAKiuM,aAAajD,uBAAAvhC,mBAAmBK,OAAOC,UAGpD/pK,KAAKwrM,sBAAsBvjJ,KAAKjoD,KAAKmsM,iBAAiBnsM,KAAK0B,u2BC1tB9C4uM,sBAMjB,SAAAA,WAAYnD,UAAWC,OAAO,IAAAn5L,MAAAjU,oIAAA8uF,CAAA9uF,KAAAswM,YAC1BtwM,KAAKuwM,QAAU,GACfpD,UAAUz5K,QAAQ,SAAC88K,UACfv8L,MAAKs8L,QAAQ/sM,KAAK,IAAI+jC,OAAOipK,SAAUpD,uHAW1CnoM,KACD,OAAOjF,KAAKuwM,QAAQ11K,KAAK,SAAC41K,OAAD,OAAWA,MAAM3uM,KAAKmD,yNCxBvD,IAAAupF,UAAAhyF,QAAA,wBAgBAuwB,OAAO2jL,aAAe3jL,OAAO2jL,cAAgB3jL,OAAO4jL,mBAK/Ct6K,OAAOh2B,UAAUkF,eAAe,YACjC8wB,OAAOh2B,UAAU0pM,OAAS,SAAShtJ,OAC/B,GAAIA,MAAQ,EACR,MAAO,GAMX,IAHA,IAAIx0C,OAAS,GACT6mC,QAAUpvC,KAAKgyE,UAEJ,EAARj1B,OACS,EAARA,QAAWx0C,QAAU6mC,SACzB2N,QAAU,EAAG3N,SAAWA,QAG5B,OAAO7mC,OAAS6mC,UAcnB/Y,OAAOu6K,gBAERv6K,OAAOu6K,cAAgB,WAMnB,IALA,IACI32D,MACAz0H,OACAqrL,MAHEj9H,MAAQ,GAKLv3E,EAAI,EAAGA,EAAIwI,UAAU7H,OAAQX,IAElCmpB,QADAy0H,MAAQp1I,UAAUxI,IACD,MACjBw0M,MAAgB,MAAR52D,MAAiB,CAAC,OAAUz0H,QAAU,IAAK,OAAmB,KAATA,SAAmB,CAACy0H,OACjFrmE,MAAMpwE,KAAK6yB,OAAOyS,aAAat4B,MAAM,KAAMqgM,QAG/C,OAAOj9H,MAAM1vE,KAAK,MAuB1B6oB,OAAOtsB,IAnBK,SAAC8pB,SAA8B,IAArB2B,MAAqB,EAAArnB,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAb2pF,UAAAU,IAAI2+E,KAS9B,GAAIhyH,KAAKp7C,KAAOyrB,MAAO,CACnB,IAAMpH,KAAI,KAAAtT,OATK,CACf6tD,EAAG,QACHpiE,EAAG,OACHsC,EAAG,OACHC,EAAG,QACHC,EAAG,SAI0BysB,OAAnB,MAENA,OAASsiE,UAAAU,IAAI4+E,QACbrhJ,QAAQ4tB,KAAKv1B,KAAMyF,SAEnBkC,QAAQhsB,IAAIqkB,KAAMyF,wOCnF9B,QAAAu4G,eAAAtmI,QAAA,6EAS+B,SAACs0M,OAAD,MAAA,MAAAt/L,OAAgBs/L,MAAK/+K,WAAW,GAAGjxB,SAAS,IAAIy6C,gBASxE,IAAMk5F,OAAS,SAACvkI,MAGnB,OAAOA,KAFuB6iB,KAAKC,MAAMD,KAAK+B,SAAW5kB,KAAKlT,sDAUrC,SAAC6O,GAC1B,GAAiB,IAAbA,EAAE7O,OAAN,CAIA,KAAK,EAAA8lI,UAAA,SAASj3H,EAAE,IACZ,OAAO4oI,OAAO5oI,GAKlB,IADA,IAAImxG,OAAS,EACJ3gH,EAAI,EAAGA,EAAIwP,EAAE7O,OAAQX,IAC1B2gH,QAAUnxG,EAAExP,GAAG,GAMnB,IAHA,IAAM00M,aAAeh+K,KAAK+B,SAAWkoF,OAG5Bz3E,GAFTy3E,OAAS,EAEOz3E,GAAI15B,EAAE7O,OAAQuoC,KAG1B,GAAawrK,cAFb/zF,QAAUnxG,EAAE05B,IAAG,IAGX,OAAO15B,EAAE05B,IAAG,GAKpB,OAAO,uBAWY,SAAC//B,MAAOxI,QAC3B,GAAIwI,MAAM1E,WAAW9D,QAAUA,OAC3B,OAAOwI,MAAM1E,WAGjB,IAAMwzB,EAAC,gBAAA9iB,OAAmBhM,OAE1B,OAAO8uB,EAAE1O,OAAO0O,EAAEt3B,OAASA,OAAQA,kLC9DhC,SAAuCg0M,SAAUC,kBAAmBC,SACvE,MAAO,GAAA1/L,OAAGw/L,UAAHx/L,OAAcigH,gBAAA8C,qCAAd/iH,OAAoDy/L,mBAApD,GAAAz/L,OACAigH,gBAAA8C,qCADA/iH,OACsC0/L,gFAdjD,IAAAn4G,iBAAAv8F,QAAA,gCACAi1H,gBAAAj1H,QAAA,+eAwBA,SAAS20M,kBAAkBC,gBAAiBX,OAAuB,IAAhBY,WAAgB,EAAAxsM,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAH,EAC5D,GAAuB,MAAnBusM,gBACA,MAAO,GAGX,IAAMrsL,MAAQqsL,gBAAgBrsL,MAAM0rL,OAEpC,GAAc,OAAV1rL,MACA,MAAO,GARoD,IAAAusL,OAAAn1G,eAWtCp3E,MAXsC,GAWtDvf,MAXsD8rM,OAAA,GAW/CnsE,MAX+CmsE,OAAA,GAa/D,MAAO,CAAC9kL,SAAShnB,MAAO,IAAM6rM,WAAYlsE,wCAaN,SAACisE,iBACrC,OAAOD,kBAAkBC,gBAAiBr4G,iBAAAkkC,MAAMyvC,qBAAsB,oCAarC,SAAC0kC,iBAClC,OAAOD,kBAAkBC,gBAAiBr4G,iBAAAkkC,MAAM2vC,8iBClEpD,IAAA2kC,QAAAxjH,uBAAAvxF,QAAA,iBACAsmK,UAAA/0E,uBAAAvxF,QAAA,mBACAspG,MAAA/X,uBAAAvxF,QAAA,eACAq8F,MAAAr8F,QAAA,gBACA0pG,QAAA1pG,QAAA,oGAOA,IAAMg1M,mBAAqB,CACvB,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,KAQSC,YAAc,CACvBpyI,EAAG,OACHpiE,EAAG,MACHsC,EAAG,MACHC,EAAG,QACHC,EAAG,OACHC,EAAG,OACHC,EAAG,MACHC,EAAG,QACH+f,EAAG,QACHC,EAAG,QACHC,GAAI,MACJC,GAAI,SACJC,GAAI,SACJC,GAAI,WACJvD,GAAI,WACJC,GAAI,UACJuD,GAAI,UACJQ,GAAI,YACJ9D,GAAI,WACJC,GAAI,WACJyD,GAAI,SACJgB,GAAI,SACJiB,GAAI,SACJb,GAAI,QACJjE,GAAI,QACJoE,GAAI,UACJ7D,GAAI,SACJi2K,GAAI,SACJt3L,EAAG,QACHmK,EAAG,QACHtK,EAAG,UACHs4G,EAAG,QACH54G,EAAG,OACHK,EAAG,UACHo1M,EAAG,OACHC,EAAG,QACHt1M,EAAG,QACHyvB,EAAG,SACHkwF,EAAG,OACHnwG,EAAG,OACH89B,EAAG,OACHztC,EAAG,WACHE,EAAG,QACHS,EAAG,OACHm4B,EAAG,SACHh5B,EAAG,QACH26B,EAAG,SACHx6B,EAAG,QACHM,EAAG,UACH45C,EAAG,SACH9U,EAAG,UACHjN,EAAG,QACHC,EAAG,SACHq9K,EAAG,OACHC,IAAK,OACLC,IAAK,yCAUF,IAAMC,wBAA0B,CACnC71M,EAAG,QACH81M,GAAI,YACJzwK,EAAG,OACH0wK,GAAI,YACJt7K,EAAG,QACHu7K,GAAI,YACJj2M,EAAG,OACHk2M,GAAI,qEAID,IAAMC,oBAAqB,EAAAb,QAAA,SAAOE,6DACtB5lM,EAAI,OACvBumM,mBAAmB71M,EAAI,SACvB61M,mBAAmBp2M,EAAI,+BAgBO,SAACuP,OAAQ8mM,QAOnC,IALI9mM,OAF4D,EAAA1G,UAAA7H,aAAA4F,IAAAiC,UAAA,IAAAA,UAAA,GAEnDkuB,KAAKC,MAAMznB,QAAQzK,WAEnBiyB,KAAK8B,MAAMtpB,QAAQzK,YAGrB9D,OAASq1M,OAChB,OAAO9mM,OAIX,KAAOA,OAAOvO,OAASq1M,QACnB9mM,OAAM,IAAAiG,OAAOjG,QAGjB,OAAOA,+BAiBmB,SAACA,OAAQ8mM,OAAQC,MAAOz9J,UAClD,IAAM09J,QAAW19J,SAAY9hB,KAAKC,MAAQD,KAAK8B,MAE/C,IAAKy9K,MACD,OAAOC,QAAQhnM,OAASwnB,KAAK4qF,IAAI,GAAI00F,SAAWt/K,KAAK4qF,IAAI,GAAI00F,QAIjE,GAAIA,QAAU,EACV,OAAQE,QAAQhnM,OAASwnB,KAAK4qF,IAAI,GAAI00F,SAAWt/K,KAAK4qF,IAAI,GAAI00F,SAASvxM,WAG3EyK,OAASA,OAAOzK,WAEhB,IAAK,IAAIzE,EAAI,EAAGA,EAAIkP,OAAOvO,OAAQX,IAC/B,GAAkB,MAAdkP,OAAOlP,GAAY,CACnB,IAAMm2M,eAAiBjnM,OAAOvO,QAAUX,EAAI,GAE5C,GAAIm2M,iBAAmBH,OACnB,OAAO9mM,OAAOzK,WACX,GAAI0xM,eAAiBH,OAExB,OAAO9mM,OAASyZ,MAAMqtL,OAASG,eAAiB,GAAGtuM,KAAK,KACrD,GAAqBmuM,OAAjBG,eAAyB,CAChC,GAAI39J,SACA,OAAOtpC,OAAOqa,OAAO,EAAGra,OAAOvO,QAAUw1M,eAAiBH,SAG9D,IAAM9uM,IAAMgI,OAAOvO,QAAUw1M,eAAiBH,OAAS,GAMvD,OALc9mM,OAAOqa,OAAO,EAAGriB,MACL,IAAX8uM,OACT,GACAE,QAAQ/lL,SAASjhB,OAAOqa,OAAOriB,IAAK,GAAI,IAAM,IAAIzC,eAcjE,IAAM2xM,YAAc,SAACC,WACxB,IAAMC,OAASD,UAAU,GACnBE,OAASF,UAAU,GAEzB,GAAe,MAAXC,OACA,MAAe,MAAXC,OACO,UAGX,GAAAphM,OAAUigM,YAAYkB,QAAtB,KAAAnhM,OAAiCigM,YAAYmB,SAC1C,GAAe,MAAXD,OAEP,OAAOlB,YAAYiB,WAChB,GAAc,GAAVC,OAAa,CACpB,IAAME,WAAU,GAAArhM,OAAMmhM,OAAN,KAEhB,MAAe,MAAXC,OAEOnB,YAAYoB,YAGvB,GAAArhM,OAAUigM,YAAYoB,YAAtB,KAAArhM,OAAqCigM,YAAYmB,SAGrD,MAAA,GAAAphM,OAAUigM,YAAYkB,QAAtB,KAAAnhM,OAAiCigM,YAAYmB,+DAWrB,SAACv5G,SAAU2e,SACnC,IAAK,QAAQl2G,KAAKu3F,UAAW,CAEzB,GAAgB,aAAZ2e,QAAwB,CAExB,IAAM86F,GAAI,GAEV,IAAK,IAAM92F,KAAK3iB,SAEZy5G,GAAEtvM,KAAKiuM,YAAYp4G,SAAS2iB,KAGhC,OAAO82F,GAAE5uM,KAAK,KAKlB,IAEI6uM,YAFEt9K,SAAW,GACbuwJ,GAAK3sF,SAELhjF,MAAQ2vK,GAAGhpL,OAAS,EACpBg2M,cAAgB3vI,MAAM72C,SAASw5J,GAAG3vK,OAAQ,KAG9C,IAFAA,QAEgB,GAATA,OAAY,CAGf,IAFA08L,aAAe1vI,MAAM72C,SAASw5J,GAAG3vK,OAAQ,KAElC08L,cAAgBC,eACnB38L,QACA08L,aAAe1vI,MAAM72C,SAASw5J,GAAG3vK,OAAQ,OAErCA,MAAQ,MAIhBof,SAASnxB,QAAQ0hL,GAAGpgK,OAAOvP,MAAQ,IACnC2vK,GAAKA,GAAGpgK,OAAO,EAAGvP,MAAQ,GAC1B28L,aAAeD,YAInB,IAAMp8K,EAAI,GAEV,IAAK,IAAMt6B,KAAKo5B,SACZ,GAAI4tC,MAAM72C,SAASiJ,SAASp5B,GAAI,KAE5Bs6B,EAAEnzB,KAAKwoG,eAAev2E,SAASp5B,UAG/B,OAAQo5B,SAASp5B,GAAGW,QAChB,KAAK,EACD25B,EAAEnzB,KAAKiyB,SAASp5B,IAChB,MACJ,KAAK,EACDs6B,EAAEnzB,KAAKiuM,YAAYh8K,SAASp5B,KAC5B,MACJ,KAAK,EACDs6B,EAAEnzB,KAAKivM,YAAYh9K,SAASp5B,KAC5B,MACJ,KAAK,EACDs6B,EAAEnzB,KAAF,GAAAgO,OAAUigM,YAAYh8K,SAASp5B,GAAG,IAAlC,KAAAmV,OAAyCihM,YAAYh9K,SAASp5B,GAAGupB,OAAO,MACxE,MACJ,KAAK,EACD+Q,EAAEnzB,KAAF,GAAAgO,OAAUihM,YAAYh9K,SAASp5B,GAAGupB,OAAO,EAAG,IAA5C,KAAApU,OAAmDihM,YAAYh9K,SAASp5B,GAAGupB,OAAO,MAClF,MACJ,QACI+Q,EAAEnzB,KAAKwoG,eAAev2E,SAASp5B,KAM/C,OAAOs6B,EAAEzyB,KAAK,KAGd,OAAQm1F,SAASr8F,QACb,KAAK,EACD,OAAOq8F,SACX,KAAK,EACD,OAAOo4G,YAAYp4G,UACvB,KAAK,EACD,OAAOo5G,YAAYp5G,UACvB,KAAK,EACD,MAAA,GAAA7nF,OAAUigM,YAAYp4G,SAAS,IAA/B,KAAA7nF,OAAsCihM,YAAYp5G,SAASzzE,OAAO,KAEtE,KAAK,EACD,MAAoB,MAAhByzE,SAAS,IAA8B,MAAhBA,SAAS,IAA8B,MAAhBA,SAAS,GACvD,GAAA7nF,OAAUigM,YAAYp4G,SAAS,IAA/B,aAGJ,GAAA7nF,OAAUihM,YAAYp5G,SAASzzE,OAAO,EAAG,IAAzC,KAAApU,OAAgDihM,YAAYp5G,SAASzzE,OAAO,KAEhF,QACI,OAAOyzE,gCAWK,SAAC77F,OAIzB,OAFAA,OADAA,MAAK,GAAAgU,OAAMhU,MAAN,MACS+uB,eAEP,EAAAu2I,UAAA,UAAS,EAAAh9D,MAAA,SAAKtoG,MAAO,SAACy1M,eAAgB52M,GAAjB,OAAuB+1M,mBAAmB50M,MAAMnB,OAAM6H,KAAK,4BAS9D,SAACikG,SAC1B,IAAMljG,IAAMkjG,QAAQrnG,WAEpB,OAAQmE,IAAIjI,QACR,KAAK,EACD,MAAA,aAAAwU,OAAoBigM,YAAYxsM,MACpC,KAAK,EACD,MAAA,QAAAuM,OAAeigM,YAAYxsM,IAAI,IAA/B,KAAAuM,OAAsCigM,YAAYxsM,IAAI,KAC1D,QACI,MAAA,GAAAuM,OAAUigM,YAAYxsM,IAAI,IAA1B,KAAAuM,OAAiCigM,YAAYxsM,IAAI,IAAjD,KAAAuM,OAAwDigM,YAAYxsM,IAAI,KAGhF,OAAOkjG,SASJ,IAAM6D,eAAiB,SAACknG,cAC3B,IAAMjuM,IAAMiuM,aAAapyM,WACnB2gC,IAAM,GAEZ,GAAKx8B,IAAL,CAKA,IAAK,IAAI5I,EAAI,EAAGA,EAAI4I,IAAIjI,OAAQX,IAC5BolC,IAAIj+B,KAAKiuM,YAAYxsM,IAAI5I,KAG7B,OAAOolC,IAAIv9B,KAAK,oEASU,SAACykG,UAC3B,IAAMwqG,MAAQxqG,SAAS7nG,WACjB61B,EAAI,GAGV,GAAgB,MAAZgyE,SACAhyE,EAAEnzB,KAAK,eAAgBiuM,YAAY0B,MAAM,IAAK1B,YAAY0B,MAAM,IAAK1B,YAAY0B,MAAM,UACpF,GAAgB,KAAZxqG,SACPhyE,EAAEnzB,KAAKiuM,YAAY0B,MAAM,IAAK1B,YAAY0B,MAAM,IAAK,YAE/CxqG,UAA0C,IAA9B51E,KAAKC,MAAM21E,SAAW,OAAkB,GACtDhyE,EAAEnzB,KAAKiuM,YAAY0B,MAAM,IAAK,gBAE/B,GAAgB,KAAZxqG,SACPhyE,EAAEnzB,KAAKiuM,YAAY0B,MAAM,IAAK,YAExBxqG,UAA0C,IAA9B51E,KAAKC,MAAM21E,SAAW,OAAkB,GACtDhyE,EAAEnzB,KAAKiuM,YAAY0B,MAAM,IAAK,eAE/B,CAAA,KAAgB,KAAZxqG,UAGP,OAAOA,SAFPhyE,EAAEnzB,KAAKiuM,YAAY0B,MAAM,IAAK,WAKlC,OAAOx8K,EAAEzyB,KAAK,0BAaS,SAAC2zF,SAAU55C,aAAc+9H,WAChD,IAAMo3B,WAAa,CACfzqG,SAAU,CAAC,uBAAwB,qBAAsB,YACzDj1C,MAAO,CAAC,kBAAmB,oBAAqB,8BAGpD,OAAmBsoH,UAAf/9H,aACOm1J,WAAWv7G,UAAU,GAG5B55C,aAAe+9H,UACRo3B,WAAWv7G,UAAU,GAGzBu7G,WAAWv7G,UAAU,IASzB,IAAMw7G,qBAAuB,SAACvmG,OACjC,OAAO0kG,oBAAmB,EAAA34G,MAAAhkE,OAAMi4E,OAAQ,EAAA5G,QAAAqpD,OAAQ,uGAUG,SAACpnD,SACpD,IAAMmrG,kBAAoBD,sBAAqB,EAAAntG,QAAAuD,mBAAkBtB,QAAUp1E,KAAK89B,KAAKtkC,cAErF,OAAOwlL,wBAAwBuB,2UC1dnC,IAAA5lE,kBAAAlxI,QAAA,sBACAq8F,MAAAr8F,QAAA,gBACAu8F,iBAAAv8F,QAAA,mSAUA,IAiBM+2M,kBAAoB,CACtB,CAEI78L,OAAQ,KACR88L,SAAU,IAGd,CAEI98L,OAAQ,WACR88L,SAAU,IAGd,CAEI98L,OAAQ,KACR88L,SAAU,IAGd,CAEI98L,OAAQ,MACR88L,SAAU,CAGN,sBAEA,SAGR,CAEI98L,OAAQ,SACR88L,SAAU,CAEN,OAEA,SAGR,CAEI98L,OAAQ,MACR88L,SAAU,CAEN,SAGR,CAEI98L,OAAQ,MACR88L,SAAU,CAEN,OAEA,OAEA,SAGR,CAEI98L,OAAQ,KACR88L,SAAU,CAEN,iBAIA,eAGA,0BAGA,gBAOA,SAYR,CAEI98L,OAAQ,MACR88L,SAAU,CAEN,SAGR,CAEI98L,OAAQ,KACR88L,SAAU,CAEN,UAkDZ,SAASC,YAAY5jH,KAAMkjB,iBACvB,OAtCJ,SAAmBljB,MACf,OAAO0jH,kBAAkB3mK,OAAO,SAACp2B,MAC7B,OAAwB,OAAhBA,KAAKE,QAAmBF,KAAKE,OAAO5U,KAAK+tF,QACpB,IAAzBr5E,KAAKg9L,SAASx2M,SAmCf02M,CAAU7jH,MAAMh1D,KAAK,SAACrkB,MACzB,OAAOA,KAAKg9L,SAAS34K,KAAK,SAAC/4B,MAAD,OAxBlC,SAAkBixG,gBAAiB4gG,aAC/B,GAAIA,uBAAuBpsK,OACvB,OAAOosK,YAAY7xM,KAAKixG,iBACrB,GAA2B,iBAAhB4gG,YACd,OAAO5gG,kBAAoB4gG,YAG/B,MAAM,IAAIzhL,UAAJ,yEAAA1gB,OAAAiiG,QAC8EkgG,eAgB5CC,CAAS7gG,gBAAiBjxG,0CAS/B,WACnC,IAAMlF,MAAO,EAAAi8F,MAAAg7G,SAAQ,EA1LI,MA0LqB/yM,SAAS,GACvD,OAAO,EAAA4sI,kBAAAS,SAAQvxI,KAAM,IAWlB,IAAMo2G,uBAAyB,SAACD,iBACnC,OAAOha,iBAAAkkC,MAAMypC,iBAAiB5kK,KAAKixG,0GAaE,SAACljB,KAAMkjB,iBAC5C,QAAKC,uBAAuBD,mBAIxBA,gBAAgB+gG,SAAS,QAIrBL,YAAY5jH,KAAMkjB,slBCzO9B,IAAA1a,WAAAtK,uBAAAvxF,QAAA,oBACAumI,WAAAh1C,uBAAAvxF,QAAA,oBACAu3M,aAAAhmH,uBAAAvxF,QAAA,sBACA0pG,QAAA1pG,QAAA,kBACAq8F,MAAAr8F,QAAA,gBACAu8F,iBAAAv8F,QAAA,wIAO6B,GAOtB,IAAM+/G,0BAA4B,CAQrCy3F,MAAO,eAQPC,MAAO,MAQPC,KAAM,MAQNC,MAAO,QAQPC,MAAO,UAQPC,MAAO,IAQP73F,MAAO,iEASJ,IAAM83F,iBAAmB,CAQ5BC,oBAAqB,0DAUP,WACd,OAD0B,EAAA1vM,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAN,GACR03G,0BAA0B03F,kBAUxB,WACd,OADkC,EAAApvM,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAN,GACR03G,0BAA0B03F,OAU3C,IAAMO,KAAO,WAChB,OADgC,EAAA3vM,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAN,GACV03G,0BAA0B23F,sCAUzB,WACjB,OADqC,EAAArvM,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAN,GACX03G,0BAA0B43F,qBAU7B,WACjB,OAD6B,EAAAtvM,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAN,GACX03G,0BAA0B43F,qBAUrB,WACjB,OAD6B,EAAAtvM,UAAA7H,aAAA4F,IAAAiC,UAAA,GAAAA,UAAA,GAAN,GACX03G,0BAA0B63F,qBAUrB,SAACruF,IAClB,OAAOA,GAAKxJ,0BAA0By3F,OAUnC,IAAMnnG,iBAAmB,SAACy1E,SAC7B,OAAQA,SAAW,EAAAp8E,QAAAqpD,OAAU+kD,iBAAiBC,wFAUlB,SAAClyB,SAC7B,OAAQA,QAAUiyB,iBAAiBC,qBAAwB,EAAAruG,QAAAqpD,wCAQxB,SAAC0xB,SAAD,OAAuB,GAAVA,oCAWlB,SAACz7K,OAAD,OAAWgnB,SAAShnB,MAtMzB,IAsMiD+2G,0BAA0B83F,qCAWnE,SAAC7uM,OAAD,OAAWgnB,SAAShnB,MAjN5B,+BA0NI,SAAC2iG,SAe9B,MAZgB,OAFhBA,SAAU,EAAAtP,MAAAhkE,QAAM,EAAAgkE,MAAAupF,KAAIv1E,iBAAiB1E,SAAU,MAAMrnG,cAGjDqnG,QAAU,OAGS,IAAnBA,QAAQnrG,SACRmrG,QAAO,KAAA32F,OAAQ22F,UAGI,IAAnBA,QAAQnrG,SACRmrG,QAAO,IAAA32F,OAAO22F,UAGXA,iCAeoB,SAACm8C,YAC5B,IAAMv/H,MAAQg0E,iBAAAkkC,MAAM0vC,SAAS5iJ,KAAKu6H,YAGlC,GAAa,MAATv/H,MACA,OAAOu/H,WAGX,IAAM+9B,QAAUl3H,WAAWpmC,MAAM,IAC7Bk8J,QAAU,EACVE,QAAU,EAGE,MAAZp8J,MAAM,KACNk8J,QAAW91H,WAAWpmC,MAAM,IAAMg0E,iBAAAimB,KAAK8xC,oBAEvB,MAAZ/rI,MAAM,KACNo8J,QAAWh2H,WAAWpmC,MAAM,IAAMg0E,iBAAAimB,KAAKsH,sBAI/C,IAAImuF,eAAiBpyB,QAAUpB,QAAUE,QAOzC,OAJIpoF,iBAAAkkC,MAAM4vC,GAAG/qK,KAAKijB,MAAM,MACpB0vL,iBAAmB,GAGhBA,uCAUmB,SAAC3lG,WAI3B,IAAMmuB,MAAQ,wBAMd,IAAI,EAAA8F,WAAA,SAAUj0B,YAA4B,aAAdA,WAA0C,cAAdA,UACpD,OAAO3jD,WAAW2jD,WAGtB,IAAI4lG,gBAAkB5lG,UAAU5pG,QAAQ+3H,MAAO,IACzC03E,cAAgB7lG,UAAU/pF,MAAMk4G,OAYtC,OATI,EAAA5kC,WAAA,SAAUs8G,cAAe,OACzBD,gBAAkBF,KAAKE,mBAIvB,EAAAX,aAAA,SAAYjlG,UAAW,OACvB4lG,kBAAoB,GAGjBvpJ,WAAWupJ,2UCrUtB,IAAA5xE,UAAA/0C,uBAAAvxF,QAAA,mBACAq9G,UAAA9rB,uBAAAvxF,QAAA,mBACAswL,WAAA/+F,uBAAAvxF,QAAA,iIASkC,SAACgJ,OAC/B,QAAQ,EAAAsnL,WAAA,SAAUtnL,SAAU,EAAAq0G,UAAA,SAASr0G,kCAUR,SAACA,OAC9B,QAAQ,EAAAs9H,UAAA,SAASt9H,SAAU,EAAAq0G,UAAA,SAASr0G","file":"bundle.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import runtime from './handlebars.runtime';\n\n// Compiler imports\nimport AST from './handlebars/compiler/ast';\nimport { parser as Parser, parse } from './handlebars/compiler/base';\nimport { Compiler, compile, precompile } from './handlebars/compiler/compiler';\nimport JavaScriptCompiler from './handlebars/compiler/javascript-compiler';\nimport Visitor from './handlebars/compiler/visitor';\n\nimport noConflict from './handlebars/no-conflict';\n\nlet _create = runtime.create;\nfunction create() {\n  let hb = _create();\n\n  hb.compile = function(input, options) {\n    return compile(input, options, hb);\n  };\n  hb.precompile = function(input, options) {\n    return precompile(input, options, hb);\n  };\n\n  hb.AST = AST;\n  hb.Compiler = Compiler;\n  hb.JavaScriptCompiler = JavaScriptCompiler;\n  hb.Parser = Parser;\n  hb.parse = parse;\n\n  return hb;\n}\n\nlet inst = create();\ninst.create = create;\n\nnoConflict(inst);\n\ninst.Visitor = Visitor;\n\ninst['default'] = inst;\n\nexport default inst;\n","import * as base from './handlebars/base';\n\n// Each of these augment the Handlebars object. No need to setup here.\n// (This is done to easily share code between commonjs and browse envs)\nimport SafeString from './handlebars/safe-string';\nimport Exception from './handlebars/exception';\nimport * as Utils from './handlebars/utils';\nimport * as runtime from './handlebars/runtime';\n\nimport noConflict from './handlebars/no-conflict';\n\n// For compatibility and usage outside of module systems, make the Handlebars object a namespace\nfunction create() {\n  let hb = new base.HandlebarsEnvironment();\n\n  Utils.extend(hb, base);\n  hb.SafeString = SafeString;\n  hb.Exception = Exception;\n  hb.Utils = Utils;\n  hb.escapeExpression = Utils.escapeExpression;\n\n  hb.VM = runtime;\n  hb.template = function(spec) {\n    return runtime.template(spec, hb);\n  };\n\n  return hb;\n}\n\nlet inst = create();\ninst.create = create;\n\nnoConflict(inst);\n\ninst['default'] = inst;\n\nexport default inst;\n","import {createFrame, extend, toString} from './utils';\nimport Exception from './exception';\nimport {registerDefaultHelpers} from './helpers';\nimport {registerDefaultDecorators} from './decorators';\nimport logger from './logger';\n\nexport const VERSION = '4.1.2';\nexport const COMPILER_REVISION = 7;\n\nexport const REVISION_CHANGES = {\n  1: '<= 1.0.rc.2', // 1.0.rc.2 is actually rev2 but doesn't report it\n  2: '== 1.0.0-rc.3',\n  3: '== 1.0.0-rc.4',\n  4: '== 1.x.x',\n  5: '== 2.0.0-alpha.x',\n  6: '>= 2.0.0-beta.1',\n  7: '>= 4.0.0'\n};\n\nconst objectType = '[object Object]';\n\nexport function HandlebarsEnvironment(helpers, partials, decorators) {\n  this.helpers = helpers || {};\n  this.partials = partials || {};\n  this.decorators = decorators || {};\n\n  registerDefaultHelpers(this);\n  registerDefaultDecorators(this);\n}\n\nHandlebarsEnvironment.prototype = {\n  constructor: HandlebarsEnvironment,\n\n  logger: logger,\n  log: logger.log,\n\n  registerHelper: function(name, fn) {\n    if (toString.call(name) === objectType) {\n      if (fn) { throw new Exception('Arg not supported with multiple helpers'); }\n      extend(this.helpers, name);\n    } else {\n      this.helpers[name] = fn;\n    }\n  },\n  unregisterHelper: function(name) {\n    delete this.helpers[name];\n  },\n\n  registerPartial: function(name, partial) {\n    if (toString.call(name) === objectType) {\n      extend(this.partials, name);\n    } else {\n      if (typeof partial === 'undefined') {\n        throw new Exception(`Attempting to register a partial called \"${name}\" as undefined`);\n      }\n      this.partials[name] = partial;\n    }\n  },\n  unregisterPartial: function(name) {\n    delete this.partials[name];\n  },\n\n  registerDecorator: function(name, fn) {\n    if (toString.call(name) === objectType) {\n      if (fn) { throw new Exception('Arg not supported with multiple decorators'); }\n      extend(this.decorators, name);\n    } else {\n      this.decorators[name] = fn;\n    }\n  },\n  unregisterDecorator: function(name) {\n    delete this.decorators[name];\n  }\n};\n\nexport let log = logger.log;\n\nexport {createFrame, logger};\n","let AST = {\n  // Public API used to evaluate derived attributes regarding AST nodes\n  helpers: {\n    // a mustache is definitely a helper if:\n    // * it is an eligible helper, and\n    // * it has at least one parameter or hash segment\n    helperExpression: function(node) {\n      return (node.type === 'SubExpression')\n          || ((node.type === 'MustacheStatement' || node.type === 'BlockStatement')\n            && !!((node.params && node.params.length) || node.hash));\n    },\n\n    scopedId: function(path) {\n      return (/^\\.|this\\b/).test(path.original);\n    },\n\n    // an ID is simple if it only has one part, and that part is not\n    // `..` or `this`.\n    simpleId: function(path) {\n      return path.parts.length === 1 && !AST.helpers.scopedId(path) && !path.depth;\n    }\n  }\n};\n\n\n// Must be exported as an object rather than the root of the module as the jison lexer\n// must modify the object to operate properly.\nexport default AST;\n","import parser from './parser';\nimport WhitespaceControl from './whitespace-control';\nimport * as Helpers from './helpers';\nimport { extend } from '../utils';\n\nexport { parser };\n\nlet yy = {};\nextend(yy, Helpers);\n\nexport function parse(input, options) {\n  // Just return if an already-compiled AST was passed in.\n  if (input.type === 'Program') { return input; }\n\n  parser.yy = yy;\n\n  // Altering the shared object here, but this is ok as parser is a sync operation\n  yy.locInfo = function(locInfo) {\n    return new yy.SourceLocation(options && options.srcName, locInfo);\n  };\n\n  let strip = new WhitespaceControl(options);\n  return strip.accept(parser.parse(input));\n}\n","/* global define */\nimport {isArray} from '../utils';\n\nlet SourceNode;\n\ntry {\n  /* istanbul ignore next */\n  if (typeof define !== 'function' || !define.amd) {\n    // We don't support this in AMD environments. For these environments, we asusme that\n    // they are running on the browser and thus have no need for the source-map library.\n    let SourceMap = require('source-map');\n    SourceNode = SourceMap.SourceNode;\n  }\n} catch (err) {\n  /* NOP */\n}\n\n/* istanbul ignore if: tested but not covered in istanbul due to dist build  */\nif (!SourceNode) {\n  SourceNode = function(line, column, srcFile, chunks) {\n    this.src = '';\n    if (chunks) {\n      this.add(chunks);\n    }\n  };\n  /* istanbul ignore next */\n  SourceNode.prototype = {\n    add: function(chunks) {\n      if (isArray(chunks)) {\n        chunks = chunks.join('');\n      }\n      this.src += chunks;\n    },\n    prepend: function(chunks) {\n      if (isArray(chunks)) {\n        chunks = chunks.join('');\n      }\n      this.src = chunks + this.src;\n    },\n    toStringWithSourceMap: function() {\n      return {code: this.toString()};\n    },\n    toString: function() {\n      return this.src;\n    }\n  };\n}\n\n\nfunction castChunk(chunk, codeGen, loc) {\n  if (isArray(chunk)) {\n    let ret = [];\n\n    for (let i = 0, len = chunk.length; i < len; i++) {\n      ret.push(codeGen.wrap(chunk[i], loc));\n    }\n    return ret;\n  } else if (typeof chunk === 'boolean' || typeof chunk === 'number') {\n    // Handle primitives that the SourceNode will throw up on\n    return chunk + '';\n  }\n  return chunk;\n}\n\n\nfunction CodeGen(srcFile) {\n  this.srcFile = srcFile;\n  this.source = [];\n}\n\nCodeGen.prototype = {\n  isEmpty() {\n    return !this.source.length;\n  },\n  prepend: function(source, loc) {\n    this.source.unshift(this.wrap(source, loc));\n  },\n  push: function(source, loc) {\n    this.source.push(this.wrap(source, loc));\n  },\n\n  merge: function() {\n    let source = this.empty();\n    this.each(function(line) {\n      source.add(['  ', line, '\\n']);\n    });\n    return source;\n  },\n\n  each: function(iter) {\n    for (let i = 0, len = this.source.length; i < len; i++) {\n      iter(this.source[i]);\n    }\n  },\n\n  empty: function() {\n    let loc = this.currentLocation || {start: {}};\n    return new SourceNode(loc.start.line, loc.start.column, this.srcFile);\n  },\n  wrap: function(chunk, loc = this.currentLocation || {start: {}}) {\n    if (chunk instanceof SourceNode) {\n      return chunk;\n    }\n\n    chunk = castChunk(chunk, this, loc);\n\n    return new SourceNode(loc.start.line, loc.start.column, this.srcFile, chunk);\n  },\n\n  functionCall: function(fn, type, params) {\n    params = this.generateList(params);\n    return this.wrap([fn, type ? '.' + type + '(' : '(', params, ')']);\n  },\n\n  quotedString: function(str) {\n    return '\"' + (str + '')\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g, '\\\\\"')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/\\u2028/g, '\\\\u2028') // Per Ecma-262 7.3 + 7.8.4\n      .replace(/\\u2029/g, '\\\\u2029') + '\"';\n  },\n\n  objectLiteral: function(obj) {\n    let pairs = [];\n\n    for (let key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        let value = castChunk(obj[key], this);\n        if (value !== 'undefined') {\n          pairs.push([this.quotedString(key), ':', value]);\n        }\n      }\n    }\n\n    let ret = this.generateList(pairs);\n    ret.prepend('{');\n    ret.add('}');\n    return ret;\n  },\n\n\n  generateList: function(entries) {\n    let ret = this.empty();\n\n    for (let i = 0, len = entries.length; i < len; i++) {\n      if (i) {\n        ret.add(',');\n      }\n\n      ret.add(castChunk(entries[i], this));\n    }\n\n    return ret;\n  },\n\n  generateArray: function(entries) {\n    let ret = this.generateList(entries);\n    ret.prepend('[');\n    ret.add(']');\n\n    return ret;\n  }\n};\n\nexport default CodeGen;\n\n","/* eslint-disable new-cap */\n\nimport Exception from '../exception';\nimport {isArray, indexOf, extend} from '../utils';\nimport AST from './ast';\n\nconst slice = [].slice;\n\nexport function Compiler() {}\n\n// the foundHelper register will disambiguate helper lookup from finding a\n// function in a context. This is necessary for mustache compatibility, which\n// requires that context functions in blocks are evaluated by blockHelperMissing,\n// and then proceed as if the resulting value was provided to blockHelperMissing.\n\nCompiler.prototype = {\n  compiler: Compiler,\n\n  equals: function(other) {\n    let len = this.opcodes.length;\n    if (other.opcodes.length !== len) {\n      return false;\n    }\n\n    for (let i = 0; i < len; i++) {\n      let opcode = this.opcodes[i],\n          otherOpcode = other.opcodes[i];\n      if (opcode.opcode !== otherOpcode.opcode || !argEquals(opcode.args, otherOpcode.args)) {\n        return false;\n      }\n    }\n\n    // We know that length is the same between the two arrays because they are directly tied\n    // to the opcode behavior above.\n    len = this.children.length;\n    for (let i = 0; i < len; i++) {\n      if (!this.children[i].equals(other.children[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  guid: 0,\n\n  compile: function(program, options) {\n    this.sourceNode = [];\n    this.opcodes = [];\n    this.children = [];\n    this.options = options;\n    this.stringParams = options.stringParams;\n    this.trackIds = options.trackIds;\n\n    options.blockParams = options.blockParams || [];\n\n    // These changes will propagate to the other compiler components\n    let knownHelpers = options.knownHelpers;\n    options.knownHelpers = {\n      'helperMissing': true,\n      'blockHelperMissing': true,\n      'each': true,\n      'if': true,\n      'unless': true,\n      'with': true,\n      'log': true,\n      'lookup': true\n    };\n    if (knownHelpers) {\n      // the next line should use \"Object.keys\", but the code has been like this a long time and changing it, might\n      // cause backwards-compatibility issues... It's an old library...\n      // eslint-disable-next-line guard-for-in\n      for (let name in knownHelpers) {\n          this.options.knownHelpers[name] = knownHelpers[name];\n      }\n    }\n\n    return this.accept(program);\n  },\n\n  compileProgram: function(program) {\n    let childCompiler = new this.compiler(), // eslint-disable-line new-cap\n        result = childCompiler.compile(program, this.options),\n        guid = this.guid++;\n\n    this.usePartial = this.usePartial || result.usePartial;\n\n    this.children[guid] = result;\n    this.useDepths = this.useDepths || result.useDepths;\n\n    return guid;\n  },\n\n  accept: function(node) {\n    /* istanbul ignore next: Sanity code */\n    if (!this[node.type]) {\n      throw new Exception('Unknown type: ' + node.type, node);\n    }\n\n    this.sourceNode.unshift(node);\n    let ret = this[node.type](node);\n    this.sourceNode.shift();\n    return ret;\n  },\n\n  Program: function(program) {\n    this.options.blockParams.unshift(program.blockParams);\n\n    let body = program.body,\n        bodyLength = body.length;\n    for (let i = 0; i < bodyLength; i++) {\n      this.accept(body[i]);\n    }\n\n    this.options.blockParams.shift();\n\n    this.isSimple = bodyLength === 1;\n    this.blockParams = program.blockParams ? program.blockParams.length : 0;\n\n    return this;\n  },\n\n  BlockStatement: function(block) {\n    transformLiteralToPath(block);\n\n    let program = block.program,\n        inverse = block.inverse;\n\n    program = program && this.compileProgram(program);\n    inverse = inverse && this.compileProgram(inverse);\n\n    let type = this.classifySexpr(block);\n\n    if (type === 'helper') {\n      this.helperSexpr(block, program, inverse);\n    } else if (type === 'simple') {\n      this.simpleSexpr(block);\n\n      // now that the simple mustache is resolved, we need to\n      // evaluate it by executing `blockHelperMissing`\n      this.opcode('pushProgram', program);\n      this.opcode('pushProgram', inverse);\n      this.opcode('emptyHash');\n      this.opcode('blockValue', block.path.original);\n    } else {\n      this.ambiguousSexpr(block, program, inverse);\n\n      // now that the simple mustache is resolved, we need to\n      // evaluate it by executing `blockHelperMissing`\n      this.opcode('pushProgram', program);\n      this.opcode('pushProgram', inverse);\n      this.opcode('emptyHash');\n      this.opcode('ambiguousBlockValue');\n    }\n\n    this.opcode('append');\n  },\n\n  DecoratorBlock(decorator) {\n    let program = decorator.program && this.compileProgram(decorator.program);\n    let params = this.setupFullMustacheParams(decorator, program, undefined),\n        path = decorator.path;\n\n    this.useDecorators = true;\n    this.opcode('registerDecorator', params.length, path.original);\n  },\n\n  PartialStatement: function(partial) {\n    this.usePartial = true;\n\n    let program = partial.program;\n    if (program) {\n      program = this.compileProgram(partial.program);\n    }\n\n    let params = partial.params;\n    if (params.length > 1) {\n      throw new Exception('Unsupported number of partial arguments: ' + params.length, partial);\n    } else if (!params.length) {\n      if (this.options.explicitPartialContext) {\n        this.opcode('pushLiteral', 'undefined');\n      } else {\n        params.push({type: 'PathExpression', parts: [], depth: 0});\n      }\n    }\n\n    let partialName = partial.name.original,\n        isDynamic = partial.name.type === 'SubExpression';\n    if (isDynamic) {\n      this.accept(partial.name);\n    }\n\n    this.setupFullMustacheParams(partial, program, undefined, true);\n\n    let indent = partial.indent || '';\n    if (this.options.preventIndent && indent) {\n      this.opcode('appendContent', indent);\n      indent = '';\n    }\n\n    this.opcode('invokePartial', isDynamic, partialName, indent);\n    this.opcode('append');\n  },\n  PartialBlockStatement: function(partialBlock) {\n    this.PartialStatement(partialBlock);\n  },\n\n  MustacheStatement: function(mustache) {\n    this.SubExpression(mustache);\n\n    if (mustache.escaped && !this.options.noEscape) {\n      this.opcode('appendEscaped');\n    } else {\n      this.opcode('append');\n    }\n  },\n  Decorator(decorator) {\n    this.DecoratorBlock(decorator);\n  },\n\n\n  ContentStatement: function(content) {\n    if (content.value) {\n      this.opcode('appendContent', content.value);\n    }\n  },\n\n  CommentStatement: function() {},\n\n  SubExpression: function(sexpr) {\n    transformLiteralToPath(sexpr);\n    let type = this.classifySexpr(sexpr);\n\n    if (type === 'simple') {\n      this.simpleSexpr(sexpr);\n    } else if (type === 'helper') {\n      this.helperSexpr(sexpr);\n    } else {\n      this.ambiguousSexpr(sexpr);\n    }\n  },\n  ambiguousSexpr: function(sexpr, program, inverse) {\n    let path = sexpr.path,\n        name = path.parts[0],\n        isBlock = program != null || inverse != null;\n\n    this.opcode('getContext', path.depth);\n\n    this.opcode('pushProgram', program);\n    this.opcode('pushProgram', inverse);\n\n    path.strict = true;\n    this.accept(path);\n\n    this.opcode('invokeAmbiguous', name, isBlock);\n  },\n\n  simpleSexpr: function(sexpr) {\n    let path = sexpr.path;\n    path.strict = true;\n    this.accept(path);\n    this.opcode('resolvePossibleLambda');\n  },\n\n  helperSexpr: function(sexpr, program, inverse) {\n    let params = this.setupFullMustacheParams(sexpr, program, inverse),\n        path = sexpr.path,\n        name = path.parts[0];\n\n    if (this.options.knownHelpers[name]) {\n      this.opcode('invokeKnownHelper', params.length, name);\n    } else if (this.options.knownHelpersOnly) {\n      throw new Exception('You specified knownHelpersOnly, but used the unknown helper ' + name, sexpr);\n    } else {\n      path.strict = true;\n      path.falsy = true;\n\n      this.accept(path);\n      this.opcode('invokeHelper', params.length, path.original, AST.helpers.simpleId(path));\n    }\n  },\n\n  PathExpression: function(path) {\n    this.addDepth(path.depth);\n    this.opcode('getContext', path.depth);\n\n    let name = path.parts[0],\n        scoped = AST.helpers.scopedId(path),\n        blockParamId = !path.depth && !scoped && this.blockParamIndex(name);\n\n    if (blockParamId) {\n      this.opcode('lookupBlockParam', blockParamId, path.parts);\n    } else if (!name) {\n      // Context reference, i.e. `{{foo .}}` or `{{foo ..}}`\n      this.opcode('pushContext');\n    } else if (path.data) {\n      this.options.data = true;\n      this.opcode('lookupData', path.depth, path.parts, path.strict);\n    } else {\n      this.opcode('lookupOnContext', path.parts, path.falsy, path.strict, scoped);\n    }\n  },\n\n  StringLiteral: function(string) {\n    this.opcode('pushString', string.value);\n  },\n\n  NumberLiteral: function(number) {\n    this.opcode('pushLiteral', number.value);\n  },\n\n  BooleanLiteral: function(bool) {\n    this.opcode('pushLiteral', bool.value);\n  },\n\n  UndefinedLiteral: function() {\n    this.opcode('pushLiteral', 'undefined');\n  },\n\n  NullLiteral: function() {\n    this.opcode('pushLiteral', 'null');\n  },\n\n  Hash: function(hash) {\n    let pairs = hash.pairs,\n        i = 0,\n        l = pairs.length;\n\n    this.opcode('pushHash');\n\n    for (; i < l; i++) {\n      this.pushParam(pairs[i].value);\n    }\n    while (i--) {\n      this.opcode('assignToHash', pairs[i].key);\n    }\n    this.opcode('popHash');\n  },\n\n  // HELPERS\n  opcode: function(name) {\n    this.opcodes.push({ opcode: name, args: slice.call(arguments, 1), loc: this.sourceNode[0].loc });\n  },\n\n  addDepth: function(depth) {\n    if (!depth) {\n      return;\n    }\n\n    this.useDepths = true;\n  },\n\n  classifySexpr: function(sexpr) {\n    let isSimple = AST.helpers.simpleId(sexpr.path);\n\n    let isBlockParam = isSimple && !!this.blockParamIndex(sexpr.path.parts[0]);\n\n    // a mustache is an eligible helper if:\n    // * its id is simple (a single part, not `this` or `..`)\n    let isHelper = !isBlockParam && AST.helpers.helperExpression(sexpr);\n\n    // if a mustache is an eligible helper but not a definite\n    // helper, it is ambiguous, and will be resolved in a later\n    // pass or at runtime.\n    let isEligible = !isBlockParam && (isHelper || isSimple);\n\n    // if ambiguous, we can possibly resolve the ambiguity now\n    // An eligible helper is one that does not have a complex path, i.e. `this.foo`, `../foo` etc.\n    if (isEligible && !isHelper) {\n      let name = sexpr.path.parts[0],\n          options = this.options;\n\n      if (options.knownHelpers[name]) {\n        isHelper = true;\n      } else if (options.knownHelpersOnly) {\n        isEligible = false;\n      }\n    }\n\n    if (isHelper) {\n      return 'helper';\n    } else if (isEligible) {\n      return 'ambiguous';\n    } else {\n      return 'simple';\n    }\n  },\n\n  pushParams: function(params) {\n    for (let i = 0, l = params.length; i < l; i++) {\n      this.pushParam(params[i]);\n    }\n  },\n\n  pushParam: function(val) {\n    let value = val.value != null ? val.value : val.original || '';\n\n    if (this.stringParams) {\n      if (value.replace) {\n        value = value\n            .replace(/^(\\.?\\.\\/)*/g, '')\n            .replace(/\\//g, '.');\n      }\n\n      if (val.depth) {\n        this.addDepth(val.depth);\n      }\n      this.opcode('getContext', val.depth || 0);\n      this.opcode('pushStringParam', value, val.type);\n\n      if (val.type === 'SubExpression') {\n        // SubExpressions get evaluated and passed in\n        // in string params mode.\n        this.accept(val);\n      }\n    } else {\n      if (this.trackIds) {\n        let blockParamIndex;\n        if (val.parts && !AST.helpers.scopedId(val) && !val.depth) {\n           blockParamIndex = this.blockParamIndex(val.parts[0]);\n        }\n        if (blockParamIndex) {\n          let blockParamChild = val.parts.slice(1).join('.');\n          this.opcode('pushId', 'BlockParam', blockParamIndex, blockParamChild);\n        } else {\n          value = val.original || value;\n          if (value.replace) {\n            value = value\n                .replace(/^this(?:\\.|$)/, '')\n                .replace(/^\\.\\//, '')\n                .replace(/^\\.$/, '');\n          }\n\n          this.opcode('pushId', val.type, value);\n        }\n      }\n      this.accept(val);\n    }\n  },\n\n  setupFullMustacheParams: function(sexpr, program, inverse, omitEmpty) {\n    let params = sexpr.params;\n    this.pushParams(params);\n\n    this.opcode('pushProgram', program);\n    this.opcode('pushProgram', inverse);\n\n    if (sexpr.hash) {\n      this.accept(sexpr.hash);\n    } else {\n      this.opcode('emptyHash', omitEmpty);\n    }\n\n    return params;\n  },\n\n  blockParamIndex: function(name) {\n    for (let depth = 0, len = this.options.blockParams.length; depth < len; depth++) {\n      let blockParams = this.options.blockParams[depth],\n          param = blockParams && indexOf(blockParams, name);\n      if (blockParams && param >= 0) {\n        return [depth, param];\n      }\n    }\n  }\n};\n\nexport function precompile(input, options, env) {\n  if (input == null || (typeof input !== 'string' && input.type !== 'Program')) {\n    throw new Exception('You must pass a string or Handlebars AST to Handlebars.precompile. You passed ' + input);\n  }\n\n  options = options || {};\n  if (!('data' in options)) {\n    options.data = true;\n  }\n  if (options.compat) {\n    options.useDepths = true;\n  }\n\n  let ast = env.parse(input, options),\n      environment = new env.Compiler().compile(ast, options);\n  return new env.JavaScriptCompiler().compile(environment, options);\n}\n\nexport function compile(input, options = {}, env) {\n  if (input == null || (typeof input !== 'string' && input.type !== 'Program')) {\n    throw new Exception('You must pass a string or Handlebars AST to Handlebars.compile. You passed ' + input);\n  }\n\n  options = extend({}, options);\n  if (!('data' in options)) {\n    options.data = true;\n  }\n  if (options.compat) {\n    options.useDepths = true;\n  }\n\n  let compiled;\n\n  function compileInput() {\n    let ast = env.parse(input, options),\n        environment = new env.Compiler().compile(ast, options),\n        templateSpec = new env.JavaScriptCompiler().compile(environment, options, undefined, true);\n    return env.template(templateSpec);\n  }\n\n  // Template is only compiled on first use and cached after that point.\n  function ret(context, execOptions) {\n    if (!compiled) {\n      compiled = compileInput();\n    }\n    return compiled.call(this, context, execOptions);\n  }\n  ret._setup = function(setupOptions) {\n    if (!compiled) {\n      compiled = compileInput();\n    }\n    return compiled._setup(setupOptions);\n  };\n  ret._child = function(i, data, blockParams, depths) {\n    if (!compiled) {\n      compiled = compileInput();\n    }\n    return compiled._child(i, data, blockParams, depths);\n  };\n  return ret;\n}\n\nfunction argEquals(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (isArray(a) && isArray(b) && a.length === b.length) {\n    for (let i = 0; i < a.length; i++) {\n      if (!argEquals(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nfunction transformLiteralToPath(sexpr) {\n  if (!sexpr.path.parts) {\n    let literal = sexpr.path;\n    // Casting to string here to make false and 0 literal values play nicely with the rest\n    // of the system.\n    sexpr.path = {\n      type: 'PathExpression',\n      data: false,\n      depth: 0,\n      parts: [literal.original + ''],\n      original: literal.original + '',\n      loc: literal.loc\n    };\n  }\n}\n","import Exception from '../exception';\n\nfunction validateClose(open, close) {\n  close = close.path ? close.path.original : close;\n\n  if (open.path.original !== close) {\n    let errorNode = {loc: open.path.loc};\n\n    throw new Exception(open.path.original + \" doesn't match \" + close, errorNode);\n  }\n}\n\nexport function SourceLocation(source, locInfo) {\n  this.source = source;\n  this.start = {\n    line: locInfo.first_line,\n    column: locInfo.first_column\n  };\n  this.end = {\n    line: locInfo.last_line,\n    column: locInfo.last_column\n  };\n}\n\nexport function id(token) {\n  if (/^\\[.*\\]$/.test(token)) {\n    return token.substring(1, token.length - 1);\n  } else {\n    return token;\n  }\n}\n\nexport function stripFlags(open, close) {\n  return {\n    open: open.charAt(2) === '~',\n    close: close.charAt(close.length - 3) === '~'\n  };\n}\n\nexport function stripComment(comment) {\n  return comment.replace(/^\\{\\{~?!-?-?/, '')\n                .replace(/-?-?~?\\}\\}$/, '');\n}\n\nexport function preparePath(data, parts, loc) {\n  loc = this.locInfo(loc);\n\n  let original = data ? '@' : '',\n      dig = [],\n      depth = 0;\n\n  for (let i = 0, l = parts.length; i < l; i++) {\n    let part = parts[i].part,\n        // If we have [] syntax then we do not treat path references as operators,\n        // i.e. foo.[this] resolves to approximately context.foo['this']\n        isLiteral = parts[i].original !== part;\n    original += (parts[i].separator || '') + part;\n\n    if (!isLiteral && (part === '..' || part === '.' || part === 'this')) {\n      if (dig.length > 0) {\n        throw new Exception('Invalid path: ' + original, {loc});\n      } else if (part === '..') {\n        depth++;\n      }\n    } else {\n      dig.push(part);\n    }\n  }\n\n  return {\n    type: 'PathExpression',\n    data,\n    depth,\n    parts: dig,\n    original,\n    loc\n  };\n}\n\nexport function prepareMustache(path, params, hash, open, strip, locInfo) {\n  // Must use charAt to support IE pre-10\n  let escapeFlag = open.charAt(3) || open.charAt(2),\n      escaped = escapeFlag !== '{' && escapeFlag !== '&';\n\n  let decorator = (/\\*/.test(open));\n  return {\n    type: decorator ? 'Decorator' : 'MustacheStatement',\n    path,\n    params,\n    hash,\n    escaped,\n    strip,\n    loc: this.locInfo(locInfo)\n  };\n}\n\nexport function prepareRawBlock(openRawBlock, contents, close, locInfo) {\n  validateClose(openRawBlock, close);\n\n  locInfo = this.locInfo(locInfo);\n  let program = {\n    type: 'Program',\n    body: contents,\n    strip: {},\n    loc: locInfo\n  };\n\n  return {\n    type: 'BlockStatement',\n    path: openRawBlock.path,\n    params: openRawBlock.params,\n    hash: openRawBlock.hash,\n    program,\n    openStrip: {},\n    inverseStrip: {},\n    closeStrip: {},\n    loc: locInfo\n  };\n}\n\nexport function prepareBlock(openBlock, program, inverseAndProgram, close, inverted, locInfo) {\n  if (close && close.path) {\n    validateClose(openBlock, close);\n  }\n\n  let decorator = (/\\*/.test(openBlock.open));\n\n  program.blockParams = openBlock.blockParams;\n\n  let inverse,\n      inverseStrip;\n\n  if (inverseAndProgram) {\n    if (decorator) {\n      throw new Exception('Unexpected inverse block on decorator', inverseAndProgram);\n    }\n\n    if (inverseAndProgram.chain) {\n      inverseAndProgram.program.body[0].closeStrip = close.strip;\n    }\n\n    inverseStrip = inverseAndProgram.strip;\n    inverse = inverseAndProgram.program;\n  }\n\n  if (inverted) {\n    inverted = inverse;\n    inverse = program;\n    program = inverted;\n  }\n\n  return {\n    type: decorator ? 'DecoratorBlock' : 'BlockStatement',\n    path: openBlock.path,\n    params: openBlock.params,\n    hash: openBlock.hash,\n    program,\n    inverse,\n    openStrip: openBlock.strip,\n    inverseStrip,\n    closeStrip: close && close.strip,\n    loc: this.locInfo(locInfo)\n  };\n}\n\nexport function prepareProgram(statements, loc) {\n  if (!loc && statements.length) {\n    const firstLoc = statements[0].loc,\n          lastLoc = statements[statements.length - 1].loc;\n\n    /* istanbul ignore else */\n    if (firstLoc && lastLoc) {\n      loc = {\n        source: firstLoc.source,\n        start: {\n          line: firstLoc.start.line,\n          column: firstLoc.start.column\n        },\n        end: {\n          line: lastLoc.end.line,\n          column: lastLoc.end.column\n        }\n      };\n    }\n  }\n\n  return {\n    type: 'Program',\n    body: statements,\n    strip: {},\n    loc: loc\n  };\n}\n\n\nexport function preparePartialBlock(open, program, close, locInfo) {\n  validateClose(open, close);\n\n  return {\n    type: 'PartialBlockStatement',\n    name: open.path,\n    params: open.params,\n    hash: open.hash,\n    program,\n    openStrip: open.strip,\n    closeStrip: close && close.strip,\n    loc: this.locInfo(locInfo)\n  };\n}\n\n","import { COMPILER_REVISION, REVISION_CHANGES } from '../base';\nimport Exception from '../exception';\nimport {isArray} from '../utils';\nimport CodeGen from './code-gen';\n\nfunction Literal(value) {\n  this.value = value;\n}\n\nfunction JavaScriptCompiler() {}\n\nJavaScriptCompiler.prototype = {\n  // PUBLIC API: You can override these methods in a subclass to provide\n  // alternative compiled forms for name lookup and buffering semantics\n  nameLookup: function(parent, name/* , type*/) {\n    if (name === 'constructor') {\n      return ['(', parent, '.propertyIsEnumerable(\\'constructor\\') ? ', parent, '.constructor : undefined', ')'];\n    }\n    if (JavaScriptCompiler.isValidJavaScriptVariableName(name)) {\n      return [parent, '.', name];\n    } else {\n      return [parent, '[', JSON.stringify(name), ']'];\n    }\n  },\n  depthedLookup: function(name) {\n    return [this.aliasable('container.lookup'), '(depths, \"', name, '\")'];\n  },\n\n  compilerInfo: function() {\n    const revision = COMPILER_REVISION,\n          versions = REVISION_CHANGES[revision];\n    return [revision, versions];\n  },\n\n  appendToBuffer: function(source, location, explicit) {\n    // Force a source as this simplifies the merge logic.\n    if (!isArray(source)) {\n      source = [source];\n    }\n    source = this.source.wrap(source, location);\n\n    if (this.environment.isSimple) {\n      return ['return ', source, ';'];\n    } else if (explicit) {\n      // This is a case where the buffer operation occurs as a child of another\n      // construct, generally braces. We have to explicitly output these buffer\n      // operations to ensure that the emitted code goes in the correct location.\n      return ['buffer += ', source, ';'];\n    } else {\n      source.appendToBuffer = true;\n      return source;\n    }\n  },\n\n  initializeBuffer: function() {\n    return this.quotedString('');\n  },\n  // END PUBLIC API\n\n  compile: function(environment, options, context, asObject) {\n    this.environment = environment;\n    this.options = options;\n    this.stringParams = this.options.stringParams;\n    this.trackIds = this.options.trackIds;\n    this.precompile = !asObject;\n\n    this.name = this.environment.name;\n    this.isChild = !!context;\n    this.context = context || {\n      decorators: [],\n      programs: [],\n      environments: []\n    };\n\n    this.preamble();\n\n    this.stackSlot = 0;\n    this.stackVars = [];\n    this.aliases = {};\n    this.registers = { list: [] };\n    this.hashes = [];\n    this.compileStack = [];\n    this.inlineStack = [];\n    this.blockParams = [];\n\n    this.compileChildren(environment, options);\n\n    this.useDepths = this.useDepths || environment.useDepths || environment.useDecorators || this.options.compat;\n    this.useBlockParams = this.useBlockParams || environment.useBlockParams;\n\n    let opcodes = environment.opcodes,\n        opcode,\n        firstLoc,\n        i,\n        l;\n\n    for (i = 0, l = opcodes.length; i < l; i++) {\n      opcode = opcodes[i];\n\n      this.source.currentLocation = opcode.loc;\n      firstLoc = firstLoc || opcode.loc;\n      this[opcode.opcode].apply(this, opcode.args);\n    }\n\n    // Flush any trailing content that might be pending.\n    this.source.currentLocation = firstLoc;\n    this.pushSource('');\n\n    /* istanbul ignore next */\n    if (this.stackSlot || this.inlineStack.length || this.compileStack.length) {\n      throw new Exception('Compile completed with content left on stack');\n    }\n\n    if (!this.decorators.isEmpty()) {\n      this.useDecorators = true;\n\n      this.decorators.prepend('var decorators = container.decorators;\\n');\n      this.decorators.push('return fn;');\n\n      if (asObject) {\n        this.decorators = Function.apply(this, ['fn', 'props', 'container', 'depth0', 'data', 'blockParams', 'depths', this.decorators.merge()]);\n      } else {\n        this.decorators.prepend('function(fn, props, container, depth0, data, blockParams, depths) {\\n');\n        this.decorators.push('}\\n');\n        this.decorators = this.decorators.merge();\n      }\n    } else {\n      this.decorators = undefined;\n    }\n\n    let fn = this.createFunctionContext(asObject);\n    if (!this.isChild) {\n      let ret = {\n        compiler: this.compilerInfo(),\n        main: fn\n      };\n\n      if (this.decorators) {\n        ret.main_d = this.decorators; // eslint-disable-line camelcase\n        ret.useDecorators = true;\n      }\n\n      let {programs, decorators} = this.context;\n      for (i = 0, l = programs.length; i < l; i++) {\n        if (programs[i]) {\n          ret[i] = programs[i];\n          if (decorators[i]) {\n            ret[i + '_d'] = decorators[i];\n            ret.useDecorators = true;\n          }\n        }\n      }\n\n      if (this.environment.usePartial) {\n        ret.usePartial = true;\n      }\n      if (this.options.data) {\n        ret.useData = true;\n      }\n      if (this.useDepths) {\n        ret.useDepths = true;\n      }\n      if (this.useBlockParams) {\n        ret.useBlockParams = true;\n      }\n      if (this.options.compat) {\n        ret.compat = true;\n      }\n\n      if (!asObject) {\n        ret.compiler = JSON.stringify(ret.compiler);\n\n        this.source.currentLocation = {start: {line: 1, column: 0}};\n        ret = this.objectLiteral(ret);\n\n        if (options.srcName) {\n          ret = ret.toStringWithSourceMap({file: options.destName});\n          ret.map = ret.map && ret.map.toString();\n        } else {\n          ret = ret.toString();\n        }\n      } else {\n        ret.compilerOptions = this.options;\n      }\n\n      return ret;\n    } else {\n      return fn;\n    }\n  },\n\n  preamble: function() {\n    // track the last context pushed into place to allow skipping the\n    // getContext opcode when it would be a noop\n    this.lastContext = 0;\n    this.source = new CodeGen(this.options.srcName);\n    this.decorators = new CodeGen(this.options.srcName);\n  },\n\n  createFunctionContext: function(asObject) {\n    let varDeclarations = '';\n\n    let locals = this.stackVars.concat(this.registers.list);\n    if (locals.length > 0) {\n      varDeclarations += ', ' + locals.join(', ');\n    }\n\n    // Generate minimizer alias mappings\n    //\n    // When using true SourceNodes, this will update all references to the given alias\n    // as the source nodes are reused in situ. For the non-source node compilation mode,\n    // aliases will not be used, but this case is already being run on the client and\n    // we aren't concern about minimizing the template size.\n    let aliasCount = 0;\n    for (let alias in this.aliases) { // eslint-disable-line guard-for-in\n      let node = this.aliases[alias];\n\n      if (this.aliases.hasOwnProperty(alias) && node.children && node.referenceCount > 1) {\n        varDeclarations += ', alias' + (++aliasCount) + '=' + alias;\n        node.children[0] = 'alias' + aliasCount;\n      }\n    }\n\n    let params = ['container', 'depth0', 'helpers', 'partials', 'data'];\n\n    if (this.useBlockParams || this.useDepths) {\n      params.push('blockParams');\n    }\n    if (this.useDepths) {\n      params.push('depths');\n    }\n\n    // Perform a second pass over the output to merge content when possible\n    let source = this.mergeSource(varDeclarations);\n\n    if (asObject) {\n      params.push(source);\n\n      return Function.apply(this, params);\n    } else {\n      return this.source.wrap(['function(', params.join(','), ') {\\n  ', source, '}']);\n    }\n  },\n  mergeSource: function(varDeclarations) {\n    let isSimple = this.environment.isSimple,\n        appendOnly = !this.forceBuffer,\n        appendFirst,\n\n        sourceSeen,\n        bufferStart,\n        bufferEnd;\n    this.source.each((line) => {\n      if (line.appendToBuffer) {\n        if (bufferStart) {\n          line.prepend('  + ');\n        } else {\n          bufferStart = line;\n        }\n        bufferEnd = line;\n      } else {\n        if (bufferStart) {\n          if (!sourceSeen) {\n            appendFirst = true;\n          } else {\n            bufferStart.prepend('buffer += ');\n          }\n          bufferEnd.add(';');\n          bufferStart = bufferEnd = undefined;\n        }\n\n        sourceSeen = true;\n        if (!isSimple) {\n          appendOnly = false;\n        }\n      }\n    });\n\n\n    if (appendOnly) {\n      if (bufferStart) {\n        bufferStart.prepend('return ');\n        bufferEnd.add(';');\n      } else if (!sourceSeen) {\n        this.source.push('return \"\";');\n      }\n    } else {\n      varDeclarations += ', buffer = ' + (appendFirst ? '' : this.initializeBuffer());\n\n      if (bufferStart) {\n        bufferStart.prepend('return buffer + ');\n        bufferEnd.add(';');\n      } else {\n        this.source.push('return buffer;');\n      }\n    }\n\n    if (varDeclarations) {\n      this.source.prepend('var ' + varDeclarations.substring(2) + (appendFirst ? '' : ';\\n'));\n    }\n\n    return this.source.merge();\n  },\n\n  // [blockValue]\n  //\n  // On stack, before: hash, inverse, program, value\n  // On stack, after: return value of blockHelperMissing\n  //\n  // The purpose of this opcode is to take a block of the form\n  // `{{#this.foo}}...{{/this.foo}}`, resolve the value of `foo`, and\n  // replace it on the stack with the result of properly\n  // invoking blockHelperMissing.\n  blockValue: function(name) {\n    let blockHelperMissing = this.aliasable('helpers.blockHelperMissing'),\n        params = [this.contextName(0)];\n    this.setupHelperArgs(name, 0, params);\n\n    let blockName = this.popStack();\n    params.splice(1, 0, blockName);\n\n    this.push(this.source.functionCall(blockHelperMissing, 'call', params));\n  },\n\n  // [ambiguousBlockValue]\n  //\n  // On stack, before: hash, inverse, program, value\n  // Compiler value, before: lastHelper=value of last found helper, if any\n  // On stack, after, if no lastHelper: same as [blockValue]\n  // On stack, after, if lastHelper: value\n  ambiguousBlockValue: function() {\n    // We're being a bit cheeky and reusing the options value from the prior exec\n    let blockHelperMissing = this.aliasable('helpers.blockHelperMissing'),\n        params = [this.contextName(0)];\n    this.setupHelperArgs('', 0, params, true);\n\n    this.flushInline();\n\n    let current = this.topStack();\n    params.splice(1, 0, current);\n\n    this.pushSource([\n        'if (!', this.lastHelper, ') { ',\n          current, ' = ', this.source.functionCall(blockHelperMissing, 'call', params),\n        '}']);\n  },\n\n  // [appendContent]\n  //\n  // On stack, before: ...\n  // On stack, after: ...\n  //\n  // Appends the string value of `content` to the current buffer\n  appendContent: function(content) {\n    if (this.pendingContent) {\n      content = this.pendingContent + content;\n    } else {\n      this.pendingLocation = this.source.currentLocation;\n    }\n\n    this.pendingContent = content;\n  },\n\n  // [append]\n  //\n  // On stack, before: value, ...\n  // On stack, after: ...\n  //\n  // Coerces `value` to a String and appends it to the current buffer.\n  //\n  // If `value` is truthy, or 0, it is coerced into a string and appended\n  // Otherwise, the empty string is appended\n  append: function() {\n    if (this.isInline()) {\n      this.replaceStack((current) => [' != null ? ', current, ' : \"\"']);\n\n      this.pushSource(this.appendToBuffer(this.popStack()));\n    } else {\n      let local = this.popStack();\n      this.pushSource(['if (', local, ' != null) { ', this.appendToBuffer(local, undefined, true), ' }']);\n      if (this.environment.isSimple) {\n        this.pushSource(['else { ', this.appendToBuffer(\"''\", undefined, true), ' }']);\n      }\n    }\n  },\n\n  // [appendEscaped]\n  //\n  // On stack, before: value, ...\n  // On stack, after: ...\n  //\n  // Escape `value` and append it to the buffer\n  appendEscaped: function() {\n    this.pushSource(this.appendToBuffer(\n        [this.aliasable('container.escapeExpression'), '(', this.popStack(), ')']));\n  },\n\n  // [getContext]\n  //\n  // On stack, before: ...\n  // On stack, after: ...\n  // Compiler value, after: lastContext=depth\n  //\n  // Set the value of the `lastContext` compiler value to the depth\n  getContext: function(depth) {\n    this.lastContext = depth;\n  },\n\n  // [pushContext]\n  //\n  // On stack, before: ...\n  // On stack, after: currentContext, ...\n  //\n  // Pushes the value of the current context onto the stack.\n  pushContext: function() {\n    this.pushStackLiteral(this.contextName(this.lastContext));\n  },\n\n  // [lookupOnContext]\n  //\n  // On stack, before: ...\n  // On stack, after: currentContext[name], ...\n  //\n  // Looks up the value of `name` on the current context and pushes\n  // it onto the stack.\n  lookupOnContext: function(parts, falsy, strict, scoped) {\n    let i = 0;\n\n    if (!scoped && this.options.compat && !this.lastContext) {\n      // The depthed query is expected to handle the undefined logic for the root level that\n      // is implemented below, so we evaluate that directly in compat mode\n      this.push(this.depthedLookup(parts[i++]));\n    } else {\n      this.pushContext();\n    }\n\n    this.resolvePath('context', parts, i, falsy, strict);\n  },\n\n  // [lookupBlockParam]\n  //\n  // On stack, before: ...\n  // On stack, after: blockParam[name], ...\n  //\n  // Looks up the value of `parts` on the given block param and pushes\n  // it onto the stack.\n  lookupBlockParam: function(blockParamId, parts) {\n    this.useBlockParams = true;\n\n    this.push(['blockParams[', blockParamId[0], '][', blockParamId[1], ']']);\n    this.resolvePath('context', parts, 1);\n  },\n\n  // [lookupData]\n  //\n  // On stack, before: ...\n  // On stack, after: data, ...\n  //\n  // Push the data lookup operator\n  lookupData: function(depth, parts, strict) {\n    if (!depth) {\n      this.pushStackLiteral('data');\n    } else {\n      this.pushStackLiteral('container.data(data, ' + depth + ')');\n    }\n\n    this.resolvePath('data', parts, 0, true, strict);\n  },\n\n  resolvePath: function(type, parts, i, falsy, strict) {\n    if (this.options.strict || this.options.assumeObjects) {\n      this.push(strictLookup(this.options.strict && strict, this, parts, type));\n      return;\n    }\n\n    let len = parts.length;\n    for (; i < len; i++) {\n      /* eslint-disable no-loop-func */\n      this.replaceStack((current) => {\n        let lookup = this.nameLookup(current, parts[i], type);\n        // We want to ensure that zero and false are handled properly if the context (falsy flag)\n        // needs to have the special handling for these values.\n        if (!falsy) {\n          return [' != null ? ', lookup, ' : ', current];\n        } else {\n          // Otherwise we can use generic falsy handling\n          return [' && ', lookup];\n        }\n      });\n      /* eslint-enable no-loop-func */\n    }\n  },\n\n  // [resolvePossibleLambda]\n  //\n  // On stack, before: value, ...\n  // On stack, after: resolved value, ...\n  //\n  // If the `value` is a lambda, replace it on the stack by\n  // the return value of the lambda\n  resolvePossibleLambda: function() {\n    this.push([this.aliasable('container.lambda'), '(', this.popStack(), ', ', this.contextName(0), ')']);\n  },\n\n  // [pushStringParam]\n  //\n  // On stack, before: ...\n  // On stack, after: string, currentContext, ...\n  //\n  // This opcode is designed for use in string mode, which\n  // provides the string value of a parameter along with its\n  // depth rather than resolving it immediately.\n  pushStringParam: function(string, type) {\n    this.pushContext();\n    this.pushString(type);\n\n    // If it's a subexpression, the string result\n    // will be pushed after this opcode.\n    if (type !== 'SubExpression') {\n      if (typeof string === 'string') {\n        this.pushString(string);\n      } else {\n        this.pushStackLiteral(string);\n      }\n    }\n  },\n\n  emptyHash: function(omitEmpty) {\n    if (this.trackIds) {\n      this.push('{}'); // hashIds\n    }\n    if (this.stringParams) {\n      this.push('{}'); // hashContexts\n      this.push('{}'); // hashTypes\n    }\n    this.pushStackLiteral(omitEmpty ? 'undefined' : '{}');\n  },\n  pushHash: function() {\n    if (this.hash) {\n      this.hashes.push(this.hash);\n    }\n    this.hash = {values: [], types: [], contexts: [], ids: []};\n  },\n  popHash: function() {\n    let hash = this.hash;\n    this.hash = this.hashes.pop();\n\n    if (this.trackIds) {\n      this.push(this.objectLiteral(hash.ids));\n    }\n    if (this.stringParams) {\n      this.push(this.objectLiteral(hash.contexts));\n      this.push(this.objectLiteral(hash.types));\n    }\n\n    this.push(this.objectLiteral(hash.values));\n  },\n\n  // [pushString]\n  //\n  // On stack, before: ...\n  // On stack, after: quotedString(string), ...\n  //\n  // Push a quoted version of `string` onto the stack\n  pushString: function(string) {\n    this.pushStackLiteral(this.quotedString(string));\n  },\n\n  // [pushLiteral]\n  //\n  // On stack, before: ...\n  // On stack, after: value, ...\n  //\n  // Pushes a value onto the stack. This operation prevents\n  // the compiler from creating a temporary variable to hold\n  // it.\n  pushLiteral: function(value) {\n    this.pushStackLiteral(value);\n  },\n\n  // [pushProgram]\n  //\n  // On stack, before: ...\n  // On stack, after: program(guid), ...\n  //\n  // Push a program expression onto the stack. This takes\n  // a compile-time guid and converts it into a runtime-accessible\n  // expression.\n  pushProgram: function(guid) {\n    if (guid != null) {\n      this.pushStackLiteral(this.programExpression(guid));\n    } else {\n      this.pushStackLiteral(null);\n    }\n  },\n\n  // [registerDecorator]\n  //\n  // On stack, before: hash, program, params..., ...\n  // On stack, after: ...\n  //\n  // Pops off the decorator's parameters, invokes the decorator,\n  // and inserts the decorator into the decorators list.\n  registerDecorator(paramSize, name) {\n    let foundDecorator = this.nameLookup('decorators', name, 'decorator'),\n        options = this.setupHelperArgs(name, paramSize);\n\n    this.decorators.push([\n      'fn = ',\n      this.decorators.functionCall(foundDecorator, '', ['fn', 'props', 'container', options]),\n      ' || fn;'\n    ]);\n  },\n\n  // [invokeHelper]\n  //\n  // On stack, before: hash, inverse, program, params..., ...\n  // On stack, after: result of helper invocation\n  //\n  // Pops off the helper's parameters, invokes the helper,\n  // and pushes the helper's return value onto the stack.\n  //\n  // If the helper is not found, `helperMissing` is called.\n  invokeHelper: function(paramSize, name, isSimple) {\n    let nonHelper = this.popStack(),\n        helper = this.setupHelper(paramSize, name),\n        simple = isSimple ? [helper.name, ' || '] : '';\n\n    let lookup = ['('].concat(simple, nonHelper);\n    if (!this.options.strict) {\n      lookup.push(' || ', this.aliasable('helpers.helperMissing'));\n    }\n    lookup.push(')');\n\n    this.push(this.source.functionCall(lookup, 'call', helper.callParams));\n  },\n\n  // [invokeKnownHelper]\n  //\n  // On stack, before: hash, inverse, program, params..., ...\n  // On stack, after: result of helper invocation\n  //\n  // This operation is used when the helper is known to exist,\n  // so a `helperMissing` fallback is not required.\n  invokeKnownHelper: function(paramSize, name) {\n    let helper = this.setupHelper(paramSize, name);\n    this.push(this.source.functionCall(helper.name, 'call', helper.callParams));\n  },\n\n  // [invokeAmbiguous]\n  //\n  // On stack, before: hash, inverse, program, params..., ...\n  // On stack, after: result of disambiguation\n  //\n  // This operation is used when an expression like `{{foo}}`\n  // is provided, but we don't know at compile-time whether it\n  // is a helper or a path.\n  //\n  // This operation emits more code than the other options,\n  // and can be avoided by passing the `knownHelpers` and\n  // `knownHelpersOnly` flags at compile-time.\n  invokeAmbiguous: function(name, helperCall) {\n    this.useRegister('helper');\n\n    let nonHelper = this.popStack();\n\n    this.emptyHash();\n    let helper = this.setupHelper(0, name, helperCall);\n\n    let helperName = this.lastHelper = this.nameLookup('helpers', name, 'helper');\n\n    let lookup = ['(', '(helper = ', helperName, ' || ', nonHelper, ')'];\n    if (!this.options.strict) {\n      lookup[0] = '(helper = ';\n      lookup.push(\n        ' != null ? helper : ',\n        this.aliasable('helpers.helperMissing')\n      );\n    }\n\n    this.push([\n        '(', lookup,\n        (helper.paramsInit ? ['),(', helper.paramsInit] : []), '),',\n        '(typeof helper === ', this.aliasable('\"function\"'), ' ? ',\n        this.source.functionCall('helper', 'call', helper.callParams), ' : helper))'\n    ]);\n  },\n\n  // [invokePartial]\n  //\n  // On stack, before: context, ...\n  // On stack after: result of partial invocation\n  //\n  // This operation pops off a context, invokes a partial with that context,\n  // and pushes the result of the invocation back.\n  invokePartial: function(isDynamic, name, indent) {\n    let params = [],\n        options = this.setupParams(name, 1, params);\n\n    if (isDynamic) {\n      name = this.popStack();\n      delete options.name;\n    }\n\n    if (indent) {\n      options.indent = JSON.stringify(indent);\n    }\n    options.helpers = 'helpers';\n    options.partials = 'partials';\n    options.decorators = 'container.decorators';\n\n    if (!isDynamic) {\n      params.unshift(this.nameLookup('partials', name, 'partial'));\n    } else {\n      params.unshift(name);\n    }\n\n    if (this.options.compat) {\n      options.depths = 'depths';\n    }\n    options = this.objectLiteral(options);\n    params.push(options);\n\n    this.push(this.source.functionCall('container.invokePartial', '', params));\n  },\n\n  // [assignToHash]\n  //\n  // On stack, before: value, ..., hash, ...\n  // On stack, after: ..., hash, ...\n  //\n  // Pops a value off the stack and assigns it to the current hash\n  assignToHash: function(key) {\n    let value = this.popStack(),\n        context,\n        type,\n        id;\n\n    if (this.trackIds) {\n      id = this.popStack();\n    }\n    if (this.stringParams) {\n      type = this.popStack();\n      context = this.popStack();\n    }\n\n    let hash = this.hash;\n    if (context) {\n      hash.contexts[key] = context;\n    }\n    if (type) {\n      hash.types[key] = type;\n    }\n    if (id) {\n      hash.ids[key] = id;\n    }\n    hash.values[key] = value;\n  },\n\n  pushId: function(type, name, child) {\n    if (type === 'BlockParam') {\n      this.pushStackLiteral(\n          'blockParams[' + name[0] + '].path[' + name[1] + ']'\n          + (child ? ' + ' + JSON.stringify('.' + child) : ''));\n    } else if (type === 'PathExpression') {\n      this.pushString(name);\n    } else if (type === 'SubExpression') {\n      this.pushStackLiteral('true');\n    } else {\n      this.pushStackLiteral('null');\n    }\n  },\n\n  // HELPERS\n\n  compiler: JavaScriptCompiler,\n\n  compileChildren: function(environment, options) {\n    let children = environment.children, child, compiler;\n\n    for (let i = 0, l = children.length; i < l; i++) {\n      child = children[i];\n      compiler = new this.compiler(); // eslint-disable-line new-cap\n\n      let existing = this.matchExistingProgram(child);\n\n      if (existing == null) {\n        this.context.programs.push(''); // Placeholder to prevent name conflicts for nested children\n        let index = this.context.programs.length;\n        child.index = index;\n        child.name = 'program' + index;\n        this.context.programs[index] = compiler.compile(child, options, this.context, !this.precompile);\n        this.context.decorators[index] = compiler.decorators;\n        this.context.environments[index] = child;\n\n        this.useDepths = this.useDepths || compiler.useDepths;\n        this.useBlockParams = this.useBlockParams || compiler.useBlockParams;\n        child.useDepths = this.useDepths;\n        child.useBlockParams = this.useBlockParams;\n      } else {\n        child.index = existing.index;\n        child.name = 'program' + existing.index;\n\n        this.useDepths = this.useDepths || existing.useDepths;\n        this.useBlockParams = this.useBlockParams || existing.useBlockParams;\n      }\n    }\n  },\n  matchExistingProgram: function(child) {\n    for (let i = 0, len = this.context.environments.length; i < len; i++) {\n      let environment = this.context.environments[i];\n      if (environment && environment.equals(child)) {\n        return environment;\n      }\n    }\n  },\n\n  programExpression: function(guid) {\n    let child = this.environment.children[guid],\n        programParams = [child.index, 'data', child.blockParams];\n\n    if (this.useBlockParams || this.useDepths) {\n      programParams.push('blockParams');\n    }\n    if (this.useDepths) {\n      programParams.push('depths');\n    }\n\n    return 'container.program(' + programParams.join(', ') + ')';\n  },\n\n  useRegister: function(name) {\n    if (!this.registers[name]) {\n      this.registers[name] = true;\n      this.registers.list.push(name);\n    }\n  },\n\n  push: function(expr) {\n    if (!(expr instanceof Literal)) {\n      expr = this.source.wrap(expr);\n    }\n\n    this.inlineStack.push(expr);\n    return expr;\n  },\n\n  pushStackLiteral: function(item) {\n    this.push(new Literal(item));\n  },\n\n  pushSource: function(source) {\n    if (this.pendingContent) {\n      this.source.push(\n          this.appendToBuffer(this.source.quotedString(this.pendingContent), this.pendingLocation));\n      this.pendingContent = undefined;\n    }\n\n    if (source) {\n      this.source.push(source);\n    }\n  },\n\n  replaceStack: function(callback) {\n    let prefix = ['('],\n        stack,\n        createdStack,\n        usedLiteral;\n\n    /* istanbul ignore next */\n    if (!this.isInline()) {\n      throw new Exception('replaceStack on non-inline');\n    }\n\n    // We want to merge the inline statement into the replacement statement via ','\n    let top = this.popStack(true);\n\n    if (top instanceof Literal) {\n      // Literals do not need to be inlined\n      stack = [top.value];\n      prefix = ['(', stack];\n      usedLiteral = true;\n    } else {\n      // Get or create the current stack name for use by the inline\n      createdStack = true;\n      let name = this.incrStack();\n\n      prefix = ['((', this.push(name), ' = ', top, ')'];\n      stack = this.topStack();\n    }\n\n    let item = callback.call(this, stack);\n\n    if (!usedLiteral) {\n      this.popStack();\n    }\n    if (createdStack) {\n      this.stackSlot--;\n    }\n    this.push(prefix.concat(item, ')'));\n  },\n\n  incrStack: function() {\n    this.stackSlot++;\n    if (this.stackSlot > this.stackVars.length) { this.stackVars.push('stack' + this.stackSlot); }\n    return this.topStackName();\n  },\n  topStackName: function() {\n    return 'stack' + this.stackSlot;\n  },\n  flushInline: function() {\n    let inlineStack = this.inlineStack;\n    this.inlineStack = [];\n    for (let i = 0, len = inlineStack.length; i < len; i++) {\n      let entry = inlineStack[i];\n      /* istanbul ignore if */\n      if (entry instanceof Literal) {\n        this.compileStack.push(entry);\n      } else {\n        let stack = this.incrStack();\n        this.pushSource([stack, ' = ', entry, ';']);\n        this.compileStack.push(stack);\n      }\n    }\n  },\n  isInline: function() {\n    return this.inlineStack.length;\n  },\n\n  popStack: function(wrapped) {\n    let inline = this.isInline(),\n        item = (inline ? this.inlineStack : this.compileStack).pop();\n\n    if (!wrapped && (item instanceof Literal)) {\n      return item.value;\n    } else {\n      if (!inline) {\n        /* istanbul ignore next */\n        if (!this.stackSlot) {\n          throw new Exception('Invalid stack pop');\n        }\n        this.stackSlot--;\n      }\n      return item;\n    }\n  },\n\n  topStack: function() {\n    let stack = (this.isInline() ? this.inlineStack : this.compileStack),\n        item = stack[stack.length - 1];\n\n    /* istanbul ignore if */\n    if (item instanceof Literal) {\n      return item.value;\n    } else {\n      return item;\n    }\n  },\n\n  contextName: function(context) {\n    if (this.useDepths && context) {\n      return 'depths[' + context + ']';\n    } else {\n      return 'depth' + context;\n    }\n  },\n\n  quotedString: function(str) {\n    return this.source.quotedString(str);\n  },\n\n  objectLiteral: function(obj) {\n    return this.source.objectLiteral(obj);\n  },\n\n  aliasable: function(name) {\n    let ret = this.aliases[name];\n    if (ret) {\n      ret.referenceCount++;\n      return ret;\n    }\n\n    ret = this.aliases[name] = this.source.wrap(name);\n    ret.aliasable = true;\n    ret.referenceCount = 1;\n\n    return ret;\n  },\n\n  setupHelper: function(paramSize, name, blockHelper) {\n    let params = [],\n        paramsInit = this.setupHelperArgs(name, paramSize, params, blockHelper);\n    let foundHelper = this.nameLookup('helpers', name, 'helper'),\n        callContext = this.aliasable(`${this.contextName(0)} != null ? ${this.contextName(0)} : (container.nullContext || {})`);\n\n    return {\n      params: params,\n      paramsInit: paramsInit,\n      name: foundHelper,\n      callParams: [callContext].concat(params)\n    };\n  },\n\n  setupParams: function(helper, paramSize, params) {\n    let options = {},\n        contexts = [],\n        types = [],\n        ids = [],\n        objectArgs = !params,\n        param;\n\n    if (objectArgs) {\n      params = [];\n    }\n\n    options.name = this.quotedString(helper);\n    options.hash = this.popStack();\n\n    if (this.trackIds) {\n      options.hashIds = this.popStack();\n    }\n    if (this.stringParams) {\n      options.hashTypes = this.popStack();\n      options.hashContexts = this.popStack();\n    }\n\n    let inverse = this.popStack(),\n        program = this.popStack();\n\n    // Avoid setting fn and inverse if neither are set. This allows\n    // helpers to do a check for `if (options.fn)`\n    if (program || inverse) {\n      options.fn = program || 'container.noop';\n      options.inverse = inverse || 'container.noop';\n    }\n\n    // The parameters go on to the stack in order (making sure that they are evaluated in order)\n    // so we need to pop them off the stack in reverse order\n    let i = paramSize;\n    while (i--) {\n      param = this.popStack();\n      params[i] = param;\n\n      if (this.trackIds) {\n        ids[i] = this.popStack();\n      }\n      if (this.stringParams) {\n        types[i] = this.popStack();\n        contexts[i] = this.popStack();\n      }\n    }\n\n    if (objectArgs) {\n      options.args = this.source.generateArray(params);\n    }\n\n    if (this.trackIds) {\n      options.ids = this.source.generateArray(ids);\n    }\n    if (this.stringParams) {\n      options.types = this.source.generateArray(types);\n      options.contexts = this.source.generateArray(contexts);\n    }\n\n    if (this.options.data) {\n      options.data = 'data';\n    }\n    if (this.useBlockParams) {\n      options.blockParams = 'blockParams';\n    }\n    return options;\n  },\n\n  setupHelperArgs: function(helper, paramSize, params, useRegister) {\n    let options = this.setupParams(helper, paramSize, params);\n    options = this.objectLiteral(options);\n    if (useRegister) {\n      this.useRegister('options');\n      params.push('options');\n      return ['options=', options];\n    } else if (params) {\n      params.push(options);\n      return '';\n    } else {\n      return options;\n    }\n  }\n};\n\n\n(function() {\n  const reservedWords = (\n    'break else new var' +\n    ' case finally return void' +\n    ' catch for switch while' +\n    ' continue function this with' +\n    ' default if throw' +\n    ' delete in try' +\n    ' do instanceof typeof' +\n    ' abstract enum int short' +\n    ' boolean export interface static' +\n    ' byte extends long super' +\n    ' char final native synchronized' +\n    ' class float package throws' +\n    ' const goto private transient' +\n    ' debugger implements protected volatile' +\n    ' double import public let yield await' +\n    ' null true false'\n  ).split(' ');\n\n  const compilerWords = JavaScriptCompiler.RESERVED_WORDS = {};\n\n  for (let i = 0, l = reservedWords.length; i < l; i++) {\n    compilerWords[reservedWords[i]] = true;\n  }\n}());\n\nJavaScriptCompiler.isValidJavaScriptVariableName = function(name) {\n  return !JavaScriptCompiler.RESERVED_WORDS[name] && (/^[a-zA-Z_$][0-9a-zA-Z_$]*$/).test(name);\n};\n\nfunction strictLookup(requireTerminal, compiler, parts, type) {\n  let stack = compiler.popStack(),\n      i = 0,\n      len = parts.length;\n  if (requireTerminal) {\n    len--;\n  }\n\n  for (; i < len; i++) {\n    stack = compiler.nameLookup(stack, parts[i], type);\n  }\n\n  if (requireTerminal) {\n    return [compiler.aliasable('container.strict'), '(', stack, ', ', compiler.quotedString(parts[i]), ')'];\n  } else {\n    return stack;\n  }\n}\n\nexport default JavaScriptCompiler;\n","// File ignored in coverage tests via setting in .istanbul.yml\n/* Jison generated parser */\nvar handlebars = (function(){\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"root\":3,\"program\":4,\"EOF\":5,\"program_repetition0\":6,\"statement\":7,\"mustache\":8,\"block\":9,\"rawBlock\":10,\"partial\":11,\"partialBlock\":12,\"content\":13,\"COMMENT\":14,\"CONTENT\":15,\"openRawBlock\":16,\"rawBlock_repetition_plus0\":17,\"END_RAW_BLOCK\":18,\"OPEN_RAW_BLOCK\":19,\"helperName\":20,\"openRawBlock_repetition0\":21,\"openRawBlock_option0\":22,\"CLOSE_RAW_BLOCK\":23,\"openBlock\":24,\"block_option0\":25,\"closeBlock\":26,\"openInverse\":27,\"block_option1\":28,\"OPEN_BLOCK\":29,\"openBlock_repetition0\":30,\"openBlock_option0\":31,\"openBlock_option1\":32,\"CLOSE\":33,\"OPEN_INVERSE\":34,\"openInverse_repetition0\":35,\"openInverse_option0\":36,\"openInverse_option1\":37,\"openInverseChain\":38,\"OPEN_INVERSE_CHAIN\":39,\"openInverseChain_repetition0\":40,\"openInverseChain_option0\":41,\"openInverseChain_option1\":42,\"inverseAndProgram\":43,\"INVERSE\":44,\"inverseChain\":45,\"inverseChain_option0\":46,\"OPEN_ENDBLOCK\":47,\"OPEN\":48,\"mustache_repetition0\":49,\"mustache_option0\":50,\"OPEN_UNESCAPED\":51,\"mustache_repetition1\":52,\"mustache_option1\":53,\"CLOSE_UNESCAPED\":54,\"OPEN_PARTIAL\":55,\"partialName\":56,\"partial_repetition0\":57,\"partial_option0\":58,\"openPartialBlock\":59,\"OPEN_PARTIAL_BLOCK\":60,\"openPartialBlock_repetition0\":61,\"openPartialBlock_option0\":62,\"param\":63,\"sexpr\":64,\"OPEN_SEXPR\":65,\"sexpr_repetition0\":66,\"sexpr_option0\":67,\"CLOSE_SEXPR\":68,\"hash\":69,\"hash_repetition_plus0\":70,\"hashSegment\":71,\"ID\":72,\"EQUALS\":73,\"blockParams\":74,\"OPEN_BLOCK_PARAMS\":75,\"blockParams_repetition_plus0\":76,\"CLOSE_BLOCK_PARAMS\":77,\"path\":78,\"dataName\":79,\"STRING\":80,\"NUMBER\":81,\"BOOLEAN\":82,\"UNDEFINED\":83,\"NULL\":84,\"DATA\":85,\"pathSegments\":86,\"SEP\":87,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",14:\"COMMENT\",15:\"CONTENT\",18:\"END_RAW_BLOCK\",19:\"OPEN_RAW_BLOCK\",23:\"CLOSE_RAW_BLOCK\",29:\"OPEN_BLOCK\",33:\"CLOSE\",34:\"OPEN_INVERSE\",39:\"OPEN_INVERSE_CHAIN\",44:\"INVERSE\",47:\"OPEN_ENDBLOCK\",48:\"OPEN\",51:\"OPEN_UNESCAPED\",54:\"CLOSE_UNESCAPED\",55:\"OPEN_PARTIAL\",60:\"OPEN_PARTIAL_BLOCK\",65:\"OPEN_SEXPR\",68:\"CLOSE_SEXPR\",72:\"ID\",73:\"EQUALS\",75:\"OPEN_BLOCK_PARAMS\",77:\"CLOSE_BLOCK_PARAMS\",80:\"STRING\",81:\"NUMBER\",82:\"BOOLEAN\",83:\"UNDEFINED\",84:\"NULL\",85:\"DATA\",87:\"SEP\"},\nproductions_: [0,[3,2],[4,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[13,1],[10,3],[16,5],[9,4],[9,4],[24,6],[27,6],[38,6],[43,2],[45,3],[45,1],[26,3],[8,5],[8,5],[11,5],[12,3],[59,5],[63,1],[63,1],[64,5],[69,1],[71,3],[74,3],[20,1],[20,1],[20,1],[20,1],[20,1],[20,1],[20,1],[56,1],[56,1],[79,2],[78,1],[86,3],[86,1],[6,0],[6,2],[17,1],[17,2],[21,0],[21,2],[22,0],[22,1],[25,0],[25,1],[28,0],[28,1],[30,0],[30,2],[31,0],[31,1],[32,0],[32,1],[35,0],[35,2],[36,0],[36,1],[37,0],[37,1],[40,0],[40,2],[41,0],[41,1],[42,0],[42,1],[46,0],[46,1],[49,0],[49,2],[50,0],[50,1],[52,0],[52,2],[53,0],[53,1],[57,0],[57,2],[58,0],[58,1],[61,0],[61,2],[62,0],[62,1],[66,0],[66,2],[67,0],[67,1],[70,1],[70,2],[76,1],[76,2]],\nperformAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$\n) {\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1: return $$[$0-1]; \nbreak;\ncase 2:this.$ = yy.prepareProgram($$[$0]);\nbreak;\ncase 3:this.$ = $$[$0];\nbreak;\ncase 4:this.$ = $$[$0];\nbreak;\ncase 5:this.$ = $$[$0];\nbreak;\ncase 6:this.$ = $$[$0];\nbreak;\ncase 7:this.$ = $$[$0];\nbreak;\ncase 8:this.$ = $$[$0];\nbreak;\ncase 9:\n    this.$ = {\n      type: 'CommentStatement',\n      value: yy.stripComment($$[$0]),\n      strip: yy.stripFlags($$[$0], $$[$0]),\n      loc: yy.locInfo(this._$)\n    };\n  \nbreak;\ncase 10:\n    this.$ = {\n      type: 'ContentStatement',\n      original: $$[$0],\n      value: $$[$0],\n      loc: yy.locInfo(this._$)\n    };\n  \nbreak;\ncase 11:this.$ = yy.prepareRawBlock($$[$0-2], $$[$0-1], $$[$0], this._$);\nbreak;\ncase 12:this.$ = { path: $$[$0-3], params: $$[$0-2], hash: $$[$0-1] };\nbreak;\ncase 13:this.$ = yy.prepareBlock($$[$0-3], $$[$0-2], $$[$0-1], $$[$0], false, this._$);\nbreak;\ncase 14:this.$ = yy.prepareBlock($$[$0-3], $$[$0-2], $$[$0-1], $$[$0], true, this._$);\nbreak;\ncase 15:this.$ = { open: $$[$0-5], path: $$[$0-4], params: $$[$0-3], hash: $$[$0-2], blockParams: $$[$0-1], strip: yy.stripFlags($$[$0-5], $$[$0]) };\nbreak;\ncase 16:this.$ = { path: $$[$0-4], params: $$[$0-3], hash: $$[$0-2], blockParams: $$[$0-1], strip: yy.stripFlags($$[$0-5], $$[$0]) };\nbreak;\ncase 17:this.$ = { path: $$[$0-4], params: $$[$0-3], hash: $$[$0-2], blockParams: $$[$0-1], strip: yy.stripFlags($$[$0-5], $$[$0]) };\nbreak;\ncase 18:this.$ = { strip: yy.stripFlags($$[$0-1], $$[$0-1]), program: $$[$0] };\nbreak;\ncase 19:\n    var inverse = yy.prepareBlock($$[$0-2], $$[$0-1], $$[$0], $$[$0], false, this._$),\n        program = yy.prepareProgram([inverse], $$[$0-1].loc);\n    program.chained = true;\n\n    this.$ = { strip: $$[$0-2].strip, program: program, chain: true };\n  \nbreak;\ncase 20:this.$ = $$[$0];\nbreak;\ncase 21:this.$ = {path: $$[$0-1], strip: yy.stripFlags($$[$0-2], $$[$0])};\nbreak;\ncase 22:this.$ = yy.prepareMustache($$[$0-3], $$[$0-2], $$[$0-1], $$[$0-4], yy.stripFlags($$[$0-4], $$[$0]), this._$);\nbreak;\ncase 23:this.$ = yy.prepareMustache($$[$0-3], $$[$0-2], $$[$0-1], $$[$0-4], yy.stripFlags($$[$0-4], $$[$0]), this._$);\nbreak;\ncase 24:\n    this.$ = {\n      type: 'PartialStatement',\n      name: $$[$0-3],\n      params: $$[$0-2],\n      hash: $$[$0-1],\n      indent: '',\n      strip: yy.stripFlags($$[$0-4], $$[$0]),\n      loc: yy.locInfo(this._$)\n    };\n  \nbreak;\ncase 25:this.$ = yy.preparePartialBlock($$[$0-2], $$[$0-1], $$[$0], this._$);\nbreak;\ncase 26:this.$ = { path: $$[$0-3], params: $$[$0-2], hash: $$[$0-1], strip: yy.stripFlags($$[$0-4], $$[$0]) };\nbreak;\ncase 27:this.$ = $$[$0];\nbreak;\ncase 28:this.$ = $$[$0];\nbreak;\ncase 29:\n    this.$ = {\n      type: 'SubExpression',\n      path: $$[$0-3],\n      params: $$[$0-2],\n      hash: $$[$0-1],\n      loc: yy.locInfo(this._$)\n    };\n  \nbreak;\ncase 30:this.$ = {type: 'Hash', pairs: $$[$0], loc: yy.locInfo(this._$)};\nbreak;\ncase 31:this.$ = {type: 'HashPair', key: yy.id($$[$0-2]), value: $$[$0], loc: yy.locInfo(this._$)};\nbreak;\ncase 32:this.$ = yy.id($$[$0-1]);\nbreak;\ncase 33:this.$ = $$[$0];\nbreak;\ncase 34:this.$ = $$[$0];\nbreak;\ncase 35:this.$ = {type: 'StringLiteral', value: $$[$0], original: $$[$0], loc: yy.locInfo(this._$)};\nbreak;\ncase 36:this.$ = {type: 'NumberLiteral', value: Number($$[$0]), original: Number($$[$0]), loc: yy.locInfo(this._$)};\nbreak;\ncase 37:this.$ = {type: 'BooleanLiteral', value: $$[$0] === 'true', original: $$[$0] === 'true', loc: yy.locInfo(this._$)};\nbreak;\ncase 38:this.$ = {type: 'UndefinedLiteral', original: undefined, value: undefined, loc: yy.locInfo(this._$)};\nbreak;\ncase 39:this.$ = {type: 'NullLiteral', original: null, value: null, loc: yy.locInfo(this._$)};\nbreak;\ncase 40:this.$ = $$[$0];\nbreak;\ncase 41:this.$ = $$[$0];\nbreak;\ncase 42:this.$ = yy.preparePath(true, $$[$0], this._$);\nbreak;\ncase 43:this.$ = yy.preparePath(false, $$[$0], this._$);\nbreak;\ncase 44: $$[$0-2].push({part: yy.id($$[$0]), original: $$[$0], separator: $$[$0-1]}); this.$ = $$[$0-2]; \nbreak;\ncase 45:this.$ = [{part: yy.id($$[$0]), original: $$[$0]}];\nbreak;\ncase 46:this.$ = [];\nbreak;\ncase 47:$$[$0-1].push($$[$0]);\nbreak;\ncase 48:this.$ = [$$[$0]];\nbreak;\ncase 49:$$[$0-1].push($$[$0]);\nbreak;\ncase 50:this.$ = [];\nbreak;\ncase 51:$$[$0-1].push($$[$0]);\nbreak;\ncase 58:this.$ = [];\nbreak;\ncase 59:$$[$0-1].push($$[$0]);\nbreak;\ncase 64:this.$ = [];\nbreak;\ncase 65:$$[$0-1].push($$[$0]);\nbreak;\ncase 70:this.$ = [];\nbreak;\ncase 71:$$[$0-1].push($$[$0]);\nbreak;\ncase 78:this.$ = [];\nbreak;\ncase 79:$$[$0-1].push($$[$0]);\nbreak;\ncase 82:this.$ = [];\nbreak;\ncase 83:$$[$0-1].push($$[$0]);\nbreak;\ncase 86:this.$ = [];\nbreak;\ncase 87:$$[$0-1].push($$[$0]);\nbreak;\ncase 90:this.$ = [];\nbreak;\ncase 91:$$[$0-1].push($$[$0]);\nbreak;\ncase 94:this.$ = [];\nbreak;\ncase 95:$$[$0-1].push($$[$0]);\nbreak;\ncase 98:this.$ = [$$[$0]];\nbreak;\ncase 99:$$[$0-1].push($$[$0]);\nbreak;\ncase 100:this.$ = [$$[$0]];\nbreak;\ncase 101:$$[$0-1].push($$[$0]);\nbreak;\n}\n},\ntable: [{3:1,4:2,5:[2,46],6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{1:[3]},{5:[1,4]},{5:[2,2],7:5,8:6,9:7,10:8,11:9,12:10,13:11,14:[1,12],15:[1,20],16:17,19:[1,23],24:15,27:16,29:[1,21],34:[1,22],39:[2,2],44:[2,2],47:[2,2],48:[1,13],51:[1,14],55:[1,18],59:19,60:[1,24]},{1:[2,1]},{5:[2,47],14:[2,47],15:[2,47],19:[2,47],29:[2,47],34:[2,47],39:[2,47],44:[2,47],47:[2,47],48:[2,47],51:[2,47],55:[2,47],60:[2,47]},{5:[2,3],14:[2,3],15:[2,3],19:[2,3],29:[2,3],34:[2,3],39:[2,3],44:[2,3],47:[2,3],48:[2,3],51:[2,3],55:[2,3],60:[2,3]},{5:[2,4],14:[2,4],15:[2,4],19:[2,4],29:[2,4],34:[2,4],39:[2,4],44:[2,4],47:[2,4],48:[2,4],51:[2,4],55:[2,4],60:[2,4]},{5:[2,5],14:[2,5],15:[2,5],19:[2,5],29:[2,5],34:[2,5],39:[2,5],44:[2,5],47:[2,5],48:[2,5],51:[2,5],55:[2,5],60:[2,5]},{5:[2,6],14:[2,6],15:[2,6],19:[2,6],29:[2,6],34:[2,6],39:[2,6],44:[2,6],47:[2,6],48:[2,6],51:[2,6],55:[2,6],60:[2,6]},{5:[2,7],14:[2,7],15:[2,7],19:[2,7],29:[2,7],34:[2,7],39:[2,7],44:[2,7],47:[2,7],48:[2,7],51:[2,7],55:[2,7],60:[2,7]},{5:[2,8],14:[2,8],15:[2,8],19:[2,8],29:[2,8],34:[2,8],39:[2,8],44:[2,8],47:[2,8],48:[2,8],51:[2,8],55:[2,8],60:[2,8]},{5:[2,9],14:[2,9],15:[2,9],19:[2,9],29:[2,9],34:[2,9],39:[2,9],44:[2,9],47:[2,9],48:[2,9],51:[2,9],55:[2,9],60:[2,9]},{20:25,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:36,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{4:37,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],39:[2,46],44:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{4:38,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],44:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{13:40,15:[1,20],17:39},{20:42,56:41,64:43,65:[1,44],72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{4:45,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{5:[2,10],14:[2,10],15:[2,10],18:[2,10],19:[2,10],29:[2,10],34:[2,10],39:[2,10],44:[2,10],47:[2,10],48:[2,10],51:[2,10],55:[2,10],60:[2,10]},{20:46,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:47,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:48,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:42,56:49,64:43,65:[1,44],72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{33:[2,78],49:50,65:[2,78],72:[2,78],80:[2,78],81:[2,78],82:[2,78],83:[2,78],84:[2,78],85:[2,78]},{23:[2,33],33:[2,33],54:[2,33],65:[2,33],68:[2,33],72:[2,33],75:[2,33],80:[2,33],81:[2,33],82:[2,33],83:[2,33],84:[2,33],85:[2,33]},{23:[2,34],33:[2,34],54:[2,34],65:[2,34],68:[2,34],72:[2,34],75:[2,34],80:[2,34],81:[2,34],82:[2,34],83:[2,34],84:[2,34],85:[2,34]},{23:[2,35],33:[2,35],54:[2,35],65:[2,35],68:[2,35],72:[2,35],75:[2,35],80:[2,35],81:[2,35],82:[2,35],83:[2,35],84:[2,35],85:[2,35]},{23:[2,36],33:[2,36],54:[2,36],65:[2,36],68:[2,36],72:[2,36],75:[2,36],80:[2,36],81:[2,36],82:[2,36],83:[2,36],84:[2,36],85:[2,36]},{23:[2,37],33:[2,37],54:[2,37],65:[2,37],68:[2,37],72:[2,37],75:[2,37],80:[2,37],81:[2,37],82:[2,37],83:[2,37],84:[2,37],85:[2,37]},{23:[2,38],33:[2,38],54:[2,38],65:[2,38],68:[2,38],72:[2,38],75:[2,38],80:[2,38],81:[2,38],82:[2,38],83:[2,38],84:[2,38],85:[2,38]},{23:[2,39],33:[2,39],54:[2,39],65:[2,39],68:[2,39],72:[2,39],75:[2,39],80:[2,39],81:[2,39],82:[2,39],83:[2,39],84:[2,39],85:[2,39]},{23:[2,43],33:[2,43],54:[2,43],65:[2,43],68:[2,43],72:[2,43],75:[2,43],80:[2,43],81:[2,43],82:[2,43],83:[2,43],84:[2,43],85:[2,43],87:[1,51]},{72:[1,35],86:52},{23:[2,45],33:[2,45],54:[2,45],65:[2,45],68:[2,45],72:[2,45],75:[2,45],80:[2,45],81:[2,45],82:[2,45],83:[2,45],84:[2,45],85:[2,45],87:[2,45]},{52:53,54:[2,82],65:[2,82],72:[2,82],80:[2,82],81:[2,82],82:[2,82],83:[2,82],84:[2,82],85:[2,82]},{25:54,38:56,39:[1,58],43:57,44:[1,59],45:55,47:[2,54]},{28:60,43:61,44:[1,59],47:[2,56]},{13:63,15:[1,20],18:[1,62]},{15:[2,48],18:[2,48]},{33:[2,86],57:64,65:[2,86],72:[2,86],80:[2,86],81:[2,86],82:[2,86],83:[2,86],84:[2,86],85:[2,86]},{33:[2,40],65:[2,40],72:[2,40],80:[2,40],81:[2,40],82:[2,40],83:[2,40],84:[2,40],85:[2,40]},{33:[2,41],65:[2,41],72:[2,41],80:[2,41],81:[2,41],82:[2,41],83:[2,41],84:[2,41],85:[2,41]},{20:65,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{26:66,47:[1,67]},{30:68,33:[2,58],65:[2,58],72:[2,58],75:[2,58],80:[2,58],81:[2,58],82:[2,58],83:[2,58],84:[2,58],85:[2,58]},{33:[2,64],35:69,65:[2,64],72:[2,64],75:[2,64],80:[2,64],81:[2,64],82:[2,64],83:[2,64],84:[2,64],85:[2,64]},{21:70,23:[2,50],65:[2,50],72:[2,50],80:[2,50],81:[2,50],82:[2,50],83:[2,50],84:[2,50],85:[2,50]},{33:[2,90],61:71,65:[2,90],72:[2,90],80:[2,90],81:[2,90],82:[2,90],83:[2,90],84:[2,90],85:[2,90]},{20:75,33:[2,80],50:72,63:73,64:76,65:[1,44],69:74,70:77,71:78,72:[1,79],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{72:[1,80]},{23:[2,42],33:[2,42],54:[2,42],65:[2,42],68:[2,42],72:[2,42],75:[2,42],80:[2,42],81:[2,42],82:[2,42],83:[2,42],84:[2,42],85:[2,42],87:[1,51]},{20:75,53:81,54:[2,84],63:82,64:76,65:[1,44],69:83,70:77,71:78,72:[1,79],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{26:84,47:[1,67]},{47:[2,55]},{4:85,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],39:[2,46],44:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{47:[2,20]},{20:86,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{4:87,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{26:88,47:[1,67]},{47:[2,57]},{5:[2,11],14:[2,11],15:[2,11],19:[2,11],29:[2,11],34:[2,11],39:[2,11],44:[2,11],47:[2,11],48:[2,11],51:[2,11],55:[2,11],60:[2,11]},{15:[2,49],18:[2,49]},{20:75,33:[2,88],58:89,63:90,64:76,65:[1,44],69:91,70:77,71:78,72:[1,79],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{65:[2,94],66:92,68:[2,94],72:[2,94],80:[2,94],81:[2,94],82:[2,94],83:[2,94],84:[2,94],85:[2,94]},{5:[2,25],14:[2,25],15:[2,25],19:[2,25],29:[2,25],34:[2,25],39:[2,25],44:[2,25],47:[2,25],48:[2,25],51:[2,25],55:[2,25],60:[2,25]},{20:93,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:75,31:94,33:[2,60],63:95,64:76,65:[1,44],69:96,70:77,71:78,72:[1,79],75:[2,60],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:75,33:[2,66],36:97,63:98,64:76,65:[1,44],69:99,70:77,71:78,72:[1,79],75:[2,66],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:75,22:100,23:[2,52],63:101,64:76,65:[1,44],69:102,70:77,71:78,72:[1,79],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:75,33:[2,92],62:103,63:104,64:76,65:[1,44],69:105,70:77,71:78,72:[1,79],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{33:[1,106]},{33:[2,79],65:[2,79],72:[2,79],80:[2,79],81:[2,79],82:[2,79],83:[2,79],84:[2,79],85:[2,79]},{33:[2,81]},{23:[2,27],33:[2,27],54:[2,27],65:[2,27],68:[2,27],72:[2,27],75:[2,27],80:[2,27],81:[2,27],82:[2,27],83:[2,27],84:[2,27],85:[2,27]},{23:[2,28],33:[2,28],54:[2,28],65:[2,28],68:[2,28],72:[2,28],75:[2,28],80:[2,28],81:[2,28],82:[2,28],83:[2,28],84:[2,28],85:[2,28]},{23:[2,30],33:[2,30],54:[2,30],68:[2,30],71:107,72:[1,108],75:[2,30]},{23:[2,98],33:[2,98],54:[2,98],68:[2,98],72:[2,98],75:[2,98]},{23:[2,45],33:[2,45],54:[2,45],65:[2,45],68:[2,45],72:[2,45],73:[1,109],75:[2,45],80:[2,45],81:[2,45],82:[2,45],83:[2,45],84:[2,45],85:[2,45],87:[2,45]},{23:[2,44],33:[2,44],54:[2,44],65:[2,44],68:[2,44],72:[2,44],75:[2,44],80:[2,44],81:[2,44],82:[2,44],83:[2,44],84:[2,44],85:[2,44],87:[2,44]},{54:[1,110]},{54:[2,83],65:[2,83],72:[2,83],80:[2,83],81:[2,83],82:[2,83],83:[2,83],84:[2,83],85:[2,83]},{54:[2,85]},{5:[2,13],14:[2,13],15:[2,13],19:[2,13],29:[2,13],34:[2,13],39:[2,13],44:[2,13],47:[2,13],48:[2,13],51:[2,13],55:[2,13],60:[2,13]},{38:56,39:[1,58],43:57,44:[1,59],45:112,46:111,47:[2,76]},{33:[2,70],40:113,65:[2,70],72:[2,70],75:[2,70],80:[2,70],81:[2,70],82:[2,70],83:[2,70],84:[2,70],85:[2,70]},{47:[2,18]},{5:[2,14],14:[2,14],15:[2,14],19:[2,14],29:[2,14],34:[2,14],39:[2,14],44:[2,14],47:[2,14],48:[2,14],51:[2,14],55:[2,14],60:[2,14]},{33:[1,114]},{33:[2,87],65:[2,87],72:[2,87],80:[2,87],81:[2,87],82:[2,87],83:[2,87],84:[2,87],85:[2,87]},{33:[2,89]},{20:75,63:116,64:76,65:[1,44],67:115,68:[2,96],69:117,70:77,71:78,72:[1,79],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{33:[1,118]},{32:119,33:[2,62],74:120,75:[1,121]},{33:[2,59],65:[2,59],72:[2,59],75:[2,59],80:[2,59],81:[2,59],82:[2,59],83:[2,59],84:[2,59],85:[2,59]},{33:[2,61],75:[2,61]},{33:[2,68],37:122,74:123,75:[1,121]},{33:[2,65],65:[2,65],72:[2,65],75:[2,65],80:[2,65],81:[2,65],82:[2,65],83:[2,65],84:[2,65],85:[2,65]},{33:[2,67],75:[2,67]},{23:[1,124]},{23:[2,51],65:[2,51],72:[2,51],80:[2,51],81:[2,51],82:[2,51],83:[2,51],84:[2,51],85:[2,51]},{23:[2,53]},{33:[1,125]},{33:[2,91],65:[2,91],72:[2,91],80:[2,91],81:[2,91],82:[2,91],83:[2,91],84:[2,91],85:[2,91]},{33:[2,93]},{5:[2,22],14:[2,22],15:[2,22],19:[2,22],29:[2,22],34:[2,22],39:[2,22],44:[2,22],47:[2,22],48:[2,22],51:[2,22],55:[2,22],60:[2,22]},{23:[2,99],33:[2,99],54:[2,99],68:[2,99],72:[2,99],75:[2,99]},{73:[1,109]},{20:75,63:126,64:76,65:[1,44],72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{5:[2,23],14:[2,23],15:[2,23],19:[2,23],29:[2,23],34:[2,23],39:[2,23],44:[2,23],47:[2,23],48:[2,23],51:[2,23],55:[2,23],60:[2,23]},{47:[2,19]},{47:[2,77]},{20:75,33:[2,72],41:127,63:128,64:76,65:[1,44],69:129,70:77,71:78,72:[1,79],75:[2,72],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{5:[2,24],14:[2,24],15:[2,24],19:[2,24],29:[2,24],34:[2,24],39:[2,24],44:[2,24],47:[2,24],48:[2,24],51:[2,24],55:[2,24],60:[2,24]},{68:[1,130]},{65:[2,95],68:[2,95],72:[2,95],80:[2,95],81:[2,95],82:[2,95],83:[2,95],84:[2,95],85:[2,95]},{68:[2,97]},{5:[2,21],14:[2,21],15:[2,21],19:[2,21],29:[2,21],34:[2,21],39:[2,21],44:[2,21],47:[2,21],48:[2,21],51:[2,21],55:[2,21],60:[2,21]},{33:[1,131]},{33:[2,63]},{72:[1,133],76:132},{33:[1,134]},{33:[2,69]},{15:[2,12]},{14:[2,26],15:[2,26],19:[2,26],29:[2,26],34:[2,26],47:[2,26],48:[2,26],51:[2,26],55:[2,26],60:[2,26]},{23:[2,31],33:[2,31],54:[2,31],68:[2,31],72:[2,31],75:[2,31]},{33:[2,74],42:135,74:136,75:[1,121]},{33:[2,71],65:[2,71],72:[2,71],75:[2,71],80:[2,71],81:[2,71],82:[2,71],83:[2,71],84:[2,71],85:[2,71]},{33:[2,73],75:[2,73]},{23:[2,29],33:[2,29],54:[2,29],65:[2,29],68:[2,29],72:[2,29],75:[2,29],80:[2,29],81:[2,29],82:[2,29],83:[2,29],84:[2,29],85:[2,29]},{14:[2,15],15:[2,15],19:[2,15],29:[2,15],34:[2,15],39:[2,15],44:[2,15],47:[2,15],48:[2,15],51:[2,15],55:[2,15],60:[2,15]},{72:[1,138],77:[1,137]},{72:[2,100],77:[2,100]},{14:[2,16],15:[2,16],19:[2,16],29:[2,16],34:[2,16],44:[2,16],47:[2,16],48:[2,16],51:[2,16],55:[2,16],60:[2,16]},{33:[1,139]},{33:[2,75]},{33:[2,32]},{72:[2,101],77:[2,101]},{14:[2,17],15:[2,17],19:[2,17],29:[2,17],34:[2,17],39:[2,17],44:[2,17],47:[2,17],48:[2,17],51:[2,17],55:[2,17],60:[2,17]}],\ndefaultActions: {4:[2,1],55:[2,55],57:[2,20],61:[2,57],74:[2,81],83:[2,85],87:[2,18],91:[2,89],102:[2,53],105:[2,93],111:[2,19],112:[2,77],117:[2,97],120:[2,63],123:[2,69],124:[2,12],136:[2,75],137:[2,32]},\nparseError: function parseError (str, hash) {\n    throw new Error(str);\n},\nparse: function parse(input) {\n    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = \"\", yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    this.lexer.setInput(input);\n    this.lexer.yy = this.yy;\n    this.yy.lexer = this.lexer;\n    this.yy.parser = this;\n    if (typeof this.lexer.yylloc == \"undefined\")\n        this.lexer.yylloc = {};\n    var yyloc = this.lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = this.lexer.options && this.lexer.options.ranges;\n    if (typeof this.yy.parseError === \"function\")\n        this.parseError = this.yy.parseError;\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    function lex() {\n        var token;\n        token = self.lexer.lex() || 1;\n        if (typeof token !== \"number\") {\n            token = self.symbols_[token] || token;\n        }\n        return token;\n    }\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == \"undefined\") {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n        if (typeof action === \"undefined\" || !action.length || !action[0]) {\n            var errStr = \"\";\n            if (!recovering) {\n                expected = [];\n                for (p in table[state])\n                    if (this.terminals_[p] && p > 2) {\n                        expected.push(\"'\" + this.terminals_[p] + \"'\");\n                    }\n                if (this.lexer.showPosition) {\n                    errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + this.lexer.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n                } else {\n                    errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == 1?\"end of input\":\"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n                }\n                this.parseError(errStr, {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected});\n            }\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(this.lexer.yytext);\n            lstack.push(this.lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = this.lexer.yyleng;\n                yytext = this.lexer.yytext;\n                yylineno = this.lexer.yylineno;\n                yyloc = this.lexer.yylloc;\n                if (recovering > 0)\n                    recovering--;\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {first_line: lstack[lstack.length - (len || 1)].first_line, last_line: lstack[lstack.length - 1].last_line, first_column: lstack[lstack.length - (len || 1)].first_column, last_column: lstack[lstack.length - 1].last_column};\n            if (ranges) {\n                yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n            }\n            r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);\n            if (typeof r !== \"undefined\") {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}\n};\n/* Jison generated lexer */\nvar lexer = (function(){\nvar lexer = ({EOF:1,\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\nsetInput:function (input) {\n        this._input = input;\n        this._more = this._less = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {first_line:1,first_column:0,last_line:1,last_column:0};\n        if (this.options.ranges) this.yylloc.range = [0,0];\n        this.offset = 0;\n        return this;\n    },\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) this.yylloc.range[1]++;\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length-len-1);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length-1);\n        this.matched = this.matched.substr(0, this.matched.length-1);\n\n        if (lines.length-1) this.yylineno -= lines.length-1;\n        var r = this.yylloc.range;\n\n        this.yylloc = {first_line: this.yylloc.first_line,\n          last_line: this.yylineno+1,\n          first_column: this.yylloc.first_column,\n          last_column: lines ?\n              (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length:\n              this.yylloc.first_column - len\n          };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        return this;\n    },\nmore:function () {\n        this._more = true;\n        return this;\n    },\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20)+(next.length > 20 ? '...':'')).replace(/\\n/g, \"\");\n    },\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c+\"^\";\n    },\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) this.done = true;\n\n        var token,\n            match,\n            tempMatch,\n            index,\n            col,\n            lines;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i=0;i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (!this.options.flex) break;\n            }\n        }\n        if (match) {\n            lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n            if (lines) this.yylineno += lines.length;\n            this.yylloc = {first_line: this.yylloc.last_line,\n                           last_line: this.yylineno+1,\n                           first_column: this.yylloc.last_column,\n                           last_column: lines ? lines[lines.length-1].length-lines[lines.length-1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length};\n            this.yytext += match[0];\n            this.match += match[0];\n            this.matches = match;\n            this.yyleng = this.yytext.length;\n            if (this.options.ranges) {\n                this.yylloc.range = [this.offset, this.offset += this.yyleng];\n            }\n            this._more = false;\n            this._input = this._input.slice(match[0].length);\n            this.matched += match[0];\n            token = this.performAction.call(this, this.yy, this, rules[index],this.conditionStack[this.conditionStack.length-1]);\n            if (this.done && this._input) this.done = false;\n            if (token) return token;\n            else return;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\\n'+this.showPosition(),\n                    {text: \"\", token: null, line: this.yylineno});\n        }\n    },\nlex:function lex () {\n        var r = this.next();\n        if (typeof r !== 'undefined') {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\npopState:function popState () {\n        return this.conditionStack.pop();\n    },\n_currentRules:function _currentRules () {\n        return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;\n    },\ntopState:function () {\n        return this.conditionStack[this.conditionStack.length-2];\n    },\npushState:function begin (condition) {\n        this.begin(condition);\n    }});\nlexer.options = {};\nlexer.performAction = function anonymous(yy,yy_,$avoiding_name_collisions,YY_START\n) {\n\n\nfunction strip(start, end) {\n  return yy_.yytext = yy_.yytext.substring(start, yy_.yyleng - end + start);\n}\n\n\nvar YYSTATE=YY_START\nswitch($avoiding_name_collisions) {\ncase 0:\n                                   if(yy_.yytext.slice(-2) === \"\\\\\\\\\") {\n                                     strip(0,1);\n                                     this.begin(\"mu\");\n                                   } else if(yy_.yytext.slice(-1) === \"\\\\\") {\n                                     strip(0,1);\n                                     this.begin(\"emu\");\n                                   } else {\n                                     this.begin(\"mu\");\n                                   }\n                                   if(yy_.yytext) return 15;\n                                 \nbreak;\ncase 1:return 15;\nbreak;\ncase 2:\n                                   this.popState();\n                                   return 15;\n                                 \nbreak;\ncase 3:this.begin('raw'); return 15;\nbreak;\ncase 4:\n                                  this.popState();\n                                  // Should be using `this.topState()` below, but it currently\n                                  // returns the second top instead of the first top. Opened an\n                                  // issue about it at https://github.com/zaach/jison/issues/291\n                                  if (this.conditionStack[this.conditionStack.length-1] === 'raw') {\n                                    return 15;\n                                  } else {\n                                    strip(5, 9);\n                                    return 'END_RAW_BLOCK';\n                                  }\n                                 \nbreak;\ncase 5: return 15; \nbreak;\ncase 6:\n  this.popState();\n  return 14;\n\nbreak;\ncase 7:return 65;\nbreak;\ncase 8:return 68;\nbreak;\ncase 9: return 19; \nbreak;\ncase 10:\n                                  this.popState();\n                                  this.begin('raw');\n                                  return 23;\n                                 \nbreak;\ncase 11:return 55;\nbreak;\ncase 12:return 60;\nbreak;\ncase 13:return 29;\nbreak;\ncase 14:return 47;\nbreak;\ncase 15:this.popState(); return 44;\nbreak;\ncase 16:this.popState(); return 44;\nbreak;\ncase 17:return 34;\nbreak;\ncase 18:return 39;\nbreak;\ncase 19:return 51;\nbreak;\ncase 20:return 48;\nbreak;\ncase 21:\n  this.unput(yy_.yytext);\n  this.popState();\n  this.begin('com');\n\nbreak;\ncase 22:\n  this.popState();\n  return 14;\n\nbreak;\ncase 23:return 48;\nbreak;\ncase 24:return 73;\nbreak;\ncase 25:return 72;\nbreak;\ncase 26:return 72;\nbreak;\ncase 27:return 87;\nbreak;\ncase 28:// ignore whitespace\nbreak;\ncase 29:this.popState(); return 54;\nbreak;\ncase 30:this.popState(); return 33;\nbreak;\ncase 31:yy_.yytext = strip(1,2).replace(/\\\\\"/g,'\"'); return 80;\nbreak;\ncase 32:yy_.yytext = strip(1,2).replace(/\\\\'/g,\"'\"); return 80;\nbreak;\ncase 33:return 85;\nbreak;\ncase 34:return 82;\nbreak;\ncase 35:return 82;\nbreak;\ncase 36:return 83;\nbreak;\ncase 37:return 84;\nbreak;\ncase 38:return 81;\nbreak;\ncase 39:return 75;\nbreak;\ncase 40:return 77;\nbreak;\ncase 41:return 72;\nbreak;\ncase 42:yy_.yytext = yy_.yytext.replace(/\\\\([\\\\\\]])/g,'$1'); return 72;\nbreak;\ncase 43:return 'INVALID';\nbreak;\ncase 44:return 5;\nbreak;\n}\n};\nlexer.rules = [/^(?:[^\\x00]*?(?=(\\{\\{)))/,/^(?:[^\\x00]+)/,/^(?:[^\\x00]{2,}?(?=(\\{\\{|\\\\\\{\\{|\\\\\\\\\\{\\{|$)))/,/^(?:\\{\\{\\{\\{(?=[^\\/]))/,/^(?:\\{\\{\\{\\{\\/[^\\s!\"#%-,\\.\\/;->@\\[-\\^`\\{-~]+(?=[=}\\s\\/.])\\}\\}\\}\\})/,/^(?:[^\\x00]*?(?=(\\{\\{\\{\\{)))/,/^(?:[\\s\\S]*?--(~)?\\}\\})/,/^(?:\\()/,/^(?:\\))/,/^(?:\\{\\{\\{\\{)/,/^(?:\\}\\}\\}\\})/,/^(?:\\{\\{(~)?>)/,/^(?:\\{\\{(~)?#>)/,/^(?:\\{\\{(~)?#\\*?)/,/^(?:\\{\\{(~)?\\/)/,/^(?:\\{\\{(~)?\\^\\s*(~)?\\}\\})/,/^(?:\\{\\{(~)?\\s*else\\s*(~)?\\}\\})/,/^(?:\\{\\{(~)?\\^)/,/^(?:\\{\\{(~)?\\s*else\\b)/,/^(?:\\{\\{(~)?\\{)/,/^(?:\\{\\{(~)?&)/,/^(?:\\{\\{(~)?!--)/,/^(?:\\{\\{(~)?![\\s\\S]*?\\}\\})/,/^(?:\\{\\{(~)?\\*?)/,/^(?:=)/,/^(?:\\.\\.)/,/^(?:\\.(?=([=~}\\s\\/.)|])))/,/^(?:[\\/.])/,/^(?:\\s+)/,/^(?:\\}(~)?\\}\\})/,/^(?:(~)?\\}\\})/,/^(?:\"(\\\\[\"]|[^\"])*\")/,/^(?:'(\\\\[']|[^'])*')/,/^(?:@)/,/^(?:true(?=([~}\\s)])))/,/^(?:false(?=([~}\\s)])))/,/^(?:undefined(?=([~}\\s)])))/,/^(?:null(?=([~}\\s)])))/,/^(?:-?[0-9]+(?:\\.[0-9]+)?(?=([~}\\s)])))/,/^(?:as\\s+\\|)/,/^(?:\\|)/,/^(?:([^\\s!\"#%-,\\.\\/;->@\\[-\\^`\\{-~]+(?=([=~}\\s\\/.)|]))))/,/^(?:\\[(\\\\\\]|[^\\]])*\\])/,/^(?:.)/,/^(?:$)/];\nlexer.conditions = {\"mu\":{\"rules\":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],\"inclusive\":false},\"emu\":{\"rules\":[2],\"inclusive\":false},\"com\":{\"rules\":[6],\"inclusive\":false},\"raw\":{\"rules\":[3,4,5],\"inclusive\":false},\"INITIAL\":{\"rules\":[0,1,44],\"inclusive\":true}};\nreturn lexer;})()\nparser.lexer = lexer;\nfunction Parser () { this.yy = {}; }Parser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();export default handlebars;\n","/* eslint-disable new-cap */\nimport Visitor from './visitor';\n\nexport function print(ast) {\n  return new PrintVisitor().accept(ast);\n}\n\nexport function PrintVisitor() {\n  this.padding = 0;\n}\n\nPrintVisitor.prototype = new Visitor();\n\nPrintVisitor.prototype.pad = function(string) {\n  let out = '';\n\n  for (let i = 0, l = this.padding; i < l; i++) {\n    out += '  ';\n  }\n\n  out += string + '\\n';\n  return out;\n};\n\nPrintVisitor.prototype.Program = function(program) {\n  let out = '',\n      body = program.body,\n      i, l;\n\n  if (program.blockParams) {\n    let blockParams = 'BLOCK PARAMS: [';\n    for (i = 0, l = program.blockParams.length; i < l; i++) {\n       blockParams += ' ' + program.blockParams[i];\n    }\n    blockParams += ' ]';\n    out += this.pad(blockParams);\n  }\n\n  for (i = 0, l = body.length; i < l; i++) {\n    out += this.accept(body[i]);\n  }\n\n  this.padding--;\n\n  return out;\n};\n\nPrintVisitor.prototype.MustacheStatement = function(mustache) {\n  return this.pad('{{ ' + this.SubExpression(mustache) + ' }}');\n};\nPrintVisitor.prototype.Decorator = function(mustache) {\n  return this.pad('{{ DIRECTIVE ' + this.SubExpression(mustache) + ' }}');\n};\n\nPrintVisitor.prototype.BlockStatement =\nPrintVisitor.prototype.DecoratorBlock = function(block) {\n  let out = '';\n\n  out += this.pad((block.type === 'DecoratorBlock' ? 'DIRECTIVE ' : '') + 'BLOCK:');\n  this.padding++;\n  out += this.pad(this.SubExpression(block));\n  if (block.program) {\n    out += this.pad('PROGRAM:');\n    this.padding++;\n    out += this.accept(block.program);\n    this.padding--;\n  }\n  if (block.inverse) {\n    if (block.program) { this.padding++; }\n    out += this.pad('{{^}}');\n    this.padding++;\n    out += this.accept(block.inverse);\n    this.padding--;\n    if (block.program) { this.padding--; }\n  }\n  this.padding--;\n\n  return out;\n};\n\nPrintVisitor.prototype.PartialStatement = function(partial) {\n  let content = 'PARTIAL:' + partial.name.original;\n  if (partial.params[0]) {\n    content += ' ' + this.accept(partial.params[0]);\n  }\n  if (partial.hash) {\n    content += ' ' + this.accept(partial.hash);\n  }\n  return this.pad('{{> ' + content + ' }}');\n};\nPrintVisitor.prototype.PartialBlockStatement = function(partial) {\n  let content = 'PARTIAL BLOCK:' + partial.name.original;\n  if (partial.params[0]) {\n    content += ' ' + this.accept(partial.params[0]);\n  }\n  if (partial.hash) {\n    content += ' ' + this.accept(partial.hash);\n  }\n\n  content += ' ' + this.pad('PROGRAM:');\n  this.padding++;\n  content += this.accept(partial.program);\n  this.padding--;\n\n  return this.pad('{{> ' + content + ' }}');\n};\n\nPrintVisitor.prototype.ContentStatement = function(content) {\n  return this.pad(\"CONTENT[ '\" + content.value + \"' ]\");\n};\n\nPrintVisitor.prototype.CommentStatement = function(comment) {\n  return this.pad(\"{{! '\" + comment.value + \"' }}\");\n};\n\nPrintVisitor.prototype.SubExpression = function(sexpr) {\n  let params = sexpr.params,\n      paramStrings = [],\n      hash;\n\n  for (let i = 0, l = params.length; i < l; i++) {\n    paramStrings.push(this.accept(params[i]));\n  }\n\n  params = '[' + paramStrings.join(', ') + ']';\n\n  hash = sexpr.hash ? ' ' + this.accept(sexpr.hash) : '';\n\n  return this.accept(sexpr.path) + ' ' + params + hash;\n};\n\nPrintVisitor.prototype.PathExpression = function(id) {\n  let path = id.parts.join('/');\n  return (id.data ? '@' : '') + 'PATH:' + path;\n};\n\n\nPrintVisitor.prototype.StringLiteral = function(string) {\n  return '\"' + string.value + '\"';\n};\n\nPrintVisitor.prototype.NumberLiteral = function(number) {\n  return 'NUMBER{' + number.value + '}';\n};\n\nPrintVisitor.prototype.BooleanLiteral = function(bool) {\n  return 'BOOLEAN{' + bool.value + '}';\n};\n\nPrintVisitor.prototype.UndefinedLiteral = function() {\n  return 'UNDEFINED';\n};\n\nPrintVisitor.prototype.NullLiteral = function() {\n  return 'NULL';\n};\n\nPrintVisitor.prototype.Hash = function(hash) {\n  let pairs = hash.pairs,\n      joinedPairs = [];\n\n  for (let i = 0, l = pairs.length; i < l; i++) {\n    joinedPairs.push(this.accept(pairs[i]));\n  }\n\n  return 'HASH{' + joinedPairs.join(', ') + '}';\n};\nPrintVisitor.prototype.HashPair = function(pair) {\n  return pair.key + '=' + this.accept(pair.value);\n};\n/* eslint-enable new-cap */\n","import Exception from '../exception';\n\nfunction Visitor() {\n  this.parents = [];\n}\n\nVisitor.prototype = {\n  constructor: Visitor,\n  mutating: false,\n\n  // Visits a given value. If mutating, will replace the value if necessary.\n  acceptKey: function(node, name) {\n    let value = this.accept(node[name]);\n    if (this.mutating) {\n      // Hacky sanity check: This may have a few false positives for type for the helper\n      // methods but will generally do the right thing without a lot of overhead.\n      if (value && !Visitor.prototype[value.type]) {\n        throw new Exception('Unexpected node type \"' + value.type + '\" found when accepting ' + name + ' on ' + node.type);\n      }\n      node[name] = value;\n    }\n  },\n\n  // Performs an accept operation with added sanity check to ensure\n  // required keys are not removed.\n  acceptRequired: function(node, name) {\n    this.acceptKey(node, name);\n\n    if (!node[name]) {\n      throw new Exception(node.type + ' requires ' + name);\n    }\n  },\n\n  // Traverses a given array. If mutating, empty respnses will be removed\n  // for child elements.\n  acceptArray: function(array) {\n    for (let i = 0, l = array.length; i < l; i++) {\n      this.acceptKey(array, i);\n\n      if (!array[i]) {\n        array.splice(i, 1);\n        i--;\n        l--;\n      }\n    }\n  },\n\n  accept: function(object) {\n    if (!object) {\n      return;\n    }\n\n    /* istanbul ignore next: Sanity code */\n    if (!this[object.type]) {\n      throw new Exception('Unknown type: ' + object.type, object);\n    }\n\n    if (this.current) {\n      this.parents.unshift(this.current);\n    }\n    this.current = object;\n\n    let ret = this[object.type](object);\n\n    this.current = this.parents.shift();\n\n    if (!this.mutating || ret) {\n      return ret;\n    } else if (ret !== false) {\n      return object;\n    }\n  },\n\n  Program: function(program) {\n    this.acceptArray(program.body);\n  },\n\n  MustacheStatement: visitSubExpression,\n  Decorator: visitSubExpression,\n\n  BlockStatement: visitBlock,\n  DecoratorBlock: visitBlock,\n\n  PartialStatement: visitPartial,\n  PartialBlockStatement: function(partial) {\n    visitPartial.call(this, partial);\n\n    this.acceptKey(partial, 'program');\n  },\n\n  ContentStatement: function(/* content */) {},\n  CommentStatement: function(/* comment */) {},\n\n  SubExpression: visitSubExpression,\n\n  PathExpression: function(/* path */) {},\n\n  StringLiteral: function(/* string */) {},\n  NumberLiteral: function(/* number */) {},\n  BooleanLiteral: function(/* bool */) {},\n  UndefinedLiteral: function(/* literal */) {},\n  NullLiteral: function(/* literal */) {},\n\n  Hash: function(hash) {\n    this.acceptArray(hash.pairs);\n  },\n  HashPair: function(pair) {\n    this.acceptRequired(pair, 'value');\n  }\n};\n\nfunction visitSubExpression(mustache) {\n  this.acceptRequired(mustache, 'path');\n  this.acceptArray(mustache.params);\n  this.acceptKey(mustache, 'hash');\n}\nfunction visitBlock(block) {\n  visitSubExpression.call(this, block);\n\n  this.acceptKey(block, 'program');\n  this.acceptKey(block, 'inverse');\n}\nfunction visitPartial(partial) {\n  this.acceptRequired(partial, 'name');\n  this.acceptArray(partial.params);\n  this.acceptKey(partial, 'hash');\n}\n\nexport default Visitor;\n","import Visitor from './visitor';\n\nfunction WhitespaceControl(options = {}) {\n  this.options = options;\n}\nWhitespaceControl.prototype = new Visitor();\n\nWhitespaceControl.prototype.Program = function(program) {\n  const doStandalone = !this.options.ignoreStandalone;\n\n  let isRoot = !this.isRootSeen;\n  this.isRootSeen = true;\n\n  let body = program.body;\n  for (let i = 0, l = body.length; i < l; i++) {\n    let current = body[i],\n        strip = this.accept(current);\n\n    if (!strip) {\n      continue;\n    }\n\n    let _isPrevWhitespace = isPrevWhitespace(body, i, isRoot),\n        _isNextWhitespace = isNextWhitespace(body, i, isRoot),\n\n        openStandalone = strip.openStandalone && _isPrevWhitespace,\n        closeStandalone = strip.closeStandalone && _isNextWhitespace,\n        inlineStandalone = strip.inlineStandalone && _isPrevWhitespace && _isNextWhitespace;\n\n    if (strip.close) {\n      omitRight(body, i, true);\n    }\n    if (strip.open) {\n      omitLeft(body, i, true);\n    }\n\n    if (doStandalone && inlineStandalone) {\n      omitRight(body, i);\n\n      if (omitLeft(body, i)) {\n        // If we are on a standalone node, save the indent info for partials\n        if (current.type === 'PartialStatement') {\n          // Pull out the whitespace from the final line\n          current.indent = (/([ \\t]+$)/).exec(body[i - 1].original)[1];\n        }\n      }\n    }\n    if (doStandalone && openStandalone) {\n      omitRight((current.program || current.inverse).body);\n\n      // Strip out the previous content node if it's whitespace only\n      omitLeft(body, i);\n    }\n    if (doStandalone && closeStandalone) {\n      // Always strip the next node\n      omitRight(body, i);\n\n      omitLeft((current.inverse || current.program).body);\n    }\n  }\n\n  return program;\n};\n\nWhitespaceControl.prototype.BlockStatement =\nWhitespaceControl.prototype.DecoratorBlock =\nWhitespaceControl.prototype.PartialBlockStatement = function(block) {\n  this.accept(block.program);\n  this.accept(block.inverse);\n\n  // Find the inverse program that is involed with whitespace stripping.\n  let program = block.program || block.inverse,\n      inverse = block.program && block.inverse,\n      firstInverse = inverse,\n      lastInverse = inverse;\n\n  if (inverse && inverse.chained) {\n    firstInverse = inverse.body[0].program;\n\n    // Walk the inverse chain to find the last inverse that is actually in the chain.\n    while (lastInverse.chained) {\n      lastInverse = lastInverse.body[lastInverse.body.length - 1].program;\n    }\n  }\n\n  let strip = {\n    open: block.openStrip.open,\n    close: block.closeStrip.close,\n\n    // Determine the standalone candiacy. Basically flag our content as being possibly standalone\n    // so our parent can determine if we actually are standalone\n    openStandalone: isNextWhitespace(program.body),\n    closeStandalone: isPrevWhitespace((firstInverse || program).body)\n  };\n\n  if (block.openStrip.close) {\n    omitRight(program.body, null, true);\n  }\n\n  if (inverse) {\n    let inverseStrip = block.inverseStrip;\n\n    if (inverseStrip.open) {\n      omitLeft(program.body, null, true);\n    }\n\n    if (inverseStrip.close) {\n      omitRight(firstInverse.body, null, true);\n    }\n    if (block.closeStrip.open) {\n      omitLeft(lastInverse.body, null, true);\n    }\n\n    // Find standalone else statments\n    if (!this.options.ignoreStandalone\n        && isPrevWhitespace(program.body)\n        && isNextWhitespace(firstInverse.body)) {\n      omitLeft(program.body);\n      omitRight(firstInverse.body);\n    }\n  } else if (block.closeStrip.open) {\n    omitLeft(program.body, null, true);\n  }\n\n  return strip;\n};\n\nWhitespaceControl.prototype.Decorator =\nWhitespaceControl.prototype.MustacheStatement = function(mustache) {\n  return mustache.strip;\n};\n\nWhitespaceControl.prototype.PartialStatement =\n    WhitespaceControl.prototype.CommentStatement = function(node) {\n  /* istanbul ignore next */\n  let strip = node.strip || {};\n  return {\n    inlineStandalone: true,\n    open: strip.open,\n    close: strip.close\n  };\n};\n\n\nfunction isPrevWhitespace(body, i, isRoot) {\n  if (i === undefined) {\n    i = body.length;\n  }\n\n  // Nodes that end with newlines are considered whitespace (but are special\n  // cased for strip operations)\n  let prev = body[i - 1],\n      sibling = body[i - 2];\n  if (!prev) {\n    return isRoot;\n  }\n\n  if (prev.type === 'ContentStatement') {\n    return (sibling || !isRoot ? (/\\r?\\n\\s*?$/) : (/(^|\\r?\\n)\\s*?$/)).test(prev.original);\n  }\n}\nfunction isNextWhitespace(body, i, isRoot) {\n  if (i === undefined) {\n    i = -1;\n  }\n\n  let next = body[i + 1],\n      sibling = body[i + 2];\n  if (!next) {\n    return isRoot;\n  }\n\n  if (next.type === 'ContentStatement') {\n    return (sibling || !isRoot ? (/^\\s*?\\r?\\n/) : (/^\\s*?(\\r?\\n|$)/)).test(next.original);\n  }\n}\n\n// Marks the node to the right of the position as omitted.\n// I.e. {{foo}}' ' will mark the ' ' node as omitted.\n//\n// If i is undefined, then the first child will be marked as such.\n//\n// If mulitple is truthy then all whitespace will be stripped out until non-whitespace\n// content is met.\nfunction omitRight(body, i, multiple) {\n  let current = body[i == null ? 0 : i + 1];\n  if (!current || current.type !== 'ContentStatement' || (!multiple && current.rightStripped)) {\n    return;\n  }\n\n  let original = current.value;\n  current.value = current.value.replace(multiple ? (/^\\s+/) : (/^[ \\t]*\\r?\\n?/), '');\n  current.rightStripped = current.value !== original;\n}\n\n// Marks the node to the left of the position as omitted.\n// I.e. ' '{{foo}} will mark the ' ' node as omitted.\n//\n// If i is undefined then the last child will be marked as such.\n//\n// If mulitple is truthy then all whitespace will be stripped out until non-whitespace\n// content is met.\nfunction omitLeft(body, i, multiple) {\n  let current = body[i == null ? body.length - 1 : i - 1];\n  if (!current || current.type !== 'ContentStatement' || (!multiple && current.leftStripped)) {\n    return;\n  }\n\n  // We omit the last node if it's whitespace only and not preceeded by a non-content node.\n  let original = current.value;\n  current.value = current.value.replace(multiple ? (/\\s+$/) : (/[ \\t]+$/), '');\n  current.leftStripped = current.value !== original;\n  return current.leftStripped;\n}\n\nexport default WhitespaceControl;\n","import registerInline from './decorators/inline';\n\nexport function registerDefaultDecorators(instance) {\n  registerInline(instance);\n}\n\n","import {extend} from '../utils';\n\nexport default function(instance) {\n  instance.registerDecorator('inline', function(fn, props, container, options) {\n    let ret = fn;\n    if (!props.partials) {\n      props.partials = {};\n      ret = function(context, options) {\n        // Create a new partials stack frame prior to exec.\n        let original = container.partials;\n        container.partials = extend({}, original, props.partials);\n        let ret = fn(context, options);\n        container.partials = original;\n        return ret;\n      };\n    }\n\n    props.partials[options.args[0]] = options.fn;\n\n    return ret;\n  });\n}\n","\nconst errorProps = ['description', 'fileName', 'lineNumber', 'message', 'name', 'number', 'stack'];\n\nfunction Exception(message, node) {\n  let loc = node && node.loc,\n      line,\n      column;\n  if (loc) {\n    line = loc.start.line;\n    column = loc.start.column;\n\n    message += ' - ' + line + ':' + column;\n  }\n\n  let tmp = Error.prototype.constructor.call(this, message);\n\n  // Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn't work.\n  for (let idx = 0; idx < errorProps.length; idx++) {\n    this[errorProps[idx]] = tmp[errorProps[idx]];\n  }\n\n  /* istanbul ignore else */\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, Exception);\n  }\n\n  try {\n    if (loc) {\n      this.lineNumber = line;\n\n      // Work around issue under safari where we can't directly set the column value\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(this, 'column', {\n          value: column,\n          enumerable: true\n        });\n      } else {\n        this.column = column;\n      }\n    }\n  } catch (nop) {\n    /* Ignore if the browser is very particular */\n  }\n}\n\nException.prototype = new Error();\n\nexport default Exception;\n","import registerBlockHelperMissing from './helpers/block-helper-missing';\nimport registerEach from './helpers/each';\nimport registerHelperMissing from './helpers/helper-missing';\nimport registerIf from './helpers/if';\nimport registerLog from './helpers/log';\nimport registerLookup from './helpers/lookup';\nimport registerWith from './helpers/with';\n\nexport function registerDefaultHelpers(instance) {\n  registerBlockHelperMissing(instance);\n  registerEach(instance);\n  registerHelperMissing(instance);\n  registerIf(instance);\n  registerLog(instance);\n  registerLookup(instance);\n  registerWith(instance);\n}\n","import {appendContextPath, createFrame, isArray} from '../utils';\n\nexport default function(instance) {\n  instance.registerHelper('blockHelperMissing', function(context, options) {\n    let inverse = options.inverse,\n        fn = options.fn;\n\n    if (context === true) {\n      return fn(this);\n    } else if (context === false || context == null) {\n      return inverse(this);\n    } else if (isArray(context)) {\n      if (context.length > 0) {\n        if (options.ids) {\n          options.ids = [options.name];\n        }\n\n        return instance.helpers.each(context, options);\n      } else {\n        return inverse(this);\n      }\n    } else {\n      if (options.data && options.ids) {\n        let data = createFrame(options.data);\n        data.contextPath = appendContextPath(options.data.contextPath, options.name);\n        options = {data: data};\n      }\n\n      return fn(context, options);\n    }\n  });\n}\n","import {appendContextPath, blockParams, createFrame, isArray, isFunction} from '../utils';\nimport Exception from '../exception';\n\nexport default function(instance) {\n  instance.registerHelper('each', function(context, options) {\n    if (!options) {\n      throw new Exception('Must pass iterator to #each');\n    }\n\n    let fn = options.fn,\n        inverse = options.inverse,\n        i = 0,\n        ret = '',\n        data,\n        contextPath;\n\n    if (options.data && options.ids) {\n      contextPath = appendContextPath(options.data.contextPath, options.ids[0]) + '.';\n    }\n\n    if (isFunction(context)) { context = context.call(this); }\n\n    if (options.data) {\n      data = createFrame(options.data);\n    }\n\n    function execIteration(field, index, last) {\n      if (data) {\n        data.key = field;\n        data.index = index;\n        data.first = index === 0;\n        data.last = !!last;\n\n        if (contextPath) {\n          data.contextPath = contextPath + field;\n        }\n      }\n\n      ret = ret + fn(context[field], {\n        data: data,\n        blockParams: blockParams([context[field], field], [contextPath + field, null])\n      });\n    }\n\n    if (context && typeof context === 'object') {\n      if (isArray(context)) {\n        for (let j = context.length; i < j; i++) {\n          if (i in context) {\n            execIteration(i, i, i === context.length - 1);\n          }\n        }\n      } else {\n        let priorKey;\n\n        for (let key in context) {\n          if (context.hasOwnProperty(key)) {\n            // We're running the iterations one step out of sync so we can detect\n            // the last iteration without have to scan the object twice and create\n            // an itermediate keys array.\n            if (priorKey !== undefined) {\n              execIteration(priorKey, i - 1);\n            }\n            priorKey = key;\n            i++;\n          }\n        }\n        if (priorKey !== undefined) {\n          execIteration(priorKey, i - 1, true);\n        }\n      }\n    }\n\n    if (i === 0) {\n      ret = inverse(this);\n    }\n\n    return ret;\n  });\n}\n","import Exception from '../exception';\n\nexport default function(instance) {\n  instance.registerHelper('helperMissing', function(/* [args, ]options */) {\n    if (arguments.length === 1) {\n      // A missing field in a {{foo}} construct.\n      return undefined;\n    } else {\n      // Someone is actually trying to call something, blow up.\n      throw new Exception('Missing helper: \"' + arguments[arguments.length - 1].name + '\"');\n    }\n  });\n}\n","import {isEmpty, isFunction} from '../utils';\n\nexport default function(instance) {\n  instance.registerHelper('if', function(conditional, options) {\n    if (isFunction(conditional)) { conditional = conditional.call(this); }\n\n    // Default behavior is to render the positive path if the value is truthy and not empty.\n    // The `includeZero` option may be set to treat the condtional as purely not empty based on the\n    // behavior of isEmpty. Effectively this determines if 0 is handled by the positive path or negative.\n    if ((!options.hash.includeZero && !conditional) || isEmpty(conditional)) {\n      return options.inverse(this);\n    } else {\n      return options.fn(this);\n    }\n  });\n\n  instance.registerHelper('unless', function(conditional, options) {\n    return instance.helpers['if'].call(this, conditional, {fn: options.inverse, inverse: options.fn, hash: options.hash});\n  });\n}\n","export default function(instance) {\n  instance.registerHelper('log', function(/* message, options */) {\n    let args = [undefined],\n        options = arguments[arguments.length - 1];\n    for (let i = 0; i < arguments.length - 1; i++) {\n      args.push(arguments[i]);\n    }\n\n    let level = 1;\n    if (options.hash.level != null) {\n      level = options.hash.level;\n    } else if (options.data && options.data.level != null) {\n      level = options.data.level;\n    }\n    args[0] = level;\n\n    instance.log(... args);\n  });\n}\n","export default function(instance) {\n  instance.registerHelper('lookup', function(obj, field) {\n    if (!obj) {\n      return obj;\n    }\n    if (field === 'constructor' && !obj.propertyIsEnumerable(field)) {\n      return undefined;\n    }\n    return obj[field];\n  });\n}\n","import {appendContextPath, blockParams, createFrame, isEmpty, isFunction} from '../utils';\n\nexport default function(instance) {\n  instance.registerHelper('with', function(context, options) {\n    if (isFunction(context)) { context = context.call(this); }\n\n    let fn = options.fn;\n\n    if (!isEmpty(context)) {\n      let data = options.data;\n      if (options.data && options.ids) {\n        data = createFrame(options.data);\n        data.contextPath = appendContextPath(options.data.contextPath, options.ids[0]);\n      }\n\n      return fn(context, {\n        data: data,\n        blockParams: blockParams([context], [data && data.contextPath])\n      });\n    } else {\n      return options.inverse(this);\n    }\n  });\n}\n","import {indexOf} from './utils';\n\nlet logger = {\n  methodMap: ['debug', 'info', 'warn', 'error'],\n  level: 'info',\n\n  // Maps a given level value to the `methodMap` indexes above.\n  lookupLevel: function(level) {\n    if (typeof level === 'string') {\n      let levelMap = indexOf(logger.methodMap, level.toLowerCase());\n      if (levelMap >= 0) {\n        level = levelMap;\n      } else {\n        level = parseInt(level, 10);\n      }\n    }\n\n    return level;\n  },\n\n  // Can be overridden in the host environment\n  log: function(level, ...message) {\n    level = logger.lookupLevel(level);\n\n    if (typeof console !== 'undefined' && logger.lookupLevel(logger.level) <= level) {\n      let method = logger.methodMap[level];\n      if (!console[method]) { // eslint-disable-line no-console\n        method = 'log';\n      }\n      console[method](...message); // eslint-disable-line no-console\n    }\n  }\n};\n\nexport default logger;\n","/* global window */\nexport default function(Handlebars) {\n  /* istanbul ignore next */\n  let root = typeof global !== 'undefined' ? global : window,\n      $Handlebars = root.Handlebars;\n  /* istanbul ignore next */\n  Handlebars.noConflict = function() {\n    if (root.Handlebars === Handlebars) {\n      root.Handlebars = $Handlebars;\n    }\n    return Handlebars;\n  };\n}\n","import * as Utils from './utils';\nimport Exception from './exception';\nimport { COMPILER_REVISION, REVISION_CHANGES, createFrame } from './base';\n\nexport function checkRevision(compilerInfo) {\n  const compilerRevision = compilerInfo && compilerInfo[0] || 1,\n        currentRevision = COMPILER_REVISION;\n\n  if (compilerRevision !== currentRevision) {\n    if (compilerRevision < currentRevision) {\n      const runtimeVersions = REVISION_CHANGES[currentRevision],\n            compilerVersions = REVISION_CHANGES[compilerRevision];\n      throw new Exception('Template was precompiled with an older version of Handlebars than the current runtime. ' +\n            'Please update your precompiler to a newer version (' + runtimeVersions + ') or downgrade your runtime to an older version (' + compilerVersions + ').');\n    } else {\n      // Use the embedded version info since the runtime doesn't know about this revision yet\n      throw new Exception('Template was precompiled with a newer version of Handlebars than the current runtime. ' +\n            'Please update your runtime to a newer version (' + compilerInfo[1] + ').');\n    }\n  }\n}\n\nexport function template(templateSpec, env) {\n  /* istanbul ignore next */\n  if (!env) {\n    throw new Exception('No environment passed to template');\n  }\n  if (!templateSpec || !templateSpec.main) {\n    throw new Exception('Unknown template object: ' + typeof templateSpec);\n  }\n\n  templateSpec.main.decorator = templateSpec.main_d;\n\n  // Note: Using env.VM references rather than local var references throughout this section to allow\n  // for external users to override these as psuedo-supported APIs.\n  env.VM.checkRevision(templateSpec.compiler);\n\n  function invokePartialWrapper(partial, context, options) {\n    if (options.hash) {\n      context = Utils.extend({}, context, options.hash);\n      if (options.ids) {\n        options.ids[0] = true;\n      }\n    }\n\n    partial = env.VM.resolvePartial.call(this, partial, context, options);\n    let result = env.VM.invokePartial.call(this, partial, context, options);\n\n    if (result == null && env.compile) {\n      options.partials[options.name] = env.compile(partial, templateSpec.compilerOptions, env);\n      result = options.partials[options.name](context, options);\n    }\n    if (result != null) {\n      if (options.indent) {\n        let lines = result.split('\\n');\n        for (let i = 0, l = lines.length; i < l; i++) {\n          if (!lines[i] && i + 1 === l) {\n            break;\n          }\n\n          lines[i] = options.indent + lines[i];\n        }\n        result = lines.join('\\n');\n      }\n      return result;\n    } else {\n      throw new Exception('The partial ' + options.name + ' could not be compiled when running in runtime-only mode');\n    }\n  }\n\n  // Just add water\n  let container = {\n    strict: function(obj, name) {\n      if (!(name in obj)) {\n        throw new Exception('\"' + name + '\" not defined in ' + obj);\n      }\n      return obj[name];\n    },\n    lookup: function(depths, name) {\n      const len = depths.length;\n      for (let i = 0; i < len; i++) {\n        if (depths[i] && depths[i][name] != null) {\n          return depths[i][name];\n        }\n      }\n    },\n    lambda: function(current, context) {\n      return typeof current === 'function' ? current.call(context) : current;\n    },\n\n    escapeExpression: Utils.escapeExpression,\n    invokePartial: invokePartialWrapper,\n\n    fn: function(i) {\n      let ret = templateSpec[i];\n      ret.decorator = templateSpec[i + '_d'];\n      return ret;\n    },\n\n    programs: [],\n    program: function(i, data, declaredBlockParams, blockParams, depths) {\n      let programWrapper = this.programs[i],\n          fn = this.fn(i);\n      if (data || depths || blockParams || declaredBlockParams) {\n        programWrapper = wrapProgram(this, i, fn, data, declaredBlockParams, blockParams, depths);\n      } else if (!programWrapper) {\n        programWrapper = this.programs[i] = wrapProgram(this, i, fn);\n      }\n      return programWrapper;\n    },\n\n    data: function(value, depth) {\n      while (value && depth--) {\n        value = value._parent;\n      }\n      return value;\n    },\n    merge: function(param, common) {\n      let obj = param || common;\n\n      if (param && common && (param !== common)) {\n        obj = Utils.extend({}, common, param);\n      }\n\n      return obj;\n    },\n    // An empty object to use as replacement for null-contexts\n    nullContext: Object.seal({}),\n\n    noop: env.VM.noop,\n    compilerInfo: templateSpec.compiler\n  };\n\n  function ret(context, options = {}) {\n    let data = options.data;\n\n    ret._setup(options);\n    if (!options.partial && templateSpec.useData) {\n      data = initData(context, data);\n    }\n    let depths,\n        blockParams = templateSpec.useBlockParams ? [] : undefined;\n    if (templateSpec.useDepths) {\n      if (options.depths) {\n        depths = context != options.depths[0] ? [context].concat(options.depths) : options.depths;\n      } else {\n        depths = [context];\n      }\n    }\n\n    function main(context/*, options*/) {\n      return '' + templateSpec.main(container, context, container.helpers, container.partials, data, blockParams, depths);\n    }\n    main = executeDecorators(templateSpec.main, main, container, options.depths || [], data, blockParams);\n    return main(context, options);\n  }\n  ret.isTop = true;\n\n  ret._setup = function(options) {\n    if (!options.partial) {\n      container.helpers = container.merge(options.helpers, env.helpers);\n\n      if (templateSpec.usePartial) {\n        container.partials = container.merge(options.partials, env.partials);\n      }\n      if (templateSpec.usePartial || templateSpec.useDecorators) {\n        container.decorators = container.merge(options.decorators, env.decorators);\n      }\n    } else {\n      container.helpers = options.helpers;\n      container.partials = options.partials;\n      container.decorators = options.decorators;\n    }\n  };\n\n  ret._child = function(i, data, blockParams, depths) {\n    if (templateSpec.useBlockParams && !blockParams) {\n      throw new Exception('must pass block params');\n    }\n    if (templateSpec.useDepths && !depths) {\n      throw new Exception('must pass parent depths');\n    }\n\n    return wrapProgram(container, i, templateSpec[i], data, 0, blockParams, depths);\n  };\n  return ret;\n}\n\nexport function wrapProgram(container, i, fn, data, declaredBlockParams, blockParams, depths) {\n  function prog(context, options = {}) {\n    let currentDepths = depths;\n    if (depths && context != depths[0] && !(context === container.nullContext && depths[0] === null)) {\n      currentDepths = [context].concat(depths);\n    }\n\n    return fn(container,\n        context,\n        container.helpers, container.partials,\n        options.data || data,\n        blockParams && [options.blockParams].concat(blockParams),\n        currentDepths);\n  }\n\n  prog = executeDecorators(fn, prog, container, depths, data, blockParams);\n\n  prog.program = i;\n  prog.depth = depths ? depths.length : 0;\n  prog.blockParams = declaredBlockParams || 0;\n  return prog;\n}\n\nexport function resolvePartial(partial, context, options) {\n  if (!partial) {\n    if (options.name === '@partial-block') {\n      partial = options.data['partial-block'];\n    } else {\n      partial = options.partials[options.name];\n    }\n  } else if (!partial.call && !options.name) {\n    // This is a dynamic partial that returned a string\n    options.name = partial;\n    partial = options.partials[partial];\n  }\n  return partial;\n}\n\nexport function invokePartial(partial, context, options) {\n  // Use the current closure context to save the partial-block if this partial\n  const currentPartialBlock = options.data && options.data['partial-block'];\n  options.partial = true;\n  if (options.ids) {\n    options.data.contextPath = options.ids[0] || options.data.contextPath;\n  }\n\n  let partialBlock;\n  if (options.fn && options.fn !== noop) {\n    options.data = createFrame(options.data);\n    // Wrapper function to get access to currentPartialBlock from the closure\n    let fn = options.fn;\n    partialBlock = options.data['partial-block'] = function partialBlockWrapper(context, options = {}) {\n\n      // Restore the partial-block from the closure for the execution of the block\n      // i.e. the part inside the block of the partial call.\n      options.data = createFrame(options.data);\n      options.data['partial-block'] = currentPartialBlock;\n      return fn(context, options);\n    };\n    if (fn.partials) {\n      options.partials = Utils.extend({}, options.partials, fn.partials);\n    }\n  }\n\n  if (partial === undefined && partialBlock) {\n    partial = partialBlock;\n  }\n\n  if (partial === undefined) {\n    throw new Exception('The partial ' + options.name + ' could not be found');\n  } else if (partial instanceof Function) {\n    return partial(context, options);\n  }\n}\n\nexport function noop() { return ''; }\n\nfunction initData(context, data) {\n  if (!data || !('root' in data)) {\n    data = data ? createFrame(data) : {};\n    data.root = context;\n  }\n  return data;\n}\n\nfunction executeDecorators(fn, prog, container, depths, data, blockParams) {\n  if (fn.decorator) {\n    let props = {};\n    prog = fn.decorator(prog, props, container, depths && depths[0], data, blockParams, depths);\n    Utils.extend(prog, props);\n  }\n  return prog;\n}\n","// Build out our basic SafeString type\nfunction SafeString(string) {\n  this.string = string;\n}\n\nSafeString.prototype.toString = SafeString.prototype.toHTML = function() {\n  return '' + this.string;\n};\n\nexport default SafeString;\n","const escape = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;',\n  '=': '&#x3D;'\n};\n\nconst badChars = /[&<>\"'`=]/g,\n      possible = /[&<>\"'`=]/;\n\nfunction escapeChar(chr) {\n  return escape[chr];\n}\n\nexport function extend(obj/* , ...source */) {\n  for (let i = 1; i < arguments.length; i++) {\n    for (let key in arguments[i]) {\n      if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {\n        obj[key] = arguments[i][key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nexport let toString = Object.prototype.toString;\n\n// Sourced from lodash\n// https://github.com/bestiejs/lodash/blob/master/LICENSE.txt\n/* eslint-disable func-style */\nlet isFunction = function(value) {\n  return typeof value === 'function';\n};\n// fallback for older versions of Chrome and Safari\n/* istanbul ignore next */\nif (isFunction(/x/)) {\n  isFunction = function(value) {\n    return typeof value === 'function' && toString.call(value) === '[object Function]';\n  };\n}\nexport {isFunction};\n/* eslint-enable func-style */\n\n/* istanbul ignore next */\nexport const isArray = Array.isArray || function(value) {\n  return (value && typeof value === 'object') ? toString.call(value) === '[object Array]' : false;\n};\n\n// Older IE versions do not directly support indexOf so we must implement our own, sadly.\nexport function indexOf(array, value) {\n  for (let i = 0, len = array.length; i < len; i++) {\n    if (array[i] === value) {\n      return i;\n    }\n  }\n  return -1;\n}\n\n\nexport function escapeExpression(string) {\n  if (typeof string !== 'string') {\n    // don't escape SafeStrings, since they're already safe\n    if (string && string.toHTML) {\n      return string.toHTML();\n    } else if (string == null) {\n      return '';\n    } else if (!string) {\n      return string + '';\n    }\n\n    // Force a string conversion as this will be done by the append regardless and\n    // the regex test will do this transparently behind the scenes, causing issues if\n    // an object's to string has escaped characters in it.\n    string = '' + string;\n  }\n\n  if (!possible.test(string)) { return string; }\n  return string.replace(badChars, escapeChar);\n}\n\nexport function isEmpty(value) {\n  if (!value && value !== 0) {\n    return true;\n  } else if (isArray(value) && value.length === 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport function createFrame(object) {\n  let frame = extend({}, object);\n  frame._parent = object;\n  return frame;\n}\n\nexport function blockParams(params, ids) {\n  params.path = ids;\n  return params;\n}\n\nexport function appendContextPath(contextPath, id) {\n  return (contextPath ? contextPath + '.' : '') + id;\n}\n","// USAGE:\n// var handlebars = require('handlebars');\n/* eslint-disable no-var */\n\n// var local = handlebars.create();\n\nvar handlebars = require('../dist/cjs/handlebars')['default'];\n\nvar printer = require('../dist/cjs/handlebars/compiler/printer');\nhandlebars.PrintVisitor = printer.PrintVisitor;\nhandlebars.print = printer.print;\n\nmodule.exports = handlebars;\n\n// Publish a Node.js require() handler for .handlebars and .hbs files\nfunction extension(module, filename) {\n  var fs = require('fs');\n  var templateString = fs.readFileSync(filename, 'utf8');\n  module.exports = handlebars.compile(templateString);\n}\n/* istanbul ignore else */\nif (typeof require !== 'undefined' && require.extensions) {\n  require.extensions['.handlebars'] = extension;\n  require.extensions['.hbs'] = extension;\n}\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex] || '';\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex] || '';\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   “sources” entry.  This value is prepended to the individual\n    //   entries in the “source” field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   “sourceRoot”, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n","/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n","/*!\n * jQuery JavaScript Library v3.5.0\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2020-04-10T15:07Z\n */\n( function( global, factory ) {\n\n\t\"use strict\";\n\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\n\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\n\t\t// is present, execute the factory and get jQuery.\n\t\t// For environments that do not have a `window` with a `document`\n\t\t// (such as Node.js), expose a factory as module.exports.\n\t\t// This accentuates the need for the creation of a real `window`.\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t// See ticket #14549 for more info.\n\t\tmodule.exports = global.document ?\n\t\t\tfactory( global, true ) :\n\t\t\tfunction( w ) {\n\t\t\t\tif ( !w.document ) {\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t}\n\t\t\t\treturn factory( w );\n\t\t\t};\n\t} else {\n\t\tfactory( global );\n\t}\n\n// Pass this if window is not defined yet\n} )( typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\n// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n// enough that all such attempts are guarded in a try block.\n\"use strict\";\n\nvar arr = [];\n\nvar getProto = Object.getPrototypeOf;\n\nvar slice = arr.slice;\n\nvar flat = arr.flat ? function( array ) {\n\treturn arr.flat.call( array );\n} : function( array ) {\n\treturn arr.concat.apply( [], array );\n};\n\n\nvar push = arr.push;\n\nvar indexOf = arr.indexOf;\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar fnToString = hasOwn.toString;\n\nvar ObjectFunctionString = fnToString.call( Object );\n\nvar support = {};\n\nvar isFunction = function isFunction( obj ) {\n\n      // Support: Chrome <=57, Firefox <=52\n      // In some browsers, typeof returns \"function\" for HTML <object> elements\n      // (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).\n      // We don't want to classify *any* DOM node as a function.\n      return typeof obj === \"function\" && typeof obj.nodeType !== \"number\";\n  };\n\n\nvar isWindow = function isWindow( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t};\n\n\nvar document = window.document;\n\n\n\n\tvar preservedScriptAttributes = {\n\t\ttype: true,\n\t\tsrc: true,\n\t\tnonce: true,\n\t\tnoModule: true\n\t};\n\n\tfunction DOMEval( code, node, doc ) {\n\t\tdoc = doc || document;\n\n\t\tvar i, val,\n\t\t\tscript = doc.createElement( \"script\" );\n\n\t\tscript.text = code;\n\t\tif ( node ) {\n\t\t\tfor ( i in preservedScriptAttributes ) {\n\n\t\t\t\t// Support: Firefox 64+, Edge 18+\n\t\t\t\t// Some browsers don't support the \"nonce\" property on scripts.\n\t\t\t\t// On the other hand, just using `getAttribute` is not enough as\n\t\t\t\t// the `nonce` attribute is reset to an empty string whenever it\n\t\t\t\t// becomes browsing-context connected.\n\t\t\t\t// See https://github.com/whatwg/html/issues/2369\n\t\t\t\t// See https://html.spec.whatwg.org/#nonce-attributes\n\t\t\t\t// The `node.getAttribute` check was added for the sake of\n\t\t\t\t// `jQuery.globalEval` so that it can fake a nonce-containing node\n\t\t\t\t// via an object.\n\t\t\t\tval = node[ i ] || node.getAttribute && node.getAttribute( i );\n\t\t\t\tif ( val ) {\n\t\t\t\t\tscript.setAttribute( i, val );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdoc.head.appendChild( script ).parentNode.removeChild( script );\n\t}\n\n\nfunction toType( obj ) {\n\tif ( obj == null ) {\n\t\treturn obj + \"\";\n\t}\n\n\t// Support: Android <=2.3 only (functionish RegExp)\n\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\tclass2type[ toString.call( obj ) ] || \"object\" :\n\t\ttypeof obj;\n}\n/* global Symbol */\n// Defining this global in .eslintrc.json would create a danger of using the global\n// unguarded in another place, it seems safer to define global only for this module\n\n\n\nvar\n\tversion = \"3.5.0\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t};\n\njQuery.fn = jQuery.prototype = {\n\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\n\t\t// Return all the elements in a clean array\n\t\tif ( num == null ) {\n\t\t\treturn slice.call( this );\n\t\t}\n\n\t\t// Return just the one element from the set\n\t\treturn num < 0 ? this[ num + this.length ] : this[ num ];\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\teach: function( callback ) {\n\t\treturn jQuery.each( this, callback );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t} ) );\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teven: function() {\n\t\treturn this.pushStack( jQuery.grep( this, function( _elem, i ) {\n\t\t\treturn ( i + 1 ) % 2;\n\t\t} ) );\n\t},\n\n\todd: function() {\n\t\treturn this.pushStack( jQuery.grep( this, function( _elem, i ) {\n\t\t\treturn i % 2;\n\t\t} ) );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor();\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: arr.sort,\n\tsplice: arr.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[ 0 ] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// Skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};\n\t\ti++;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !isFunction( target ) ) {\n\t\ttarget = {};\n\t}\n\n\t// Extend jQuery itself if only one argument is passed\n\tif ( i === length ) {\n\t\ttarget = this;\n\t\ti--;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\n\t\t// Only deal with non-null/undefined values\n\t\tif ( ( options = arguments[ i ] ) != null ) {\n\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent Object.prototype pollution\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( name === \"__proto__\" || target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\n\t\t\t\t\t( copyIsArray = Array.isArray( copy ) ) ) ) {\n\t\t\t\t\tsrc = target[ name ];\n\n\t\t\t\t\t// Ensure proper type for the source value\n\t\t\t\t\tif ( copyIsArray && !Array.isArray( src ) ) {\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t} else if ( !copyIsArray && !jQuery.isPlainObject( src ) ) {\n\t\t\t\t\t\tclone = {};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src;\n\t\t\t\t\t}\n\t\t\t\t\tcopyIsArray = false;\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend( {\n\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// Assume jQuery is ready without the ready module\n\tisReady: true,\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\tnoop: function() {},\n\n\tisPlainObject: function( obj ) {\n\t\tvar proto, Ctor;\n\n\t\t// Detect obvious negatives\n\t\t// Use toString instead of jQuery.type to catch host objects\n\t\tif ( !obj || toString.call( obj ) !== \"[object Object]\" ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tproto = getProto( obj );\n\n\t\t// Objects with no prototype (e.g., `Object.create( null )`) are plain\n\t\tif ( !proto ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Objects with prototype are plain iff they were constructed by a global Object function\n\t\tCtor = hasOwn.call( proto, \"constructor\" ) && proto.constructor;\n\t\treturn typeof Ctor === \"function\" && fnToString.call( Ctor ) === ObjectFunctionString;\n\t},\n\n\tisEmptyObject: function( obj ) {\n\t\tvar name;\n\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\t// Evaluates a script in a provided context; falls back to the global one\n\t// if not specified.\n\tglobalEval: function( code, options, doc ) {\n\t\tDOMEval( code, { nonce: options && options.nonce }, doc );\n\t},\n\n\teach: function( obj, callback ) {\n\t\tvar length, i = 0;\n\n\t\tif ( isArrayLike( obj ) ) {\n\t\t\tlength = obj.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i in obj ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArrayLike( Object( arr ) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpush.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t},\n\n\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t// push.apply(_, arraylike) throws on ancient WebKit\n\tmerge: function( first, second ) {\n\t\tvar len = +second.length,\n\t\t\tj = 0,\n\t\t\ti = first.length;\n\n\t\tfor ( ; j < len; j++ ) {\n\t\t\tfirst[ i++ ] = second[ j ];\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, invert ) {\n\t\tvar callbackInverse,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tcallbackExpect = !invert;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar length, value,\n\t\t\ti = 0,\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their new values\n\t\tif ( isArrayLike( elems ) ) {\n\t\t\tlength = elems.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn flat( ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// jQuery.support is not used in Core but other projects attach their\n\t// properties to it so it needs to exist.\n\tsupport: support\n} );\n\nif ( typeof Symbol === \"function\" ) {\n\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\n}\n\n// Populate the class2type map\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\nfunction( _i, name ) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n} );\n\nfunction isArrayLike( obj ) {\n\n\t// Support: real iOS 8.2 only (not reproducible in simulator)\n\t// `in` check used to prevent JIT error (gh-2145)\n\t// hasOwn isn't used here due to false negatives\n\t// regarding Nodelist length in IE\n\tvar length = !!obj && \"length\" in obj && obj.length,\n\t\ttype = toType( obj );\n\n\tif ( isFunction( obj ) || isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\treturn type === \"array\" || length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\nvar Sizzle =\n/*!\n * Sizzle CSS Selector Engine v2.3.5\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://js.foundation/\n *\n * Date: 2020-03-14\n */\n( function( window ) {\nvar i,\n\tsupport,\n\tExpr,\n\tgetText,\n\tisXML,\n\ttokenize,\n\tcompile,\n\tselect,\n\toutermostContext,\n\tsortInput,\n\thasDuplicate,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + 1 * new Date(),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\tnonnativeSelectorCache = createCache(),\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// Instance methods\n\thasOwn = ( {} ).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpushNative = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\n\t// Use a stripped-down indexOf as it's faster than native\n\t// https://jsperf.com/thor-indexof-vs-for/5\n\tindexOf = function( list, elem ) {\n\t\tvar i = 0,\n\t\t\tlen = list.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( list[ i ] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|\" +\n\t\t\"ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\n\t// https://www.w3.org/TR/css-syntax-3/#ident-token-diagram\n\tidentifier = \"(?:\\\\\\\\[\\\\da-fA-F]{1,6}\" + whitespace +\n\t\t\"?|\\\\\\\\[^\\\\r\\\\n\\\\f]|[\\\\w-]|[^\\0-\\\\x7f])+\",\n\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\n\n\t\t// Operator (capture 2)\n\t\t\"*([*^$|!~]?=)\" + whitespace +\n\n\t\t// \"Attribute values must be CSS identifiers [capture 5]\n\t\t// or strings [capture 3 or capture 4]\"\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" +\n\t\twhitespace + \"*\\\\]\",\n\n\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\n\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\n\t\t// 2. simple (capture 6)\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\n\t\t// 3. anything else (capture 2)\n\t\t\".*\" +\n\t\t\")\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" +\n\t\twhitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace +\n\t\t\"*\" ),\n\trdescend = new RegExp( whitespace + \"|>\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" +\n\t\t\twhitespace + \"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" +\n\t\t\twhitespace + \"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace +\n\t\t\t\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" + whitespace +\n\t\t\t\"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trhtml = /HTML$/i,\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trsibling = /[+~]/,\n\n\t// CSS escapes\n\t// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\[\\\\da-fA-F]{1,6}\" + whitespace + \"?|\\\\\\\\([^\\\\r\\\\n\\\\f])\", \"g\" ),\n\tfunescape = function( escape, nonHex ) {\n\t\tvar high = \"0x\" + escape.slice( 1 ) - 0x10000;\n\n\t\treturn nonHex ?\n\n\t\t\t// Strip the backslash prefix from a non-hex escape sequence\n\t\t\tnonHex :\n\n\t\t\t// Replace a hexadecimal escape sequence with the encoded Unicode code point\n\t\t\t// Support: IE <=11+\n\t\t\t// For values outside the Basic Multilingual Plane (BMP), manually construct a\n\t\t\t// surrogate pair\n\t\t\thigh < 0 ?\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t},\n\n\t// CSS string/identifier serialization\n\t// https://drafts.csswg.org/cssom/#common-serializing-idioms\n\trcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\n\tfcssescape = function( ch, asCodePoint ) {\n\t\tif ( asCodePoint ) {\n\n\t\t\t// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n\t\t\tif ( ch === \"\\0\" ) {\n\t\t\t\treturn \"\\uFFFD\";\n\t\t\t}\n\n\t\t\t// Control characters and (dependent upon position) numbers get escaped as code points\n\t\t\treturn ch.slice( 0, -1 ) + \"\\\\\" +\n\t\t\t\tch.charCodeAt( ch.length - 1 ).toString( 16 ) + \" \";\n\t\t}\n\n\t\t// Other potentially-special ASCII characters get backslash-escaped\n\t\treturn \"\\\\\" + ch;\n\t},\n\n\t// Used for iframes\n\t// See setDocument()\n\t// Removing the function wrapper causes a \"Permission Denied\"\n\t// error in IE\n\tunloadHandler = function() {\n\t\tsetDocument();\n\t},\n\n\tinDisabledFieldset = addCombinator(\n\t\tfunction( elem ) {\n\t\t\treturn elem.disabled === true && elem.nodeName.toLowerCase() === \"fieldset\";\n\t\t},\n\t\t{ dir: \"parentNode\", next: \"legend\" }\n\t);\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t( arr = slice.call( preferredDoc.childNodes ) ),\n\t\tpreferredDoc.childNodes\n\t);\n\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\t// eslint-disable-next-line no-unused-expressions\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpushNative.apply( target, slice.call( els ) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( ( target[ j++ ] = els[ i++ ] ) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar m, i, elem, nid, match, groups, newSelector,\n\t\tnewContext = context && context.ownerDocument,\n\n\t\t// nodeType defaults to 9, since context defaults to document\n\t\tnodeType = context ? context.nodeType : 9;\n\n\tresults = results || [];\n\n\t// Return early from calls with invalid selector or context\n\tif ( typeof selector !== \"string\" || !selector ||\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\n\t\treturn results;\n\t}\n\n\t// Try to shortcut find operations (as opposed to filters) in HTML documents\n\tif ( !seed ) {\n\t\tsetDocument( context );\n\t\tcontext = context || document;\n\n\t\tif ( documentIsHTML ) {\n\n\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\n\t\t\tif ( nodeType !== 11 && ( match = rquickExpr.exec( selector ) ) ) {\n\n\t\t\t\t// ID selector\n\t\t\t\tif ( ( m = match[ 1 ] ) ) {\n\n\t\t\t\t\t// Document context\n\t\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\t\tif ( ( elem = context.getElementById( m ) ) ) {\n\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t// Element context\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\tif ( newContext && ( elem = newContext.getElementById( m ) ) &&\n\t\t\t\t\t\t\tcontains( context, elem ) &&\n\t\t\t\t\t\t\telem.id === m ) {\n\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t// Type selector\n\t\t\t\t} else if ( match[ 2 ] ) {\n\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\t\treturn results;\n\n\t\t\t\t// Class selector\n\t\t\t\t} else if ( ( m = match[ 3 ] ) && support.getElementsByClassName &&\n\t\t\t\t\tcontext.getElementsByClassName ) {\n\n\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\t\treturn results;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Take advantage of querySelectorAll\n\t\t\tif ( support.qsa &&\n\t\t\t\t!nonnativeSelectorCache[ selector + \" \" ] &&\n\t\t\t\t( !rbuggyQSA || !rbuggyQSA.test( selector ) ) &&\n\n\t\t\t\t// Support: IE 8 only\n\t\t\t\t// Exclude object elements\n\t\t\t\t( nodeType !== 1 || context.nodeName.toLowerCase() !== \"object\" ) ) {\n\n\t\t\t\tnewSelector = selector;\n\t\t\t\tnewContext = context;\n\n\t\t\t\t// qSA considers elements outside a scoping root when evaluating child or\n\t\t\t\t// descendant combinators, which is not what we want.\n\t\t\t\t// In such cases, we work around the behavior by prefixing every selector in the\n\t\t\t\t// list with an ID selector referencing the scope context.\n\t\t\t\t// The technique has to be used as well when a leading combinator is used\n\t\t\t\t// as such selectors are not recognized by querySelectorAll.\n\t\t\t\t// Thanks to Andrew Dupont for this technique.\n\t\t\t\tif ( nodeType === 1 &&\n\t\t\t\t\t( rdescend.test( selector ) || rcombinators.test( selector ) ) ) {\n\n\t\t\t\t\t// Expand context for sibling selectors\n\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext;\n\n\t\t\t\t\t// We can use :scope instead of the ID hack if the browser\n\t\t\t\t\t// supports it & if we're not changing the context.\n\t\t\t\t\tif ( newContext !== context || !support.scope ) {\n\n\t\t\t\t\t\t// Capture the context ID, setting it first if necessary\n\t\t\t\t\t\tif ( ( nid = context.getAttribute( \"id\" ) ) ) {\n\t\t\t\t\t\t\tnid = nid.replace( rcssescape, fcssescape );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcontext.setAttribute( \"id\", ( nid = expando ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prefix every selector in the list\n\t\t\t\t\tgroups = tokenize( selector );\n\t\t\t\t\ti = groups.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tgroups[ i ] = ( nid ? \"#\" + nid : \":scope\" ) + \" \" +\n\t\t\t\t\t\t\ttoSelector( groups[ i ] );\n\t\t\t\t\t}\n\t\t\t\t\tnewSelector = groups.join( \",\" );\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t);\n\t\t\t\t\treturn results;\n\t\t\t\t} catch ( qsaError ) {\n\t\t\t\t\tnonnativeSelectorCache( selector, true );\n\t\t\t\t} finally {\n\t\t\t\t\tif ( nid === expando ) {\n\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn ( cache[ key + \" \" ] = value );\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created element and returns a boolean result\n */\nfunction assert( fn ) {\n\tvar el = document.createElement( \"fieldset\" );\n\n\ttry {\n\t\treturn !!fn( el );\n\t} catch ( e ) {\n\t\treturn false;\n\t} finally {\n\n\t\t// Remove from its parent by default\n\t\tif ( el.parentNode ) {\n\t\t\tel.parentNode.removeChild( el );\n\t\t}\n\n\t\t// release memory in IE\n\t\tel = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split( \"|\" ),\n\t\ti = arr.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[ i ] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\ta.sourceIndex - b.sourceIndex;\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( ( cur = cur.nextSibling ) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn ( name === \"input\" || name === \"button\" ) && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for :enabled/:disabled\n * @param {Boolean} disabled true for :disabled; false for :enabled\n */\nfunction createDisabledPseudo( disabled ) {\n\n\t// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n\treturn function( elem ) {\n\n\t\t// Only certain elements can match :enabled or :disabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n\t\tif ( \"form\" in elem ) {\n\n\t\t\t// Check for inherited disabledness on relevant non-disabled elements:\n\t\t\t// * listed form-associated elements in a disabled fieldset\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n\t\t\t// * option elements in a disabled optgroup\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n\t\t\t// All such elements have a \"form\" property.\n\t\t\tif ( elem.parentNode && elem.disabled === false ) {\n\n\t\t\t\t// Option elements defer to a parent optgroup if present\n\t\t\t\tif ( \"label\" in elem ) {\n\t\t\t\t\tif ( \"label\" in elem.parentNode ) {\n\t\t\t\t\t\treturn elem.parentNode.disabled === disabled;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn elem.disabled === disabled;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Support: IE 6 - 11\n\t\t\t\t// Use the isDisabled shortcut property to check for disabled fieldset ancestors\n\t\t\t\treturn elem.isDisabled === disabled ||\n\n\t\t\t\t\t// Where there is no isDisabled, check manually\n\t\t\t\t\t/* jshint -W018 */\n\t\t\t\t\telem.isDisabled !== !disabled &&\n\t\t\t\t\tinDisabledFieldset( elem ) === disabled;\n\t\t\t}\n\n\t\t\treturn elem.disabled === disabled;\n\n\t\t// Try to winnow out elements that can't be disabled before trusting the disabled property.\n\t\t// Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n\t\t// even exist on them, let alone have a boolean value.\n\t\t} else if ( \"label\" in elem ) {\n\t\t\treturn elem.disabled === disabled;\n\t\t}\n\n\t\t// Remaining elements are neither :enabled nor :disabled\n\t\treturn false;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction( function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction( function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ ( j = matchIndexes[ i ] ) ] ) {\n\t\t\t\t\tseed[ j ] = !( matches[ j ] = seed[ j ] );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t} );\n}\n\n/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n}\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\nisXML = Sizzle.isXML = function( elem ) {\n\tvar namespace = elem.namespaceURI,\n\t\tdocElem = ( elem.ownerDocument || elem ).documentElement;\n\n\t// Support: IE <=8\n\t// Assume HTML when documentElement doesn't yet exist, such as inside loading iframes\n\t// https://bugs.jquery.com/ticket/4833\n\treturn !rhtml.test( namespace || docElem && docElem.nodeName || \"HTML\" );\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar hasCompare, subWindow,\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\n\t// Return early if doc is invalid or already selected\n\t// Support: IE 11+, Edge 17 - 18+\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t// two documents; shallow comparisons work.\n\t// eslint-disable-next-line eqeqeq\n\tif ( doc == document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Update global variables\n\tdocument = doc;\n\tdocElem = document.documentElement;\n\tdocumentIsHTML = !isXML( document );\n\n\t// Support: IE 9 - 11+, Edge 12 - 18+\n\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\t// Support: IE 11+, Edge 17 - 18+\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t// two documents; shallow comparisons work.\n\t// eslint-disable-next-line eqeqeq\n\tif ( preferredDoc != document &&\n\t\t( subWindow = document.defaultView ) && subWindow.top !== subWindow ) {\n\n\t\t// Support: IE 11, Edge\n\t\tif ( subWindow.addEventListener ) {\n\t\t\tsubWindow.addEventListener( \"unload\", unloadHandler, false );\n\n\t\t// Support: IE 9 - 10 only\n\t\t} else if ( subWindow.attachEvent ) {\n\t\t\tsubWindow.attachEvent( \"onunload\", unloadHandler );\n\t\t}\n\t}\n\n\t// Support: IE 8 - 11+, Edge 12 - 18+, Chrome <=16 - 25 only, Firefox <=3.6 - 31 only,\n\t// Safari 4 - 5 only, Opera <=11.6 - 12.x only\n\t// IE/Edge & older browsers don't support the :scope pseudo-class.\n\t// Support: Safari 6.0 only\n\t// Safari 6.0 supports :scope but it's an alias of :root there.\n\tsupport.scope = assert( function( el ) {\n\t\tdocElem.appendChild( el ).appendChild( document.createElement( \"div\" ) );\n\t\treturn typeof el.querySelectorAll !== \"undefined\" &&\n\t\t\t!el.querySelectorAll( \":scope fieldset div\" ).length;\n\t} );\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties\n\t// (excepting IE8 booleans)\n\tsupport.attributes = assert( function( el ) {\n\t\tel.className = \"i\";\n\t\treturn !el.getAttribute( \"className\" );\n\t} );\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert( function( el ) {\n\t\tel.appendChild( document.createComment( \"\" ) );\n\t\treturn !el.getElementsByTagName( \"*\" ).length;\n\t} );\n\n\t// Support: IE<9\n\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programmatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert( function( el ) {\n\t\tdocElem.appendChild( el ).id = expando;\n\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\n\t} );\n\n\t// ID filter and find\n\tif ( support.getById ) {\n\t\tExpr.filter[ \"ID\" ] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute( \"id\" ) === attrId;\n\t\t\t};\n\t\t};\n\t\tExpr.find[ \"ID\" ] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar elem = context.getElementById( id );\n\t\t\t\treturn elem ? [ elem ] : [];\n\t\t\t}\n\t\t};\n\t} else {\n\t\tExpr.filter[ \"ID\" ] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\n\t\t\t\t\telem.getAttributeNode( \"id\" );\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\n\t\t// Support: IE 6 - 7 only\n\t\t// getElementById is not reliable as a find shortcut\n\t\tExpr.find[ \"ID\" ] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar node, i, elems,\n\t\t\t\t\telem = context.getElementById( id );\n\n\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t// Verify the id attribute\n\t\t\t\t\tnode = elem.getAttributeNode( \"id\" );\n\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t}\n\n\t\t\t\t\t// Fall back on getElementsByName\n\t\t\t\t\telems = context.getElementsByName( id );\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile ( ( elem = elems[ i++ ] ) ) {\n\t\t\t\t\t\tnode = elem.getAttributeNode( \"id\" );\n\t\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn [];\n\t\t\t}\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[ \"TAG\" ] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\n\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t} else if ( support.qsa ) {\n\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t}\n\t\t} :\n\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( ( elem = results[ i++ ] ) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[ \"CLASS\" ] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See https://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( ( support.qsa = rnative.test( document.querySelectorAll ) ) ) {\n\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert( function( el ) {\n\n\t\t\tvar input;\n\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// https://bugs.jquery.com/ticket/12359\n\t\t\tdocElem.appendChild( el ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\n\t\t\t\t\"<option selected=''></option></select>\";\n\n\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\tif ( el.querySelectorAll( \"[msallowcapture^='']\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !el.querySelectorAll( \"[selected]\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\t\t\tif ( !el.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"~=\" );\n\t\t\t}\n\n\t\t\t// Support: IE 11+, Edge 15 - 18+\n\t\t\t// IE 11/Edge don't find elements on a `[name='']` query in some cases.\n\t\t\t// Adding a temporary attribute to the document before the selection works\n\t\t\t// around the issue.\n\t\t\t// Interestingly, IE 10 & older don't seem to have the issue.\n\t\t\tinput = document.createElement( \"input\" );\n\t\t\tinput.setAttribute( \"name\", \"\" );\n\t\t\tel.appendChild( input );\n\t\t\tif ( !el.querySelectorAll( \"[name='']\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*name\" + whitespace + \"*=\" +\n\t\t\t\t\twhitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !el.querySelectorAll( \":checked\" ).length ) {\n\t\t\t\trbuggyQSA.push( \":checked\" );\n\t\t\t}\n\n\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t// In-page `selector#id sibling-combinator selector` fails\n\t\t\tif ( !el.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\trbuggyQSA.push( \".#.+[+~]\" );\n\t\t\t}\n\n\t\t\t// Support: Firefox <=3.6 - 5 only\n\t\t\t// Old Firefox doesn't throw on a badly-escaped identifier.\n\t\t\tel.querySelectorAll( \"\\\\\\f\" );\n\t\t\trbuggyQSA.push( \"[\\\\r\\\\n\\\\f]\" );\n\t\t} );\n\n\t\tassert( function( el ) {\n\t\t\tel.innerHTML = \"<a href='' disabled='disabled'></a>\" +\n\t\t\t\t\"<select disabled='disabled'><option/></select>\";\n\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\tvar input = document.createElement( \"input\" );\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tel.appendChild( input ).setAttribute( \"name\", \"D\" );\n\n\t\t\t// Support: IE8\n\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\tif ( el.querySelectorAll( \"[name=d]\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( el.querySelectorAll( \":enabled\" ).length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Support: IE9-11+\n\t\t\t// IE's :disabled selector does not pick up the children of disabled fieldsets\n\t\t\tdocElem.appendChild( el ).disabled = true;\n\t\t\tif ( el.querySelectorAll( \":disabled\" ).length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Support: Opera 10 - 11 only\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tel.querySelectorAll( \"*,:x\" );\n\t\t\trbuggyQSA.push( \",.*:\" );\n\t\t} );\n\t}\n\n\tif ( ( support.matchesSelector = rnative.test( ( matches = docElem.matches ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector ) ) ) ) {\n\n\t\tassert( function( el ) {\n\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( el, \"*\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( el, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t} );\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join( \"|\" ) );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join( \"|\" ) );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\n\t// Element contains another\n\t// Purposefully self-exclusive\n\t// As in, an element does not contain itself\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\tfunction( a, b ) {\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t) );\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( ( b = b.parentNode ) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = hasCompare ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\tif ( compare ) {\n\t\t\treturn compare;\n\t\t}\n\n\t\t// Calculate position if both inputs belong to the same document\n\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t// two documents; shallow comparisons work.\n\t\t// eslint-disable-next-line eqeqeq\n\t\tcompare = ( a.ownerDocument || a ) == ( b.ownerDocument || b ) ?\n\t\t\ta.compareDocumentPosition( b ) :\n\n\t\t\t// Otherwise we know they are disconnected\n\t\t\t1;\n\n\t\t// Disconnected nodes\n\t\tif ( compare & 1 ||\n\t\t\t( !support.sortDetached && b.compareDocumentPosition( a ) === compare ) ) {\n\n\t\t\t// Choose the first element that is related to our preferred document\n\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t// two documents; shallow comparisons work.\n\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\tif ( a == document || a.ownerDocument == preferredDoc &&\n\t\t\t\tcontains( preferredDoc, a ) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t// two documents; shallow comparisons work.\n\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\tif ( b == document || b.ownerDocument == preferredDoc &&\n\t\t\t\tcontains( preferredDoc, b ) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Maintain original order\n\t\t\treturn sortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\t\t}\n\n\t\treturn compare & 4 ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\tif ( !aup || !bup ) {\n\n\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t// two documents; shallow comparisons work.\n\t\t\t/* eslint-disable eqeqeq */\n\t\t\treturn a == document ? -1 :\n\t\t\t\tb == document ? 1 :\n\t\t\t\t/* eslint-enable eqeqeq */\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( ( cur = cur.parentNode ) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( ( cur = cur.parentNode ) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[ i ] === bp[ i ] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[ i ], bp[ i ] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t// two documents; shallow comparisons work.\n\t\t\t/* eslint-disable eqeqeq */\n\t\t\tap[ i ] == preferredDoc ? -1 :\n\t\t\tbp[ i ] == preferredDoc ? 1 :\n\t\t\t/* eslint-enable eqeqeq */\n\t\t\t0;\n\t};\n\n\treturn document;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\tsetDocument( elem );\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t!nonnativeSelectorCache[ expr + \" \" ] &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\n\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t// fragment in IE 9\n\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch ( e ) {\n\t\t\tnonnativeSelectorCache( expr, true );\n\t\t}\n\t}\n\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\n\t// Set document vars if needed\n\t// Support: IE 11+, Edge 17 - 18+\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t// two documents; shallow comparisons work.\n\t// eslint-disable-next-line eqeqeq\n\tif ( ( context.ownerDocument || context ) != document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\n\t// Set document vars if needed\n\t// Support: IE 11+, Edge 17 - 18+\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t// two documents; shallow comparisons work.\n\t// eslint-disable-next-line eqeqeq\n\tif ( ( elem.ownerDocument || elem ) != document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val !== undefined ?\n\t\tval :\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t( val = elem.getAttributeNode( name ) ) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull;\n};\n\nSizzle.escape = function( sel ) {\n\treturn ( sel + \"\" ).replace( rcssescape, fcssescape );\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( ( elem = results[ i++ ] ) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\t// Clear input after sorting to release objects\n\t// See https://github.com/jquery/sizzle/pull/225\n\tsortInput = null;\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( ( node = elem[ i++ ] ) ) {\n\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[ 1 ] = match[ 1 ].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[ 3 ] = ( match[ 3 ] || match[ 4 ] ||\n\t\t\t\tmatch[ 5 ] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[ 2 ] === \"~=\" ) {\n\t\t\t\tmatch[ 3 ] = \" \" + match[ 3 ] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[ 1 ] = match[ 1 ].toLowerCase();\n\n\t\t\tif ( match[ 1 ].slice( 0, 3 ) === \"nth\" ) {\n\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[ 3 ] ) {\n\t\t\t\t\tSizzle.error( match[ 0 ] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[ 4 ] = +( match[ 4 ] ?\n\t\t\t\t\tmatch[ 5 ] + ( match[ 6 ] || 1 ) :\n\t\t\t\t\t2 * ( match[ 3 ] === \"even\" || match[ 3 ] === \"odd\" ) );\n\t\t\t\tmatch[ 5 ] = +( ( match[ 7 ] + match[ 8 ] ) || match[ 3 ] === \"odd\" );\n\n\t\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[ 3 ] ) {\n\t\t\t\tSizzle.error( match[ 0 ] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[ 6 ] && match[ 2 ];\n\n\t\t\tif ( matchExpr[ \"CHILD\" ].test( match[ 0 ] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[ 3 ] ) {\n\t\t\t\tmatch[ 2 ] = match[ 4 ] || match[ 5 ] || \"\";\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t( excess = tokenize( unquoted, true ) ) &&\n\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t( excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length ) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[ 0 ] = match[ 0 ].slice( 0, excess );\n\t\t\t\tmatch[ 2 ] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() {\n\t\t\t\t\treturn true;\n\t\t\t\t} :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t( pattern = new RegExp( \"(^|\" + whitespace +\n\t\t\t\t\t\")\" + className + \"(\" + whitespace + \"|$)\" ) ) && classCache(\n\t\t\t\t\t\tclassName, function( elem ) {\n\t\t\t\t\t\t\treturn pattern.test(\n\t\t\t\t\t\t\t\ttypeof elem.className === \"string\" && elem.className ||\n\t\t\t\t\t\t\t\ttypeof elem.getAttribute !== \"undefined\" &&\n\t\t\t\t\t\t\t\t\telem.getAttribute( \"class\" ) ||\n\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t);\n\t\t\t\t} );\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\t/* eslint-disable max-len */\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t\t/* eslint-enable max-len */\n\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, _argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, _context, xml ) {\n\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType,\n\t\t\t\t\t\tdiff = false;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( ( node = node[ dir ] ) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\n\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\n\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\tnode = parent;\n\t\t\t\t\t\t\touterCache = node[ expando ] || ( node[ expando ] = {} );\n\n\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t( outerCache[ node.uniqueID ] = {} );\n\n\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( ( node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t( diff = nodeIndex = 0 ) || start.pop() ) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t\tif ( useCache ) {\n\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || ( node[ expando ] = {} );\n\n\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t( outerCache[ node.uniqueID ] = {} );\n\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\t\tdiff = nodeIndex;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// xml :nth-child(...)\n\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t\tif ( diff === false ) {\n\n\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\t\twhile ( ( node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t\t( diff = nodeIndex = 0 ) || start.pop() ) ) {\n\n\t\t\t\t\t\t\t\t\tif ( ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\n\t\t\t\t\t\t\t\t\t\t++diff ) {\n\n\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t( node[ expando ] = {} );\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t( outerCache[ node.uniqueID ] = {} );\n\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction( function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[ i ] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[ i ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t} ) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction( function( selector ) {\n\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction( function( seed, matches, _context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( ( elem = unmatched[ i ] ) ) {\n\t\t\t\t\t\t\tseed[ i ] = !( matches[ i ] = elem );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} ) :\n\t\t\t\tfunction( elem, _context, xml ) {\n\t\t\t\t\tinput[ 0 ] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\n\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\tinput[ 0 ] = null;\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t} ),\n\n\t\t\"has\": markFunction( function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t} ),\n\n\t\t\"contains\": markFunction( function( text ) {\n\t\t\ttext = text.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t} ),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test( lang || \"\" ) ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( ( elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute( \"xml:lang\" ) || elem.getAttribute( \"lang\" ) ) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( ( elem = elem.parentNode ) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t} ),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement &&\n\t\t\t\t( !document.hasFocus || document.hasFocus() ) &&\n\t\t\t\t!!( elem.type || elem.href || ~elem.tabIndex );\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": createDisabledPseudo( false ),\n\t\t\"disabled\": createDisabledPseudo( true ),\n\n\t\t\"checked\": function( elem ) {\n\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn ( nodeName === \"input\" && !!elem.checked ) ||\n\t\t\t\t( nodeName === \"option\" && !!elem.selected );\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\t// eslint-disable-next-line no-unused-expressions\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[ \"empty\" ]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\n\t\t\t\t// Support: IE<8\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t( ( attr = elem.getAttribute( \"type\" ) ) == null ||\n\t\t\t\t\tattr.toLowerCase() === \"text\" );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo( function() {\n\t\t\treturn [ 0 ];\n\t\t} ),\n\n\t\t\"last\": createPositionalPseudo( function( _matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t} ),\n\n\t\t\"eq\": createPositionalPseudo( function( _matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t} ),\n\n\t\t\"even\": createPositionalPseudo( function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t} ),\n\n\t\t\"odd\": createPositionalPseudo( function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t} ),\n\n\t\t\"lt\": createPositionalPseudo( function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ?\n\t\t\t\targument + length :\n\t\t\t\targument > length ?\n\t\t\t\t\tlength :\n\t\t\t\t\targument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t} ),\n\n\t\t\"gt\": createPositionalPseudo( function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t} )\n\t}\n};\n\nExpr.pseudos[ \"nth\" ] = Expr.pseudos[ \"eq\" ];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || ( match = rcomma.exec( soFar ) ) ) {\n\t\t\tif ( match ) {\n\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[ 0 ].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( ( tokens = [] ) );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( ( match = rcombinators.exec( soFar ) ) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push( {\n\t\t\t\tvalue: matched,\n\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[ 0 ].replace( rtrim, \" \" )\n\t\t\t} );\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( ( match = matchExpr[ type ].exec( soFar ) ) && ( !preFilters[ type ] ||\n\t\t\t\t( match = preFilters[ type ]( match ) ) ) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push( {\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t} );\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n};\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[ i ].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tskip = combinator.next,\n\t\tkey = skip || dir,\n\t\tcheckNonElements = base && key === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( ( elem = elem[ dir ] ) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar oldCache, uniqueCache, outerCache,\n\t\t\t\tnewCache = [ dirruns, doneName ];\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( ( elem = elem[ dir ] ) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( ( elem = elem[ dir ] ) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || ( elem[ expando ] = {} );\n\n\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] ||\n\t\t\t\t\t\t\t( outerCache[ elem.uniqueID ] = {} );\n\n\t\t\t\t\t\tif ( skip && skip === elem.nodeName.toLowerCase() ) {\n\t\t\t\t\t\t\telem = elem[ dir ] || elem;\n\t\t\t\t\t\t} else if ( ( oldCache = uniqueCache[ key ] ) &&\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\treturn ( newCache[ 2 ] = oldCache[ 2 ] );\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\tuniqueCache[ key ] = newCache;\n\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\tif ( ( newCache[ 2 ] = matcher( elem, context, xml ) ) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[ i ]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[ 0 ];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[ i ], results );\n\t}\n\treturn results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( ( elem = unmatched[ i ] ) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction( function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts(\n\t\t\t\tselector || \"*\",\n\t\t\t\tcontext.nodeType ? [ context ] : context,\n\t\t\t\t[]\n\t\t\t),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( ( elem = temp[ i ] ) ) {\n\t\t\t\t\tmatcherOut[ postMap[ i ] ] = !( matcherIn[ postMap[ i ] ] = elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( ( elem = matcherOut[ i ] ) ) {\n\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( ( matcherIn[ i ] = elem ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, ( matcherOut = [] ), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( ( elem = matcherOut[ i ] ) &&\n\t\t\t\t\t\t( temp = postFinder ? indexOf( seed, elem ) : preMap[ i ] ) > -1 ) {\n\n\t\t\t\t\t\tseed[ temp ] = !( results[ temp ] = elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t} );\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[ 0 ].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[ \" \" ],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t( checkContext = context ).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\n\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\tcheckContext = null;\n\t\t\treturn ret;\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( ( matcher = Expr.relative[ tokens[ i ].type ] ) ) {\n\t\t\tmatchers = [ addCombinator( elementMatcher( matchers ), matcher ) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[ i ].type ].apply( null, tokens[ i ].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[ j ].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\n\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\ttokens\n\t\t\t\t\t\t.slice( 0, i - 1 )\n\t\t\t\t\t\t.concat( { value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" } )\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( ( tokens = tokens.slice( j ) ) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\tvar bySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\tsetMatched = [],\n\t\t\t\tcontextBackup = outermostContext,\n\n\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\telems = seed || byElement && Expr.find[ \"TAG\" ]( \"*\", outermost ),\n\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = ( dirruns += contextBackup == null ? 1 : Math.random() || 0.1 ),\n\t\t\t\tlen = elems.length;\n\n\t\t\tif ( outermost ) {\n\n\t\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t\t// two documents; shallow comparisons work.\n\t\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\t\toutermostContext = context == document || context || outermost;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Support: IE<9, Safari\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\tfor ( ; i !== len && ( elem = elems[ i ] ) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\n\t\t\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t\t\t// two documents; shallow comparisons work.\n\t\t\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\t\t\tif ( !context && elem.ownerDocument != document ) {\n\t\t\t\t\t\tsetDocument( elem );\n\t\t\t\t\t\txml = !documentIsHTML;\n\t\t\t\t\t}\n\t\t\t\t\twhile ( ( matcher = elementMatchers[ j++ ] ) ) {\n\t\t\t\t\t\tif ( matcher( elem, context || document, xml ) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( ( elem = !matcher && elem ) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\n\t\t\t// makes the latter nonnegative.\n\t\t\tmatchedCount += i;\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n\t\t\t// no element matchers and no seed.\n\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n\t\t\t// numerically zero.\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( ( matcher = setMatchers[ j++ ] ) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !( unmatched[ i ] || setMatched[ i ] ) ) {\n\t\t\t\t\t\t\t\tsetMatched[ i ] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !match ) {\n\t\t\tmatch = tokenize( selector );\n\t\t}\n\t\ti = match.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( match[ i ] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache(\n\t\t\tselector,\n\t\t\tmatcherFromGroupMatchers( elementMatchers, setMatchers )\n\t\t);\n\n\t\t// Save selector and tokenization\n\t\tcached.selector = selector;\n\t}\n\treturn cached;\n};\n\n/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nselect = Sizzle.select = function( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tcompiled = typeof selector === \"function\" && selector,\n\t\tmatch = !seed && tokenize( ( selector = compiled.selector || selector ) );\n\n\tresults = results || [];\n\n\t// Try to minimize operations if there is only one selector in the list and no seed\n\t// (the latter of which guarantees us context)\n\tif ( match.length === 1 ) {\n\n\t\t// Reduce context if the leading compound selector is an ID\n\t\ttokens = match[ 0 ] = match[ 0 ].slice( 0 );\n\t\tif ( tokens.length > 2 && ( token = tokens[ 0 ] ).type === \"ID\" &&\n\t\t\tcontext.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[ 1 ].type ] ) {\n\n\t\t\tcontext = ( Expr.find[ \"ID\" ]( token.matches[ 0 ]\n\t\t\t\t.replace( runescape, funescape ), context ) || [] )[ 0 ];\n\t\t\tif ( !context ) {\n\t\t\t\treturn results;\n\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t} else if ( compiled ) {\n\t\t\t\tcontext = context.parentNode;\n\t\t\t}\n\n\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t}\n\n\t\t// Fetch a seed set for right-to-left matching\n\t\ti = matchExpr[ \"needsContext\" ].test( selector ) ? 0 : tokens.length;\n\t\twhile ( i-- ) {\n\t\t\ttoken = tokens[ i ];\n\n\t\t\t// Abort if we hit a combinator\n\t\t\tif ( Expr.relative[ ( type = token.type ) ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( ( find = Expr.find[ type ] ) ) {\n\n\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\tif ( ( seed = find(\n\t\t\t\t\ttoken.matches[ 0 ].replace( runescape, funescape ),\n\t\t\t\t\trsibling.test( tokens[ 0 ].type ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext\n\t\t\t\t) ) ) {\n\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function if one is not provided\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\t( compiled || compile( selector, match ) )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\n\t);\n\treturn results;\n};\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split( \"\" ).sort( sortOrder ).join( \"\" ) === expando;\n\n// Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert( function( el ) {\n\n\t// Should return 1, but returns 4 (following)\n\treturn el.compareDocumentPosition( document.createElement( \"fieldset\" ) ) & 1;\n} );\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert( function( el ) {\n\tel.innerHTML = \"<a href='#'></a>\";\n\treturn el.firstChild.getAttribute( \"href\" ) === \"#\";\n} ) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t} );\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert( function( el ) {\n\tel.innerHTML = \"<input/>\";\n\tel.firstChild.setAttribute( \"value\", \"\" );\n\treturn el.firstChild.getAttribute( \"value\" ) === \"\";\n} ) ) {\n\taddHandle( \"value\", function( elem, _name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t} );\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert( function( el ) {\n\treturn el.getAttribute( \"disabled\" ) == null;\n} ) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t( val = elem.getAttributeNode( name ) ) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\t\tnull;\n\t\t}\n\t} );\n}\n\nreturn Sizzle;\n\n} )( window );\n\n\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\n\n// Deprecated\njQuery.expr[ \":\" ] = jQuery.expr.pseudos;\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\njQuery.escapeSelector = Sizzle.escape;\n\n\n\n\nvar dir = function( elem, dir, until ) {\n\tvar matched = [],\n\t\ttruncate = until !== undefined;\n\n\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\n\t\tif ( elem.nodeType === 1 ) {\n\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmatched.push( elem );\n\t\t}\n\t}\n\treturn matched;\n};\n\n\nvar siblings = function( n, elem ) {\n\tvar matched = [];\n\n\tfor ( ; n; n = n.nextSibling ) {\n\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\tmatched.push( n );\n\t\t}\n\t}\n\n\treturn matched;\n};\n\n\nvar rneedsContext = jQuery.expr.match.needsContext;\n\n\n\nfunction nodeName( elem, name ) {\n\n  return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\n};\nvar rsingleTag = ( /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i );\n\n\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t} );\n\t}\n\n\t// Single element\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t} );\n\t}\n\n\t// Arraylike of elements (jQuery, arguments, Array)\n\tif ( typeof qualifier !== \"string\" ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\n\t\t} );\n\t}\n\n\t// Filtered directly for both simple and complex selectors\n\treturn jQuery.filter( qualifier, elements, not );\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\tif ( elems.length === 1 && elem.nodeType === 1 ) {\n\t\treturn jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];\n\t}\n\n\treturn jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\treturn elem.nodeType === 1;\n\t} ) );\n};\n\njQuery.fn.extend( {\n\tfind: function( selector ) {\n\t\tvar i, ret,\n\t\t\tlen = this.length,\n\t\t\tself = this;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ) );\n\t\t}\n\n\t\tret = this.pushStack( [] );\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\treturn len > 1 ? jQuery.uniqueSort( ret ) : ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], false ) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], true ) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n} );\n\n\n// Initialize a jQuery object\n\n\n// A central reference to the root jQuery(document)\nvar rootjQuery,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\t// Shortcut simple #id case for speed\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\n\n\tinit = jQuery.fn.init = function( selector, context, root ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Method init() accepts an alternate rootjQuery\n\t\t// so migrate can support jQuery.sub (gh-2101)\n\t\troot = root || rootjQuery;\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector[ 0 ] === \"<\" &&\n\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\n\t\t\t\tselector.length >= 3 ) {\n\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[ 1 ] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\n\n\t\t\t\t\t// Option to run scripts is true for back-compat\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[ 1 ],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[ 2 ] );\n\n\t\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis[ 0 ] = elem;\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || root ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis[ 0 ] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( isFunction( selector ) ) {\n\t\t\treturn root.ready !== undefined ?\n\t\t\t\troot.ready( selector ) :\n\n\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\tselector( jQuery );\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t};\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery( document );\n\n\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\n\t// Methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.fn.extend( {\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter( function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\ttargets = typeof selectors !== \"string\" && jQuery( selectors );\n\n\t\t// Positional selectors never match, since there's no _selection_ context\n\t\tif ( !rneedsContext.test( selectors ) ) {\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\n\n\t\t\t\t\t// Always skip document fragments\n\t\t\t\t\tif ( cur.nodeType < 11 && ( targets ?\n\t\t\t\t\t\ttargets.index( cur ) > -1 :\n\n\t\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\n\n\t\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within the set\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// Index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.uniqueSort(\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t)\n\t\t);\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\n\t\t);\n\t}\n} );\n\nfunction sibling( cur, dir ) {\n\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\n\treturn cur;\n}\n\njQuery.each( {\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, _i, until ) {\n\t\treturn dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, _i, until ) {\n\t\treturn dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, _i, until ) {\n\t\treturn dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn siblings( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n\t\tif ( elem.contentDocument != null &&\n\n\t\t\t// Support: IE 11+\n\t\t\t// <object> elements with no `data` attribute has an object\n\t\t\t// `contentDocument` with a `null` prototype.\n\t\t\tgetProto( elem.contentDocument ) ) {\n\n\t\t\treturn elem.contentDocument;\n\t\t}\n\n\t\t// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\n\t\t// Treat the template element as a regular one in browsers that\n\t\t// don't support it.\n\t\tif ( nodeName( elem, \"template\" ) ) {\n\t\t\telem = elem.content || elem;\n\t\t}\n\n\t\treturn jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.uniqueSort( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n} );\nvar rnothtmlwhite = ( /[^\\x20\\t\\r\\n\\f]+/g );\n\n\n\n// Convert String-formatted options into Object-formatted ones\nfunction createOptions( options ) {\n\tvar object = {};\n\tjQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t} );\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\tcreateOptions( options ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Flag to know if list is currently firing\n\t\tfiring,\n\n\t\t// Last fire value for non-forgettable lists\n\t\tmemory,\n\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\n\t\t// Flag to prevent firing\n\t\tlocked,\n\n\t\t// Actual callback list\n\t\tlist = [],\n\n\t\t// Queue of execution data for repeatable lists\n\t\tqueue = [],\n\n\t\t// Index of currently firing callback (modified by add/remove as needed)\n\t\tfiringIndex = -1,\n\n\t\t// Fire callbacks\n\t\tfire = function() {\n\n\t\t\t// Enforce single-firing\n\t\t\tlocked = locked || options.once;\n\n\t\t\t// Execute callbacks for all pending executions,\n\t\t\t// respecting firingIndex overrides and runtime changes\n\t\t\tfired = firing = true;\n\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\n\t\t\t\tmemory = queue.shift();\n\t\t\t\twhile ( ++firingIndex < list.length ) {\n\n\t\t\t\t\t// Run callback and check for early termination\n\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\n\t\t\t\t\t\toptions.stopOnFalse ) {\n\n\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\n\t\t\t\t\t\tfiringIndex = list.length;\n\t\t\t\t\t\tmemory = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Forget the data if we're done with it\n\t\t\tif ( !options.memory ) {\n\t\t\t\tmemory = false;\n\t\t\t}\n\n\t\t\tfiring = false;\n\n\t\t\t// Clean up if we're done firing for good\n\t\t\tif ( locked ) {\n\n\t\t\t\t// Keep an empty list if we have data for future add calls\n\t\t\t\tif ( memory ) {\n\t\t\t\t\tlist = [];\n\n\t\t\t\t// Otherwise, this object is spent\n\t\t\t\t} else {\n\t\t\t\t\tlist = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// Actual Callbacks object\n\t\tself = {\n\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\n\t\t\t\t\t// If we have memory from a past run, we should fire after adding\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfiringIndex = list.length - 1;\n\t\t\t\t\t\tqueue.push( memory );\n\t\t\t\t\t}\n\n\t\t\t\t\t( function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tif ( isFunction( arg ) ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && toType( arg ) !== \"string\" ) {\n\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t} )( arguments );\n\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\tvar index;\n\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\tlist.splice( index, 1 );\n\n\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ?\n\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\n\t\t\t\t\tlist.length > 0;\n\t\t\t},\n\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Disable .fire and .add\n\t\t\t// Abort any current/pending executions\n\t\t\t// Clear all callbacks and values\n\t\t\tdisable: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tlist = memory = \"\";\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\n\t\t\t// Disable .fire\n\t\t\t// Also disable .add unless we have memory (since it would have no effect)\n\t\t\t// Abort any pending executions\n\t\t\tlock: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tif ( !memory && !firing ) {\n\t\t\t\t\tlist = memory = \"\";\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tlocked: function() {\n\t\t\t\treturn !!locked;\n\t\t\t},\n\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( !locked ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tqueue.push( args );\n\t\t\t\t\tif ( !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\n\nfunction Identity( v ) {\n\treturn v;\n}\nfunction Thrower( ex ) {\n\tthrow ex;\n}\n\nfunction adoptValue( value, resolve, reject, noValue ) {\n\tvar method;\n\n\ttry {\n\n\t\t// Check for promise aspect first to privilege synchronous behavior\n\t\tif ( value && isFunction( ( method = value.promise ) ) ) {\n\t\t\tmethod.call( value ).done( resolve ).fail( reject );\n\n\t\t// Other thenables\n\t\t} else if ( value && isFunction( ( method = value.then ) ) ) {\n\t\t\tmethod.call( value, resolve, reject );\n\n\t\t// Other non-thenables\n\t\t} else {\n\n\t\t\t// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\n\t\t\t// * false: [ value ].slice( 0 ) => resolve( value )\n\t\t\t// * true: [ value ].slice( 1 ) => resolve()\n\t\t\tresolve.apply( undefined, [ value ].slice( noValue ) );\n\t\t}\n\n\t// For Promises/A+, convert exceptions into rejections\n\t// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n\t// Deferred#then to conditionally suppress rejection.\n\t} catch ( value ) {\n\n\t\t// Support: Android 4.0 only\n\t\t// Strict mode functions invoked without .call/.apply get global-object context\n\t\treject.apply( undefined, [ value ] );\n\t}\n}\n\njQuery.extend( {\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\n\t\t\t\t// action, add listener, callbacks,\n\t\t\t\t// ... .then handlers, argument index, [final state]\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"memory\" ), 2 ],\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 0, \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 1, \"rejected\" ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\t\"catch\": function( fn ) {\n\t\t\t\t\treturn promise.then( null, fn );\n\t\t\t\t},\n\n\t\t\t\t// Keep pipe for back-compat\n\t\t\t\tpipe: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( _i, tuple ) {\n\n\t\t\t\t\t\t\t// Map tuples (progress, done, fail) to arguments (done, fail, progress)\n\t\t\t\t\t\t\tvar fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];\n\n\t\t\t\t\t\t\t// deferred.progress(function() { bind to newDefer or newDefer.notify })\n\t\t\t\t\t\t\t// deferred.done(function() { bind to newDefer or newDefer.resolve })\n\t\t\t\t\t\t\t// deferred.fail(function() { bind to newDefer or newDefer.reject })\n\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\n\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\t\t\t\tthen: function( onFulfilled, onRejected, onProgress ) {\n\t\t\t\t\tvar maxDepth = 0;\n\t\t\t\t\tfunction resolve( depth, deferred, handler, special ) {\n\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\tvar that = this,\n\t\t\t\t\t\t\t\targs = arguments,\n\t\t\t\t\t\t\t\tmightThrow = function() {\n\t\t\t\t\t\t\t\t\tvar returned, then;\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.3\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-59\n\t\t\t\t\t\t\t\t\t// Ignore double-resolution attempts\n\t\t\t\t\t\t\t\t\tif ( depth < maxDepth ) {\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturned = handler.apply( that, args );\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.1\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-48\n\t\t\t\t\t\t\t\t\tif ( returned === deferred.promise() ) {\n\t\t\t\t\t\t\t\t\t\tthrow new TypeError( \"Thenable self-resolution\" );\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ sections 2.3.3.1, 3.5\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-54\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-75\n\t\t\t\t\t\t\t\t\t// Retrieve `then` only once\n\t\t\t\t\t\t\t\t\tthen = returned &&\n\n\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.4\n\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-64\n\t\t\t\t\t\t\t\t\t\t// Only check objects and functions for thenability\n\t\t\t\t\t\t\t\t\t\t( typeof returned === \"object\" ||\n\t\t\t\t\t\t\t\t\t\t\ttypeof returned === \"function\" ) &&\n\t\t\t\t\t\t\t\t\t\treturned.then;\n\n\t\t\t\t\t\t\t\t\t// Handle a returned thenable\n\t\t\t\t\t\t\t\t\tif ( isFunction( then ) ) {\n\n\t\t\t\t\t\t\t\t\t\t// Special processors (notify) just wait for resolution\n\t\t\t\t\t\t\t\t\t\tif ( special ) {\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special )\n\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t// Normal processors (resolve) also hook into progress\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\t// ...and disregard older resolution values\n\t\t\t\t\t\t\t\t\t\t\tmaxDepth++;\n\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdeferred.notifyWith )\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Handle all other returned values\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\tif ( handler !== Identity ) {\n\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\targs = [ returned ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// Process the value(s)\n\t\t\t\t\t\t\t\t\t\t// Default process is resolve\n\t\t\t\t\t\t\t\t\t\t( special || deferred.resolveWith )( that, args );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t// Only normal processors (resolve) catch and reject exceptions\n\t\t\t\t\t\t\t\tprocess = special ?\n\t\t\t\t\t\t\t\t\tmightThrow :\n\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\tmightThrow();\n\t\t\t\t\t\t\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t\t\t\t\t\t\tif ( jQuery.Deferred.exceptionHook ) {\n\t\t\t\t\t\t\t\t\t\t\t\tjQuery.Deferred.exceptionHook( e,\n\t\t\t\t\t\t\t\t\t\t\t\t\tprocess.stackTrace );\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.4.1\n\t\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-61\n\t\t\t\t\t\t\t\t\t\t\t// Ignore post-resolution exceptions\n\t\t\t\t\t\t\t\t\t\t\tif ( depth + 1 >= maxDepth ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\t\t\tif ( handler !== Thrower ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\t\t\targs = [ e ];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tdeferred.rejectWith( that, args );\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.1\n\t\t\t\t\t\t\t// https://promisesaplus.com/#point-57\n\t\t\t\t\t\t\t// Re-resolve promises immediately to dodge false rejection from\n\t\t\t\t\t\t\t// subsequent errors\n\t\t\t\t\t\t\tif ( depth ) {\n\t\t\t\t\t\t\t\tprocess();\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// Call an optional hook to record the stack, in case of exception\n\t\t\t\t\t\t\t\t// since it's otherwise lost when execution goes async\n\t\t\t\t\t\t\t\tif ( jQuery.Deferred.getStackHook ) {\n\t\t\t\t\t\t\t\t\tprocess.stackTrace = jQuery.Deferred.getStackHook();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twindow.setTimeout( process );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\n\t\t\t\t\t\t// progress_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 0 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onProgress ) ?\n\t\t\t\t\t\t\t\t\tonProgress :\n\t\t\t\t\t\t\t\t\tIdentity,\n\t\t\t\t\t\t\t\tnewDefer.notifyWith\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// fulfilled_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 1 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onFulfilled ) ?\n\t\t\t\t\t\t\t\t\tonFulfilled :\n\t\t\t\t\t\t\t\t\tIdentity\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// rejected_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 2 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onRejected ) ?\n\t\t\t\t\t\t\t\t\tonRejected :\n\t\t\t\t\t\t\t\t\tThrower\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 5 ];\n\n\t\t\t// promise.progress = list.add\n\t\t\t// promise.done = list.add\n\t\t\t// promise.fail = list.add\n\t\t\tpromise[ tuple[ 1 ] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add(\n\t\t\t\t\tfunction() {\n\n\t\t\t\t\t\t// state = \"resolved\" (i.e., fulfilled)\n\t\t\t\t\t\t// state = \"rejected\"\n\t\t\t\t\t\tstate = stateString;\n\t\t\t\t\t},\n\n\t\t\t\t\t// rejected_callbacks.disable\n\t\t\t\t\t// fulfilled_callbacks.disable\n\t\t\t\t\ttuples[ 3 - i ][ 2 ].disable,\n\n\t\t\t\t\t// rejected_handlers.disable\n\t\t\t\t\t// fulfilled_handlers.disable\n\t\t\t\t\ttuples[ 3 - i ][ 3 ].disable,\n\n\t\t\t\t\t// progress_callbacks.lock\n\t\t\t\t\ttuples[ 0 ][ 2 ].lock,\n\n\t\t\t\t\t// progress_handlers.lock\n\t\t\t\t\ttuples[ 0 ][ 3 ].lock\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// progress_handlers.fire\n\t\t\t// fulfilled_handlers.fire\n\t\t\t// rejected_handlers.fire\n\t\t\tlist.add( tuple[ 3 ].fire );\n\n\t\t\t// deferred.notify = function() { deferred.notifyWith(...) }\n\t\t\t// deferred.resolve = function() { deferred.resolveWith(...) }\n\t\t\t// deferred.reject = function() { deferred.rejectWith(...) }\n\t\t\tdeferred[ tuple[ 0 ] ] = function() {\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? undefined : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\t// deferred.notifyWith = list.fireWith\n\t\t\t// deferred.resolveWith = list.fireWith\n\t\t\t// deferred.rejectWith = list.fireWith\n\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\n\t\t} );\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( singleValue ) {\n\t\tvar\n\n\t\t\t// count of uncompleted subordinates\n\t\t\tremaining = arguments.length,\n\n\t\t\t// count of unprocessed arguments\n\t\t\ti = remaining,\n\n\t\t\t// subordinate fulfillment data\n\t\t\tresolveContexts = Array( i ),\n\t\t\tresolveValues = slice.call( arguments ),\n\n\t\t\t// the master Deferred\n\t\t\tmaster = jQuery.Deferred(),\n\n\t\t\t// subordinate callback factory\n\t\t\tupdateFunc = function( i ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tresolveContexts[ i ] = this;\n\t\t\t\t\tresolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\tif ( !( --remaining ) ) {\n\t\t\t\t\t\tmaster.resolveWith( resolveContexts, resolveValues );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\n\t\t// Single- and empty arguments are adopted like Promise.resolve\n\t\tif ( remaining <= 1 ) {\n\t\t\tadoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject,\n\t\t\t\t!remaining );\n\n\t\t\t// Use .then() to unwrap secondary thenables (cf. gh-3000)\n\t\t\tif ( master.state() === \"pending\" ||\n\t\t\t\tisFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {\n\n\t\t\t\treturn master.then();\n\t\t\t}\n\t\t}\n\n\t\t// Multiple arguments are aggregated like Promise.all array elements\n\t\twhile ( i-- ) {\n\t\t\tadoptValue( resolveValues[ i ], updateFunc( i ), master.reject );\n\t\t}\n\n\t\treturn master.promise();\n\t}\n} );\n\n\n// These usually indicate a programmer mistake during development,\n// warn about them ASAP rather than swallowing them by default.\nvar rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n\njQuery.Deferred.exceptionHook = function( error, stack ) {\n\n\t// Support: IE 8 - 9 only\n\t// Console exists when dev tools are open, which can happen at any time\n\tif ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {\n\t\twindow.console.warn( \"jQuery.Deferred exception: \" + error.message, error.stack, stack );\n\t}\n};\n\n\n\n\njQuery.readyException = function( error ) {\n\twindow.setTimeout( function() {\n\t\tthrow error;\n\t} );\n};\n\n\n\n\n// The deferred used on DOM ready\nvar readyList = jQuery.Deferred();\n\njQuery.fn.ready = function( fn ) {\n\n\treadyList\n\t\t.then( fn )\n\n\t\t// Wrap jQuery.readyException in a function so that the lookup\n\t\t// happens at the time of error handling instead of callback\n\t\t// registration.\n\t\t.catch( function( error ) {\n\t\t\tjQuery.readyException( error );\n\t\t} );\n\n\treturn this;\n};\n\njQuery.extend( {\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\t}\n} );\n\njQuery.ready.then = readyList.then;\n\n// The ready event handler and self cleanup method\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\n\twindow.removeEventListener( \"load\", completed );\n\tjQuery.ready();\n}\n\n// Catch cases where $(document).ready() is called\n// after the browser event has already occurred.\n// Support: IE <=9 - 10 only\n// Older IE sometimes signals \"interactive\" too soon\nif ( document.readyState === \"complete\" ||\n\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n\n\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\twindow.setTimeout( jQuery.ready );\n\n} else {\n\n\t// Use the handy event callback\n\tdocument.addEventListener( \"DOMContentLoaded\", completed );\n\n\t// A fallback to window.onload, that will always work\n\twindow.addEventListener( \"load\", completed );\n}\n\n\n\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( toType( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, _key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn(\n\t\t\t\t\telems[ i ], key, raw ?\n\t\t\t\t\tvalue :\n\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( chainable ) {\n\t\treturn elems;\n\t}\n\n\t// Gets\n\tif ( bulk ) {\n\t\treturn fn.call( elems );\n\t}\n\n\treturn len ? fn( elems[ 0 ], key ) : emptyGet;\n};\n\n\n// Matches dashed string for camelizing\nvar rmsPrefix = /^-ms-/,\n\trdashAlpha = /-([a-z])/g;\n\n// Used by camelCase as callback to replace()\nfunction fcamelCase( _all, letter ) {\n\treturn letter.toUpperCase();\n}\n\n// Convert dashed to camelCase; used by the css and data modules\n// Support: IE <=9 - 11, Edge 12 - 15\n// Microsoft forgot to hump their vendor prefix (#9572)\nfunction camelCase( string ) {\n\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n}\nvar acceptData = function( owner ) {\n\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n};\n\n\n\n\nfunction Data() {\n\tthis.expando = jQuery.expando + Data.uid++;\n}\n\nData.uid = 1;\n\nData.prototype = {\n\n\tcache: function( owner ) {\n\n\t\t// Check if the owner object already has a cache\n\t\tvar value = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !value ) {\n\t\t\tvalue = Object.create( null );\n\n\t\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t\t// but we should not, see #8335.\n\t\t\t// Always return an empty object.\n\t\t\tif ( acceptData( owner ) ) {\n\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t\t\t// use plain assignment\n\t\t\t\tif ( owner.nodeType ) {\n\t\t\t\t\towner[ this.expando ] = value;\n\n\t\t\t\t// Otherwise secure it in a non-enumerable property\n\t\t\t\t// configurable must be true to allow the property to be\n\t\t\t\t// deleted when data is removed\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\tcache = this.cache( owner );\n\n\t\t// Handle: [ owner, key, value ] args\n\t\t// Always use camelCase key (gh-2257)\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ camelCase( data ) ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\n\t\t\t// Copy the properties one-by-one to the cache object\n\t\t\tfor ( prop in data ) {\n\t\t\t\tcache[ camelCase( prop ) ] = data[ prop ];\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\treturn key === undefined ?\n\t\t\tthis.cache( owner ) :\n\n\t\t\t// Always use camelCase key (gh-2257)\n\t\t\towner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];\n\t},\n\taccess: function( owner, key, value ) {\n\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\n\n\t\t\treturn this.get( owner, key );\n\t\t}\n\n\t\t// When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i,\n\t\t\tcache = owner[ this.expando ];\n\n\t\tif ( cache === undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( key !== undefined ) {\n\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( Array.isArray( key ) ) {\n\n\t\t\t\t// If key is an array of keys...\n\t\t\t\t// We always set camelCase keys, so remove that.\n\t\t\t\tkey = key.map( camelCase );\n\t\t\t} else {\n\t\t\t\tkey = camelCase( key );\n\n\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\tkey = key in cache ?\n\t\t\t\t\t[ key ] :\n\t\t\t\t\t( key.match( rnothtmlwhite ) || [] );\n\t\t\t}\n\n\t\t\ti = key.length;\n\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ key[ i ] ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if there's no more data\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\n\n\t\t\t// Support: Chrome <=35 - 45\n\t\t\t// Webkit & Blink performance suffers when deleting properties\n\t\t\t// from DOM nodes, so set to undefined instead\n\t\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n\t\t\tif ( owner.nodeType ) {\n\t\t\t\towner[ this.expando ] = undefined;\n\t\t\t} else {\n\t\t\t\tdelete owner[ this.expando ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\tvar cache = owner[ this.expando ];\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\n\t}\n};\nvar dataPriv = new Data();\n\nvar dataUser = new Data();\n\n\n\n//\tImplementation Summary\n//\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n//\t2. Improve the module's maintainability by reducing the storage\n//\t\tpaths to a single mechanism.\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /[A-Z]/g;\n\nfunction getData( data ) {\n\tif ( data === \"true\" ) {\n\t\treturn true;\n\t}\n\n\tif ( data === \"false\" ) {\n\t\treturn false;\n\t}\n\n\tif ( data === \"null\" ) {\n\t\treturn null;\n\t}\n\n\t// Only convert to a number if it doesn't change the string\n\tif ( data === +data + \"\" ) {\n\t\treturn +data;\n\t}\n\n\tif ( rbrace.test( data ) ) {\n\t\treturn JSON.parse( data );\n\t}\n\n\treturn data;\n}\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = getData( data );\n\t\t\t} catch ( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdataUser.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\n\njQuery.extend( {\n\thasData: function( elem ) {\n\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn dataUser.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdataUser.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to dataPriv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn dataPriv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdataPriv.remove( elem, name );\n\t}\n} );\n\njQuery.fn.extend( {\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[ 0 ],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = dataUser.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE 11 only\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = camelCase( name.slice( 5 ) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tdataUser.set( this, key );\n\t\t\t} );\n\t\t}\n\n\t\treturn access( this, function( value ) {\n\t\t\tvar data;\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// The key will always be camelCased in Data\n\t\t\t\tdata = dataUser.get( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tthis.each( function() {\n\n\t\t\t\t// We always store the camelCased key\n\t\t\t\tdataUser.set( this, key, value );\n\t\t\t} );\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each( function() {\n\t\t\tdataUser.remove( this, key );\n\t\t} );\n\t}\n} );\n\n\njQuery.extend( {\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = dataPriv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || Array.isArray( data ) ) {\n\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// Clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// Not public - generate a queueHooks object, or return the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\n\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t} )\n\t\t} );\n\t}\n} );\n\njQuery.fn.extend( {\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[ 0 ], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each( function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// Ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t} );\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t} );\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile ( i-- ) {\n\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n} );\nvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\n\nvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\n\n\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\nvar documentElement = document.documentElement;\n\n\n\n\tvar isAttached = function( elem ) {\n\t\t\treturn jQuery.contains( elem.ownerDocument, elem );\n\t\t},\n\t\tcomposed = { composed: true };\n\n\t// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only\n\t// Check attachment across shadow DOM boundaries when possible (gh-3504)\n\t// Support: iOS 10.0-10.2 only\n\t// Early iOS 10 versions support `attachShadow` but not `getRootNode`,\n\t// leading to errors. We need to check for `getRootNode`.\n\tif ( documentElement.getRootNode ) {\n\t\tisAttached = function( elem ) {\n\t\t\treturn jQuery.contains( elem.ownerDocument, elem ) ||\n\t\t\t\telem.getRootNode( composed ) === elem.ownerDocument;\n\t\t};\n\t}\nvar isHiddenWithinTree = function( elem, el ) {\n\n\t\t// isHiddenWithinTree might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\n\t\t// Inline style trumps all\n\t\treturn elem.style.display === \"none\" ||\n\t\t\telem.style.display === \"\" &&\n\n\t\t\t// Otherwise, check computed style\n\t\t\t// Support: Firefox <=43 - 45\n\t\t\t// Disconnected elements can have computed display: none, so first confirm that elem is\n\t\t\t// in the document.\n\t\t\tisAttached( elem ) &&\n\n\t\t\tjQuery.css( elem, \"display\" ) === \"none\";\n\t};\n\n\n\nfunction adjustCSS( elem, prop, valueParts, tween ) {\n\tvar adjusted, scale,\n\t\tmaxIterations = 20,\n\t\tcurrentValue = tween ?\n\t\t\tfunction() {\n\t\t\t\treturn tween.cur();\n\t\t\t} :\n\t\t\tfunction() {\n\t\t\t\treturn jQuery.css( elem, prop, \"\" );\n\t\t\t},\n\t\tinitial = currentValue(),\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t// Starting value computation is required for potential unit mismatches\n\t\tinitialInUnit = elem.nodeType &&\n\t\t\t( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\n\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\n\n\t\t// Support: Firefox <=54\n\t\t// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)\n\t\tinitial = initial / 2;\n\n\t\t// Trust units reported by jQuery.css\n\t\tunit = unit || initialInUnit[ 3 ];\n\n\t\t// Iteratively approximate from a nonzero starting point\n\t\tinitialInUnit = +initial || 1;\n\n\t\twhile ( maxIterations-- ) {\n\n\t\t\t// Evaluate and update our best guess (doubling guesses that zero out).\n\t\t\t// Finish if the scale equals or crosses 1 (making the old*new product non-positive).\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\t\t\tif ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {\n\t\t\t\tmaxIterations = 0;\n\t\t\t}\n\t\t\tinitialInUnit = initialInUnit / scale;\n\n\t\t}\n\n\t\tinitialInUnit = initialInUnit * 2;\n\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\n\t\t// Make sure we update the tween properties later on\n\t\tvalueParts = valueParts || [];\n\t}\n\n\tif ( valueParts ) {\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\n\n\t\t// Apply relative offset (+=/-=) if specified\n\t\tadjusted = valueParts[ 1 ] ?\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\n\t\t\t+valueParts[ 2 ];\n\t\tif ( tween ) {\n\t\t\ttween.unit = unit;\n\t\t\ttween.start = initialInUnit;\n\t\t\ttween.end = adjusted;\n\t\t}\n\t}\n\treturn adjusted;\n}\n\n\nvar defaultDisplayMap = {};\n\nfunction getDefaultDisplay( elem ) {\n\tvar temp,\n\t\tdoc = elem.ownerDocument,\n\t\tnodeName = elem.nodeName,\n\t\tdisplay = defaultDisplayMap[ nodeName ];\n\n\tif ( display ) {\n\t\treturn display;\n\t}\n\n\ttemp = doc.body.appendChild( doc.createElement( nodeName ) );\n\tdisplay = jQuery.css( temp, \"display\" );\n\n\ttemp.parentNode.removeChild( temp );\n\n\tif ( display === \"none\" ) {\n\t\tdisplay = \"block\";\n\t}\n\tdefaultDisplayMap[ nodeName ] = display;\n\n\treturn display;\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\t// Determine new display value for elements that need to change\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\n\t\t\t// Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n\t\t\t// check is required in this first loop unless we have a nonempty display value (either\n\t\t\t// inline or about-to-be-restored)\n\t\t\tif ( display === \"none\" ) {\n\t\t\t\tvalues[ index ] = dataPriv.get( elem, \"display\" ) || null;\n\t\t\t\tif ( !values[ index ] ) {\n\t\t\t\t\telem.style.display = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( elem.style.display === \"\" && isHiddenWithinTree( elem ) ) {\n\t\t\t\tvalues[ index ] = getDefaultDisplay( elem );\n\t\t\t}\n\t\t} else {\n\t\t\tif ( display !== \"none\" ) {\n\t\t\t\tvalues[ index ] = \"none\";\n\n\t\t\t\t// Remember what we're overwriting\n\t\t\t\tdataPriv.set( elem, \"display\", display );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of the elements in a second loop to avoid constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\tif ( values[ index ] != null ) {\n\t\t\telements[ index ].style.display = values[ index ];\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.fn.extend( {\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tif ( isHiddenWithinTree( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t} );\n\t}\n} );\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\n\nvar rtagName = ( /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i );\n\nvar rscriptType = ( /^$|^module$|\\/(?:java|ecma)script/i );\n\n\n\n( function() {\n\tvar fragment = document.createDocumentFragment(),\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\tinput = document.createElement( \"input\" );\n\n\t// Support: Android 4.0 - 4.3 only\n\t// Check state lost if the name is set (#11217)\n\t// Support: Windows Web Apps (WWA)\n\t// `name` and `type` must use .setAttribute for WWA (#14901)\n\tinput.setAttribute( \"type\", \"radio\" );\n\tinput.setAttribute( \"checked\", \"checked\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tdiv.appendChild( input );\n\n\t// Support: Android <=4.1 only\n\t// Older WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: IE <=11 only\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n\n\t// Support: IE <=9 only\n\t// IE <=9 replaces <option> tags with their contents when inserted outside of\n\t// the select element.\n\tdiv.innerHTML = \"<option></option>\";\n\tsupport.option = !!div.lastChild;\n} )();\n\n\n// We have to close these tags to support XHTML (#13200)\nvar wrapMap = {\n\n\t// XHTML parsers do not magically insert elements in the\n\t// same way that tag soup parsers do. So we cannot shorten\n\t// this by omitting <tbody> or other required elements.\n\tthead: [ 1, \"<table>\", \"</table>\" ],\n\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t_default: [ 0, \"\", \"\" ]\n};\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n// Support: IE <=9 only\nif ( !support.option ) {\n\twrapMap.optgroup = wrapMap.option = [ 1, \"<select multiple='multiple'>\", \"</select>\" ];\n}\n\n\nfunction getAll( context, tag ) {\n\n\t// Support: IE <=9 - 11 only\n\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\n\tvar ret;\n\n\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\tret = context.getElementsByTagName( tag || \"*\" );\n\n\t} else if ( typeof context.querySelectorAll !== \"undefined\" ) {\n\t\tret = context.querySelectorAll( tag || \"*\" );\n\n\t} else {\n\t\tret = [];\n\t}\n\n\tif ( tag === undefined || tag && nodeName( context, tag ) ) {\n\t\treturn jQuery.merge( [ context ], ret );\n\t}\n\n\treturn ret;\n}\n\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar i = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdataPriv.set(\n\t\t\telems[ i ],\n\t\t\t\"globalEval\",\n\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\n\nvar rhtml = /<|&#?\\w+;/;\n\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\n\tvar elem, tmp, tag, wrap, attached, j,\n\t\tfragment = context.createDocumentFragment(),\n\t\tnodes = [],\n\t\ti = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\telem = elems[ i ];\n\n\t\tif ( elem || elem === 0 ) {\n\n\t\t\t// Add nodes directly\n\t\t\tif ( toType( elem ) === \"object\" ) {\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t// Convert non-html into a text node\n\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t// Convert html into DOM nodes\n\t\t\t} else {\n\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\n\n\t\t\t\t// Deserialize a standard representation\n\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\n\n\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\tj = wrap[ 0 ];\n\t\t\t\twhile ( j-- ) {\n\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t}\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t// Remember the top-level container\n\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t// Ensure the created nodes are orphaned (#12392)\n\t\t\t\ttmp.textContent = \"\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove wrapper from fragment\n\tfragment.textContent = \"\";\n\n\ti = 0;\n\twhile ( ( elem = nodes[ i++ ] ) ) {\n\n\t\t// Skip elements already in the context collection (trac-4087)\n\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\n\t\t\tif ( ignored ) {\n\t\t\t\tignored.push( elem );\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tattached = isAttached( elem );\n\n\t\t// Append to fragment\n\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t// Preserve script evaluation history\n\t\tif ( attached ) {\n\t\t\tsetGlobalEval( tmp );\n\t\t}\n\n\t\t// Capture executables\n\t\tif ( scripts ) {\n\t\t\tj = 0;\n\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\n\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\tscripts.push( elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn fragment;\n}\n\n\nvar\n\trkeyEvent = /^key/,\n\trmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\n// Support: IE <=9 - 11+\n// focus() and blur() are asynchronous, except when they are no-op.\n// So expect focus to be synchronous when the element is already active,\n// and blur to be synchronous when the element is not already active.\n// (focus and blur are always synchronous in other supported browsers,\n// this just defines when we can count on it).\nfunction expectSync( elem, type ) {\n\treturn ( elem === safeActiveElement() ) === ( type === \"focus\" );\n}\n\n// Support: IE <=9 only\n// Accessing document.activeElement can throw unexpectedly\n// https://bugs.jquery.com/ticket/13393\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\nfunction on( elem, types, selector, data, fn, one ) {\n\tvar origFn, type;\n\n\t// Types can be a map of types/handlers\n\tif ( typeof types === \"object\" ) {\n\n\t\t// ( types-Object, selector, data )\n\t\tif ( typeof selector !== \"string\" ) {\n\n\t\t\t// ( types-Object, data )\n\t\t\tdata = data || selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tfor ( type in types ) {\n\t\t\ton( elem, type, selector, data, types[ type ], one );\n\t\t}\n\t\treturn elem;\n\t}\n\n\tif ( data == null && fn == null ) {\n\n\t\t// ( types, fn )\n\t\tfn = selector;\n\t\tdata = selector = undefined;\n\t} else if ( fn == null ) {\n\t\tif ( typeof selector === \"string\" ) {\n\n\t\t\t// ( types, selector, fn )\n\t\t\tfn = data;\n\t\t\tdata = undefined;\n\t\t} else {\n\n\t\t\t// ( types, data, fn )\n\t\t\tfn = data;\n\t\t\tdata = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t}\n\tif ( fn === false ) {\n\t\tfn = returnFalse;\n\t} else if ( !fn ) {\n\t\treturn elem;\n\t}\n\n\tif ( one === 1 ) {\n\t\torigFn = fn;\n\t\tfn = function( event ) {\n\n\t\t\t// Can use an empty set, since event contains the info\n\t\t\tjQuery().off( event );\n\t\t\treturn origFn.apply( this, arguments );\n\t\t};\n\n\t\t// Use same guid so caller can remove using origFn\n\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t}\n\treturn elem.each( function() {\n\t\tjQuery.event.add( this, types, fn, data, selector );\n\t} );\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.get( elem );\n\n\t\t// Only attach events to objects that accept data\n\t\tif ( !acceptData( elem ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Ensure that invalid selectors throw exceptions at attach time\n\t\t// Evaluate against documentElement in case elem is a non-element node (e.g., document)\n\t\tif ( selector ) {\n\t\t\tjQuery.find.matchesSelector( documentElement, selector );\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !( events = elemData.events ) ) {\n\t\t\tevents = elemData.events = Object.create( null );\n\t\t}\n\t\tif ( !( eventHandle = elemData.handle ) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t};\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend( {\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join( \".\" )\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !( handlers = events[ type ] ) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup ||\n\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\n\n\t\tif ( !elemData || !( events = elemData.events ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[ 2 ] &&\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector ||\n\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown ||\n\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove data and the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdataPriv.remove( elem, \"handle events\" );\n\t\t}\n\t},\n\n\tdispatch: function( nativeEvent ) {\n\n\t\tvar i, j, ret, matched, handleObj, handlerQueue,\n\t\t\targs = new Array( arguments.length ),\n\n\t\t\t// Make a writable jQuery.Event from the native event object\n\t\t\tevent = jQuery.event.fix( nativeEvent ),\n\n\t\t\thandlers = (\n\t\t\t\t\tdataPriv.get( this, \"events\" ) || Object.create( null )\n\t\t\t\t)[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[ 0 ] = event;\n\n\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\n\t\t\t\t!event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// If the event is namespaced, then each handler is only invoked if it is\n\t\t\t\t// specially universal or its namespaces are a superset of the event's.\n\t\t\t\tif ( !event.rnamespace || handleObj.namespace === false ||\n\t\t\t\t\tevent.rnamespace.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\n\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, handleObj, sel, matchedHandlers, matchedSelectors,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Find delegate handlers\n\t\tif ( delegateCount &&\n\n\t\t\t// Support: IE <=9\n\t\t\t// Black-hole SVG <use> instance trees (trac-13180)\n\t\t\tcur.nodeType &&\n\n\t\t\t// Support: Firefox <=42\n\t\t\t// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n\t\t\t// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n\t\t\t// Support: IE 11 only\n\t\t\t// ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n\t\t\t!( event.type === \"click\" && event.button >= 1 ) ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't check non-elements (#13208)\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\tif ( cur.nodeType === 1 && !( event.type === \"click\" && cur.disabled === true ) ) {\n\t\t\t\t\tmatchedHandlers = [];\n\t\t\t\t\tmatchedSelectors = {};\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatchedSelectors[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] ) {\n\t\t\t\t\t\t\tmatchedHandlers.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matchedHandlers.length ) {\n\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matchedHandlers } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tcur = this;\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\taddProp: function( name, hook ) {\n\t\tObject.defineProperty( jQuery.Event.prototype, name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\n\t\t\tget: isFunction( hook ) ?\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\treturn hook( this.originalEvent );\n\t\t\t\t\t}\n\t\t\t\t} :\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\treturn this.originalEvent[ name ];\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\tset: function( value ) {\n\t\t\t\tObject.defineProperty( this, name, {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tvalue: value\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t},\n\n\tfix: function( originalEvent ) {\n\t\treturn originalEvent[ jQuery.expando ] ?\n\t\t\toriginalEvent :\n\t\t\tnew jQuery.Event( originalEvent );\n\t},\n\n\tspecial: {\n\t\tload: {\n\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tclick: {\n\n\t\t\t// Utilize native event to ensure correct state for checkable inputs\n\t\t\tsetup: function( data ) {\n\n\t\t\t\t// For mutual compressibility with _default, replace `this` access with a local var.\n\t\t\t\t// `|| data` is dead code meant only to preserve the variable through minification.\n\t\t\t\tvar el = this || data;\n\n\t\t\t\t// Claim the first handler\n\t\t\t\tif ( rcheckableType.test( el.type ) &&\n\t\t\t\t\tel.click && nodeName( el, \"input\" ) ) {\n\n\t\t\t\t\t// dataPriv.set( el, \"click\", ... )\n\t\t\t\t\tleverageNative( el, \"click\", returnTrue );\n\t\t\t\t}\n\n\t\t\t\t// Return false to allow normal processing in the caller\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\ttrigger: function( data ) {\n\n\t\t\t\t// For mutual compressibility with _default, replace `this` access with a local var.\n\t\t\t\t// `|| data` is dead code meant only to preserve the variable through minification.\n\t\t\t\tvar el = this || data;\n\n\t\t\t\t// Force setup before triggering a click\n\t\t\t\tif ( rcheckableType.test( el.type ) &&\n\t\t\t\t\tel.click && nodeName( el, \"input\" ) ) {\n\n\t\t\t\t\tleverageNative( el, \"click\" );\n\t\t\t\t}\n\n\t\t\t\t// Return non-false to allow normal event-path propagation\n\t\t\t\treturn true;\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, suppress native .click() on links\n\t\t\t// Also prevent it if we're currently inside a leveraged native-event stack\n\t\t\t_default: function( event ) {\n\t\t\t\tvar target = event.target;\n\t\t\t\treturn rcheckableType.test( target.type ) &&\n\t\t\t\t\ttarget.click && nodeName( target, \"input\" ) &&\n\t\t\t\t\tdataPriv.get( target, \"click\" ) ||\n\t\t\t\t\tnodeName( target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Ensure the presence of an event listener that handles manually-triggered\n// synthetic events by interrupting progress until reinvoked in response to\n// *native* events that it fires directly, ensuring that state changes have\n// already occurred before other listeners are invoked.\nfunction leverageNative( el, type, expectSync ) {\n\n\t// Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add\n\tif ( !expectSync ) {\n\t\tif ( dataPriv.get( el, type ) === undefined ) {\n\t\t\tjQuery.event.add( el, type, returnTrue );\n\t\t}\n\t\treturn;\n\t}\n\n\t// Register the controller as a special universal handler for all event namespaces\n\tdataPriv.set( el, type, false );\n\tjQuery.event.add( el, type, {\n\t\tnamespace: false,\n\t\thandler: function( event ) {\n\t\t\tvar notAsync, result,\n\t\t\t\tsaved = dataPriv.get( this, type );\n\n\t\t\tif ( ( event.isTrigger & 1 ) && this[ type ] ) {\n\n\t\t\t\t// Interrupt processing of the outer synthetic .trigger()ed event\n\t\t\t\t// Saved data should be false in such cases, but might be a leftover capture object\n\t\t\t\t// from an async native handler (gh-4350)\n\t\t\t\tif ( !saved.length ) {\n\n\t\t\t\t\t// Store arguments for use when handling the inner native event\n\t\t\t\t\t// There will always be at least one argument (an event object), so this array\n\t\t\t\t\t// will not be confused with a leftover capture object.\n\t\t\t\t\tsaved = slice.call( arguments );\n\t\t\t\t\tdataPriv.set( this, type, saved );\n\n\t\t\t\t\t// Trigger the native event and capture its result\n\t\t\t\t\t// Support: IE <=9 - 11+\n\t\t\t\t\t// focus() and blur() are asynchronous\n\t\t\t\t\tnotAsync = expectSync( this, type );\n\t\t\t\t\tthis[ type ]();\n\t\t\t\t\tresult = dataPriv.get( this, type );\n\t\t\t\t\tif ( saved !== result || notAsync ) {\n\t\t\t\t\t\tdataPriv.set( this, type, false );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult = {};\n\t\t\t\t\t}\n\t\t\t\t\tif ( saved !== result ) {\n\n\t\t\t\t\t\t// Cancel the outer synthetic event\n\t\t\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\treturn result.value;\n\t\t\t\t\t}\n\n\t\t\t\t// If this is an inner synthetic event for an event with a bubbling surrogate\n\t\t\t\t// (focus or blur), assume that the surrogate already propagated from triggering the\n\t\t\t\t// native event and prevent that from happening again here.\n\t\t\t\t// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the\n\t\t\t\t// bubbling surrogate propagates *after* the non-bubbling base), but that seems\n\t\t\t\t// less bad than duplication.\n\t\t\t\t} else if ( ( jQuery.event.special[ type ] || {} ).delegateType ) {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t}\n\n\t\t\t// If this is a native event triggered above, everything is now in order\n\t\t\t// Fire an inner synthetic event with the original arguments\n\t\t\t} else if ( saved.length ) {\n\n\t\t\t\t// ...and capture the result\n\t\t\t\tdataPriv.set( this, type, {\n\t\t\t\t\tvalue: jQuery.event.trigger(\n\n\t\t\t\t\t\t// Support: IE <=9 - 11+\n\t\t\t\t\t\t// Extend with the prototype to reset the above stopImmediatePropagation()\n\t\t\t\t\t\tjQuery.extend( saved[ 0 ], jQuery.Event.prototype ),\n\t\t\t\t\t\tsaved.slice( 1 ),\n\t\t\t\t\t\tthis\n\t\t\t\t\t)\n\t\t\t\t} );\n\n\t\t\t\t// Abort handling of the native event\n\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t}\n\t\t}\n\t} );\n}\n\njQuery.removeEvent = function( elem, type, handle ) {\n\n\t// This \"if\" is needed for plain objects\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\n\t// Allow instantiation without the 'new' keyword\n\tif ( !( this instanceof jQuery.Event ) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\tsrc.defaultPrevented === undefined &&\n\n\t\t\t\t// Support: Android <=2.3 only\n\t\t\t\tsrc.returnValue === false ?\n\t\t\treturnTrue :\n\t\t\treturnFalse;\n\n\t\t// Create target properties\n\t\t// Support: Safari <=6 - 7 only\n\t\t// Target should not be a text node (#504, #13143)\n\t\tthis.target = ( src.target && src.target.nodeType === 3 ) ?\n\t\t\tsrc.target.parentNode :\n\t\t\tsrc.target;\n\n\t\tthis.currentTarget = src.currentTarget;\n\t\tthis.relatedTarget = src.relatedTarget;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || Date.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tconstructor: jQuery.Event,\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\tisSimulated: false,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Includes all common event props including KeyEvent and MouseEvent specific props\njQuery.each( {\n\taltKey: true,\n\tbubbles: true,\n\tcancelable: true,\n\tchangedTouches: true,\n\tctrlKey: true,\n\tdetail: true,\n\teventPhase: true,\n\tmetaKey: true,\n\tpageX: true,\n\tpageY: true,\n\tshiftKey: true,\n\tview: true,\n\t\"char\": true,\n\tcode: true,\n\tcharCode: true,\n\tkey: true,\n\tkeyCode: true,\n\tbutton: true,\n\tbuttons: true,\n\tclientX: true,\n\tclientY: true,\n\toffsetX: true,\n\toffsetY: true,\n\tpointerId: true,\n\tpointerType: true,\n\tscreenX: true,\n\tscreenY: true,\n\ttargetTouches: true,\n\ttoElement: true,\n\ttouches: true,\n\n\twhich: function( event ) {\n\t\tvar button = event.button;\n\n\t\t// Add which for key events\n\t\tif ( event.which == null && rkeyEvent.test( event.type ) ) {\n\t\t\treturn event.charCode != null ? event.charCode : event.keyCode;\n\t\t}\n\n\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n\t\tif ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {\n\t\t\tif ( button & 1 ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif ( button & 2 ) {\n\t\t\t\treturn 3;\n\t\t\t}\n\n\t\t\tif ( button & 4 ) {\n\t\t\t\treturn 2;\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn event.which;\n\t}\n}, jQuery.event.addProp );\n\njQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( type, delegateType ) {\n\tjQuery.event.special[ type ] = {\n\n\t\t// Utilize native event if possible so blur/focus sequence is correct\n\t\tsetup: function() {\n\n\t\t\t// Claim the first handler\n\t\t\t// dataPriv.set( this, \"focus\", ... )\n\t\t\t// dataPriv.set( this, \"blur\", ... )\n\t\t\tleverageNative( this, type, expectSync );\n\n\t\t\t// Return false to allow normal processing in the caller\n\t\t\treturn false;\n\t\t},\n\t\ttrigger: function() {\n\n\t\t\t// Force setup before trigger\n\t\t\tleverageNative( this, type );\n\n\t\t\t// Return non-false to allow normal event-path propagation\n\t\t\treturn true;\n\t\t},\n\n\t\tdelegateType: delegateType\n\t};\n} );\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// so that event delegation works in jQuery.\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\n//\n// Support: Safari 7 only\n// Safari sends mouseenter too often; see:\n// https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n// for the description of the bug (it existed in older Chrome versions as well).\njQuery.each( {\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\",\n\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mouseenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n} );\n\njQuery.fn.extend( {\n\n\ton: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn );\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ?\n\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\n\t\t\t\t\thandleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t} );\n\t}\n} );\n\n\nvar\n\n\t// Support: IE <=10 - 11, Edge 12 - 13 only\n\t// In IE/Edge using regex groups here causes severe slowdowns.\n\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\n\trnoInnerhtml = /<script|<style|<link/i,\n\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\n\n// Prefer a tbody over its parent table for containing new rows\nfunction manipulationTarget( elem, content ) {\n\tif ( nodeName( elem, \"table\" ) &&\n\t\tnodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ) {\n\n\t\treturn jQuery( elem ).children( \"tbody\" )[ 0 ] || elem;\n\t}\n\n\treturn elem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tif ( ( elem.type || \"\" ).slice( 0, 5 ) === \"true/\" ) {\n\t\telem.type = elem.type.slice( 5 );\n\t} else {\n\t\telem.removeAttribute( \"type\" );\n\t}\n\n\treturn elem;\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( dataPriv.hasData( src ) ) {\n\t\tpdataOld = dataPriv.get( src );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdataPriv.remove( dest, \"handle events\" );\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( dataUser.hasData( src ) ) {\n\t\tudataOld = dataUser.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdataUser.set( dest, udataCur );\n\t}\n}\n\n// Fix IE bugs, see support tests\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\nfunction domManip( collection, args, callback, ignored ) {\n\n\t// Flatten any nested arrays\n\targs = flat( args );\n\n\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\ti = 0,\n\t\tl = collection.length,\n\t\tiNoClone = l - 1,\n\t\tvalue = args[ 0 ],\n\t\tvalueIsFunction = isFunction( value );\n\n\t// We can't cloneNode fragments that contain checked, in WebKit\n\tif ( valueIsFunction ||\n\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\treturn collection.each( function( index ) {\n\t\t\tvar self = collection.eq( index );\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t}\n\t\t\tdomManip( self, args, callback, ignored );\n\t\t} );\n\t}\n\n\tif ( l ) {\n\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\n\t\tfirst = fragment.firstChild;\n\n\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\tfragment = first;\n\t\t}\n\n\t\t// Require either new content or an interest in ignored elements to invoke the callback\n\t\tif ( first || ignored ) {\n\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\thasScripts = scripts.length;\n\n\t\t\t// Use the original fragment for the last item\n\t\t\t// instead of the first because it can end up\n\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tnode = fragment;\n\n\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\tif ( hasScripts ) {\n\n\t\t\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcallback.call( collection[ i ], node, i );\n\t\t\t}\n\n\t\t\tif ( hasScripts ) {\n\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t// Reenable scripts\n\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\n\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\tif ( node.src && ( node.type || \"\" ).toLowerCase()  !== \"module\" ) {\n\n\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\tif ( jQuery._evalUrl && !node.noModule ) {\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src, {\n\t\t\t\t\t\t\t\t\tnonce: node.nonce || node.getAttribute( \"nonce\" )\n\t\t\t\t\t\t\t\t}, doc );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tDOMEval( node.textContent.replace( rcleanScript, \"\" ), node, doc );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn collection;\n}\n\nfunction remove( elem, selector, keepData ) {\n\tvar node,\n\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\n\t\ti = 0;\n\n\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\n\t\tif ( !keepData && node.nodeType === 1 ) {\n\t\t\tjQuery.cleanData( getAll( node ) );\n\t\t}\n\n\t\tif ( node.parentNode ) {\n\t\t\tif ( keepData && isAttached( node ) ) {\n\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\n\t\t\t}\n\t\t\tnode.parentNode.removeChild( node );\n\t\t}\n\t}\n\n\treturn elem;\n}\n\njQuery.extend( {\n\thtmlPrefilter: function( html ) {\n\t\treturn html;\n\t},\n\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = isAttached( elem );\n\n\t\t// Fix IE cloning issues\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, type,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\n\t\t\tif ( acceptData( elem ) ) {\n\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataPriv.expando ] = undefined;\n\t\t\t\t}\n\t\t\t\tif ( elem[ dataUser.expando ] ) {\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataUser.expando ] = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n} );\n\njQuery.fn.extend( {\n\tdetach: function( selector ) {\n\t\treturn remove( this, selector, true );\n\t},\n\n\tremove: function( selector ) {\n\t\treturn remove( this, selector );\n\t},\n\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().each( function() {\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t} );\n\t},\n\n\tprepend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t} );\n\t},\n\n\tbefore: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t} );\n\t},\n\n\tafter: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t} );\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map( function() {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t} );\n\t},\n\n\thtml: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = jQuery.htmlPrefilter( value );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch ( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar ignored = [];\n\n\t\t// Make the changes, replacing each non-ignored context element with the new content\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tvar parent = this.parentNode;\n\n\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\n\t\t\t\tjQuery.cleanData( getAll( this ) );\n\t\t\t\tif ( parent ) {\n\t\t\t\t\tparent.replaceChild( elem, this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Force callback invocation\n\t\t}, ignored );\n\t}\n} );\n\njQuery.each( {\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t// .get() because push.apply(_, arraylike) throws on ancient WebKit\n\t\t\tpush.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n} );\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\nvar getStyles = function( elem ) {\n\n\t\t// Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n\t\t// IE throws on elements created in popups\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\tvar view = elem.ownerDocument.defaultView;\n\n\t\tif ( !view || !view.opener ) {\n\t\t\tview = window;\n\t\t}\n\n\t\treturn view.getComputedStyle( elem );\n\t};\n\nvar swap = function( elem, options, callback ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.call( elem );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};\n\n\nvar rboxStyle = new RegExp( cssExpand.join( \"|\" ), \"i\" );\n\n\n\n( function() {\n\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t// so they're executed at the same time to save the second computation.\n\tfunction computeStyleTests() {\n\n\t\t// This is a singleton, we need to execute it only once\n\t\tif ( !div ) {\n\t\t\treturn;\n\t\t}\n\n\t\tcontainer.style.cssText = \"position:absolute;left:-11111px;width:60px;\" +\n\t\t\t\"margin-top:1px;padding:0;border:0\";\n\t\tdiv.style.cssText =\n\t\t\t\"position:relative;display:block;box-sizing:border-box;overflow:scroll;\" +\n\t\t\t\"margin:auto;border:1px;padding:1px;\" +\n\t\t\t\"width:60%;top:1%\";\n\t\tdocumentElement.appendChild( container ).appendChild( div );\n\n\t\tvar divStyle = window.getComputedStyle( div );\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\n\t\t// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n\t\treliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;\n\n\t\t// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\n\t\t// Some styles come back with percentage values, even though they shouldn't\n\t\tdiv.style.right = \"60%\";\n\t\tpixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;\n\n\t\t// Support: IE 9 - 11 only\n\t\t// Detect misreporting of content dimensions for box-sizing:border-box elements\n\t\tboxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;\n\n\t\t// Support: IE 9 only\n\t\t// Detect overflow:scroll screwiness (gh-3699)\n\t\t// Support: Chrome <=64\n\t\t// Don't get tricked when zoom affects offsetWidth (gh-4029)\n\t\tdiv.style.position = \"absolute\";\n\t\tscrollboxSizeVal = roundPixelMeasures( div.offsetWidth / 3 ) === 12;\n\n\t\tdocumentElement.removeChild( container );\n\n\t\t// Nullify the div so it wouldn't be stored in the memory and\n\t\t// it will also be a sign that checks already performed\n\t\tdiv = null;\n\t}\n\n\tfunction roundPixelMeasures( measure ) {\n\t\treturn Math.round( parseFloat( measure ) );\n\t}\n\n\tvar pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,\n\t\treliableTrDimensionsVal, reliableMarginLeftVal,\n\t\tcontainer = document.createElement( \"div\" ),\n\t\tdiv = document.createElement( \"div\" );\n\n\t// Finish early in limited (non-browser) environments\n\tif ( !div.style ) {\n\t\treturn;\n\t}\n\n\t// Support: IE <=9 - 11 only\n\t// Style of cloned element affects source element cloned (#8908)\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\tjQuery.extend( support, {\n\t\tboxSizingReliable: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn boxSizingReliableVal;\n\t\t},\n\t\tpixelBoxStyles: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelBoxStylesVal;\n\t\t},\n\t\tpixelPosition: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelPositionVal;\n\t\t},\n\t\treliableMarginLeft: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn reliableMarginLeftVal;\n\t\t},\n\t\tscrollboxSize: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn scrollboxSizeVal;\n\t\t},\n\n\t\t// Support: IE 9 - 11+, Edge 15 - 18+\n\t\t// IE/Edge misreport `getComputedStyle` of table rows with width/height\n\t\t// set in CSS while `offset*` properties report correct values.\n\t\t// Behavior in IE 9 is more subtle than in newer versions & it passes\n\t\t// some versions of this test; make sure not to make it pass there!\n\t\treliableTrDimensions: function() {\n\t\t\tvar table, tr, trChild, trStyle;\n\t\t\tif ( reliableTrDimensionsVal == null ) {\n\t\t\t\ttable = document.createElement( \"table\" );\n\t\t\t\ttr = document.createElement( \"tr\" );\n\t\t\t\ttrChild = document.createElement( \"div\" );\n\n\t\t\t\ttable.style.cssText = \"position:absolute;left:-11111px\";\n\t\t\t\ttr.style.height = \"1px\";\n\t\t\t\ttrChild.style.height = \"9px\";\n\n\t\t\t\tdocumentElement\n\t\t\t\t\t.appendChild( table )\n\t\t\t\t\t.appendChild( tr )\n\t\t\t\t\t.appendChild( trChild );\n\n\t\t\t\ttrStyle = window.getComputedStyle( tr );\n\t\t\t\treliableTrDimensionsVal = parseInt( trStyle.height ) > 3;\n\n\t\t\t\tdocumentElement.removeChild( table );\n\t\t\t}\n\t\t\treturn reliableTrDimensionsVal;\n\t\t}\n\t} );\n} )();\n\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\n\t\t// Support: Firefox 51+\n\t\t// Retrieving style before computed somehow\n\t\t// fixes an issue with getting wrong values\n\t\t// on detached elements\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\n\t// getPropertyValue is needed for:\n\t//   .css('filter') (IE 9 only, #12537)\n\t//   .css('--customProperty) (#3144)\n\tif ( computed ) {\n\t\tret = computed.getPropertyValue( name ) || computed[ name ];\n\n\t\tif ( ret === \"\" && !isAttached( elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// Android Browser returns percentage for some values,\n\t\t// but width seems to be reliably pixels.\n\t\t// This is against the CSSOM draft spec:\n\t\t// https://drafts.csswg.org/cssom/#resolved-values\n\t\tif ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\n\t\t// Support: IE <=9 - 11 only\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\n\nfunction addGetHookIf( conditionFn, hookFn ) {\n\n\t// Define the hook, we'll check on the first run if it's really needed.\n\treturn {\n\t\tget: function() {\n\t\t\tif ( conditionFn() ) {\n\n\t\t\t\t// Hook not needed (or it's not possible to use it due\n\t\t\t\t// to missing dependency), remove it.\n\t\t\t\tdelete this.get;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\n\t\t}\n\t};\n}\n\n\nvar cssPrefixes = [ \"Webkit\", \"Moz\", \"ms\" ],\n\temptyStyle = document.createElement( \"div\" ).style,\n\tvendorProps = {};\n\n// Return a vendor-prefixed property or undefined\nfunction vendorPropName( name ) {\n\n\t// Check for vendor prefixed names\n\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in emptyStyle ) {\n\t\t\treturn name;\n\t\t}\n\t}\n}\n\n// Return a potentially-mapped jQuery.cssProps or vendor prefixed property\nfunction finalPropName( name ) {\n\tvar final = jQuery.cssProps[ name ] || vendorProps[ name ];\n\n\tif ( final ) {\n\t\treturn final;\n\t}\n\tif ( name in emptyStyle ) {\n\t\treturn name;\n\t}\n\treturn vendorProps[ name ] = vendorPropName( name ) || name;\n}\n\n\nvar\n\n\t// Swappable if display is none or starts with table\n\t// except \"table\", \"table-cell\", or \"table-caption\"\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\trcustomProp = /^--/,\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: \"0\",\n\t\tfontWeight: \"400\"\n\t};\n\nfunction setPositiveNumber( _elem, value, subtract ) {\n\n\t// Any relative (+/-) values have already been\n\t// normalized at this point\n\tvar matches = rcssNum.exec( value );\n\treturn matches ?\n\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {\n\tvar i = dimension === \"width\" ? 1 : 0,\n\t\textra = 0,\n\t\tdelta = 0;\n\n\t// Adjustment may not be necessary\n\tif ( box === ( isBorderBox ? \"border\" : \"content\" ) ) {\n\t\treturn 0;\n\t}\n\n\tfor ( ; i < 4; i += 2 ) {\n\n\t\t// Both box models exclude margin\n\t\tif ( box === \"margin\" ) {\n\t\t\tdelta += jQuery.css( elem, box + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\t// If we get here with a content-box, we're seeking \"padding\" or \"border\" or \"margin\"\n\t\tif ( !isBorderBox ) {\n\n\t\t\t// Add padding\n\t\t\tdelta += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// For \"border\" or \"margin\", add border\n\t\t\tif ( box !== \"padding\" ) {\n\t\t\t\tdelta += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\n\t\t\t// But still keep track of it otherwise\n\t\t\t} else {\n\t\t\t\textra += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\n\t\t// If we get here with a border-box (content + padding + border), we're seeking \"content\" or\n\t\t// \"padding\" or \"margin\"\n\t\t} else {\n\n\t\t\t// For \"content\", subtract padding\n\t\t\tif ( box === \"content\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// For \"content\" or \"padding\", subtract border\n\t\t\tif ( box !== \"margin\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Account for positive content-box scroll gutter when requested by providing computedVal\n\tif ( !isBorderBox && computedVal >= 0 ) {\n\n\t\t// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border\n\t\t// Assuming integer scroll gutter, subtract the rest and round down\n\t\tdelta += Math.max( 0, Math.ceil(\n\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\tcomputedVal -\n\t\t\tdelta -\n\t\t\textra -\n\t\t\t0.5\n\n\t\t// If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter\n\t\t// Use an explicit zero to avoid NaN (gh-3964)\n\t\t) ) || 0;\n\t}\n\n\treturn delta;\n}\n\nfunction getWidthOrHeight( elem, dimension, extra ) {\n\n\t// Start with computed style\n\tvar styles = getStyles( elem ),\n\n\t\t// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).\n\t\t// Fake content-box until we know it's needed to know the true value.\n\t\tboxSizingNeeded = !support.boxSizingReliable() || extra,\n\t\tisBorderBox = boxSizingNeeded &&\n\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\tvalueIsBorderBox = isBorderBox,\n\n\t\tval = curCSS( elem, dimension, styles ),\n\t\toffsetProp = \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 );\n\n\t// Support: Firefox <=54\n\t// Return a confounding non-pixel value or feign ignorance, as appropriate.\n\tif ( rnumnonpx.test( val ) ) {\n\t\tif ( !extra ) {\n\t\t\treturn val;\n\t\t}\n\t\tval = \"auto\";\n\t}\n\n\n\t// Support: IE 9 - 11 only\n\t// Use offsetWidth/offsetHeight for when box sizing is unreliable.\n\t// In those cases, the computed value can be trusted to be border-box.\n\tif ( ( !support.boxSizingReliable() && isBorderBox ||\n\n\t\t// Support: IE 10 - 11+, Edge 15 - 18+\n\t\t// IE/Edge misreport `getComputedStyle` of table rows with width/height\n\t\t// set in CSS while `offset*` properties report correct values.\n\t\t// Interestingly, in some cases IE 9 doesn't suffer from this issue.\n\t\t!support.reliableTrDimensions() && nodeName( elem, \"tr\" ) ||\n\n\t\t// Fall back to offsetWidth/offsetHeight when value is \"auto\"\n\t\t// This happens for inline elements with no explicit setting (gh-3571)\n\t\tval === \"auto\" ||\n\n\t\t// Support: Android <=4.1 - 4.3 only\n\t\t// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)\n\t\t!parseFloat( val ) && jQuery.css( elem, \"display\", false, styles ) === \"inline\" ) &&\n\n\t\t// Make sure the element is visible & connected\n\t\telem.getClientRects().length ) {\n\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\n\n\t\t// Where available, offsetWidth/offsetHeight approximate border box dimensions.\n\t\t// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the\n\t\t// retrieved value as a content box dimension.\n\t\tvalueIsBorderBox = offsetProp in elem;\n\t\tif ( valueIsBorderBox ) {\n\t\t\tval = elem[ offsetProp ];\n\t\t}\n\t}\n\n\t// Normalize \"\" and auto\n\tval = parseFloat( val ) || 0;\n\n\t// Adjust for the element's box model\n\treturn ( val +\n\t\tboxModelAdjustment(\n\t\t\telem,\n\t\t\tdimension,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles,\n\n\t\t\t// Provide the current computed size to request scroll gutter calculation (gh-3589)\n\t\t\tval\n\t\t)\n\t) + \"px\";\n}\n\njQuery.extend( {\n\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"animationIterationCount\": true,\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"gridArea\": true,\n\t\t\"gridColumn\": true,\n\t\t\"gridColumnEnd\": true,\n\t\t\"gridColumnStart\": true,\n\t\t\"gridRow\": true,\n\t\t\"gridRowEnd\": true,\n\t\t\"gridRowStart\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name ),\n\t\t\tstyle = elem.style;\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to query the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Gets hook for the prefixed version, then unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\n\t\t\t\tvalue = adjustCSS( elem, name, ret );\n\n\t\t\t\t// Fixes bug #9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that null and NaN values aren't set (#7116)\n\t\t\tif ( value == null || value !== value ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\n\t\t\t// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append\n\t\t\t// \"px\" to a few hardcoded values.\n\t\t\tif ( type === \"number\" && !isCustomProp ) {\n\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\n\t\t\t}\n\n\t\t\t// background-* props affect original clone's values\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\n\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\n\n\t\t\t\tif ( isCustomProp ) {\n\t\t\t\t\tstyle.setProperty( name, value );\n\t\t\t\t} else {\n\t\t\t\t\tstyle[ name ] = value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks &&\n\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\n\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name );\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to modify the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Try prefixed name followed by the unprefixed name\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t// Convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\n\t\t}\n\n\t\treturn val;\n\t}\n} );\n\njQuery.each( [ \"height\", \"width\" ], function( _i, dimension ) {\n\tjQuery.cssHooks[ dimension ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\n\t\t\t\t// but it must have a current display style that would benefit\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\n\n\t\t\t\t\t// Support: Safari 8+\n\t\t\t\t\t// Table columns in Safari have non-zero offsetWidth & zero\n\t\t\t\t\t// getBoundingClientRect().width unless display is changed.\n\t\t\t\t\t// Support: IE <=11 only\n\t\t\t\t\t// Running getBoundingClientRect on a disconnected node\n\t\t\t\t\t// in IE throws an error.\n\t\t\t\t\t( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?\n\t\t\t\t\t\tswap( elem, cssShow, function() {\n\t\t\t\t\t\t\treturn getWidthOrHeight( elem, dimension, extra );\n\t\t\t\t\t\t} ) :\n\t\t\t\t\t\tgetWidthOrHeight( elem, dimension, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar matches,\n\t\t\t\tstyles = getStyles( elem ),\n\n\t\t\t\t// Only read styles.position if the test has a chance to fail\n\t\t\t\t// to avoid forcing a reflow.\n\t\t\t\tscrollboxSizeBuggy = !support.scrollboxSize() &&\n\t\t\t\t\tstyles.position === \"absolute\",\n\n\t\t\t\t// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)\n\t\t\t\tboxSizingNeeded = scrollboxSizeBuggy || extra,\n\t\t\t\tisBorderBox = boxSizingNeeded &&\n\t\t\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\tsubtract = extra ?\n\t\t\t\t\tboxModelAdjustment(\n\t\t\t\t\t\telem,\n\t\t\t\t\t\tdimension,\n\t\t\t\t\t\textra,\n\t\t\t\t\t\tisBorderBox,\n\t\t\t\t\t\tstyles\n\t\t\t\t\t) :\n\t\t\t\t\t0;\n\n\t\t\t// Account for unreliable border-box dimensions by comparing offset* to computed and\n\t\t\t// faking a content-box to get border and padding (gh-3699)\n\t\t\tif ( isBorderBox && scrollboxSizeBuggy ) {\n\t\t\t\tsubtract -= Math.ceil(\n\t\t\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\t\t\tparseFloat( styles[ dimension ] ) -\n\t\t\t\t\tboxModelAdjustment( elem, dimension, \"border\", false, styles ) -\n\t\t\t\t\t0.5\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Convert to pixels if value adjustment is needed\n\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\n\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\n\n\t\t\t\telem.style[ dimension ] = value;\n\t\t\t\tvalue = jQuery.css( elem, dimension );\n\t\t\t}\n\n\t\t\treturn setPositiveNumber( elem, value, subtract );\n\t\t}\n\t};\n} );\n\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\n\t\t\t\telem.getBoundingClientRect().left -\n\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\n\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\n\t\t\t\t\t} )\n\t\t\t\t) + \"px\";\n\t\t}\n\t}\n);\n\n// These hooks are used by animate to expand properties\njQuery.each( {\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// Assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( prefix !== \"margin\" ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n} );\n\njQuery.fn.extend( {\n\tcss: function( name, value ) {\n\t\treturn access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t}\n} );\n\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || jQuery.easing._default;\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\t// Use a property on the element directly when it is not a DOM element,\n\t\t\t// or when there is no matching style property that exists.\n\t\t\tif ( tween.elem.nodeType !== 1 ||\n\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\n\t\t\t// Use step hook for back compat.\n\t\t\t// Use cssHook if its there.\n\t\t\t// Use .style if available and use plain properties where available.\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.nodeType === 1 && (\n\t\t\t\t\tjQuery.cssHooks[ tween.prop ] ||\n\t\t\t\t\ttween.elem.style[ finalPropName( tween.prop ) ] != null ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE <=9 only\n// Panic based approach to setting things on disconnected nodes\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t},\n\t_default: \"swing\"\n};\n\njQuery.fx = Tween.prototype.init;\n\n// Back compat <1.8 extension point\njQuery.fx.step = {};\n\n\n\n\nvar\n\tfxNow, inProgress,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trrun = /queueHooks$/;\n\nfunction schedule() {\n\tif ( inProgress ) {\n\t\tif ( document.hidden === false && window.requestAnimationFrame ) {\n\t\t\twindow.requestAnimationFrame( schedule );\n\t\t} else {\n\t\t\twindow.setTimeout( schedule, jQuery.fx.interval );\n\t\t}\n\n\t\tjQuery.fx.tick();\n\t}\n}\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\twindow.setTimeout( function() {\n\t\tfxNow = undefined;\n\t} );\n\treturn ( fxNow = Date.now() );\n}\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\ti = 0,\n\t\tattrs = { height: type };\n\n\t// If we include width, step value is 1 to do all cssExpand values,\n\t// otherwise step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth ? 1 : 0;\n\tfor ( ; i < 4; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\n\n\t\t\t// We're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction defaultPrefilter( elem, props, opts ) {\n\tvar prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,\n\t\tisBox = \"width\" in props || \"height\" in props,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHiddenWithinTree( elem ),\n\t\tdataShow = dataPriv.get( elem, \"fxshow\" );\n\n\t// Queue-skipping animations hijack the fx hooks\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always( function() {\n\n\t\t\t// Ensure the complete handler is called before this completes\n\t\t\tanim.always( function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n\n\t// Detect show/hide animations\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.test( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// Pretend to be hidden if this is a \"show\" and\n\t\t\t\t// there is still data from a stopped show/hide\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\n\t\t\t\t// Ignore all other no-op show/hide data\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\t\t}\n\t}\n\n\t// Bail out if this is a no-op like .hide().hide()\n\tpropTween = !jQuery.isEmptyObject( props );\n\tif ( !propTween && jQuery.isEmptyObject( orig ) ) {\n\t\treturn;\n\t}\n\n\t// Restrict \"overflow\" and \"display\" styles during box animations\n\tif ( isBox && elem.nodeType === 1 ) {\n\n\t\t// Support: IE <=9 - 11, Edge 12 - 15\n\t\t// Record all 3 overflow attributes because IE does not infer the shorthand\n\t\t// from identically-valued overflowX and overflowY and Edge just mirrors\n\t\t// the overflowX value there.\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Identify a display type, preferring old show/hide data over the CSS cascade\n\t\trestoreDisplay = dataShow && dataShow.display;\n\t\tif ( restoreDisplay == null ) {\n\t\t\trestoreDisplay = dataPriv.get( elem, \"display\" );\n\t\t}\n\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\tif ( display === \"none\" ) {\n\t\t\tif ( restoreDisplay ) {\n\t\t\t\tdisplay = restoreDisplay;\n\t\t\t} else {\n\n\t\t\t\t// Get nonempty value(s) by temporarily forcing visibility\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t\trestoreDisplay = elem.style.display || restoreDisplay;\n\t\t\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\t\t\tshowHide( [ elem ] );\n\t\t\t}\n\t\t}\n\n\t\t// Animate inline elements as inline-block\n\t\tif ( display === \"inline\" || display === \"inline-block\" && restoreDisplay != null ) {\n\t\t\tif ( jQuery.css( elem, \"float\" ) === \"none\" ) {\n\n\t\t\t\t// Restore the original display value at the end of pure show/hide animations\n\t\t\t\tif ( !propTween ) {\n\t\t\t\t\tanim.done( function() {\n\t\t\t\t\t\tstyle.display = restoreDisplay;\n\t\t\t\t\t} );\n\t\t\t\t\tif ( restoreDisplay == null ) {\n\t\t\t\t\t\tdisplay = style.display;\n\t\t\t\t\t\trestoreDisplay = display === \"none\" ? \"\" : display;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstyle.display = \"inline-block\";\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tanim.always( function() {\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t} );\n\t}\n\n\t// Implement show/hide animations\n\tpropTween = false;\n\tfor ( prop in orig ) {\n\n\t\t// General show/hide setup for this element animation\n\t\tif ( !propTween ) {\n\t\t\tif ( dataShow ) {\n\t\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\t\thidden = dataShow.hidden;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdataShow = dataPriv.access( elem, \"fxshow\", { display: restoreDisplay } );\n\t\t\t}\n\n\t\t\t// Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\n\t\t\tif ( toggle ) {\n\t\t\t\tdataShow.hidden = !hidden;\n\t\t\t}\n\n\t\t\t// Show elements before animating them\n\t\t\tif ( hidden ) {\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t}\n\n\t\t\t/* eslint-disable no-loop-func */\n\n\t\t\tanim.done( function() {\n\n\t\t\t/* eslint-enable no-loop-func */\n\n\t\t\t\t// The final step of a \"hide\" animation is actually hiding the element\n\t\t\t\tif ( !hidden ) {\n\t\t\t\t\tshowHide( [ elem ] );\n\t\t\t\t}\n\t\t\t\tdataPriv.remove( elem, \"fxshow\" );\n\t\t\t\tfor ( prop in orig ) {\n\t\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Per-property setup\n\t\tpropTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\t\tif ( !( prop in dataShow ) ) {\n\t\t\tdataShow[ prop ] = propTween.start;\n\t\t\tif ( hidden ) {\n\t\t\t\tpropTween.end = propTween.start;\n\t\t\t\tpropTween.start = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( Array.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\n\t\t\t// Reusing 'index' because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = Animation.prefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\n\t\t\t// Don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t} ),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\n\t\t\t\t// Support: Android 2.3 only\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\n\n\t\t\t// If there's more to do, yield\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t}\n\n\t\t\t// If this was an empty animation, synthesize a final progress notification\n\t\t\tif ( !length ) {\n\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t}\n\n\t\t\t// Resolve the animation and report its conclusion\n\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\treturn false;\n\t\t},\n\t\tanimation = deferred.promise( {\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, {\n\t\t\t\tspecialEasing: {},\n\t\t\t\teasing: jQuery.easing._default\n\t\t\t}, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t} ),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length; index++ ) {\n\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\tif ( isFunction( result.stop ) ) {\n\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\n\t\t\t\t\tresult.stop.bind( result );\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\t// Attach callbacks from options\n\tanimation\n\t\t.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t} )\n\t);\n\n\treturn animation;\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\n\ttweeners: {\n\t\t\"*\": [ function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value );\n\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\n\t\t\treturn tween;\n\t\t} ]\n\t},\n\n\ttweener: function( props, callback ) {\n\t\tif ( isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.match( rnothtmlwhite );\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\n\t\t\tAnimation.tweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilters: [ defaultPrefilter ],\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tAnimation.prefilters.unshift( callback );\n\t\t} else {\n\t\t\tAnimation.prefilters.push( callback );\n\t\t}\n\t}\n} );\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tisFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !isFunction( easing ) && easing\n\t};\n\n\t// Go to the end state if fx are off\n\tif ( jQuery.fx.off ) {\n\t\topt.duration = 0;\n\n\t} else {\n\t\tif ( typeof opt.duration !== \"number\" ) {\n\t\t\tif ( opt.duration in jQuery.fx.speeds ) {\n\t\t\t\topt.duration = jQuery.fx.speeds[ opt.duration ];\n\n\t\t\t} else {\n\t\t\t\topt.duration = jQuery.fx.speeds._default;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.fn.extend( {\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// Show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHiddenWithinTree ).css( \"opacity\", 0 ).show()\n\n\t\t\t// Animate to the value specified\n\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\t\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = dataPriv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this &&\n\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\n\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start the next in the queue if the last step wasn't forced.\n\t\t\t// Timers currently will call their complete callbacks, which\n\t\t\t// will dequeue but only if they were gotoEnd.\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t} );\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tvar index,\n\t\t\t\tdata = dataPriv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// Enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// Empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// Look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t} );\n\t}\n} );\n\njQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( _i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n} );\n\n// Generate shortcuts for custom animations\njQuery.each( {\n\tslideDown: genFx( \"show\" ),\n\tslideUp: genFx( \"hide\" ),\n\tslideToggle: genFx( \"toggle\" ),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n} );\n\njQuery.timers = [];\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ti = 0,\n\t\ttimers = jQuery.timers;\n\n\tfxNow = Date.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\n\t\t// Run the timer and safely remove it when done (allowing for external removal)\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tjQuery.timers.push( timer );\n\tjQuery.fx.start();\n};\n\njQuery.fx.interval = 13;\njQuery.fx.start = function() {\n\tif ( inProgress ) {\n\t\treturn;\n\t}\n\n\tinProgress = true;\n\tschedule();\n};\n\njQuery.fx.stop = function() {\n\tinProgress = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\n\t// Default speed\n\t_default: 400\n};\n\n\n// Based off of the plugin by Clint Helfers, with permission.\n// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\njQuery.fn.delay = function( time, type ) {\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\ttype = type || \"fx\";\n\n\treturn this.queue( type, function( next, hooks ) {\n\t\tvar timeout = window.setTimeout( next, time );\n\t\thooks.stop = function() {\n\t\t\twindow.clearTimeout( timeout );\n\t\t};\n\t} );\n};\n\n\n( function() {\n\tvar input = document.createElement( \"input\" ),\n\t\tselect = document.createElement( \"select\" ),\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\n\tinput.type = \"checkbox\";\n\n\t// Support: Android <=4.3 only\n\t// Default value for a checkbox should be \"on\"\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Support: IE <=11 only\n\t// Must access selectedIndex to make default options select\n\tsupport.optSelected = opt.selected;\n\n\t// Support: IE <=11 only\n\t// An input loses its value after becoming a radio\n\tinput = document.createElement( \"input\" );\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n} )();\n\n\nvar boolHook,\n\tattrHandle = jQuery.expr.attrHandle;\n\njQuery.fn.extend( {\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tattr: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set attributes on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// Attribute hooks are determined by the lowercase version\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\thooks = jQuery.attrHooks[ name.toLowerCase() ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\treturn value;\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tret = jQuery.find.attr( elem, name );\n\n\t\t// Non-existent attributes return null, we normalize to undefined\n\t\treturn ret == null ? undefined : ret;\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\tnodeName( elem, \"input\" ) ) {\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name,\n\t\t\ti = 0,\n\n\t\t\t// Attribute names can contain non-HTML whitespace characters\n\t\t\t// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n\t\t\tattrNames = value && value.match( rnothtmlwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\n\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( _i, name ) {\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\n\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar ret, handle,\n\t\t\tlowercaseName = name.toLowerCase();\n\n\t\tif ( !isXML ) {\n\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\thandle = attrHandle[ lowercaseName ];\n\t\t\tattrHandle[ lowercaseName ] = ret;\n\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\tlowercaseName :\n\t\t\t\tnull;\n\t\t\tattrHandle[ lowercaseName ] = handle;\n\t\t}\n\t\treturn ret;\n\t};\n} );\n\n\n\n\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\n\trclickable = /^(?:a|area)$/i;\n\njQuery.fn.extend( {\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\treturn ( elem[ name ] = value );\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn elem[ name ];\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\t// Support: IE <=9 - 11 only\n\t\t\t\t// elem.tabIndex doesn't always return the\n\t\t\t\t// correct value when it hasn't been explicitly set\n\t\t\t\t// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n\t\t\t\t// Use proper attribute retrieval(#12072)\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\n\n\t\t\t\tif ( tabindex ) {\n\t\t\t\t\treturn parseInt( tabindex, 10 );\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\n\t\t\t\t\trclickable.test( elem.nodeName ) &&\n\t\t\t\t\telem.href\n\t\t\t\t) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t},\n\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t}\n} );\n\n// Support: IE <=11 only\n// Accessing the selectedIndex property\n// forces the browser to respect setting selected\n// on the option\n// The getter ensures a default option is selected\n// when in an optgroup\n// eslint rule \"no-unused-expressions\" is disabled for this code\n// since it considers such accessions noop\nif ( !support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tset: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent ) {\n\t\t\t\tparent.selectedIndex;\n\n\t\t\t\tif ( parent.parentNode ) {\n\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\njQuery.each( [\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n} );\n\n\n\n\n\t// Strip and collapse whitespace according to HTML spec\n\t// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\n\tfunction stripAndCollapse( value ) {\n\t\tvar tokens = value.match( rnothtmlwhite ) || [];\n\t\treturn tokens.join( \" \" );\n\t}\n\n\nfunction getClass( elem ) {\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\n}\n\nfunction classesToArray( value ) {\n\tif ( Array.isArray( value ) ) {\n\t\treturn value;\n\t}\n\tif ( typeof value === \"string\" ) {\n\t\treturn value.match( rnothtmlwhite ) || [];\n\t}\n\treturn [];\n}\n\njQuery.fn.extend( {\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tclasses = classesToArray( value );\n\n\t\tif ( classes.length ) {\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( !arguments.length ) {\n\t\t\treturn this.attr( \"class\", \"\" );\n\t\t}\n\n\t\tclasses = classesToArray( value );\n\n\t\tif ( classes.length ) {\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) > -1 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar type = typeof value,\n\t\t\tisValidValue = type === \"string\" || Array.isArray( value );\n\n\t\tif ( typeof stateVal === \"boolean\" && isValidValue ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).toggleClass(\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\n\t\t\t\t\tstateVal\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar className, i, self, classNames;\n\n\t\t\tif ( isValidValue ) {\n\n\t\t\t\t// Toggle individual class names\n\t\t\t\ti = 0;\n\t\t\t\tself = jQuery( this );\n\t\t\t\tclassNames = classesToArray( value );\n\n\t\t\t\twhile ( ( className = classNames[ i++ ] ) ) {\n\n\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\n\t\t\t\tclassName = getClass( this );\n\t\t\t\tif ( className ) {\n\n\t\t\t\t\t// Store className if set\n\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed `false`,\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tif ( this.setAttribute ) {\n\t\t\t\t\tthis.setAttribute( \"class\",\n\t\t\t\t\t\tclassName || value === false ?\n\t\t\t\t\t\t\"\" :\n\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className, elem,\n\t\t\ti = 0;\n\n\t\tclassName = \" \" + selector + \" \";\n\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\tif ( elem.nodeType === 1 &&\n\t\t\t\t( \" \" + stripAndCollapse( getClass( elem ) ) + \" \" ).indexOf( className ) > -1 ) {\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n} );\n\n\n\n\nvar rreturn = /\\r/g;\n\njQuery.fn.extend( {\n\tval: function( value ) {\n\t\tvar hooks, ret, valueIsFunction,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\n\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks &&\n\t\t\t\t\t\"get\" in hooks &&\n\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\n\t\t\t\t) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\t// Handle most common string cases\n\t\t\t\tif ( typeof ret === \"string\" ) {\n\t\t\t\t\treturn ret.replace( rreturn, \"\" );\n\t\t\t\t}\n\n\t\t\t\t// Handle cases where value is null/undef or number\n\t\t\t\treturn ret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvalueIsFunction = isFunction( value );\n\n\t\treturn this.each( function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\n\t\t\t} else if ( Array.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :\n\n\t\t\t\t\t// Support: IE <=10 - 11 only\n\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\n\t\t\t\t\t// Strip and collapse whitespace\n\t\t\t\t\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n\t\t\t\t\tstripAndCollapse( jQuery.text( elem ) );\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option, i,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\",\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length;\n\n\t\t\t\tif ( index < 0 ) {\n\t\t\t\t\ti = max;\n\n\t\t\t\t} else {\n\t\t\t\t\ti = one ? index : 0;\n\t\t\t\t}\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t// IE8-9 doesn't update selected after form reset (#2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t!option.disabled &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled ||\n\t\t\t\t\t\t\t\t!nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t/* eslint-disable no-cond-assign */\n\n\t\t\t\t\tif ( option.selected =\n\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\n\t\t\t\t\t) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* eslint-enable no-cond-assign */\n\t\t\t\t}\n\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Radios and checkboxes getter/setter\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( Array.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\n\t\t};\n\t}\n} );\n\n\n\n\n// Return jQuery for attributes-only inclusion\n\n\nsupport.focusin = \"onfocusin\" in window;\n\n\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n\tstopPropagationCallback = function( e ) {\n\t\te.stopPropagation();\n\t};\n\njQuery.extend( jQuery.event, {\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special, lastElement,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\n\n\t\tcur = lastElement = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf( \".\" ) > -1 ) {\n\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split( \".\" );\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join( \".\" );\n\t\tevent.rnamespace = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tlastElement = cur;\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = (\n\t\t\t\t\tdataPriv.get( cur, \"events\" ) || Object.create( null )\n\t\t\t\t)[ event.type ] &&\n\t\t\t\tdataPriv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\n\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( ( !special._default ||\n\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\n\t\t\t\tacceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\tif ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.addEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\telem[ type ]();\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.removeEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\t// Piggyback on a donor event to simulate a different one\n\t// Used only for `focus(in | out)` events\n\tsimulate: function( type, elem, event ) {\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true\n\t\t\t}\n\t\t);\n\n\t\tjQuery.event.trigger( e, null, elem );\n\t}\n\n} );\n\njQuery.fn.extend( {\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t} );\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[ 0 ];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n} );\n\n\n// Support: Firefox <=44\n// Firefox doesn't have focus(in | out) events\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n//\n// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n// focus(in | out) events fire after focus & blur events,\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\nif ( !support.focusin ) {\n\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\n\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\n\t\t\t\t// Handle: regular nodes (via `this.ownerDocument`), window\n\t\t\t\t// (via `this.document`) & document (via `this`).\n\t\t\t\tvar doc = this.ownerDocument || this.document || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this.document || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tdataPriv.remove( doc, fix );\n\n\t\t\t\t} else {\n\t\t\t\t\tdataPriv.access( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t} );\n}\nvar location = window.location;\n\nvar nonce = { guid: Date.now() };\n\nvar rquery = ( /\\?/ );\n\n\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\n\t// Support: IE 9 - 11 only\n\t// IE throws on parseFromString with invalid input.\n\ttry {\n\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\n\t} catch ( e ) {\n\t\txml = undefined;\n\t}\n\n\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\tjQuery.error( \"Invalid XML: \" + data );\n\t}\n\treturn xml;\n};\n\n\nvar\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( Array.isArray( obj ) ) {\n\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams(\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\n\t\t\t\t\tv,\n\t\t\t\t\ttraditional,\n\t\t\t\t\tadd\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\n\t} else if ( !traditional && toType( obj ) === \"object\" ) {\n\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, valueOrFunction ) {\n\n\t\t\t// If value is a function, invoke it and use its return value\n\t\t\tvar value = isFunction( valueOrFunction ) ?\n\t\t\t\tvalueOrFunction() :\n\t\t\t\tvalueOrFunction;\n\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" +\n\t\t\t\tencodeURIComponent( value == null ? \"\" : value );\n\t\t};\n\n\tif ( a == null ) {\n\t\treturn \"\";\n\t}\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t} );\n\n\t} else {\n\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" );\n};\n\njQuery.fn.extend( {\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map( function() {\n\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t} )\n\t\t.filter( function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t} )\n\t\t.map( function( _i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\tif ( val == null ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\treturn jQuery.map( val, function( val ) {\n\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t} ).get();\n\t}\n} );\n\n\nvar\n\tr20 = /%20/g,\n\trhash = /#.*$/,\n\trantiCache = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\n\t// #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat( \"*\" ),\n\n\t// Anchor tag for parsing the document origin\n\toriginAnchor = document.createElement( \"a\" );\n\toriginAnchor.href = location.href;\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];\n\n\t\tif ( isFunction( func ) ) {\n\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\n\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\n\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t} );\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s.throws ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tstate: \"parsererror\",\n\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n\njQuery.extend( {\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: location.href,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( location.protocol ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /\\bxml\\b/,\n\t\t\thtml: /\\bhtml/,\n\t\t\tjson: /\\bjson\\b/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": JSON.parse,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar transport,\n\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\n\t\t\t// Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\n\t\t\t// Url cleanup var\n\t\t\turlAnchor,\n\n\t\t\t// Request state (becomes false upon send and true upon completion)\n\t\t\tcompleted,\n\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\n\t\t\t// Loop variable\n\t\t\ti,\n\n\t\t\t// uncached part of the url\n\t\t\tuncached,\n\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context &&\n\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\t\tjQuery.event,\n\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\n\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( completed ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() + \" \" ] =\n\t\t\t\t\t\t\t\t\t( responseHeaders[ match[ 1 ].toLowerCase() + \" \" ] || [] )\n\t\t\t\t\t\t\t\t\t\t.concat( match[ 2 ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() + \" \" ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match.join( \", \" );\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn completed ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\tname = requestHeadersNames[ name.toLowerCase() ] =\n\t\t\t\t\t\t\trequestHeadersNames[ name.toLowerCase() ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( completed ) {\n\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Lazy-add the new callbacks in a way that preserves old ones\n\t\t\t\t\t\t\tfor ( code in map ) {\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR );\n\n\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || location.href ) + \"\" )\n\t\t\t.replace( rprotocol, location.protocol + \"//\" );\n\n\t\t// Alias method option to type as per ticket #12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = ( s.dataType || \"*\" ).toLowerCase().match( rnothtmlwhite ) || [ \"\" ];\n\n\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\n\t\tif ( s.crossDomain == null ) {\n\t\t\turlAnchor = document.createElement( \"a\" );\n\n\t\t\t// Support: IE <=8 - 11, Edge 12 - 15\n\t\t\t// IE throws exception on accessing the href property if url is malformed,\n\t\t\t// e.g. http://example.com:80x/\n\t\t\ttry {\n\t\t\t\turlAnchor.href = s.url;\n\n\t\t\t\t// Support: IE <=8 - 11 only\n\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\n\t\t\t\turlAnchor.href = urlAnchor.href;\n\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\n\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\n\t\t\t\t// it can be rejected by the transport if it is invalid\n\t\t\t\ts.crossDomain = true;\n\t\t\t}\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( completed ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\t\tfireGlobals = jQuery.event && s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger( \"ajaxStart\" );\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\t// Remove hash to simplify url manipulation\n\t\tcacheURL = s.url.replace( rhash, \"\" );\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// Remember the hash so we can put it back\n\t\t\tuncached = s.url.slice( cacheURL.length );\n\n\t\t\t// If data is available and should be processed, append data to url\n\t\t\tif ( s.data && ( s.processData || typeof s.data === \"string\" ) ) {\n\t\t\t\tcacheURL += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data;\n\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add or update anti-cache param if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\tcacheURL = cacheURL.replace( rantiCache, \"$1\" );\n\t\t\t\tuncached = ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + ( nonce.guid++ ) +\n\t\t\t\t\tuncached;\n\t\t\t}\n\n\t\t\t// Put hash and anti-cache on the URL that will be requested (gh-1732)\n\t\t\ts.url = cacheURL + uncached;\n\n\t\t// Change '%20' to '+' if this is encoded form body content (gh-2658)\n\t\t} else if ( s.data && s.processData &&\n\t\t\t( s.contentType || \"\" ).indexOf( \"application/x-www-form-urlencoded\" ) === 0 ) {\n\t\t\ts.data = s.data.replace( r20, \"+\" );\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\n\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend &&\n\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {\n\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// Aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tcompleteDeferred.add( s.complete );\n\t\tjqXHR.done( s.success );\n\t\tjqXHR.fail( s.error );\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\n\t\t\t// If request was aborted inside ajaxSend, stop there\n\t\t\tif ( completed ) {\n\t\t\t\treturn jqXHR;\n\t\t\t}\n\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = window.setTimeout( function() {\n\t\t\t\t\tjqXHR.abort( \"timeout\" );\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tcompleted = false;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// Rethrow post-completion exceptions\n\t\t\t\tif ( completed ) {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\n\t\t\t\t// Propagate others as results\n\t\t\t\tdone( -1, e );\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Ignore repeat invocations\n\t\t\tif ( completed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcompleted = true;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\twindow.clearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Use a noop converter for missing script\n\t\t\tif ( !isSuccess && jQuery.inArray( \"script\", s.dataTypes ) > -1 ) {\n\t\t\t\ts.converters[ \"text script\" ] = function() {};\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n} );\n\njQuery.each( [ \"get\", \"post\" ], function( _i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\n\t\t// Shift arguments if data argument was omitted\n\t\tif ( isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\t// The url can be an options object (which then must have .url)\n\t\treturn jQuery.ajax( jQuery.extend( {\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t}, jQuery.isPlainObject( url ) && url ) );\n\t};\n} );\n\njQuery.ajaxPrefilter( function( s ) {\n\tvar i;\n\tfor ( i in s.headers ) {\n\t\tif ( i.toLowerCase() === \"content-type\" ) {\n\t\t\ts.contentType = s.headers[ i ] || \"\";\n\t\t}\n\t}\n} );\n\n\njQuery._evalUrl = function( url, options, doc ) {\n\treturn jQuery.ajax( {\n\t\turl: url,\n\n\t\t// Make this explicit, since user can override this through ajaxSetup (#11264)\n\t\ttype: \"GET\",\n\t\tdataType: \"script\",\n\t\tcache: true,\n\t\tasync: false,\n\t\tglobal: false,\n\n\t\t// Only evaluate the response if it is successful (gh-4126)\n\t\t// dataFilter is not invoked for failure responses, so using it instead\n\t\t// of the default converter is kludgy but it works.\n\t\tconverters: {\n\t\t\t\"text script\": function() {}\n\t\t},\n\t\tdataFilter: function( response ) {\n\t\t\tjQuery.globalEval( response, options, doc );\n\t\t}\n\t} );\n};\n\n\njQuery.fn.extend( {\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( this[ 0 ] ) {\n\t\t\tif ( isFunction( html ) ) {\n\t\t\t\thtml = html.call( this[ 0 ] );\n\t\t\t}\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map( function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t} ).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t} );\n\t},\n\n\twrap: function( html ) {\n\t\tvar htmlIsFunction = isFunction( html );\n\n\t\treturn this.each( function( i ) {\n\t\t\tjQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );\n\t\t} );\n\t},\n\n\tunwrap: function( selector ) {\n\t\tthis.parent( selector ).not( \"body\" ).each( function() {\n\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t} );\n\t\treturn this;\n\t}\n} );\n\n\njQuery.expr.pseudos.hidden = function( elem ) {\n\treturn !jQuery.expr.pseudos.visible( elem );\n};\njQuery.expr.pseudos.visible = function( elem ) {\n\treturn !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\n};\n\n\n\n\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new window.XMLHttpRequest();\n\t} catch ( e ) {}\n};\n\nvar xhrSuccessStatus = {\n\n\t\t// File protocol always yields status code 0, assume 200\n\t\t0: 200,\n\n\t\t// Support: IE <=9 only\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\txhrSupported = jQuery.ajaxSettings.xhr();\n\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nsupport.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport( function( options ) {\n\tvar callback, errorCallback;\n\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i,\n\t\t\t\t\txhr = options.xhr();\n\n\t\t\t\txhr.open(\n\t\t\t\t\toptions.type,\n\t\t\t\t\toptions.url,\n\t\t\t\t\toptions.async,\n\t\t\t\t\toptions.username,\n\t\t\t\t\toptions.password\n\t\t\t\t);\n\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\n\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\n\t\t\t\t}\n\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\n\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.ontimeout =\n\t\t\t\t\t\t\t\t\txhr.onreadystatechange = null;\n\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\n\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\n\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\n\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\n\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcomplete(\n\n\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see #8605, #14207\n\t\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\n\t\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\n\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\n\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\n\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\n\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\terrorCallback = xhr.onerror = xhr.ontimeout = callback( \"error\" );\n\n\t\t\t\t// Support: IE 9 only\n\t\t\t\t// Use onreadystatechange to replace onabort\n\t\t\t\t// to handle uncaught aborts\n\t\t\t\tif ( xhr.onabort !== undefined ) {\n\t\t\t\t\txhr.onabort = errorCallback;\n\t\t\t\t} else {\n\t\t\t\t\txhr.onreadystatechange = function() {\n\n\t\t\t\t\t\t// Check readyState before timeout as it changes\n\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\n\n\t\t\t\t\t\t\t// Allow onerror to be called first,\n\t\t\t\t\t\t\t// but that will not handle a native abort\n\t\t\t\t\t\t\t// Also, save errorCallback to a variable\n\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\n\t\t\t\t\t\t\twindow.setTimeout( function() {\n\t\t\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\t\t\terrorCallback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = callback( \"abort\" );\n\n\t\t\t\ttry {\n\n\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\n// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\njQuery.ajaxPrefilter( function( s ) {\n\tif ( s.crossDomain ) {\n\t\ts.contents.script = false;\n\t}\n} );\n\n// Install script dataType\njQuery.ajaxSetup( {\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, \" +\n\t\t\t\"application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /\\b(?:java|ecma)script\\b/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n} );\n\n// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t}\n} );\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\n\t// This transport only deals with cross domain or forced-by-attrs requests\n\tif ( s.crossDomain || s.scriptAttrs ) {\n\t\tvar script, callback;\n\t\treturn {\n\t\t\tsend: function( _, complete ) {\n\t\t\t\tscript = jQuery( \"<script>\" )\n\t\t\t\t\t.attr( s.scriptAttrs || {} )\n\t\t\t\t\t.prop( { charset: s.scriptCharset, src: s.url } )\n\t\t\t\t\t.on( \"load error\", callback = function( evt ) {\n\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\n\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup( {\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce.guid++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n} );\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" &&\n\t\t\t\t( s.contentType || \"\" )\n\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\n\t\t\t\trjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[ \"script json\" ] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// Force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always( function() {\n\n\t\t\t// If previous value didn't exist - remove it\n\t\t\tif ( overwritten === undefined ) {\n\t\t\t\tjQuery( window ).removeProp( callbackName );\n\n\t\t\t// Otherwise restore preexisting value\n\t\t\t} else {\n\t\t\t\twindow[ callbackName ] = overwritten;\n\t\t\t}\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\n\t\t\t\t// Make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// Save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t} );\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n} );\n\n\n\n\n// Support: Safari 8 only\n// In Safari 8 documents created via document.implementation.createHTMLDocument\n// collapse sibling forms: the second one becomes a child of the first one.\n// Because of that, this security measure has to be disabled in Safari 8.\n// https://bugs.webkit.org/show_bug.cgi?id=137337\nsupport.createHTMLDocument = ( function() {\n\tvar body = document.implementation.createHTMLDocument( \"\" ).body;\n\tbody.innerHTML = \"<form></form><form></form>\";\n\treturn body.childNodes.length === 2;\n} )();\n\n\n// Argument \"data\" should be string of html\n// context (optional): If specified, the fragment will be created in this context,\n// defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( typeof data !== \"string\" ) {\n\t\treturn [];\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\n\tvar base, parsed, scripts;\n\n\tif ( !context ) {\n\n\t\t// Stop scripts or inline event handlers from being executed immediately\n\t\t// by using document.implementation\n\t\tif ( support.createHTMLDocument ) {\n\t\t\tcontext = document.implementation.createHTMLDocument( \"\" );\n\n\t\t\t// Set the base href for the created document\n\t\t\t// so any parsed elements with URLs\n\t\t\t// are based on the document's URL (gh-2965)\n\t\t\tbase = context.createElement( \"base\" );\n\t\t\tbase.href = document.location.href;\n\t\t\tcontext.head.appendChild( base );\n\t\t} else {\n\t\t\tcontext = document;\n\t\t}\n\t}\n\n\tparsed = rsingleTag.exec( data );\n\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\n\t}\n\n\tparsed = buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf( \" \" );\n\n\tif ( off > -1 ) {\n\t\tselector = stripAndCollapse( url.slice( off ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax( {\n\t\t\turl: url,\n\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\n\t\t\t// Make value of this field explicit since\n\t\t\t// user can override it through ajaxSetup method\n\t\t\ttype: type || \"GET\",\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t} ).done( function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n\t\t// but they are ignored because response was set above.\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n\t\t} ).always( callback && function( jqXHR, status ) {\n\t\t\tself.each( function() {\n\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t\t} );\n\t\t} );\n\t}\n\n\treturn this;\n};\n\n\n\n\njQuery.expr.pseudos.animated = function( elem ) {\n\treturn jQuery.grep( jQuery.timers, function( fn ) {\n\t\treturn elem === fn.elem;\n\t} ).length;\n};\n\n\n\n\njQuery.offset = {\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\n\n\t\t// Need to be able to calculate position if either\n\t\t// top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( isFunction( options ) ) {\n\n\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tif ( typeof props.top === \"number\" ) {\n\t\t\t\tprops.top += \"px\";\n\t\t\t}\n\t\t\tif ( typeof props.left === \"number\" ) {\n\t\t\t\tprops.left += \"px\";\n\t\t\t}\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\njQuery.fn.extend( {\n\n\t// offset() relates an element's border box to the document origin\n\toffset: function( options ) {\n\n\t\t// Preserve chaining for setter\n\t\tif ( arguments.length ) {\n\t\t\treturn options === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each( function( i ) {\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t} );\n\t\t}\n\n\t\tvar rect, win,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !elem ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n\t\t// Support: IE <=11 only\n\t\t// Running getBoundingClientRect on a\n\t\t// disconnected node in IE throws an error\n\t\tif ( !elem.getClientRects().length ) {\n\t\t\treturn { top: 0, left: 0 };\n\t\t}\n\n\t\t// Get document-relative position by adding viewport scroll to viewport-relative gBCR\n\t\trect = elem.getBoundingClientRect();\n\t\twin = elem.ownerDocument.defaultView;\n\t\treturn {\n\t\t\ttop: rect.top + win.pageYOffset,\n\t\t\tleft: rect.left + win.pageXOffset\n\t\t};\n\t},\n\n\t// position() relates an element's margin box to its offset parent's padding box\n\t// This corresponds to the behavior of CSS absolute positioning\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset, doc,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// position:fixed elements are offset from the viewport, which itself always has zero offset\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\n\t\t\t// Assume position:fixed implies availability of getBoundingClientRect\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\t\t\toffset = this.offset();\n\n\t\t\t// Account for the *real* offset parent, which can be the document or its root element\n\t\t\t// when a statically positioned element is identified\n\t\t\tdoc = elem.ownerDocument;\n\t\t\toffsetParent = elem.offsetParent || doc.documentElement;\n\t\t\twhile ( offsetParent &&\n\t\t\t\t( offsetParent === doc.body || offsetParent === doc.documentElement ) &&\n\t\t\t\tjQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\n\t\t\t\toffsetParent = offsetParent.parentNode;\n\t\t\t}\n\t\t\tif ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {\n\n\t\t\t\t// Incorporate borders into its offset, since they are outside its content origin\n\t\t\t\tparentOffset = jQuery( offsetParent ).offset();\n\t\t\t\tparentOffset.top += jQuery.css( offsetParent, \"borderTopWidth\", true );\n\t\t\t\tparentOffset.left += jQuery.css( offsetParent, \"borderLeftWidth\", true );\n\t\t\t}\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\t// This method will return documentElement in the following cases:\n\t// 1) For the element inside the iframe without offsetParent, this method will return\n\t//    documentElement of the parent window\n\t// 2) For the hidden or detached element\n\t// 3) For body or html element, i.e. in case of the html node - it will return itself\n\t//\n\t// but those exceptions were never presented as a real life use-cases\n\t// and might be considered as more preferable results.\n\t//\n\t// This logic, however, is not guaranteed and can change at any point in the future\n\toffsetParent: function() {\n\t\treturn this.map( function() {\n\t\t\tvar offsetParent = this.offsetParent;\n\n\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || documentElement;\n\t\t} );\n\t}\n} );\n\n// Create scrollLeft and scrollTop methods\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn access( this, function( elem, method, val ) {\n\n\t\t\t// Coalesce documents and windows\n\t\t\tvar win;\n\t\t\tif ( isWindow( elem ) ) {\n\t\t\t\twin = elem;\n\t\t\t} else if ( elem.nodeType === 9 ) {\n\t\t\t\twin = elem.defaultView;\n\t\t\t}\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : win.pageXOffset,\n\t\t\t\t\ttop ? val : win.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length );\n\t};\n} );\n\n// Support: Safari <=7 - 9.1, Chrome <=37 - 49\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n// getComputedStyle returns percent when specified for top/left/bottom/right;\n// rather than make the css module depend on the offset module, just check for it here\njQuery.each( [ \"top\", \"left\" ], function( _i, prop ) {\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\tcomputed = curCSS( elem, prop );\n\n\t\t\t\t// If curCSS returns percentage, fallback to offset\n\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\tcomputed;\n\t\t\t}\n\t\t}\n\t);\n} );\n\n\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name },\n\t\tfunction( defaultExtra, funcName ) {\n\n\t\t// Margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( isWindow( elem ) ) {\n\n\t\t\t\t\t// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n\t\t\t\t\treturn funcName.indexOf( \"outer\" ) === 0 ?\n\t\t\t\t\t\telem[ \"inner\" + name ] :\n\t\t\t\t\t\telem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable );\n\t\t};\n\t} );\n} );\n\n\njQuery.each( [\n\t\"ajaxStart\",\n\t\"ajaxStop\",\n\t\"ajaxComplete\",\n\t\"ajaxError\",\n\t\"ajaxSuccess\",\n\t\"ajaxSend\"\n], function( _i, type ) {\n\tjQuery.fn[ type ] = function( fn ) {\n\t\treturn this.on( type, fn );\n\t};\n} );\n\n\n\n\njQuery.fn.extend( {\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ?\n\t\t\tthis.off( selector, \"**\" ) :\n\t\t\tthis.off( types, selector || \"**\", fn );\n\t},\n\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t}\n} );\n\njQuery.each( ( \"blur focus focusin focusout resize scroll click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup contextmenu\" ).split( \" \" ),\n\tfunction( _i, name ) {\n\n\t\t// Handle event binding\n\t\tjQuery.fn[ name ] = function( data, fn ) {\n\t\t\treturn arguments.length > 0 ?\n\t\t\t\tthis.on( name, null, data, fn ) :\n\t\t\t\tthis.trigger( name );\n\t\t};\n\t} );\n\n\n\n\n// Support: Android <=4.0 only\n// Make sure we trim BOM and NBSP\nvar rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n\n// Bind a function to a context, optionally partially applying any\n// arguments.\n// jQuery.proxy is deprecated to promote standards (specifically Function#bind)\n// However, it is not slated for removal any time soon\njQuery.proxy = function( fn, context ) {\n\tvar tmp, args, proxy;\n\n\tif ( typeof context === \"string\" ) {\n\t\ttmp = fn[ context ];\n\t\tcontext = fn;\n\t\tfn = tmp;\n\t}\n\n\t// Quick check to determine if target is callable, in the spec\n\t// this throws a TypeError, but we will just return undefined.\n\tif ( !isFunction( fn ) ) {\n\t\treturn undefined;\n\t}\n\n\t// Simulated bind\n\targs = slice.call( arguments, 2 );\n\tproxy = function() {\n\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t};\n\n\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\treturn proxy;\n};\n\njQuery.holdReady = function( hold ) {\n\tif ( hold ) {\n\t\tjQuery.readyWait++;\n\t} else {\n\t\tjQuery.ready( true );\n\t}\n};\njQuery.isArray = Array.isArray;\njQuery.parseJSON = JSON.parse;\njQuery.nodeName = nodeName;\njQuery.isFunction = isFunction;\njQuery.isWindow = isWindow;\njQuery.camelCase = camelCase;\njQuery.type = toType;\n\njQuery.now = Date.now;\n\njQuery.isNumeric = function( obj ) {\n\n\t// As of jQuery 3.0, isNumeric is limited to\n\t// strings and numbers (primitives or objects)\n\t// that can be coerced to finite numbers (gh-2662)\n\tvar type = jQuery.type( obj );\n\treturn ( type === \"number\" || type === \"string\" ) &&\n\n\t\t// parseFloat NaNs numeric-cast false positives (\"\")\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t// subtraction forces infinities to NaN\n\t\t!isNaN( obj - parseFloat( obj ) );\n};\n\njQuery.trim = function( text ) {\n\treturn text == null ?\n\t\t\"\" :\n\t\t( text + \"\" ).replace( rtrim, \"\" );\n};\n\n\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( typeof define === \"function\" && define.amd ) {\n\tdefine( \"jquery\", [], function() {\n\t\treturn jQuery;\n\t} );\n}\n\n\n\n\nvar\n\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$;\n\njQuery.noConflict = function( deep ) {\n\tif ( window.$ === jQuery ) {\n\t\twindow.$ = _$;\n\t}\n\n\tif ( deep && window.jQuery === jQuery ) {\n\t\twindow.jQuery = _jQuery;\n\t}\n\n\treturn jQuery;\n};\n\n// Expose jQuery and $ identifiers, even in AMD\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (#13566)\nif ( typeof noGlobal === \"undefined\" ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\n\n\n\nreturn jQuery;\n} );\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n","var baseCreate = require('./_baseCreate'),\n    baseLodash = require('./_baseLodash');\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295;\n\n/**\n * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n *\n * @private\n * @constructor\n * @param {*} value The value to wrap.\n */\nfunction LazyWrapper(value) {\n  this.__wrapped__ = value;\n  this.__actions__ = [];\n  this.__dir__ = 1;\n  this.__filtered__ = false;\n  this.__iteratees__ = [];\n  this.__takeCount__ = MAX_ARRAY_LENGTH;\n  this.__views__ = [];\n}\n\n// Ensure `LazyWrapper` is an instance of `baseLodash`.\nLazyWrapper.prototype = baseCreate(baseLodash.prototype);\nLazyWrapper.prototype.constructor = LazyWrapper;\n\nmodule.exports = LazyWrapper;\n","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n","var baseCreate = require('./_baseCreate'),\n    baseLodash = require('./_baseLodash');\n\n/**\n * The base constructor for creating `lodash` wrapper objects.\n *\n * @private\n * @param {*} value The value to wrap.\n * @param {boolean} [chainAll] Enable explicit method chain sequences.\n */\nfunction LodashWrapper(value, chainAll) {\n  this.__wrapped__ = value;\n  this.__actions__ = [];\n  this.__chain__ = !!chainAll;\n  this.__index__ = 0;\n  this.__values__ = undefined;\n}\n\nLodashWrapper.prototype = baseCreate(baseLodash.prototype);\nLodashWrapper.prototype.constructor = LodashWrapper;\n\nmodule.exports = LodashWrapper;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n","/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n","var baseProperty = require('./_baseProperty');\n\n/**\n * Gets the size of an ASCII `string`.\n *\n * @private\n * @param {string} string The string inspect.\n * @returns {number} Returns the string size.\n */\nvar asciiSize = baseProperty('length');\n\nmodule.exports = asciiSize;\n","/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;\n","/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\nmodule.exports = asciiWords;\n","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n","var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n","var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n","/**\n * The base implementation of `_.clamp` which doesn't coerce arguments.\n *\n * @private\n * @param {number} number The number to clamp.\n * @param {number} [lower] The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the clamped number.\n */\nfunction baseClamp(number, lower, upper) {\n  if (number === number) {\n    if (upper !== undefined) {\n      number = number <= upper ? number : upper;\n    }\n    if (lower !== undefined) {\n      number = number >= lower ? number : lower;\n    }\n  }\n  return number;\n}\n\nmodule.exports = baseClamp;\n","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys'),\n    keysIn = require('./keysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","var isObject = require('./isObject');\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nmodule.exports = baseCreate;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    arrayMap = require('./_arrayMap'),\n    baseUnary = require('./_baseUnary'),\n    cacheHas = require('./_cacheHas');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseDifference;\n","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n","var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","/**\n * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n * without support for iteratee shorthands, which iterates over `collection`\n * using `eachFunc`.\n *\n * @private\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @returns {*} Returns the found element or its key, else `undefined`.\n */\nfunction baseFindKey(collection, predicate, eachFunc) {\n  var result;\n  eachFunc(collection, function(value, key, collection) {\n    if (predicate(value, key, collection)) {\n      result = key;\n      return false;\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFindKey;\n","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  return object != null && hasOwnProperty.call(object, key);\n}\n\nmodule.exports = baseHas;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * The base implementation of `_.inRange` which doesn't coerce arguments.\n *\n * @private\n * @param {number} number The number to check.\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n */\nfunction baseInRange(number, start, end) {\n  return number >= nativeMin(start, end) && number < nativeMax(start, end);\n}\n\nmodule.exports = baseInRange;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    arrayMap = require('./_arrayMap'),\n    baseUnary = require('./_baseUnary'),\n    cacheHas = require('./_cacheHas');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * The base implementation of methods like `_.intersection`, without support\n * for iteratee shorthands, that accepts an array of arrays to inspect.\n *\n * @private\n * @param {Array} arrays The arrays to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of shared values.\n */\nfunction baseIntersection(arrays, iteratee, comparator) {\n  var includes = comparator ? arrayIncludesWith : arrayIncludes,\n      length = arrays[0].length,\n      othLength = arrays.length,\n      othIndex = othLength,\n      caches = Array(othLength),\n      maxLength = Infinity,\n      result = [];\n\n  while (othIndex--) {\n    var array = arrays[othIndex];\n    if (othIndex && iteratee) {\n      array = arrayMap(array, baseUnary(iteratee));\n    }\n    maxLength = nativeMin(array.length, maxLength);\n    caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n      ? new SetCache(othIndex && array)\n      : undefined;\n  }\n  array = arrays[0];\n\n  var index = -1,\n      seen = caches[0];\n\n  outer:\n  while (++index < length && result.length < maxLength) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (!(seen\n          ? cacheHas(seen, computed)\n          : includes(result, computed, comparator)\n        )) {\n      othIndex = othLength;\n      while (--othIndex) {\n        var cache = caches[othIndex];\n        if (!(cache\n              ? cacheHas(cache, computed)\n              : includes(arrays[othIndex], computed, comparator))\n            ) {\n          continue outer;\n        }\n      }\n      if (seen) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseIntersection;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n","var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n","/**\n * The function whose prototype chain sequence wrappers inherit from.\n *\n * @private\n */\nfunction baseLodash() {\n  // No operation performed.\n}\n\nmodule.exports = baseLodash;\n","var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n","var baseGet = require('./_baseGet');\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n","/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = basePropertyOf;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n","/**\n * The base implementation of `_.reduce` and `_.reduceRight`, without support\n * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} accumulator The initial value.\n * @param {boolean} initAccum Specify using the first or last element of\n *  `collection` as the initial value.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @returns {*} Returns the accumulated value.\n */\nfunction baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n  eachFunc(collection, function(value, index, collection) {\n    accumulator = initAccum\n      ? (initAccum = false, value)\n      : iteratee(accumulator, value, index, collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseReduce;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor;\n\n/**\n * The base implementation of `_.repeat` which doesn't coerce arguments.\n *\n * @private\n * @param {string} string The string to repeat.\n * @param {number} n The number of times to repeat the string.\n * @returns {string} Returns the repeated string.\n */\nfunction baseRepeat(string, n) {\n  var result = '';\n  if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n    return result;\n  }\n  // Leverage the exponentiation by squaring algorithm for a faster repeat.\n  // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n  do {\n    if (n % 2) {\n      result += string;\n    }\n    n = nativeFloor(n / 2);\n    if (n) {\n      string += string;\n    }\n  } while (n);\n\n  return result;\n}\n\nmodule.exports = baseRepeat;\n","var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n","var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n","var isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Casts `value` to an empty array if it's not an array like object.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array|Object} Returns the cast array-like object.\n */\nfunction castArrayLikeObject(value) {\n  return isArrayLikeObject(value) ? value : [];\n}\n\nmodule.exports = castArrayLikeObject;\n","var identity = require('./identity');\n\n/**\n * Casts `value` to `identity` if it's not a function.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Function} Returns cast function.\n */\nfunction castFunction(value) {\n  return typeof value == 'function' ? value : identity;\n}\n\nmodule.exports = castFunction;\n","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n","var baseSlice = require('./_baseSlice');\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;\n","var Uint8Array = require('./_Uint8Array');\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nmodule.exports = cloneArrayBuffer;\n","var root = require('./_root');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nmodule.exports = cloneBuffer;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nmodule.exports = cloneTypedArray;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = copyArray;\n","var assignValue = require('./_assignValue'),\n    baseAssignValue = require('./_baseAssignValue');\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nmodule.exports = copyObject;\n","var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","var isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","var arrayReduce = require('./_arrayReduce'),\n    deburr = require('./deburr'),\n    words = require('./words');\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\";\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\nmodule.exports = createCompounder;\n","var baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;\n","var LodashWrapper = require('./_LodashWrapper'),\n    flatRest = require('./_flatRest'),\n    getData = require('./_getData'),\n    getFuncName = require('./_getFuncName'),\n    isArray = require('./isArray'),\n    isLaziable = require('./_isLaziable');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_CURRY_FLAG = 8,\n    WRAP_PARTIAL_FLAG = 32,\n    WRAP_ARY_FLAG = 128,\n    WRAP_REARG_FLAG = 256;\n\n/**\n * Creates a `_.flow` or `_.flowRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new flow function.\n */\nfunction createFlow(fromRight) {\n  return flatRest(function(funcs) {\n    var length = funcs.length,\n        index = length,\n        prereq = LodashWrapper.prototype.thru;\n\n    if (fromRight) {\n      funcs.reverse();\n    }\n    while (index--) {\n      var func = funcs[index];\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n        var wrapper = new LodashWrapper([], true);\n      }\n    }\n    index = wrapper ? index : length;\n    while (++index < length) {\n      func = funcs[index];\n\n      var funcName = getFuncName(func),\n          data = funcName == 'wrapper' ? getData(func) : undefined;\n\n      if (data && isLaziable(data[0]) &&\n            data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n            !data[4].length && data[9] == 1\n          ) {\n        wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n      } else {\n        wrapper = (func.length == 1 && isLaziable(func))\n          ? wrapper[funcName]()\n          : wrapper.thru(func);\n      }\n    }\n    return function() {\n      var args = arguments,\n          value = args[0];\n\n      if (wrapper && args.length == 1 && isArray(value)) {\n        return wrapper.plant(value).value();\n      }\n      var index = 0,\n          result = length ? funcs[index].apply(this, args) : value;\n\n      while (++index < length) {\n        result = funcs[index].call(this, result);\n      }\n      return result;\n    };\n  });\n}\n\nmodule.exports = createFlow;\n","var baseRepeat = require('./_baseRepeat'),\n    baseToString = require('./_baseToString'),\n    castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringSize = require('./_stringSize'),\n    stringToArray = require('./_stringToArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil;\n\n/**\n * Creates the padding for `string` based on `length`. The `chars` string\n * is truncated if the number of characters exceeds `length`.\n *\n * @private\n * @param {number} length The padding length.\n * @param {string} [chars=' '] The string used as padding.\n * @returns {string} Returns the padding for `string`.\n */\nfunction createPadding(length, chars) {\n  chars = chars === undefined ? ' ' : baseToString(chars);\n\n  var charsLength = chars.length;\n  if (charsLength < 2) {\n    return charsLength ? baseRepeat(chars, length) : chars;\n  }\n  var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n  return hasUnicode(chars)\n    ? castSlice(stringToArray(result), 0, length).join('')\n    : result.slice(0, length);\n}\n\nmodule.exports = createPadding;\n","var root = require('./_root'),\n    toInteger = require('./toInteger'),\n    toNumber = require('./toNumber'),\n    toString = require('./toString');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsFinite = root.isFinite,\n    nativeMin = Math.min;\n\n/**\n * Creates a function like `_.round`.\n *\n * @private\n * @param {string} methodName The name of the `Math` method to use when rounding.\n * @returns {Function} Returns the new round function.\n */\nfunction createRound(methodName) {\n  var func = Math[methodName];\n  return function(number, precision) {\n    number = toNumber(number);\n    precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n    if (precision && nativeIsFinite(number)) {\n      // Shift with exponential notation to avoid floating-point issues.\n      // See [MDN](https://mdn.io/round#Examples) for more details.\n      var pair = (toString(number) + 'e').split('e'),\n          value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n      pair = (toString(value) + 'e').split('e');\n      return +(pair[0] + 'e' + (+pair[1] - precision));\n    }\n    return func(number);\n  };\n}\n\nmodule.exports = createRound;\n","var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n","var basePropertyOf = require('./_basePropertyOf');\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 's'\n};\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\nmodule.exports = deburrLetter;\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n","var getAllKeys = require('./_getAllKeys');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Check that cyclic values are equal.\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n","var flatten = require('./flatten'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * A specialized version of `baseRest` which flattens the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\nfunction flatRest(func) {\n  return setToString(overRest(func, undefined, flatten), func + '');\n}\n\nmodule.exports = flatRest;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","var metaMap = require('./_metaMap'),\n    noop = require('./noop');\n\n/**\n * Gets metadata for `func`.\n *\n * @private\n * @param {Function} func The function to query.\n * @returns {*} Returns the metadata for `func`.\n */\nvar getData = !metaMap ? noop : function(func) {\n  return metaMap.get(func);\n};\n\nmodule.exports = getData;\n","var realNames = require('./_realNames');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the name of `func`.\n *\n * @private\n * @param {Function} func The function to query.\n * @returns {string} Returns the function name.\n */\nfunction getFuncName(func) {\n  var result = (func.name + ''),\n      array = realNames[result],\n      length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n  while (length--) {\n    var data = array[length],\n        otherFunc = data.func;\n    if (otherFunc == null || otherFunc == func) {\n      return data.name;\n    }\n  }\n  return result;\n}\n\nmodule.exports = getFuncName;\n","var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","var overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n","/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\nmodule.exports = hasUnicodeWord;\n","var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","var baseCreate = require('./_baseCreate'),\n    getPrototype = require('./_getPrototype'),\n    isPrototype = require('./_isPrototype');\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nmodule.exports = initCloneObject;\n","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n","var LazyWrapper = require('./_LazyWrapper'),\n    getData = require('./_getData'),\n    getFuncName = require('./_getFuncName'),\n    lodash = require('./wrapperLodash');\n\n/**\n * Checks if `func` has a lazy counterpart.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n *  else `false`.\n */\nfunction isLaziable(func) {\n  var funcName = getFuncName(func),\n      other = lodash[funcName];\n\n  if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n    return false;\n  }\n  if (func === other) {\n    return true;\n  }\n  var data = getData(other);\n  return !!data && func === data[0];\n}\n\nmodule.exports = isLaziable;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","var isObject = require('./isObject');\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n","var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n","var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n","var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n","var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nmodule.exports = matchesStrictComparable;\n","var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n","var WeakMap = require('./_WeakMap');\n\n/** Used to store function metadata. */\nvar metaMap = WeakMap && new WeakMap;\n\nmodule.exports = metaMap;\n","var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n","/** Used to lookup unminified function names. */\nvar realNames = {};\n\nmodule.exports = realNames;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n","var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n","var ListCache = require('./_ListCache');\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","var asciiSize = require('./_asciiSize'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeSize = require('./_unicodeSize');\n\n/**\n * Gets the number of symbols in `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the string size.\n */\nfunction stringSize(string) {\n  return hasUnicode(string)\n    ? unicodeSize(string)\n    : asciiSize(string);\n}\n\nmodule.exports = stringSize;\n","var asciiToArray = require('./_asciiToArray'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeToArray = require('./_unicodeToArray');\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;\n","var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n","var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Gets the size of a Unicode `string`.\n *\n * @private\n * @param {string} string The string inspect.\n * @returns {number} Returns the string size.\n */\nfunction unicodeSize(string) {\n  var result = reUnicode.lastIndex = 0;\n  while (reUnicode.test(string)) {\n    ++result;\n  }\n  return result;\n}\n\nmodule.exports = unicodeSize;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n    rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n  rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n  rsUpper + '+' + rsOptContrUpper,\n  rsOrdUpper,\n  rsOrdLower,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\nmodule.exports = unicodeWords;\n","var LazyWrapper = require('./_LazyWrapper'),\n    LodashWrapper = require('./_LodashWrapper'),\n    copyArray = require('./_copyArray');\n\n/**\n * Creates a clone of `wrapper`.\n *\n * @private\n * @param {Object} wrapper The wrapper to clone.\n * @returns {Object} Returns the cloned wrapper.\n */\nfunction wrapperClone(wrapper) {\n  if (wrapper instanceof LazyWrapper) {\n    return wrapper.clone();\n  }\n  var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n  result.__actions__ = copyArray(wrapper.__actions__);\n  result.__index__  = wrapper.__index__;\n  result.__values__ = wrapper.__values__;\n  return result;\n}\n\nmodule.exports = wrapperClone;\n","var createRound = require('./_createRound');\n\n/**\n * Computes `number` rounded up to `precision`.\n *\n * @static\n * @memberOf _\n * @since 3.10.0\n * @category Math\n * @param {number} number The number to round up.\n * @param {number} [precision=0] The precision to round up to.\n * @returns {number} Returns the rounded up number.\n * @example\n *\n * _.ceil(4.006);\n * // => 5\n *\n * _.ceil(6.004, 2);\n * // => 6.01\n *\n * _.ceil(6040, -2);\n * // => 6100\n */\nvar ceil = createRound('ceil');\n\nmodule.exports = ceil;\n","var baseSlice = require('./_baseSlice'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * Creates an array of elements split into groups the length of `size`.\n * If `array` can't be split evenly, the final chunk will be the remaining\n * elements.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to process.\n * @param {number} [size=1] The length of each chunk\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the new array of chunks.\n * @example\n *\n * _.chunk(['a', 'b', 'c', 'd'], 2);\n * // => [['a', 'b'], ['c', 'd']]\n *\n * _.chunk(['a', 'b', 'c', 'd'], 3);\n * // => [['a', 'b', 'c'], ['d']]\n */\nfunction chunk(array, size, guard) {\n  if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n    size = 1;\n  } else {\n    size = nativeMax(toInteger(size), 0);\n  }\n  var length = array == null ? 0 : array.length;\n  if (!length || size < 1) {\n    return [];\n  }\n  var index = 0,\n      resIndex = 0,\n      result = Array(nativeCeil(length / size));\n\n  while (index < length) {\n    result[resIndex++] = baseSlice(array, index, (index += size));\n  }\n  return result;\n}\n\nmodule.exports = chunk;\n","var baseClamp = require('./_baseClamp'),\n    toNumber = require('./toNumber');\n\n/**\n * Clamps `number` within the inclusive `lower` and `upper` bounds.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Number\n * @param {number} number The number to clamp.\n * @param {number} [lower] The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the clamped number.\n * @example\n *\n * _.clamp(-10, -5, 5);\n * // => -5\n *\n * _.clamp(10, -5, 5);\n * // => 5\n */\nfunction clamp(number, lower, upper) {\n  if (upper === undefined) {\n    upper = lower;\n    lower = undefined;\n  }\n  if (upper !== undefined) {\n    upper = toNumber(upper);\n    upper = upper === upper ? upper : 0;\n  }\n  if (lower !== undefined) {\n    lower = toNumber(lower);\n    lower = lower === lower ? lower : 0;\n  }\n  return baseClamp(toNumber(number), lower, upper);\n}\n\nmodule.exports = clamp;\n","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = clone;\n","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n","/**\n * Creates an array with all falsey values removed. The values `false`, `null`,\n * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to compact.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.compact([0, 1, false, 2, '', 3]);\n * // => [1, 2, 3]\n */\nfunction compact(array) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (value) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = compact;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n","var deburrLetter = require('./_deburrLetter'),\n    toString = require('./toString');\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;\n\n/** Used to compose unicode capture groups. */\nvar rsCombo = '[' + rsComboRange + ']';\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\nmodule.exports = deburr;\n","/**\n * Checks `value` to determine whether a default value should be returned in\n * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n * or `undefined`.\n *\n * @static\n * @memberOf _\n * @since 4.14.0\n * @category Util\n * @param {*} value The value to check.\n * @param {*} defaultValue The default value.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * _.defaultTo(1, 10);\n * // => 1\n *\n * _.defaultTo(undefined, 10);\n * // => 10\n */\nfunction defaultTo(value, defaultValue) {\n  return (value == null || value !== value) ? defaultValue : value;\n}\n\nmodule.exports = defaultTo;\n","var baseDifference = require('./_baseDifference'),\n    baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */\nvar difference = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n    : [];\n});\n\nmodule.exports = difference;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var arrayFilter = require('./_arrayFilter'),\n    baseFilter = require('./_baseFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = filter;\n","var createFind = require('./_createFind'),\n    findIndex = require('./findIndex');\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nmodule.exports = find;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;\n","var baseFindKey = require('./_baseFindKey'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * This method is like `_.find` except that it returns the key of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Object\n * @param {Object} object The object to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {string|undefined} Returns the key of the matched element,\n *  else `undefined`.\n * @example\n *\n * var users = {\n *   'barney':  { 'age': 36, 'active': true },\n *   'fred':    { 'age': 40, 'active': false },\n *   'pebbles': { 'age': 1,  'active': true }\n * };\n *\n * _.findKey(users, function(o) { return o.age < 40; });\n * // => 'barney' (iteration order is not guaranteed)\n *\n * // The `_.matches` iteratee shorthand.\n * _.findKey(users, { 'age': 1, 'active': true });\n * // => 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findKey(users, ['active', false]);\n * // => 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.findKey(users, 'active');\n * // => 'barney'\n */\nfunction findKey(object, predicate) {\n  return baseFindKey(object, baseIteratee(predicate, 3), baseForOwn);\n}\n\nmodule.exports = findKey;\n","var createFind = require('./_createFind'),\n    findLastIndex = require('./findLastIndex');\n\n/**\n * This method is like `_.find` except that it iterates over elements of\n * `collection` from right to left.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=collection.length-1] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * _.findLast([1, 2, 3, 4], function(n) {\n *   return n % 2 == 1;\n * });\n * // => 3\n */\nvar findLast = createFind(findLastIndex);\n\nmodule.exports = findLast;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * This method is like `_.findIndex` except that it iterates over elements\n * of `collection` from right to left.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=array.length-1] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': true },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': false }\n * ];\n *\n * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n * // => 2\n *\n * // The `_.matches` iteratee shorthand.\n * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n * // => 0\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findLastIndex(users, ['active', false]);\n * // => 2\n *\n * // The `_.property` iteratee shorthand.\n * _.findLastIndex(users, 'active');\n * // => 0\n */\nfunction findLastIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = length - 1;\n  if (fromIndex !== undefined) {\n    index = toInteger(fromIndex);\n    index = fromIndex < 0\n      ? nativeMax(length + index, 0)\n      : nativeMin(index, length - 1);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index, true);\n}\n\nmodule.exports = findLastIndex;\n","module.exports = require('./head');\n","var baseFlatten = require('./_baseFlatten');\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nmodule.exports = flatten;\n","var createRound = require('./_createRound');\n\n/**\n * Computes `number` rounded down to `precision`.\n *\n * @static\n * @memberOf _\n * @since 3.10.0\n * @category Math\n * @param {number} number The number to round down.\n * @param {number} [precision=0] The precision to round down to.\n * @returns {number} Returns the rounded down number.\n * @example\n *\n * _.floor(4.006);\n * // => 4\n *\n * _.floor(0.046, 2);\n * // => 0.04\n *\n * _.floor(4060, -2);\n * // => 4000\n */\nvar floor = createRound('floor');\n\nmodule.exports = floor;\n","var createFlow = require('./_createFlow');\n\n/**\n * Creates a function that returns the result of invoking the given functions\n * with the `this` binding of the created function, where each successive\n * invocation is supplied the return value of the previous.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Util\n * @param {...(Function|Function[])} [funcs] The functions to invoke.\n * @returns {Function} Returns the new composite function.\n * @see _.flowRight\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * var addSquare = _.flow([_.add, square]);\n * addSquare(1, 2);\n * // => 9\n */\nvar flow = createFlow();\n\nmodule.exports = flow;\n","var arrayEach = require('./_arrayEach'),\n    baseEach = require('./_baseEach'),\n    castFunction = require('./_castFunction'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection` and invokes `iteratee` for each element.\n * The iteratee is invoked with three arguments: (value, index|key, collection).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n * property are iterated like arrays. To avoid this behavior use `_.forIn`\n * or `_.forOwn` for object iteration.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias each\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n * @see _.forEachRight\n * @example\n *\n * _.forEach([1, 2], function(value) {\n *   console.log(value);\n * });\n * // => Logs `1` then `2`.\n *\n * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */\nfunction forEach(collection, iteratee) {\n  var func = isArray(collection) ? arrayEach : baseEach;\n  return func(collection, castFunction(iteratee));\n}\n\nmodule.exports = forEach;\n","var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","var baseHas = require('./_baseHas'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct property of `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = { 'a': { 'b': 2 } };\n * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.has(object, 'a');\n * // => true\n *\n * _.has(object, 'a.b');\n * // => true\n *\n * _.has(object, ['a', 'b']);\n * // => true\n *\n * _.has(other, 'a');\n * // => false\n */\nfunction has(object, path) {\n  return object != null && hasPath(object, path, baseHas);\n}\n\nmodule.exports = has;\n","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n","/**\n * Gets the first element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias first\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the first element of `array`.\n * @example\n *\n * _.head([1, 2, 3]);\n * // => 1\n *\n * _.head([]);\n * // => undefined\n */\nfunction head(array) {\n  return (array && array.length) ? array[0] : undefined;\n}\n\nmodule.exports = head;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var baseInRange = require('./_baseInRange'),\n    toFinite = require('./toFinite'),\n    toNumber = require('./toNumber');\n\n/**\n * Checks if `n` is between `start` and up to, but not including, `end`. If\n * `end` is not specified, it's set to `start` with `start` then set to `0`.\n * If `start` is greater than `end` the params are swapped to support\n * negative ranges.\n *\n * @static\n * @memberOf _\n * @since 3.3.0\n * @category Number\n * @param {number} number The number to check.\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n * @see _.range, _.rangeRight\n * @example\n *\n * _.inRange(3, 2, 4);\n * // => true\n *\n * _.inRange(4, 8);\n * // => true\n *\n * _.inRange(4, 2);\n * // => false\n *\n * _.inRange(2, 2);\n * // => false\n *\n * _.inRange(1.2, 2);\n * // => true\n *\n * _.inRange(5.2, 4);\n * // => false\n *\n * _.inRange(-3, -2, -6);\n * // => true\n */\nfunction inRange(number, start, end) {\n  start = toFinite(start);\n  if (end === undefined) {\n    end = start;\n    start = 0;\n  } else {\n    end = toFinite(end);\n  }\n  number = toNumber(number);\n  return baseInRange(number, start, end);\n}\n\nmodule.exports = inRange;\n","var baseIndexOf = require('./_baseIndexOf'),\n    isArrayLike = require('./isArrayLike'),\n    isString = require('./isString'),\n    toInteger = require('./toInteger'),\n    values = require('./values');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Checks if `value` is in `collection`. If `collection` is a string, it's\n * checked for a substring of `value`, otherwise\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * is used for equality comparisons. If `fromIndex` is negative, it's used as\n * the offset from the end of `collection`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {boolean} Returns `true` if `value` is found, else `false`.\n * @example\n *\n * _.includes([1, 2, 3], 1);\n * // => true\n *\n * _.includes([1, 2, 3], 1, 2);\n * // => false\n *\n * _.includes({ 'a': 1, 'b': 2 }, 1);\n * // => true\n *\n * _.includes('abcd', 'bc');\n * // => true\n */\nfunction includes(collection, value, fromIndex, guard) {\n  collection = isArrayLike(collection) ? collection : values(collection);\n  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n  var length = collection.length;\n  if (fromIndex < 0) {\n    fromIndex = nativeMax(length + fromIndex, 0);\n  }\n  return isString(collection)\n    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n}\n\nmodule.exports = includes;\n","var arrayMap = require('./_arrayMap'),\n    baseIntersection = require('./_baseIntersection'),\n    baseRest = require('./_baseRest'),\n    castArrayLikeObject = require('./_castArrayLikeObject');\n\n/**\n * Creates an array of unique values that are included in all given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * _.intersection([2, 1], [2, 3]);\n * // => [2]\n */\nvar intersection = baseRest(function(arrays) {\n  var mapped = arrayMap(arrays, castArrayLikeObject);\n  return (mapped.length && mapped[0] === arrays[0])\n    ? baseIntersection(mapped)\n    : [];\n});\n\nmodule.exports = intersection;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var isArrayLike = require('./isArrayLike'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nmodule.exports = isArrayLikeObject;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","var baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isBuffer = require('./isBuffer'),\n    isPrototype = require('./_isPrototype'),\n    isTypedArray = require('./isTypedArray');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = isEmpty;\n","var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n","var isNumber = require('./isNumber');\n\n/**\n * Checks if `value` is `NaN`.\n *\n * **Note:** This method is based on\n * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n * `undefined` and other non-number values.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n * @example\n *\n * _.isNaN(NaN);\n * // => true\n *\n * _.isNaN(new Number(NaN));\n * // => true\n *\n * isNaN(undefined);\n * // => true\n *\n * _.isNaN(undefined);\n * // => false\n */\nfunction isNaN(value) {\n  // An `NaN` primitive is the only value that is not equal to itself.\n  // Perform the `toStringTag` check first to avoid errors with some\n  // ActiveX objects in IE.\n  return isNumber(value) && value != +value;\n}\n\nmodule.exports = isNaN;\n","/**\n * Checks if `value` is `null` or `undefined`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n * @example\n *\n * _.isNil(null);\n * // => true\n *\n * _.isNil(void 0);\n * // => true\n *\n * _.isNil(NaN);\n * // => false\n */\nfunction isNil(value) {\n  return value == null;\n}\n\nmodule.exports = isNil;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n * classified as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && baseGetTag(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n","var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nmodule.exports = last;\n","var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string`, as space separated words, to lower case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the lower cased string.\n * @example\n *\n * _.lowerCase('--Foo-Bar--');\n * // => 'foo bar'\n *\n * _.lowerCase('fooBar');\n * // => 'foo bar'\n *\n * _.lowerCase('__FOO_BAR__');\n * // => 'foo bar'\n */\nvar lowerCase = createCompounder(function(result, word, index) {\n  return result + (index ? ' ' : '') + word.toLowerCase();\n});\n\nmodule.exports = lowerCase;\n","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nmodule.exports = map;\n","var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","var createPadding = require('./_createPadding'),\n    stringSize = require('./_stringSize'),\n    toInteger = require('./toInteger'),\n    toString = require('./toString');\n\n/**\n * Pads `string` on the right side if it's shorter than `length`. Padding\n * characters are truncated if they exceed `length`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to pad.\n * @param {number} [length=0] The padding length.\n * @param {string} [chars=' '] The string used as padding.\n * @returns {string} Returns the padded string.\n * @example\n *\n * _.padEnd('abc', 6);\n * // => 'abc   '\n *\n * _.padEnd('abc', 6, '_-');\n * // => 'abc_-_'\n *\n * _.padEnd('abc', 3);\n * // => 'abc'\n */\nfunction padEnd(string, length, chars) {\n  string = toString(string);\n  length = toInteger(length);\n\n  var strLength = length ? stringSize(string) : 0;\n  return (length && strLength < length)\n    ? (string + createPadding(length - strLength, chars))\n    : string;\n}\n\nmodule.exports = padEnd;\n","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n","var baseRandom = require('./_baseRandom'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nmodule.exports = random;\n","var arrayReduce = require('./_arrayReduce'),\n    baseEach = require('./_baseEach'),\n    baseIteratee = require('./_baseIteratee'),\n    baseReduce = require('./_baseReduce'),\n    isArray = require('./isArray');\n\n/**\n * Reduces `collection` to a value which is the accumulated result of running\n * each element in `collection` thru `iteratee`, where each successive\n * invocation is supplied the return value of the previous. If `accumulator`\n * is not given, the first element of `collection` is used as the initial\n * value. The iteratee is invoked with four arguments:\n * (accumulator, value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.reduce`, `_.reduceRight`, and `_.transform`.\n *\n * The guarded methods are:\n * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n * and `sortBy`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @returns {*} Returns the accumulated value.\n * @see _.reduceRight\n * @example\n *\n * _.reduce([1, 2], function(sum, n) {\n *   return sum + n;\n * }, 0);\n * // => 3\n *\n * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n *   return result;\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n */\nfunction reduce(collection, iteratee, accumulator) {\n  var func = isArray(collection) ? arrayReduce : baseReduce,\n      initAccum = arguments.length < 3;\n\n  return func(collection, baseIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n}\n\nmodule.exports = reduce;\n","var createRound = require('./_createRound');\n\n/**\n * Computes `number` rounded to `precision`.\n *\n * @static\n * @memberOf _\n * @since 3.10.0\n * @category Math\n * @param {number} number The number to round.\n * @param {number} [precision=0] The precision to round to.\n * @returns {number} Returns the rounded number.\n * @example\n *\n * _.round(4.006);\n * // => 4\n *\n * _.round(4.006, 2);\n * // => 4.01\n *\n * _.round(4060, -2);\n * // => 4100\n */\nvar round = createRound('round');\n\nmodule.exports = round;\n","var baseClamp = require('./_baseClamp'),\n    baseToString = require('./_baseToString'),\n    toInteger = require('./toInteger'),\n    toString = require('./toString');\n\n/**\n * Checks if `string` starts with the given target string.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {string} [target] The string to search for.\n * @param {number} [position=0] The position to search from.\n * @returns {boolean} Returns `true` if `string` starts with `target`,\n *  else `false`.\n * @example\n *\n * _.startsWith('abc', 'a');\n * // => true\n *\n * _.startsWith('abc', 'b');\n * // => false\n *\n * _.startsWith('abc', 'b', 1);\n * // => true\n */\nfunction startsWith(string, target, position) {\n  string = toString(string);\n  position = position == null\n    ? 0\n    : baseClamp(toInteger(position), 0, string.length);\n\n  target = baseToString(target);\n  return string.slice(position, position + target.length) == target;\n}\n\nmodule.exports = startsWith;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","var baseSlice = require('./_baseSlice');\n\n/**\n * Gets all but the first element of `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.tail([1, 2, 3]);\n * // => [2, 3]\n */\nfunction tail(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseSlice(array, 1, length) : [];\n}\n\nmodule.exports = tail;\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n","var toString = require('./toString');\n\n/**\n * Converts `string`, as a whole, to lower case just like\n * [String#toLowerCase](https://mdn.io/toLowerCase).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the lower cased string.\n * @example\n *\n * _.toLower('--Foo-Bar--');\n * // => '--foo-bar--'\n *\n * _.toLower('fooBar');\n * // => 'foobar'\n *\n * _.toLower('__FOO_BAR__');\n * // => '__foo_bar__'\n */\nfunction toLower(value) {\n  return toString(value).toLowerCase();\n}\n\nmodule.exports = toLower;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","var baseUniq = require('./_baseUniq');\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nmodule.exports = uniq;\n","var toString = require('./toString');\n\n/** Used to generate unique IDs. */\nvar idCounter = 0;\n\n/**\n * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {string} [prefix=''] The value to prefix the ID with.\n * @returns {string} Returns the unique ID.\n * @example\n *\n * _.uniqueId('contact_');\n * // => 'contact_104'\n *\n * _.uniqueId();\n * // => '105'\n */\nfunction uniqueId(prefix) {\n  var id = ++idCounter;\n  return toString(prefix) + id;\n}\n\nmodule.exports = uniqueId;\n","var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n","var baseDifference = require('./_baseDifference'),\n    baseRest = require('./_baseRest'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array excluding all given values using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * **Note:** Unlike `_.pull`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...*} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.difference, _.xor\n * @example\n *\n * _.without([2, 1, 2, 3], 1, 2);\n * // => [3]\n */\nvar without = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, values)\n    : [];\n});\n\nmodule.exports = without;\n","var asciiWords = require('./_asciiWords'),\n    hasUnicodeWord = require('./_hasUnicodeWord'),\n    toString = require('./toString'),\n    unicodeWords = require('./_unicodeWords');\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = words;\n","var LazyWrapper = require('./_LazyWrapper'),\n    LodashWrapper = require('./_LodashWrapper'),\n    baseLodash = require('./_baseLodash'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike'),\n    wrapperClone = require('./_wrapperClone');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates a `lodash` object which wraps `value` to enable implicit method\n * chain sequences. Methods that operate on and return arrays, collections,\n * and functions can be chained together. Methods that retrieve a single value\n * or may return a primitive value will automatically end the chain sequence\n * and return the unwrapped value. Otherwise, the value must be unwrapped\n * with `_#value`.\n *\n * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n * enabled using `_.chain`.\n *\n * The execution of chained methods is lazy, that is, it's deferred until\n * `_#value` is implicitly or explicitly called.\n *\n * Lazy evaluation allows several methods to support shortcut fusion.\n * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n * the creation of intermediate arrays and can greatly reduce the number of\n * iteratee executions. Sections of a chain sequence qualify for shortcut\n * fusion if the section is applied to an array and iteratees accept only\n * one argument. The heuristic for whether a section qualifies for shortcut\n * fusion is subject to change.\n *\n * Chaining is supported in custom builds as long as the `_#value` method is\n * directly or indirectly included in the build.\n *\n * In addition to lodash methods, wrappers have `Array` and `String` methods.\n *\n * The wrapper `Array` methods are:\n * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n *\n * The wrapper `String` methods are:\n * `replace` and `split`\n *\n * The wrapper methods that support shortcut fusion are:\n * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n *\n * The chainable wrapper methods are:\n * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n * `zipObject`, `zipObjectDeep`, and `zipWith`\n *\n * The wrapper methods that are **not** chainable by default are:\n * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n * `upperFirst`, `value`, and `words`\n *\n * @name _\n * @constructor\n * @category Seq\n * @param {*} value The value to wrap in a `lodash` instance.\n * @returns {Object} Returns the new `lodash` wrapper instance.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * var wrapped = _([1, 2, 3]);\n *\n * // Returns an unwrapped value.\n * wrapped.reduce(_.add);\n * // => 6\n *\n * // Returns a wrapped value.\n * var squares = wrapped.map(square);\n *\n * _.isArray(squares);\n * // => false\n *\n * _.isArray(squares.value());\n * // => true\n */\nfunction lodash(value) {\n  if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n    if (value instanceof LodashWrapper) {\n      return value;\n    }\n    if (hasOwnProperty.call(value, '__wrapped__')) {\n      return wrapperClone(value);\n    }\n  }\n  return new LodashWrapper(value);\n}\n\n// Ensure wrappers are instances of `baseLodash`.\nlodash.prototype = baseLodash.prototype;\nlodash.prototype.constructor = lodash;\n\nmodule.exports = lodash;\n","// Generated by CoffeeScript 1.12.2\n(function() {\n  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - nodeLoadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    moduleLoadTime = getNanoSeconds();\n    upTime = process.uptime() * 1e9;\n    nodeLoadTime = moduleLoadTime - upTime;\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n\n//# sourceMappingURL=performance-now.js.map\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var now = require('performance-now')\n  , root = typeof window === 'undefined' ? global : window\n  , vendors = ['moz', 'webkit']\n  , suffix = 'AnimationFrame'\n  , raf = root['request' + suffix]\n  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]\n\nfor(var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix]\n  caf = root[vendors[i] + 'Cancel' + suffix]\n      || root[vendors[i] + 'CancelRequest' + suffix]\n}\n\n// Some versions of FF have rAF but not cAF\nif(!raf || !caf) {\n  var last = 0\n    , id = 0\n    , queue = []\n    , frameDuration = 1000 / 60\n\n  raf = function(callback) {\n    if(queue.length === 0) {\n      var _now = now()\n        , next = Math.max(0, frameDuration - (_now - last))\n      last = next + _now\n      setTimeout(function() {\n        var cp = queue.slice(0)\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0\n        for(var i = 0; i < cp.length; i++) {\n          if(!cp[i].cancelled) {\n            try{\n              cp[i].callback(last)\n            } catch(e) {\n              setTimeout(function() { throw e }, 0)\n            }\n          }\n        }\n      }, Math.round(next))\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    })\n    return id\n  }\n\n  caf = function(handle) {\n    for(var i = 0; i < queue.length; i++) {\n      if(queue[i].handle === handle) {\n        queue[i].cancelled = true\n      }\n    }\n  }\n}\n\nmodule.exports = function(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn)\n}\nmodule.exports.cancel = function() {\n  caf.apply(root, arguments)\n}\nmodule.exports.polyfill = function(object) {\n  if (!object) {\n    object = root;\n  }\n  object.requestAnimationFrame = raf\n  object.cancelAnimationFrame = caf\n}\n","import $ from 'jquery';\nimport _isNil from 'lodash/isNil';\nimport _lowerCase from 'lodash/lowerCase';\nimport AppController from './AppController';\nimport EventBus from './lib/EventBus';\nimport TimeKeeper from './engine/TimeKeeper';\nimport { DEFAULT_AIRPORT_ICAO } from './constants/airportConstants';\nimport { STORAGE_KEY } from './constants/storageKeys';\nimport { EVENT } from './constants/eventNames';\nimport { LOG } from './constants/logLevel';\n\nwindow.zlsa = {};\nwindow.zlsa.atc = {};\n\n// TODO: KILL THE PROP!\nconst prop = {};\n\n// IIEFs are pulled in here to add functions to the global space.\n//\n// This will need to be re-worked, and current global functions should be exported and\n// imported as needed in each file.\nrequire('./util');\n\n// are you using a main loop? (you must call update() afterward disable/re-enable)\nlet UPDATE = true;\n\n/**\n * @class App\n */\nexport default class App {\n    /**\n     * @constructor\n     * @param $element {HTML Element|null}\n     */\n    constructor(element) {\n        /**\n         * Root DOM element.\n         *\n         * @property $element\n         * @type {jQuery|HTML Element}\n         * @default body\n         */\n        this.$element = $(element);\n        this._appController = new AppController(this.$element);\n        this.eventBus = EventBus;\n\n        window.prop = prop;\n\n        this.prop = prop;\n        this.prop.complete = false;\n        this.prop.log = LOG.DEBUG;\n        this.prop.loaded = false;\n\n        this.setupHandlers()\n            ._fetchAirportLoadList();\n    }\n\n    /**\n     * Fetch airportLoadList.json containing the list of available airports\n     *\n     * @for App\n     * @method _fetchAirportLoadList\n     */\n    _fetchAirportLoadList() {\n        $.getJSON('assets/airports/airportLoadList.json')\n            .done((response) => this.onAirportLoadListFetchedHandler(response))\n            .fail((jqXHR) => console.error(`Unable to load airport list: ${jqXHR.status}: ${jqXHR.statusText}`));\n    }\n\n    /**\n     * Handler method called after successfully fetching airportLoadList.json\n     *\n     * @for App\n     * @method _onAirportLoadListFetched\n     */\n    _onAirportLoadListFetched(data) {\n        const airportLoadList = data.filter((airport) => airport.disabled !== true);\n        // ICAO id of the initial airport. may be the default or a stored airport\n        const initialAirportToLoad = this._getInitialAirport(airportLoadList);\n\n        this.loadInitialAirport(airportLoadList, initialAirportToLoad);\n    }\n\n    /**\n     * Check if a given icao exists in the list of available airports\n     *\n     * @for App\n     * @method _isAirportIcaoInLoadList\n     * @param icao {string}  icao\n     * @param airportLoadList {array<object>}  List of available airports\n     */\n    _isAirportIcaoInLoadList(icao, airportLoadList) {\n        return !_isNil(icao) && airportLoadList.some((airport) => airport.icao === icao);\n    }\n\n    /**\n     * Obtain icao for the initial airport from localStorage if available\n     * otherwise use `DEFAULT_AIRPORT_ICAO`\n     *\n     * @for App\n     * @method _getInitialAirport\n     * @param airportLoadList {array<object>}  List of airports to load\n     */\n    _getInitialAirport(airportLoadList) {\n        let airportName = DEFAULT_AIRPORT_ICAO;\n        const previousAirportIcaoFromLocalStorage = localStorage[STORAGE_KEY.ATC_LAST_AIRPORT];\n\n        if (this._isAirportIcaoInLoadList(previousAirportIcaoFromLocalStorage, airportLoadList)) {\n            airportName = _lowerCase(localStorage[STORAGE_KEY.ATC_LAST_AIRPORT]);\n        }\n\n        return airportName;\n    }\n\n    /**\n     * Create event handlers\n     *\n     * @for App\n     * @method setupHandlers\n     * @chainable\n     */\n    setupHandlers() {\n        this.onAirportLoadListFetchedHandler = this._onAirportLoadListFetched.bind(this);\n        this.loadDefaultAiportAfterStorageIcaoFailureHandler = this.loadDefaultAiportAfterStorageIcaoFailure.bind(this);\n        this.loadAirlinesAndAircraftHandler = this.loadAirlinesAndAircraft.bind(this);\n        this.setupChildrenHandler = this.setupChildren.bind(this);\n        this.onPauseHandler = this._onPause.bind(this);\n        this.onUpdateHandler = this.update.bind(this);\n\n        this.eventBus.on(EVENT.PAUSE_UPDATE_LOOP, this.onPauseHandler);\n\n        return this;\n    }\n\n    /**\n     * Used to load data for the initial airport using an icao from\n     * either localStorage or `DEFAULT_AIRPORT_ICAO`\n     *\n     * If a localStorage airport cannot be found, we will attempt\n     * to load the `DEFAULT_AIRPORT_ICAO`\n     *\n     * Lifecycle method. Should be called only once on initialization\n     *\n     * @for App\n     * @method loadInitialAirport\n     * @param airportLoadList {array<object>}  List of airports to load\n     */\n    loadInitialAirport(airportLoadList, initialAirportToLoad) {\n        const initialAirportIcao = initialAirportToLoad.toLowerCase();\n\n        $.getJSON(`assets/airports/${initialAirportIcao}.json`)\n            .then((response) => this.loadAirlinesAndAircraftHandler(airportLoadList, initialAirportIcao, response))\n            .catch((error) => this.loadDefaultAiportAfterStorageIcaoFailureHandler(airportLoadList));\n    }\n\n    /**\n     * Used only when an attempt to load airport data with an icao in localStorage fails.\n     * In this case we attempt to load the default airport with this method\n     *\n     * Lifecycle method. Should be called only once on initialization\n     *\n     * @for App\n     * @method onLoadDefaultAirportAfterStorageIcaoFailure\n     * @param {array<object>} airportLoadList\n     */\n    loadDefaultAiportAfterStorageIcaoFailure(airportLoadList) {\n        $.getJSON(`assets/airports/${DEFAULT_AIRPORT_ICAO}.json`)\n            .then((defaultAirportResponse) => this.loadAirlinesAndAircraftHandler(\n                airportLoadList,\n                DEFAULT_AIRPORT_ICAO,\n                defaultAirportResponse\n            ));\n    }\n\n    /**\n     * Handler method called after data has loaded for the airline and aircraftTypeDefinitions datasets.\n     *\n     * Lifecycle method. Should be called only once on initialization\n     *\n     * @for App\n     * @method loadAirlinesAndAircraft\n     * @param {array>object>} airportLoadList\n     * @param {string} initialAirportIcao\n     * @param {object<string>} initialAirportResponse\n     */\n    loadAirlinesAndAircraft(airportLoadList, initialAirportIcao, initialAirportResponse) {\n        const airlineListPromise = $.getJSON('assets/airlines/airlines.json');\n        const aircraftListPromise = $.getJSON('assets/aircraft/aircraft.json');\n        const airportGuideListPromise = $.getJSON('assets/guides/guides.json');\n\n        // This is provides a way to get async data from several sources in the app before anything else runs\n        // we need to resolve data from two sources before the app can proceede. This data should always\n        // exist, if it doesn't, something has gone terribly wrong.\n        $.when(airlineListPromise, aircraftListPromise, airportGuideListPromise)\n            .done((airlineResponse, aircraftResponse, airportGuideResponse) => {\n                this.setupChildrenHandler(\n                    airportLoadList,\n                    initialAirportIcao,\n                    initialAirportResponse,\n                    airlineResponse[0].airlines,\n                    aircraftResponse[0].aircraft,\n                    airportGuideResponse[0]\n                );\n            });\n    }\n\n    /**\n     * Callback for a successful data load\n     *\n     * A first load of data occurs on startup where we load the initial airport, airline definitions and\n     * aircraft type definitiions. this method is called onComplete of that data load and is used to\n     * instantiate various classes with the loaded data.\n     *\n     * This method will fire `.enable()` that will finish the initialization lifecycle and begine the game loop.\n     * Lifecycle method. Should be called only once on initialization\n     *\n     * @for App\n     * @method setupChildren\n     * @param airportLoadList {array}         List of all airports\n     * @param initialAirportData {object}     Airport json for the initial airport, could be default or stored airport\n     * @param airlineList {array}             List of all Airline definitions\n     * @param aircraftTypeDefinitionList {array}  List of all Aircraft definitions\n     * @param airportGuides {object}          Airport guide JSON\n     */\n    setupChildren(\n        airportLoadList,\n        initialAirportIcao,\n        initialAirportData,\n        airlineList,\n        aircraftTypeDefinitionList,\n        airportGuides\n    ) {\n        this._appController.setupChildren(\n            airportLoadList,\n            initialAirportIcao,\n            initialAirportData,\n            airlineList,\n            aircraftTypeDefinitionList,\n            airportGuides\n        );\n\n        this.enable();\n    }\n\n    /**\n     * Lifecycle method. Should be called only once on initialization.\n     *\n     * Used to fire off `init` and `init_pre` methods and also start the game loop\n     *\n     * @for App\n     * @method enable\n     */\n    enable() {\n        return this.init_pre()\n            .init()\n            .done();\n    }\n\n    /**\n     * @for App\n     * @method disable\n     */\n    disable() {\n        return this.destroy();\n    }\n\n    /**\n     * Tear down the application\n     *\n     * Should never be called directly, only cia `this.disable()`\n     *\n     * @for App\n     * @method destroy\n     */\n    destroy() {\n        this.$element = null;\n\n        return this;\n    }\n\n    // === CALLBACKS (all optional and do not need to be defined) ===\n    // INIT:\n    // module_init_pre()\n    // module_init()\n    // module_init_post()\n\n    // module_done()\n    // -- wait until all async has finished (could take a long time)\n    // module_ready()\n    // -- wait until first frame is ready (only triggered if UPDATE == true)\n    // module_complete()\n\n    // UPDATE:\n    // module_update_pre()\n    // module_update()\n    // module_update_post()\n\n    // RESIZE (called at least once during init and whenever page changes size)\n    // module_resize()\n\n    /**\n     * @for App\n     * @method init_pre\n     */\n    init_pre() {\n        this._appController.init_pre();\n\n        return this;\n    }\n\n    /**\n     * @for App\n     * @method init\n     */\n    init() {\n        this._appController.init();\n\n        return this;\n    }\n\n    /**\n     * @for App\n     * @method init_post\n     */\n    init_post() {\n        return this;\n    }\n\n    /**\n     * @for App\n     * @method done\n     */\n    done() {\n        this._appController.done();\n        this._appController.resize();\n\n        this.prop.loaded = true;\n\n        if (UPDATE) {\n            requestAnimationFrame(this.onUpdateHandler);\n        }\n\n        return this;\n    }\n\n    /**\n     * @for App\n     * @method complete\n     */\n    complete() {\n        this._appController.complete();\n\n        return this;\n    }\n\n    /**\n     * @for App\n     * @method updatePre\n     */\n    updatePre() {\n        this._appController.updatePre();\n\n        return this;\n    }\n\n    /**\n     * @for App\n     * @method updatePost\n     */\n    updatePost() {\n        this._appController.updatePost();\n\n        return this;\n    }\n\n    /**\n     * @for App\n     * @method update\n     */\n    update() {\n        if (!this.prop.complete) {\n            this.complete();\n\n            this.prop.complete = true;\n        }\n\n        if (!UPDATE) {\n            return this;\n        }\n\n        requestAnimationFrame(this.onUpdateHandler);\n\n        this.updatePre();\n        this.updatePost();\n        TimeKeeper.update();\n\n        return this;\n    }\n\n    /**\n     * @for App\n     * @method _onPause\n     * @param shouldUpdate {boolean}\n     */\n    _onPause(shouldUpdate) {\n        if (!UPDATE && shouldUpdate) {\n            requestAnimationFrame(this.onUpdateHandler);\n        }\n\n        UPDATE = shouldUpdate;\n    }\n}\n","/* eslint-disable max-len */\nimport $ from 'jquery';\nimport AircraftController from './aircraft/AircraftController';\nimport AirlineController from './airline/AirlineController';\nimport AirportController from './airport/AirportController';\nimport AirportGuideViewController from './airportGuide/AirportGuideViewController';\nimport CanvasController from './canvas/CanvasController';\nimport AirportInfoController from './info/AirportInfoController';\nimport ChangelogController from './changelog/ChangelogController';\nimport ContentQueue from './contentQueue/ContentQueue';\nimport EventTracker from './EventTracker';\nimport GameController from './game/GameController';\nimport InputController from './InputController';\nimport EventBus from './lib/EventBus';\nimport LoadingView from './LoadingView';\nimport NavigationLibrary from './navigationLibrary/NavigationLibrary';\nimport ScopeModel from './scope/ScopeModel';\nimport SpawnPatternCollection from './trafficGenerator/SpawnPatternCollection';\nimport SpawnScheduler from './trafficGenerator/SpawnScheduler';\nimport UiController from './ui/UiController';\nimport ScoreController from './game/ScoreController';\nimport { speech_init } from './speech';\nimport { EVENT } from './constants/eventNames';\nimport { SELECTORS } from './constants/selectors';\nimport { TRACKABLE_EVENT } from './constants/trackableEvents';\n\n/**\n * Root controller class\n *\n * Responsible for instantiating child classes\n * Provides public API used by `App` that is used to fire lifecycle methods\n * in each of the children classes.\n *\n * @class AppController\n */\nexport default class AppController {\n    /**\n     * @constructor\n     * @param element {jQuery|HTML Element}\n     */\n    constructor(element) {\n        /**\n         * Root DOM element.\n         *\n         * @property $element\n         * @type {jQuery|HTML Element}\n         * @default body\n         */\n        this.$element = $(element);\n\n        this.$canvasesElement = null;\n        this._eventBus = EventBus;\n        this.loadingView = null;\n        this.contentQueue = null;\n        this.airlineCollection = null;\n        this.airportGuideController = null;\n        this.inputController = null;\n        this.canvasController = null;\n        this.changelogController = null;\n\n        return this._init()\n            .setupHandlers()\n            .enable();\n    }\n\n    /**\n     * @for AppController\n     * @method _init\n     * @chainable\n     * @private\n     */\n    _init() {\n        return this;\n    }\n\n    /**\n     * Create and bind handler methods\n     *\n     * @for AppController\n     * @method setupHandlers\n     * @chainable\n     */\n    setupHandlers() {\n        this.onAirportChangeHandler = this.onAirportChange.bind(this);\n        this.onTrafficResetHandler = this.onTrafficReset.bind(this);\n\n        return this;\n    }\n\n    /**\n     * @for AppController\n     * @method enable\n     * @chainable\n     */\n    enable() {\n        this._eventBus.on(EVENT.AIRPORT_CHANGE, this.onAirportChangeHandler);\n        this._eventBus.on(EVENT.TRAFFIC_RESET, this.onTrafficResetHandler);\n\n        return this;\n    }\n\n    /**\n     * @for AppController\n     * @method destroy\n     * @chainable\n     */\n    disable() {\n        this._eventBus.off(EVENT.AIRPORT_CHANGE, this.onAirportChangeHandler);\n        this._eventBus.off(EVENT.TRAFFIC_RESET, this.onTrafficResetHandler);\n\n        return this.destroy();\n    }\n\n    /**\n     * @for AppController\n     * @method destroy\n     * @chainable\n     */\n    destroy() {\n        // TODO: add static class.destroy() here\n        this.$element = null;\n        this.$canvasesElement = null;\n        this._eventBus = null;\n        this.loadingView = null;\n        this.contentQueue = null;\n        this.airlineCollection = null;\n        this.airportGuideController = null;\n        this.inputController = null;\n        this.canvasController = null;\n\n        return this;\n    }\n\n    /**\n     * Create child instances and initialize singletons.\n     *\n     * This method will be called from `App.setupChildren()` only after all the required data has been retrieved\n     *\n     * @for AppController\n     * @method setupChildren\n     * @param airportLoadList {array<object>}\n     * @param initialAirportIcao {string}\n     * @param initialAirportData {object}\n     * @param airlineList {array<object>}\n     * @param aircraftTypeDefinitionList {array<object>}\n     * @param airportGuideData {object}\n     */\n    setupChildren(\n        airportLoadList,\n        initialAirportIcao,\n        initialAirportData,\n        airlineList,\n        aircraftTypeDefinitionList,\n        airportGuideData\n    ) {\n        EventTracker.recordEvent(TRACKABLE_EVENT.AIRPORTS, 'initial-load', initialAirportIcao);\n\n        this.$canvasesElement = this.$element.find(SELECTORS.DOM_SELECTORS.CANVASES);\n\n        // TODO: this entire method needs to be re-written. this is a temporary implemenation used to\n        // get things working in a more cohesive manner. soon, all this instantiation should happen\n        // in a different class and the window methods should disappear.\n        this.loadingView = new LoadingView();\n        this.contentQueue = new ContentQueue(this.loadingView);\n        zlsa.atc.loadAsset = (options) => this.contentQueue.add(options);\n\n        // IMPORTANT:\n        // The order in which the following classes are instantiated is extremely important. Changing\n        // this order could break a lot of things. This interdependency is something we should\n        // work on reducing in the future.\n        AirportController.init(initialAirportIcao, initialAirportData, airportLoadList);\n        NavigationLibrary.init(initialAirportData);\n        SpawnPatternCollection.init(initialAirportData);\n\n        this.airlineController = new AirlineController(airlineList);\n        this.scopeModel = new ScopeModel();\n        this.aircraftController = new AircraftController(aircraftTypeDefinitionList, this.airlineController, this.scopeModel);\n        this.scoreController = new ScoreController(this.aircraftController);\n\n        SpawnScheduler.init(this.aircraftController);\n\n        // TEMPORARY!\n        // some instances are attached to the window here as an intermediate step away from global functions.\n        // this allows for any module file to call window.{module}.{method} and will make the transition to\n        // explicit instance parameters easier.\n        window.aircraftController = this.aircraftController;\n\n        UiController.init(this.$element);\n\n        this.canvasController = new CanvasController(this.$canvasesElement, this.aircraftController, this.scopeModel);\n\n        this.inputController = new InputController(this.$element, this.aircraftController, this.scopeModel);\n        this.airportInfoController = new AirportInfoController(this.$element);\n        this.airportGuideController = new AirportGuideViewController(this.$element, airportGuideData, initialAirportData.icao);\n        this.changelogController = new ChangelogController(this.contentQueue);\n\n        this.updateViewControls();\n    }\n\n    /**\n     * @for AppController\n     * @method init_pre\n     */\n    init_pre() {\n        GameController.init_pre();\n        this.inputController.input_init_pre();\n    }\n\n    /**\n     * @for AppController\n     * @method init\n     */\n    init() {\n        speech_init();\n\n        this.canvasController.canvas_init();\n        UiController.ui_init();\n    }\n\n    /**\n     * @for AppController\n     * @method done\n     */\n    done() {}\n\n    /**\n     * @for AppController\n     * @method resize\n     */\n    resize() {\n        this.canvasController.canvas_resize();\n    }\n\n    /**\n     * @for AppController\n     * @method complete\n     */\n    complete() {\n        this.loadingView.complete();\n        GameController.complete();\n        this.canvasController.canvas_complete();\n        UiController.ui_complete();\n    }\n\n    /**\n     * @for AppController\n     * @method updatePre\n     */\n    updatePre() {\n        this.airportInfoController.updateClock();\n        GameController.update_pre();\n        this.aircraftController.update();\n    }\n\n    /**\n     * @for AppController\n     * @method update\n     */\n    update() {}\n\n    /**\n     * @for AppController\n     * @method updatePost\n     */\n    updatePost() {\n        this.canvasController.canvasUpdatePost();\n        this.aircraftController.updateAircraftStrips();\n    }\n\n\n    /**\n     * `onChange` callback fired from within the `AirportModel` when an airport is changed.\n     *\n     * When an airport changes various classes need to clear and reset internal properties for\n     * the new airport. this callback provides a way to orchestrate all that and send the classes\n     * new data.\n     *\n     * This method will not run on initial load.\n     *\n     * @for App\n     * @method onAirportChange\n     * @param nextAirportJson {object}  response or cached object from airport json\n     */\n    onAirportChange(nextAirportJson) {\n        if (!AirportController.current) {\n            // if `current` is null, then this is the initial load and we dont need to reset andything\n            return;\n        }\n\n        EventTracker.recordEvent(TRACKABLE_EVENT.AIRPORTS, 'airport-switcher', nextAirportJson.icao);\n        NavigationLibrary.reset();\n        this.airlineController.reset();\n        this.aircraftController.aircraft_remove_all();\n        this.scopeModel.radarTargetCollection.reset();\n        SpawnPatternCollection.reset();\n        GameController.destroyTimers();\n\n        NavigationLibrary.init(nextAirportJson);\n        SpawnPatternCollection.init(nextAirportJson);\n        SpawnScheduler.startScheduler();\n\n        this.updateViewControls();\n    }\n\n    /**\n     * event callback fired from within the `TrafficRateController` when traffic should be cleared and respawned.\n     *\n     * @for AppController\n     * @method onTrafficReset\n     */\n    onTrafficReset() {\n        EventTracker.recordEvent(TRACKABLE_EVENT.AIRPORTS, 'traffic-reset', AirportController.current.icao);\n        this.aircraftController.aircraft_remove_all();\n        this.scopeModel.radarTargetCollection.reset();\n        AirportController.current.resetAllRunwayQueues();\n        SpawnScheduler.createPreSpawnDepartures();\n        SpawnScheduler.resetAirborneTraffic();\n    }\n\n    // TODO: this should live in a view class somewhere. temporary inclusion here to prevent tests from failing\n    // due to jQuery and because this does not belong in the `AirportModel`\n    /**\n     * Update visibility of icons at the bottom of the view that allow toggling of\n     * certain view elements.\n     *\n     * Abstracted from `AirportModel`\n     *\n     * @for App\n     * @method updateViewControls\n     */\n    updateViewControls() {\n        const { current: airport } = AirportController;\n\n        this._eventBus.trigger(EVENT.MARK_SHALLOW_RENDER);\n\n        $(SELECTORS.DOM_SELECTORS.TOGGLE_RESTRICTED_AREAS).toggle((airport.restricted_areas || []).length > 0);\n        $(SELECTORS.DOM_SELECTORS.TOGGLE_SIDS).toggle(NavigationLibrary.hasSids);\n        $(SELECTORS.DOM_SELECTORS.TOGGLE_TERRAIN).toggle(airport.data.has_terrain);\n    }\n}\n","import { TRACKABLE_EVENT } from './constants/trackableEvents';\n\n/**\n * Provide methods to send tracking events to google analytics\n *\n * Exported as a singleton\n *\n * @class EventTracker\n */\nclass EventTracker {\n    /**\n     * @for EventTracker\n     * @constructor\n     */\n    constructor() {\n        if (!this._isEnabled()) {\n            console.error('Event tracking is disabled because we couldn\\'t find `gtag` on the window');\n\n            return;\n        }\n\n        this._gtag = window.gtag;\n    }\n\n    // TODO: UiController.onToggleTerrain() and other toggle methods seem to be expecting a\n    // different order to these arguments, possibly screwing up the way events are reported to GA\n    /**\n     * Send a custom event to google analytics\n     *\n     * @for EventTracker\n     * @method recordEvent\n     * @param category {TRACKABLE_EVENT}\n     * @param action {string}\n     * @param label {string}\n     * @param value {string|null} [optional]\n     */\n    recordEvent(category, action, label, value = null) {\n        if (!this._isEnabled()) {\n            console.error('Event tracking is disabled because we couldn\\'t find `gtag` on the window');\n\n            return;\n        }\n\n        // using underscores here to match google analytics api\n        const event = {\n            event_category: category,\n            event_action: action,\n            event_label: label\n        };\n\n        if (value) {\n            event.value = value;\n        }\n\n        return this._gtag('event', event.event_category, event);\n    }\n\n    /**\n     * Track a click on an outbound link\n     *\n     * @for EventTracker\n     * @method recordClickOnOutboundLink\n     * @param url {string}\n     */\n    recordClickOnOutboundLink(url) {\n        if (!this._isEnabled()) {\n            console.error('Event tracking is disabled because we couldn\\'t find `gtag` on the window');\n\n            return;\n        }\n\n        // using underscores here to match google analytics api\n        const event = {\n            event_category: TRACKABLE_EVENT.OUTBOUND,\n            event_label: url,\n            transport_type: 'beacon'\n        };\n\n        return this._gtag('event', 'click', event);\n    }\n\n    /**\n     * @private\n     * @method _isEnabled\n     * @returns {boolean}\n     */\n    _isEnabled() {\n        return typeof window.gtag !== 'undefined';\n    }\n}\n\nexport default new EventTracker();\n","/* eslint-disable camelcase, no-mixed-operators, object-shorthand, expected-return */\nimport $ from 'jquery';\nimport _has from 'lodash/has';\nimport _includes from 'lodash/includes';\nimport AirportController from './airport/AirportController';\nimport AutocompleteController from './ui/autocomplete/AutocompleteController';\nimport CanvasStageModel from './canvas/CanvasStageModel';\nimport DynamicPositionModel from './base/DynamicPositionModel';\nimport EventBus from './lib/EventBus';\nimport GameController from './game/GameController';\nimport UiController from './ui/UiController';\nimport CommandParser from './commands/parsers/CommandParser';\nimport ScopeCommandModel from './commands/scopeCommand/ScopeCommandModel';\nimport EventTracker from './EventTracker';\nimport MeasureTool from './measurement/MeasureTool';\nimport FixCollection from './navigationLibrary/FixCollection';\nimport { clamp } from './math/core';\nimport { EVENT } from './constants/eventNames';\nimport { GAME_OPTION_NAMES } from './constants/gameOptionConstants';\nimport { INVALID_NUMBER } from './constants/globalConstants';\nimport {\n    COMMAND_CONTEXT,\n    KEY_CODES,\n    LEGACY_KEY_CODES,\n    MOUSE_BUTTON_NAMES,\n    MOUSE_EVENT_CODE,\n    PARSED_COMMAND_NAME\n} from './constants/inputConstants';\nimport { SELECTORS, CLASSNAMES } from './constants/selectors';\nimport { TRACKABLE_EVENT } from './constants/trackableEvents';\n\n// Temporary const declaration here to attach to the window AND use as internal propert\nconst input = {};\n\n/**\n * @class InputController\n */\nexport default class InputController {\n    /**\n     * @constructor\n     * @param $element {JQuery|HTML Element}\n     * @param aircraftController {AircraftController}\n     * @param scopeModel {ScopeModel}\n     */\n    constructor($element, aircraftController, scopeModel) {\n        this.$element = $element;\n        this.$body = null;\n        this.$window = null;\n        this.$commandInput = null;\n        this.$canvases = null;\n\n        this._eventBus = EventBus;\n        this._aircraftController = aircraftController;\n        this._scopeModel = scopeModel;\n        this._autocompleteController = new AutocompleteController(this.$element, this, this._aircraftController);\n\n        prop.input = input;\n        this.input = input;\n        this.input.callsign = '';\n        this.input.history = [];\n        this.input.history_item = null;\n        this._mouseDownScreenPosition = [0, 0];\n        this.input.isMouseDown = false;\n        this.commandBarContext = COMMAND_CONTEXT.AIRCRAFT;\n\n        this._init();\n    }\n\n    /**\n     * @for InputController\n     * @method _init\n     */\n    _init() {\n        this.$body = this.$element[0];\n        this.$window = $(window);\n        this.$commandInput = this.$element.find(SELECTORS.DOM_SELECTORS.COMMAND);\n        this.$canvases = this.$element.find(SELECTORS.DOM_SELECTORS.CANVASES);\n\n        return this.setupHandlers().enable();\n    }\n\n    /**\n     * @for InputController\n     * @method setupHandlers\n     */\n    setupHandlers() {\n        this.onKeydownHandler = this._onKeydown.bind(this);\n        this.onKeyupHandler = this._onKeyup.bind(this);\n        this.onMouseScrollHandler = this._onMouseScroll.bind(this);\n        this.onMouseClickAndDragHandler = this._onMouseClickAndDrag.bind(this);\n        this.onMouseUpHandler = this._onMouseUp.bind(this);\n        this.onMouseDownHandler = this._onMouseDown.bind(this);\n        this.onMouseDblclickHandler = this._onMouseDblclick.bind(this);\n\n        return this;\n    }\n\n    /**\n     * Enable all event handlers\n     *\n     * @for InputController\n     * @method enable\n     */\n    enable() {\n        this.$window.on('keydown', this.onKeydownHandler);\n        this.$window.on('keyup', this.onKeyupHandler);\n        // TODO: these are non-standard events and will be deprecated soon. this should be moved\n        // over to the `wheel` event. This should also be moved over to `.on()` instead of `.bind()`\n        // https://developer.mozilla.org/en-US/docs/Web/Events/wheel\n        // this.$commandInput.on('DOMMouseScroll mousewheel', this.onMouseScrollHandler);\n        this.$canvases.bind('DOMMouseScroll mousewheel', this.onMouseScrollHandler);\n        this.$canvases.on('mousemove', this.onMouseClickAndDragHandler);\n        this.$canvases.on('mouseup', this.onMouseUpHandler);\n        this.$canvases.on('mousedown', this.onMouseDownHandler);\n        this.$canvases.on('dblclick', this.onMouseDblclickHandler);\n        this.$body.addEventListener('contextmenu', (event) => event.preventDefault());\n\n        // TODO: Fix this\n        this._eventBus.on(EVENT.STRIP_CLICK, this.selectAircraftByCallsign);\n\n        return this;\n    }\n\n    /**\n     * Disable all event handlers and destroy the instance\n     *\n     * @for InputController\n     * @method disable\n     */\n    disable() {\n        this.$window.off('keydown', this.onKeydownHandler);\n        this.$window.off('keyup', this.onKeyupHandler);\n        // uncomment only after `.on()` for this event has been implemented.\n        // this.$commandInput.off('DOMMouseScroll mousewheel', this.onMouseScrollHandler);\n        this.$canvases.off('mousemove', this.onMouseClickAndDragHandler);\n        this.$canvases.off('mouseup', this.onMouseUpHandler);\n        this.$canvases.off('mousedown', this.onMouseDownHandler);\n        this.$canvases.off('dblclick', this.onMouseDblclickHandler);\n        this.$body.removeEventListener('contextmenu', (event) => event.preventDefault());\n\n        this._eventBus.off(EVENT.STRIP_CLICK, this.selectAircraftByCallsign);\n\n        return this.destroy();\n    }\n\n    /**\n     * @for InputController\n     * @method destroy\n     */\n    destroy() {\n        this.$element = null;\n        this.$body = null;\n        this.$window = null;\n        this.$commandInput = null;\n        this.$canvases = null;\n\n        this._autocompleteController = null;\n\n        this.input = input;\n        this.input.callsign = '';\n        this.input.history = [];\n        this.input.history_item = null;\n        this._mouseDownScreenPosition = [0, 0];\n        this.input.isMouseDown = false;\n\n        return this;\n    }\n\n    /**\n     * @for InputController\n     * @method input_init_pre\n     */\n    input_init_pre() {\n        // TODO: these prop properties can be removed except for `this.input`\n        this.input = input;\n        this.input.callsign = '';\n        this.input.history = [];\n        this.input.history_item = null;\n        this._mouseDownScreenPosition = [0, 0];\n        this.input.isMouseDown = false;\n    }\n\n    /**\n     * De-selects any selected aircraft\n     *\n     * This clears the current aircraft callsign from the command input\n     * and de-selects an active aircraft's:\n     * - flight strip\n     * - radar target\n     *\n     * @for InputController\n     * @method deselectAircraft\n     */\n    deselectAircraft() {\n        // TODO: Refactor out the prop\n        // using `prop` here so CanvasController knows which aircraft is selected\n        prop.input.callsign = '';\n        this.input.callsign = '';\n        this.$commandInput.val('');\n\n        this._eventBus.trigger(EVENT.DESELECT_AIRCRAFT, {});\n    }\n\n    /**\n     * Adds a point to the measuring tool\n     *\n     * @for InputController\n     * @method _addMeasurePoint\n     * @param event {jquery Event}\n     * @param shouldReplaceLastPoint {boolean} Indicates whether this will replace the last point\n     * @private\n     */\n    _addMeasurePoint(event, shouldReplaceLastPoint = false) {\n        const mouseCanvasPosition = CanvasStageModel.calculateCanvasPositionFromPagePosition(\n            event.pageX, event.pageY\n        );\n        let relativePosition = CanvasStageModel.calculateRelativePositionFromCanvasPosition(...mouseCanvasPosition);\n\n        // Snapping should only be done when the shift key is depressed\n        if (event.originalEvent.shiftKey) {\n            const [aircraftModel, distanceFromAircraft] = this._findClosestAircraftAndDistanceToCanvasPosition(\n                ...mouseCanvasPosition\n            );\n            const [fixModel, distanceFromFix] = this._findClosestFixAndDistanceToCanvasPosition(...mouseCanvasPosition);\n            let distance;\n            let nearestModel;\n\n            // Which model is closest\n            if (distanceFromFix < distanceFromAircraft) {\n                distance = distanceFromFix;\n                nearestModel = fixModel;\n            } else {\n                distance = distanceFromAircraft;\n                nearestModel = aircraftModel;\n            }\n\n            // Only snap if the distance is with 50px, otherwise the behaviour is jarring\n            if (distance < CanvasStageModel.translatePixelsToKilometers(50)) {\n                relativePosition = nearestModel;\n            }\n        }\n\n        if (MeasureTool.hasStarted && shouldReplaceLastPoint) {\n            MeasureTool.updateLastPoint(relativePosition);\n        } else {\n            MeasureTool.addPoint(relativePosition);\n        }\n\n        // Mark for shallow render so the draw motion is smooth\n        this._eventBus.trigger(EVENT.MARK_SHALLOW_RENDER);\n    }\n\n    /**\n     * Removes the last point in the measuring tool\n     *\n     * @for InputController\n     * @method _removePreviousMeasurePoint\n     * @private\n     */\n    _removePreviousMeasurePoint() {\n        MeasureTool.removePreviousPoint();\n\n        // Mark for shallow render so the feedback is immediate\n        this._eventBus.trigger(EVENT.MARK_SHALLOW_RENDER);\n    }\n\n    /**\n     * Resets the measuring tool, clearing existing paths\n     *\n     * @for InputController\n     * @method _resetMeasuring\n     * @private\n     */\n    _resetMeasuring() {\n        const { hasPaths } = MeasureTool;\n\n        MeasureTool.reset();\n\n        // Mark for shallow render so the feedback is immediate\n        if (hasPaths) {\n            this._eventBus.trigger(EVENT.MARK_SHALLOW_RENDER);\n        }\n    }\n\n    /**\n     * Starts the measuring tool\n     *\n     * @for InputController\n     * @method _startMeasuring\n     * @private\n     */\n    _startMeasuring() {\n        if (MeasureTool.isMeasuring) {\n            return;\n        }\n\n        MeasureTool.startNewPath();\n    }\n\n    /**\n     * Stops the measuring tool\n     *\n     * @for InputController\n     * @method _stopMeasuring\n     * @private\n     */\n    _stopMeasuring() {\n        MeasureTool.endPath();\n    }\n\n    /**\n     * @for InputController\n     * @method _onMouseScroll\n     * @param event {jquery Event}\n     */\n    _onMouseScroll(event) {\n        if (event.originalEvent.wheelDelta > 0 || event.originalEvent.detail < 0) {\n            CanvasStageModel.zoomIn();\n\n            return;\n        }\n\n        CanvasStageModel.zoomOut();\n    }\n\n    /**\n     * @for InputController\n     * @method _onMouseClickAndDrag\n     * @param event {jquery Event}\n     */\n    _onMouseClickAndDrag(event) {\n        if (MeasureTool.hasStarted) {\n            this._addMeasurePoint(event, true);\n\n            return this;\n        }\n\n        if (!this.input.isMouseDown) {\n            return this;\n        }\n\n        const nextXPan = event.pageX - this._mouseDownScreenPosition[0];\n        const nextYPan = event.pageY - this._mouseDownScreenPosition[1];\n\n        CanvasStageModel.updatePan(nextXPan, nextYPan);\n    }\n\n    /**\n     * @for InputController\n     * @method _onMouseUp\n     * @param event {jquery Event}\n     */\n    _onMouseUp(event) {\n        this.input.isMouseDown = false;\n    }\n\n    /**\n     * @for InputController\n     * @method _onMouseDown\n     * @param event {jquery Event}\n     */\n    _onMouseDown(event) {\n        event.preventDefault();\n\n        switch (event.which) {\n            case MOUSE_EVENT_CODE.LEFT_PRESS:\n                this._onLeftMouseButtonPress(event);\n\n                break;\n            case MOUSE_EVENT_CODE.MIDDLE_PRESS:\n                CanvasStageModel.zoomReset();\n\n                break;\n            case MOUSE_EVENT_CODE.RIGHT_PRESS:\n                this._onRightMousePress(event);\n\n                break;\n            default:\n                break;\n        }\n    }\n\n    /**\n     * @for InputController\n     * @method _onMouseDblclick\n     * @param event {jquery Event}\n     */\n    _onMouseDblclick(event) {\n        // HACK: for \"when an aircraft's radar return is double clicked\"\n        // caveat: double click is series of mousedown-mouseup-mousedown-mouseup events in rapid succession\n        // there is no guarantee that pointer is stationary throughout the process!\n        // event handler is for entire canvas, not for things drawn on it; need to resolve which aircraft\n        // _onLeftMouseButtonPress identifies and selects nearest aircraft within 50px of mousedown events\n        // so we can just piggyback off the aircraft (if any) already selected by the second mousedown\n        if (!this.input.callsign) {\n            return;\n        }\n\n        this._eventBus.trigger(\n            EVENT.SCROLL_TO_AIRCRAFT,\n            this._aircraftController.findAircraftByCallsign(this.input.callsign)\n        );\n    }\n\n    /**\n     * @for InputController\n     * @method selectAircraft\n     * @param aircraftModel {AircraftModel}\n     */\n    selectAircraft = (aircraftModel) => {\n        if (!aircraftModel || !aircraftModel.isControllable) {\n            this.deselectAircraft();\n\n            return;\n        }\n\n        // TODO: Refactor out the prop\n        // using `prop` here so CanvasController knows which aircraft is selected\n        prop.input.callsign = aircraftModel.callsign;\n        this.input.callsign = aircraftModel.callsign;\n        this.$commandInput.val(`${aircraftModel.callsign} `);\n\n        if (!this.$commandInput.is(':focus')) {\n            this.$commandInput.focus();\n        }\n\n        this._eventBus.trigger(EVENT.SELECT_AIRCRAFT, aircraftModel);\n    };\n\n    /**\n     * Select aircraft by callsign\n     *\n     * @for InputController\n     * @method selectAircraftByCallsign\n     * @param callsign {string}\n     */\n    selectAircraftByCallsign = (callsign) => {\n        const aircraftModel = this._aircraftController.findAircraftByCallsign(callsign);\n\n        this.selectAircraft(aircraftModel);\n    }\n\n    /**\n     * @for InputController\n     * @method _onKeydown\n     * @param event {jquery Event}\n     * @private\n     */\n    _onKeydown(event) {\n        let { code } = event.originalEvent;\n        const isEscape = code === KEY_CODES.ESCAPE || code === LEGACY_KEY_CODES.ESCAPE;\n\n        if (this._isDialog(event.target) && !isEscape) {\n            // ignore input for dialogs\n            return;\n        }\n\n        // pass keboard inputs to autocomplete if it is active\n        if (this._autocompleteController.active) {\n            this._autocompleteController.onKeydownHandler(event);\n            return;\n        }\n\n        const currentCommandInputValue = this.$commandInput.val();\n\n\n        if (code == null) {\n            // fallback for legacy browsers like IE/Edge\n            code = event.originalEvent.keyCode;\n        }\n\n        // TODO: this switch can be simplified, there is a lot of repetition here\n        switch (code) {\n            case KEY_CODES.CONTROL_LEFT:\n            case KEY_CODES.CONTROL_RIGHT:\n                this._startMeasuring();\n\n                break;\n            case KEY_CODES.ENTER:\n            case KEY_CODES.NUM_ENTER:\n            case LEGACY_KEY_CODES.ENTER:\n                this.processCommand();\n\n                break;\n            case KEY_CODES.PAGE_UP:\n            case LEGACY_KEY_CODES.PAGE_UP:\n                this.selectPreviousAircraft();\n                event.preventDefault();\n\n                break;\n            case KEY_CODES.PAGE_DOWN:\n            case LEGACY_KEY_CODES.PAGE_DOWN:\n                this.selectNextAircraft();\n                event.preventDefault();\n\n                break;\n            // turning\n            case KEY_CODES.LEFT_ARROW:\n            case LEGACY_KEY_CODES.LEFT_ARROW:\n                if (this._isArrowControlMethod() && this.commandBarContext === COMMAND_CONTEXT.AIRCRAFT) {\n                    this.$commandInput.val(`${currentCommandInputValue} t l `);\n                    event.preventDefault();\n                }\n\n                break;\n            case KEY_CODES.RIGHT_ARROW:\n            case LEGACY_KEY_CODES.RIGHT_ARROW:\n                if (this._isArrowControlMethod() && this.commandBarContext === COMMAND_CONTEXT.AIRCRAFT) {\n                    this.$commandInput.val(`${currentCommandInputValue} t r `);\n                    event.preventDefault();\n                }\n\n                break;\n            // climb / descend\n            case KEY_CODES.UP_ARROW:\n            case LEGACY_KEY_CODES.UP_ARROW:\n                if (this._isArrowControlMethod() && this.commandBarContext === COMMAND_CONTEXT.AIRCRAFT) {\n                    this.$commandInput.val(`${currentCommandInputValue} c `);\n                    event.preventDefault();\n                } else {\n                    this.selectPreviousAircraft();\n                    event.preventDefault();\n                }\n\n                break;\n            case KEY_CODES.DOWN_ARROW:\n            case LEGACY_KEY_CODES.DOWN_ARROW:\n                if (this._isArrowControlMethod() && this.commandBarContext === COMMAND_CONTEXT.AIRCRAFT) {\n                    this.$commandInput.val(`${currentCommandInputValue} d `);\n                    event.preventDefault();\n                } else {\n                    this.selectNextAircraft();\n                    event.preventDefault();\n                }\n\n                break;\n            // takeoff / landing\n            case KEY_CODES.NUM_DIVIDE:\n            case LEGACY_KEY_CODES.NUM_DIVIDE:\n                if (this.commandBarContext === COMMAND_CONTEXT.AIRCRAFT) {\n                    this.$commandInput.val(`${currentCommandInputValue} / `);\n                    event.preventDefault();\n                }\n\n                break;\n            case KEY_CODES.NUM_MULTIPLY:\n            case LEGACY_KEY_CODES.NUM_MULTIPLY:\n                if (this.commandBarContext === COMMAND_CONTEXT.AIRCRAFT) {\n                    this.$commandInput.val(`${currentCommandInputValue} * `);\n                    event.preventDefault();\n                }\n\n                break;\n            // speed up / slow down\n            case KEY_CODES.NUM_ADD:\n            case LEGACY_KEY_CODES.NUM_ADD:\n                if (this.commandBarContext === COMMAND_CONTEXT.AIRCRAFT) {\n                    this.$commandInput.val(`${currentCommandInputValue} + `);\n                    event.preventDefault();\n                }\n\n                break;\n            case KEY_CODES.NUM_SUBTRACT:\n            case LEGACY_KEY_CODES.NUM_SUBTRACT:\n                if (this.commandBarContext === COMMAND_CONTEXT.AIRCRAFT) {\n                    this.$commandInput.val(`${currentCommandInputValue} - `);\n                    event.preventDefault();\n                }\n\n                break;\n            case KEY_CODES.F1:\n            case LEGACY_KEY_CODES.F1:\n                event.preventDefault();\n                this._scopeModel.decreasePtlLength();\n\n                break;\n            case KEY_CODES.F2:\n            case LEGACY_KEY_CODES.F2:\n                event.preventDefault();\n                this._scopeModel.increasePtlLength();\n\n                break;\n            case KEY_CODES.F7:\n            case LEGACY_KEY_CODES.F7:\n                if (this.commandBarContext !== COMMAND_CONTEXT.SCOPE) {\n                    return;\n                }\n\n                this.$commandInput.val('QP_J ');\n                event.preventDefault();\n\n                break;\n            case KEY_CODES.BACKQUOTE:\n            case LEGACY_KEY_CODES.BACKQUOTE:\n                this.$commandInput.val('');\n                event.preventDefault();\n                this._toggleCommandBarContext();\n\n                break;\n            case KEY_CODES.TAB:\n            case LEGACY_KEY_CODES.TAB:\n                event.preventDefault();\n\n                if (this.commandBarContext === COMMAND_CONTEXT.AIRCRAFT) {\n                    this._autocompleteController.activate();\n                }\n\n                break;\n            case KEY_CODES.ESCAPE:\n            case LEGACY_KEY_CODES.ESCAPE:\n                // TODO: Probably should have its own cancel button\n                this._resetMeasuring();\n\n                UiController.closeAllDialogs();\n\n                const hasCallsign = _includes(currentCommandInputValue, this.input.callsign);\n                const hasOnlyCallsign = currentCommandInputValue.trim() === this.input.callsign;\n                const hasSelectedCallsign = this.input.callsign !== '';\n\n                if (!hasCallsign || hasOnlyCallsign || !hasSelectedCallsign) {\n                    this.deselectAircraft();\n\n                    return;\n                }\n\n                this.$commandInput.val(`${this.input.callsign} `);\n\n                break;\n            default:\n                this.$commandInput.focus();\n        }\n    }\n\n\n    /**\n     * @for InputController\n     * @method _onKeydown\n     * @param event {jquery Event}\n     * @private\n     */\n    _onKeyup(event) {\n        let { code } = event.originalEvent;\n\n        if (code == null) {\n            // fallback for legacy browsers like IE/Edge\n            code = event.originalEvent.keyCode;\n        }\n\n        switch (code) {\n            case KEY_CODES.CONTROL_LEFT:\n            case KEY_CODES.CONTROL_RIGHT:\n                this._stopMeasuring();\n                this._eventBus.trigger(EVENT.MARK_SHALLOW_RENDER);\n\n                break;\n            default:\n        }\n    }\n\n    /**\n     * Returns true if $element is part of a dialog\n     *\n     * @for InputController\n     * @method _isDialog\n     * @param element {jquery element}\n     * @return {boolean}\n     * @private\n     */\n    _isDialog($element) {\n        if ($element.classList.contains(CLASSNAMES.DIALOG)) {\n            return true;\n        }\n\n        const { parentElement } = $element;\n\n        return parentElement && this._isDialog(parentElement);\n    }\n\n    /**\n     * @for InputController\n     * @method input_history_clamp\n     */\n    input_history_clamp() {\n        this.input.history_item = clamp(0, this.input.history_item, this.input.history.length - 1);\n    }\n\n    /**\n     * @for InputController\n     * @method selectPreviousAircraft\n     */\n    selectPreviousAircraft() {\n        if (this.input.history.length === 0) {\n            return;\n        }\n\n        if (this.input.history_item == null) {\n            this.input.history.unshift(this.$commandInput.val());\n            this.input.history_item = 0;\n        }\n\n        this.input.history_item += 1;\n        this.input_history_clamp();\n\n        const callsign = this.input.history[this.input.history_item];\n        const aircraftModel = this._aircraftController.findAircraftByCallsign(callsign);\n\n        this.selectAircraft(aircraftModel);\n    }\n\n    /**\n     * @for InputController\n     * @method selectNextAircraft\n     */\n    selectNextAircraft() {\n        if (this.input.history.length === 0 || !this.input.history_item) {\n            return;\n        }\n\n        this.input.history_item -= 1;\n\n        if (this.input.history_item <= 0) {\n            this.$commandInput.val(this.input.history[0]);\n\n            this.input.history.splice(0, 1);\n            this.input.history_item = null;\n\n            return;\n        }\n\n        this.input_history_clamp();\n\n        const callsign = this.input.history[this.input.history_item];\n        const aircraftModel = this._aircraftController.findAircraftByCallsign(callsign);\n\n        this.selectAircraft(aircraftModel);\n    }\n\n    /**\n     * Encapsulation of repeated boolean logic\n     *\n     * @for InputController\n     * @method _isArrowControlMethod\n     * @return {boolean}\n     */\n    _isArrowControlMethod() {\n        return GameController.game.option.getOptionByName(GAME_OPTION_NAMES.CONTROL_METHOD) === 'arrows';\n    }\n\n    /**\n     * Toggle command bar between aircraft commands and scope commands\n     *\n     * @for InputController\n     * @method _toggleCommandBarContext\n     */\n    _toggleCommandBarContext() {\n        switch (this.commandBarContext) {\n            case COMMAND_CONTEXT.AIRCRAFT:\n                this.commandBarContext = COMMAND_CONTEXT.SCOPE;\n                this.$commandInput.attr('placeholder', 'enter scope command');\n                this.$commandInput.toggleClass(SELECTORS.CLASSNAMES.COMMAND_SCOPE_MODE);\n\n                return;\n            case COMMAND_CONTEXT.SCOPE:\n                this.commandBarContext = COMMAND_CONTEXT.AIRCRAFT;\n                this.$commandInput.attr('placeholder', 'enter aircraft command');\n                this.$commandInput.toggleClass(SELECTORS.CLASSNAMES.COMMAND_SCOPE_MODE);\n\n                break;\n\n            default:\n        }\n    }\n\n    /**\n     * Process user command to be applied to an aircraft\n     *\n     * @for InputController\n     * @method processAircraftCommand\n     */\n    processAircraftCommand() {\n        const userCommand = this.$commandInput.val().trim().toLowerCase();\n\n        // Using try/catch here very much on purpose. the `CommandParser` will throw when it encounters any kind\n        // of error; invalid length, validation, parse, etc. Here we catch those errors, log them to the screen\n        // and then throw them all at once\n        let cmd;\n        try {\n            const parser = new CommandParser(userCommand);\n            cmd = parser.parse();\n        } catch (error) {\n            UiController.ui_log('Command not understood', true);\n            throw error;\n        }\n        const parsedCommand = cmd;\n        if (parsedCommand.command !== PARSED_COMMAND_NAME.TRANSMIT) {\n            return this.processSystemCommand(parsedCommand);\n        }\n\n        this.input.history.unshift(this.input.callsign);\n        this.input.history_item = null;\n\n        return this.processTransmitCommand(parsedCommand);\n    }\n\n    /**\n     * Process the command currently in the command bar\n     *\n     * @for InputController\n     * @method processCommand\n     * @return {array} [success of operation, response]\n     */\n    processCommand() {\n        let response = [];\n\n        if (this.commandBarContext === COMMAND_CONTEXT.AIRCRAFT) {\n            response = this.processAircraftCommand();\n        } else if (this.commandBarContext === COMMAND_CONTEXT.SCOPE) {\n            response = this.processScopeCommand();\n        }\n        this.deselectAircraft();\n\n        return response;\n    }\n\n    /**\n     * Process user command to be applied to the user's scope\n     *\n     * @for InputController\n     * @method processScopeCommand\n     */\n    processScopeCommand() {\n        let scopeCommandModel;\n        const userCommand = this.$commandInput.val().trim().toLowerCase();\n\n        try {\n            scopeCommandModel = new ScopeCommandModel(userCommand);\n        } catch (error) {\n            UiController.ui_log('ERROR: BAD SYNTAX', true);\n\n            throw error;\n        }\n\n        const [successful, response] = this._scopeModel.runScopeCommand(scopeCommandModel);\n        const isWarning = !successful;\n\n        UiController.ui_log(response, isWarning);\n    }\n\n    /**\n     * @for InputController\n     * @method processSystemCommand\n     * @param parsedCommand {ParsedCommand}\n     * @return {boolean}\n     */\n    processSystemCommand(parsedCommand) {\n        switch (parsedCommand.command) {\n            case PARSED_COMMAND_NAME.TUTORIAL:\n                UiController.onToggleTutorial();\n\n                return true;\n\n            case PARSED_COMMAND_NAME.AUTO:\n                // TODO: does this function exist anywhere?\n                // aircraft_toggle_auto();\n                //\n                // if (this._aircraftController.aircraft.auto.enabled) {\n                //     UiController.ui_log('automatic controller ENGAGED');\n                // } else {\n                //     UiController.ui_log('automatic controller OFF');\n                // }\n\n                return true;\n\n            case PARSED_COMMAND_NAME.PAUSE:\n                GameController.game_pause_toggle();\n\n                return true;\n\n            case PARSED_COMMAND_NAME.TIMEWARP:\n                let nextTimewarpValue = 0;\n\n                if (parsedCommand.args) {\n                    // timewarp has just one argument\n                    [nextTimewarpValue] = parsedCommand.args;\n                }\n\n                GameController.updateTimescale(nextTimewarpValue);\n                EventTracker.recordEvent(TRACKABLE_EVENT.OPTIONS, 'timewarp-maunal-entry', `${nextTimewarpValue}`);\n\n                return true;\n\n            case PARSED_COMMAND_NAME.CLEAR:\n                localStorage.clear();\n                location.reload();\n\n                break;\n            case PARSED_COMMAND_NAME.AIRPORT: {\n                // TODO: it may be better to do this in the parser\n                const airportIcao = parsedCommand.args[0];\n\n                if (_has(AirportController.airports, airportIcao)) {\n                    AirportController.airport_set(airportIcao);\n                }\n\n                return true;\n            }\n            case PARSED_COMMAND_NAME.AIRAC: {\n                const airportIcao = AirportController.current.icao.toUpperCase();\n                const airacCycle = AirportController.getAiracCycle();\n\n                if (!airacCycle) {\n                    UiController.ui_log(`${airportIcao} AIRAC cycle: unknown`);\n\n                    return true;\n                }\n\n                UiController.ui_log(`${airportIcao} AIRAC cycle: ${airacCycle}`);\n\n                return true;\n            }\n            // TODO: this will be removed entirely, eventually.\n            case PARSED_COMMAND_NAME.RATE:\n                UiController.ui_log('this command has been deprecated', true);\n\n                return true;\n            default:\n                return true;\n        }\n    }\n\n    /**\n     * @for InputController\n     * @method processTransmitCommand\n     * @param parsedCommand {ParsedCommand}\n     * @return {boolean}\n     */\n    processTransmitCommand(parsedCommand) {\n        console.log(parsedCommand);\n        // TODO: abstract the aircraft callsign matching\n        let matches = 0;\n        let match = INVALID_NUMBER;\n\n        for (let i = 0; i < this._aircraftController.aircraft.list.length; i++) {\n            const aircraft = this._aircraftController.aircraft.list[i];\n\n            if (aircraft.matchCallsign(parsedCommand.callsign)) {\n                matches += 1;\n                match = i;\n            }\n        }\n\n        if (matches > 1) {\n            UiController.ui_log('multiple aircraft match the callsign, say again', true);\n\n            return true;\n        }\n\n        if (match === INVALID_NUMBER) {\n            UiController.ui_log('no such aircraft, say again', true);\n\n            return true;\n        }\n\n        const aircraft = this._aircraftController.aircraft.list[match];\n\n        return this._aircraftController.aircraftCommander.runCommands(aircraft, parsedCommand.args);\n    }\n\n    /**\n     * Given a mouse click event, retrieve and return the [x, y] offset from the airport center, in km\n     *\n     * @for InputController\n     * @method _calculateRelativePositionFromEvent\n     * @param event {jQuery Event}\n     * @return {array<number>}\n     */\n    _calculateRelativePositionFromEvent(event) {\n        const canvasPosition = CanvasStageModel.calculateCanvasPositionFromPagePosition(event.pageX, event.pageY);\n        const relativePosition = CanvasStageModel.calculateRelativePositionFromCanvasPosition(...canvasPosition);\n\n        return relativePosition;\n    }\n\n    /**\n     * Facade for `_aircraftController.aircraft_get_nearest()`\n     *\n     * Accepts current mouse position in canvas coordinates x, y\n     *\n     * @for InputController\n     * @method _findClosestAircraftAndDistanceToCanvasPosition\n     * @param x {number}\n     * @param y {number}\n     * @returns [aircraftModel, number]\n     * @private\n     */\n    _findClosestAircraftAndDistanceToCanvasPosition(x, y) {\n        return this._aircraftController.aircraft_get_nearest(\n            CanvasStageModel.calculateRelativePositionFromCanvasPosition(x, y)\n        );\n    }\n\n    /**\n     * Facade for `FixCollection.getNearest`\n     *\n     * Accepts current mouse position in canvas coordinates x, y\n     *\n     * @for InputController\n     * @method _findClosestFixAndDistanceToCanvasPosition\n     * @param x {number}\n     * @param y {number}\n     * @returns [FixModel, number]\n     * @private\n     */\n    _findClosestFixAndDistanceToCanvasPosition(x, y) {\n        return FixCollection.getNearestFix(\n            CanvasStageModel.calculateRelativePositionFromCanvasPosition(x, y)\n        );\n    }\n\n    /**\n     * Log the provided lat/lon coordinates to the console, display in command log, and copy to clipboard\n     *\n     * @for InputController\n     * @method _logAndCopyCoordinates\n     * @param latLonCoordinates {array<number>} [lat, lon]\n     * @returns undefined\n     * @private\n     */\n    _logAndCopyCoordinates(latLonCoordinates) {\n        const coordinateText = latLonCoordinates.map((coord) => coord.toFixed(9)).join(', ');\n\n        window.navigator.clipboard.writeText(coordinateText).then(() => {\n            console.log(coordinateText);\n            UiController.ui_log(`Clicked coordinates: ${coordinateText} (logged to console and copied to clipboard!)`, true);\n        });\n    }\n\n    /**\n     * Triggered when a user clicks on the `right` mouse button and\n     * records the position of the `right click` event.\n     *\n     * @for InputController\n     * @method _onRightMousePress\n     * @param event {jquery Event}\n     * @returns undefined\n     * @private\n     */\n    _onRightMousePress(event) {\n        if (MeasureTool.isMeasuring) {\n            this._removePreviousMeasurePoint();\n\n            return;\n        }\n\n        // copy mouse click position to clipboard on shift+alt+rightclick\n        if (event.originalEvent.shiftKey && event.originalEvent.altKey) {\n            const relativePosition = this._calculateRelativePositionFromEvent(event);\n            const referencePosition = AirportController.current.positionModel;\n            const latLonCoordinates = DynamicPositionModel.calculateGpsCoordinatesFromRelativePosition(\n                relativePosition, referencePosition\n            );\n\n            return this._logAndCopyCoordinates(latLonCoordinates);\n        }\n\n        this._markMousePressed(event, MOUSE_BUTTON_NAMES.RIGHT);\n    }\n\n    /**\n     * Logic that happens when a user clicks on the `left` mouse button\n     *\n     * TODO: this method is a first step at simplification. there is still\n     * more work to do here, but this at least gets us moving in\n     * the right direction\n     *\n     * @for InputController\n     * @method _onLeftMouseButtonPress\n     * @param event {jquery Event}\n     * @private\n     */\n    _onLeftMouseButtonPress(event) {\n        if (MeasureTool.isMeasuring) {\n            this._addMeasurePoint(event);\n\n            return;\n        }\n\n        const mouseCanvasPos = CanvasStageModel.calculateCanvasPositionFromPagePosition(event.pageX, event.pageY);\n        const [aircraftModel, distanceFromPosition] = this._findClosestAircraftAndDistanceToCanvasPosition(...mouseCanvasPos);\n\n        if (distanceFromPosition > CanvasStageModel.translatePixelsToKilometers(50)) {\n            this.deselectAircraft();\n            this._markMousePressed(event, MOUSE_BUTTON_NAMES.LEFT);\n        } else if (this.commandBarContext === COMMAND_CONTEXT.SCOPE) {\n            this.$commandInput.val(`${this.$commandInput.val()} ${aircraftModel.callsign}`);\n            this.processCommand();\n        } else if (aircraftModel) {\n            this.selectAircraft(aircraftModel);\n        }\n    }\n\n    /**\n     * Method to initiate a mouse click and drag. Checks whether or not\n     * the correct button is pressed, records the position, and marks the\n     * mouse as down.\n     *\n     * @for InputController\n     * @method _markMousePressed\n     * @param {String} mouseButton\n     */\n    _markMousePressed(event, mouseButton) {\n        const canvasDragButton = GameController.getGameOption(GAME_OPTION_NAMES.MOUSE_CLICK_DRAG);\n\n        // The mouse button that's been pressed isn't the one\n        // that drags the canvas, so we return.\n        if (mouseButton !== canvasDragButton) {\n            return;\n        }\n\n        const mousePositionX = event.pageX - CanvasStageModel._panX;\n        const mousePositionY = event.pageY - CanvasStageModel._panY;\n\n        // Record mouse down position for panning\n        this._mouseDownScreenPosition = [\n            mousePositionX,\n            mousePositionY\n        ];\n        this.input.isMouseDown = true;\n    }\n}\n","import $ from 'jquery';\nimport { SELECTORS } from './constants/selectors';\n\n/**\n * Provides access to the full page takeover presented on app load\n *\n * @class LoadingView\n */\nexport default class LoadingView {\n    /**\n     * @for LoadingView\n     * @constructor\n     */\n    constructor() {\n        /**\n         * Root DOM element\n         *\n         * @property $element\n         * @type {jquery|null}\n         */\n        this.$element = null;\n\n        return this._setupChildren();\n    }\n\n    /**\n     * @for LoadingView\n     * @method _setupChildren\n     * @chainable\n     * @private\n     */\n    _setupChildren() {\n        this.$element = $(SELECTORS.DOM_SELECTORS.LOADING_VIEW);\n\n        return this;\n    }\n\n    /**\n     * @for LoadingView\n     * @method destroy\n     * @chainable\n     */\n    destroy() {\n        this.$element = null;\n\n        return this;\n    }\n\n    /**\n     * Initiates a timer that will fadeout the `#loadingView`\n     *\n     * Called from `AppController` once everything is loaded\n     * and the app is ready to start.\n     *\n     * @for LoadingView\n     * @method complete\n     */\n    complete() {\n        global.setTimeout(() => {\n            this.$element.fadeOut(1000);\n            this.$element.css('pointerEvents', 'none');\n        }, 1500);\n    }\n}\n","import _has from 'lodash/has';\nimport _isNil from 'lodash/isNil';\nimport _map from 'lodash/map';\nimport _round from 'lodash/round';\nimport AirportController from '../airport/AirportController';\nimport EventBus from '../lib/EventBus';\nimport GameController from '../game/GameController';\nimport NavigationLibrary from '../navigationLibrary/NavigationLibrary';\nimport UiController from '../ui/UiController';\nimport { MCP_MODE } from './ModeControl/modeControlConstants';\nimport {\n    FLIGHT_PHASE\n} from '../constants/aircraftConstants';\nimport { EVENT } from '../constants/eventNames';\nimport { radians_normalize } from '../math/circle';\nimport { round } from '../math/core';\nimport { AIRCRAFT_COMMAND_MAP } from '../commands/aircraftCommand/aircraftCommandMap';\nimport { speech_say } from '../speech';\nimport {\n    radio_runway,\n    radio_spellOut,\n    radio_heading,\n    radio_altitude\n} from '../utilities/radioUtilities';\nimport { heading_to_string, radiansToDegrees, degreesToRadians } from '../utilities/unitConverters';\n\n/**\n *\n *\n * @class AircraftCommander\n */\nexport default class AircraftCommander {\n    constructor(onChangeTransponderCode, findAircraftById) {\n        this._eventBus = EventBus;\n        this._findAircraftById = findAircraftById;\n        this._onChangeTransponderCode = onChangeTransponderCode;\n    }\n\n    /**\n     * @for AircraftCommander\n     * @method runCommands\n     * @param aircraft {AircraftModel}\n     * @param commands {array<AircraftCommandParser>}\n     * @param isPreSpawn {boolean}\n     */\n    runCommands(aircraft, commands, isPreSpawn = false) {\n        if (!aircraft.isControllable && !isPreSpawn) {\n            return true;\n        }\n\n        let response = [];\n        let response_end = '';\n        let redResponse = false;\n        const deferred = [];\n\n        for (let i = 0; i < commands.length; i++) {\n            const command = commands[i][0];\n            const args = commands[i].splice(1);\n\n            if (command === FLIGHT_PHASE.TAKEOFF) {\n                deferred.push([command, args]);\n\n                continue;\n            }\n\n            let retval = this.run(aircraft, command, args);\n\n            if (retval) {\n                if (!retval[0]) {\n                    redResponse = true;\n                }\n\n                if (!_has(retval[1], 'log') || !_has(retval[1], 'say')) {\n                    // TODO: reassigning a value using itself is dangerous. this should be re-wroked\n                    retval = [\n                        retval[0],\n                        {\n                            log: retval[1],\n                            say: retval[1]\n                        }\n                    ];\n                }\n\n                response.push(retval[1]);\n\n                if (retval[2]) {\n                    // eslint-disable-next-line prefer-destructuring\n                    response_end = retval[2];\n                }\n            }\n        }\n\n        for (let i = 0; i < deferred.length; i += 1) {\n            const command = deferred[i][0];\n            const args = deferred[i][1];\n            const retval = this.run(aircraft, command, args);\n\n            if (retval) {\n                if (!retval[0]) {\n                    redResponse = true;\n                }\n                // TODO: fix the logic here this very purposly using `!=`. length is not an object and thus,\n                // never null but by using coercion it evaluates to falsey if its not an array\n                // true if array, and not log/say object\n                if (retval[1].length != null) {\n                    // make into log/say object\n                    retval[1] = {\n                        say: retval[1],\n                        log: retval[1]\n                    };\n                }\n\n                response.push(retval[1]);\n            }\n        }\n\n        if (isPreSpawn) {\n            return true;\n        }\n\n        if (commands.length === 0) {\n            response = [{\n                say: 'say again',\n                log: 'say again'\n            }];\n        }\n\n        if (response.length >= 1) {\n            if (response_end) {\n                response_end = `, ${response_end}`;\n            }\n\n            const r_log = _map(response, (r) => r.log).join(', ');\n            const r_say = _map(response, (r) => r.say).join(', ');\n\n            UiController.ui_log(`${aircraft.callsign}, ${r_log} ${response_end}`, redResponse);\n            speech_say(\n                [\n                    { type: 'callsign', content: aircraft },\n                    { type: 'text', content: `${r_say} ${response_end}` }\n                ],\n                aircraft.pilotVoice\n            );\n        }\n        // console.log(aircraft);\n        // console.log(commands);\n        // console.log(response);\n        return true;\n    }\n\n    /**\n     * @for AircraftCommander\n     * @method run\n     * @param aircraft {AircraftModel}\n     * @param command {string}\n     * @param data {array}\n     * @return {function}\n     */\n    run(aircraft, command, data) {\n        const { functionName } = AIRCRAFT_COMMAND_MAP[command];\n\n        if (typeof functionName === 'undefined') {\n            return [false, 'say again?'];\n        }\n\n        return this[functionName](aircraft, data);\n    }\n\n    /**\n     * Aborts an action. Deprecated.\n     *\n     * @for AircraftCommander\n     * @method runAbort\n     * @return {array} [success of operation, readback]\n     */\n    runAbort() {\n        return [false, \"the 'abort' command has been deprecated, please see documentation for help\"];\n    }\n\n    /**\n     * Set the aircraft to maintain an assigned altitude, and provide a readback\n     *\n     * @for AircraftCommander\n     * @method runAltitude\n     * @param aircraft {AircraftModel}\n     * @param data {array}\n     * @return {array}  [success of operation, readback]\n     */\n    runAltitude(aircraft, data) {\n        const altitudeRequested = data[0];\n        const expediteRequested = data[1];\n        const shouldUseSoftCeiling = GameController.game.option.getOptionByName('softCeiling') === 'yes';\n        const airport = AirportController.airport_get();\n\n        return aircraft.pilot.maintainAltitude(\n            altitudeRequested,\n            expediteRequested,\n            shouldUseSoftCeiling,\n            airport,\n            aircraft\n        );\n    }\n\n    /**\n     * Direct an aircraft to fly and maintain a specific heading\n     *\n     * @for AircraftCommander\n     * @method runHeading\n     * @param aircraft {AircraftModel}\n     * @param data {array}\n     * @return {array} [success of operation, readback]\n     */\n    runHeading(aircraft, data) {\n        let direction = data[0];\n        const heading = data[1];\n        const incremental = data[2];\n        const readback = aircraft.pilot.maintainHeading(aircraft, heading, direction, incremental);\n\n        if (!direction) {\n            direction = '';\n        }\n\n        aircraft.target.turn = direction;\n\n        if (aircraft.hasApproachClearance) {\n            aircraft.pilot.cancelApproachClearance(aircraft);\n        }\n\n        return readback;\n    }\n\n    /**\n     * Activate the flightplan stored in the FMS\n     *\n     * @for AircraftCommander\n     * @method runClearedAsFiled\n     * @param aircraft {AircraftModel}\n     * @return {array} [success of operation, readback]\n     */\n    runClearedAsFiled(aircraft) {\n        return aircraft.pilot.clearedAsFiled();\n    }\n\n    /**\n     * @for AircraftCommander\n     * @method runClimbViaSID\n     * @param aircraft {AircraftModel}\n     * @param data {array}\n     * @return {array} [success of operation, readback]\n     */\n    runClimbViaSID(aircraft, data) {\n        const altitude = data[0];\n\n        return aircraft.pilot.climbViaSid(aircraft, altitude);\n    }\n\n    /**\n     * @for AircraftCommander\n     * @method runCross\n     * @param aircraft {AircraftModel}\n     * @param data {array}\n     * @return {array} [success of operation, readback]\n     */\n    runCross(aircraft, data) {\n        const fix = data[0].toUpperCase();\n        const altitude = data[1];\n        const speed = data[2];\n\n        return aircraft.pilot.crossFix(aircraft, fix, altitude, speed);\n    }\n\n    /**\n     * @for AircraftCommander\n     * @method runDescendViaStar\n     * @param aircraft {AircraftModel}\n     * @param data {array}\n     * @return {array} [success of operation, readback]\n     */\n    runDescendViaStar(aircraft, data = []) {\n        const altitude = data[0];\n\n        return aircraft.pilot.descendViaStar(aircraft, altitude);\n    }\n\n    /**\n     * @for AircraftCommander\n     * @method runSpeed\n     * @param aircraft {AircraftModel}\n     * @param data {array}\n     */\n    runSpeed(aircraft, data) {\n        const nextSpeed = data[0];\n\n        return aircraft.pilot.maintainSpeed(nextSpeed, aircraft);\n    }\n\n    /**\n     * Setup the Fms to enter a holding pattern,\n     *\n     * Can be used to hold at:\n     * - A Waypoint in the current flight plan: which will be made the currentWaypoint via `fms.skipToWaypointName()`\n     * - A Fix not in the flight plan: a new `LegModel` will be created and prepended thus making it the currentWaypoint\n     * - The current position: a new `LegModel` will be created and prepended thus making it the currentWaypoint\n     *\n     * @for AircraftCommander\n     * @method runHold\n     * @param aircraft {AircraftModel}\n     * @param data {array}\n     * @return {array} [success of operation, readback]\n     */\n    runHold(aircraft, data) {\n        const [turnDirection, legLength, fixName, radial] = data;\n\n        if (!fixName) {\n            return [false, 'unable to hold over present position, we can only hold over fixes'];\n        }\n\n        const fixModel = NavigationLibrary.findFixByName(fixName);\n\n        if (!fixModel) {\n            return [false, `unable to hold at unknown fix ${fixName}`];\n        }\n\n        const holdParameters = {};\n        let fallbackInboundHeading;\n\n        // Instead of using DEFAULT_HOLD_PARAMETERS here, we only pass the values\n        // provided by the player. These then are used to patch the _holdParameters as\n        // specified in the `WaypointModel`\n        if (turnDirection !== null) {\n            holdParameters.turnDirection = turnDirection;\n        }\n\n        if (legLength !== null) {\n            holdParameters.legLength = legLength;\n        }\n\n        if (radial !== null) {\n            // Radial is given as the outbound course, so it needs to be inverted\n            holdParameters.inboundHeading = radians_normalize(degreesToRadians(radial) + Math.PI);\n        } else {\n            // As radial has not been explicitly requested, we need to pass a \"fallback\"\n            // inboundHeading, as it's possible that a default inboundHeading doesn't exist for\n            // the `WaypointModel`s _holdParameters (eg. if the procedure JSON has no holds)\n            fallbackInboundHeading = fixModel.positionModel.bearingFromPosition(aircraft.positionModel);\n        }\n\n        return aircraft.pilot.initiateHoldingPattern(fixName, holdParameters, fallbackInboundHeading);\n    }\n\n    /**\n     * Exit holding pattern and resume navigation\n     *\n     * @for AircraftCommander\n     * @method runCancelHoldingPattern\n     * @param aircraft {AircraftModel}\n     * @param args {array}\n     * @return {array} [success of operation, readback]\n     */\n    runCancelHoldingPattern(aircraft, args) {\n        const fixName = args[0];\n\n        return aircraft.pilot.cancelHoldingPattern(fixName);\n    }\n\n    /**\n     * Skip forward to a particular fix that already exists further along the aircraft's route\n     *\n     * @for AircraftCommander\n     * @method runDirect\n     * @param data\n     */\n    runDirect(aircraft, data) {\n        // TODO: maybe handle with parser?\n        const fixName = data[0].toUpperCase();\n\n        aircraft.target.turn = null;\n\n        return aircraft.pilot.proceedDirect(fixName);\n    }\n\n    /**\n     * Set the arrival runway to expect for approach and landing\n     *\n     * @for AircraftCommander\n     * @method runExpectArrivalRunway\n     * @param aircraft {AircraftModel}\n     * @param data {array}\n     * @return {array} [success of operation, response]\n     */\n    runExpectArrivalRunway(aircraft, data) {\n        const airportModel = AirportController.airport_get();\n        const runwayName = data[0];\n        const runwayModel = airportModel.getRunway(runwayName);\n\n        if (_isNil(runwayModel)) {\n            const previousRunwayModel = aircraft.fms.arrivalRunwayModel;\n            const readback = {};\n            readback.log = `unable to find Runway ${runwayName} on our charts, ` +\n                `expecting Runway ${previousRunwayModel.name} instead`;\n            readback.say = `unable to find Runway ${radio_runway(runwayName)} on our ` +\n                `charts, expecting Runway ${previousRunwayModel.getRadioName()} instead`;\n\n            return [false, readback];\n        }\n\n        return aircraft.pilot.updateStarLegForArrivalRunway(aircraft, runwayModel);\n    }\n\n    /**\n     * @for AircraftCommander\n     * @method runFlyPresentHeading\n     * @param aircraft {AircraftModel}\n     */\n    runFlyPresentHeading(aircraft) {\n        if (aircraft.flightPhase === FLIGHT_PHASE.APRON) {\n            return [false, 'we\\'re still at the gate'];\n        }\n\n        if (aircraft.flightPhase === FLIGHT_PHASE.TAXI) {\n            const runway = aircraft.fms.departureRunwayModel;\n            const readback = {};\n            readback.log = `we're still taxiing to Runway ${runway.name}`;\n            readback.say = `we're still taxiing to Runway ${radio_runway(runway.name)}`;\n\n            return [false, readback];\n        }\n\n        return aircraft.pilot.maintainPresentHeading(aircraft);\n    }\n\n    /**\n     * @for AircraftCommander\n     * @method runSayRoute\n     * @param aircraft {AircraftModel}\n     * @return {array}   [success of operation, readback]\n     */\n    runSayRoute(aircraft) {\n        return aircraft.pilot.sayRoute();\n    }\n\n    /**\n     * @for AircraftCommander\n     * @method runSID\n     * @param aircraft {AircraftModel}\n     * @param data {array<string>} a string representation of the SID (may also include exit, eg sid.exit)\n     * @return {array}   [success of operation, readback]\n     */\n    runSID(aircraft, data) {\n        const routeString = data[0];\n        const airportModel = AirportController.airport_get();\n\n        return aircraft.pilot.applyDepartureProcedure(routeString, airportModel.icao);\n    }\n\n    /**\n     * @for AircraftCommander\n     * @method runSTAR\n     * @param data {array<string>} a string representation of the STAR, ex: `QUINN.BDEGA2.KSFO`\n     * @return {array}   [success of operation, readback]\n     */\n    runSTAR(aircraft, data) {\n        const routeString = data[0];\n        const airportModel = AirportController.airport_get();\n\n        return aircraft.pilot.applyArrivalProcedure(routeString, airportModel.name);\n    }\n\n    /**\n     * @for AircraftCommander\n     * @method runMoveDataBlock\n     * @deprecated\n     */\n    runMoveDataBlock() {\n        return [false, 'moving data blocks is now a scope command; see documentation for help'];\n    }\n\n    /**\n     * Adds a new Leg to fms with a user specified route\n     * Note: See notes on 'runReroute' for how to format input for this command\n     *\n     * @for AircraftCommander\n     * @method runRoute\n     * @param data\n     * @return {array}   [success of operation, readback]\n     */\n    runRoute(aircraft, data) {\n        // TODO: is this .toUpperCase() necessary??\n        const routeString = data[0].toUpperCase();\n\n        return aircraft.pilot.applyPartialRouteAmendment(routeString);\n    }\n\n    /**\n      * Removes all legs, and replaces them with the specified route\n      * Note: Input data needs to be provided with single dots connecting all\n      * procedurally-linked points (eg KSFO.OFFSH9.SXC or SGD.V87.MOVER), and\n      * all other points that will be simply a fix direct to another fix need\n      * to be connected with double-dots (eg HLI..SQS..BERRA..JAN..KJAN)\n      *\n      * @for AircraftCommander\n      * @method runReroute\n      * @param data\n      * @return {array}   [success of operation, readback]\n      */\n    runReroute(aircraft, data) {\n        // TODO: is this .toUpperCase() necessary??\n        const routeString = data[0].toUpperCase();\n        const readback = aircraft.pilot.replaceFlightPlanWithNewRoute(routeString);\n\n        // Only change to LNAV mode if the route was applied successfully, else\n        // continue with the previous instructions (whether a heading, etc)\n        if (readback[0]) {\n            aircraft.mcp.setHeadingLnav();\n        }\n\n        return readback;\n    }\n\n    /**\n     * @for AircraftCommander\n     * @method runSayAltitude\n     * @param aircraft\n     * @return {array} [success of operation, readback]\n     */\n    runSayAltitude(aircraft) {\n        const altitude = _round(aircraft.altitude, -2);\n        const isClimbingOrDescending = aircraft.trend !== 0;\n        const readback = {};\n        let altitudeChangeString = 'at ';\n\n        if (isClimbingOrDescending) {\n            altitudeChangeString = 'leaving ';\n        }\n\n        readback.log = `${altitudeChangeString}${altitude}`;\n        readback.say = `${altitudeChangeString}${radio_altitude(altitude)}`;\n\n        return [true, readback];\n    }\n\n    /**\n     * @for AircraftCommander\n     * @method runSayAssignedAltitude\n     * @param aircraft\n     * @return {array} [success of operation, readback]\n     */\n    runSayAssignedAltitude(aircraft) {\n        const altitude = _round(aircraft.mcp.altitude, -2);\n        const readback = {};\n\n        if (altitude === 0) {\n            return [false, 'we haven\\'t been assigned an altitude'];\n        }\n\n        readback.log = `assigned ${altitude}`;\n        readback.say = `assigned ${radio_altitude(altitude)}`;\n\n        return [true, readback];\n    }\n\n    /**\n     * @for AircraftCommander\n     * @method runSayHeading\n     * @param aircraft\n     * @return {array} [success of operation, readback]\n     */\n    runSayHeading(aircraft) {\n        const heading = heading_to_string(aircraft.heading);\n        const readback = {};\n\n        readback.log = `heading ${heading}`;\n        readback.say = `heading ${radio_heading(heading)}`;\n\n        return [true, readback];\n    }\n\n    /**\n     * @for AircraftCommander\n     * @method runSayAssignedHeading\n     * @param aircraft\n     * @return {array} [success of operation, readback]\n     */\n    runSayAssignedHeading(aircraft) {\n        if (aircraft.mcp.headingMode !== MCP_MODE.HEADING.HOLD) {\n            return [false, 'we haven\\'t been assigned a heading'];\n        }\n\n        const heading = heading_to_string(aircraft.mcp.heading);\n        const readback = {};\n\n        readback.log = `assigned heading ${heading}`;\n        readback.say = `assigned heading ${radio_heading(heading)}`;\n\n        return [true, readback];\n    }\n\n    /**\n     * @for AircraftCommander\n     * @method runSaySpeed\n     * @param aircraft\n     * @return {array} [success of operation, readback]\n     */\n    runSayIndicatedAirspeed(aircraft) {\n        const speed = _round(aircraft.speed);\n        const readback = {};\n\n        readback.log = `indicating ${speed} knots`;\n        readback.say = `indicating ${radio_spellOut(speed)} knots`;\n\n        return [true, readback];\n    }\n\n    /**\n     * @for AircraftCommander\n     * @method runSayAssignedSpeed\n     * @param aircraft\n     * @return {array} [success of operation, readback]\n     */\n    runSayAssignedSpeed(aircraft) {\n        if (aircraft.mcp.speedMode !== MCP_MODE.SPEED.HOLD) {\n            return [false, 'we haven\\'t been assigned a speed'];\n        }\n\n        const speed = _round(aircraft.mcp.speed);\n        const readback = {};\n\n        readback.log = `assigned ${speed} knots`;\n        readback.say = `assigned ${radio_spellOut(speed)} knots}`;\n\n        return [true, readback];\n    }\n\n    /**\n     * Taxi to the specified destination. Currently only supports taxiing to runways.\n     *\n     * If a runway is requested but doesn't exist, an error is returned.\n     *\n     * @for AircraftCommander\n     * @method runTaxi\n     * @param {AircraftModel} aircraftModel\n     * @param {array<string>} data\n     * @return {array} [success of operation, readback]\n     */\n    runTaxi(aircraftModel, data) {\n        const airportModel = AirportController.airport_get();\n        const requestedRunwayName = data[0];\n\n        if (!requestedRunwayName) {\n            const readback = 'we don\\'t know which runway to taxi to';\n\n            return [false, readback];\n        }\n\n        const runwayModel = airportModel.getRunway(requestedRunwayName.toUpperCase());\n\n        if (!runwayModel) {\n            const readback = {};\n            readback.log = `unable to find Runway ${requestedRunwayName.toUpperCase()} on our charts`;\n            readback.say = `unable to find Runway ${radio_runway(requestedRunwayName)} on our charts`;\n\n            return [false, readback];\n        }\n\n        return aircraftModel.taxiToRunway(runwayModel);\n    }\n\n    /**\n     * @for AircraftCommander\n     * @method runTakeoff\n     * @param aircraft {AircraftModel}\n     * @return {array}   [success of operation, readback]\n     */\n    runTakeoff(aircraft) {\n        // TODO: update some of this queue logic to live in the RunwayModel\n        const airport = AirportController.airport_get();\n        const runway = aircraft.fms.departureRunwayModel;\n        const spotInQueue = runway.getAircraftQueuePosition(aircraft.id);\n        const isInQueue = spotInQueue > -1;\n        const aircraftAhead = this._findAircraftById(runway.queue[spotInQueue - 1]);\n        const wind = airport.getWindAtAltitude();\n        const roundedWindAngleInDegrees = round(radiansToDegrees(wind.angle) / 10) * 10;\n        const roundedWindSpeed = round(wind.speed);\n        const readback = {};\n\n        if (aircraft.isAirborne()) {\n            return [false, 'unable to take off, we\\'re already airborne'];\n        }\n\n        if (aircraft.flightPhase === FLIGHT_PHASE.APRON) {\n            return [false, 'unable to take off, we\\'re still at the gate'];\n        }\n\n        if (aircraft.flightPhase === FLIGHT_PHASE.TAXI) {\n            readback.log = `unable to take off, we're still taxiing to Runway ${runway.name}`;\n            readback.say = `unable to take off, we're still taxiing to Runway ${radio_runway(runway.name)}`;\n\n            return [false, readback];\n        }\n\n        if (aircraft.flightPhase === FLIGHT_PHASE.TAKEOFF) {\n            return [false, 'already taking off'];\n        }\n\n        if (!isInQueue) {\n            return [false, 'unable to take off, we\\'re not at any runway'];\n        }\n\n        if (spotInQueue > 0) {\n            readback.log = `number ${spotInQueue} behind ${aircraftAhead.callsign}`;\n            readback.say = `number ${spotInQueue} behind ${aircraftAhead.getRadioCallsign()}`;\n\n            return [false, readback];\n        }\n\n        if (!aircraft.pilot.hasDepartureClearance) {\n            return [false, 'unable to take off, we never received an IFR clearance'];\n        }\n\n        // see #1154, we may have been rerouted since we started taxiing.\n        if (!aircraft.fms.isRunwayModelValidForSid(runway)) {\n            readback.log = `according to our charts, Runway ${runway.name} ` +\n                `is not valid for the ${aircraft.fms.getSidIcao()} departure`;\n            readback.say = `according to our charts, Runway ${runway.getRadioName()} ` +\n                `is not valid for the ${aircraft.fms.getSidName()} departure`;\n\n            return [false, readback];\n        }\n\n        runway.removeAircraftFromQueue(aircraft.id);\n        aircraft.takeoff(runway);\n\n        readback.log = `wind ${roundedWindAngleInDegrees} at ${roundedWindSpeed}, ` +\n            `Runway ${runway.name}, cleared for takeoff`;\n\n        // We have to make it say winned to make it sound like \"Wind\" and not \"Whined\"\n        readback.say = `winned ${radio_spellOut(roundedWindAngleInDegrees)} at ` +\n            `${radio_spellOut(roundedWindSpeed)}, Runway ${radio_runway(runway.name)}, ` +\n            'cleared for takeoff';\n\n        return [true, readback];\n    }\n\n    /**\n     * @for AircraftCommander\n     * @method runIls\n     * @param aircraft {AircraftModel}\n     * @param data {array}\n     */\n    runIls(aircraft, data) {\n        const approachType = 'ils';\n        const runwayName = data[1].toUpperCase();\n        const runwayModel = AirportController.airport_get().getRunway(runwayName);\n\n        return aircraft.pilot.conductInstrumentApproach(aircraft, approachType, runwayModel);\n    }\n\n    /**\n     * @for AircraftCommander\n     * @method runLand\n     * @param aircraft {AircraftModel}\n     * @param data {array}\n     */\n    runLand() {\n        return [false, 'the \"land\" command has been deprecated, please use \"i\" / \"ils\" instead'];\n    }\n\n    /**\n     * @for AircraftCommander\n     * @method runSquawk\n     * @param aircraft {AircraftModel}\n     * @param data {array<string>}\n     * @return {array}   [success of operation, readback]\n     */\n    runSquawk(aircraft, data) {\n        const squawk = data[0];\n        const result = this._onChangeTransponderCode(squawk, aircraft);\n        let readback = {\n            log: `squawk ${squawk}`,\n            say: `squawk ${radio_spellOut(squawk)}`\n        };\n\n        if (!result) {\n            readback = {\n                log: `unable to squawk ${squawk}`,\n                say: `unable to squawk ${radio_spellOut(squawk)}`\n            };\n        }\n\n        return [result, readback];\n    }\n\n    /**\n     * @for AircraftCommander\n     * @method runDelete\n     * @param aircraft {AircraftModel}\n     */\n    runDelete(aircraft) {\n        this._eventBus.trigger(EVENT.REMOVE_AIRCRAFT, aircraft);\n    }\n\n    /**\n     * This command has been deprecated and this method is used only to display a warning to users\n     *\n     * @deprecated\n     * @for AircraftCommander\n     * @method runFix\n     * @return {array}   [success of operation, readback]\n     */\n    runFix() {\n        const isWarning = true;\n\n        UiController.ui_log(\n            'The fix command has been deprecated. Please use rr, pd or fh instead of fix',\n            isWarning\n        );\n    }\n}\n","import _includes from 'lodash/includes';\nimport _filter from 'lodash/filter';\nimport AirportController from '../airport/AirportController';\nimport EventBus from '../lib/EventBus';\nimport GameController, { GAME_EVENTS } from '../game/GameController';\nimport TimeKeeper from '../engine/TimeKeeper';\nimport UiController from '../ui/UiController';\nimport { abs } from '../math/core';\nimport { angle_offset } from '../math/circle';\nimport { vlen, vsub, vturn } from '../math/vector';\nimport { degreesToRadians } from '../utilities/unitConverters';\nimport { SEPARATION } from '../constants/aircraftConstants';\nimport { EVENT } from '../constants/eventNames';\n\n/**\n * Details about aircraft in close proximity in relation to 'the rules'\n *\n * @class AircraftConflict\n */\nexport default class AircraftConflict {\n    constructor(first, second) {\n        this._eventBus = EventBus;\n\n        this.aircraft = [first, second];\n        this.distance = vlen(vsub(first.relativePosition, second.relativePosition));\n        this.distance_delta = 0;\n        this.altitude = abs(first.altitude - second.altitude);\n        this.collided = false;\n        this.conflicts = {};\n        this.violations = {};\n\n        if (this.isAlreadyKnown()) {\n            console.warn(`Duplicate conflict between ${this.aircraft[0].callsign} ` +\n                `and ${this.aircraft[1].callsign}! Scoring may be inaccurate!`);\n            return;\n        }\n\n        this.update();\n    }\n\n    /**\n     * Remove this conflict instance\n     *\n     * @for AircraftConflict\n     * @method destroy\n     */\n    destroy() {\n        this._eventBus.trigger(EVENT.REMOVE_AIRCRAFT_CONFLICT, this);\n    }\n\n    /**\n     * Is there anything which should be brought to the controllers attention\n     *\n     * @for AircraftConflict\n     * @method hasAlerts\n     * @returns {boolean} whether ANY conflicts OR violations exist\n     */\n    hasAlerts() {\n        return this.hasConflict() || this.hasViolation();\n    }\n\n    /**\n     *  Whether any conflicts are currently active\n     */\n    hasConflict() {\n        for (const i in this.conflicts) {\n            if (this.conflicts[i]) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     *  Whether any violations are currently active\n     */\n    hasViolation() {\n        for (const i in this.violations) {\n            if (this.violations[i]) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Recalculates and updates values for `this.distance`, `this.distance_delta`, and `this.altitude`\n     *\n     * @for AircraftConflict\n     * @method _recalculateLateralAndVerticalDistances\n     */\n    _recalculateLateralAndVerticalDistances() {\n        const distanceAtLastUpdate = this.distance;\n        this.distance = vlen(vsub(this.aircraft[0].relativePosition, this.aircraft[1].relativePosition));\n        this.distance_delta = this.distance - distanceAtLastUpdate;\n        this.altitude = abs(this.aircraft[0].altitude - this.aircraft[1].altitude);\n    }\n\n    /**\n     * Update conflict and violation checks, potentially removing this conflict.\n     */\n    update() {\n        if (this.shouldBeRemoved()) {\n            this.destroy();\n\n            return;\n        }\n\n        // Avoid triggering any more conflicts if the two aircraft have collided\n        if (this.collided) {\n            return;\n        }\n\n        this._recalculateLateralAndVerticalDistances();\n        this.checkCollision();\n\n        // Ignore aircraft below about 1000 feet\n        const airportElevation = AirportController.airport_get().elevation;\n        const gameTime = TimeKeeper.accumulatedDeltaTime;\n        if (((this.aircraft[0].altitude - airportElevation) < 990) ||\n            ((this.aircraft[1].altitude - airportElevation) < 990)) {\n            return;\n        }\n\n        // TODO: replace magic numbers with enum\n        // Ignore aircraft in the first minute of their flight\n        if (gameTime - this.aircraft[0].takeoffTime < 90 ||\n            gameTime - this.aircraft[1].takeoffTime < 90) {\n            return;\n        }\n\n        this.checkProximity();\n    }\n\n    /**\n     * Check for collision\n     */\n    checkCollision() {\n        if (this.aircraft[0].isOnGround() || this.aircraft[1].isOnGround()) {\n            return; // TEMPORARY FIX FOR CRASHES BTWN ARRIVALS AND TAXIED A/C\n        }\n\n        // TODO: enumerate the magic numbers.\n        // Collide within 160 feet\n        const airport = AirportController.airport_get();\n\n        if (\n            ((this.distance < 0.05) && (this.altitude < 160)) &&\n            (this.aircraft[0].isInsideAirspace(airport) && this.aircraft[1].isInsideAirspace(airport))\n        ) {\n            this.collided = true;\n            const isWarning = true;\n\n            UiController.ui_log(\n                `${this.aircraft[0].callsign} collided with ${this.aircraft[1].callsign}`,\n                isWarning\n            );\n\n            GameController.events_recordNew(GAME_EVENTS.COLLISION);\n            this.aircraft[0].hit = true;\n            this.aircraft[1].hit = true;\n        }\n    }\n\n    // TODO: this method is ripe for refactor. lots of logic that can be pulled out to\n    // helper functions or other class methods.\n    /**\n     * Check for physical proximity and trigger crashes if necessary\n     */\n    checkProximity() {\n        // No conflict or warning if vertical separation is present\n        if (this.altitude >= SEPARATION.VERTICAL_FT) {\n            this.conflicts.proximityConflict = false;\n            this.conflicts.proximityViolation = false;\n\n            return;\n        }\n\n        let conflict = false;\n        let violation = false;\n        let disableNotices = false;\n        const a1 = this.aircraft[0];\n        const a2 = this.aircraft[1];\n        let applicableLatSepMin = SEPARATION.STANDARD_LATERAL_KM;\n\n\n        // Established on precision guided approaches && both are following different instrument approaches\n        if ((a1.isEstablishedOnCourse() && a2.isEstablishedOnCourse()) &&\n            (a1.fms.arrivalRunwayModel.name !== a2.fms.arrivalRunwayModel.name)) {\n            const runwayRelationship = AirportController.airport_get().getRunwayRelationshipForRunwayNames(\n                a1.fms.arrivalRunwayModel.name,\n                a2.fms.arrivalRunwayModel.name\n            );\n\n            if (runwayRelationship.parallel) {\n                // hide notices for aircraft on adjacent final approach courses\n                disableNotices = true;\n                applicableLatSepMin = runwayRelationship.separationMinimum;\n            }\n        }\n\n        // TODO: this should be another class method: hasSeparationViolation(applicableLatSepMin)\n        // Considering all of the above cases,...\n        violation = this.distance < applicableLatSepMin;\n        // TODO: enumerate the magic number.\n        // TODO: this should be another class method\n        conflict = (this.distance < applicableLatSepMin + 1.852 && !disableNotices) || violation; // +1.0nm\n\n        // \"Passing & Diverging\" Rules (the \"exception\" to all of the above rules)\n        // test the below only if separation is currently considered insufficient\n        if (conflict) {\n            const hdg_difference = abs(angle_offset(a1.heading, a2.heading));\n            let minHdgDifference = degreesToRadians(15); // FAA JO 7110.65, Para. 5-8-3-a\n\n            if (a1.fms.currentLeg.isSidLeg && a2.fms.currentLeg.isSidLeg) {\n                minHdgDifference = degreesToRadians(10); // FAA JO 7110.65, Para. 5-8-3-c\n            }\n\n            if (hdg_difference >= minHdgDifference) {\n                if (hdg_difference > degreesToRadians(135)) {\n                    // 'opposite' courses\n                    if (this.distance_delta > 0) {\n                        // OKAY IF the distance is increasing, since the targets have passed each other\n                        conflict = false;\n                        violation = false;\n                    }\n                } else {\n                    // TODO: this should definitely be a helper function that lives in one of the math/ files\n                    // 'same' or 'crossing' courses\n                    // Ray intersection from http://stackoverflow.com/a/2932601\n                    const ad = vturn(a1.groundTrack);\n                    const bd = vturn(a2.groundTrack);\n                    const dx = a2.relativePosition[0] - a1.relativePosition[0];\n                    const dy = a2.relativePosition[1] - a1.relativePosition[1];\n                    const det = bd[0] * ad[1] - bd[1] * ad[0];\n                    const u = (dy * bd[0] - dx * bd[1]) / det; // a1's distance from point of convergence\n                    const v = (dy * ad[0] - dx * ad[1]) / det; // a2's distance from point of convergence\n\n                    // TODO: this should be a helper function that live in one of the math/ files\n                    if ((u < 0) || (v < 0)) { // check if either a/c has passed the point of convergence\n                        conflict = false; // targets are diverging\n                        violation = false; // targets are diverging\n                    }\n                    // Reference: FAA JO 7110.65, section 5-5-7-a-1:\n                    // (a) Aircraft are on opposite/reciprocal courses and you have observed\n                    // that they have passed each other; or aircraft are on same or crossing\n                    // courses/assigned radar vectors and one aircraft has crossed the\n                    // projected course of the other, and the angular difference between\n                    // their courses/assigned radar vectors is at least 15 degrees.\n                }\n            }\n        }\n\n        // TODO: if conflict and violation both return booleans, remove the if/else blocks below and\n        // set with those values\n\n        // Update Conflicts\n        if (conflict) {\n            this.conflicts.proximityConflict = true;\n        } else {\n            this.conflicts.proximityConflict = false;\n        }\n\n        if (violation) {\n            this.violations.proximityViolation = true;\n            // TODO: Add score penalty for 'SEPARATION_LOSS', but only ONCE\n        } else {\n            this.violations.proximityViolation = false;\n        }\n    }\n\n    /**\n     * Checks if multiple `AircraftConflict` instances have been recorded for the same conflict\n     * between the aircraft involved in `this`.\n     *\n     * @for AircraftConflict\n     * @method isDuplicate\n     * @return {Boolean}\n     */\n    isDuplicate() {\n        return this._findInstancesOfThisConflictInAircraftController().length > 1;\n    }\n\n    /**\n     * Checks if an `AircraftConflict` instance already exists in `AircraftController.conflicts`\n     * for the aircraft involved in `this`.\n     *\n     * @for AircraftConflict\n     * @method isAlreadyKnown\n     * @return {Boolean}\n     */\n    isAlreadyKnown() {\n        return this._findInstancesOfThisConflictInAircraftController().length > 0;\n    }\n\n    /**\n     * Checks various conditions to determine whether the conflict should be removed\n     *\n     * @for AircraftConflict\n     * @method shouldBeRemoved\n     * @return {Boolean}\n     */\n    shouldBeRemoved() {\n        return this._isOutsideBoundingBox() || this.isDuplicate();\n    }\n\n    /**\n     * Checks whether the distance between the aircraft is greater than the size of the bounding\n     * box within which we will examine the conflict closer\n     *\n     * @for AircraftConflict\n     * @method _isOutsideBoundingBox\n     * @private\n     * @return {Boolean}\n     */\n    _isOutsideBoundingBox() {\n        this._recalculateLateralAndVerticalDistances();\n\n        return this.distance > SEPARATION.MAX_KM;\n    }\n\n    /**\n     * Finds all instances (whether none, one, or multiple) of `AircraftConflict`s involving\n     * the same aircraft included in `this.aircraft`.\n     *\n     * @for AircraftConflict\n     * @method _findInstancesOfThisConflictInAircraftController\n     * @return {Boolean}\n     */\n    _findInstancesOfThisConflictInAircraftController() {\n        return _filter(window.aircraftController.conflicts, (conflict) => {\n            return _includes(conflict.aircraft, this.aircraft[0]) && _includes(conflict.aircraft, this.aircraft[1]);\n        });\n    }\n}\n","/* eslint-disable no-continue */\nimport _find from 'lodash/find';\nimport _get from 'lodash/get';\nimport _isNil from 'lodash/isNil';\nimport _without from 'lodash/without';\nimport AirlineController from '../airline/AirlineController';\nimport AirportController from '../airport/AirportController';\nimport ScopeModel from '../scope/ScopeModel';\nimport UiController from '../ui/UiController';\nimport EventBus from '../lib/EventBus';\nimport AircraftTypeDefinitionCollection from './AircraftTypeDefinitionCollection';\nimport AircraftModel from './AircraftModel';\nimport AircraftCommander from './AircraftCommander';\nimport AircraftConflict from './AircraftConflict';\nimport StripViewController from './StripView/StripViewController';\nimport GameController, { GAME_EVENTS } from '../game/GameController';\nimport CommandParser from '../commands/parsers/CommandParser';\nimport { airlineNameAndFleetHelper } from '../airline/airlineHelpers';\nimport { convertStaticPositionToDynamic } from '../base/staticPositionToDynamicPositionHelper';\nimport { abs } from '../math/core';\nimport { distance2d } from '../math/distance';\nimport { speech_say } from '../speech';\nimport { generateTransponderCode, isDiscreteTransponderCode, isValidTransponderCode } from '../utilities/transponderUtilities';\nimport { km } from '../utilities/unitConverters';\nimport { isEmptyOrNotArray } from '../utilities/validatorUtilities';\nimport { FLIGHT_CATEGORY, FLIGHT_PHASE } from '../constants/aircraftConstants';\nimport { EVENT, AIRCRAFT_EVENT } from '../constants/eventNames';\nimport { GAME_OPTION_NAMES } from '../constants/gameOptionConstants';\nimport { INVALID_INDEX } from '../constants/globalConstants';\n\n// Temporary const declaration here to attach to the window AND use as internal property\nconst aircraft = {};\n\n/**\n *\n *\n * @class AircraftController\n */\nexport default class AircraftController {\n    /**\n     * @constructor\n     * @for AircraftController\n     * @param aircraftTypeDefinitionList {array<object>}\n     * @param airlineController {AirlineController}\n     * @param scopeModel {ScopeModel}\n     * @param aircraftCommander {AircraftCommander}\n     */\n    constructor(aircraftTypeDefinitionList, airlineController, scopeModel) {\n        if (_isNil(aircraftTypeDefinitionList) || _isNil(airlineController) || _isNil(scopeModel)) {\n            throw new TypeError('Invalid parameter(s) passed to AircraftController constructor. ' +\n                'Expected aircraftTypeDefinitionList, airlineController and scopeModel to be defined, ' +\n                `but received ${typeof aircraftTypeDefinitionList}, ${typeof airlineController} and ${typeof scopeModel}`);\n        }\n\n        if (isEmptyOrNotArray(aircraftTypeDefinitionList)) {\n            throw new TypeError('Invalid aircraftTypeDefinitionList passed to AircraftController constructor. ' +\n                `Expected a non-empty array, but received ${typeof aircraftTypeDefinitionList}`);\n        }\n\n        if (!(airlineController instanceof AirlineController)) {\n            throw new TypeError('Invalid airlineController passed to AircraftController constructor. ' +\n                `Expected instance of AirlineController, but received ${typeof airlineController}`);\n        }\n\n        if (!(scopeModel instanceof ScopeModel)) {\n            throw new TypeError('Invalid scopeModel passed to AircraftController constructor. ' +\n                `Expected instance of ScopeModel, but received ${typeof scopeModel}`);\n        }\n\n        /**\n         * Reference to an `AirlineController` instance\n         *\n         * @property _airlineController\n         * @type {AirlineController}\n         * @default airlineController\n         * @private\n         */\n        this._airlineController = airlineController;\n\n        /**\n         * Reference to an `AircraftCommander` instance\n         *\n         * @property _aircraftCommander\n         * @type {AircraftCommander}\n         * @default aircraftCommander\n         * @private\n         */\n        this._aircraftCommander = new AircraftCommander(\n            this.onRequestToChangeTransponderCode.bind(this),\n            this.findAircraftById.bind(this)\n        );\n\n        /**\n         * Local reference to static `EventBus` class\n         *\n         * @property _eventBus\n         * @type {EventBus}\n         * @default EventBus\n         * @private\n         */\n        this._eventBus = EventBus;\n\n        /**\n         * Reference to an `AircraftTypeDefinitionCollection` instance\n         *\n         * Provides definitions for all available aircraft types\n         *\n         * @property AircraftTypeDefinitionCollection\n         * @type {AircraftTypeDefinitionCollection}\n         */\n        this.aircraftTypeDefinitionCollection = new AircraftTypeDefinitionCollection(aircraftTypeDefinitionList);\n\n        /**\n         * Local reference to the scope model\n         *\n         * @for AircraftController\n         * @property _scopeModel\n         * @type {ScopeModel}\n         * @private\n         */\n        this._scopeModel = scopeModel;\n\n        /**\n         * List of `transponderCode` values in use\n         *\n         * Each `transponderCode` should be unique, thus we maintain this list\n         * so we can know which codes are active.\n         *\n         * @property _transponderCodesInUse\n         * @type {array<string>}\n         * @private\n         */\n        this._transponderCodesInUse = [];\n\n        prop.aircraft = aircraft;\n        this.aircraft = aircraft;\n\n        // TODO: this should its own collection class\n        this.aircraft.list = [];\n        this.aircraft.auto = { enabled: false };\n        this.conflicts = [];\n\n        /**\n         * Instance of the `StripViewController`\n         *\n         * @property _stripViewController\n         * @type {StripViewController}\n         * @private\n         */\n        this._stripViewController = new StripViewController();\n\n        return this.init()\n            ._setupHandlers()\n            .enable();\n    }\n\n    /**\n     * Get the instance of AircraftCommander that was created by this Controller\n     *\n     * @for AircraftController\n     * @property aircraftCommander\n     * @type {AircraftCommander}\n     */\n    get aircraftCommander() {\n        return this._aircraftCommander;\n    }\n\n    /**\n     * @for AircraftController\n     * @method init\n     * @chainable\n     */\n    init() {\n        return this;\n    }\n\n    /**\n     * Set up event handlers\n     *\n     * @for AircraftController\n     * @method _setupHandlers\n     * @private\n     * @chainable\n     */\n    _setupHandlers() {\n        this._onRemoveAircraftHandler = this.aircraft_remove.bind(this);\n\n        return this;\n    }\n\n    /**\n     * @for AircraftController\n     * @method enable\n     * @chainable\n     */\n    enable() {\n        this._eventBus.on(EVENT.ADD_AIRCRAFT, this.addItem);\n        this._eventBus.on(EVENT.STRIP_DOUBLE_CLICK, this._onStripDoubleClickHandler);\n        this._eventBus.on(EVENT.SELECT_AIRCRAFT, this._onSelectAircraft);\n        this._eventBus.on(EVENT.DESELECT_AIRCRAFT, this._onDeselectAircraft);\n        this._eventBus.on(EVENT.SCROLL_TO_AIRCRAFT, this._onScrollToAircraft);\n        this._eventBus.on(EVENT.REMOVE_AIRCRAFT, this._onRemoveAircraftHandler);\n        this._eventBus.on(EVENT.REMOVE_AIRCRAFT_CONFLICT, this.removeConflict);\n\n        return this;\n    }\n\n    /**\n     * @for AircraftController\n     * @method disable\n     * @chainable\n     */\n    disable() {\n        this._eventBus.off(EVENT.ADD_AIRCRAFT, this.addItem);\n        this._eventBus.off(EVENT.STRIP_DOUBLE_CLICK, this._onStripDoubleClickHandler);\n        this._eventBus.off(EVENT.SELECT_AIRCRAFT, this._onSelectAircraft);\n        this._eventBus.off(EVENT.DESELECT_AIRCRAFT, this._onDeselectAircraft);\n        this._eventBus.off(EVENT.SCROLL_TO_AIRCRAFT, this._onScrollToAircraft);\n        this._eventBus.off(EVENT.REMOVE_AIRCRAFT, this._onRemoveAircraftHandler);\n        this._eventBus.off(EVENT.REMOVE_AIRCRAFT_CONFLICT, this.removeConflict);\n\n        return this;\n    }\n\n    /**\n     * Adds an `AircraftModel` to the collection\n     *\n     * @for AircraftController\n     * @method addItem\n     * @param item {AircraftModel}\n     */\n    addItem = (item) => this.aircraft.list.push(item);\n\n    /**\n     * Callback method fired by an interval defined in the `SpawnScheduler`.\n     *\n     * This is the entry method for creating new departing and arriving aircraft.\n     * This method should only be called as a callback from a `SpawnScheduler` timer.\n     *\n     * @for AircraftController\n     * @method createAircraftWithSpawnPatternModel\n     * @param spawnPatternModel {SpawnPatternModel}\n     * @private\n     */\n    createAircraftWithSpawnPatternModel = (spawnPatternModel) => {\n        const initializationProps = this._buildAircraftProps(spawnPatternModel);\n\n        this._createAircraftWithInitializationProps(initializationProps);\n    }\n\n    /**\n     * Build aircraft props for `spawnPatternModel` and add\n     * preSpawn data to `baseAircraftProps`.\n     *\n     * Used when creating aircraft already along an arrival route on load\n     * or on airport change.\n     *\n     * This method should be called directly and not via a timer callback\n     *\n     * This hooks into the same method used to build spawning aircraft\n     * and simply adds another layer on top of that to build a preSpawn aircraft.\n     *\n     * @for AircraftController\n     * @method createPreSpawnAircraftWithSpawnPatternModel\n     * @param  spawnPatternModel {SpawnPatternModel}\n     * @private\n     */\n    createPreSpawnAircraftWithSpawnPatternModel = (spawnPatternModel) => {\n        const isPreSpawn = true;\n\n        for (let i = 0; i < spawnPatternModel.preSpawnAircraftList.length; i++) {\n            const preSpawnHeadingAndPosition = spawnPatternModel.preSpawnAircraftList[i];\n            const baseAircraftProps = this._buildAircraftProps(spawnPatternModel, isPreSpawn);\n            const initializationProps = Object.assign({}, baseAircraftProps, preSpawnHeadingAndPosition);\n\n            this._createAircraftWithInitializationProps(initializationProps);\n        }\n    };\n\n    /**\n     * @for AircraftController\n     * @method aircraft_auto_toggle\n     */\n    aircraft_auto_toggle() {\n        this.aircraft.auto.enabled = !this.aircraft.auto.enabled;\n    }\n\n    /**\n     * @for AircraftController\n     * @method aircraft_get_nearest\n     * @param position {array<number>} These are x, y canvas units (km)\n     */\n    aircraft_get_nearest(position) {\n        let nearest = null;\n        let distance = Infinity;\n\n        for (let i = 0; i < this.aircraft.list.length; i++) {\n            const aircraft = this.aircraft.list[i];\n            const d = distance2d(aircraft.relativePosition, position);\n\n            if (d < distance && aircraft.isVisible() && !aircraft.hit) {\n                distance = d;\n                nearest = i;\n            }\n        }\n\n        return [this.aircraft.list[nearest], distance];\n    }\n\n    /**\n     * Returns whether the specified aircraft model is in an area where they are controllable\n     *\n     * @for AircraftController\n     * @method isAircraftVisible\n     * @param aircraft {AircraftModel}\n     * @param factor {number}\n     * @returns {boolean}\n     */\n    isAircraftVisible(aircraft, factor = 1) {\n        const visibleDistance = AirportController.airport_get().ctr_radius * factor;\n\n        return aircraft.distance < visibleDistance;\n    }\n\n    /**\n     * @for AircraftController\n     * @method aircraft_remove_all\n     */\n    aircraft_remove_all() {\n        // iterating backwards because each iteration removes a list item\n        // iterating forward would cause skipping as the array shifts\n        for (let i = this.aircraft.list.length - 1; i >= 0; i--) {\n            this.aircraft_remove(this.aircraft.list[i]);\n        }\n    }\n\n    /**\n     * @for AircraftController\n     * @method aircraft_remove\n     * @param aircraftModel {AircraftModel}\n     */\n    aircraft_remove(aircraftModel) {\n        AirportController.removeAircraftFromAllRunwayQueues(aircraftModel);\n        this.removeFlightNumberFromList(aircraftModel);\n        this.removeAircraftModelFromList(aircraftModel);\n        this._removeTransponderCodeFromUse(aircraftModel);\n        this.removeAllAircraftConflictsForAircraft(aircraftModel);\n        this.removeStripView(aircraftModel);\n        this._scopeModel.radarTargetCollection.removeRadarTargetModelForAircraftModel(aircraftModel);\n    }\n\n    /**\n     * This method is part of the game loop.\n     *\n     * Every effort should be made to optimize this method and\n     * any other methods called from within\n     *\n     * @for AircraftController\n     * @method update\n     */\n    update() {\n        if (this.aircraft.list.length === 0) {\n            return;\n        }\n\n        // TODO: this is getting better, but still needs more simplification\n        for (let i = 0; i < this.aircraft.list.length; i++) {\n            const aircraftModel = this.aircraft.list[i];\n\n            aircraftModel.update();\n            aircraftModel.updateWarning();\n\n            // TODO: conflict checking eats up a lot of resources when there are more than\n            //       30 aircraft, exit early if we're still taxiing\n            if (aircraftModel.isTaxiing()) {\n                continue;\n            }\n\n            this._updateAircraftConflicts(aircraftModel, i);\n            this._updateAircraftVisibility(aircraftModel);\n\n            if (!aircraftModel.isControllable) {\n                this.removeStripView(aircraftModel);\n            }\n        }\n    }\n\n    /**\n     * Finds an aircraft by its callsign\n     *\n     * @method findAircraftByCallsign\n     * @param  {string} callsign\n     * @return {AircraftModel}\n     */\n    findAircraftByCallsign(callsign) {\n        if (!callsign) {\n            return;\n        }\n\n        const normalizedCallsign = callsign.toUpperCase();\n\n        return _find(this.aircraft.list, (aircraft) => aircraft.callsign === normalizedCallsign);\n    }\n\n    /**\n     * Finds an aircraft by its internal id\n     *\n     * @method findAircraftById\n     * @param  {string} id\n     * @return {AircraftModel}\n     */\n    findAircraftById(id) {\n        if (!id) {\n            return;\n        }\n\n        return _find(this.aircraft.list, (aircraft) => aircraft.id === id);\n    }\n\n    /**\n     * Update all the `StripViewModel` objects with up-to-date aircraft data\n     *\n     * This is a **HOT** method and will run within the game loop\n     *\n     * @for AircraftController\n     * @method updateAircraftStrips\n     */\n    updateAircraftStrips() {\n        this._stripViewController.update(this.aircraft.list);\n    }\n\n    /**\n     * @method debug\n     * @param  {string} [callsign='']\n     * @return {AircraftModel}\n     */\n    debug(callsign = '') {\n        return this.findAircraftByCallsign(callsign);\n    }\n\n    /**\n     * Add a new `AircraftConflict` instance to the list of existing conflicts\n     *\n     * @for AircraftController\n     * @method addConflict\n     * @param aircraft {AircraftModel}       aircraft 1\n     * @param otherAircraft {AircraftModel}  aircraft 2\n     */\n    addConflict(aircraft, otherAircraft) {\n        const conflict = new AircraftConflict(aircraft, otherAircraft);\n\n        if (conflict.shouldBeRemoved()) {\n            conflict.destroy();\n            return;\n        }\n\n        this.conflicts.push(conflict);\n        aircraft.addConflict(conflict, otherAircraft);\n        otherAircraft.addConflict(conflict, aircraft);\n    }\n\n    /**\n     * Pass the call onto the `airlineController` to remove flightNumber\n     * from the list of active flightNumbers\n     *\n     * @for AircraftController\n     * @method removeFlightNumberFromList\n     * @param airlineId {string}\n     * @param callsign {string}\n     */\n    removeFlightNumberFromList({ airlineId, callsign }) {\n        this._airlineController.removeFlightNumberFromList(airlineId, callsign);\n    }\n\n    /**\n     * Remove the specified aircraft from `AircraftController.aircraft.list`\n     *\n     * @for AircraftController\n     * @method removeAircraftModelFromList\n     * @param  {AircraftModel} aircraft the aircraft to remove\n     */\n    removeAircraftModelFromList(aircraft) {\n        this.aircraft.list = _without(this.aircraft.list, aircraft);\n    }\n\n    /**\n     * Remove an `AircraftConflict` instance from the list of existing conflicts\n     *\n     * May be called via an `EventBus.trigger()`\n     *\n     * @for AircraftController\n     * @method removeConflict\n     * @param  conflict {AircraftConflict} the conflict instance to remove\n     */\n    removeConflict = (conflict) => {\n        conflict.aircraft[0].removeConflict(conflict.aircraft[1]);\n        conflict.aircraft[1].removeConflict(conflict.aircraft[0]);\n\n        this.conflicts = _without(this.conflicts, conflict);\n    };\n\n    /**\n     * Remove any conflicts that involve the specified aircraft\n     *\n     * @for AircraftController\n     * @method removeAllAircraftConflictsForAircraft\n     * @param aircraft {AircraftModel}  the aircraft to remove\n     */\n    removeAllAircraftConflictsForAircraft(aircraft) {\n        for (const otherAircraftCallsign in aircraft.conflicts) {\n            aircraft.conflicts[otherAircraftCallsign].destroy();\n        }\n    }\n\n    /**\n     * Remove a `StripViewModel` associated with the `aircraftModel`\n     *\n     * This will remove it from the DOM and properly destroy the model.\n     *\n     * @for AircraftController\n     * @method removeStripView\n     * @param aircraftModel {AircraftModel}\n     */\n    removeStripView(aircraftModel) {\n        this._stripViewController.removeStripView(aircraftModel);\n    }\n\n    /**\n     * Called from within the `AircraftCommander` this method is used:\n     * - to verify that the `nextTransponderCode` is valid\n     * - remove the previous `transponderCode` from `#_transponderCodesInUse`\n     * - add `nextTransponderCode` to `#_transponderCodesInUse`\n     *\n     * @for AircraftController\n     * @method onRequestToChangeTransponderCode\n     * @param transponderCode {string}\n     * @param aircraftModel {aircraftModel}\n     * @return {boolean}\n     */\n    onRequestToChangeTransponderCode = (transponderCode, aircraftModel) => {\n        if (!isValidTransponderCode(transponderCode) || this._isTransponderCodeInUse(transponderCode)) {\n            return false;\n        }\n\n        this._removeTransponderCodeFromUse(aircraftModel.transponderCode);\n        this._addTransponderCodeToInUse(transponderCode);\n\n        aircraftModel.transponderCode = transponderCode;\n\n        return true;\n    };\n\n    /**\n     * Accept a pre-built object that can be used to create an `AircraftModel`\n     * and then add it to the collection.\n     *\n     * This could be a spawning aircraft or one that already exists along a route.\n     *\n     * This method is the *_single place_* to create a new `AircraftModel`.\n     * Any method that needs to create a new aircraft should be routed through here.\n     *\n     * @for AircraftController\n     * @method _createAircraftWithInitializationProps\n     * @param initializationProps {object}\n     * @private\n     */\n    _createAircraftWithInitializationProps(initializationProps) {\n        const aircraftModel = new AircraftModel(initializationProps);\n        const isDeparture = initializationProps.category === 'departure';\n        const isArrival = initializationProps.category === 'arrival';\n        const isAutoTower = GameController.getGameOption(GAME_OPTION_NAMES.TOWER_CONTROLLER) === 'SYSTEM';\n        const runwayCommands = initializationProps.commands;\n\n        // triggering event bus rather than calling locally because multiple classes\n        // are listening for the event and aircraft model\n        this._eventBus.trigger(EVENT.ADD_AIRCRAFT, aircraftModel);\n\n        if (isArrival) {\n            console.log('Arrival');\n            console.log(aircraftModel);\n            console.log(runwayCommands);\n            this._runCommandOnPreSpawnAircraft(aircraftModel, runwayCommands, aircraftModel.fms.arrivalRunwayModel.name);\n        }\n\n        if (isDeparture && isAutoTower) {\n            // console.log('Departure');\n            // console.log(aircraftModel);\n            // create the StripView immediately for departures; arrival strips are made when controllable\n            this._stripViewController.createStripView(aircraftModel);\n            aircraftModel.pilot.clearedAsFiled();\n            aircraftModel.moveToRunway(aircraftModel.fms.departureRunwayModel);\n            aircraftModel.fms.departureRunwayModel.addAircraftToQueue(aircraftModel.id);\n            aircraftModel.setFlightPhase(FLIGHT_PHASE.WAITING);\n\n            aircraftModel.shouldTakeOffWhenRunwayIsClear = true;\n\n            this._runCommandOnPreSpawnAircraft(aircraftModel, runwayCommands, aircraftModel.fms.departureRunwayModel.name);\n        }\n    }\n\n    /**\n     * Used to build up the appropriate data needed to instantiate an `AircraftModel`\n     *\n     * @for AircraftController\n     * @method _buildAircraftProps\n     * @param spawnPatternModel {SpawnPatternModel}\n     * @param isPreSpawn {boolean} [default = false]\n     * @return {object}\n     * @private\n     */\n    _buildAircraftProps(spawnPatternModel, isPreSpawn = false) {\n        const airlineId = spawnPatternModel.getRandomAirlineForSpawn();\n        // TODO: update `airlineNameAndFleetHelper` to accept a string\n        const { name, fleet } = airlineNameAndFleetHelper([airlineId]);\n        let airlineModel = this._airlineController.findAirlineById(name);\n\n        if (typeof airlineModel === 'undefined') {\n            console.warn(`Expected airline \"${name}\" to be defined, but it is not! Using AAL instead.`);\n\n            airlineModel = this._airlineController.findAirlineById('aal');\n        }\n\n        // TODO: impove the `airlineModel` logic here\n        // this seems inefficient to find the model here and then pass it back to the controller but\n        // since we already have it, it makes little sense to look for it again in the controller\n        const flightNumber = this._airlineController.generateFlightNumberWithAirlineModel(airlineModel);\n        const aircraftTypeDefinition = this._getRandomAircraftTypeDefinitionForAirlineId(airlineId, airlineModel);\n        // TODO: this may need to be reworked.\n        // if we are building a preSpawn aircraft, cap the altitude at 18000 so aircraft that spawn closer to\n        // airspace can safely enter controlled airspace properly\n        let { altitude } = spawnPatternModel;\n\n        if (isPreSpawn && spawnPatternModel.category === FLIGHT_CATEGORY.ARRIVAL) {\n            altitude = Math.min(18000, altitude);\n        }\n\n        const dynamicPositionModel = convertStaticPositionToDynamic(spawnPatternModel.positionModel);\n        const transponderCode = this._generateUniqueTransponderCode(AirportController.airport_get().icao);\n\n        return {\n            fleet,\n            altitude,\n            transponderCode,\n            origin: spawnPatternModel.origin,\n            destination: spawnPatternModel.destination,\n            callsign: flightNumber,\n            category: spawnPatternModel.category,\n            airline: airlineModel.icao,\n            airlineCallsign: airlineModel.radioName,\n            speed: spawnPatternModel.speed,\n            heading: spawnPatternModel.heading,\n            positionModel: dynamicPositionModel,\n            icao: aircraftTypeDefinition.icao,\n            model: aircraftTypeDefinition,\n            routeString: spawnPatternModel.routeString,\n            commands: spawnPatternModel.commands,\n            // TODO: this may not be needed anymore\n            waypoints: _get(spawnPatternModel, 'waypoints', [])\n        };\n    }\n\n    /**\n     * Execute a command on a new or preSpawned aircraft.\n     *\n     * @for AircraftController\n     * @method _runCommandOnPreSpawnAircraft\n     * @param aircraft {AircraftModel}\n     * @param command {Object}\n     * @param runwayName {String}\n     * @private\n     */\n    _runCommandOnPreSpawnAircraft(aircraft, commands, runwayName) {\n        if (!commands || !(runwayName in commands)) {\n            return;\n        }\n\n        const commandString = commands[runwayName];\n        const command = new CommandParser(`${aircraft.getCallsign()} ${commandString}`).parse();\n\n        this._aircraftCommander.runCommands(aircraft, command.args, true);\n    }\n\n    /**\n     * Given an `airlineId`, find a random aircraft type from the airline.\n     *\n     * This is useful for when we need to create an aircraft to spawn and\n     * only know the airline that it belongs to.\n     *\n     * @for AircraftController\n     * @method _getRandomAircraftTypeDefinitionForAirlineId\n     * @param airlineId {string}\n     * @param airlineModel {AirlineModel}\n     * @return aircraftDefinition {AircraftTypeDefinitionModel}\n     * @private\n     */\n    _getRandomAircraftTypeDefinitionForAirlineId(airlineId, airlineModel) {\n        return this.aircraftTypeDefinitionCollection.getAircraftDefinitionForAirlineId(airlineId, airlineModel);\n    }\n\n    /**\n     * Generate a unique `transponderCode`\n     *\n     * This method should only be run while building props for a\n     * soon-to-be-instantiated `AircraftModel` at the specified\n     * `icao` airport code\n     *\n     * @for AircraftController\n     * @method _generateUniqueTransponderCode\n     * @param icao {sting}\n     * @return {string}\n     * @private\n     */\n    _generateUniqueTransponderCode(icao) {\n        const transponderCode = generateTransponderCode();\n\n        if (!isDiscreteTransponderCode(icao, transponderCode) || this._isTransponderCodeInUse(transponderCode)) {\n            // the value generated isn't valid or is already in use, recurse back through this method and try again\n            return this._generateUniqueTransponderCode(icao);\n        }\n\n        this._addTransponderCodeToInUse(transponderCode);\n\n        return transponderCode;\n    }\n\n    /**\n     * Add a given `transponderCode` to the `#_transponderCodesInUse` list\n     *\n     * @for AircraftController\n     * @method _addTransponderCodeToInUse\n     * @param transponderCode {string}\n     */\n    _addTransponderCodeToInUse(transponderCode) {\n        this._transponderCodesInUse.push(transponderCode);\n    }\n\n    /**\n     * Remove the `transponderCode` from the list of `#_transponderCodesInUse`\n     *\n     * @for AircraftController\n     * @method _removeTransponderCodeFromUse\n     * @param transponderCode {string}\n     */\n    _removeTransponderCodeFromUse({ transponderCode }) {\n        this._transponderCodesInUse = _without(this._transponderCodesInUse, transponderCode);\n    }\n\n    /**\n     * Boolean helper used to determine if a given `transponderCode` is already\n     * present within the `#_transponderCodesInUse` list.\n     *\n     * @for AircraftController\n     * @method _isTransponderCodeInUse\n     * @param transponderCode {string}\n     * @return {booelean}\n     */\n    _isTransponderCodeInUse(transponderCode) {\n        return this._transponderCodesInUse.indexOf(transponderCode) !== INVALID_INDEX;\n    }\n\n    /**\n     * Show a `StripViewModel` as selected\n     *\n     * @for AircraftController\n     * @method _onSelectAircraft\n     * @param  aircraftModel {AircraftModel}\n     * @private\n     */\n    _onSelectAircraft = (aircraftModel) => {\n        if (!aircraftModel.isControllable) {\n            return;\n        }\n\n        this._stripViewController.selectStripView(aircraftModel);\n    };\n\n    /**\n     * Remove the css classname used to show a `StripViewModel` as selected.\n     *\n     * This method is usually called when it is not known what, or if,\n     * a `StripViewModel` is active.\n     *\n     * This method is called as the result of an event\n     *\n     * @for AircraftController\n     * @method _onDeselectAircraft\n     * @private\n     */\n    _onDeselectAircraft = () => {\n        this._stripViewController.findAndDeselectActiveStripView();\n    };\n\n    /**\n     * Scroll a `StripViewModel` into view\n     *\n     * @for AircraftController\n     * @method _onScrollToAircraft\n     * @param  aircraftModel {AircraftModel}\n     * @private\n     */\n    _onScrollToAircraft = (aircraftModel) => {\n        if (!aircraftModel.isControllable) {\n            return;\n        }\n\n        this._stripViewController.scrollToStripView(aircraftModel);\n    };\n\n    /**\n     * Triggered `EventBus` callback\n     *\n     * This method allows us to find an `AircraftModel` from a callsign,\n     * then trigger another event for the `CanvasController`.\n     *\n     * @for AircraftController\n     * @method _onStripDoubleClickHandler\n     * @param callsign {string}\n     * @private\n     */\n    _onStripDoubleClickHandler = (callsign) => {\n        const { relativePosition } = this.findAircraftByCallsign(callsign);\n\n        this._eventBus.trigger(EVENT.REQUEST_TO_CENTER_POINT_IN_VIEW, relativePosition);\n    };\n\n    /**\n     * Encapsulates math and logic used to detrmine if a new `AircraftConflict` should\n     * be created for two specific aircraft\n     *\n     * Fast 2D bounding box check, there are no conflicts over 8nm apart (14.816km)\n     * no violation can occur in this case\n     * Variation of:\n     * http://gamedev.stackexchange.com/questions/586/what-is-the-fastest-way-to-work-out-2d-bounding-box-intersection\n     *\n     * @for AircraftController\n     * @method _shouldAddNewConflict\n     * @param {AircraftModel} aircraftModel\n     * @param {AircraftModel} comparisonAircraftModel\n     * @return {boolean}\n     * @private\n     */\n    _shouldAddNewConflict(aircraftModel, comparisonAircraftModel) {\n        const boundingBoxLength = km(8);\n        const dx = abs(aircraftModel.relativePosition[0] - comparisonAircraftModel.relativePosition[0]);\n        const dy = abs(aircraftModel.relativePosition[1] - comparisonAircraftModel.relativePosition[1]);\n\n        return dx < boundingBoxLength && dy < boundingBoxLength;\n    }\n\n    /**\n     * Given an `aircraftModel` check against each other aircraft for conflicts\n     * after physics (current position) have been updated\n     *\n     * @for AircraftController\n     * @param {AircraftModel} aircraftModel\n     * @param {number} currentUpdateIndex\n     * @private\n     */\n    _updateAircraftConflicts(aircraftModel, currentUpdateIndex) {\n        for (let j = currentUpdateIndex + 1; j < this.aircraft.list.length; j++) {\n            const otherAircraftModel = this.aircraft.list[j];\n\n            // TODO: though looking better, this logic still needs some work\n            if (otherAircraftModel.isTaxiing()) {\n                continue;\n            }\n\n            if (aircraftModel.hasConflictWithAircraftModel(otherAircraftModel)) {\n                aircraftModel.conflicts[otherAircraftModel.callsign].update();\n\n                continue;\n            }\n\n            if (this._shouldAddNewConflict(aircraftModel, otherAircraftModel)) {\n                this.addConflict(aircraftModel, otherAircraftModel);\n            }\n        }\n    }\n\n    /**\n     * Determine if an `aircraftModel` has exited controlled airspace then notify\n     * user and score event\n     *\n     * TODO: This method needs to include some logic currently happeing in `AircraftModel`\n     *       used to remove a departing aricraft\n     *\n     * @for AircraftController\n     * @param {AircraftModel} aircraftModel\n     * @private\n     */\n    _updateAircraftVisibility(aircraftModel) {\n        // TODO: these next 3 logic blocks could use some cleaning/abstraction\n        if (aircraftModel.isArrival() && aircraftModel.isStopped() && !aircraftModel.hit) {\n            EventBus.trigger(AIRCRAFT_EVENT.FULLSTOP, aircraftModel, aircraftModel.fms.arrivalRunwayModel);\n\n            UiController.ui_log(`${aircraftModel.callsign} switching to ground, good day`);\n            speech_say(\n                [\n                    { type: 'callsign', content: aircraftModel },\n                    { type: 'text', content: ', switching to ground, good day' }\n                ],\n                aircraftModel.pilotVoice\n            );\n\n            GameController.events_recordNew(GAME_EVENTS.ARRIVAL);\n            this.aircraft_remove(aircraftModel);\n\n            return;\n        }\n\n        if (aircraftModel.hit && aircraftModel.isOnGround()) {\n            UiController.ui_log(`Lost radar contact with ${aircraftModel.callsign}`, true);\n            this.aircraft_remove(aircraftModel);\n\n            speech_say(\n                [\n                    { type: 'callsign', content: aircraftModel },\n                    { type: 'text', content: ', radar contact lost' }\n                ],\n                aircraftModel.pilotVoice\n            );\n        }\n\n        // Clean up the screen from aircraft that are too far\n        if (!this.isAircraftVisible(aircraftModel, 2) && !aircraftModel.isControllable && aircraftModel.isRemovable) {\n            this.aircraft_remove(aircraftModel);\n        }\n    }\n}\n","import _ceil from 'lodash/ceil';\nimport _defaultTo from 'lodash/defaultTo';\nimport _findIndex from 'lodash/findIndex';\nimport _floor from 'lodash/floor';\nimport _forEach from 'lodash/forEach';\nimport _get from 'lodash/get';\nimport _isEmpty from 'lodash/isEmpty';\nimport _isEqual from 'lodash/isEqual';\nimport _isNil from 'lodash/isNil';\nimport _uniqueId from 'lodash/uniqueId';\nimport AirportController from '../airport/AirportController';\nimport Fms from './FlightManagementSystem/Fms';\nimport GameController, { GAME_EVENTS } from '../game/GameController';\nimport ModeController from './ModeControl/ModeController';\nimport Pilot from './Pilot/Pilot';\nimport TimeKeeper from '../engine/TimeKeeper';\nimport UiController from '../ui/UiController';\nimport EventBus from '../lib/EventBus';\nimport { AIRCRAFT_EVENT } from '../constants/eventNames';\nimport {\n    radians_normalize,\n    angle_offset\n} from '../math/circle';\nimport {\n    abs,\n    cos,\n    extrapolate_range_clamp,\n    sin,\n    spread\n} from '../math/core';\nimport {\n    getOffset,\n    calculateCrosswindAngle,\n    calculateTurnInitiationDistance\n} from '../math/flightMath';\nimport {\n    distance_to_poly,\n    point_to_mpoly,\n    point_in_poly,\n    vadd,\n    vectorize2dFromRadians,\n    vlen,\n    vradial,\n    vscale,\n    vsub\n} from '../math/vector';\nimport { speech_say, randomizePilotVoice } from '../speech';\nimport {\n    digits_decimal,\n    groupNumbers,\n    radio_runway,\n    radio_altitude,\n    radio_spellOut\n} from '../utilities/radioUtilities';\nimport {\n    degreesToRadians,\n    nm,\n    nm_ft,\n    UNIT_CONVERSION_CONSTANTS\n} from '../utilities/unitConverters';\nimport {\n    MCP_MODE,\n    MCP_MODE_NAME\n} from './ModeControl/modeControlConstants';\nimport {\n    FLIGHT_CATEGORY,\n    FLIGHT_PHASE,\n    PERFORMANCE,\n    ENGINE_TYPE\n} from '../constants/aircraftConstants';\nimport {\n    AIRPORT_CONSTANTS,\n    AIRPORT_CONTROL_POSITION_NAME\n} from '../constants/airportConstants';\nimport {\n    INVALID_NUMBER,\n    TIME\n} from '../constants/globalConstants';\nimport { ENVIRONMENT } from '../constants/environmentConstants';\n\n/**\n * @property FLIGHT_RULES\n * @type {Object}\n * @final\n */\nconst FLIGHT_RULES = {\n    VFR: 'vfr',\n    IFR: 'ifr'\n};\n\n/**\n * Each simulated aircraft in the game. Contains a model, fms, and conflicts.\n *\n * @class AircraftModel\n */\nexport default class AircraftModel {\n    /**\n     * @for AircraftModel\n     * @constructor\n     * @param options {object}\n     */\n    constructor(options = {}) {\n        /**\n         * Unique id\n         *\n         * Useful for debugging\n         *\n         * @for AircraftModel\n         * @property id\n         * @type {string}\n         */\n        this.id = _uniqueId('aircraft-');\n\n        /**\n         * Aircraft's DynamicPositionModel\n         *\n         * @for AircraftModel\n         * @property positionModel\n         * @type {DynamicPositionModel|null}\n         */\n        this.positionModel = null;\n\n        /**\n         * AircraftTypeDefinitionModel for the type of aircraft being flown\n         *\n         * @for AircraftModel\n         * @property model\n         * @type {AircraftTypeDefinitionModel|null}\n         * @default null\n         */\n        this.model = null;\n\n        /**\n         * Airline Identifier (eg. 'AAL')\n         *\n         * @property airlineId\n         * @type {string}\n         * @default ''\n         */\n        this.airlineId = '';\n\n        /**\n         * Airline's radio callsign (eg. 'American')\n         *\n         * @for AircraftModel\n         * @property airlineCallsign\n         * @type {string}\n         * @default ''\n         */\n        this.airlineCallsign = '';\n\n        /**\n         * Flight Number ONLY (eg. '551')\n         *\n         * @for AircraftModel\n         * @property flightNumber\n         * @type {string}\n         * @default ''\n         */\n        this.flightNumber = '';\n\n        /**\n         * Option to tell aircraft to take off on its own when there is no other traffic on the runway\n         *\n         * @for AircraftModel\n         * @property shouldTakeOffWhenRunwayIsClear\n         * @type boolean\n         * @default false\n         */\n        this.shouldTakeOffWhenRunwayIsClear = false;\n\n        /**\n         * Trasponder code\n         *\n         * Initially generated and assined on instantiation by the `AircraftController`\n         *\n         * @for AircraftModel\n         * @property transponderCode\n         * @type {number}\n         * @default 1200\n         */\n        this.transponderCode = 1200;\n\n        /**\n         * Pilot's voice\n         *\n         * Initially generated and assined on instantiation by the `AircraftController`\n         *\n         * @for AircraftModel\n         * @property pilotVoice\n         * @type {string}\n         */\n        this.pilotVoice = randomizePilotVoice();\n\n        /**\n         * Magnetic heading the aircraft is facing\n         *\n         * @for AircraftModel\n         * @property heading\n         * @type {number}\n         * @default 0\n         */\n        this.heading = 0;\n\n        /**\n         * Altitude, ft MSL\n         *\n         * @for AircraftModel\n         * @property altitude\n         * @type {number}\n         * @default 0\n         */\n        this.altitude = 0;\n\n        /**\n         * Indicated Airspeed (IAS), knots\n         * Not to be confused with #trueAirspeed\n         *\n         * @property speed\n         * @type {number}\n         * @default 0\n         */\n        this.speed = 0;\n\n        /**\n         * Groundspeed (GS), knots\n         *\n         * @for AircraftModel\n         * @property groundSpeed\n         * @type {number}\n         * @default 0\n         */\n        this.groundSpeed = 0;\n\n        /**\n         * Azimuth of movement across the ground, in radians\n         *\n         * @for AircraftModel\n         * @property groundTrack\n         * @type {number}\n         * @default 0\n         */\n        this.groundTrack = 0;\n\n        /**\n         * Game time takeoff occurred\n         *\n         * @for AircraftModel\n         * @property takeoffTime\n         * @type {number}\n         * @default 0\n         */\n        this.takeoffTime = 0;\n\n        /**\n         * True Airspeed, not to be confused with indicated airspeed (#speed)\n         *\n         * @for AircraftModel\n         * @property trueAirspeed\n         * @type {number}\n         * @default 0\n         */\n        this.trueAirspeed = 0;\n\n        /**\n         * Azimuth from airport center to aircraft, in radians\n         *\n         * @for AircraftModel\n         * @property radial\n         * @type {number}\n         * @default 0\n         */\n        this.radial = 0;\n\n        /**\n         * Distance from the airport, in km\n         *\n         * @for AircraftModel\n         * @property distance\n         * @type {number}\n         * @default 0\n         */\n        this.distance = 0;\n\n        /**\n         * The origin ariport for an aircraft\n         *\n         * This will only be populated for dpearture aircraft\n         *\n         * @for AircraftModel\n         * @property origin\n         * @type {string}\n         * @default ''\n         */\n        this.origin = '';\n\n        /**\n         * The destination airpot of an aircraft\n         *\n         * This will only be populated for arrivals\n         *\n         * @for AircraftModel\n         * @property destination\n         * @type {string}\n         * @default ''\n         */\n        this.destination = '';\n\n        /**\n         * Indicator of descent/level/climb (-1, 0, or 1)\n         *\n         * @for AircraftModel\n         * @property trend\n         * @type {number}\n         * @default 0\n         */\n        this.trend = 0;\n\n        /**\n         * Array of previous positions\n         *\n         * @for AircraftModel\n         * @property history\n         * @type <array<array<number>>>\n         * @default []\n         */\n        this.history = [];\n\n        /**\n         * @for AircraftModel\n         * @property restricted\n         * @type {object}\n         * @default { list: [] }\n         */\n        this.restricted = { list: [] };\n\n        /**\n         * @for AircraftModel\n         * @property warning\n         * @type {boolean}\n         * @default false\n         */\n        this.warning = false;\n\n        /**\n         * Whether aircraft has crashed\n         *\n         * @for AircraftModel\n         * @property hit\n         * @type {boolean}\n         * @default false\n         */\n        this.hit = false;\n\n        /**\n         * Game time an aircraft starts the taxi\n         *\n         * @for AircraftModel\n         * @property taxi_start\n         * @type {number}\n         * @default 0\n         */\n        this.taxi_start = 0;\n\n        /**\n         * Time spent taxiing to the runway. *NOTE* this should be INCREASED\n         * to around 60 once the taxi vs LUAW issue is resolved (#406)\n         *\n         * @for AircraftModel\n         * @property taxi_time\n         * @type {number}\n         * @default 3\n         */\n        this.taxi_time = 3;\n\n        /**\n         * Either IFR or VFR (Instrument/Visual Flight Rules)\n         *\n         * @for AircraftModel\n         * @property rules\n         * @type {FLIGHT_RULES}\n         * @default FLIGHT_RULES.IFR\n         */\n        this.rules = FLIGHT_RULES.IFR;\n\n        /**\n         * Flag for if an aircraft is within controlled airspace, thus\n         * making an aircraft _controllable_\n         *\n         * @for AircraftModel\n         * @property isControllable\n         * @type {boolean}\n         * @default false\n         */\n        this.isControllable = false;\n\n        /**\n         * List of aircraft that MAY be in conflict (bounding box)\n         *\n         * @for AircraftModel\n         * @property conflicts\n         * @type {object}\n         * @default {}\n         */\n        this.conflicts = {};\n\n        /**\n         * @for AircraftModel\n         * @property terrain_ranges\n         * @type {boolean}\n         * @default false\n         */\n        this.terrain_ranges = false;\n\n        /**\n         * Flag used to determine if an aircraft is established on a holding pattern\n         *\n         * This is switched to true after the first turn of a holding pattern is made.\n         * This allows for offset calculations to be performed on the legLength to\n         * account for the time it takes to make a turn from one leg to the next\n         * in a holding pattern.\n         *\n         * @for AircraftModel\n         * @property _isEstablishedOnHoldingPattern\n         * @type {boolean}\n         * @default false\n         * @private\n         */\n        this._isEstablishedOnHoldingPattern = false;\n\n        /**\n         * Flag used to determine if an aircraft can be removed from the sim.\n         *\n         * This tells the `AircraftController` that this instance is safe to remove.\n         * This property should only be changed via the `.setIsRemovable()` method.\n         *\n         * @for AircraftModel\n         * @property isRemovable\n         * @type {boolean}\n         * @default false\n         */\n        this.isRemovable = false;\n\n        // Set to true when simulating future movements of the aircraft\n        // Should be checked before updating global state such as score\n        // or HTML.\n        this.projected = false;\n        this.relativePositionHistory = [];\n\n        this.category = options.category; // 'arrival' or 'departure'\n\n        // target represents what the pilot makes of the tower's commands. It is\n        // most important when the plane is in a 'guided' situation, that is it is\n        // not given a heading directly, but has a fix or is following an ILS path\n        this.target = {\n            altitude: 0,\n            heading: null,\n            turn: null,\n            speed: 0\n        };\n\n        // TODO: Move all target properties here in order to utilize getters/setters\n        // this._targetAltitude = 0;\n        // this._targetAltitudeExpedite = false;\n        this._targetHeading = null;\n        this._targetGroundTrack = null;\n        // this._targetTurnDirection = null;\n        // this._targetIndicatedAirspeed = 0;\n\n        /**\n         * @for AircraftModel\n         * @property model\n         * @type {AircraftTypeDefinitionModel}\n         */\n        this.model = options.model;\n\n        /**\n         * @for AircraftModel\n         * @property mcp\n         * @type {ModeController}\n         */\n        this.mcp = new ModeController();\n\n        /**\n         * @for AircraftModel\n         * @property fms\n         * @type {Fms}\n         */\n        this.fms = new Fms(options);\n\n        /**\n         * @for AircraftModel\n         * @property pilot\n         * @type {Pilot}\n         */\n        this.pilot = new Pilot(this.fms, this.mcp);\n\n        this.takeoffTime = options.category === FLIGHT_CATEGORY.ARRIVAL ?\n            TimeKeeper.accumulatedDeltaTime :\n            null;\n\n        this.buildCurrentTerrainRanges();\n        this.buildRestrictedAreaLinks();\n        this.parse(options);\n\n        const airport = AirportController.airport_get();\n        // const initialRunway = airport.getActiveRunwayForCategory(this.category);\n\n        if (this.category === FLIGHT_CATEGORY.DEPARTURE) {\n            this.setFlightPhase(FLIGHT_PHASE.APRON);\n            this.altitude = airport.positionModel.elevation;\n            this.speed = 0;\n        } else if (this.category !== FLIGHT_CATEGORY.ARRIVAL && this.category !== FLIGHT_CATEGORY.OVERFLIGHT) {\n            throw new Error('Invalid #category found in AircraftModel');\n        } else {\n            const bottomAltitude = this.fms.getBottomAltitude();\n            const airportModel = AirportController.airport_get();\n            const airspaceCeiling = airportModel.maxAssignableAltitude;\n\n            this.mcp.initializeForAirborneFlight(\n                bottomAltitude,\n                airspaceCeiling,\n                this.altitude,\n                this.heading,\n                this.speed\n            );\n        }\n    }\n\n    /**\n     * The magnetic heading to target while applying NO correction for the wind, in radians\n     * NOTE: This will not be the heading the aircraft moves along-- the wind will blow it off\n     *       course. For that heading, use #targetGroundTrack instead.\n     *\n     * @for AircraftModel\n     * @property targetHeading\n     * @type {number} heading, in radians magnetic\n     */\n    get targetHeading() {\n        if (_isNil(this._targetHeading)) {\n            if (_isNil(this._targetGroundTrack)) {\n                throw new TypeError('Expected a targetHeading OR targetGroundTrack, but neither has been set!');\n            }\n\n            return this._calculateCrabHeadingForGroundTrack(this._targetGroundTrack);\n        }\n\n        return this._targetHeading;\n    }\n\n    set targetHeading(heading) {\n        this._targetHeading = heading;\n        this._targetGroundTrack = null;\n    }\n\n    /**\n    * The magnetic heading to target, for which a/c SHOULD apply wind correction, in radians\n    * NOTE: This will not be the heading the aircraft is actually facing-- the aircraft will be crabbing into\n    *       the wind. For the heading the aircraft is physically pointing at, use #targetHeading instead.\n    *\n    * @for AircraftModel\n    * @property targetGroundTrack\n    * @type {number} heading, in radians magnetic\n    */\n    get targetGroundTrack() {\n        if (_isNil(this._targetGroundTrack)) {\n            if (_isNil(this._targetHeading)) {\n                throw new TypeError('Expected a targetHeading OR targetGroundTrack, but neither has been set!');\n            }\n\n            return this._calculateGroundTrackForHeading(this._targetHeading);\n        }\n\n        return this._targetGroundTrack;\n    }\n\n    set targetGroundTrack(groundTrack) {\n        this._targetGroundTrack = groundTrack;\n        this._targetHeading = null;\n    }\n\n    /**\n     * @for AircraftModel\n     * @property callsign\n     * @return {string}\n     */\n    get callsign() {\n        return `${this.airlineId.toUpperCase()}${this.flightNumber.toUpperCase()}`;\n    }\n\n    /**\n     * Current flight phase\n     *\n     * @for AircraftModel\n     * @property flightPhase\n     * @type {string}\n     */\n    get flightPhase() {\n        return this.fms.currentPhase;\n    }\n\n    /**\n     * Fascade to access relative position\n     *\n     * @for AircraftModel\n     * @property relativePosition\n     * @type {array<number>} [kilometersNorth, kilometersEast]\n     */\n    get relativePosition() {\n        return this.positionModel.relativePosition;\n    }\n\n    // TODO: this feels like it belongs in either the AirportModel or the AirspaceModel which then exposes a\n    // method that will check collisions\n    /**\n     * @for AircraftModel\n     * @method buildCurrentTerrainRanges\n     */\n    buildCurrentTerrainRanges() {\n        const terrain = _get(prop, 'airport.current.terrain', null);\n\n        if (!terrain) {\n            return;\n        }\n\n        this.terrain_ranges = {};\n        this.terrain_level = 0;\n\n        _forEach(terrain, (terrainRange, k) => {\n            this.terrain_ranges[k] = {};\n\n            _forEach(terrainRange, (range, j) => {\n                this.terrain_ranges[k][j] = Infinity;\n            });\n        });\n    }\n\n    /**\n     * Set up links to restricted areas\n     *\n     * @for AircraftModel\n     * @method buildRestrictedAreaLinks\n     */\n    buildRestrictedAreaLinks() {\n        const restrictedAreas = AirportController.current.restricted_areas;\n\n        _forEach(restrictedAreas, (area) => {\n            this.restricted.list.push({\n                data: area,\n                range: null,\n                inside: false\n            });\n        });\n    }\n\n    parse(data) {\n        this.positionModel = data.positionModel;\n        this.transponderCode = data.transponderCode;\n        this.airlineId = data.airline;\n        this.airlineCallsign = data.airlineCallsign;\n        this.flightNumber = data.callsign;\n        this.category = data.category;\n        this.heading = data.heading;\n        this.altitude = data.altitude;\n        this.speed = data.speed;\n        this.origin = _get(data, 'origin', this.origin);\n        this.destination = _get(data, 'destination', this.destination);\n\n        this.target.altitude = this.altitude;\n        this.targetHeading = this.heading;\n        this.target.speed = this.speed;\n\n        // This assumes and arrival spawns outside the airspace\n        this.isControllable = data.category === FLIGHT_CATEGORY.DEPARTURE;\n    }\n\n    /**\n     * Build an object that contains all the correct data, in the correct shape,\n     * so it can be injected into the view.\n     *\n     * This method should only be used by the `StripView` classes when instantiating\n     * or updating the aircraft progress strips.\n     *\n     * The data here should be considered read-only.\n     *\n     * @for AircraftModel\n     * @method getViewModel\n     * @return {object<string, string>}\n     */\n    getViewModel() {\n        let assignedAltitude = '-';\n        let flightPlanAltitude = '-';\n\n        if (this.mcp.altitude !== INVALID_NUMBER) {\n            assignedAltitude = Math.round(this.mcp.altitude) * UNIT_CONVERSION_CONSTANTS.FT_FL;\n        }\n\n        if (this.fms.flightPlanAltitude !== INVALID_NUMBER) {\n            flightPlanAltitude = this.fms.flightPlanAltitude * UNIT_CONVERSION_CONSTANTS.FT_FL;\n        }\n\n        return {\n            id: this.id,\n            insideCenter: this.isControllable,\n            callsign: this.callsign,\n            transponderCode: this.transponderCode,\n            icaoWithWeightClass: this.model.icaoWithWeightClass,\n            assignedAltitude,\n            flightPlanAltitude,\n            arrivalAirportId: this.destination.toUpperCase(),\n            departureAirportId: this.origin.toUpperCase(),\n            flightPlan: this.fms.getFullRouteStringWithoutAirportsWithSpaces()\n        };\n    }\n\n    /**\n     * Returns a true value if there is a match from the callsignToMatch\n     *\n     * @for AircraftModel\n    * @method matchCallsign\n    * @param callsign {string}\n     */\n    matchCallsign(callsignToMatch) {\n        const shouldMatchAnyCallsign = callsignToMatch === '*';\n        // checks to see if the given call sign matches the airline Id + callsign format\n        if (shouldMatchAnyCallsign || (this.airlineId.toUpperCase() + callsignToMatch.toUpperCase() === this.callsign)) {\n            return true;\n        }\n\n        // Checks to see if the given callsign matches only the callsign since callsign numbers should be unique\n        return _isEqual(callsignToMatch.toUpperCase(), this.callsign);\n    }\n\n    /**\n     * verifies if there is a matched callsign and if the  aircraft is visable.\n     * @for AircraftModel\n     * @method getCallsign\n     * @return {string}\n     */\n    getCallsign() {\n        return this.callsign.toUpperCase();\n    }\n\n    /**\n     * @for AircraftModel\n     * @method getRadioCallsign\n     * @return cs {string}\n     */\n    getRadioCallsign() {\n        let weight = this.model.getRadioWeightClass();\n\n        if (!_isEmpty(weight)) {\n            weight = ` ${weight}`;\n        }\n\n        if (this.airlineCallsign === 'November') {\n            return `${this.airlineCallsign} ${radio_spellOut(this.flightNumber)}${weight}`;\n        }\n\n        return `${this.airlineCallsign} ${groupNumbers(this.flightNumber)}${weight}`;\n    }\n\n\n    // TODO: this method should move to the `AircraftTypeDefinitionModel`\n    /**\n     * @for AircraftModel\n     * @method getClimbRate\n     * @return {number}\n     */\n    getClimbRate() {\n        let serviceCeilingClimbRate;\n        let cr_uncorr;\n        let cr_current;\n        const { altitude } = this;\n        const rate = this.model.rate.climb;\n        const { ceiling } = this.model;\n\n        if (this.model.engines.type === ENGINE_TYPE.JET) {\n            serviceCeilingClimbRate = 500;\n        } else {\n            serviceCeilingClimbRate = 100;\n        }\n\n        // TODO: enumerate the magic number\n        // in troposphere\n        if (this.altitude < 36152) {\n            // TODO: break this assignemnt up into smaller parts and holy magic numbers! enumerate the magic numbers\n            cr_uncorr = rate * 420.7 * ((1.232 * (((518.6 - 0.00356 * altitude) / 518.6) ** 5.256)) /\n                (518.6 - 0.00356 * altitude));\n            cr_current = cr_uncorr - (altitude / ceiling * cr_uncorr) + (altitude / ceiling * serviceCeilingClimbRate);\n        } else {\n            // in lower stratosphere\n            // re-do for lower stratosphere\n            // Reference: https://www.grc.nasa.gov/www/k-12/rocket/atmos.html\n            // also recommend using graphing calc from desmos.com\n            return this.model.rate.climb; // <-- NOT VALID! Just a placeholder!\n        }\n\n        return cr_current;\n    }\n\n    /**\n     * @for AircraftModel\n     * @method cancelFix\n     */\n    cancelFix() {\n        this.fms.cancelFix();\n    }\n\n    /**\n     * Abort the landing attempt, and fly present heading, climbing to the minimum safe altitude\n     *\n     * @for AircraftModel\n     * @method cancelLanding\n     */\n    cancelLanding() {\n        if (this.projected) {\n            return;\n        }\n\n        const missedApproachAltitude = _ceil(this.fms.arrivalRunwayModel.elevation + 2000, -3);\n        const nextIfrAltitudeBelow = _floor(this.altitude, -3);\n        let nextAltitudeToMaintain = missedApproachAltitude;\n        let radioMessage = `going missed approach, present heading, climbing to ${missedApproachAltitude}`;\n\n        if (nextIfrAltitudeBelow >= missedApproachAltitude) {\n            nextAltitudeToMaintain = nextIfrAltitudeBelow;\n            radioMessage = `going missed approach, present heading, leveling at ${nextIfrAltitudeBelow}`;\n        }\n\n        this.pilot.hasApproachClearance = false;\n\n        this.mcp.setAltitudeFieldValue(nextAltitudeToMaintain);\n        this.mcp.setAltitudeHold();\n        this.mcp.setHeadingFieldValue(this.heading);\n        this.mcp.setHeadingHold();\n        this.setFlightPhase(FLIGHT_PHASE.DESCENT);\n        this.radioCall(radioMessage, AIRPORT_CONTROL_POSITION_NAME.APPROACH, true);\n    }\n\n    /**\n     * Return whether the aircraft is off the ground\n     *\n     * @for AircraftModel\n     * @method isAirborne\n     * @return {boolean}\n     */\n    isAirborne() {\n        return !this.isOnGround();\n    }\n\n    /**\n     * Returns whether it is time to begin deceleration in order to comply with the posted speed restrictions\n     *\n     * @for AircraftModel\n     * @method isBeyondDecelerationPointForWaypointModel\n     * @param waypointModel {WaypointModel} the waypoint with a speed restriction\n     * @return {boolean}\n     */\n    isBeyondDecelerationPointForWaypointModel(waypointModel) {\n        if (_isNil(waypointModel)) {\n            return false;\n        }\n\n        const waypointSpeed = waypointModel.speedMaximum;\n        const waypointDistance = this.positionModel.distanceToPosition(waypointModel.positionModel);\n        const speedChange = waypointSpeed - this.speed;\n        const decelerationRate = -this.model.rate.decelerate / 2; // units of rate.decel are 'knots per 2 seconds'\n        const decelerationTime = speedChange / decelerationRate;\n        const timeUntilWaypoint = waypointDistance / this.groundSpeed * TIME.ONE_HOUR_IN_SECONDS;\n\n        return decelerationTime > timeUntilWaypoint;\n    }\n\n    /**\n     * Returns whether it is time to begin descent in order to comply with the posted altitude restrictions\n     *\n     * @for AircraftModel\n     * @method isBeyondTopOfDescentForWaypointModel\n     * @param waypointModel {WaypointModel} the waypoint at which to comply with the restriction\n     * @param targetAltitude {number} the altitude to comnply with\n     * @return {boolean}\n     */\n    isBeyondTopOfDescentForWaypointModel(waypointModel, targetAltitude) {\n        const targetPosition = waypointModel.positionModel;\n        const waypointDistance = this.positionModel.distanceToPosition(targetPosition);\n        const altitudeChange = targetAltitude - this.altitude;\n        const descentRate = -this.model.rate.descent * PERFORMANCE.TYPICAL_DESCENT_FACTOR;\n        const descentTime = altitudeChange / descentRate;\n        const timeUntilWaypoint = waypointDistance / this.groundSpeed * TIME.ONE_HOUR_IN_MINUTES;\n\n        return descentTime > timeUntilWaypoint;\n    }\n\n    /**\n     * Returns whether the aircraft is an arrival\n     *\n     * @for AircraftModel\n     * @method isArrival\n     * @returns {boolean}\n     */\n    isArrival() {\n        return this.fms.isArrival();\n    }\n\n    /**\n     * Returns whether the aircraft is a departure\n     *\n     * @for AircraftModel\n     * @method isDeparture\n     * @returns {booelan}\n     */\n    isDeparture() {\n        return this.fms.isDeparture();\n    }\n\n    /**\n     * Returns whether or not this aircraft is an overflight (neither departing or arriving within our airspace)\n     *\n     * @for AircraftModel\n     * @method isArrival\n     * @returns booelan\n     */\n    isOverflight() {\n        return this.origin === '' && this.destination === '';\n    }\n\n    /**\n     * Returns whether aircraft is above the glidepath at (or abeam) their current position\n     *\n     * Note that a small allowance is applied here to still be considered \"on or below\"\n     *\n     * @for AircraftModel\n     * @method isAboveGlidepath\n     * @return {boolean}\n     */\n    isAboveGlidepath() {\n        const glideslopeAltitude = this._calculateArrivalRunwayModelGlideslopeAltitude();\n        const altitudeDifference = glideslopeAltitude - this.altitude;\n\n        return altitudeDifference < -PERFORMANCE.MAXIMUM_ALTITUDE_DIFFERENCE_CONSIDERED_ESTABLISHED_ON_GLIDEPATH;\n    }\n\n    /**\n     * Aircraft is established on the course tuned into the nav radio and course\n     *\n     * @for AircraftModel\n     * @method isEstablishedOnCourse\n     * @return {boolean}\n     */\n    isEstablishedOnCourse() {\n        const runwayModel = this.fms.arrivalRunwayModel;\n\n        if (!runwayModel) {\n            return false;\n        }\n\n        // TODO: the `this` here is ugly, but will be needed until `getOffset`\n        // is refactored (#291 - https://github.com/ATSSIM/openscope/issues/291)\n        // TODO: The methods called here should be moved to the AircraftModel,\n        // so that it can also be used for non-runway course interception\n        return runwayModel.isOnApproachCourse(this) && runwayModel.isOnCorrectApproachGroundTrack(this.groundTrack);\n\n        // TODO: Use this instead\n        // const courseDatum = this.mcp.nav1Datum;\n        // const course = this.mcp.course;\n        // const courseOffset = getOffset(this, courseDatum.relativePosition, course);\n        // const lateralDistanceFromCourse_nm = abs(nm(courseOffset[0]));\n        // const allowableLateralDistanceFromCourse = PERFORMANCE.MAXIMUM_DISTANCE_CONSIDERED_ESTABLISHED_ON_APPROACH_COURSE_NM;\n        // const isAlignedWithCourse = lateralDistanceFromCourse_nm <= allowableLateralDistanceFromCourse;\n        // const heading_diff = abs(angle_offset(this.heading, course));\n        // const isOnCourseHeading = heading_diff < PERFORMANCE.MAXIMUM_ANGLE_CONSIDERED_ESTABLISHED_ON_APPROACH_COURSE;\n        //\n        // return isAlignedWithCourse && isOnCourseHeading;\n    }\n\n    /**\n     * Aircraft is established on the glidepath\n     *\n     * Note that this is currently only usable for runway glideslopes, but should eventually\n     * be elaborated upon to support other types of glidepaths (such as those from FMS VNAV)\n     *\n     * @for AircraftModel\n     * @method isEstablishedOnCourse\n     * @return {boolean}\n     */\n    isEstablishedOnGlidepath() {\n        const glideslopeAltitude = this._calculateArrivalRunwayModelGlideslopeAltitude();\n        const glideslopeAltitudeDifference = abs(glideslopeAltitude - this.altitude);\n\n        return glideslopeAltitudeDifference <= PERFORMANCE.MAXIMUM_ALTITUDE_DIFFERENCE_CONSIDERED_ESTABLISHED_ON_GLIDEPATH;\n    }\n\n    /**\n     * Checks if the aircraft is inside the airspace of a specified airport\n     *\n     * @for AircraftModel\n     * @method isInsideAirspace\n     * @param  {AirportModel} airport the airport whose airspace we are checking\n     * @return {boolean}\n     */\n    isInsideAirspace(airport) {\n        return airport.isPointWithinAirspace(this.relativePosition, this.altitude);\n    }\n\n    /**\n     * Returns whether the aircraft is on the approach course and within the final approach fix\n     *\n     * @for AircraftModel\n     * @method isOnFinal\n     * @return {boolean}\n     */\n    isOnFinal() {\n        if (!this.isEstablishedOnCourse()) {\n            return false;\n        }\n\n        const approachDistanceNm = this.positionModel.distanceToPosition(this.mcp.nav1Datum);\n        const maxDistanceConsideredOnFinalNm = AIRPORT_CONSTANTS.FINAL_APPROACH_FIX_DISTANCE_NM;\n\n        return approachDistanceNm <= maxDistanceConsideredOnFinalNm;\n    }\n\n    /**\n     * Aircraft has \"weight-on-wheels\" (on the ground)\n     *\n     * @for AircraftModel\n     * @method isOnGround\n     * @return {boolean}\n     */\n    isOnGround() {\n        if (this.isOverflight()) {\n            return false;\n        }\n\n        let airportModel = this.fms.departureAirportModel;\n        let runwayModel = this.fms.departureRunwayModel;\n\n        if (this.isArrival()) {\n            airportModel = this.fms.arrivalAirportModel;\n            runwayModel = this.fms.arrivalRunwayModel;\n        }\n\n        const errorAllowanceInFeet = 5;\n        const isAtOrBelowRunwayAltitude = this.altitude - runwayModel.elevation < errorAllowanceInFeet;\n        const isAtOrBelowAirportAltitude = this.altitude - airportModel.elevation < errorAllowanceInFeet;\n\n        return isAtOrBelowRunwayAltitude || isAtOrBelowAirportAltitude;\n    }\n\n    /**\n     * Aircraft is on the apron\n     *\n     * @for AircraftModel\n     * @method isApron\n     * @return {boolean}\n     */\n    isApron() {\n        return this.flightPhase === FLIGHT_PHASE.APRON;\n    }\n\n    /**\n     * @for AircraftModel\n     * @method isStopped\n     */\n    isStopped() {\n        // TODO: enumerate the magic number.\n        return this.isOnGround() && this.speed < 5;\n    }\n\n    /**\n     * Return whether the aircraft is in flight AND below its stall speed\n     *\n     * @for AircraftModel\n     * @method isStalling\n     * @return {boolean}\n     */\n    isStalling() {\n        const isStalling = this.speed < this.model.speed.min && this.isAirborne();\n\n        return isStalling;\n    }\n\n    /**\n     * @for AircraftModel\n     * @method isTaxiing\n     */\n    isTaxiing() {\n        return this.flightPhase === FLIGHT_PHASE.APRON ||\n            this.flightPhase === FLIGHT_PHASE.TAXI ||\n            this.flightPhase === FLIGHT_PHASE.WAITING;\n    }\n\n    /**\n     * Returns whether the aircraft is currently taking off\n     *\n     * @for AircraftModel\n     * @method isTakeoff\n     */\n    isTakeoff() {\n        return this.flightPhase === FLIGHT_PHASE.TAKEOFF;\n    }\n\n    /**\n     * @for AircraftModel\n     * @method isVisible\n     * @return {boolean}\n     */\n    isVisible() {\n        // hide aircraft on taxiways\n        if (this.flightPhase === FLIGHT_PHASE.APRON || this.flightPhase === FLIGHT_PHASE.TAXI) {\n            return false;\n        }\n\n        if (this.flightPhase === FLIGHT_PHASE.WAITING) {\n            // show only the first aircraft in the takeoff queue\n            return this.fms.departureRunwayModel.isAircraftNextInQueue(this.id);\n        }\n\n        return true;\n    }\n\n    /**\n     * Sets `#isRemovable` to true\n     *\n     * Provides a single source of change for the value of `#isRemovable`\n     * This is evaluated by the `AircraftController` when determining\n     * if an aircraft should be removed or not\n     *\n     * @for AircraftModel\n     * @method setIsRemovable\n     */\n    setIsRemovable() {\n        this.isRemovable = true;\n    }\n\n    /**\n      * @for AircraftModel\n      * @method getWindComponents\n      * @return {object} headwind and crosswind\n      */\n    getWindComponents() {\n        const { wind } = AirportController.airport_get();\n        const crosswindAngle = calculateCrosswindAngle(this.heading, wind.angle);\n\n        return {\n            cross: sin(crosswindAngle) * wind.speed,\n            head: cos(crosswindAngle) * wind.speed\n        };\n    }\n\n    /**\n     * Reposition the aircraft to the location of the specified runway\n     *\n     * @for AircraftModel\n     * @method moveToRunway\n     * @param runwayModel {RunwayModel}\n     */\n    moveToRunway(runwayModel) {\n        this.positionModel.setCoordinates(runwayModel.gps);\n\n        this.heading = runwayModel.angle;\n        this.altitude = runwayModel.elevation;\n    }\n\n    /**\n     * @for AircraftModel\n     * @method radioCall\n     * @param msg {string}\n     * @param sectorType {string}\n     * @param alert {string}\n     */\n    radioCall(msg, sectorType, alert) {\n        if (this.projected) {\n            return;\n        }\n\n        const writtenCallsign = this.callsign;\n        const spokenCallsign = this.getRadioCallsign();\n\n        // let call = '';\n        //\n        // if (sectorType) {\n        //     call += AirportController.airport_get().radio[sectorType];\n        // }\n        //\n        // call += \", \" + this.callsign + \" \" + msg;\n\n        // TODO: quick abstraction, this doesn't belong here.\n        const logMessage = (callsign) => `${AirportController.airport_get().radio[sectorType]}, ${callsign} ${msg}`;\n\n        if (alert) {\n            const isWarning = true;\n            UiController.ui_log(logMessage(writtenCallsign), isWarning);\n        } else {\n            UiController.ui_log(logMessage(writtenCallsign));\n        }\n\n        speech_say(\n            [{\n                type: 'text',\n                content: logMessage(spokenCallsign)\n            }],\n            this.pilotVoice\n        );\n    }\n\n    /**\n     * @for AircraftModel\n     * @method callUp\n     */\n    callUp() {\n        let alt_log;\n        let alt_say;\n\n        if (this.isAirborne()) {\n            const altdiff = this.altitude - this.mcp.altitude;\n            const alt = digits_decimal(this.altitude, -2);\n\n            if (Math.abs(altdiff) > 200) {\n                if (altdiff > 0) {\n                    alt_log = `descending through ${alt} for ${this.mcp.altitude}`;\n                    alt_say = `descending through ${radio_altitude(alt)} for ${radio_altitude(this.mcp.altitude)}`;\n                } else if (altdiff < 0) {\n                    alt_log = `climbing through ${alt} for ${this.mcp.altitude}`;\n                    alt_say = `climbing through ${radio_altitude(alt)} for ${radio_altitude(this.mcp.altitude)}`;\n                }\n            } else {\n                alt_log = `at ${alt}`;\n                alt_say = `at ${radio_altitude(alt)}`;\n            }\n\n            UiController.ui_log(`${AirportController.airport_get().radio.app}, ${this.callsign} with you ${alt_log}`);\n            speech_say(\n                [\n                    { type: 'text', content: `${AirportController.airport_get().radio.app}, ` },\n                    { type: 'callsign', content: this },\n                    { type: 'text', content: `with you ${alt_say}` }\n                ],\n                this.pilotVoice\n            );\n        } else {\n            UiController.ui_log(`${AirportController.airport_get().radio.twr}, ${this.callsign}, ready to taxi`);\n            speech_say(\n                [\n                    { type: 'text', content: AirportController.airport_get().radio.twr },\n                    { type: 'callsign', content: this },\n                    { type: 'text', content: ', ready to taxi' }\n                ],\n                this.pilotVoice\n            );\n        }\n    }\n\n    /**\n     * @for AircraftModel\n     * @method taxiToRunway\n     * @param runwayModel {RunwayModel}\n     * @return {array} [success of operation, readback]\n     */\n    taxiToRunway(runwayModel) {\n        if (this.isAirborne()) {\n            return [false, 'unable to taxi, we\\'re already airborne'];\n        }\n\n        if (this.flightPhase === FLIGHT_PHASE.TAKEOFF) {\n            return [false, 'unable to taxi, we\\'re already taking off'];\n        }\n\n        if (this.isArrival()) {\n            return [false, 'unable to taxi to runway, we have just landed'];\n        }\n\n        if (this.fms.departureRunwayModel === runwayModel) {\n            if (this.flightPhase === FLIGHT_PHASE.WAITING) {\n                const readback = {\n                    log: `we're already holding short of Runway ${runwayModel.name}`,\n                    say: `we're already holding short of Runway ${runwayModel.getRadioName()}`\n                };\n\n                return [false, readback];\n            }\n\n            if (this.flightPhase === FLIGHT_PHASE.TAXI) {\n                const readback = {\n                    log: `we're already taxiing to Runway ${runwayModel.name}`,\n                    say: `we're already taxiing to Runway ${runwayModel.getRadioName()}`\n                };\n\n                return [false, readback];\n            }\n        }\n\n        this.setFlightPhase(FLIGHT_PHASE.TAXI);\n        // remove aircraft from previous runway's queue\n        this.fms.departureRunwayModel.removeAircraftFromQueue(this.id);\n        this.fms.setDepartureRunway(runwayModel);\n        this.fms.departureRunwayModel.addAircraftToQueue(this.id);\n\n        this.taxi_start = TimeKeeper.accumulatedDeltaTime;\n\n        const readback = {};\n        readback.log = `taxi to and hold short of Runway ${runwayModel.name}`;\n        readback.say = `taxi to and hold short of Runway ${radio_runway(runwayModel.name)}`;\n\n        return [true, readback];\n    }\n\n    /**\n     * Initialize all autopilot systems after being given an IFR clearance to destination and execute takeoff.\n     *\n     * @for AircraftModel\n     * @method takeoff\n     * @param runway {RunwayModel} the runway taking off on\n     */\n    takeoff(runway) {\n        const cruiseSpeed = this.model.speed.cruise;\n        const initialAltitude = this.fms.getInitialClimbClearance();\n\n        this._prepareMcpForTakeoff(initialAltitude, runway.angle, cruiseSpeed);\n        this.setFlightPhase(FLIGHT_PHASE.TAKEOFF);\n        EventBus.trigger(AIRCRAFT_EVENT.TAKEOFF, this, runway);\n\n        this.takeoffTime = TimeKeeper.accumulatedDeltaTime;\n        runway.lastDepartedAircraftModel = this;\n    }\n\n    /**\n     * Initialize all autopilot systems for takeoff.\n     *\n     * @for AircraftModel\n     * @method _prepareMcpForTakeoff\n     * @param altitude {number}\n     * @param heading {number}\n     * @param speed {number}\n     */\n    _prepareMcpForTakeoff(altitude, heading, speed) {\n        if (this.mcp.altitude === INVALID_NUMBER) {\n            this.mcp.setAltitudeFieldValue(altitude);\n        }\n\n        if (this.mcp.altitudeMode === MCP_MODE.ALTITUDE.OFF) {\n            this.mcp.setAltitudeHold();\n        }\n\n        if (this.mcp.heading === INVALID_NUMBER) {\n            this.mcp.setHeadingFieldValue(heading);\n        }\n\n        if (this.mcp.headingMode === MCP_MODE.HEADING.OFF) {\n            this.mcp.setHeadingLnav();\n        }\n\n        if (this.mcp.speed === INVALID_NUMBER) {\n            this.mcp.setSpeedFieldValue(speed);\n        }\n\n        if (this.mcp.speedMode === MCP_MODE.SPEED.OFF) {\n            this.mcp.setSpeedN1();\n        }\n    }\n\n    /**\n     * Update the aircraft's targeted telemetry (altitude, heading, and speed)\n     *\n     * @for AircraftModel\n     * @method updateTarget\n     */\n    updateTarget() {\n        this.target.altitude = _defaultTo(this._calculateTargetedAltitude(), this.target.altitude);\n\n        this._updateTargetedDirectionality();\n\n        this.target.speed = _defaultTo(this._calculateTargetedSpeed(), this.target.speed);\n\n        // TODO: this method may not be needed but could be leveraged for housekeeping if deemed appropriate\n        this.overrideTarget();\n    }\n\n    /**\n     * @for AircraftModel\n     * @method overrideTarget\n     */\n    overrideTarget() {\n        switch (this.flightPhase) {\n            case FLIGHT_PHASE.APRON:\n                // TODO: Is this needed?\n                // this.target.altitude = this.altitude;\n                // this.targetHeading = this.heading;\n                // this.target.speed = 0;\n\n                break;\n\n            case FLIGHT_PHASE.TAXI:\n                // TODO: Is this needed?\n                // this.target.altitude = this.altitude;\n                // this.targetHeading = this.heading;\n                // this.target.speed = 0;\n\n                break;\n\n            case FLIGHT_PHASE.WAITING:\n                // TODO: Is this needed?\n                // this.target.altitude = this.altitude;\n                // this.targetHeading = this.heading;\n                // this.target.speed = 0;\n\n                break;\n\n            case FLIGHT_PHASE.TAKEOFF: {\n                this.target.altitude = this.altitude;\n\n                if (this.speed >= this.model.speed.min) {\n                    this.target.altitude = this.model.ceiling;\n                }\n\n                this.targetHeading = this.heading;\n                this.target.speed = this.model.speed.min;\n\n                if (this.mcp.heading === INVALID_NUMBER) {\n                    console.warn(`${this.callsign} took off with no directional instructions!`);\n                }\n\n                break;\n            }\n\n            case FLIGHT_PHASE.CLIMB:\n                break;\n\n            case FLIGHT_PHASE.CRUISE:\n                break;\n\n            case FLIGHT_PHASE.DESCENT:\n                break;\n\n            case FLIGHT_PHASE.APPROACH:\n                break;\n\n            case FLIGHT_PHASE.LANDING: {\n                if (this.altitude <= this.mcp.nav1Datum.elevation) {\n                    this.altitude = this.mcp.nav1Datum.elevation;\n                    this.target.speed = 0;\n                }\n\n                break;\n            }\n\n            default:\n                break;\n        }\n\n        // If stalling, make like a meteorite and fall to the earth!\n        if (this.isStalling()) {\n            this.target.altitude = Math.min(0, this.target.altitude);\n        }\n\n        // Limit speed to 250 knots while under 10,000 feet MSL (it's the law!)\n        // TODO: Isn't this covered by `this._calculateLegalSpeed()`?\n        if (this.altitude < 10000) {\n            this.target.speed = Math.min(this.target.speed, AIRPORT_CONSTANTS.MAX_SPEED_BELOW_10K_FEET);\n        }\n\n        if (this.target.altitude > this.model.ceiling) {\n            this.target.altitude = this.model.ceiling;\n        }\n\n        if (this.target.speed > this.model.speed.max) {\n            this.target.speed = this.model.speed.max;\n        }\n\n        if (this.target.speed < this.model.speed.min && this.isAirborne()) {\n            this.target.speed = this.model.speed.min;\n        }\n    }\n\n    /**\n     * Fascade to set the fms's flight phase\n     *\n     * @for AircraftModel\n     * @method setFlightPhase\n     * @param phase {string}\n     */\n    setFlightPhase(phase) {\n        this.fms.setFlightPhase(phase);\n    }\n\n    /**\n     * Update the FMS's flight phase\n     *\n     * @for AircraftModel\n     * @method updateFlightPhase\n     */\n    updateFlightPhase() {\n        const runwayModel = this.fms.departureRunwayModel;\n\n        switch (this.flightPhase) {\n            case FLIGHT_PHASE.TAXI: {\n                const elapsed = TimeKeeper.accumulatedDeltaTime - this.taxi_start;\n\n                if (elapsed > this.taxi_time) {\n                    this.setFlightPhase(FLIGHT_PHASE.WAITING);\n                    this.moveToRunway(runwayModel);\n                }\n\n                break;\n            }\n\n            case FLIGHT_PHASE.WAITING:\n                const iAmTheNextDeparture = this.fms.departureRunwayModel.isAircraftNextInQueue(this.id);\n\n                if (this.shouldTakeOffWhenRunwayIsClear && iAmTheNextDeparture) {\n                    const lastDeparture = this.fms.departureRunwayModel.lastDepartedAircraftModel;\n                    const iAmTheFirstEverDeparture = lastDeparture === null;\n\n                    if (!iAmTheFirstEverDeparture) {\n                        const actualDistance = nm_ft(this.distanceToAircraft(lastDeparture));\n                        const requiredDistance = this.model.calculateSameRunwaySeparationDistanceInFeet(lastDeparture.model);\n                        const towerUtilizedDistance = requiredDistance + 2000;\n\n                        if (actualDistance < towerUtilizedDistance || lastDeparture.isOnGround()) {\n                            break;\n                        }\n                    }\n\n                    this.fms.departureRunwayModel.removeAircraftFromQueue(this.id);\n                    this.takeoff(this.fms.departureRunwayModel);\n                }\n\n                break;\n\n            case FLIGHT_PHASE.TAKEOFF:\n                if ((this.altitude - runwayModel.elevation) > PERFORMANCE.TAKEOFF_TURN_ALTITUDE) {\n                    this.pilot.raiseLandingGearAndActivateAutopilot();\n                    this.setFlightPhase(FLIGHT_PHASE.CLIMB);\n                }\n\n                break;\n\n            case FLIGHT_PHASE.CLIMB:\n                if (this.altitude === this.fms.flightPlanAltitude) {\n                    this.setFlightPhase(FLIGHT_PHASE.CRUISE);\n                }\n\n                break;\n\n            case FLIGHT_PHASE.CRUISE:\n                if (this.altitude < this.fms.flightPlanAltitude) {\n                    this.setFlightPhase(FLIGHT_PHASE.DESCENT);\n                }\n\n                break;\n\n            case FLIGHT_PHASE.DESCENT:\n                if (this.pilot.hasApproachClearance && this.isEstablishedOnCourse()) {\n                    this.setFlightPhase(FLIGHT_PHASE.APPROACH);\n\n                    if (!this.projected) {\n                        EventBus.trigger(AIRCRAFT_EVENT.APPROACH, this);\n                    }\n                }\n\n                break;\n\n            case FLIGHT_PHASE.APPROACH: {\n                if (!this.isOnFinal()) {\n                    break;\n                }\n\n                if (!this.isEstablishedOnGlidepath()) {\n                    this.cancelLanding();\n\n                    break;\n                }\n\n                this.setFlightPhase(FLIGHT_PHASE.LANDING);\n\n                if (!this.projected) {\n                    EventBus.trigger(AIRCRAFT_EVENT.FINAL_APPROACH, this, this.fms.arrivalRunwayModel);\n                }\n\n                break;\n            }\n\n            case FLIGHT_PHASE.LANDING:\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    /**\n     * Calculate the glideslope altitude abeam the current position for the expected landing runway\n     *\n     * @for AircraftModel\n     * @method _calculateArrivalRunwayModelGlideslopeAltitude\n     * @private\n     */\n    _calculateArrivalRunwayModelGlideslopeAltitude() {\n        const runwayModel = this.fms.arrivalRunwayModel;\n        const offset = getOffset(this, runwayModel.relativePosition, runwayModel.angle);\n        const distanceOnFinalKm = offset[1];\n        const glideslopeAltitude = runwayModel.getGlideslopeAltitude(distanceOnFinalKm);\n\n        return glideslopeAltitude;\n    }\n\n    /**\n     * Calculate the heading needed in order for the aircraft to move along a specified angle across the ground\n     * https://www.cliffsnotes.com/study-guides/trigonometry/vectors/vector-operations (see example 2)\n     *\n     * @for AircraftModel\n     * @method _calculateCrabHeadingForGroundTrack\n     * @param {number} groundTrackHeading\n     * @returns {number} magnetic heading, in radians\n     * @private\n     */\n    _calculateCrabHeadingForGroundTrack(groundTrackHeading) {\n        const windVector = AirportController.airport_get().getWindVectorAtAltitude(this.altitude);\n        const windAngle = vradial(windVector);\n        const angleDifference = groundTrackHeading - windAngle;\n        const crabAngle = Math.asin((vlen(windVector) * sin(angleDifference)) / this.trueAirspeed);\n\n        return groundTrackHeading + crabAngle;\n    }\n\n    /**\n     * Calculate the angle across the ground which results from the aircraft's heading and the wind\n     *\n     * @for AircraftModel\n     * @method _calculateGroundTrackForHeading\n     * @param {number} heading\n     * @returns {number} magnetic heading, in radians\n     * @priate\n     */\n    _calculateGroundTrackForHeading(heading) {\n        const headingVector = vscale(vectorize2dFromRadians(heading), this.trueAirspeed);\n        const windVector = AirportController.airport_get().getWindVectorAtAltitude(this.altitude);\n        const groundTrackHeading = vradial(vadd(headingVector, windVector));\n\n        return radians_normalize(groundTrackHeading);\n    }\n\n    /**\n     * Determine the appropriate heading, or ground track, that the aircraft should be attempting to follow\n     * Then, you can use #targetHeading and/or #targetGroundTrack to retrieve the desired information\n     *\n     * @for AircraftModel\n     * @method _updateTargetedDirectionality\n     * @private\n     */\n    _updateTargetedDirectionality() {\n        if (this.mcp.autopilotMode !== MCP_MODE.AUTOPILOT.ON) {\n            return;\n        }\n\n        if (this.flightPhase === FLIGHT_PHASE.LANDING) {\n            this.targetGroundTrack = this._calculateTargetedGroundTrackDuringLanding();\n\n            return;\n        }\n\n        switch (this.mcp.headingMode) {\n            case MCP_MODE.HEADING.OFF: {\n                this.targetHeading = this.heading;\n\n                break;\n            }\n\n            case MCP_MODE.HEADING.HOLD: {\n                this.targetHeading = this.mcp.heading;\n\n                break;\n            }\n\n            case MCP_MODE.HEADING.LNAV: {\n                this.targetGroundTrack = this._calculateTargetedGroundTrackLnav();\n\n                break;\n            }\n\n            case MCP_MODE.HEADING.VOR_LOC: {\n                this.targetGroundTrack = this._calculateTargetedHeadingToInterceptCourse();\n\n                break;\n            }\n\n            default:\n                console.warn('Expected MCP heading mode of \"OFF\", \"HOLD\", \"LNAV\", or \"VOR\", ' +\n                    `but received \"${this.mcp.headingMode}\"`);\n        }\n    }\n\n    /**\n     * Calculate the aircraft's targeted speed\n     *\n     * @for AircraftModel\n     * @method _calculateTargetedSpeed\n     * @private\n     */\n    _calculateTargetedSpeed() {\n        if (this.mcp.autopilotMode !== MCP_MODE.AUTOPILOT.ON) {\n            return;\n        }\n\n        if (this.flightPhase === FLIGHT_PHASE.LANDING) {\n            return this._calculateTargetedSpeedDuringLanding();\n        }\n\n        switch (this.mcp.speedMode) {\n            case MCP_MODE.SPEED.OFF:\n                return this._calculateLegalSpeed(this.speed);\n\n            case MCP_MODE.SPEED.HOLD:\n                return this._calculateLegalSpeed(this.mcp.speed);\n\n                // future functionality\n                // case MCP_MODE.SPEED.LEVEL_CHANGE:\n                //     return;\n\n            case MCP_MODE.SPEED.N1:\n                return this._calculateLegalSpeed(this.model.speed.max);\n\n            case MCP_MODE.SPEED.VNAV: {\n                const vnavSpeed = this._calculateTargetedSpeedVnav();\n\n                return this._calculateLegalSpeed(vnavSpeed);\n            }\n\n            default:\n                console.warn('Expected MCP speed mode of \"OFF\", \"HOLD\", \"LEVEL_CHANGE\", \"N1\", or \"VNAV\", but ' +\n                    `received \"${this.mcp[MCP_MODE_NAME.SPEED]}\"`);\n                return this._calculateLegalSpeed(this.speed);\n        }\n    }\n\n    /**\n     * This method limits the aircraft's speed to a maximum of a specific speed\n     * while below 10,000 feet MSL, to comply with regulations.\n     *\n     * @for AircraftModel\n     * @method _calculateLegalSpeed\n     * @param speed {number} desired speed\n     * @return {number}      permitted speed\n     */\n    _calculateLegalSpeed(speed) {\n        if (this.altitude < 10000) {\n            return Math.min(speed, AIRPORT_CONSTANTS.MAX_SPEED_BELOW_10K_FEET);\n        }\n\n        return speed;\n    }\n\n    /**\n     * Calculate the aircraft's targeted altitude\n     *\n     * @for AircraftModel\n     * @method _calculateTargetedAltitude\n     * @private\n     */\n    _calculateTargetedAltitude() {\n        if (this.mcp.autopilotMode !== MCP_MODE.AUTOPILOT.ON) {\n            return;\n        }\n\n        if (this.flightPhase === FLIGHT_PHASE.LANDING) {\n            return this._calculateTargetedAltitudeDuringLanding();\n        }\n\n        switch (this.mcp.altitudeMode) {\n            case MCP_MODE.ALTITUDE.OFF:\n                return this.altitude;\n\n            case MCP_MODE.ALTITUDE.HOLD:\n                return this.mcp.altitude;\n\n            case MCP_MODE.ALTITUDE.APPROACH:\n                return this._calculateTargetedAltitudeToInterceptGlidepath();\n\n                // future functionality\n                // case MCP_MODE.ALTITUDE.LEVEL_CHANGE:\n                //     return;\n\n                // future functionality\n                // case MCP_MODE.ALTITUDE.VERTICAL_SPEED:\n                //     return;\n\n            case MCP_MODE.ALTITUDE.VNAV: {\n                return this._calculateTargetedAltitudeVnav();\n            }\n\n            default:\n                console.warn('Expected MCP altitude mode of \"OFF\", \"HOLD\", \"APPROACH\", \"LEVEL_CHANGE\", ' +\n                    `\"VERTICAL_SPEED\", or \"VNAV\", but received \"${this.mcp[MCP_MODE_NAME.ALTITUDE]}\"`);\n                break;\n        }\n    }\n\n    /**\n     * Calculate the altitude to target while intercepting a vertically aligned course\n     *\n     * @for AircraftModel\n     * @method _calculateTargetedAltitudeToInterceptGlidepath\n     * @private\n     */\n    _calculateTargetedAltitudeToInterceptGlidepath() {\n        // GENERALIZED CODE\n        // const glideDatum = this.mcp.nav1Datum;\n        // const distanceFromDatum_nm = this.positionModel.distanceToPosition(glideDatum);\n        // const slope = Math.tan(degreesToRadians(3));\n        // const distanceFromDatum_ft = distanceFromDatum_nm * UNIT_CONVERSION_CONSTANTS.NM_FT;\n        // const glideslopeAltitude = glideDatum.elevation + (slope * (distanceFromDatum_ft));\n        // const altitudeToTarget = _clamp(glideslopeAltitude, glideDatum.elevation, this.altitude);\n\n        if (!this.isEstablishedOnCourse()) {\n            return this.mcp.altitude;\n        }\n\n        // ILS SPECIFIC CODE\n        const glideslopeAltitude = this._calculateArrivalRunwayModelGlideslopeAltitude();\n        const altitudeToTarget = Math.min(this.mcp.altitude, glideslopeAltitude);\n\n        return altitudeToTarget;\n    }\n\n    /**\n     * Calculate the heading to target while intercepting a horizontally aligned course\n     *\n     * @for AircraftModel\n     * @method _calculateTargetedHeadingToInterceptCourse\n     * @private\n     */\n    _calculateTargetedHeadingToInterceptCourse() {\n        // Guide aircraft onto the localizer\n        const { course, nav1Datum } = this.mcp;\n        const courseOffset = getOffset(this, nav1Datum.relativePosition, course);\n        const lateralDistanceFromCourseNm = nm(courseOffset[0]);\n        const headingDifference = angle_offset(course, this.heading);\n        const bearingFromAircaftToRunway = this.positionModel.bearingToPosition(nav1Datum);\n        const angleAwayFromLocalizer = course - bearingFromAircaftToRunway;\n        const turnTimeInSeconds = abs(headingDifference) / PERFORMANCE.TURN_RATE; // time to turn headingDifference degrees\n        // TODO: this should be moved to a class method `.getTurningRadius()`\n        const turningRadius = this.speed * (turnTimeInSeconds * TIME.ONE_SECOND_IN_HOURS); // dist covered in the turn, nm\n        const distanceCoveredDuringTurn = turningRadius * abs(headingDifference);\n        const distanceToLocalizer = lateralDistanceFromCourseNm / sin(headingDifference); // dist from localizer intercept, nm\n        const distanceEarly = 0.5; // start turn early, to avoid overshoots from tailwind\n        const shouldAttemptIntercept = (distanceToLocalizer > 0 &&\n            distanceToLocalizer <= distanceCoveredDuringTurn + distanceEarly);\n        const inTheWindow = abs(angleAwayFromLocalizer) < degreesToRadians(1.5); // move to loc regardless of assigned heading\n\n        if (!shouldAttemptIntercept && !inTheWindow) {\n            return this.mcp.heading;\n        }\n        // continue if shouldAttemptIntercept OR inTheWindow\n\n        const severity_of_correction = 20; // controls steepness of heading adjustments during localizer tracking\n        let interceptAngle = angleAwayFromLocalizer * -severity_of_correction;\n        const minimumInterceptAngle = degreesToRadians(10);\n        const isAlignedWithCourse = abs(lateralDistanceFromCourseNm) <=\n            PERFORMANCE.MAXIMUM_DISTANCE_CONSIDERED_ESTABLISHED_ON_APPROACH_COURSE_NM;\n\n        // TODO: This is a patch fix, and it stinks. This whole method needs to be improved greatly.\n        if (inTheWindow || isAlignedWithCourse) {\n            this.target.turn = null;\n\n            return course + interceptAngle;\n        }\n\n        interceptAngle = spread(interceptAngle, -minimumInterceptAngle, minimumInterceptAngle);\n        const interceptHeading = course + interceptAngle;\n\n        // TODO: This should be abstracted\n        if (this.mcp.heading < this.mcp.course) {\n            const headingToFly = Math.max(interceptHeading, this.mcp.heading);\n\n            return headingToFly;\n        }\n\n        if (this.mcp.heading > this.mcp.course) {\n            const headingToFly = Math.min(interceptHeading, this.mcp.heading);\n\n            return headingToFly;\n        }\n    }\n\n    /**\n     * This will update the FIX for the aircraft and will change the aircraft's heading\n     *\n     * @for AircraftModel\n     * @method _calculateTargetedGroundTrackLnav\n     */\n    _calculateTargetedGroundTrackLnav() {\n        if (!this.fms.currentWaypoint) {\n            return new Error('Unable to utilize LNAV, because there are no waypoints in the FMS');\n        }\n\n        if (this.fms.currentWaypoint.isVectorWaypoint) {\n            return this.fms.currentWaypoint.getVector();\n        }\n\n        if (this.fms.currentWaypoint.isHoldWaypoint) {\n            return this._calculateTargetedHeadingHold();\n        }\n\n        const waypointPosition = this.fms.currentWaypoint.positionModel;\n        const distanceToWaypoint = this.positionModel.distanceToPosition(waypointPosition);\n        const groundTrackToWaypoint = this.positionModel.bearingToPosition(waypointPosition);\n        const turnInitiationDistance = calculateTurnInitiationDistance(this, waypointPosition);\n        const isTimeToStartTurning = distanceToWaypoint < turnInitiationDistance;\n        const closeToBeingOverFix = distanceToWaypoint < PERFORMANCE.MAXIMUM_DISTANCE_TO_PASS_WAYPOINT_NM;\n        const closeEnoughToFlyByFix = distanceToWaypoint < PERFORMANCE.MAXIMUM_DISTANCE_TO_FLY_BY_WAYPOINT_NM;\n        const shouldFlyByFix = closeEnoughToFlyByFix && isTimeToStartTurning;\n        let shouldMoveToNextFix = closeToBeingOverFix;\n\n        if (!this.fms.currentWaypoint.isFlyOverWaypoint) {\n            shouldMoveToNextFix = closeToBeingOverFix || shouldFlyByFix;\n        }\n\n        if (shouldMoveToNextFix) {\n            if (!this.fms.hasNextWaypoint()) {\n                // we've hit this block because and aircraft is about to fly over the last waypoint in its flightPlan\n                this.pilot.maintainPresentHeading(this);\n\n                return this.groundTrack;\n            }\n\n            this.fms.moveToNextWaypoint();\n\n            const { currentWaypoint } = this.fms;\n\n            if (currentWaypoint.isVectorWaypoint) {\n                return currentWaypoint.getVector();\n            }\n\n            const nextWaypointPosition = currentWaypoint.positionModel;\n\n            if (_isNil(nextWaypointPosition)) {\n                console.warn('Expected a valid PositionModel object for waypoint ' +\n                    `\"${currentWaypoint.name}\", but received ${nextWaypointPosition}`);\n            }\n\n            return this.positionModel.bearingToPosition(nextWaypointPosition);\n        }\n\n        return groundTrackToWaypoint;\n    }\n\n    /**\n     * This will sets up and prepares the aircraft to hold\n     *\n     * @for AircraftModel\n     * @method _calculateTargetedHeadingHold\n     */\n    _calculateTargetedHeadingHold() {\n        const { currentWaypoint } = this.fms;\n        const { holdParameters } = currentWaypoint;\n        const waypointRelativePosition = currentWaypoint.relativePosition;\n        const bearingToHoldFix = vradial(vsub(waypointRelativePosition, this.relativePosition));\n\n        if (typeof holdParameters.inboundHeading === 'undefined') {\n            // store the current heading as inbound heading, see #836\n            holdParameters.inboundHeading = bearingToHoldFix;\n        }\n\n        const { inboundHeading, legLength } = holdParameters;\n        const outboundHeading = radians_normalize(inboundHeading + Math.PI);\n        const groundTrack = radians_normalize(this.groundTrack);\n        const offset = getOffset(this, waypointRelativePosition, inboundHeading);\n        const gameTime = TimeKeeper.accumulatedDeltaTime;\n        const isPastFix = offset[1] < 1 && offset[2] < 2;\n        const isTimerSet = holdParameters.timer !== INVALID_NUMBER;\n        const isTimerExpired = isTimerSet && gameTime > holdParameters.timer;\n\n        if (isPastFix && !this._isEstablishedOnHoldingPattern) {\n            this._isEstablishedOnHoldingPattern = true;\n        }\n\n        if (!this._isEstablishedOnHoldingPattern) {\n            return bearingToHoldFix;\n        }\n\n        let nextTargetHeading = outboundHeading;\n\n        if (abs(groundTrack - outboundHeading) < PERFORMANCE.MAXIMUM_ANGLE_CONSIDERED_ESTABLISHED_ON_HOLD_COURSE && !isTimerSet) {\n            let holdLegDurationInSeconds;\n\n            if (legLength.indexOf('min') !== -1) {\n                const holdLegDurationInMinutes = legLength.replace('min', '');\n                holdLegDurationInSeconds = holdLegDurationInMinutes * TIME.ONE_MINUTE_IN_SECONDS;\n            } else {\n                // Leg is a distance, use the ground speed to determine the duration\n                const holdLegDistance = legLength.replace('nm', '');\n                holdLegDurationInSeconds = (holdLegDistance / this.groundSpeed) * TIME.ONE_HOUR_IN_SECONDS;\n            }\n\n            currentWaypoint.setHoldTimer(gameTime + holdLegDurationInSeconds);\n        }\n\n        if (isTimerExpired) {\n            nextTargetHeading = bearingToHoldFix;\n\n            if (isPastFix) {\n                currentWaypoint.resetHoldTimer();\n                nextTargetHeading = outboundHeading;\n            }\n        }\n\n        this.target.turn = holdParameters.turnDirection;\n\n        return nextTargetHeading;\n    }\n\n    /**\n     * Calculates the altitude for a landing aircraft\n     *\n     * @for AircraftModel\n     * @method _calculateTargetedAltitudeDuringLanding\n     * @return {number}\n     */\n    _calculateTargetedAltitudeDuringLanding() {\n        const runwayModel = this.fms.arrivalRunwayModel;\n        const offset = getOffset(this, runwayModel.relativePosition, runwayModel.angle);\n        const distanceOnFinal_km = offset[1];\n\n        if (distanceOnFinal_km > 0) {\n            return this._calculateTargetedAltitudeToInterceptGlidepath();\n        }\n\n        return runwayModel.elevation;\n    }\n\n    /**\n     * Calculates the altitude for an aircraft in a VNAV-guided altitude change\n     *\n     * @for AircraftModel\n     * @method _calculateTargetedAltitudeVnav\n     * @return {number}\n     */\n    _calculateTargetedAltitudeVnav() {\n        const altitudeMaximumWaypoint = this.fms.findNextWaypointWithMaximumAltitudeRestriction();\n        const altitudeMinimumWaypoint = this.fms.findNextWaypointWithMinimumAltitudeRestriction();\n        const maximumAltitudeExists = !_isNil(altitudeMaximumWaypoint);\n        const minimumAltitudeExists = !_isNil(altitudeMinimumWaypoint);\n\n        if (this.mcp.altitude < this.altitude) {\n            // we want to descend...\n            if (!minimumAltitudeExists || altitudeMinimumWaypoint.altitudeMinimum < this.mcp.altitude) {\n                // ... and there is nothing that can stop us.\n                return this.mcp.altitude;\n            }\n\n            const { altitudeMinimum } = altitudeMinimumWaypoint;\n\n            if (this.altitude < altitudeMinimum) {\n                // ... but we are too low and we have to comply with VNAV restriction\n                return this._calculateTargetedAltitudeVnavClimb(altitudeMinimumWaypoint);\n            }\n\n            if (maximumAltitudeExists) {\n                const { altitudeMaximum } = altitudeMaximumWaypoint;\n\n                if (this.mcp.altitude > altitudeMaximum) {\n                    // we are too high but we are prioritizing clearance over VNAV restriction\n                    return this.mcp.altitude;\n                }\n\n                if (this.altitude > altitudeMaximum) {\n                    // we are too high...\n                    if (altitudeMinimum > altitudeMaximum) {\n                        // the minimum altitude is above the maximum altiude, check if we can descend all the way down\n                        // without violating VNAV restrictions.\n                        const firstWaypoint = this._findFirstWaypoint(\n                            this.fms.waypoints,\n                            altitudeMinimumWaypoint,\n                            altitudeMaximumWaypoint\n                        );\n\n                        if (firstWaypoint.name === altitudeMinimumWaypoint.name) {\n                            // ... but we can not descend all the way down yet\n                            return this._calculateTargetedAltitudeVnavDescent(altitudeMinimumWaypoint, altitudeMinimum);\n                        }\n                    }\n                    // ...so descend to comply with VNAV restriction\n                    return this._calculateTargetedAltitudeVnavDescent(altitudeMaximumWaypoint, altitudeMaximum);\n                }\n            }\n        } else {\n            // we want to climb...\n            if (!maximumAltitudeExists || this.mcp.altitude < altitudeMaximumWaypoint.altitudeMaximum) {\n                // ... and there is nothing that can stop us.\n                return this.mcp.altitude;\n            }\n\n            const { altitudeMaximum } = altitudeMaximumWaypoint;\n\n            if (this.altitude > altitudeMaximum) {\n                // .. but we are too high and have to comply with NAV restriction\n                return this._calculateTargetedAltitudeVnavDescent(altitudeMaximumWaypoint, altitudeMaximum);\n            }\n\n            if (minimumAltitudeExists) {\n                const { altitudeMinimum } = altitudeMinimumWaypoint;\n\n                if (this.mcp.altitude < altitudeMinimum) {\n                    // we are too low but we are prioritizing clearance over VNAV restriction\n                    return this.mcp.altitude;\n                }\n\n                if (this.altitude < altitudeMinimum) {\n                    // we are too low ...\n                    if (altitudeMaximum < altitudeMinimum) {\n                        // the maximum altitude is below the minimal altiude, check if we can climb all the way up\n                        // without violating VNAV restrictions.\n                        const firstWaypoint = this._findFirstWaypoint(\n                            this.fms.waypoints, altitudeMinimumWaypoint, altitudeMaximumWaypoint\n                        );\n\n                        if (firstWaypoint.name === altitudeMaximumWaypoint.name) {\n                            // ... but we can not climb all the way up yet\n                            return altitudeMaximum;\n                        }\n                    }\n                    // ... climb to comply with VNAV restriction\n                    return this._calculateTargetedAltitudeVnavClimb(altitudeMinimumWaypoint);\n                }\n            }\n\n            return altitudeMaximum;\n        }\n    }\n\n    /**\n     * Takes two waypoints and returns the waypoint that comes first in the list of waypoints\n     *\n     * @for AircraftModel\n     * @method _findFirstWaypoint\n     * @param waypoints\n     * @param waypointA {WaypointModel}\n     * @param waypointB {WaypointModel}\n     * @return waypointA or waypointB {WaypointModel}\n     */\n    _findFirstWaypoint(waypoints, waypointA, waypointB) {\n        const indexOfA = _findIndex(waypoints, (waypoint) => waypoint.name === waypointA.name);\n        const indexOfB = _findIndex(waypoints, (waypoint) => waypoint.name === waypointB.name);\n\n        return indexOfA < indexOfB ? waypointA : waypointB;\n    }\n\n    /**\n     * Calculates the altitude for an aircraft in a VNAV-guided climb\n     *\n     * @for AircraftModel\n     * @method _calculateTargetedAltitudeVnavClimb\n     * @param waypointWithMinimumAltitudeRestriction {WaypointModel}\n     * @return {number}\n     */\n    _calculateTargetedAltitudeVnavClimb(waypointWithMinimumAltitudeRestriction) {\n        const waypointMinimumAltitude = waypointWithMinimumAltitudeRestriction.altitudeMinimum;\n\n        return waypointMinimumAltitude;\n    }\n\n    /**\n     * Calculates the altitude for an aircraft in a VNAV-guided descent\n     *\n     * @for AircraftModel\n     * @method _calculateTargetedAltitudeVnavDescent\n     * @param waypointModel {WaypointModel} the waypoint at which to comply with the restriction\n     * @param targetAltitude {number} the altitude to comply with\n     * @return {number}\n     */\n    _calculateTargetedAltitudeVnavDescent(waypointModel, targetAltitude) {\n        if (!this.isBeyondTopOfDescentForWaypointModel(waypointModel, targetAltitude)) {\n            return;\n        }\n\n        return targetAltitude;\n    }\n\n    /**\n     * Calculates the heading for a landing aircraft\n     *\n     * @for AircraftModel\n     * @method _calculateTargetedGroundTrackDuringLanding\n     * @return {number}\n     */\n    _calculateTargetedGroundTrackDuringLanding() {\n        const runwayModel = this.fms.arrivalRunwayModel;\n        const offset = getOffset(this, runwayModel.relativePosition, runwayModel.angle);\n        const distanceOnFinal_nm = nm(offset[1]);\n\n        if (distanceOnFinal_nm > 0) {\n            const bearingFromAircaftToRunway = this.positionModel.bearingToPosition(runwayModel.positionModel);\n\n            return bearingFromAircaftToRunway;\n        }\n\n        return runwayModel.angle;\n    }\n\n    /**\n     * Calculates the speed for a landing aircraft\n     *\n     * @for AircraftModel\n     * @method _calculateTargetedSpeedDuringLanding\n     * @return {number}\n     */\n    _calculateTargetedSpeedDuringLanding() {\n        let startSpeed = this.speed;\n        const runwayModel = this.fms.arrivalRunwayModel;\n        const offset = getOffset(this, runwayModel.relativePosition, runwayModel.angle);\n        const distanceOnFinal_nm = nm(offset[1]);\n        const stableApproachTimeHours = PERFORMANCE.STABLE_APPROACH_TIME_SECONDS * TIME.ONE_SECOND_IN_HOURS;\n        const stableApproachDistance = this.model.speed.landing * stableApproachTimeHours;\n\n        if (distanceOnFinal_nm <= 0 && this.isOnGround()) {\n            return 0;\n        }\n\n        if (this.mcp.speedMode === MCP_MODE.SPEED.HOLD) {\n            startSpeed = this.mcp.speed;\n        }\n\n        const nextSpeed = extrapolate_range_clamp(\n            stableApproachDistance,\n            distanceOnFinal_nm,\n            AIRPORT_CONSTANTS.FINAL_APPROACH_FIX_DISTANCE_NM,\n            this.model.speed.landing,\n            startSpeed\n        );\n\n        return nextSpeed;\n    }\n\n    /**\n     * Calculates the speed for an aircraft in a VNAV-guided speed change\n     *\n     * @for AircraftModel\n     * @method _calculateTargetedSpeedVnav\n     * @return {number} speed, in knots\n     */\n    _calculateTargetedSpeedVnav() {\n        const nextSpeedMaximumWaypoint = this.fms.findNextWaypointWithMaximumSpeedAtOrBelow(this.speed);\n        const nextSpeedMinimumWaypoint = this.fms.findNextWaypointWithMinimumSpeedAtOrAbove(this.speed);\n        const hasMaximumSpeed = !_isNil(nextSpeedMaximumWaypoint);\n        const hasMinimumSpeed = !_isNil(nextSpeedMinimumWaypoint);\n\n        if (!hasMaximumSpeed && !hasMinimumSpeed) {\n            return this.mcp.speed;\n        }\n\n        if (hasMaximumSpeed && hasMinimumSpeed) {\n            const { waypoints } = this.fms;\n            const indexOfMax = _findIndex(waypoints, (waypoint) => waypoint.name === nextSpeedMaximumWaypoint.name);\n            const indexOfMin = _findIndex(waypoints, (waypoint) => waypoint.name === nextSpeedMinimumWaypoint.name);\n\n            if (indexOfMax < indexOfMin) {\n                return this._calculateTargetedSpeedVnavDeceleration(nextSpeedMaximumWaypoint);\n            }\n\n            return this._calculateTargetedSpeedVnavAcceleration(nextSpeedMinimumWaypoint);\n        }\n\n        if (hasMaximumSpeed) {\n            return this._calculateTargetedSpeedVnavDeceleration(nextSpeedMaximumWaypoint);\n        }\n\n        if (hasMinimumSpeed) {\n            return this._calculateTargetedSpeedVnavAcceleration(nextSpeedMinimumWaypoint);\n        }\n    }\n\n    /**\n     * Calculates the speed for an aircraft in a VNAV-guided acceleration\n     *\n     * @for AircraftModel\n     * @method _calculateTargetedSpeedVnavAcceleration\n     * @param waypointWithMinimumSpeedRestriction {WaypointModel}\n     * @return {number}\n     */\n    _calculateTargetedSpeedVnavAcceleration(waypointWithMinimumSpeedRestriction) {\n        const waypointMinimumSpeed = waypointWithMinimumSpeedRestriction.speedMinimum;\n\n        return Math.min(waypointMinimumSpeed, this.mcp.speed);\n    }\n\n    /**\n     * Calculates the speed for an aircraft in a VNAV-guided deceleration\n     *\n     * @for AircraftModel\n     * @method _calculateTargetedSpeedVnavDeceleration\n     * @param hardRestrictedWaypointModel {WaypointModel}\n     * @return {number}\n     */\n    _calculateTargetedSpeedVnavDeceleration(waypointWithMaximumSpeedRestriction) {\n        const waypointMaximumSpeed = waypointWithMaximumSpeedRestriction.speedMaximum;\n\n        if (!this.isBeyondDecelerationPointForWaypointModel(waypointWithMaximumSpeedRestriction)) {\n            return;\n        }\n\n        return Math.min(waypointMaximumSpeed, this.mcp.speed);\n    }\n\n    // TODO: this method needs a lot of love. its much too long with waaay too many nested if/else ifs.\n    /**\n     * @for AircraftModel\n     * @method updatePhysics\n     */\n    updatePhysics() {\n        if (this.isTaxiing()) {\n            return;\n        }\n\n        if (this.hit) {\n            // 90fps fall rate?...\n            this.altitude -= 90 * TimeKeeper.getDeltaTimeForGameStateAndTimewarp();\n            this.speed *= 0.99;\n\n            return;\n        }\n\n        this.updateAircraftTurnPhysics();\n        this.updateAltitudePhysics();\n\n        if (this.isOnGround()) {\n            this.trend = 0;\n        }\n\n        // SPEED\n        this.updateSpeedPhysics();\n\n        const offsetGameTime = TimeKeeper.accumulatedDeltaTime / GameController.game_speedup();\n        // const nextHistoricalPosition = [\n        //     this.positionModel.relativePosition[0],\n        //     this.positionModel.relativePosition[1],\n        //     offsetGameTime\n        // ];\n\n        // TODO: whats the difference here between the if and else blocks? why are we looking for a 0 length?\n        // TODO: abstract to AircraftPositionHistory class\n        // Trailling\n        if (this.relativePositionHistory.length === 0) {\n            this.relativePositionHistory.push([\n                this.positionModel.relativePosition[0],\n                this.positionModel.relativePosition[1],\n                offsetGameTime\n            ]);\n            // TODO: this can be abstracted\n        } else if (abs(offsetGameTime - this.relativePositionHistory[this.relativePositionHistory.length - 1][2]) >\n            4 / GameController.game_speedup()\n        ) {\n            this.relativePositionHistory.push([\n                this.positionModel.relativePosition[0],\n                this.positionModel.relativePosition[1],\n                offsetGameTime\n            ]);\n        }\n\n        this.updateGroundSpeedPhysics();\n\n        this.distance = vlen(this.positionModel.relativePosition);\n        this.radial = radians_normalize(vradial(this.positionModel.relativePosition));\n    }\n\n    /**\n     * This turns the aircraft if it is not on the ground and has not arived at its destenation\n     *\n     * @for AircraftModel\n     * @method updateAircraftTurnPhysics\n     */\n    updateAircraftTurnPhysics() {\n        if (this.isOnGround() || this.heading === this.targetHeading) {\n            this.target.turn = null;\n\n            return;\n        }\n\n        const secondsElapsed = TimeKeeper.getDeltaTimeForGameStateAndTimewarp();\n        const angle_diff = angle_offset(this.targetHeading, this.heading);\n        const angle_change = PERFORMANCE.TURN_RATE * secondsElapsed;\n\n        // TODO: clean this up if possible, there is a lot of branching logic here\n        if (abs(angle_diff) <= angle_change) {\n            this.heading = this.targetHeading;\n        } else if (this.target.turn) {\n            if (this.target.turn === 'left') {\n                this.heading = radians_normalize(this.heading - angle_change);\n            } else if (this.target.turn === 'right') {\n                this.heading = radians_normalize(this.heading + angle_change);\n            }\n        } else if (angle_diff <= 0) {\n            this.heading = radians_normalize(this.heading - angle_change);\n        } else if (angle_diff > 0) {\n            this.heading = radians_normalize(this.heading + angle_change);\n        }\n    }\n\n    /**\n     * This updates the Altitude for the instance of the aircraft by checking the difference\n     * between current Altitude and requested Altitude\n     *\n     * @for AircraftModel\n     * @method updateAltitudePhysics\n     */\n    updateAltitudePhysics() {\n        this.trend = 0;\n\n        if (this.target.altitude < this.altitude) {\n            this.decreaseAircraftAltitude();\n        } else if (this.target.altitude > this.altitude) {\n            this.increaseAircraftAltitude();\n        }\n    }\n\n    /**\n    * Decreases the aircrafts altitude\n    *\n    * @for AircraftModel\n    * @method decreaseAircraftAltitude\n    */\n    decreaseAircraftAltitude() {\n        const altitude_diff = this.altitude - this.target.altitude;\n        let descentRate = this.model.rate.descent * PERFORMANCE.TYPICAL_DESCENT_FACTOR;\n\n        if (this.mcp.shouldExpediteAltitudeChange || this.isEstablishedOnCourse()) {\n            descentRate = this.model.rate.descent;\n        }\n\n        const feetPerSecond = descentRate * TIME.ONE_SECOND_IN_MINUTES;\n        const feetDescended = feetPerSecond * TimeKeeper.getDeltaTimeForGameStateAndTimewarp();\n\n        if (abs(altitude_diff) < feetDescended) {\n            this.altitude = this.target.altitude;\n            this.mcp.shouldExpediteAltitudeChange = false;\n        } else {\n            this.altitude -= feetDescended;\n        }\n\n        this.trend -= 1;\n    }\n\n    /**\n    * Increases the aircrafts altitude\n    *\n    * @for AircraftModel\n    * @method increaseAircraftAltitude\n    */\n    increaseAircraftAltitude() {\n        const altitude_diff = this.altitude - this.target.altitude;\n        let climbRate = this.getClimbRate() * PERFORMANCE.TYPICAL_CLIMB_FACTOR;\n\n        if (this.mcp.shouldExpediteAltitudeChange || this.isTakeoff()) {\n            climbRate = this.model.rate.climb;\n        }\n\n        const feetPerSecond = climbRate * TIME.ONE_SECOND_IN_MINUTES;\n        const feetClimbed = feetPerSecond * TimeKeeper.getDeltaTimeForGameStateAndTimewarp();\n\n        if (abs(altitude_diff) < abs(feetClimbed)) {\n            this.altitude = this.target.altitude;\n            this.mcp.shouldExpediteAltitudeChange = false;\n        } else {\n            this.altitude += feetClimbed;\n        }\n\n        this.trend = 1;\n    }\n\n    /**\n     * This updates the speed for the instance of the aircraft by checking the\n     * difference between current speed and requested speed\n     *\n     * @for AircraftModel\n     * @method updateWarning\n     */\n    updateSpeedPhysics() {\n        let speedChange = 0;\n        const differenceBetweenPresentAndTargetSpeeds = this.speed - this.target.speed;\n\n        if (differenceBetweenPresentAndTargetSpeeds === 0) {\n            return;\n        }\n\n        if (this.speed > this.target.speed) {\n            speedChange = -this.model.rate.decelerate * TimeKeeper.getDeltaTimeForGameStateAndTimewarp() / 2;\n\n            if (this.isOnGround()) {\n                speedChange *= PERFORMANCE.DECELERATION_FACTOR_DUE_TO_GROUND_BRAKING;\n            }\n        } else if (this.speed < this.target.speed) {\n            speedChange = this.model.rate.accelerate * TimeKeeper.getDeltaTimeForGameStateAndTimewarp() / 2;\n            speedChange *= extrapolate_range_clamp(0, this.speed, this.model.speed.min, 2, 1);\n        }\n\n        this.speed += speedChange;\n\n        if (abs(speedChange) > abs(differenceBetweenPresentAndTargetSpeeds)) {\n            this.speed = this.target.speed;\n        }\n    }\n\n    /**\n     * This calculates the ground speed\n     *\n     * @for AircraftModel\n     * @method updateVectorPhysics\n     * @param scaleSpeed\n     */\n    updateGroundSpeedPhysics() {\n        // TODO: Much of this should be abstracted to helper functions\n\n        // Calculate true air speed vector\n        const indicatedAirspeed = this.speed;\n        const trueAirspeedIncreaseFactor = this.altitude * ENVIRONMENT.DENSITY_ALT_INCREASE_FACTOR_PER_FT;\n        const trueAirspeed = indicatedAirspeed * (1 + trueAirspeedIncreaseFactor);\n        const flightThroughAirVector = vscale(vectorize2dFromRadians(this.heading), trueAirspeed);\n\n        // Calculate ground speed and direction\n        const windVector = AirportController.airport_get().getWindVectorAtAltitude(this.altitude);\n        const flightPathVector = vadd(flightThroughAirVector, windVector);\n        const groundSpeed = vlen(flightPathVector);\n        let groundTrack = vradial(flightPathVector);\n\n        // Prevent aircraft on the ground from being blown off runway centerline when too slow to crab sufficiently\n        if (this.isOnGround()) {\n            // TODO: Aircraft crabbing into the wind will show an increase in groundspeed after they reduce to slower than\n            // the wind speed. This should be corrected so their groundspeed gradually reduces from touchdown spd to 0.\n            groundTrack = this.targetGroundTrack;\n        }\n\n        // Calculate new position\n        const hoursElapsed = TimeKeeper.getDeltaTimeForGameStateAndTimewarp() * TIME.ONE_SECOND_IN_HOURS;\n        const distanceTraveled_nm = groundSpeed * hoursElapsed;\n\n        this.positionModel.setCoordinatesByBearingAndDistance(groundTrack, distanceTraveled_nm);\n\n        this.groundTrack = groundTrack;\n        this.groundSpeed = groundSpeed;\n        this.trueAirspeed = trueAirspeed;\n    }\n\n    // TODO: this method needs a lot of love. its much too long with waaay too many nested if/else ifs.\n    /**\n     * @for AircraftModel\n     * @method updateWarning\n     */\n    updateWarning() {\n        let area;\n        let warning;\n        let status;\n        let new_inside;\n\n        // Ignore other aircraft while taxiing\n        if (this.isTaxiing()) {\n            return;\n        }\n\n        warning = false;\n\n        // restricted areas\n        // players are penalized for each area entry\n        if (this.positionModel) {\n            for (let i = 0; i < this.restricted.list.length; i++) {\n                // TODO: this should be abstracted to a helper function\n                //   Polygon matching procedure:\n                //\n                //   1. Filter polygons by aircraft altitude\n                //   2. For other polygons, measure distance to it (distance_to_poly), then\n                //      substract travelled distance every turn\n                //      If distance is about less than 10 seconds of flight,\n                //      assign distance equal to 10 seconds of flight,\n                //      otherwise planes flying along the border of entering at shallow angle\n                //      will cause too many checks.\n                //   3. if distance has reached 0, check if the aircraft is within the poly.\n                //      If not, redo #2.\n                area = this.restricted.list[i];\n\n                // filter only those relevant by height\n                if (area.data.height < this.altitude) {\n                    area.range = null;\n                    area.inside = false;\n                    continue;\n                }\n\n                // count distance untill the next check\n                if (area.range) {\n                    area.range -= this.groundSpeed;\n                }\n\n                // recalculate for new areas or those that should be checked\n                if (!area.range || area.range <= 0) {\n                    new_inside = point_in_poly(this.positionModel.relativePosition, area.data.poly);\n\n                    // ac has just entered the area: .inside is still false, but st is true\n                    if (new_inside && !area.inside) {\n                        GameController.events_recordNew(GAME_EVENTS.AIRSPACE_BUST);\n                        area.range = this.speed * 1.85 / 3.6 * 50 / 1000; // check in 50 seconds\n                        // speed is kts, range is km.\n                        // if a plane got into restricted area, don't check it too often\n                    } else {\n                        // don't calculate more often than every 10 seconds\n                        area.range = Math.max(\n                            this.speed * 1.85 / 36 / 1000 * 10,\n                            distance_to_poly(this.positionModel.relativePosition, area.data.poly)\n                        );\n                    }\n\n                    area.inside = new_inside;\n                }\n            }\n\n            // this was a $.each() and may need to verified that its working with _forEach()\n            // raise warning if in at least one restricted area\n            _forEach(this.restricted.list, (k, v) => {\n                warning = warning || v.inside;\n            });\n        }\n\n        if (this.terrain_ranges && !this.isOnGround()) {\n            const { terrain } = AirportController.current;\n            const prev_level = this.terrain_ranges[this.terrain_level];\n            const ele = Math.ceil(this.altitude, 1000);\n            const curr_ranges = this.terrain_ranges[ele];\n\n            if (ele !== this.terrain_level) {\n                for (const lev in prev_level) {\n                    prev_level[lev] = Infinity;\n                }\n\n                this.terrain_level = ele;\n            }\n\n            for (const id in curr_ranges) {\n                curr_ranges[id] -= this.groundSpeed;\n\n                if (curr_ranges[id] < 0 || curr_ranges[id] === Infinity) {\n                    area = terrain[ele][id];\n                    status = point_to_mpoly(this.positionModel.relativePosition, area, id);\n\n                    if (status.inside) {\n                        this.altitude = 0;\n\n                        if (!this.hit) {\n                            this.hit = true;\n\n                            const isWarning = true;\n                            UiController.ui_log(`${this.callsign} collided with terrain in controlled flight`, isWarning);\n                            speech_say(\n                                [\n                                    { type: 'callsign', content: this },\n                                    { type: 'text', content: ', we\\'re going down!' }\n                                ],\n                                this.pilotVoice\n                            );\n\n                            GameController.events_recordNew(GAME_EVENTS.COLLISION);\n                        }\n                    } else {\n                        curr_ranges[id] = Math.max(0.2, status.distance);\n                    }\n                }\n            }\n        }\n\n        this.warning = warning;\n    }\n\n    /**\n     * @for AircraftModel\n     * @method update\n     */\n    update() {\n        this.updateFlightPhase();\n        this.updateTarget();\n        this.updatePhysics();\n        this._updateAircraftControllability();\n    }\n\n    /**\n     * @for AircraftModel\n     * @method addConflict\n     * @param {AircraftConflict} conflict\n     * @param {AircraftModel} conflictingAircraft\n     */\n    addConflict(conflict, conflictingAircraft) {\n        this.conflicts[conflictingAircraft.callsign] = conflict;\n    }\n\n    /**\n     * Used to determine if a `conflictingAircraft.callsign` already exists within\n     * the list of known conflicts for an aircaft\n     *\n     * @for AircraftModel\n     * @method hasConflictWithAircraftModel\n     * @param {AircraftModel} conflictingAircraft\n     * @returns {boolean}\n     */\n    hasConflictWithAircraftModel(conflictingAircraftModel) {\n        return conflictingAircraftModel.callsign in this.conflicts;\n    }\n\n    /**\n     * Return the presence/absence of (any existing) conflict or violation in terms\n     * of separation with another aircraft\n     *\n     * @for AircraftModel\n     * @method getAlerts\n     * @return {array} [hasConflict, hasViolation]\n     */\n    getAlerts() {\n        const alert = [false, false];\n\n        for (const i in this.conflicts) {\n            const hasConflict = this.conflicts[i].hasConflict();\n            const hasViolation = this.conflicts[i].hasViolation();\n\n            alert[0] = (alert[0] || hasConflict);\n            alert[1] = (alert[1] || hasViolation);\n\n            if (alert[0] && alert[1]) {\n                return alert;\n            }\n        }\n\n        return alert;\n    }\n\n    /**\n     * @for AircraftModel\n     * @method removeConflict\n     * @param {AircraftModel} conflictingAircraft\n     */\n    removeConflict(conflictingAircraft) {\n        delete this.conflicts[conflictingAircraft.callsign];\n    }\n\n    // TODO: needs better name\n    /**\n     * @for AircraftModel\n     * @method _contactAircraftAfterControllabilityChange\n     * @private\n     */\n    _contactAircraftAfterControllabilityChange() {\n        // Crossing into the center\n        if (this.isControllable) {\n            this.callUp();\n\n            return;\n        }\n\n        this.setIsRemovable();\n        EventBus.trigger(AIRCRAFT_EVENT.AIRSPACE_EXIT, this);\n    }\n\n    /**\n     * @for AircraftModel\n     * @method _updateAircraftControllability\n     * @private\n     */\n    _updateAircraftControllability() {\n        if (this.projected) {\n            return;\n        }\n\n        const isInsideAirspace = this.isInsideAirspace(AirportController.airport_get());\n\n        if (this.isControllable === isInsideAirspace) {\n            return;\n        }\n\n        this.isControllable = isInsideAirspace;\n        this._contactAircraftAfterControllabilityChange();\n    }\n\n    /**\n     * Returns the distance to another aircraft in nm\n     *\n     * @for AircraftModel\n     * @method distanceToAircraft\n     * @param aircraftModel {AircraftModel}\n     * @return {number} distance in nm\n     */\n    distanceToAircraft(anotherAircraftModel) {\n        return this.positionModel.distanceToPosition(anotherAircraftModel.positionModel);\n    }\n\n    /**\n     * Ensure that the provided altitude is valid\n     *\n     * @for AircraftModel\n     * @method validateNextAltitude\n     * @param nextAltitude {number} altitude the aircraft should maintain\n     * @return {array}           [success of operation, readback]\n     */\n    validateNextAltitude(nextAltitude, airportModel) {\n        if (nextAltitude === INVALID_NUMBER) {\n            return [false, 'unable, no altitude assigned'];\n        }\n\n        if (typeof nextAltitude !== 'number') {\n            return [false, `unable to maintain an altitude of ${nextAltitude}`];\n        }\n\n        if (!this.model.isAbleToMaintainAltitude(nextAltitude)) {\n            const readback = {};\n            readback.log = `unable to maintain ${nextAltitude} due to performance`;\n            readback.say = `unable to maintain ${radio_altitude(nextAltitude)} due to performance`;\n\n            return [false, readback];\n        }\n\n        if (nextAltitude < airportModel.minAssignableAltitude) {\n            const minimumAltitude = airportModel.minAssignableAltitude;\n            const readback = {};\n            readback.log = `unable to maintain ${nextAltitude}, the MSA is ${minimumAltitude}`;\n            readback.say = `unable to maintain ${radio_altitude(nextAltitude)}, the MSA is ${radio_altitude(minimumAltitude)}`;\n\n            return [false, readback];\n        }\n\n        return [true];\n    }\n\n    /**\n     * Ensure that the provided speed is valid\n     *\n     * @for AircraftModel\n     * @method validateNextSpeed\n     * @param nextSpeed {number} speed the aircraft should maintain\n     * @return {array}          [success of operation, readback]\n     */\n    validateNextSpeed(nextSpeed) {\n        if (nextSpeed === INVALID_NUMBER) {\n            return [false, 'unable, no speed assigned'];\n        }\n\n        if (typeof nextSpeed !== 'number') {\n            return [false, `unable to maintain a speed of ${nextSpeed}`];\n        }\n\n        if (!this.model.isAbleToMaintainSpeed(nextSpeed)) {\n            const readback = {\n                log: `unable to maintain ${nextSpeed} due to performance`,\n                say: `unable to maintain ${radio_spellOut(nextSpeed)} knots due to performance`\n            };\n\n            return [false, readback];\n        }\n\n        return [true];\n    }\n}\n","import _find from 'lodash/find';\nimport _map from 'lodash/map';\nimport BaseCollection from '../base/BaseCollection';\nimport AircraftTypeDefinitionModel from './AircraftTypeDefinitionModel';\nimport { airlineNameAndFleetHelper } from '../airline/airlineHelpers';\nimport { isEmptyOrNotArray } from '../utilities/validatorUtilities';\n\n/**\n * Collection of `AircraftModel` objects\n *\n * Responsible for creating new `AircraftModel` objects when a spawnInterval\n * fires its `createAircraftWithSpawnPatternModel` callback.\n *\n * This collection also keeps a list of `AircraftTypeDefinitionModel` objects, which define each\n * aircraft type.\n *\n * @class AircraftTypeDefinitionCollection\n * @extends BaseCollection\n */\n/* istanbul ignore next */\nexport default class AircraftTypeDefinitionCollection extends BaseCollection {\n    /**\n     * @constructor\n     * @for AircraftTypeDefinitionCollection\n     * @param aircraftTypeDefinitionList {array<object>}\n     */\n    constructor(aircraftTypeDefinitionList) {\n        super();\n\n        if (isEmptyOrNotArray(aircraftTypeDefinitionList)) {\n            throw new TypeError('Invalid aircraftTypeDefinitionList passed to AircraftTypeDefinitionCollection constructor. ' +\n                `Expected a non-empty array, but received ${typeof aircraftTypeDefinitionList}`);\n        }\n\n        /**\n         * A collection of `AircraftTypeDefinitionModel` objects\n         *\n         * Not using the inherited `_items` property here for readability\n         * and the fact that we need this property to be public.\n         *\n         * @property definitionList\n         * @type {array}\n         * @default []\n         */\n        this.definitionList = [];\n\n        this.init(aircraftTypeDefinitionList);\n    }\n\n    /**\n     * Lifecycle method. Should be run only once on instantiation.\n     *\n     * Initializes instance properties.\n     *\n     * @for AircraftTypeDefinitionCollection\n     * @method init\n     * @param aircraftTypeDefinitionList {array<object>}\n     */\n    init(aircraftTypeDefinitionList) {\n        this.definitionList = this._buildAircraftTypeDefinitionModelList(aircraftTypeDefinitionList);\n    }\n\n    /**\n     * @for AircraftTypeDefinitionCollection\n     * @method findAircraftTypeDefinitionModelByIcao\n     * @param icao {string}\n     * @return {AircraftTypeDefinitionModel}\n     */\n    findAircraftTypeDefinitionModelByIcao(icao) {\n        return _find(this.definitionList, { icao: icao.toUpperCase() });\n    }\n\n    /**\n     * Given an `airlineId`, find a random aircraft type from the airline.\n     *\n     * @for AircraftTypeDefinitionCollection\n     * @method getAircraftDefinitionForAirlineId\n     * @param airlineId {string}\n     * @param airlineModel {AirlineModel}\n     * @return aircraftDefinition {AircraftTypeDefinitionModel}\n     */\n    getAircraftDefinitionForAirlineId(airlineId, airlineModel) {\n        const { fleet } = airlineNameAndFleetHelper([airlineId]);\n        const aircraftType = airlineModel.getRandomAircraftType(fleet).toUpperCase();\n        const aircraftDefinition = _find(this.definitionList, { icao: aircraftType });\n\n        if (typeof aircraftDefinition === 'undefined') {\n            console.error(`Undefined aircraftDefinition found for ${aircraftType}`);\n\n            // recurse through this method if an error is encountered\n            return this.getAircraftDefinitionForAirlineId(airlineId, airlineModel);\n        }\n\n        return aircraftDefinition;\n    }\n\n    /**\n     * Loop through aircraft defined in the `definitionList` and create an\n     * `AircraftTypeDefinitionModel` for each.\n     *\n     * @for AircraftTypeDefinitionCollection\n     * @method _buildAircraftTypeDefinitionModelList\n     * @param aircraftTypeDefinitionList {array}\n     * @return definitionList {array<AircraftTypeDefinitionModel>}\n     * @private\n     */\n    _buildAircraftTypeDefinitionModelList(aircraftTypeDefinitionList) {\n        const definitionList = _map(aircraftTypeDefinitionList, (aircraftDefinition) => {\n            // this is not using a direct return simply for readability\n            return new AircraftTypeDefinitionModel(aircraftDefinition);\n        });\n\n        return definitionList;\n    }\n}\n","import BaseModel from '../base/BaseModel';\nimport { INVALID_NUMBER } from '../constants/globalConstants';\nimport { isEmptyOrNotObject } from '../utilities/validatorUtilities';\nimport { WAKE_TURBULENCE_CATEGORY } from '../constants/aircraftConstants';\nimport { AIRPORT_CONSTANTS } from '../constants/airportConstants';\n\n/**\n * Provides a definition for a specific type of aircraft.\n *\n * Encapsulates an aircraft json file into a JS class that can be used to create an `AircraftModel`.\n *\n * It is important to note that this is not a `type` in the programming sense, this is in reference to\n * a specific aircraft type.\n *\n * @class AircraftTypeDefinitionModel\n * @extends BaseModel\n */\nexport default class AircraftTypeDefinitionModel extends BaseModel {\n    /**\n     * @constructor\n     * @for AircraftTypeDefinitionModel\n     * @param aircraftTypeDefinition {object}\n     */\n    constructor(aircraftTypeDefinition) {\n        super();\n\n        if (isEmptyOrNotObject(aircraftTypeDefinition)) {\n            throw new TypeError('Invalid aircraftTypeDefinition passed to AircraftTypeDefinitionModel constructor. ' +\n                `Expected a non-empty object, but received ${typeof aircraftTypeDefinition}`);\n        }\n\n        /**\n         * Name of the aircratType\n         *\n         * @property name\n         * @type {string}\n         * @default ''\n         */\n        this.name = '';\n\n        /**\n         * ICAO identifier of the aircraftType\n         *\n         * @property icao\n         * @type {string}\n         * @default ''\n         */\n        this.icao = '';\n\n        /**\n         * Icao identifier that includes a weightClass\n         * designation when `Heavy` or `Super`\n         *\n         * @property icaoWithWeightClass\n         * @type {string}\n         * @default ''\n         */\n        this.icaoWithWeightClass = '';\n\n        /**\n         * Describes the number and type of engines\n         *\n         * @property engines\n         * @type {object}\n         * @default null\n         */\n        this.engines = null;\n\n        /**\n         * @property weightClass\n         * @type {string}\n         * @default ''\n         */\n        this.weightClass = '';\n\n        /**\n         * @property category\n         * @type {object}\n         * @default null\n         */\n        this.category = null;\n\n        /**\n         * Maximum safe altitude\n         *\n         * @property ceiling\n         * @type {number}\n         * @default INVALID_NUMBER\n         */\n        this.ceiling = INVALID_NUMBER;\n\n        /**\n         * Describes rate of:\n         * - climb\n         * - descent\n         * - acceleration\n         * - deceleratation\n         *\n         * @property rate\n         * @type {object}\n         * @default null\n         */\n        this.rate = null;\n\n        /**\n         * Takeoff distances needed for landing and Takeoff\n         *\n         * @property runway\n         * @type {object}\n         * @default null\n         */\n        this.runway = null;\n\n        /**\n         * Operating speeds\n         * - minimum\n         * - landing\n         * - cruise\n         * - maximum\n         *\n         * @property speed\n         * @type {object}\n         * @default null\n         */\n        this.speed = null;\n\n        /**\n         * Boolean values for:\n         * - ils\n         * - fix\n         *\n         * @property capability\n         * @type {object}\n         * @default\n         */\n        this.capability = null;\n\n        this.init(aircraftTypeDefinition);\n    }\n\n    /**\n     * Lifecycle method, should be run only once on instantiation.\n     *\n     * Initialize instance properties\n     *\n     * @for AircraftDefinitionModel\n     * @method init\n     * @param aircraftTypeDefinition {object}\n     */\n    init(aircraftTypeDefinition) {\n        this.name = aircraftTypeDefinition.name;\n        this.icao = aircraftTypeDefinition.icao;\n        this.engines = aircraftTypeDefinition.engines;\n        this.weightClass = aircraftTypeDefinition.weightClass;\n        this.category = aircraftTypeDefinition.category;\n        this.ceiling = aircraftTypeDefinition.ceiling;\n        this.rate = aircraftTypeDefinition.rate;\n        this.runway = aircraftTypeDefinition.runway;\n        this.speed = aircraftTypeDefinition.speed;\n        this.capability = aircraftTypeDefinition.capability;\n\n        this.icaoWithWeightClass = this._buildTypeForStripView();\n    }\n\n    /**\n     * Destroy the current instance\n     *\n     * @for AircraftDefinitionModel\n     * @method destroy\n     */\n    destroy() {\n        this.name = '';\n        this.icao = '';\n        this.icaoWithWeightClass = '';\n        this.engines = null;\n        this.weightClass = '';\n        this.category = null;\n        this.ceiling = INVALID_NUMBER;\n        this.rate = null;\n        this.runway = null;\n        this.speed = null;\n        this.capability = null;\n    }\n\n    /**\n     * Build the string used for `#icaoWithWeightClass`\n     *\n     * @for AircraftTypeDefinitionModel\n     * @method _buildTypeForStripView\n     * @return {string}\n     * @private\n     */\n    _buildTypeForStripView() {\n        let aircraftIcao = `${this.icao}/L`;\n\n        const wtc = Object.values(WAKE_TURBULENCE_CATEGORY).find((WTC) => WTC.LETTER === this.weightClass) ?? { APPEND: false };\n\n        if (wtc.APPEND) {\n            aircraftIcao = `${wtc.LETTER}/${this.icao}/L`;\n        }\n\n        return aircraftIcao;\n    }\n\n    /**\n     * @for AircraftTypeDefinitionModel\n     * @method isAbleToMaintainAltitude\n     * @param altitude {Number}\n     * @return {Boolean}\n     */\n    isAbleToMaintainAltitude(altitude) {\n        return altitude <= this.ceiling;\n    }\n\n    /**\n     * @for AircraftTypeDefinitionModel\n     * @method isAbleToMaintainSpeed\n     * @param speed {Number}\n     * @return {Boolean}\n     */\n    isAbleToMaintainSpeed(speed) {\n        return speed >= this.speed.min && speed <= this.speed.max;\n    }\n\n    /**\n     * @for AircraftTypeDefinitionModel\n     * @method isHeavyOrSuper\n     * @returns {Boolean}\n     */\n    isHeavyOrSuper() {\n        return this.weightClass === WAKE_TURBULENCE_CATEGORY.HEAVY.LETTER ||\n            this.weightClass === WAKE_TURBULENCE_CATEGORY.SUPER.LETTER;\n    }\n\n    /**\n     * Returns the minimal distance that is required to a previous aircraft before another aircraft is allowed to use the runway.\n     *\n     * @for AircraftTypeDefinitionModel\n     * @method calculateSameRunwaySeparationDistanceInFeet\n     * @param previousTypeModel {AircraftTypeDefinitionModel} the aircraft type that used the runway before us.\n     * @returns {number} distance in feet\n     */\n    calculateSameRunwaySeparationDistanceInFeet(previousTypeModel) {\n        if (previousTypeModel.isSameRunwaySeparationCatThree()) {\n            return AIRPORT_CONSTANTS.SRS_REDUCED_MINIMA_FEET.CAT3;\n        }\n\n        switch (this.category.srs) {\n            case 1:\n                return AIRPORT_CONSTANTS.SRS_REDUCED_MINIMA_FEET.CAT1;\n            case 2:\n                return AIRPORT_CONSTANTS.SRS_REDUCED_MINIMA_FEET.CAT2;\n            default:\n                return AIRPORT_CONSTANTS.SRS_REDUCED_MINIMA_FEET.CAT3;\n        }\n    }\n\n    /**\n     * Returns true if srs cat 3 is required\n     *\n     * @for AircraftTypeDefinitionModel\n     * @method isSameRunwaySeparationCatThree\n     * @returns true if srs cat 3 is required\n     */\n    isSameRunwaySeparationCatThree() {\n        return typeof this.category.srs === 'undefined' || this.category.srs === 3;\n    }\n\n    /**\n     * Get the weight classifier for an aircraft's callsign, as spoken over the radio\n     *\n     * @for AircraftTypeDefinitionModel\n     * @method getRadioWeightClass\n     * @return {string}\n     */\n    getRadioWeightClass() {\n        return Object.values(WAKE_TURBULENCE_CATEGORY).find((WTC) => WTC.LETTER === this.weightClass)?.SPOKEN ?? '';\n    }\n}\n","import _find from 'lodash/find';\nimport _findLast from 'lodash/findLast';\nimport _includes from 'lodash/includes';\nimport _isEmpty from 'lodash/isEmpty';\nimport _isNil from 'lodash/isNil';\nimport RouteModel from './RouteModel';\nimport AirportController from '../../airport/AirportController';\nimport NavigationLibrary from '../../navigationLibrary/NavigationLibrary';\nimport RunwayModel from '../../airport/runway/RunwayModel';\nimport { isEmptyOrNotObject } from '../../utilities/validatorUtilities';\nimport {\n    FLIGHT_CATEGORY,\n    FLIGHT_PHASE\n} from '../../constants/aircraftConstants';\nimport { INVALID_NUMBER } from '../../constants/globalConstants';\nimport { PROCEDURE_OR_AIRWAY_SEGMENT_DIVIDER } from '../../constants/routeConstants';\n\n/**\n * Provides methods to create, update or replace a flightPlan and the legs\n * and waypoints that make up that flightPlan.\n *\n * This class is concerned only about maintaining the flightPlan, which is\n * really just the collection of `LegModels` and their respective\n * `WaypointModel` objects.\n *\n * This class should always be instantiated from an `AircraftModel` and\n * always instantiated from some form of `spawnPatternModel` using some kind of\n * routeString.\n *\n * This class is always instantiated with a routeString and any changes to the\n * flightPlan must happen with a routeString. For every fix/waypoint called out\n * in a routeString, there must exist a fix in the airport.json file.\n *\n *\n * RouteString examples and the terms used to describe them:\n * - directRouteString: `COWBY`\n *   A directRouteString will equate to a `LegModel` with a single `WaypointModel`.\n *\n * - holdRouteString: `@COWBY`\n *   A holdRouteString will equate to a `LegModel` with a single `WaypointModel` that has holding specifications defined\n *\n * - procedureRouteString: `KLAS.COWBY6.DRK`\n *   A procedureRouteString will equate to a single `LegModel` and possibly many waypoints for the individual waypoints\n *   that make up a procedureRoute (sid/star).\n *\n *\n * - simpleRouteString: `COWBY..DRK`\n * - complexRouteString: `COWBY..@BIKKR..DAG.KEPEC3.KLAS`\n *\n * When working with a complexRouteString, you will also see terms like `directRouteSegment`, `procedureRouteSegment`\n * or `holdRouteSegment`. When the word segment is involved, that means that particular segment is part of a\n * larger, likely complex, routeString.\n *\n *\n * @class Fms\n */\nexport default class Fms {\n    /**\n     * @constructor\n     * @param aircraftInitProps {object}\n     */\n    constructor(aircraftInitProps) {\n        if (isEmptyOrNotObject(aircraftInitProps)) {\n            throw new TypeError('Invalid aircraftInitProps passed to Fms constructor. ' +\n                `Expected a non-empty object, but received ${typeof aircraftInitProps}`);\n        }\n\n        /**\n         * Airport the aircraft arrives at\n         *\n         * @for Fms\n         * @property arrivalAirportModel\n         * @type {AirportModel}\n         */\n        this.arrivalAirportModel = null;\n\n        /**\n         * Runway used at arrival airport\n         *\n         * @for Fms\n         * @property arrivalRunwayModel\n         * @type {RunwayModel}\n         */\n        this.arrivalRunwayModel = null;\n\n        /**\n         * Current flight phase of an aircraft\n         *\n         * @property currentPhase\n         * @type {string}\n         * @default ''\n         */\n        this.currentPhase = '';\n\n        /**\n         * Airport the aircraft departs from\n         *\n         * @for Fms\n         * @property departureAirportModel\n         * @type {AirportModel}\n         */\n        this.departureAirportModel = null;\n\n        /**\n         * Runway used at departure airport\n         *\n         * @for Fms\n         * @property departureRunwayModel\n         * @type {RunwayModel}\n         */\n        this.departureRunwayModel = null;\n\n        // TODO: This value should NOT be changed 'as ATC amends it'\n        /**\n         * Altitude expected for this flight. Will change as ATC amends it.\n         *\n         * @property flightPlanAltitude\n         * @type {number}\n         * @default INVALID_NUMBER\n         */\n        this.flightPlanAltitude = INVALID_NUMBER;\n\n        /**\n         * Flight plan route for this aircraft, containing lateral and vertical guidance\n         *\n         * @for Fms\n         * @property _routeModel\n         * @type {RouteModel}\n         * @private\n         */\n        this._routeModel = null;\n\n        this.init(aircraftInitProps);\n    }\n\n    /**\n     * The active Leg in the `legCollection`\n     *\n     * Assumed to ALWAYS be the first `LegModel` in the `legCollection`\n     *\n     * @property currentLeg\n     * @type {LegModel}\n     */\n    get currentLeg() {\n        return this._routeModel.currentLeg;\n    }\n\n    /**\n     * The active waypoint an aircraft is flying towards\n     *\n     * Assumed to ALWAYS be the first `WaypointModel` in the `currentLeg`\n     *\n     * @property currentWaypoint\n     * @type {WaypointModel}\n     */\n    get currentWaypoint() {\n        return this._routeModel.currentWaypoint;\n    }\n\n    /**\n     * Return the next waypoint which has an altitude restriction\n     *\n     * @for Fms\n     * @property nextAltitudeRestrictedWaypoint\n     * @type {WaypointModel}\n     */\n    get nextAltitudeRestrictedWaypoint() {\n        const waypoints = this.getAltitudeRestrictedWaypoints();\n\n        return waypoints[0];\n    }\n\n    /**\n     * Return the next waypoint which has an \"AT\" altitude restriction\n     *\n     * @for Fms\n     * @property nextHardAltitudeRestrictedWaypoint\n     * @type {WaypointModel}\n     */\n    get nextHardAltitudeRestrictedWaypoint() {\n        const waypoints = this.getAltitudeRestrictedWaypoints()\n            .filter((waypoint) => waypoint.altitudeMaximum === waypoint.altitudeMinimum);\n\n        return waypoints[0];\n    }\n\n    /**\n     * Return the next waypoint which has an \"AT\" speed restriction\n     *\n     * @for Fms\n     * @property nextHardSpeedRestrictedWaypoint\n     * @type {WaypointModel}\n     */\n    get nextHardSpeedRestrictedWaypoint() {\n        const waypoints = this.getSpeedRestrictedWaypoints()\n            .filter((waypoint) => waypoint.speedMaximum === waypoint.speedMinimum);\n\n        return waypoints[0];\n    }\n\n    /**\n     * Return the next waypoint which has an altitude or speed restriction\n     *\n     * @for Fms\n     * @property nextRestrictedWaypoint\n     * @type {WaypointModel}\n     */\n    get nextRestrictedWaypoint() {\n        const waypoints = this.getRestrictedWaypoints();\n\n        return waypoints[0];\n    }\n\n    /**\n     * Return the next waypoint which has a speed restriction\n     *\n     * @for Fms\n     * @property nextSpeedRestrictedWaypoint\n     * @type {WaypointModel}\n     */\n    get nextSpeedRestrictedWaypoint() {\n        const waypoints = this.getSpeedRestrictedWaypoints();\n\n        return waypoints[0];\n    }\n\n    /**\n     * Get the next waypoint in the flight plan, if it exists\n     *\n     * @for Fms\n     * @property nextWaypoint\n     * @type {WaypointModel}\n     */\n    get nextWaypoint() {\n        return this._routeModel.nextWaypoint;\n    }\n\n    /**\n     * Return an array of all waypoints in all legs of the route\n     *\n     * @for Fms\n     * @property waypoints\n     * @type {array<WaypointModel>}\n     */\n    get waypoints() {\n        return this._routeModel.waypoints;\n    }\n\n    // ------------------------------ LIFECYCLE ------------------------------\n\n    /**\n     * Initialize instance properties\n     *\n     * @for Fms\n     * @method init\n     * @param aircraftInitProps {object}\n     * @chainable\n     */\n    init(aircraftInitProps) {\n        const {\n            altitude,\n            category,\n            destination,\n            model,\n            nextFix,\n            origin,\n            routeString\n        } = aircraftInitProps;\n\n        this._routeModel = new RouteModel(routeString);\n\n        this._verifyRouteContainsMultipleWaypoints();\n        this._initializeFlightPhaseForCategory(category);\n        this._initializeAirportsAndRunways(origin, destination);\n        this._initializeFlightPlanAltitude(altitude, category, model);\n        this._initializePositionInRouteToBeginAtFixName(nextFix, category);\n\n        return this;\n    }\n\n    /**\n     * Reset instance properties\n     *\n     * @for LegModel\n     * @method reset\n     * @chainable\n     */\n    reset() {\n        this.arrivalAirportModel = null;\n        this.arrivalRunwayModel = null;\n        this.currentPhase = '';\n        this.departureAirportModel = null;\n        this.departureRunwayModel = null;\n        this.flightPlanAltitude = INVALID_NUMBER;\n        this._routeModel = null;\n\n        return this;\n    }\n\n    /**\n     * Initialize `#arrivalAirportModel`+`#arrivalRunwayModel` and/or\n     * `#departureAirportModel`+`#departureRunwayModel` as applicable\n     *\n     * @for Fms\n     * @method _initializeAirportsAndRunways\n     * @param origin {string} ICAO identifier specified by spawn pattern\n     * @param destination {string} ICAO identifier specified by spawn pattern\n     * @private\n     */\n    _initializeAirportsAndRunways(origin, destination) {\n        const originLowerCase = origin.toLowerCase();\n        const destinationLowerCase = destination.toLowerCase();\n\n        if (originLowerCase === AirportController.current.icao) {\n            this._initializeDepartureAirport(origin);\n            this._initializeDepartureRunway();\n        }\n\n        if (destinationLowerCase === AirportController.current.icao) {\n            this._initializeArrivalAirport(destination);\n            this._initializeArrivalRunway();\n        }\n    }\n\n    /**\n     * Initialize `#arrivalAirportModel`\n     *\n     * @for Fms\n     * @method _initializeArrivalAirport\n     * @param destinationIcao {string} ICAO identifier specified by spawn pattern\n     * @private\n     */\n    _initializeArrivalAirport(destinationIcao) {\n        this.arrivalAirportModel = AirportController.airport_get(destinationIcao);\n    }\n\n    /**\n     * Initialize `#arrivalRunwayModel`\n     *\n     * @for Fms\n     * @method _initializeArrivalRunway\n     * @private\n     */\n    _initializeArrivalRunway() {\n        if (!this.arrivalAirportModel) {\n            return;\n        }\n\n        const arrivalRunwayName = this._routeModel.getArrivalRunwayName();\n\n        if (!arrivalRunwayName) {\n            this.setArrivalRunway(this.arrivalAirportModel.arrivalRunwayModel);\n\n            return;\n        }\n\n        const arrivalRunwayModel = this.arrivalAirportModel.getRunway(arrivalRunwayName);\n\n        this.setArrivalRunway(arrivalRunwayModel);\n    }\n\n    /**\n     * Initialize `#departureAirportModel`\n     *\n     * @for Fms\n     * @method _initializeDepartureAirport\n     * @param originIcao {string} ICAO identifier specified by spawn pattern\n     * @private\n     */\n    _initializeDepartureAirport(originIcao) {\n        this.departureAirportModel = AirportController.airport_get(originIcao);\n    }\n\n    /**\n     * Initialize `#departureRunwayModel`\n     *\n     * @for Fms\n     * @method _initializeDepartureRunway\n     * @private\n     */\n    _initializeDepartureRunway() {\n        if (!this.departureAirportModel) {\n            return;\n        }\n\n        const departureRunwayName = this._routeModel.getDepartureRunwayName();\n\n        if (!departureRunwayName) {\n            return this.setDepartureRunway(this.departureAirportModel.departureRunwayModel);\n        }\n\n        const departureRunwayModel = this.departureAirportModel.getRunway(departureRunwayName);\n\n        this.setDepartureRunway(departureRunwayModel);\n    }\n\n    /**\n     * Initialize `#currentPhase` as appropriate based on the spawn category\n     *\n     * @for Fms\n     * @method _initializeFlightPhaseForCategory\n     * @param category {string}\n     * @private\n     */\n    _initializeFlightPhaseForCategory(category) {\n        switch (category) {\n            case FLIGHT_CATEGORY.ARRIVAL:\n            case FLIGHT_CATEGORY.OVERFLIGHT:\n                return this.setFlightPhase(FLIGHT_PHASE.CRUISE);\n\n            case FLIGHT_CATEGORY.DEPARTURE:\n                return this.setFlightPhase(FLIGHT_PHASE.APRON);\n\n            default:\n                throw new TypeError(`Expected known spawn pattern category, but received \"${category}\"`);\n        }\n    }\n\n    /**\n     * Initialize `#flightPlanAltitude`\n     *\n     * @for Fms\n     * @method _initializeFlightPlanAltitude\n     * @param altitude {number}\n     * @param category {string} one of `FLIGHT_CATEGORY` enum\n     * @param model {AircraftTypeDefinitionModel}\n     * @private\n     */\n    _initializeFlightPlanAltitude(altitude, category, model) {\n        this.flightPlanAltitude = altitude;\n\n        if (category === FLIGHT_CATEGORY.DEPARTURE && !altitude) {\n            this.flightPlanAltitude = model.ceiling;\n        }\n    }\n\n    /**\n     * Skip ahead to the first waypoint a freshly created FMS should be going to\n     *\n     * This method is available because we have the ability to spawn aircraft\n     * in \"the middle\" of any route, rather than requiring them to fly their\n     * route from the beginning. This way, we have the choice to place the aircraft\n     * wherever we want along the route without having to change its contents.\n     *\n     * This method takes an argument that specifies which fix to go to after spawn,\n     * and if not specified, the FMS will target the second fix (because they are)\n     * spawned AT the first fix.\n     *\n     * @for Fms\n     * @method _initializePositionInRouteToBeginAtFixName\n     * @param fixName {string}\n     * @private\n     */\n    _initializePositionInRouteToBeginAtFixName(fixName, category) {\n        if (category === FLIGHT_CATEGORY.DEPARTURE) {\n            return;\n        }\n\n        if (_isNil(fixName)) {\n            return this.moveToNextWaypoint();\n        }\n\n        if (!this._routeModel.hasWaypointName(fixName)) {\n            throw new TypeError(`Expected initial fix to be in flight plan route, but received '${fixName}'`);\n        }\n\n        this.skipToWaypointName(fixName);\n    }\n\n    // ------------------------------ PUBLIC ------------------------------\n\n    /**\n     * Mark the specified waypoint as a hold waypoint\n     *\n     * @for Fms\n     * @method activateHoldForWaypointName\n     * @param waypointName {string} name of waypoint in route\n     * @param holdParameters {object}\n     * @param fallbackInboundHeading {number} an optional inboundHeading that is used if no default is available\n     * @returns {array} [success of operation, readback-error OR holdParameters ]\n     */\n    activateHoldForWaypointName(waypointName, holdParameters, fallbackInboundHeading = undefined) {\n        if (!this._routeModel.hasWaypointName(waypointName)) {\n            return [false, {\n                log: `unable to hold at ${waypointName.toUpperCase()}; it is not on our route!`,\n                say: `unable to hold at ${NavigationLibrary.getFixSpokenName(waypointName)}; it is not on our route!`\n            }];\n        }\n\n        return [true, this._routeModel.activateHoldForWaypointName(waypointName, holdParameters, fallbackInboundHeading)];\n    }\n\n    /**\n     * Apply the specified route, and as applicable, merge it with the current route\n     *\n     * @for Fms\n     * @method applyPartialRouteAmendment\n     * @param routeString {tring}  route string in the form of `entry.procedure.airport`\n     * @return {array}             [success of operation, readback]\n     */\n    applyPartialRouteAmendment(routeString) {\n        let nextRouteModel;\n\n        try {\n            nextRouteModel = new RouteModel(routeString);\n        } catch (error) {\n            console.error(error);\n\n            return [false, `requested route of \"${routeString.toUpperCase()}\" is invalid`];\n        }\n\n        return this._routeModel.absorbRouteModel(nextRouteModel);\n    }\n\n    /**\n     * Return the waypoint that matches the provided name\n     *\n     * @for Fms\n     * @method findWaypoiont\n     * @param waypointName {string} name of the waypoint\n     * @return {WaypointModel}\n     */\n    findWaypoint(waypointName) {\n        const name = waypointName.toUpperCase();\n\n        return _find(this.waypoints, (waypoint) => waypoint.name === name);\n    }\n\n    /**\n     * Return the next waypoint having an #altitudeMaximum equal to or less than the specified value\n     *\n     * This is helpful to see only future waypoints for which a particular altitude is\n     * considered NOT to be compliant. This allows us to focus which waypoints the aircraft\n     * will need to adjust altitude for, even if they are many waypoints in the future.\n     *\n     * @for Fms\n     * @method findNextWaypointWithMaximumAltitudeAtOrBelow\n     * @param altitude {number}\n     * @return {WaypointModel}\n     */\n    findNextWaypointWithMaximumAltitudeAtOrBelow(altitude) {\n        return _find(this.waypoints, (waypointModel) => waypointModel.hasMaximumAltitudeAtOrBelow(altitude));\n    }\n\n    /**\n     * Return the next waypoint having an #altitudeMaximum restriction\n     *\n     * @for Fms\n     * @method findNextWaypointWithMaximumAltitudeRestriction\n     * @return {WaypointModel}\n     */\n    findNextWaypointWithMaximumAltitudeRestriction() {\n        return _find(this.waypoints, (waypointModel) => waypointModel.hasAltiudeMaximumRestriction);\n    }\n\n    /**\n     * Return the next waypoint having a #speedMaximum equal to or less than the specified value\n     *\n     * This is helpful to see only future waypoints for which a particular speed is\n     * considered NOT to be compliant. This allows us to focus which waypoints the aircraft\n     * will need to adjust speed for, even if they are many waypoints in the future.\n     *\n     * @for Fms\n     * @method findNextWaypointWithMaximumSpeedAtOrBelow\n     * @param speed {number}\n     * @return {WaypointModel}\n     */\n    findNextWaypointWithMaximumSpeedAtOrBelow(speed) {\n        return _find(this.waypoints, (waypointModel) => waypointModel.hasMaximumSpeedAtOrBelow(speed));\n    }\n\n    /**\n     * Return the next waypoint having an #altitudeMinimum equal to or greater than the specified value\n     *\n     * This is helpful to see only future waypoints for which a particular altitude is\n     * considered NOT to be compliant. This allows us to focus which waypoints the aircraft\n     * will need to adjust altitude for, even if they are many waypoints in the future.\n     *\n     * @for Fms\n     * @method findNextWaypointWithMinimumAltitudeAtOrAbove\n     * @param altitude {number}\n     * @return {WaypointModel}\n     */\n    findNextWaypointWithMinimumAltitudeAtOrAbove(altitude) {\n        return _find(this.waypoints, (waypointModel) => waypointModel.hasMinimumAltitudeAtOrAbove(altitude));\n    }\n\n    /**\n     * Return the next waypoint having an #altitudeMinimum restriction\n     *\n     * @for Fms\n     * @method findNextWaypointWithMinimumAltitudeRestriction\n     * @return {WaypointModel}\n     */\n    findNextWaypointWithMinimumAltitudeRestriction() {\n        return _find(this.waypoints, (waypointModel) => waypointModel.hasAltiudeMinimumRestriction);\n    }\n\n    /**\n     * Return the next waypoint having a #speedMinimum equal to or greater than the specified value\n     *\n     * This is helpful to see only future waypoints for which a particular speed is\n     * considered NOT to be compliant. This allows us to focus which waypoints the aircraft\n     * will need to adjust speed for, even if they are many waypoints in the future.\n     *\n     * @for Fms\n     * @method findNextWaypointWithMinimumSpeedAtOrAbove\n     * @param speed {number}\n     * @return {WaypointModel}\n     */\n    findNextWaypointWithMinimumSpeedAtOrAbove(speed) {\n        return _find(this.waypoints, (waypointModel) => waypointModel.hasMinimumSpeedAtOrAbove(speed));\n    }\n\n    /**\n     * Return an array of waypoints in the flight plan that have altitude restrictions\n     *\n     * @for Fms\n     * @method getAltitudeRestrictedWaypoints\n     * @return {array<WaypointModel>}\n     */\n    getAltitudeRestrictedWaypoints() {\n        return this._routeModel.getAltitudeRestrictedWaypoints();\n    }\n\n    /**\n     * Returns the lowest bottom altitude of any `LegModel` in the `#_legCollection`\n     *\n     * @for Fms\n     * @method getBottomAltitude\n     * @return {number}\n     */\n    getBottomAltitude() {\n        return this._routeModel.getBottomAltitude();\n    }\n\n    /**\n     * Get the full flight plan route string with legs separated by spaces\n     *\n     * @for Fms\n     * @method getFullRouteStringWithoutAirportsWithSpaces\n     * @return {string}\n     */\n    getFullRouteStringWithoutAirportsWithSpaces() {\n        return this._routeModel.getFullRouteStringWithoutAirportsWithSpaces();\n    }\n\n    /**\n     * Return the first fix in a flightPlan or the exit fix of\n     * the current SID procedure\n     *\n     * Primarily used for aircraft dataBlock\n     *\n     * @for Fms\n     * @method getFlightPlanEntry\n     * @returns {string} First fix in flightPlan or exit fix of SID\n     */\n    getFlightPlanEntry() {\n        return this._routeModel.getFlightPlanEntry();\n    }\n\n    /**\n     * Get the position of the next waypoint in the flight plan\n     *\n     * Currently only used in `calculateTurnInitiationDistance()` helper function\n     *\n     * @for Fms\n     * @method getNextWaypointPositionModel\n     * @return waypointPosition {StaticPositionModel}\n     */\n    getNextWaypointPositionModel() {\n        return this.nextWaypoint.positionModel;\n    }\n\n    /**\n     * Return an array of waypoints in the flight plan that have altitude or speed restrictions\n     *\n     * @for Fms\n     * @method getRestrictedWaypoints\n     * @return {array<WaypointModel>}\n     */\n    getRestrictedWaypoints() {\n        return this.waypoints.filter((waypoint) => waypoint.hasRestriction);\n    }\n\n    /**\n     * Get the flight plan route string in dot notation\n     *\n     * @for Fms\n     * @method getRouteString\n     * @return {string}\n     */\n    getRouteString() {\n        return this._routeModel.getRouteString();\n    }\n\n    /**\n     * Get the flight plan route string with legs separated by spaces\n     *\n     * This is primarily meant for use in the `StripViewModel`.\n     *\n     * @for Fms\n     * @method getRouteStringWithSpaces\n     * @return {string}\n     */\n    getRouteStringWithSpaces() {\n        return this._routeModel.getRouteStringWithSpaces();\n    }\n\n    /**\n     * Facade for #_routeModel.getSidIcao\n     *\n     * @for Fms\n     * @method getSidIcao\n     * @return {string}\n     */\n    getSidIcao() {\n        return this._routeModel.getSidIcao();\n    }\n\n    /**\n     * Facade for #_routeModel.getSidName\n     *\n     * @for Fms\n     * @method getSidName\n     * @return {string}\n     */\n    getSidName() {\n        return this._routeModel.getSidName();\n    }\n\n    /**\n     * Facade for #_routeModel.getInitialClimbClearance\n     *\n     * @for Fms\n     * @method getInitialClimbClearance\n     * @return {number}\n     */\n    getInitialClimbClearance() {\n        return this._routeModel.getInitialClimbClearance();\n    }\n\n    /**\n     * Return an array of waypoints in the flight plan that have speed restrictions\n     *\n     * @for Fms\n     * @method getSpeedRestrictedWaypoints\n     * @return {array<WaypointModel>}\n     */\n    getSpeedRestrictedWaypoints() {\n        return this.waypoints.filter((waypoint) => waypoint.hasSpeedRestriction);\n    }\n\n    /**\n     * Returns the highest top altitude of any `LegModel` in the `#_legCollection`\n     *\n     * @for LegModel\n     * @method getTopAltitude\n     * @return {number}\n     */\n    getTopAltitude() {\n        return this._routeModel.getTopAltitude();\n    }\n\n    /**\n     * Return whether the route contains a waypoint after the currently active one\n     *\n     * @for Fms\n     * @method hasNextWaypoint\n     * @return {boolean}\n     */\n    hasNextWaypoint() {\n        return this._routeModel.hasNextWaypoint();\n    }\n\n    /**\n     * Return whether the route contains a waypoint with the specified name\n     *\n     * @for Fms\n     * @method hasWaypointName\n     * @param waypointName {string}\n     * @return {boolean}\n     */\n    hasWaypointName(waypointName) {\n        return this._routeModel.hasWaypointName(waypointName);\n    }\n\n    /**\n     * Returns whether this is an arrival to an airport we control\n     *\n     * @for Fms\n     * @method isArrival\n     * @return {boolean}\n     */\n    isArrival() {\n        return !_isNil(this.arrivalAirportModel);\n    }\n\n    /**\n     * Returns whether this is a departure from an airport we control\n     *\n     * @for Fms\n     * @method isDeparture\n     * @return {boolean}\n     */\n    isDeparture() {\n        return !_isNil(this.departureAirportModel);\n    }\n\n    /**\n     * Returns whether this is an overflight\n     *\n     * @for Fms\n     * @method isDeparture\n     * @return {boolean}\n     */\n    isOverflight() {\n        return !this.isArrival() && !this.isDeparture;\n    }\n\n    /**\n     * Facade for `#_routeModel.isRunwayModelValidForSid()`\n     *\n     * Other classes will not have access to the `#_routeModel`, but can use this\n     * facade to determine whether or not a given runway assignment is allowable,\n     * given the departure procedure in the `#_routeModel`.\n     *\n     * @for Fms\n     * @method isRunwayModelValidForSid\n     * @param runwayModel {RunwayModel}\n     * @return {boolean}\n     */\n    isRunwayModelValidForSid(runwayModel) {\n        return this._routeModel.isRunwayModelValidForSid(runwayModel);\n    }\n\n    /**\n     * Facade for `#_routeModel.isRunwayModelValidForStar()`\n     *\n     * Other classes will not have access to the `#_routeModel`, but can use this\n     * facade to determine whether or not a given runway assignment is allowable,\n     * given the arrival procedure in the `#_routeModel`.\n     *\n     * @for Fms\n     * @method isRunwayModelValidForStar\n     * @param runwayModel {RunwayModel}\n     * @return {boolean}\n     */\n    isRunwayModelValidForStar(runwayModel) {\n        return this._routeModel.isRunwayModelValidForStar(runwayModel);\n    }\n\n    /**\n     * Move to the next possible waypoint\n     *\n     * This could be the next waypoint in the current leg,\n     * or the first waypoint in the next leg.\n     *\n     * @for LegModel\n     * @method moveToNextWaypoint\n     */\n    moveToNextWaypoint() {\n        return this._routeModel.moveToNextWaypoint();\n    }\n\n    /**\n     * Find the arrival procedure (if it exists) within the `#legCollection` and\n     * reset it with a new arrival procedure.\n     *\n     * This method does not remove any `LegModel`s. It instead finds and updates a\n     * `LegModel` with a new routeString. If a `LegModel` without a arrival\n     * procedure cannot be found, then we create a new `LegModel` and place it\n     * at the end of the `#legCollection`.\n     *\n     * @for Fms\n     * @method replaceArrivalProcedure\n     * @param routeString {string}\n     * @return {array<boolean, string>}\n     */\n    replaceArrivalProcedure(routeString) {\n        const routeStringElements = routeString.toUpperCase().split(PROCEDURE_OR_AIRWAY_SEGMENT_DIVIDER);\n\n        if (routeStringElements.length !== 3) {\n            return [false, 'arrival procedure format not understood'];\n        }\n\n        const procedureId = routeStringElements[1];\n\n        if (!NavigationLibrary.hasProcedure(procedureId)) {\n            return [false, `unknown procedure \"${procedureId}\"`];\n        }\n\n        const wasSuccessful = this._routeModel.replaceArrivalProcedure(routeString);\n\n        if (wasSuccessful) {\n            this._updateArrivalRunwayFromRoute();\n\n            return [true, ''];\n        }\n\n        return [false, `route of \"${routeString}\" is not valid`];\n    }\n\n    /**\n     * Replace departure procedure and departure runway\n     *\n     * @for Fms\n     * @method replaceDepartureProcedure\n     * @param routeString {string}\n     * @return {boolean}\n     */\n    replaceDepartureProcedure(routeString, airportIcao) {\n        const routeStringElements = routeString.toUpperCase().split(PROCEDURE_OR_AIRWAY_SEGMENT_DIVIDER);\n\n        if (routeStringElements.length > 3) {\n            return [false, 'departure procedure format not understood'];\n        }\n\n        let procedureId = routeStringElements[0];\n\n        if (routeStringElements.length === 3) { // if the runway IS specified in the route string\n            procedureId = routeStringElements[1];\n        }\n\n        const sidModel = NavigationLibrary.getProcedure(procedureId);\n\n        if (_isNil(sidModel)) {\n            return [false, `unknown procedure \"${procedureId}\"`];\n        }\n\n        if (routeStringElements.length === 1) { // RouteString looks like PROC\n            const exitPoint = _findLast(this.waypoints, (waypointModel) => sidModel.hasExit(waypointModel.name));\n\n            if (!exitPoint) {\n                return [false, `the ${procedureId.toUpperCase()} departure doesn't have an exit along our route`];\n            }\n\n            routeStringElements.push(exitPoint.name);\n        }\n\n        if (routeStringElements.length === 2) { // RouteString looks like PROC.EXIT\n            const expectedRunwayModel = this.departureRunwayModel;\n            let entryPoint = `${airportIcao.toUpperCase()}${expectedRunwayModel.name}`;\n\n            if (!sidModel.hasEntry(entryPoint)) {\n                entryPoint = sidModel.getFirstEntryPoint();\n\n                if (_isEmpty(entryPoint)) {\n                    return [false, `the '${procedureId}' departure has no valid entry points`];\n                }\n            }\n\n            routeStringElements.unshift(entryPoint);\n        }\n\n        const nextRouteString = routeStringElements.join(PROCEDURE_OR_AIRWAY_SEGMENT_DIVIDER);\n        const readback = this._routeModel.replaceDepartureProcedure(nextRouteString);\n\n        if (readback[0]) {\n            this._updateDepartureRunwayFromRoute();\n        }\n\n        return readback;\n    }\n\n    // TODO: we may need to update the runway in this method\n    /**\n     * Replace the current route with an entirely new one\n     *\n     * If route contains the same waypoint as the current waypoint, skip to that waypoint\n     * and continue along the new route. This is a somewhat questionable strategy, but\n     * has the advantage of supporting reroutes done in the middle of the flight,\n     * whereas without this approach, the aircraft would turn around to the very first\n     * waypoint as soon as they are rerouted.\n     *\n     * @for Fms\n     * @method replaceFlightPlanWithNewRoute\n     * @param routeString {string}\n     * @return {boolean} whether the operation was successful\n     */\n    replaceFlightPlanWithNewRoute(routeString) {\n        const currentWaypointName = this.currentWaypoint.name;\n        let nextRouteModel;\n\n        try {\n            nextRouteModel = new RouteModel(routeString);\n        } catch (error) {\n            console.error(error);\n\n            const readback = {};\n            readback.log = `requested route of \"${routeString}\" is invalid`;\n            readback.say = 'that route is invalid';\n\n            return [false, readback];\n        }\n\n        this._routeModel = nextRouteModel;\n\n        this.skipToWaypointName(currentWaypointName);\n\n        // Build readback\n        const readback = {};\n        readback.log = `rerouting to: ${this.getRouteStringWithSpaces()}`;\n        readback.say = 'rerouting as requested';\n\n        return [true, readback];\n    }\n\n    /**\n     * Verify and then set the value of `#arrivalRunwayModel`\n     *\n     * @for Fms\n     * @method setArrivalRunway\n     * @param nextRunwayModel {RunwayModel}\n     */\n    setArrivalRunway(nextRunwayModel) {\n        if (!(nextRunwayModel instanceof RunwayModel)) {\n            throw new TypeError(`Expected instance of RunwayModel, but received ${nextRunwayModel}`);\n        }\n\n        this.arrivalRunwayModel = nextRunwayModel;\n    }\n\n    /**\n     * Verify and then set the value of `#departureRunwayModel`\n     *\n     * @for Fms\n     * @method setDepartureRunway\n     * @param runwayModel {RunwayModel}\n     */\n    setDepartureRunway(runwayModel) {\n        if (!(runwayModel instanceof RunwayModel)) {\n            throw new TypeError(`Expected instance of RunwayModel, but received ${runwayModel}`);\n        }\n\n        if (this.departureRunwayModel && this.departureRunwayModel.name === runwayModel.name) {\n            return;\n        }\n\n        this.departureRunwayModel = runwayModel;\n\n        this._routeModel.updateSidLegForDepartureRunwayModel(runwayModel);\n    }\n\n    /**\n     * Set the `#currentPhase`\n     *\n     * this value is used to determine how to calculate and aircraft's next\n     * altitude, heading and speed.\n     *\n     * @for Fms\n     * @method setFlightPhase\n     * @param phase {string}\n     */\n    setFlightPhase(phase) {\n        if (!_includes(FLIGHT_PHASE, phase)) {\n            throw new TypeError(`Expected known flight phase, but received '${phase}'`);\n        }\n\n        this.currentPhase = phase;\n    }\n\n    /**\n     * Fascade\n     *\n     * @for Fms\n     * @method skipToWaypointName\n     * @param waypointName {string}\n     */\n    skipToWaypointName(waypointName) {\n        return this._routeModel.skipToWaypointName(waypointName);\n    }\n\n    // ------------------------------ PRIVATE ------------------------------\n\n    // /**\n    // * Build a `LegModel` instance that contains a `WaypointModel` with hold properties\n    // *\n    // * @for Fms\n    // * @method _createLegWithHoldWaypoint\n    // * @param waypointProps {object}\n    // * @return legModel {LegModel}\n    // */\n    // _createLegWithHoldWaypoint(waypointProps) {\n    //     const legModel = new LegModel(\n    //         waypointProps.name,\n    //         this.currentRunwayName,\n    //         this.currentPhase,\n    //         waypointProps\n    //     );\n    //\n    //     return legModel;\n    // }\n\n    /**\n     * Ensure the STAR leg has the specified arrival runway as the exit point\n     *\n     * @for Fms\n     * @method updateStarLegForArrivalRunway\n     * @param nextRunwayModel {RunwayModel}\n     * @return {array} [success of operation, response]\n     */\n    updateStarLegForArrivalRunway(nextRunwayModel) {\n        const currentArrivalRunway = this.arrivalRunwayModel;\n\n        if (!(nextRunwayModel instanceof RunwayModel)) {\n            throw new TypeError(`Expected instance of RunwayModel, but received ${nextRunwayModel}`);\n        }\n\n        if (currentArrivalRunway && currentArrivalRunway.name === nextRunwayModel.name) {\n            const readback = {};\n            readback.log = `expect Runway ${nextRunwayModel.name}`;\n            readback.say = `expect Runway ${nextRunwayModel.getRadioName()}`;\n\n            return [true, readback];\n        }\n\n        if (!this._routeModel.isRunwayModelValidForStar(nextRunwayModel)) {\n            const readback = {};\n            readback.log = `unable, according to our charts, Runway ${nextRunwayModel.name} is ` +\n                `not valid for the ${this._routeModel.getStarIcao()} arrival, expecting ` +\n                `Runway ${currentArrivalRunway.name} instead`;\n            readback.say = `unable, according to our charts, Runway ${nextRunwayModel.getRadioName()} ` +\n                `is not valid for the ${this._routeModel.getStarName()} arrival, expecting ` +\n                `Runway ${currentArrivalRunway.getRadioName()} instead`;\n\n            return [false, readback];\n        }\n\n        this._routeModel.updateStarLegForArrivalRunwayModel(nextRunwayModel);\n        this.setArrivalRunway(nextRunwayModel);\n\n        const readback = {};\n        readback.log = `expecting Runway ${nextRunwayModel.name}`;\n        readback.say = `expecting Runway ${nextRunwayModel.getRadioName()}`;\n\n        return [true, readback];\n    }\n\n    /**\n     * Update the expected arrival runway based on the STAR's exit point runway\n     *\n     * @for Fms\n     * @method _updateArrivalRunwayFromRoute\n     */\n    _updateArrivalRunwayFromRoute() {\n        const arrivalRunwayModel = this._routeModel.getArrivalRunwayModel();\n\n        if (_isNil(arrivalRunwayModel)) {\n            console.error('Expected route to have a valid arrival runway');\n\n            return;\n        }\n\n        this.setArrivalRunway(arrivalRunwayModel);\n    }\n\n    /**\n     * Update the expected departure runway based on the SID's entry point runway\n     *\n     * @for Fms\n     * @method _updateArrivalRunwayFromRoute\n     */\n    _updateDepartureRunwayFromRoute() {\n        const departureRunwayModel = this._routeModel.getDepartureRunwayModel();\n\n        if (_isNil(departureRunwayModel)) {\n            console.error('Expected route to have a valid departure runway');\n\n            return;\n        }\n\n        this.setDepartureRunway(departureRunwayModel);\n    }\n\n    /**\n     * Verify that this FMS's route contains at least two waypoints, or throw an error\n     *\n     * This is an expectation on spawn so we can point the aircraft somewhere,\n     * but OTHER than on spawn, there is no reason an aircraft cannot be assigned\n     * a single-fix route (such as \"forget everything else, just go direct to the airport!\").\n     *\n     * @for Fms\n     * @method _verifyRouteContainsMultipleWaypoints\n     * @private\n     */\n    _verifyRouteContainsMultipleWaypoints() {\n        if (this.waypoints.length < 2) {\n            throw new TypeError('Expected flight plan route to have at least two ' +\n                `waypoints, but only found ${this.waypoints.length} waypoints`);\n        }\n    }\n}\n","import _findIndex from 'lodash/findIndex';\nimport _isEmpty from 'lodash/isEmpty';\nimport _isNil from 'lodash/isNil';\nimport _map from 'lodash/map';\nimport _without from 'lodash/without';\nimport NavigationLibrary from '../../navigationLibrary/NavigationLibrary';\nimport WaypointModel from './WaypointModel';\nimport {\n    INVALID_INDEX,\n    INVALID_NUMBER\n} from '../../constants/globalConstants';\nimport {\n    LEG_TYPE,\n    PROCEDURE_TYPE,\n    PROCEDURE_OR_AIRWAY_SEGMENT_DIVIDER\n} from '../../constants/routeConstants';\n\n/**\n * A portion of a navigation route containing one or more `WaypointModel` objects.\n *\n * @class LegModel\n */\nexport default class LegModel {\n    /**\n     * @for LegModel\n     * @constructor\n     * @param routeString {string}\n     */\n    constructor(routeString) {\n        /**\n         * Reference to an instance of a `AirwayModel` object (if this is an airway leg)\n         *\n         * @for LegModel\n         * @property _airwayModel\n         * @type {AirwayModel|null}\n         * @default null\n         * @private\n         */\n        this._airwayModel = null;\n\n        /**\n         * Type of leg from list of types defined in `LEG_TYPE`\n         *\n         * @for LegModel\n         * @property _legType\n         * @type {string}\n         * @default ''\n         * @private\n         */\n        this._legType = '';\n\n        /**\n         * Reference to an instance of a `ProcedureModel` object (if this is a procedure leg)\n         *\n         * @for LegModel\n         * @property _procedureModel\n         * @type {ProcedureModel|null}\n         * @default null\n         * @private\n         */\n        this._procedureModel = null;\n\n        /**\n         * Array of `WaypointModel`s that have been passed (or skipped)\n         *\n         * Aircraft will proceed along the route to each waypoint, and upon passing\n         * a waypoint, it will move that waypoint here to the `#_previousWaypointCollection`,\n         * and proceed to the next waypoint in the `#_waypointCollection` until no more\n         * `WaypointModel`s remain in the leg, at which point, they continue to the next leg.\n         *\n         * @for LegModel\n         * @property _previousWaypointCollection\n         * @type {array<WaypointModel>}\n         * @default []\n         * @private\n         */\n        this._previousWaypointCollection = [];\n\n        /**\n         * Standard-formatted route string for this leg, excluding any special characters\n         *\n         * @for LegModel\n         * @property _routeString\n         * @type {string}\n         * @default ''\n         * @private\n         */\n        this._routeString = '';\n\n        /**\n         * Array of `WaypointModel`s to follow, excluding any waypoints passed (or skipped)\n         *\n         * Upon completion of a given `WaypointModel` in the `#_waypointCollection`, that\n         * waypoint will be moved to the `#_previousWaypointCollection`, and the aircraft will\n         * continue to the next `WaypointModel` in the `#_waypointCollection`.\n         *\n         * @for LegModel\n         * @property _waypointCollection\n         * @type {array<WaypointModel>}\n         * @default []\n         * @private\n         */\n        this._waypointCollection = [];\n\n        this.init(routeString);\n    }\n\n    /**\n     * Returns the active `WaypointModel`\n     *\n     * Assumed to always be the first item in the `#waypointCollection`\n     *\n     * @for LegModel\n     * @property currentWaypoint\n     * @type {WaypointModel}\n     */\n    get currentWaypoint() {\n        if (this._waypointCollection.length === 0) {\n            throw new TypeError('Expected the current leg to contain at least one waypoint');\n        }\n\n        return this._waypointCollection[0];\n    }\n\n    /**\n     * Returns whether this leg is an airway leg\n     *\n     * @for LegModel\n     * @property isAirwayLeg\n     * @type {boolean}\n     */\n    get isAirwayLeg() {\n        return this._legType === LEG_TYPE.AIRWAY;\n    }\n\n    /**\n     * Returns whether this leg is a direct leg\n     *\n     * @for LegModel\n     * @property isDirectLeg\n     * @type {boolean}\n     */\n    get isDirectLeg() {\n        return this._legType === LEG_TYPE.DIRECT;\n    }\n\n    /**\n     * Returns whether this leg is a procedure leg\n     *\n     * @for LegModel\n     * @property isProcedureLeg\n     * @type {boolean}\n     */\n    get isProcedureLeg() {\n        return this._legType === LEG_TYPE.PROCEDURE;\n    }\n\n    /**\n     * Whether this leg is a SID Procedure leg\n     *\n     * @for RouteModel\n     * @property isSidLeg\n     * @type {boolean}\n     */\n    get isSidLeg() {\n        return this.isProcedureLeg && this._procedureModel.procedureType === PROCEDURE_TYPE.SID;\n    }\n\n    /**\n     * Whether this leg is a STAR Procedure leg\n     *\n     * @for RouteModel\n     * @property isStarLeg\n     * @type {boolean}\n     */\n    get isStarLeg() {\n        return this.isProcedureLeg && this._procedureModel.procedureType === PROCEDURE_TYPE.STAR;\n    }\n\n    /**\n     * Returns the type of this leg\n     *\n     * @for LegModel\n     * @property legType\n     * @type {string}\n     */\n    get legType() {\n        return this._legType;\n    }\n\n    /**\n     * Returns the `WaypointModel` immediately following the `#currentWaypoint`\n     *\n     * @for LegModel\n     * @property nextWaypoint\n     * @type {WaypointModel}\n     */\n    get nextWaypoint() {\n        return this._waypointCollection[1];\n    }\n\n    /**\n     * Returns the route string for this leg\n     *\n     * @for LegModel\n     * @property routeString\n     * @type {string}\n     */\n    get routeString() {\n        return this._routeString;\n    }\n\n    /**\n     * Return the `#_waypointCollection`\n     *\n     * @for LegModel\n     * @property waypoints\n     * @type {array<WaypointModel>}\n     */\n    get waypoints() {\n        return this._waypointCollection;\n    }\n\n    get altitude() {\n        return this._procedureModel.altitude;\n    }\n\n    // ------------------------------ LIFECYCLE ------------------------------\n\n    /**\n     * Initialize instance properties\n     *\n     * @for LegModel\n     * @method init\n     * @param routeString {string}\n     * @chainable\n     */\n    init(routeString) {\n        this._routeString = routeString;\n\n        const [entryOrFixName, airwayOrProcedureName, exit] = routeString.split(PROCEDURE_OR_AIRWAY_SEGMENT_DIVIDER);\n\n        this._ensureRouteStringIsSingleSegment(routeString);\n        this._legType = this._determineLegType(airwayOrProcedureName);\n        this._airwayModel = NavigationLibrary.getAirway(airwayOrProcedureName);\n        this._procedureModel = NavigationLibrary.getProcedure(airwayOrProcedureName);\n        this._waypointCollection = this._generateWaypointCollection(entryOrFixName, exit);\n\n        return this;\n    }\n\n    /**\n     * Reset instance properties\n     *\n     * @for LegModel\n     * @method reset\n     * @chainable\n     */\n    reset() {\n        this._resetWaypointCollection();\n\n        this._airwayModel = null;\n        this._legType = '';\n        this._procedureModel = null;\n        this._previousWaypointCollection = [];\n        this._routeString = '';\n        this._waypointCollection = [];\n\n        return this;\n    }\n\n    /**\n     * Return the type of leg this will be, based on the route string\n     *\n     * @for LegModel\n     * @method _determineLegType\n     * @param airwayOrProcedureName {string}\n     * @return {string} property of `LEG_TYPE` enum\n     */\n    _determineLegType(airwayOrProcedureName) {\n        if (this._routeString.indexOf('.') === INVALID_NUMBER) {\n            return LEG_TYPE.DIRECT;\n        }\n\n        if (NavigationLibrary.hasAirway(airwayOrProcedureName)) {\n            return LEG_TYPE.AIRWAY;\n        }\n\n        if (NavigationLibrary.hasProcedure(airwayOrProcedureName)) {\n            return LEG_TYPE.PROCEDURE;\n        }\n\n        throw new TypeError(`Expected airway or procedure name, but we can't ' +\n            'determine what kind of leg ${airwayOrProcedureName} is`);\n    }\n\n    /**\n     * Verify that we are not attempting to initialize this `LegModel` with a route\n     * string that should have been two separate `LegModels`, and throw errors if\n     * we ever DO make such a mistake.\n     *\n     * @for LegModel\n     * @method _ensureRouteStringIsSingleSegment\n     * @param routeString {string}\n     */\n    _ensureRouteStringIsSingleSegment(routeString) {\n        if (routeString.indexOf('..') !== INVALID_INDEX) {\n            throw new TypeError(`Expected single fix or single procedure route string, but received '${routeString}'`);\n        }\n\n        if (routeString.split('.').length > 3) {\n            throw new TypeError(`Expected single procedure route string, but received '${routeString}'`);\n        }\n    }\n\n    /**\n     * Generate a `WaypointModel` for the specified data\n     *\n     * @for LegModel\n     * @method _generateWaypoint\n     * @param data {string|array<string>}\n     * @returns {WaypointModel}\n     * @private\n     */\n    _generateWaypoint(data) {\n        const waypoint = new WaypointModel(data);\n        const holdParameters = NavigationLibrary.findHoldParametersByFix(waypoint.name);\n\n        if (holdParameters != null) {\n            waypoint.setDefaultHoldParameters(holdParameters);\n        }\n\n        return waypoint;\n    }\n\n    /**\n     * Generate an array of `WaypointModel`s an aircraft's FMS will need in order to\n     * navigate along this leg instance.\n     *\n     * @for LegModel\n     * @param _generateWaypointCollection\n     * @param entryOrFixName {string} name of the entry point (if airway/procedure), or fix name\n     * @param exit {string} name of exit point (if airway/procedure), or `undefined`\n     * @return {array<WaypointModel>}\n     */\n    _generateWaypointCollection(entryOrFixName, exit) {\n        if (this._legType === LEG_TYPE.DIRECT) {\n            return [this._generateWaypoint(entryOrFixName)];\n        }\n\n        if (this._legType === LEG_TYPE.AIRWAY) {\n            this._verifyAirwayAndEntryAndExitAreValid(entryOrFixName, exit);\n\n            return this._airwayModel.getWaypointModelsForEntryAndExit(entryOrFixName, exit);\n        }\n\n        this._verifyProcedureAndEntryAndExitAreValid(entryOrFixName, exit);\n\n        return this._procedureModel.getWaypointModelsForEntryAndExit(entryOrFixName, exit);\n    }\n\n    // ------------------------------ PUBLIC ------------------------------\n\n    /**\n     * Mark the specified waypoint as a hold waypoint\n     *\n     * @for LegModel\n     * @method activateHoldForWaypointName\n     * @param waypointName {string} name of waypoint in route\n     * @param holdParameters {object}\n     * @param fallbackInboundHeading {number} an optional inboundHeading that is used if no default is available\n     * @returns {object} The hold parameters set for the `WaypointModel`\n     */\n    activateHoldForWaypointName(waypointName, holdParameters, fallbackInboundHeading = undefined) {\n        if (!this.hasWaypointName(waypointName)) {\n            return;\n        }\n\n        const waypointIndex = this._findIndexOfWaypointName(waypointName);\n        const waypointModel = this._waypointCollection[waypointIndex];\n\n        return waypointModel.setHoldParametersAndActivateHold(holdParameters, fallbackInboundHeading);\n    }\n\n    /**\n     * Return the identifier of the airway being used in this leg\n     *\n     * @for LegModel\n     * @method getAirwayName\n     * @return {string}\n     */\n    getAirwayName() {\n        if (!this.isAirwayLeg) {\n            return;\n        }\n\n        return this._airwayModel.icao;\n    }\n\n    /**\n     * Return an array of WaypointModels AFTER (not including) the specified waypoint\n     *\n     * @for LegModel\n     * @method getAllWaypointModelsAfterWaypointName\n     * @return {array<WaypointModel>}\n     */\n    getAllWaypointModelsAfterWaypointName(waypointName) {\n        const indexOfWaypointName = this._findIndexOfWaypointName(waypointName);\n\n        return this._waypointCollection.slice().splice(indexOfWaypointName + 1);\n    }\n\n    /**\n     * Return an array of WaypointModels BEFORE (not including) the specified waypoint\n     *\n     * @for LegModel\n     * @method getAllWaypointModelsBeforeWaypointName\n     * @return {array<WaypointModel>}\n     */\n    getAllWaypointModelsBeforeWaypointName(waypointName) {\n        const indexOfWaypointName = this._findIndexOfWaypointName(waypointName);\n        const copyOfWaypointCollection = this._waypointCollection.slice();\n\n        copyOfWaypointCollection.splice(indexOfWaypointName);\n\n        return copyOfWaypointCollection;\n    }\n\n    /**\n     * Return the ICAO identifier for the airport at which this leg will terminate (if\n     * it is in fact a STAR leg, of course).\n     *\n     * @for LegModel\n     * @method getArrivalRunwayAirportIcao\n     * @return {string}\n     */\n    getArrivalRunwayAirportIcao() {\n        if (!this.isStarLeg) {\n            return null;\n        }\n\n        const airportAndRunway = this._routeString.split(PROCEDURE_OR_AIRWAY_SEGMENT_DIVIDER)[2];\n        const arrivalAirportIcao = airportAndRunway.substr(0, 4);\n\n        return arrivalAirportIcao.toLowerCase();\n    }\n\n    /**\n     * Return the name of the runway at which this leg will terminate (if it is in fact\n     * a STAR leg, of course).\n     *\n     * @for LegModel\n     * @method getArrivalRunwayName\n     * @return {string}\n     */\n    getArrivalRunwayName() {\n        if (!this.isStarLeg) {\n            return null;\n        }\n\n        const airportAndRunway = this._routeString.split(PROCEDURE_OR_AIRWAY_SEGMENT_DIVIDER)[2];\n        const arrivalRunwayName = airportAndRunway.substr(4);\n\n        return arrivalRunwayName;\n    }\n\n    /**\n    * Returns the lowest `#altitudeMinimum` of all `WaypointModel`s in this leg\n    *\n    * @for LegModel\n    * @method getBottomAltitude\n    * @return {number}\n    */\n    getBottomAltitude() {\n        if (!this.isProcedureLeg) {\n            return INVALID_NUMBER;\n        }\n\n        const minimumAltitudes = _map(this._waypointCollection, (waypoint) => waypoint.altitudeMinimum);\n        const positiveValueRestrictionList = _without(minimumAltitudes, INVALID_NUMBER);\n        const bottomAltitude = Math.min(...positiveValueRestrictionList);\n\n        if (bottomAltitude === Infinity) {\n            return INVALID_NUMBER;\n        }\n\n        return bottomAltitude;\n    }\n\n    /**\n    * Return the ICAO identifier for the airport at which this leg originates (if\n    * it is in fact a SID leg, of course).\n    *\n    * @for LegModel\n    * @method getDepartureRunwayAirportIcao\n    * @return {string}\n    */\n    getDepartureRunwayAirportIcao() {\n        if (!this.isSidLeg) {\n            return null;\n        }\n\n        const airportAndRunway = this._routeString.split(PROCEDURE_OR_AIRWAY_SEGMENT_DIVIDER)[0];\n        const departureAirportIcao = airportAndRunway.substr(0, 4);\n\n        return departureAirportIcao.toLowerCase();\n    }\n\n    /**\n    * Return the name of the runway at which this leg begins (if it is in fact\n    * a SID leg, of course).\n    *\n    * @for LegModel\n    * @method getDepartureRunwayName\n    * @return {string}\n    */\n    getDepartureRunwayName() {\n        if (!this.isSidLeg) {\n            return null;\n        }\n\n        const airportAndRunway = this._routeString.split(PROCEDURE_OR_AIRWAY_SEGMENT_DIVIDER)[0];\n        const departureRunwayName = airportAndRunway.substr(4);\n\n        return departureRunwayName;\n    }\n\n    /**\n     * Return the ICAO identifier for the procedure being used by this leg\n     *\n     * @for LegModel\n     * @method getProcedureIcao\n     * @return {string}\n     */\n    getProcedureIcao() {\n        if (!this.isProcedureLeg) {\n            return;\n        }\n\n        return this._procedureModel.icao;\n    }\n\n    /**\n     * Return the name of the procedure being used by this leg\n     *\n     * @for LegModel\n     * @method getProcedureName\n     * @return {string}\n     */\n    getProcedureName() {\n        if (!this.isProcedureLeg) {\n            return;\n        }\n\n        return this._procedureModel.name;\n    }\n\n    /**\n     * Return the name of this leg's exit fix\n     *\n     * @for LegModel\n     * @method getExitFixName\n     * @return {string}\n     */\n    getEntryFixName() {\n        if (this.isDirectLeg) {\n            return this._routeString;\n        }\n\n        const routeStringElements = this._routeString.split(PROCEDURE_OR_AIRWAY_SEGMENT_DIVIDER);\n\n        return routeStringElements[0];\n    }\n\n    /**\n     * Return the name of this leg's exit fix\n     *\n     * @for LegModel\n     * @method getExitFixName\n     * @return {string}\n     */\n    getExitFixName() {\n        if (this.isDirectLeg) {\n            return this._routeString;\n        }\n\n        const routeStringElements = this._routeString.split(PROCEDURE_OR_AIRWAY_SEGMENT_DIVIDER);\n\n        return routeStringElements[2];\n    }\n\n    /**\n     * Returns the route string for this leg, removing any airports\n     * For example, `KSEA16L.BANGR9.PANGL` --> `BANGR9.PANGL`\n     *\n     * BE CAREFUL using this method, because technically `BANGR9.PANGL` is not technically a\n     * valid route string, as it does not follow the proper format. This method was created\n     * as a means to remove the airports from the route strings so we can display a route on\n     * the flight strip that excludes the airport, since this is instead shown in a separate\n     * section of the flight strip, and should not be included in the route section.\n     *\n     * @for LegModel\n     * @method getRouteStringWithoutAirports\n     * @return {string}\n     */\n    getRouteStringWithoutAirports() {\n        const routeString = this._routeString;\n\n        if (this.isSidLeg) {\n            const elements = routeString.split(PROCEDURE_OR_AIRWAY_SEGMENT_DIVIDER);\n            const procedure = elements[1];\n            const exit = elements[2];\n\n            return `${procedure}.${exit}`;\n        }\n\n        if (this.isStarLeg) {\n            const elements = routeString.split(PROCEDURE_OR_AIRWAY_SEGMENT_DIVIDER);\n            const entry = elements[0];\n            const procedure = elements[1];\n\n            return `${entry}.${procedure}`;\n        }\n\n        return routeString;\n    }\n\n    /**\n     * Returns the highest `#altitudeMaximum` of all `WaypointModel`s in this leg\n     *\n     * @for LegModel\n     * @method getTopAltitude\n     * @return {number}\n     */\n    getTopAltitude() {\n        if (!this.isProcedureLeg) {\n            return INVALID_NUMBER;\n        }\n\n        const maximumAltitudes = _map(this._waypointCollection, (waypoint) => waypoint.altitudeMaximum);\n        const positiveValueRestrictionList = _without(maximumAltitudes, INVALID_NUMBER);\n        const topAltitude = Math.max(...positiveValueRestrictionList);\n\n        if (topAltitude === -Infinity) {\n            return INVALID_NUMBER;\n        }\n\n        return topAltitude;\n    }\n\n    /**\n    * Whether there are any `WaypointModel`s in this leg beyond the `#currentWaypoint`\n    *\n    * @for LegModel\n    * @method hasNextWaypoint\n    * @return {boolean}\n    */\n    hasNextWaypoint() {\n        return this._waypointCollection.length > 1;\n    }\n\n    /**\n    * Whether a `WaypointModel` with the specified name exists within the `#_waypointCollection`\n    *\n    * Note that this will return false even if the specified fix name IS included\n    * in the `#_previousWaypointCollection`.\n    *\n    * @for LegModel\n    * @method hasWaypointName\n    * @param waypointName {string}\n    * @return {boolean}\n    */\n    hasWaypointName(waypointName) {\n        if (_isEmpty(waypointName)) {\n            throw new TypeError(`Expected valid fix name but received '${waypointName}'`);\n        }\n\n        waypointName = waypointName.toUpperCase();\n\n        // using a for loop instead of `_find()` to maximize performance\n        // because this operation could happen quite frequently\n        for (let i = 0; i < this._waypointCollection.length; i++) {\n            if (this._waypointCollection[i].name === waypointName) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n    * Move the `#currentWaypoint` to the `#_previousWaypointCollection`\n    *\n    * This also results in the `WaypointModel` previously at index `1` becoming\n    * index `0`, thus making it the new `#currentWaypoint`.\n    *\n    * @for LegModel\n    * @method moveToNextWaypoint\n    */\n    moveToNextWaypoint() {\n        const waypointModelToMove = this._waypointCollection.shift();\n\n        this._previousWaypointCollection.push(waypointModelToMove);\n    }\n\n    procedureHasEntry(entryName) {\n        if (!this.isProcedureLeg) {\n            return false;\n        }\n\n        return this._procedureModel.hasEntry(entryName);\n    }\n\n    procedureHasExit(exitName) {\n        if (!this.isProcedureLeg) {\n            return false;\n        }\n\n        return this._procedureModel.hasExit(exitName);\n    }\n\n    /**\n     * Move all `WaypointModel`s to the `#_previousWaypointCollection`\n     *\n     * @for LegModel\n     * @method skipAllWaypointsInLeg\n     */\n    skipAllWaypointsInLeg() {\n        this._previousWaypointCollection.push(...this._waypointCollection);\n\n        this._waypointCollection = [];\n    }\n\n    /**\n     * Move all `WaypointModel`s before the specified waypoint to the `#_previousWaypointCollection`\n     *\n     * This also results in the waypoint with the specified name becoming the new `#currentWaypoint`\n     *\n     * @for LegModel\n     * @method skipToWaypointName\n     * @param waypointName {string}\n     * @return {boolean} success of operation\n     */\n    skipToWaypointName(waypointName) {\n        const waypointIndex = this._findIndexOfWaypointName(waypointName);\n\n        if (waypointIndex === INVALID_INDEX) {\n            return false;\n        }\n\n        const numberOfWaypointsToMove = waypointIndex;\n        const waypointModelsToMove = this._waypointCollection.splice(0, numberOfWaypointsToMove);\n\n        this._previousWaypointCollection.push(...waypointModelsToMove);\n\n        return true;\n    }\n\n    /**\n    * If applicable, make the SID entry match the specified departure runway\n    *\n    * @for LegModel\n    * @method updateSidLegForDepartureRunwayModel\n    * @param runwayModel {RunwayModel}\n    */\n    updateSidLegForDepartureRunwayModel(runwayModel) {\n        if (!this.isSidLeg) {\n            return;\n        }\n\n        const routeStringComponents = this._routeString.split(PROCEDURE_OR_AIRWAY_SEGMENT_DIVIDER);\n        const currentEntryName = routeStringComponents[0];\n        const currentExitName = routeStringComponents[2];\n        // assumed first four characters of exit name to be airport ICAO\n        const currentRunwayName = currentEntryName.substr(4);\n        const nextRunwayName = runwayModel.name;\n        const nextEntryName = currentEntryName.substr(0, 4).concat(nextRunwayName);\n\n        if (runwayModel.name === currentRunwayName) {\n            return;\n        }\n\n\n        if (!this._procedureModel.hasEntry(nextEntryName)) {\n            return;\n        }\n\n        this._waypointCollection = this._generateWaypointCollection(nextEntryName, currentExitName);\n    }\n\n    /**\n     * If applicable, make the STAR exit match the specified arrival runway model\n     *\n     * @for LegModel\n     * @method updateStarLegForArrivalRunwayModel\n     * @param runwayModel {RunwayModel}\n     */\n    updateStarLegForArrivalRunwayModel(runwayModel) {\n        if (!this.isStarLeg) {\n            return;\n        }\n\n        const routeStringComponents = this._routeString.split(PROCEDURE_OR_AIRWAY_SEGMENT_DIVIDER);\n        const currentEntryName = routeStringComponents[0];\n        const currentExitName = routeStringComponents[2];\n        // assumed first four characters of exit name to be airport ICAO\n        const currentRunwayName = currentExitName.substr(4);\n        const nextRunwayName = runwayModel.name;\n        const nextExitName = currentExitName.substr(0, 4).concat(nextRunwayName);\n\n        if (runwayModel.name === currentRunwayName) {\n            return;\n        }\n\n        if (!this._procedureModel.hasExit(nextExitName)) {\n            return;\n        }\n\n        this._waypointCollection = this._generateWaypointCollection(currentEntryName, nextExitName);\n    }\n\n    // ------------------------------ PRIVATE ------------------------------\n\n    _findIndexOfWaypointName(waypointName) {\n        return _findIndex(this._waypointCollection, (waypointModel) => {\n            return waypointModel.name === waypointName.toUpperCase();\n        });\n    }\n\n    /**\n     * Reset all waypoints and move them to the `#_previousWaypointCollection`\n     *\n     * TODO: implement object pooling with `WaypointModel`, this is the method\n     *       where the `WaypointModel` is returned to the pool\n     *\n     * @for LegModel\n     * @method _resetWaypointCollection\n     * @private\n     */\n    _resetWaypointCollection() {\n        this.skipAllWaypointsInLeg();\n\n        for (let i = 0; i < this._previousWaypointCollection.length; i++) {\n            this._previousWaypointCollection[i].reset();\n        }\n    }\n\n    /**\n     * Ensure that the airway, entry, and exit are all valid and can be used to generate waypoints\n     *\n     * Note that this should only be run on AIRWAY legs!\n     *\n     * @for LegModel\n     * @method _verifyAirwayAndEntryAndExitAreValid\n     * @private\n     */\n    _verifyAirwayAndEntryAndExitAreValid(entryName, exitName) {\n        if (_isNil(this._airwayModel)) {\n            throw new TypeError('Unable to generate waypoints because the requested airway does not exist');\n        }\n\n        const airwayIcao = this._airwayModel.icao;\n\n        if (!this._airwayModel.hasFixName(entryName)) {\n            throw new TypeError(`Expected valid entry of ${airwayIcao}, but received ${entryName}`);\n        }\n\n        if (!this._airwayModel.hasFixName(exitName)) {\n            throw new TypeError(`Expected valid exit of ${airwayIcao}, but received ${exitName}`);\n        }\n    }\n\n    /**\n     * Ensure that the procedure, entry, and exit are all valid and can be used to generate waypoints\n     *\n     * Note that this should only be run on PROCEDURE legs!\n     *\n     * @for LegModel\n     * @method _verifyProcedureAndEntryAndExitAreValid\n     * @private\n     */\n    _verifyProcedureAndEntryAndExitAreValid(entryName, exitName) {\n        if (_isNil(this._procedureModel)) {\n            throw new TypeError('Unable to generate waypoints because the requested procedure does not exist');\n        }\n\n        const procedureIcao = this._procedureModel.icao;\n\n        if (!this._procedureModel.hasEntry(entryName)) {\n            throw new TypeError(`Expected valid entry of ${procedureIcao}, but received ${entryName}`);\n        }\n\n        if (!this._procedureModel.hasExit(exitName)) {\n            throw new TypeError(`Expected valid exit of ${procedureIcao}, but received ${exitName}`);\n        }\n    }\n}\n","import _chunk from 'lodash/chunk';\nimport _first from 'lodash/first';\nimport _findIndex from 'lodash/findIndex';\nimport _intersection from 'lodash/intersection';\nimport _isNil from 'lodash/isNil';\nimport _isString from 'lodash/isString';\nimport _last from 'lodash/last';\nimport _map from 'lodash/map';\nimport _reduce from 'lodash/reduce';\nimport _without from 'lodash/without';\nimport LegModel from './LegModel';\nimport BaseModel from '../../base/BaseModel';\nimport AirportController from '../../airport/AirportController';\nimport RunwayModel from '../../airport/runway/RunwayModel';\nimport {\n    INVALID_INDEX,\n    INVALID_NUMBER,\n    REGEX\n} from '../../constants/globalConstants';\nimport {\n    DIRECT_SEGMENT_DIVIDER,\n    PROCEDURE_OR_AIRWAY_SEGMENT_DIVIDER\n} from '../../constants/routeConstants';\nimport { assembleProceduralRouteString } from '../../utilities/navigationUtilities';\n\n/**\n * Representation of an aircraft's flight plan route\n *\n * This object contains all of the legs and waypoints the FMS will use to navigate.\n * Each instance of an Aircraft has an FMS with a `RouteModel`, that it is able\n * to modify, including adding/removing legs/waypoints, adding/removing waypoint\n * restrictions, absorbing another `RouteModel`, etc.\n *\n * @class RouteModel\n */\nexport default class RouteModel extends BaseModel {\n    /**\n     * @for RouteModel\n     * @constructor\n     * @param routeString {string}\n     */\n    constructor(routeString) {\n        super();\n\n        /**\n         * Array of `LegModel`s on the route\n         *\n         * @for RouteModel\n         * @property _legCollection\n         * @type {array<LegModel>}\n         * @private\n         */\n        this._legCollection = [];\n\n        /**\n         * Array of `LegModel`s that have been passed (or skipped)\n         *\n         * Aircraft will proceed along the route to each waypoint, and upon completion\n         * of any given leg, it will move that leg here to the `#_previousLegCollection`,\n         * and proceed to the next leg in the `#_legCollection` until no more `LegModel`s\n         * exist, at which point they will simply hold their last assigned heading and altitude.\n         *\n         * @for RouteModel\n         * @property _previousLegCollection\n         * @type {array<WaypointModel>}\n         * @private\n         */\n        this._previousLegCollection = [];\n\n        this.init(routeString);\n    }\n\n    /**\n     * Return the current `LegModel`\n     *\n     * @for RouteModel\n     * @property currentLeg\n     * @type {LegModel}\n     */\n    get currentLeg() {\n        if (this._legCollection.length < 1) {\n            throw new TypeError('Expected the route to contain at least one leg');\n        }\n\n        return this._legCollection[0];\n    }\n\n    /**\n     * Return the current `WaypointModel`\n     *\n     * @for RouteModel\n     * @property currentWaypoint\n     * @type {WaypointModel}\n     */\n    get currentWaypoint() {\n        return this.currentLeg.currentWaypoint;\n    }\n\n    /**\n     * Return the current `#_legCollection`\n     *\n     * @for RouteModel\n     * @property legCollection\n     * @type {array<LegModel>}\n     */\n    get legCollection() {\n        return this._legCollection;\n    }\n\n    /**\n     * Return the next `LegModel`, if it exists\n     *\n     * @for RouteModel\n     * @property nextLeg\n     * @type {LegModel}\n     */\n    get nextLeg() {\n        if (!this.hasNextLeg()) {\n            return null;\n        }\n\n        return this._legCollection[1];\n    }\n\n    /**\n     * Return the next `WaypointModel`, from current or future leg\n     *\n     * @for RouteModel\n     * @property nextWaypoint\n     * @type {WaypointModel}\n     */\n    get nextWaypoint() {\n        if (!this.hasNextWaypoint()) {\n            return null;\n        }\n\n        if (this.currentLeg.hasNextWaypoint()) {\n            return this.currentLeg.nextWaypoint;\n        }\n\n        return this.nextLeg.currentWaypoint;\n    }\n\n    /**\n     * Return an array of all waypoints in all legs of the route\n     *\n     * @for RouteModel\n     * @property waypoints\n     * @type {array<WaypointModel>}\n     */\n    get waypoints() {\n        return _reduce(this._legCollection, (waypointList, legModel) => {\n            return waypointList.concat(legModel.waypoints);\n        }, []);\n    }\n\n    // ------------------------------ LIFECYCLE ------------------------------\n\n    /**\n     * Initialize instance properties\n     *\n     * @for RouteModel\n     * @method init\n     * @param routeString {string}\n     * @chainable\n     */\n    init(routeString) {\n        this._legCollection = this._generateLegsFromRouteString(routeString);\n\n        return this;\n    }\n\n    /**\n     * Reset instance properties\n     *\n     * @for RouteModel\n     * @method reset\n     * @chainable\n     */\n    reset() {\n        this._legCollection = [];\n\n        return this;\n    }\n\n    // ------------------------------ PUBLIC ------------------------------\n\n    /**\n     * Merge the provided route model into this route model, if possible\n     *\n     * @for RouteModel\n     * @method absorbRouteModel\n     * @param routeModel {RouteModel}\n     * @return {array} [success of operation, response]\n     */\n    absorbRouteModel(routeModel) {\n        const firstWaypointName = _first(routeModel.waypoints).name;\n        const lastWaypointName = _last(routeModel.waypoints).name;\n        const routesConverge = this.hasWaypointName(lastWaypointName);\n        const routesDiverge = this.hasWaypointName(firstWaypointName);\n\n        if (routesConverge && routesDiverge) {\n            return this._overwriteRouteBetweenWaypointNames(firstWaypointName, lastWaypointName, routeModel);\n        }\n\n        if (routesConverge) {\n            return this._prependRouteModelEndingAtWaypointName(lastWaypointName, routeModel);\n        }\n\n        if (routesDiverge) {\n            return this._appendRouteModelBeginningAtWaypointName(firstWaypointName, routeModel);\n        }\n\n        return [false, 'routes do not have continuity!'];\n    }\n\n    /**\n     * Mark the specified waypoint as a hold waypoint\n     *\n     * @for RouteModel\n     * @method activateHoldForWaypointName\n     * @param waypointName {string} name of waypoint in route\n     * @param holdParameters {object}\n     * @param fallbackInboundHeading {number} an optional inboundHeading that is used if no default is available\n     * @returns {object} The hold parameters set for the `WaypointModel`\n     */\n    activateHoldForWaypointName(waypointName, holdParameters, fallbackInboundHeading = undefined) {\n        if (!this.hasWaypointName(waypointName)) {\n            return;\n        }\n\n        const legIndex = this._findIndexOfLegContainingWaypointName(waypointName);\n        const legModel = this._legCollection[legIndex];\n\n        // This calculates the inbound heading to the fix from the preceding waypoint,\n        // and uses that as the fallbackInboundHeading.\n        // If no preceding waypoing exists, then the original fallbackInboundHeading passed is used\n        [fallbackInboundHeading] = this.waypoints.reduce((last, wpt) => {\n            let [heading] = last;\n            const [, lastWpt] = last;\n\n            if (lastWpt !== null && wpt.name === waypointName.toUpperCase()) {\n                heading = wpt.positionModel.bearingFromPosition(lastWpt.positionModel);\n            }\n\n            return [heading, wpt];\n        }, [fallbackInboundHeading, null]);\n\n        return legModel.activateHoldForWaypointName(waypointName, holdParameters, fallbackInboundHeading);\n    }\n\n    /**\n    * Return an array of waypoints in the flight plan that have altitude restrictions\n    *\n    * @for RouteModel\n    * @method getAltitudeRestrictedWaypoints\n    * @return {array<WaypointModel>}\n    */\n    getAltitudeRestrictedWaypoints() {\n        return this.waypoints.filter((waypoint) => waypoint.hasAltitudeRestriction);\n    }\n\n    /**\n     * Return the ICAO identifier for the airport at whose runway this route will terminate\n     *\n     * @for LegModel\n     * @method getArrivalRunwayAirportIcao\n     * @return {string}\n     */\n    getArrivalRunwayAirportIcao() {\n        if (!this.hasStarLeg()) {\n            return null;\n        }\n\n        const starLegIndex = this._findStarLegIndex();\n\n        return this._legCollection[starLegIndex].getArrivalRunwayAirportIcao();\n    }\n\n    /**\n     * Return the `AirportModel` at whose runway this route will terminate\n     *\n     * @for RouteModel\n     * @method getArrivalRunwayAirportModel\n     * @return {AirportModel}\n     */\n    getArrivalRunwayAirportModel() {\n        const airportIcao = this.getArrivalRunwayAirportIcao();\n\n        if (!airportIcao) {\n            return null;\n        }\n\n        return AirportController.airport_get(airportIcao);\n    }\n\n    /**\n     * Return the name of the runway at which this route will terminate\n     *\n     * @for LegModel\n     * @method getArrivalRunwayName\n     * @return {string}\n     */\n    getArrivalRunwayName() {\n        if (!this.hasStarLeg()) {\n            return null;\n        }\n\n        const starLegIndex = this._findStarLegIndex();\n\n        return this._legCollection[starLegIndex].getArrivalRunwayName();\n    }\n\n    /**\n     * Return the `RunwayModel` at which this route will terminate\n     *\n     * @for RouteModel\n     * @method getArrivalRunwayModel\n     * @return {RunwayModel}\n     */\n    getArrivalRunwayModel() {\n        const arrivalRunwayName = this.getArrivalRunwayName();\n\n        if (!arrivalRunwayName) {\n            return null;\n        }\n\n        return this.getArrivalRunwayAirportModel().getRunway(arrivalRunwayName);\n    }\n\n    /**\n    * Return the ICAO identifier for the airport at whose runway this route originates\n    *\n    * @for LegModel\n    * @method getDepartureRunwayAirportIcao\n    * @return {string}\n    */\n    getDepartureRunwayAirportIcao() {\n        if (!this.hasSidLeg()) {\n            return null;\n        }\n\n        const sidLegModel = this._findSidLeg();\n\n        return sidLegModel.getDepartureRunwayAirportIcao();\n    }\n\n    /**\n     * Return the `AirportModel` for the airport at whose runway this route originates\n     *\n     * @for RouteModel\n     * @method getDepartureRunwayAirportModel\n     * @return {AirportModel}\n     */\n    getDepartureRunwayAirportModel() {\n        const airportIcao = this.getDepartureRunwayAirportIcao();\n\n        if (!airportIcao) {\n            return null;\n        }\n\n        return AirportController.airport_get(airportIcao);\n    }\n\n    /**\n    * Return the name of the runway at which this route originates\n    *\n    * @for LegModel\n    * @method getDepartureRunwayName\n    * @return {string}\n    */\n    getDepartureRunwayName() {\n        if (!this.hasSidLeg()) {\n            return null;\n        }\n\n        const sidLegModel = this._findSidLeg();\n\n        return sidLegModel.getDepartureRunwayName();\n    }\n\n    /**\n     * Return the `RunwayModel` at which this route originates\n     *\n     * @for RouteModel\n     * @method getDepartureRunwayModel\n     * @return {RunwayModel}\n     */\n    getDepartureRunwayModel() {\n        const departureRunwayName = this.getDepartureRunwayName();\n\n        if (!departureRunwayName) {\n            return null;\n        }\n\n        return this.getDepartureRunwayAirportModel().getRunway(departureRunwayName);\n    }\n\n    /**\n    * Returns the lowest bottom altitude of any `LegModel` in the `#_legCollection`\n    *\n    * @for RouteModel\n    * @method getBottomAltitude\n    * @return {number}\n    */\n    getBottomAltitude() {\n        const minAltitudesFromLegs = _without(\n            _map(this._legCollection, (leg) => leg.getBottomAltitude()),\n            INVALID_NUMBER\n        );\n        const bottomAltitude = Math.min(...minAltitudesFromLegs);\n\n        if (bottomAltitude === Infinity) {\n            return INVALID_NUMBER;\n        }\n\n        return bottomAltitude;\n    }\n\n    /**\n     * Generate a route string for all legs in the `#_previousLegCollection` an `#_legCollection`\n     *\n     * @for RouteModel\n     * @method getRouteString\n     * @return {string}\n     */\n    getFullRouteString() {\n        const pastAndPresentLegModels = this._getPastAndPresentLegModels();\n        const pastAndPresentLegRouteStrings = _map(pastAndPresentLegModels, (legModel) => legModel.routeString);\n\n        return this._combineRouteStrings(pastAndPresentLegRouteStrings);\n    }\n\n    /**\n    * Returns the full route string, with airports removed\n    *\n    * Example:\n    * - `KSEA16L.BANGR9.PANGL` --> `BANGR9.PANGL`\n    *\n    * @for RouteModel\n    * @method getFullRouteStringWithoutAirportsWithSpaces\n    * @return {string}\n    */\n    getFullRouteStringWithoutAirportsWithSpaces() {\n        const pastAndPresentLegModels = this._getPastAndPresentLegModels();\n        const legRouteStringsWithoutAirports = _map(pastAndPresentLegModels, (legModel) => {\n            return legModel.getRouteStringWithoutAirports();\n        });\n\n        return this._combineRouteStrings(legRouteStringsWithoutAirports)\n            .replace(REGEX.DOUBLE_DOT, ' ')\n            .replace(REGEX.SINGLE_DOT, ' ');\n    }\n\n    /**\n     * Return `#fullRouteString` with spaces between elements instead of dot notation\n     *\n     * Example:\n     * - `KSEA16L.BANGR9.PANGL` --> `KSEA16L BANGR9 PANGL`\n     *\n     * Used mostly for representing the route string in the view, like\n     * an aircraft strip, etc.\n     *\n     * @for RouteModel\n     * @method getFullRouteStringWithSpaces\n     * @return {string}\n     */\n    getFullRouteStringWithSpaces() {\n        const routeString = this.getFullRouteString();\n\n        return routeString.replace(REGEX.DOUBLE_DOT, ' ').replace(REGEX.SINGLE_DOT, ' ');\n    }\n\n    /**\n     * Generate a route string for all legs in the `#_legCollection`\n     *\n     * @for RouteModel\n     * @method getRouteString\n     * @return {string}\n     */\n    getRouteString() {\n        const legRouteStrings = _map(this._legCollection, (legModel) => legModel.routeString);\n\n        return this._combineRouteStrings(legRouteStrings);\n    }\n\n    /**\n     * Return `#routeString` with spaces between elements instead of dot notation\n     *\n     * Example:\n     * - `KSEA16L.BANGR9.PANGL..TOU` --> `BANGR9 PANGL TOU`\n     *\n     * @for RouteModel\n     * @method getRouteStringWithSpaces\n     * @return {string}\n     */\n    getRouteStringWithSpaces() {\n        const routeString = this.getRouteString();\n\n        return routeString.replace(REGEX.DOUBLE_DOT, ' ').replace(REGEX.SINGLE_DOT, ' ');\n    }\n\n    /**\n     * Returns exit waypoint for a departure aircraft, to be used in datablock\n     *\n     * When a SID procedure is defined, this will return the exit waypoint\n     * Example:\n     * - `KLAS07R.BOACH6.TNP` -> `TNP`\n     *\n     * When no SID procedure is defined, this will return the first fix in the route\n     * Example:\n     * - `OAL..MLF..PGS` -> `OAL`\n     *\n     * @for RouteModel\n     * @method getFlightPlanEntry\n     * @returns {string} First fix in flightPlan or exit fix of SID\n     */\n    getFlightPlanEntry() {\n        if (!this.hasSidLeg()) {\n            return this.getFullRouteString().split('..')[0];\n        }\n\n        const sidLegModel = this._findSidLeg();\n\n        return sidLegModel.getExitFixName();\n    }\n\n    /**\n     * Return the ICAO identifier of the SID in use (if any)\n     *\n     * @for RouteModel\n     * @method getSidIcao\n     * @return {string}\n     */\n    getSidIcao() {\n        if (!this.hasSidLeg()) {\n            return;\n        }\n\n        const sidLegModel = this._findSidLeg();\n\n        return sidLegModel.getProcedureIcao();\n    }\n\n    /**\n     * Return the name of the SID in use (if any)\n     *\n     * @for RouteModel\n     * @method getSidName\n     * @return {string}\n     */\n    getSidName() {\n        if (!this.hasSidLeg()) {\n            return;\n        }\n\n        const sidLegModel = this._findSidLeg();\n\n        return sidLegModel.getProcedureName();\n    }\n\n    /**\n     * Return the initial altitude of the SID or the airport\n     *\n     * @for RouteModel\n     * @method getInitialClimbClearance\n     * @return {number}\n     */\n    getInitialClimbClearance() {\n        const sidLegModel = this._findSidLeg();\n\n        if (sidLegModel && sidLegModel.altitude) {\n            return sidLegModel.altitude;\n        }\n\n        const airport = AirportController.airport_get();\n\n        return airport.initial_alt;\n    }\n\n    /**\n     * Return the ICAO identifier of the STAR in use (if any)\n     *\n     * @for RouteModel\n     * @method getStarIcao\n     * @return {string}\n     */\n    getStarIcao() {\n        if (!this.hasStarLeg()) {\n            return;\n        }\n\n        const starLegModel = this._legCollection[this._findStarLegIndex()];\n\n        return starLegModel.getProcedureIcao();\n    }\n\n    /**\n     * Return the name of the STAR in use (if any)\n     *\n     * @for RouteModel\n     * @method getStarName\n     * @return {string}\n     */\n    getStarName() {\n        if (!this.hasStarLeg()) {\n            return;\n        }\n\n        const starLegModel = this._legCollection[this._findStarLegIndex()];\n\n        return starLegModel.getProcedureName();\n    }\n\n    /**\n     * Returns the highest top altitude of any `LegModel` in the `#_legCollection`\n    *\n    * @for RouteModel\n    * @method getTopAltitude\n    * @return {number}\n    */\n    getTopAltitude() {\n        const maxAltitudesFromLegs = _without(\n            _map(this._legCollection, (leg) => leg.getTopAltitude()),\n            INVALID_NUMBER\n        );\n        const topAltitude = Math.max(...maxAltitudesFromLegs);\n\n        if (topAltitude === -Infinity) {\n            return INVALID_NUMBER;\n        }\n\n        return topAltitude;\n    }\n\n    /**\n     * Whether the route has another leg after the current one\n     *\n     * @for RouteModel\n     * @method hasNextLeg\n     * @return {boolean}\n     */\n    hasNextLeg() {\n        return this._legCollection.length > 1;\n    }\n\n    /**\n     * Whether the route has another waypoint after the current one\n     *\n     * This includes waypoints in the current and future legs\n     *\n     * @for RouteModel\n     * @method hasNextWaypoint\n     * @return {boolean}\n     */\n    hasNextWaypoint() {\n        if (this.currentLeg.hasNextWaypoint()) {\n            return true;\n        }\n\n        if (!this.hasNextLeg()) {\n            return false;\n        }\n\n        return !_isNil(this.nextLeg.currentWaypoint);\n    }\n\n    /**\n     * Return whether the route has a SID leg\n     *\n     * @for RouteModel\n     * @method hasSidLeg\n     * @return {boolean}\n     */\n    hasSidLeg() {\n        return this._findSidLegIndex() !== INVALID_INDEX;\n    }\n\n    /**\n     * Return whether the route has a STAR leg\n     *\n     * @for RouteModel\n     * @method hasStarLeg\n     * @return {boolean}\n     */\n    hasStarLeg() {\n        return this._findStarLegIndex() !== INVALID_INDEX;\n    }\n\n    /**\n     * Return whether the route contains a waypoint with the specified name\n     *\n     * @for RouteModel\n     * @method hasWaypointName\n     * @param waypointName {string}\n     * @return {boolean}\n     */\n    hasWaypointName(waypointName) {\n        for (let i = 0; i < this._legCollection.length; i++) {\n            if (this._legCollection[i].hasWaypointName(waypointName)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Returns whether the specified runway is valid for this route's SID leg (if it has one)\n     *\n     * If there is no SID, there is no issue with changing runways, so we would treat this as \"valid\"\n     *\n     * @for RouteModel\n     * @method isRunwayModelValidForSid\n     * @param runwayModel {RunwayModel}\n     * @return {boolean}\n     */\n    isRunwayModelValidForSid(runwayModel) {\n        if (!(runwayModel instanceof RunwayModel)) {\n            return false;\n        }\n\n        const sidLegModel = this._findSidLeg();\n\n        if (!sidLegModel) {\n            return true;\n        }\n\n        const departureAirportIcao = this.getDepartureRunwayAirportIcao().toUpperCase();\n        const entryName = `${departureAirportIcao}${runwayModel.name}`;\n\n        return sidLegModel.procedureHasEntry(entryName);\n    }\n\n    /**\n     * Returns whether the specified runway is valid for this route's STAR leg (if it has one)\n     *\n     * If there is no STAR, there is no issue with changing runways, so we would treat this as \"valid\"\n     *\n     * @for RouteModel\n     * @method isRunwayModelValidForStar\n     * @param runwayModel {RunwayModel}\n     * @return {boolean}\n     */\n    isRunwayModelValidForStar(runwayModel) {\n        if (!(runwayModel instanceof RunwayModel)) {\n            return false;\n        }\n\n        const starLegIndex = this._findStarLegIndex();\n        const starLegModel = this._legCollection[starLegIndex];\n\n        if (!starLegModel) {\n            return true;\n        }\n\n        const arrivalAirportIcao = this.getArrivalRunwayAirportIcao().toUpperCase();\n        const exitName = `${arrivalAirportIcao}${runwayModel.name}`;\n\n        return starLegModel.procedureHasExit(exitName);\n    }\n\n    /**\n     * Skip ahead to the next waypoint\n     *\n     * If there are no more waypoints in the `#currentLeg`, this will also cause\n     * us to skip to the next leg.\n     *\n     * @for RouteModel\n     * @method moveToNextWaypoint\n     */\n    moveToNextWaypoint() {\n        if (!this.currentLeg.hasNextWaypoint()) {\n            return this.moveToNextLeg();\n        }\n\n        this.currentLeg.moveToNextWaypoint();\n    }\n\n    /**\n     * Replace the arrival procedure leg with a new one (if it exists in the route)\n     *\n     * Create a new STAR leg from the specified route string. If a STAR leg already\n     * exists, replace that leg with the new one. Else, add the new one at the end\n     * of the #_legCollection.\n     *\n     * @for RouteModel\n     * @method replaceArrivalProcedure\n     * @param routeString {string}\n     * @return {boolean} whether operation was successful\n     */\n    replaceArrivalProcedure(routeString) {\n        let starLegModel;\n\n        try {\n            starLegModel = new LegModel(routeString);\n        } catch (error) {\n            console.error(error);\n\n            return false;\n        }\n\n        // if no STAR leg exists, insert the new one as the new last leg\n        if (!this.hasStarLeg()) {\n            this._legCollection.push(starLegModel);\n\n            return true;\n        }\n\n        this._legCollection[this._findStarLegIndex()] = starLegModel;\n\n        return true;\n    }\n\n    /**\n     * Replace the departure procedure leg with a new one (if it exists in the route)\n     *\n     * Create a new SID leg from the specified route string. If a SID leg already\n     * exists, replace that leg with the new one. Else, add the new one at the\n     * beginning of the #_legCollection.\n     *\n     * @for RouteModel\n     * @method replaceDepartureProcedure\n     * @param routeString {string}\n     * @return {array} [success of operation, response]\n     */\n    replaceDepartureProcedure(routeString) {\n        let routeModel;\n\n        try {\n            routeModel = new RouteModel(routeString);\n        } catch (error) {\n            console.error(error);\n\n            return [false, `requested route of \"${routeString.toUpperCase()}\" is invalid`];\n        }\n\n        return this.absorbRouteModel(routeModel);\n    }\n\n    /**\n     * Move the current leg into the `#_previousLegCollection`\n     *\n     * This also results in the `#nextLeg` becoming the `#currentLeg`\n     *\n     * @for RouteModel\n     * @method moveToNextLeg\n     */\n    moveToNextLeg() {\n        if (!this.hasNextLeg()) {\n            return;\n        }\n\n        const legToMove = this._legCollection.splice(0, 1);\n\n        this._previousLegCollection.push(...legToMove);\n    }\n\n    /**\n     * Skip ahead to the waypoint with the specified name, if it exists\n     *\n     * @for RouteModel\n     * @method skipToWaypointName\n     * @param waypointName {string}\n     * @return {boolean} success of operation\n     */\n    skipToWaypointName(waypointName) {\n        if (!this.hasWaypointName(waypointName)) {\n            return false;\n        }\n\n        if (this.currentLeg.hasWaypointName(waypointName)) {\n            return this.currentLeg.skipToWaypointName(waypointName);\n        }\n\n        const legIndex = _findIndex(this._legCollection, (legModel) => legModel.hasWaypointName(waypointName));\n        const legModelsToMove = this._legCollection.splice(0, legIndex);\n\n        this._previousLegCollection.push(...legModelsToMove);\n\n        return this.currentLeg.skipToWaypointName(waypointName);\n    }\n\n    /**\n     * Ensure the SID leg has the specified departure runway as the entry point\n     *\n     * @for RouteModel\n     * @method updateSidLegForDepartureRunwayModel\n     * @param runwayModel {RunwayModel}\n     */\n    updateSidLegForDepartureRunwayModel(runwayModel) {\n        if (!this.hasSidLeg()) {\n            return;\n        }\n\n        const sidLegModel = this._findSidLeg();\n\n        sidLegModel.updateSidLegForDepartureRunwayModel(runwayModel);\n    }\n\n    /**\n    * Ensure the STAR leg has the specified arrival runway as the exit point\n    *\n    * @for RouteModel\n    * @method updateStarLegForArrivalRunwayModel\n    * @param runwayModel {RunwayModel}\n    */\n    updateStarLegForArrivalRunwayModel(runwayModel) {\n        if (!this.hasStarLeg()) {\n            return;\n        }\n\n        if (!this.isRunwayModelValidForStar(runwayModel)) {\n            console.error(`Received Runway ${runwayModel.name}, which is not valid for the assigned STAR. ` +\n                'The runway should have been validated before passing it to this method!');\n\n            return;\n        }\n\n        const originalCurrentWaypointName = this.currentWaypoint.name;\n        const nextExitName = `${this.getArrivalRunwayAirportIcao().toUpperCase()}${runwayModel.name}`;\n        const starLegIndex = this._findStarLegIndex();\n        const amendedStarLegModel = this._createAmendedStarLegUsingDifferentExitName(nextExitName, starLegIndex);\n        this._legCollection[starLegIndex] = amendedStarLegModel;\n\n        this.skipToWaypointName(originalCurrentWaypointName);\n    }\n\n    // ------------------------------ PRIVATE ------------------------------\n\n    /**\n     * Append a provided route model onto the end of this RouteModel\n     *\n     * This method only serves to call the method that contains the appropriate logic\n     * based on the type of leg in which the divergent waypoint resides, since this\n     * heavily weighs in to how the merging of the routes should be done. Note that\n     * the #_legCollection will be mutated in this process.\n     *\n     * @for RouteModel\n     * @method _appendRouteModelBeginningAtWaypointName\n     * @param divergentWaypointName {string} name of waypoint at which the two routes have continuity\n     * @param routeModel {RouteModel} the RouteModel to be absorbed into this\n     * @return {array} [success of operation, readback]\n     */\n    _appendRouteModelBeginningAtWaypointName(divergentWaypointName, routeModel) {\n        const indexOfDivergentLeg = this._findIndexOfLegContainingWaypointName(divergentWaypointName);\n        const divergentLeg = this._legCollection[indexOfDivergentLeg];\n\n        if (divergentLeg.isAirwayLeg) {\n            return this._appendRouteModelOutOfAirwayLeg(divergentWaypointName, routeModel);\n        }\n\n        if (divergentLeg.isDirectLeg) {\n            return this._appendRouteModelOutOfDirectLeg(divergentWaypointName, routeModel);\n        }\n\n        if (divergentLeg.isSidLeg) {\n            return this._appendRouteModelOutOfSidLeg(divergentWaypointName, routeModel);\n        }\n\n        if (divergentLeg.isStarLeg) {\n            return this._appendRouteModelOutOfStarLeg(divergentWaypointName, routeModel);\n        }\n\n        throw new TypeError(`Expected known leg type, but received \"${divergentLeg.legType}\" ` +\n            'type leg, preventing ability to determine the appropriate route merging strategy!');\n    }\n\n    /**\n     * Append a provided route model into this RouteModel when the divergent waypoint is in an airway leg\n     *\n     * This should only ever be called by `._appendRouteModelBeginningAtWaypointName()`\n     *\n     * @for RouteModel\n     * @method _appendRouteModelOutOfAirwayLeg\n     * @param divergentWaypointName {string} name of waypoint at which the two routes have continuity\n     * @param routeModel {RouteModel} the RouteModel to be absorbed into this\n     * @return {array} [success of operation, readback]\n     */\n    _appendRouteModelOutOfAirwayLeg(divergentWaypointName, routeModel) {\n        const indexOfDivergentLeg = this._findIndexOfLegContainingWaypointName(divergentWaypointName);\n        const amendedAirwayLeg = this._createAmendedAirwayLegUsingDifferentExitName(\n            divergentWaypointName,\n            indexOfDivergentLeg\n        );\n\n        this._legCollection.splice(indexOfDivergentLeg);\n\n        this._legCollection = [\n            ...this._legCollection,\n            amendedAirwayLeg,\n            ...routeModel.legCollection\n        ];\n\n        const readback = {};\n        readback.log = `rerouting to: ${this.getRouteStringWithSpaces()}`;\n        readback.say = 'rerouting as requested';\n\n        return [true, readback];\n    }\n\n    /**\n     * Append a provided route model into this RouteModel when the divergent waypoint is in a direct leg\n     *\n     * This should only ever be called by `._appendRouteModelBeginningAtWaypointName()`\n     *\n     * @for RouteModel\n     * @method _appendRouteModelOutOfDirectLeg\n     * @param divergentWaypointName {string} name of waypoint at which the two routes have continuity\n     * @param routeModel {RouteModel} the RouteModel to be absorbed into this\n     * @return {array} [success of operation, readback]\n     */\n    _appendRouteModelOutOfDirectLeg(divergentWaypointName, routeModel) {\n        const indexOfDivergentLeg = this._findIndexOfLegContainingWaypointName(divergentWaypointName);\n\n        this._legCollection.splice(indexOfDivergentLeg);\n        this._legCollection = this._legCollection.concat(routeModel.legCollection);\n\n        const readback = {};\n        readback.log = `rerouting to: ${this.getRouteStringWithSpaces()}`;\n        readback.say = 'rerouting as requested';\n\n        return [true, readback];\n    }\n\n    /**\n     * Append a provided route model into this RouteModel when the divergent waypoint is in a SID leg\n     *\n     * This should only ever be called by `._appendRouteModelBeginningAtWaypointName()`\n     *\n     * @for RouteModel\n     * @method _appendRouteModelOutOfSidLeg\n     * @param divergentWaypointName {string} name of waypoint at which the two routes have continuity\n     * @param routeModel {RouteModel} the RouteModel to be absorbed into this\n     * @return {array} [success of operation, readback]\n     */\n    _appendRouteModelOutOfSidLeg(divergentWaypointName, routeModel) {\n        const indexOfDivergentLeg = this._findIndexOfLegContainingWaypointName(divergentWaypointName);\n        const remainingLegWaypointsAsLegs = this._createLegsFromSidWaypointsBeforeWaypointName(\n            divergentWaypointName,\n            indexOfDivergentLeg\n        );\n\n        this._legCollection.splice(indexOfDivergentLeg);\n\n        this._legCollection = [\n            ...this._legCollection,\n            ...remainingLegWaypointsAsLegs,\n            ...routeModel.legCollection\n        ];\n\n        const readback = {};\n        readback.log = `rerouting to: ${this.getRouteStringWithSpaces()}`;\n        readback.say = 'rerouting as requested';\n\n        return [true, readback];\n    }\n\n    /**\n     * Append a provided route model into this RouteModel when the divergent waypoint is in a STAR leg\n     *\n     * This should only ever be called by `._appendRouteModelBeginningAtWaypointName()`\n     *\n     * @for RouteModel\n     * @method _appendRouteModelOutOfSidLeg\n     * @param divergentWaypointName {string} name of waypoint at which the two routes have continuity\n     * @param routeModel {RouteModel} the RouteModel to be absorbed into this\n     * @return {array} [success of operation, readback]\n     */\n    _appendRouteModelOutOfStarLeg(divergentWaypointName, routeModel) {\n        const indexOfDivergentLeg = this._findIndexOfLegContainingWaypointName(divergentWaypointName);\n        const divergentLegModel = this._legCollection[indexOfDivergentLeg];\n\n        if (divergentLegModel.procedureHasExit(divergentWaypointName)) {\n            const amendedStarLeg = this._createAmendedStarLegUsingDifferentExitName(\n                divergentWaypointName,\n                indexOfDivergentLeg\n            );\n\n            this._legCollection.splice(indexOfDivergentLeg);\n\n            this._legCollection = [\n                ...this._legCollection,\n                amendedStarLeg,\n                ...routeModel.legCollection\n            ];\n\n            const readback = {};\n            readback.log = `rerouting to: ${this.getRouteStringWithSpaces()}`;\n            readback.say = 'rerouting as requested';\n\n            return [true, readback];\n        }\n\n        const remainingLegWaypointsAsLegs = this._createLegsFromStarWaypointsBeforeWaypointName(\n            divergentWaypointName,\n            indexOfDivergentLeg\n        );\n\n        this._legCollection.splice(indexOfDivergentLeg);\n\n        this._legCollection = [\n            ...this._legCollection,\n            ...remainingLegWaypointsAsLegs,\n            ...routeModel._legCollection\n        ];\n\n        const readback = {};\n        readback.log = `rerouting to: ${this.getRouteStringWithSpaces()}`;\n        readback.say = 'rerouting as requested';\n\n        return [true, readback];\n    }\n\n    /**\n    * Combine all provided route strings\n    *\n    * This enables us to get a route string for a SPECIFIABLE series of legs, which\n    * may be a portion of the `#_legCollection` or of the `#_previousLegCollection`,\n    * or any combination thereof, including manipulated route strings.\n    *\n    * @for RouteModel\n    * @method _combineRouteStrings\n    * @param legRouteStrings {array<string>}\n    * @return {string}\n    */\n    _combineRouteStrings(legRouteStrings) {\n        const directRouteSegments = [_first(legRouteStrings)];\n\n        for (let i = 1; i < legRouteStrings.length; i++) {\n            const exitOfPreviousLeg = _last(legRouteStrings[i - 1].split(PROCEDURE_OR_AIRWAY_SEGMENT_DIVIDER));\n            const leg = legRouteStrings[i];\n            const legEntry = _first(leg.split(PROCEDURE_OR_AIRWAY_SEGMENT_DIVIDER));\n\n            if (legEntry === exitOfPreviousLeg) {\n                const indexOfPreviousLeg = directRouteSegments.length - 1;\n                const legRouteStringWithoutEntry = leg.replace(legEntry, '');\n                directRouteSegments[indexOfPreviousLeg] += legRouteStringWithoutEntry;\n\n                continue;\n            }\n\n            directRouteSegments.push(leg);\n        }\n\n        return directRouteSegments.join(DIRECT_SEGMENT_DIVIDER);\n    }\n\n    /**\n     * Create an airway leg based on the provided one, except with the new specified entry\n     *\n     * NOTE: this assumes the entry fix provided has already been verified as valid for this airway\n     *\n     * We know that `_createAmendedConvergentLeg()` and `_prependRouteModelIntoAirwayLeg()` both\n     * are called only in situations where a requested route amendment ends at a fix that was already\n     * included in the #_waypointCollection of an airway leg of the previous route. If this method is\n     * called by either of them, we can be confident that the `entryFixName` is on the airway.\n     *\n     * @for RouteModel\n     * @method _createAmendedAirwayLegUsingDifferentEntryName\n     * @param entryFixName {string} name of airway entry to use for the new airway leg\n     * @param legIndex {number} index of leg in the #_legCollection\n     * @return {LegModel}\n     */\n    _createAmendedAirwayLegUsingDifferentEntryName(entryFixName, legIndex) {\n        const convergentLegModel = this._legCollection[legIndex];\n        const airwayName = convergentLegModel.getAirwayName();\n        const exitFixName = convergentLegModel.getExitFixName();\n        const amendedAirwayRouteString = assembleProceduralRouteString(entryFixName, airwayName, exitFixName);\n        const amendedAirwayLeg = new LegModel(amendedAirwayRouteString);\n\n        return amendedAirwayLeg;\n    }\n\n    /**\n     * Create an airway leg based on the provided one, except with the new specified exit\n     *\n     * NOTE: this assumes the exit fix provided has already been verified as valid for this airway\n     *\n     * @for RouteModel\n     * @method _createAmendedAirwayLegUsingDifferentExitName\n     * @param exitFixName {string} name of airway exit to use for the new airway leg\n     * @param legIndex {number} index of leg in the #_legCollection\n     * @return {LegModel}\n     */\n    _createAmendedAirwayLegUsingDifferentExitName(exitFixName, legIndex) {\n        const divergentLeg = this._legCollection[legIndex];\n        const airwayName = divergentLeg.getAirwayName();\n        const entryFixName = divergentLeg.getEntryFixName();\n        const amendedAirwayRouteString = assembleProceduralRouteString(entryFixName, airwayName, exitFixName);\n        const amendedAirwayLeg = new LegModel(amendedAirwayRouteString);\n\n        return amendedAirwayLeg;\n    }\n\n    /**\n     * Amend the leg from #_legCollection at which a provided RouteModel converges with this model, such\n     * that the amended leg begins at the point of convergence.\n     *\n     * @for RouteModel\n     * @method _createAmendedConvergentLeg\n     * @param indexOfConvergentLegModel {number} index of leg which intersects with the provided RouteModel\n     * @param endWaypointName {string} name of the waypoint within that leg at which the routes converge\n     * @return {array<LegModel>}\n     */\n    _createAmendedConvergentLeg(indexOfConvergentLegModel, endWaypointName) {\n        const convergentLegModel = this._legCollection[indexOfConvergentLegModel];\n\n        if (convergentLegModel.isAirwayLeg) {\n            return [this._createAmendedAirwayLegUsingDifferentEntryName(endWaypointName, indexOfConvergentLegModel)];\n        }\n\n        if (convergentLegModel.isDirectLeg) {\n            return [];\n        }\n\n        if (convergentLegModel.isSidLeg) {\n            const firstWaypointName = _first(convergentLegModel.waypoints).name;\n\n            if (firstWaypointName === endWaypointName) {\n                return [convergentLegModel];\n            }\n\n            return this._createLegsFromSidWaypointsAfterWaypointName(endWaypointName, indexOfConvergentLegModel);\n        }\n\n        if (convergentLegModel.isStarLeg) {\n            const firstWaypointName = _first(convergentLegModel.waypoints).name;\n\n            if (firstWaypointName === endWaypointName) {\n                return [convergentLegModel];\n            }\n\n            if (convergentLegModel.procedureHasEntry(endWaypointName)) {\n                return [this._createAmendedStarLegUsingDifferentEntryName(endWaypointName, indexOfConvergentLegModel)];\n            }\n\n            return this._createLegsFromStarWaypointsAfterWaypointName(endWaypointName, indexOfConvergentLegModel);\n        }\n\n        throw new TypeError(`Expected known leg type, but received type \"${convergentLegModel.legType}\"`);\n    }\n\n    /**\n     * Amend the leg from #_legCollection at which a provided RouteModel diverges from this model, such\n     * that the amended leg ends at the point of divergence.\n     *\n     * @for RouteModel\n     * @method _createAmendedDivergentLeg\n     * @param indexOfDivergentLegModel {number} index of leg which intersects with the provided RouteModel\n     * @param startWaypointName {string} name of the waypoint within that leg at which the routes diverge\n     * @return {array<LegModel>}\n     */\n    _createAmendedDivergentLeg(indexOfDivergentLegModel, startWaypointName) {\n        const divergentLegModel = this._legCollection[indexOfDivergentLegModel];\n\n        if (divergentLegModel.isAirwayLeg) {\n            return [this._createAmendedAirwayLegUsingDifferentExitName(startWaypointName, indexOfDivergentLegModel)];\n        }\n\n        if (divergentLegModel.isDirectLeg) {\n            return [];\n        }\n\n        if (divergentLegModel.isSidLeg) {\n            const endingWaypointName = _last(divergentLegModel.waypoints).name;\n\n            if (endingWaypointName === startWaypointName) {\n                return [divergentLegModel];\n            }\n\n            return this._createLegsFromSidWaypointsBeforeWaypointName(startWaypointName, indexOfDivergentLegModel);\n        }\n\n        if (divergentLegModel.isStarLeg) {\n            const endingWaypointName = _last(divergentLegModel.waypoints).name;\n\n            if (endingWaypointName === startWaypointName) {\n                return [divergentLegModel];\n            }\n\n            if (divergentLegModel.procedureHasExit(startWaypointName)) {\n                return [this._createAmendedStarLegUsingDifferentExitName(startWaypointName, indexOfDivergentLegModel)];\n            }\n\n            return this._createLegsFromStarWaypointsBeforeWaypointName(startWaypointName, indexOfDivergentLegModel);\n        }\n\n        throw new TypeError(`Expected known leg type, but received type \"${divergentLegModel.legType}\"`);\n    }\n\n    /**\n     * Accept a SID leg, and explode it into direct legs, including only waypoints before the specified one\n     *\n     * @for RouteModel\n     * @method _createLegsFromSidWaypointsBeforeWaypointName\n     * @param waypointName {string} name of waypoint where we begin to discard waypoints\n     * @param legIndex {number} index of leg in the #_legCollection\n     * @return {array<LegModel>}\n     */\n    _createLegsFromSidWaypointsBeforeWaypointName(waypointName, legIndex) {\n        const divergentLeg = this._legCollection[legIndex];\n        const waypointModels = divergentLeg.getAllWaypointModelsBeforeWaypointName(waypointName);\n        const remainingLegWaypointsAsLegs = this._createLegModelsFromWaypointModels(waypointModels);\n\n        return remainingLegWaypointsAsLegs;\n    }\n\n    /**\n     * Accept a STAR leg, and explode it into direct legs, including only waypoints after the specified one\n     *\n     * @for RouteModel\n     * @method _createLegsFromStarWaypointsAfterWaypointName\n     * @param waypointName {string} name of waypoint after which we begin to keep waypoints\n     * @param legIndex {number} index of leg in the #_legCollection\n     * @return {array<LegModel>}\n     */\n    _createLegsFromStarWaypointsAfterWaypointName(waypointName, legIndex) {\n        const convergentLegModel = this._legCollection[legIndex];\n        const waypointModels = convergentLegModel.getAllWaypointModelsAfterWaypointName(waypointName);\n        const remainingLegWaypointsAsLegs = this._createLegModelsFromWaypointModels(waypointModels);\n\n        return remainingLegWaypointsAsLegs;\n    }\n\n    /**\n     * Accept a STAR leg, and explode it into direct legs, including only waypoints before the specified one\n     *\n     * @for RouteModel\n     * @method _createLegsFromStarWaypointsBeforeWaypointName\n     * @param waypointName {string} name of waypoint where we begin to discard waypoints\n     * @param legIndex {number} index of leg in the #_legCollection\n     * @return {array<LegModel>}\n     */\n    _createLegsFromStarWaypointsBeforeWaypointName(waypointName, legIndex) {\n        const divergentLegModel = this._legCollection[legIndex];\n        const waypointModels = divergentLegModel.getAllWaypointModelsBeforeWaypointName(waypointName);\n        const remainingLegWaypointsAsLegs = this._createLegModelsFromWaypointModels(waypointModels);\n\n        return remainingLegWaypointsAsLegs;\n    }\n\n    /**\n     * Return a STAR leg based on the provided leg, except with the new specified entry\n     *\n     * @for RouteModel\n     * @method _createAmendedStarLegUsingDifferentEntryName\n     * @param entryFixName {string} name of STAR entry to use for the new STAR leg\n     * @param legIndex {number} index of leg in the #_legCollection\n     * @return {LegModel}\n     */\n    _createAmendedStarLegUsingDifferentEntryName(entryFixName, legIndex) {\n        const convergentLegModel = this._legCollection[legIndex];\n        const procedureIcao = convergentLegModel.getProcedureIcao();\n        const exitFixName = convergentLegModel.getExitFixName();\n        const amendedStarRouteString = assembleProceduralRouteString(entryFixName, procedureIcao, exitFixName);\n        const amendedStarLeg = new LegModel(amendedStarRouteString);\n\n        return amendedStarLeg;\n    }\n\n    /**\n     * Return a STAR leg based on the provided leg, except with the new specified exit\n     *\n     * @for RouteModel\n     * @method _createAmendedStarLegUsingDifferentExitName\n     * @param exitFixName {string} name of STAR exit to use for the new STAR leg\n     * @param legIndex {number} index of leg in the #_legCollection\n     * @return {LegModel}\n     */\n    _createAmendedStarLegUsingDifferentExitName(exitFixName, legIndex) {\n        const divergentLegModel = this._legCollection[legIndex];\n        const procedureIcao = divergentLegModel.getProcedureIcao();\n        const entryFixName = divergentLegModel.getEntryFixName();\n        const amendedStarRouteString = assembleProceduralRouteString(entryFixName, procedureIcao, exitFixName);\n        const amendedStarLeg = new LegModel(amendedStarRouteString);\n\n        return amendedStarLeg;\n    }\n\n    /**\n     * Accept a SID leg, and explode it into direct legs, including only waypoints after the specified one\n     *\n     * @for RouteModel\n     * @method _createLegsFromSidWaypointsAfterWaypointName\n     * @param waypointName {string} name of waypoint where we begin to keep waypoints\n     * @param legIndex {number} index of leg in the #_legCollection\n     * @return {array<LegModel>}\n     */\n    _createLegsFromSidWaypointsAfterWaypointName(waypointName, legIndex) {\n        const convergentLeg = this._legCollection[legIndex];\n        const waypointModels = convergentLeg.getAllWaypointModelsAfterWaypointName(waypointName);\n        const remainingLegWaypointsAsLegs = this._createLegModelsFromWaypointModels(waypointModels);\n\n        return remainingLegWaypointsAsLegs;\n    }\n\n    // TODO: Also add support for preserving waypoint data (restrictions, hold instructions, etc)\n    /**\n     * Return an array of direct LegModels, one for each of the proided WaypointModels\n     *\n     * @for RouteModel\n     * @method _createLegModelsFromWaypointModels\n     * @param waypointModels {array<WaypointModel>} waypoint models to convert to direct legs\n     * @return {array<LegModel>}\n     */\n    _createLegModelsFromWaypointModels(waypointModels) {\n        return _map(waypointModels, (waypointModel) => new LegModel(waypointModel.name));\n    }\n\n    /**\n     * Divide a long route string into segments that can be individually represented by a `LegModel`\n     *\n     * @for RouteModel\n     * @method _divideRouteStringIntoSegments\n     * @param routeString {string}\n     * @return {array<string>}\n     * @private\n     */\n    _divideRouteStringIntoSegments(routeString) {\n        if (!_isString(routeString)) {\n            throw new TypeError(`Expected routeString's type to be string, but received '${typeof routeString}'`);\n        }\n\n        if (routeString.indexOf(' ') !== INVALID_INDEX) {\n            throw new TypeError(`Expected a route string that does not contain spaces, but received '${routeString}'`);\n        }\n\n        const chainedRouteStrings = routeString.split(DIRECT_SEGMENT_DIVIDER);\n        const segmentRouteStrings = [];\n\n        // deal with chained route strings (eg 'KSFO28R.OFFSH9.SXC.V458.IPL')\n        for (let i = 0; i < chainedRouteStrings.length; i++) {\n            const chainedRouteString = chainedRouteStrings[i];\n            const elementsInChain = chainedRouteString.split(PROCEDURE_OR_AIRWAY_SEGMENT_DIVIDER);\n            const firstSegment = elementsInChain.splice(0, 3);\n            const segments = [\n                firstSegment,\n                ..._chunk(elementsInChain, 2)\n            ];\n\n            segmentRouteStrings.push(firstSegment.join(PROCEDURE_OR_AIRWAY_SEGMENT_DIVIDER));\n\n            for (let j = 1; j < segments.length; j++) {\n                const exitOfPreviousSegment = _last(segments[j - 1]);\n                const procedureAndExitOfSegment = segments[j].join(PROCEDURE_OR_AIRWAY_SEGMENT_DIVIDER);\n\n                segmentRouteStrings.push(`${exitOfPreviousSegment}.${procedureAndExitOfSegment}`);\n            }\n        }\n\n        return segmentRouteStrings;\n    }\n\n    /**\n    * Return the name of the first waypoint at which this route and the specified route converge\n    * For routes that do not have continuity, this function will return undefined.\n    *\n    * @for RouteModel\n    * @method _findConvergentWaypointNameWithRouteModel\n    * @param routeModel {RouteModel}\n    * @return {string} name of the first waypoint where the routes converge\n    */\n    _findConvergentWaypointNameWithRouteModel(routeModel) {\n        const currentRouteWaypointNames = _map(this.waypoints, (waypointModel) => waypointModel.name);\n        const nextRouteWaypointNames = _map(routeModel.waypoints, (waypointModel) => waypointModel.name);\n\n        return _first(_intersection(currentRouteWaypointNames, nextRouteWaypointNames));\n    }\n\n    /**\n     * Return the index of the leg in the #_legCollection that contains the specified waypoint name\n     *\n     * @for RouteModel\n     * @method _findIndexOfLegContainingWaypointName\n     * @return {number}\n     */\n    _findIndexOfLegContainingWaypointName(waypointName) {\n        return _findIndex(this._legCollection, (legModel) => legModel.hasWaypointName(waypointName));\n    }\n\n    /**\n     * Return the index of the SID leg\n     *\n     * If for some reason there are multiple, this returns the first one.\n     * This search does NOT include legs in the `#_previousLegCollection`.\n     *\n     * @for RouteModel\n     * @method _findSidLegIndex\n     * @return {number}\n     * @private\n     */\n    _findSidLegIndex() {\n        return _findIndex(this._legCollection, (legModel) => legModel.isSidLeg);\n    }\n\n    /**\n     * Return the SID leg\n     *\n     * If for some reason there are multiple, this returns the first one.\n     * This search does NOT include legs in the `#_previousLegCollection`.\n     *\n     * @for RouteModel\n     * @method findSidLeg\n     * @return {ProcedureModel}\n     */\n    _findSidLeg() {\n        return this._legCollection.find((legModel) => legModel.isSidLeg);\n    }\n\n    /**\n     * Return the index of the STAR leg within the `#_legCollection`\n     *\n     * If for some reason there are multiple, this returns the first one.\n     * This search does NOT include legs in the `#_previousLegCollection`.\n     *\n     * @for RouteModel\n     * @method _findStarLegIndex\n     * @return {number}\n     * @private\n     */\n    _findStarLegIndex() {\n        return _findIndex(this._legCollection, (legModel) => legModel.isStarLeg);\n    }\n\n    /**\n     * Generate an array of `LegModel`s according to the provided route string\n     *\n     * @for RouteModel\n     * @method _generateLegsFromRouteString\n     * @param routeString {string}\n     * @return {array<LegModel>}\n     * @private\n     */\n    _generateLegsFromRouteString(routeString) {\n        const segments = this._divideRouteStringIntoSegments(routeString);\n        const legs = _map(segments, (segmentRouteString) => {\n            return new LegModel(segmentRouteString);\n        });\n\n        return legs;\n    }\n\n    /**\n     * Return a single continuous array containing the #_previousLegCollection AND #_legCollection\n     *\n     * @for RouteModel\n     * @method _getPastAndPresentLegModels\n     * @return {array<LegModel>}\n     */\n    _getPastAndPresentLegModels() {\n        return [\n            ...this._previousLegCollection,\n            ...this._legCollection\n        ];\n    }\n\n    /**\n     * Remove portions of the route between the specified waypoint names, and insert the provided RouteModel\n     *\n     * This will also result in amending (or exploding into direct legs) any leg with which\n     * the provided RouteModel intersects in the middle. For example, if the provided RouteModel\n     * intersects an airway leg at a waypoint somewhere other than the entry or exit of that airway\n     * leg, this method will change the entry/exit of the airway leg such that it aligns with the\n     * provided RouteModel.\n     *\n     * @for RouteModel\n     * @method _overwriteRouteBetweenWaypointNames\n     * @param startWaypointName {string}\n     * @param endWaypointName {string}\n     * @param routeModel {RouteModel}\n     * @return {array} [success of operation, readback]\n     */\n    _overwriteRouteBetweenWaypointNames(startWaypointName, endWaypointName, routeModel) {\n        const legCollection = this._legCollection.slice(0);\n        const indexOfDivergentLegModel = this._findIndexOfLegContainingWaypointName(startWaypointName);\n        const indexOfConvergentLegModel = this._findIndexOfLegContainingWaypointName(endWaypointName);\n        const amendedDivergentLegModels = this._createAmendedDivergentLeg(indexOfDivergentLegModel, startWaypointName);\n        const amendedConvergentLegModels = this._createAmendedConvergentLeg(indexOfConvergentLegModel, endWaypointName);\n        const endingLegCollection = legCollection.splice(indexOfConvergentLegModel + 1);\n\n        legCollection.splice(indexOfDivergentLegModel);\n\n        const beginningLegCollection = legCollection;\n\n        this._legCollection = [\n            ...beginningLegCollection,\n            ...amendedDivergentLegModels,\n            ...routeModel.legCollection,\n            ...amendedConvergentLegModels,\n            ...endingLegCollection\n        ];\n\n        const readback = {};\n        readback.log = `rerouting to: ${this.getRouteStringWithSpaces()}`;\n        readback.say = 'rerouting as requested';\n\n        return [true, readback];\n    }\n\n    /**\n     * Prepend a provided route model into this RouteModel\n     *\n     * This method only serves to call the method that contains the appropriate logic\n     * based on the type of leg in which the convergent waypoint resides, since this\n     * heavily weighs in to how the merging of the routes should be done.\n     *\n     * @for RouteModel\n     * @method _prependRouteModelEndingAtWaypointName\n     * @param convergentWaypointName {string} name of waypoint at which the two routes have continuity\n     * @param routeModel {RouteModel} the RouteModel to be absorbed into this\n     */\n    _prependRouteModelEndingAtWaypointName(convergentWaypointName, routeModel) {\n        const indexOfConvergentLegModel = this._findIndexOfLegContainingWaypointName(convergentWaypointName);\n        const convergentLegModel = this._legCollection[indexOfConvergentLegModel];\n\n        if (convergentLegModel.isAirwayLeg) {\n            return this._prependRouteModelIntoAirwayLeg(convergentWaypointName, routeModel);\n        }\n\n        if (convergentLegModel.isDirectLeg) {\n            return this._prependRouteModelIntoDirectLeg(convergentWaypointName, routeModel);\n        }\n\n        if (convergentLegModel.isSidLeg) {\n            return this._prependRouteModelIntoSidLeg(convergentWaypointName, routeModel);\n        }\n\n        if (convergentLegModel.isStarLeg) {\n            return this._prependRouteModelIntoStarLeg(convergentWaypointName, routeModel);\n        }\n\n        throw new TypeError(`Expected known leg type, but received \"${convergentLegModel.legType}\" ` +\n            'type leg, preventing ability to determine the appropriate route merging strategy!');\n    }\n\n    /**\n     * Prepend a provided route model into this RouteModel when the convergent waypoint is in an airway leg\n     *\n     * This should only ever be called by `._prependRouteModelEndingAtWaypointName()`\n     *\n     * @for RouteModel\n     * @method _prependRouteModelIntoAirwayLeg\n     * @param convergentWaypointName {string} name of waypoint at which the two routes have continuity\n     * @param routeModel {RouteModel} the RouteModel to be absorbed into this\n     */\n    _prependRouteModelIntoAirwayLeg(convergentWaypointName, routeModel) {\n        const indexOfConvergentLegModel = this._findIndexOfLegContainingWaypointName(convergentWaypointName);\n        const amendedAirwayLeg = this._createAmendedAirwayLegUsingDifferentEntryName(\n            convergentWaypointName,\n            indexOfConvergentLegModel\n        );\n\n        this._legCollection = [\n            ...routeModel.legCollection,\n            amendedAirwayLeg,\n            ...this._legCollection.splice(indexOfConvergentLegModel + 1)\n        ];\n\n        const readback = {};\n        readback.log = `rerouting to: ${this.getRouteStringWithSpaces()}`;\n        readback.say = 'rerouting as requested';\n\n        return [true, readback];\n    }\n\n    /**\n     * Prepend a provided route model into this RouteModel when the convergent waypoint is in a direct leg\n     *\n     * This should only ever be called by `._prependRouteModelEndingAtWaypointName()`\n     *\n     * @for RouteModel\n     * @method _prependRouteModelIntoDirectLeg\n     * @param convergentWaypointName {string} name of waypoint at which the two routes have continuity\n     * @param routeModel {RouteModel} the RouteModel to be absorbed into this\n     */\n    _prependRouteModelIntoDirectLeg(convergentWaypointName, routeModel) {\n        const indexOfConvergentLegModel = this._findIndexOfLegContainingWaypointName(convergentWaypointName);\n\n        this._legCollection = [\n            ...routeModel.legCollection,\n            ...this._legCollection.splice(indexOfConvergentLegModel + 1)\n        ];\n\n        const readback = {};\n        readback.log = `rerouting to: ${this.getRouteStringWithSpaces()}`;\n        readback.say = 'rerouting as requested';\n\n        return [true, readback];\n    }\n\n    /**\n     * Prepend a provided route model into this RouteModel when the convergent waypoint is in a SID leg\n     *\n     * This should only ever be called by `._prependRouteModelEndingAtWaypointName()`\n     *\n     * @for RouteModel\n     * @method _prependRouteModelIntoSidLeg\n     * @param convergentWaypointName {string} name of waypoint at which the two routes have continuity\n     * @param routeModel {RouteModel} the RouteModel to be absorbed into this\n     */\n    _prependRouteModelIntoSidLeg(convergentWaypointName, routeModel) {\n        const indexOfConvergentLegModel = this._findIndexOfLegContainingWaypointName(convergentWaypointName);\n        const remainingLegWaypointsAsLegs = this._createLegsFromSidWaypointsAfterWaypointName(\n            convergentWaypointName,\n            indexOfConvergentLegModel\n        );\n\n        this._legCollection = [\n            ...routeModel.legCollection,\n            ...remainingLegWaypointsAsLegs,\n            ...this._legCollection.splice(indexOfConvergentLegModel + 1)\n        ];\n\n        const readback = {};\n        readback.log = `rerouting to: ${this.getRouteStringWithSpaces()}`;\n        readback.say = 'rerouting as requested';\n\n        return [true, readback];\n    }\n\n    /**\n     * Prepend a provided route model into this RouteModel when the convergent waypoint is in a STAR leg\n     *\n     * This should only ever be called by `._prependRouteModelEndingAtWaypointName()`\n     *\n     * @for RouteModel\n     * @method _prependRouteModelIntoStarLeg\n     * @param convergentWaypointName {string} name of waypoint at which the two routes have continuity\n     * @param routeModel {RouteModel} the RouteModel to be absorbed into this\n     */\n    _prependRouteModelIntoStarLeg(convergentWaypointName, routeModel) {\n        const indexOfConvergentLegModel = this._findIndexOfLegContainingWaypointName(convergentWaypointName);\n        const convergentLegModel = this._legCollection[indexOfConvergentLegModel];\n\n        if (convergentLegModel.procedureHasEntry(convergentWaypointName)) {\n            const amendedStarLeg = this._createAmendedStarLegUsingDifferentEntryName(\n                convergentWaypointName,\n                indexOfConvergentLegModel\n            );\n\n            this._legCollection = [\n                ...routeModel.legCollection,\n                amendedStarLeg,\n                ...this._legCollection.splice(indexOfConvergentLegModel + 1)\n            ];\n\n            const readback = {};\n            readback.log = `rerouting to: ${this.getRouteStringWithSpaces()}`;\n            readback.say = 'rerouting as requested';\n\n            return [true, readback];\n        }\n\n        const remainingLegWaypointsAsLegs = this._createLegsFromStarWaypointsAfterWaypointName(\n            convergentWaypointName,\n            indexOfConvergentLegModel\n        );\n\n        this._legCollection = [\n            ...routeModel.legCollection,\n            ...remainingLegWaypointsAsLegs,\n            ...this._legCollection.splice(indexOfConvergentLegModel + 1)\n        ];\n\n        const readback = {};\n        readback.log = `rerouting to: ${this.getRouteStringWithSpaces()}`;\n        readback.say = 'rerouting as requested';\n\n        return [true, readback];\n    }\n}\n","import _isArray from 'lodash/isArray';\nimport _isEmpty from 'lodash/isEmpty';\nimport _isNumber from 'lodash/isNumber';\nimport FixCollection from '../../navigationLibrary/FixCollection';\nimport {\n    INVALID_INDEX,\n    INVALID_NUMBER\n} from '../../constants/globalConstants';\nimport {\n    DEFAULT_HOLD_PARAMETERS,\n    RNAV_WAYPOINT_DISPLAY_NAME,\n    RNAV_WAYPOINT_PREFIX\n} from '../../constants/waypointConstants';\n// import { extractHeadingFromVectorSegment } from '../../navigationLibrary/Route/routeStringFormatHelper';\nimport { parseAltitudeRestriction, parseSpeedRestriction } from '../../utilities/navigationUtilities';\nimport {\n    degreesToRadians,\n    DECIMAL_RADIX\n} from '../../utilities/unitConverters';\n\n/**\n * A navigation point within an aircraft's flight plan\n *\n * This may include various types of restrictions or holding information, all\n * of which are used by the aircraft to follow various routes and procedures\n * utilized by the controller.\n *\n * @class WaypointModel\n */\nexport default class WaypointModel {\n    /**\n     * @for WaypointModel\n     * @constructor\n     */\n    constructor(data) {\n        if (typeof data !== 'string' && !_isArray(data)) {\n            throw new TypeError(`Expected valid data to create WaypointModel but received ${data}`);\n        }\n\n        this.altitudeMaximum = INVALID_NUMBER;\n        this.altitudeMinimum = INVALID_NUMBER;\n        this._speedMaximum = INVALID_NUMBER;\n        this._speedMinimum = INVALID_NUMBER;\n        this._defaultHoldParameters = Object.assign({}, DEFAULT_HOLD_PARAMETERS);\n        this._holdParameters = Object.assign({}, DEFAULT_HOLD_PARAMETERS);\n        this._isFlyOverWaypoint = false;\n        this._isHoldWaypoint = false;\n        this._isVectorWaypoint = false;\n        this._name = '';\n        this._positionModel = null;\n\n        this.init(data);\n    }\n\n    /**\n     * Returns whether this waypoint has a value for #altitudeMaximum\n     *\n     * @for WaypointModel\n     * @property hasAltiudeMaximumRestriction\n     * @type {boolean}\n     */\n    get hasAltiudeMaximumRestriction() {\n        return this.altitudeMaximum !== INVALID_NUMBER;\n    }\n\n    /**\n     * Returns whether this waypoint has a value for #altitudeMinimum\n     *\n     * @for WaypointModel\n     * @property hasAltiudeMinimumRestriction\n     * @type {boolean}\n     */\n    get hasAltiudeMinimumRestriction() {\n        return this.altitudeMinimum !== INVALID_NUMBER;\n    }\n\n    /**\n     * Returns whether this waypoint has an altitude restriction of any kind\n     *\n     * @for WaypointModel\n     * @property hasAltitudeRestriction\n     * @type {boolean}\n     */\n    get hasAltitudeRestriction() {\n        return this.hasAltiudeMaximumRestriction || this.hasAltiudeMinimumRestriction;\n    }\n\n    /**\n     * Returns whether this waypoint has a restriction of any kind\n     *\n     * @for WaypointModel\n     * @property hasRestriction\n     * @type {boolean}\n     */\n    get hasRestriction() {\n        return this.hasAltitudeRestriction || this.hasSpeedRestriction;\n    }\n\n    /**\n     * Returns whether this waypoint has a value for #speedMaximum\n     *\n     * @for WaypointModel\n     * @property hasSpeedMaximumRestriction\n     * @type {boolean}\n     */\n    get hasSpeedMaximumRestriction() {\n        return this.speedMaximum !== INVALID_NUMBER;\n    }\n\n    /**\n     * Returns whether this waypoint has a value for #speedMinimum\n     *\n     * @for WaypointModel\n     * @property hasSpeedMinimumRestriction\n     * @type {boolean}\n     */\n    get hasSpeedMinimumRestriction() {\n        return this.speedMinimum !== INVALID_NUMBER;\n    }\n\n    /**\n     * Returns whether this waypoint has a speed restriction of any kind\n     *\n     * @for WaypointModel\n     * @property hasSpeedRestriction\n     * @type {boolean}\n     */\n    get hasSpeedRestriction() {\n        return this.hasSpeedMaximumRestriction || this.hasSpeedMinimumRestriction;\n    }\n\n    /**\n     * Provides properties needed for an aircraft to execute a\n     * holding pattern.\n     *\n     * This is used to match an existing API\n     *\n     * @for WaypointModel\n     * @property hold\n     * @return {object}\n     */\n    get holdParameters() {\n        if (!this._isHoldWaypoint) {\n            return;\n        }\n\n        return this._holdParameters;\n    }\n\n    /**\n     * Returns whether this waypoint is a fly-over waypoint\n     *\n     * Fly-over waypoints are waypoints that aircraft may not begin the turn to their\n     * next fix until they fully pass this waypoint\n     *\n     * @for WaypointModel\n     * @property isFlyOverWaypoint\n     * @return {boolean}\n     */\n    get isFlyOverWaypoint() {\n        return this._isFlyOverWaypoint;\n    }\n\n    /**\n    * Returns whether this waypoint includes an activated holding pattern\n    *\n    * @for WaypointModel\n    * @property isHoldWaypoint\n    * @type {boolean}\n    */\n    get isHoldWaypoint() {\n        return this._isHoldWaypoint;\n    }\n\n    /**\n    * Returns whether this waypoint is a vector waypoint\n    *\n    * Vector waypoints are simply an instruction to fly a particular heading\n    *\n    * @for WaypointModel\n    * @property isVector\n    * @return {boolean}\n    */\n    get isVectorWaypoint() {\n        return this._isVectorWaypoint;\n    }\n\n    /**\n     * Returns the value of #_name\n     *\n     * @for WaypointModel\n     * @property name\n     * @type {string}\n     */\n    get name() {\n        return this._name;\n    }\n\n    /**\n     * Provide read-only public access to this._positionModel\n     *\n     * @for SpawnPatternModel\n     * @property positionModel\n     * @type {StaticPositionModel}\n     */\n    get positionModel() {\n        return this._positionModel;\n    }\n\n    /**\n     * Facade to access relative position\n     *\n     * @for WaypointModel\n     * @property relativePosition\n     * @return {array<number>} [kilometersNorth, kilometersEast]\n     */\n    get relativePosition() {\n        if (this.isVectorWaypoint) {\n            return;\n        }\n\n        return this._positionModel.relativePosition;\n    }\n\n    /**\n     * The maxmimum speed allowed for the Waypoint, or hold if `#isHoldwaypoint`\n     *\n     * @returns {number}\n     */\n    get speedMaximum() {\n        if (this.isHoldWaypoint && this._holdParameters.speedMaximum !== undefined) {\n            return this._holdParameters.speedMaximum;\n        }\n\n        return this._speedMaximum;\n    }\n\n    /**\n     * The minimum speed allowed for the Waypoint\n     *\n     * @returns {number}\n     */\n    get speedMinimum() {\n        return this._speedMinimum;\n    }\n\n    // ------------------------------ LIFECYCLE ------------------------------\n\n    /**\n     * Initialize instance properties\n     *\n     * @for WaypointModel\n     * @method init\n     * @param data {object}\n     * @chainable\n     */\n    init(data) {\n        let fixName = data;\n        let restrictions = '';\n\n        if (_isArray(data)) {\n            if (data.length !== 2) {\n                throw new TypeError(`Expected restricted fix to have restrictions, but received ${data}`);\n            }\n\n            [fixName, restrictions] = data;\n        }\n\n        this._name = fixName.replace('@', '').replace('^', '');\n\n        this._initSpecialWaypoint(fixName);\n        this._applyRestrictions(restrictions);\n        this._initializePosition();\n    }\n\n    /**\n     * Reset instance properties\n     *\n     * @for WaypointModel\n     * @method reset\n     * @chainable\n     */\n    reset() {\n        this.altitudeMaximum = INVALID_NUMBER;\n        this.altitudeMinimum = INVALID_NUMBER;\n        this._speedMaximum = INVALID_NUMBER;\n        this._speedMinimum = INVALID_NUMBER;\n        this._defaultHoldParameters = Object.assign({}, DEFAULT_HOLD_PARAMETERS);\n        this._holdParameters = Object.assign({}, DEFAULT_HOLD_PARAMETERS);\n        this._isFlyOverWaypoint = false;\n        this._isHoldWaypoint = false;\n        this._isVectorWaypoint = false;\n        this._name = '';\n        this._positionModel = null;\n\n        return this;\n    }\n\n    /**\n     * Initialize properties to make this waypoint a fly-over waypoint\n     *\n     * @for WaypointModel\n     * @method _initFlyOverWaypoint\n     * @private\n     */\n    _initFlyOverWaypoint() {\n        this._isFlyOverWaypoint = true;\n    }\n\n    /**\n     * Initialize properties to make this waypoint a hold waypoint\n     *\n     * @for WaypointModel\n     * @method _initHoldWaypoint\n     * @private\n     */\n    _initHoldWaypoint() {\n        this._isHoldWaypoint = true;\n    }\n\n    /**\n     * Perform additional initialization tasks as needed if waypoint is a flyover/hold/vector/etc waypoint\n     *\n     * @for WaypointModel\n     * @method _initSpecialWaypoint\n     * @param fixname {string} name of the fix, including any special characters\n     */\n    _initSpecialWaypoint(fixName) {\n        if (fixName.indexOf('^') !== INVALID_INDEX) {\n            this._initFlyOverWaypoint();\n\n            return;\n        }\n\n        if (fixName.indexOf('@') !== INVALID_INDEX) {\n            this._initHoldWaypoint();\n\n            return;\n        }\n\n        if (fixName.indexOf('#') !== INVALID_INDEX) {\n            this._initVectorWaypoint();\n        }\n    }\n\n    /**\n     * Initialize properties to make this waypoint a vector waypoint\n     *\n     * @for WaypointModel\n     * @method _initVectorWaypoint\n     * @private\n     */\n    _initVectorWaypoint() {\n        this._isVectorWaypoint = true;\n    }\n\n    // ------------------------------ PUBLIC ------------------------------\n\n    /**\n     * Mark this waypoint as a hold waypoint\n     *\n     * @for WaypointModel\n     * @method activateHold\n     */\n    activateHold() {\n        this._isHoldWaypoint = true;\n    }\n\n    /**\n     * Calculate the distance between two waypoint models\n     *\n     * @for WaypointModel\n     * @method calculateBearingToWaypoint\n     * @param waypointModel {WaypointModel}\n     * @return {number} bearing, in radians\n     */\n    calculateBearingToWaypoint(waypointModel) {\n        this._ensureNonVectorWaypointsForThisAndWaypoint(waypointModel);\n\n        return this._positionModel.bearingToPosition(waypointModel.positionModel);\n    }\n\n    /**\n     * Calculate the distance between two waypoint models\n     *\n     * @for WaypointModel\n     * @method calculateDistanceToWaypoint\n     * @param waypointModel {WaypointModel}\n     * @return {number} distance, in nautical miles\n     */\n    calculateDistanceToWaypoint(waypointModel) {\n        this._ensureNonVectorWaypointsForThisAndWaypoint(waypointModel);\n\n        return this._positionModel.distanceToPosition(waypointModel.positionModel);\n    }\n\n    /**\n     * Cancel any hold at this waypoint\n     *\n     * @for WaypointModel\n     * @method deactivateHold\n     */\n    deactivateHold() {\n        this._isHoldWaypoint = false;\n    }\n\n    /**\n     * Returns the name of the waypoint, amended for display to user\n     *\n     * Will return `[RNAV]` for waypoints prefixed with an underscore\n     *\n     * @for WaypointModel\n     * @property name\n     * @type {string}\n     */\n    getDisplayName() {\n        if (this._name.indexOf(RNAV_WAYPOINT_PREFIX) !== INVALID_INDEX) {\n            return RNAV_WAYPOINT_DISPLAY_NAME;\n        }\n\n        return this._name;\n    }\n\n    /**\n     * When `#_isVector` is true, this gets the heading that should be flown\n     *\n     * @for WaypointModel\n     * @method _getVector\n     * @type {number}\n     */\n    getVector() {\n        if (!this._isVectorWaypoint) {\n            return;\n        }\n\n        const fixNameWithOutPoundSign = this._name.replace('#', '');\n        const headingInDegrees = parseInt(fixNameWithOutPoundSign, DECIMAL_RADIX);\n        const headingInRadians = degreesToRadians(headingInDegrees);\n\n        return headingInRadians;\n    }\n\n    /**\n     * Check for a maximum altitude restriction at or below the given altitude\n     *\n     * @for WaypointModel\n     * @method hasMaximumAltitudeAtOrBelow\n     * @param altitude {number} in feet\n     * @return {boolean}\n     */\n    hasMaximumAltitudeAtOrBelow(altitude) {\n        return this.altitudeMaximum !== INVALID_NUMBER && this.altitudeMaximum <= altitude;\n    }\n\n    /**\n     * Check for a minimum altitude restriction at or above the given altitude\n     *\n     * @for WaypointModel\n     * @method hasMinimumAltitudeAtOrAbove\n     * @param altitude {number} in feet\n     * @return {boolean}\n     */\n    hasMinimumAltitudeAtOrAbove(altitude) {\n        return this.altitudeMinimum !== INVALID_NUMBER && this.altitudeMinimum >= altitude;\n    }\n\n    /**\n     * Check for a maximum speed restriction at or below the given speed\n     *\n     * @for WaypointModel\n     * @method hasMaximumSpeedAtOrBelow\n     * @param speed {number} in knots\n     * @return {boolean}\n     */\n    hasMaximumSpeedAtOrBelow(speed) {\n        const speedMax = this.speedMaximum;\n\n        return speedMax !== INVALID_NUMBER && speedMax <= speed;\n    }\n\n    /**\n     * Check for a minimum speed restriction at or above the given speed\n     *\n     * @for WaypointModel\n     * @method hasMinimumSpeedAtOrAbove\n     * @param speed {number} in knots\n     * @return {boolean}\n     */\n    hasMinimumSpeedAtOrAbove(speed) {\n        return this.speedMinimum !== INVALID_NUMBER && this.speedMinimum >= speed;\n    }\n\n    /**\n     * Reset the value of #_holdParameters.timer to the default\n     *\n     * @for WaypointModel\n     * @method resetHoldTimer\n     */\n    resetHoldTimer() {\n        this._holdParameters.timer = DEFAULT_HOLD_PARAMETERS.timer;\n    }\n\n    /**\n     * Set the #speedMinimum and #speedMaximum to the specified speed\n     *\n     * @for WaypointModel\n     * @method setSpeed\n     * @param speec {number} in knots\n     */\n    setSpeed(speed) {\n        this.setSpeedMinimum(speed);\n        this.setSpeedMaximum(speed);\n    }\n\n    /**\n     * Set the #_speedMaximum to the specified speed\n     *\n     * @for WaypointModel\n     * @method setSpeedMaximum\n     * @param speedMaximum {number} in knots\n     */\n    setSpeedMaximum(speedMaximum) {\n        if (!_isNumber(speedMaximum)) {\n            console.warn(`Expected number to set as max speed of waypoint '${this.name}', ` +\n                `but received '${speedMaximum}'`);\n\n            return;\n        }\n\n        this._speedMaximum = speedMaximum;\n    }\n\n    /**\n     * Set the #_speedMinimum to the specified speed\n     *\n     * @for WaypointModel\n     * @method setSpeedMinimum\n     * @param speedMinimum {number} in knots\n     */\n    setSpeedMinimum(speedMinimum) {\n        if (!_isNumber(speedMinimum)) {\n            console.warn(`Expected number to set as minimum speed of waypoint '${this.name}', ` +\n                `but received '${speedMinimum}'`);\n\n            return;\n        }\n\n        this._speedMinimum = speedMinimum;\n    }\n\n    /**\n     * Set the #altitudeMinimum and #altitudeMaximum to the specified altitude\n     *\n     * @for WaypointModel\n     * @method setAltitude\n     * @param altitude {number} in feet\n     */\n    setAltitude(altitude) {\n        this.setAltitudeMaximum(altitude);\n        this.setAltitudeMinimum(altitude);\n    }\n\n    /**\n     * Set the #altitudeMaximum to the specified altitude\n     *\n     * @for WaypointModel\n     * @method setAltitudeMaximum\n     * @param altitudeMaximum {number} in feet\n     */\n    setAltitudeMaximum(altitudeMaximum) {\n        if (!_isNumber(altitudeMaximum)) {\n            console.warn(`Expected number to set as max altitude of waypoint '${this._name}', ` +\n                `but received '${altitudeMaximum}'`);\n\n            return;\n        }\n\n        if (altitudeMaximum < 0 || altitudeMaximum > 60000) {\n            console.warn(`Expected requested waypoint '${this._name}' max altitude to be reasonable, ` +\n                `but received altitude of '${altitudeMaximum}'`);\n\n            return;\n        }\n\n        this.altitudeMaximum = altitudeMaximum;\n    }\n\n    /**\n     * Set the #altitudeMinimum to the specified altitude\n     *\n     * @for WaypointModel\n     * @method setAltitudeMinimum\n     * @param altitudeMinimum {number} in feet\n     */\n    setAltitudeMinimum(altitudeMinimum) {\n        if (!_isNumber(altitudeMinimum)) {\n            console.warn(`Expected number to set as max altitude of waypoint '${this._name}', ` +\n                `but received '${altitudeMinimum}'`);\n\n            return;\n        }\n\n        if (altitudeMinimum < 0 || altitudeMinimum > 60000) {\n            console.warn(`Expected requested waypoint '${this._name}' max altitude to be reasonable, ` +\n                `but received altitude altitude of '${altitudeMinimum}'`);\n\n            return;\n        }\n\n        this.altitudeMinimum = altitudeMinimum;\n    }\n\n    /**\n     * Set default parameters for the planned holding pattern at this waypoint, and will\n     * set both `#_defaultHoldParameters` and `#_holdParameters` properties\n     *\n     * This should only be called immedately after creating a new `WaypointModel`\n     *\n     * @for WaypointModel\n     * @method setDefaultHoldParameters\n     * @param holdParameters {object}\n     */\n    setDefaultHoldParameters(holdParameters) {\n        // The rationale behind having both _defaultHoldParameters and _holdParameters is:\n        // * Without this, once a hold command is executed with specific options (eg. HOLD BPK left 225),\n        //   it could overwrite the parameters for a procedural hold\n        // * This would mean that if the hold was cancelled and re-requested without any specific options (eg. HOLD BPK)\n        //   it would still use \"left 225\", and not the expected defaults from the pocedure\n\n        // These can't be the same reference, as we don't want any changes to made _holdParameters\n        // (eg. timer) to be passed onto _defaultHoldParameters\n        this._defaultHoldParameters = Object.assign({}, DEFAULT_HOLD_PARAMETERS, holdParameters);\n        this._holdParameters = Object.assign({}, DEFAULT_HOLD_PARAMETERS, holdParameters);\n    }\n\n    /**\n     * Set parameters for the planned holding pattern at this waypoint. This does NOT\n     * inherently make this a hold waypoint, but simply describes the holding pattern\n     * aircraft should follow IF they are told to hold at this waypoint\n     *\n     * @for WaypointModel\n     * @method setHoldParameters\n     * @param holdParameters {object}\n     * @param fallbackInboundHeading {number} an optional inboundHeading that is used if no default is available\n     * @returns {object} The hold parameters set for the `WaypointModel`\n     */\n    setHoldParameters(holdParameters, fallbackInboundHeading) {\n        const params = Object.assign({}, this._defaultHoldParameters, holdParameters);\n\n        if (params.inboundHeading == null) {\n            params.inboundHeading = fallbackInboundHeading;\n        }\n\n        this._holdParameters = params;\n\n        return params;\n    }\n\n    /**\n     * Stores provided parameters for holding pattern, and marks this as a hold waypoint\n     *\n     * @for WaypointModel\n     * @method setHoldParametersAndActivateHold\n     * @param inboundHeading {number} in radians\n     * @param turnDirection {string} either left or right\n     * @param legLength {string} length of the hold leg in minutes or nm\n     * @param fallbackInboundHeading {number} an optional inboundHeading that is used if no default is available\n     * @returns {object} The hold parameters set\n     */\n    setHoldParametersAndActivateHold(holdParameters, fallbackInboundHeading = undefined) {\n        const params = this.setHoldParameters(holdParameters, fallbackInboundHeading);\n\n        this.activateHold();\n\n        return params;\n    }\n\n    /**\n     * Set the value of #_holdParameters.timer\n     *\n     * @for WaypointModel\n     * @method setHoldTimer\n     * @param expirationTime {number} game time (seconds) when the timer should \"expire\"\n     */\n    setHoldTimer(expirationTime) {\n        if (typeof expirationTime !== 'number') {\n            throw new TypeError('Expected hold timer expiration time to be a ' +\n                `number, but received type ${typeof expirationTime}`);\n        }\n\n        this._holdParameters.timer = expirationTime;\n    }\n\n    // ------------------------------ PRIVATE ------------------------------\n\n    /**\n     * Apply an altitude restriction in the appropriate properties\n     *\n     * @for WaypointModel\n     * @method _applyAltitudeRestriction\n     * @param restriction {string}\n     */\n    _applyAltitudeRestriction(restriction) {\n        const [altitude, limit] = parseAltitudeRestriction(restriction);\n\n        if (altitude == null) {\n            throw new Error(`Expected valid altitude restriction, but received ${restriction}`);\n        }\n\n        if (limit === '+') {\n            this.altitudeMinimum = altitude;\n\n            return;\n        }\n\n        if (limit === '-') {\n            this.altitudeMaximum = altitude;\n\n            return;\n        }\n\n        this.altitudeMaximum = altitude;\n        this.altitudeMinimum = altitude;\n    }\n\n    /**\n     * Parse the restrictions, and store the inferred meaning in the appropriate properties\n     *\n     * @for WaypointModel\n     * @method _applyRestrictions\n     * @param restrictions {string} restrictions, separated by pipe symbol: '|'\n     */\n    _applyRestrictions(restrictions) {\n        if (_isEmpty(restrictions)) {\n            return;\n        }\n\n        const restrictionCollection = restrictions.split('|');\n\n        for (let i = 0; i < restrictionCollection.length; i++) {\n            const restriction = restrictionCollection[i];\n\n            // looking at the first letter of a restriction\n            if (restriction[0] === 'A') {\n                this._applyAltitudeRestriction(restriction);\n            } else if (restriction[0] === 'S') {\n                this._applySpeedRestriction(restriction);\n            } else {\n                throw new TypeError('Expected \"A\" or \"S\" prefix on restriction, ' +\n                    `but received prefix '${restriction[0]}'`);\n            }\n        }\n    }\n\n    /**\n     * Apply a speed restriction in the appropriate properties\n     *\n     * @for WaypointModel\n     * @method _applySpeedRestriction\n     * @param restriction {string}\n     */\n    _applySpeedRestriction(restriction) {\n        const [speed, limit] = parseSpeedRestriction(restriction);\n\n        if (speed == null) {\n            throw new Error(`Expected valid speed restriction, but received ${restriction}`);\n        }\n\n        if (limit === '+') {\n            this._speedMinimum = speed;\n\n            return;\n        }\n\n        if (limit === '-') {\n            this._speedMaximum = speed;\n\n            return;\n        }\n\n        this._speedMaximum = speed;\n        this._speedMinimum = speed;\n    }\n\n    /**\n     * Verify that this waypoint and the specified waypoint are both valid, non-vector waypoints\n     *\n     * If either are not, then throw some errors about it.\n     *\n     * This method is used to protect certain methods that would have undesirable\n     * behaviors with vector waypoints (such as those measuring angles or distances\n     * between waypoint models, etc). In those cases, we should be cognizant to\n     * exclude vector (or other undesirable) waypoints from those operations, rather\n     * than attempting to execute a calculation that cannot yield a logical result.\n     *\n     * @for WaypointModel\n     * @method _ensureNonVectorWaypointsForThisAndWaypoint\n     * @param waypointModel {WaypointModel}\n     * @private\n     */\n    _ensureNonVectorWaypointsForThisAndWaypoint(waypointModel) {\n        if (!(waypointModel instanceof WaypointModel)) {\n            throw new TypeError(`Expected a WaypointModel instance, but received type '${waypointModel}'`);\n        }\n\n        if (this._isVectorWaypoint || waypointModel.isVectorWaypoint) {\n            throw new TypeError('Expected .calculateBearingToWaypoint() to never be called with vector waypoints!');\n        }\n    }\n\n    /**\n     * Initialize the waypoint's position model based on #_name\n     *\n     * @for WaypointModel\n     * @method _initializePosition\n     */\n    _initializePosition() {\n        if (this._isVectorWaypoint) {\n            return;\n        }\n\n        const fixPosition = FixCollection.getPositionModelForFixName(this._name);\n\n        if (!fixPosition) {\n            throw new TypeError(`Expected fix with known position, but cannot find fix '${this._name}'`);\n        }\n\n        this._positionModel = fixPosition;\n    }\n}\n","import {\n    MCP_MODE,\n    MCP_MODE_NAME,\n    MCP_FIELD_NAME\n} from './modeControlConstants';\nimport { INVALID_NUMBER } from '../../constants/globalConstants';\nimport { radiansToDegrees } from '../../utilities/unitConverters';\n\n/**\n * Part of the autopilot system that determines the source from which to derive the aircraft's targeted telemetry\n *\n * @class ModeController\n */\nexport default class ModeController {\n    /**\n     * @constructor\n     * @for ModeController\n     */\n    constructor() {\n        /**\n         * Flag used to determine if the controller is enabled\n         *\n         * @property isEnabled\n         * @type {boolean}\n         * @default flase\n         * @private\n         */\n        this.isEnabled = false;\n\n        // Mode Selectors\n        /**\n         * The current altitudeMode\n         *\n         * This mode informs what value to use for `aircraft.target.altitude`\n         *\n         * @property\n         * @type\n         * @default\n         */\n        this.altitudeMode = MCP_MODE.ALTITUDE.OFF;\n\n        /**\n         *\n         *\n         * @property autopilotMode\n         * @type\n         * @default MCP_MODE.AUTOPILOT.OFF\n         */\n        this.autopilotMode = MCP_MODE.AUTOPILOT.OFF;\n\n        /**\n         * The current headingeMode\n         *\n         * This mode informs what value to use for `aircraft.targetHeading`\n         *\n         *\n         * @property headingMode\n         * @type\n         * @default MCP_MODE.HEADING.OFF\n         */\n        this.headingMode = MCP_MODE.HEADING.OFF;\n\n        /**\n         * The current speedMode\n         *\n         * This mode informs what value to use for `aircraft.target.speed`\n         *\n         * @property speedMode\n         * @type\n         * @default MCP_MODE.SPEED.OFF\n         */\n        this.speedMode = MCP_MODE.SPEED.OFF;\n\n        // Fields\n\n        /**\n         * Altitude value\n         *\n         * Used when `altitudeMode` is 'HOLD'\n         *\n         * @property altitude\n         * @type {number}\n         * @default INVALID_NUMBER\n         */\n        this.altitude = INVALID_NUMBER;\n\n        /**\n         *\n         *\n         * @property course\n         * @type {number}\n         * @default INVALID_NUMBER\n         */\n        this.course = INVALID_NUMBER;\n\n        /**\n         * Heading value in radians\n         *\n         * Used when `headingMode` is `HOLD`\n         *\n         * Use `#headingInDegrees` when this value needs to\n         * be shown to the user, like in the `AircraftStripView`\n         *\n         * @property heading\n         * @type {number}\n         * @default INVALID_NUMBER\n         */\n        this.heading = INVALID_NUMBER;\n\n        /**\n         * Speed value in knots\n         *\n         * Used when `speedMode` is `HOLD`\n         *\n         * @property speed\n         * @type {number}\n         * @default INVALID_NUMBER\n         */\n        this.speed = INVALID_NUMBER;\n\n        // Other\n\n        /**\n         *\n         *\n         * @property shouldExpediteAltitudeChange\n         * @type {boolean}\n         * @default false\n         */\n        this.shouldExpediteAltitudeChange = false;\n\n        /**\n         *\n         *\n         * @property nav1Datum\n         * @type\n         * @default null\n         */\n        this.nav1Datum = null;\n\n        /**\n         *\n         *\n         * @property descentAngle\n         * @type {number}\n         * @default 0\n         */\n        this.descentAngle = 0;\n\n        this.init();\n    }\n\n    /**\n     * Current heading value expressed in degrees (0 - 359)\n     *\n     * @property headingInDegrees\n     * @return {number}\n     */\n    get headingInDegrees() {\n        return Math.floor(radiansToDegrees(this.heading));\n    }\n\n    /**\n     * Initialize the instance\n     *\n     * @for ModeController\n     * @method init\n     */\n    init() {\n        return this;\n    }\n\n    /**\n     * Sets `#isEnabled` flag to `true`\n     *\n     * @for ModeController\n     * @method enable\n     */\n    enable() {\n        if (this.isEnabled) {\n            return;\n        }\n\n        this.isEnabled = true;\n\n        this._setModeSelectorMode(MCP_MODE_NAME.AUTOPILOT, MCP_MODE.AUTOPILOT.ON);\n    }\n\n    /**\n     * Sets `#isEnabled` flag to `false`\n     *\n     * @for ModeController\n     * @method disable\n     */\n    disable() {\n        if (!this.isEnabled) {\n            return;\n        }\n\n        this.isEnabled = false;\n        this._setModeSelectorMode(MCP_MODE_NAME.AUTOPILOT, MCP_MODE.AUTOPILOT.OFF);\n    }\n\n    /**\n     *\n     *\n     * @for ModeController\n     * @method setNav1Datum\n     * @param nav1Datum {number}\n     */\n    setNav1Datum(datum) {\n        this.nav1Datum = datum;\n    }\n\n    // TODO: the descentAngle is a part of the ILS system itself, and should not be owned by the MCP\n    /**\n     *\n     *\n     * @for ModeController\n     * @method setDescentAngle\n     * @param descentAngle {number}\n     */\n    setDescentAngle(descentAngle) {\n        this.descentAngle = descentAngle;\n    }\n\n    /**\n     * Set the MCP altitude mode to `APCH`\n     *\n     * @for ModeController\n     * @method setAltitudeApproach\n     */\n    setAltitudeApproach() {\n        this._setModeSelectorMode(MCP_MODE_NAME.ALTITUDE, MCP_MODE.ALTITUDE.APPROACH);\n    }\n\n    /**\n     * Set the value of the MCP's altitude field to a given value\n     *\n     * @for ModeController\n     * @method setAltitudeFieldValue\n     * @param altitude {Number} value to set in the altitude field\n     */\n    setAltitudeFieldValue(altitude) {\n        this._setFieldValue(MCP_FIELD_NAME.ALTITUDE, altitude);\n    }\n\n    /**\n     * Set the MCP altitude mode to `HOLD`\n     *\n     * @for ModeController\n     * @method setAltitudeHold\n     */\n    setAltitudeHold() {\n        this._setModeSelectorMode(MCP_MODE_NAME.ALTITUDE, MCP_MODE.ALTITUDE.HOLD);\n    }\n\n    /**\n     * Set the MCP altitude mode to `VNAV`\n     *\n     * @for ModeController\n     * @method setAltitudeVnav\n     */\n    setAltitudeVnav() {\n        this._setModeSelectorMode(MCP_MODE_NAME.ALTITUDE, MCP_MODE.ALTITUDE.VNAV);\n    }\n\n    /**\n     * Set the value of the MCP's course field to a given value\n     *\n     * @for ModeController\n     * @method setCourseFieldValue\n     * @param course {number}  magnetic course (in radians)\n     */\n    setCourseFieldValue(course) {\n        this._setFieldValue(MCP_FIELD_NAME.COURSE, course);\n    }\n\n    /**\n     * Set the value of the MCP's heading field to a given value\n     *\n     * @for ModeController\n     * @method setHeadingFieldValue\n     * @param heading {number}  magnetic heading (in radians)\n     */\n    setHeadingFieldValue(heading) {\n        this._setFieldValue(MCP_FIELD_NAME.HEADING, heading);\n    }\n\n    /**\n     * Set the MCP heading mode to `HOLD`\n     *\n     * @for ModeController\n     * @method setHeadingHold\n     */\n    setHeadingHold() {\n        this._setModeSelectorMode(MCP_MODE_NAME.HEADING, MCP_MODE.HEADING.HOLD);\n    }\n\n    /**\n     * Set the MCP heading mode to `LNAV`\n     *\n     * @for ModeController\n     * @method setHeadingLnav\n     */\n    setHeadingLnav() {\n        this._setModeSelectorMode(MCP_MODE_NAME.HEADING, MCP_MODE.HEADING.LNAV);\n    }\n\n    /**\n     * Set the MCP heading mode to `VOR_LOC`\n     *\n     * @for ModeController\n     * @method setHeadingVorLoc\n     */\n    setHeadingVorLoc() {\n        this._setModeSelectorMode(MCP_MODE_NAME.HEADING, MCP_MODE.HEADING.VOR_LOC);\n    }\n\n    /**\n     * Set the value of the MCP's speed field to a given value\n     *\n     * @for ModeController\n     * @method setSpeedFieldValue\n     * @param speed {Number}  speed to set value to\n     */\n    setSpeedFieldValue(speed) {\n        this._setFieldValue(MCP_FIELD_NAME.SPEED, speed);\n    }\n\n    /**\n     * Set the MCP speed mode to `HOLD`\n     *\n     * @for ModeController\n     * @method setSpeedHold\n     */\n    setSpeedHold() {\n        this._setModeSelectorMode(MCP_MODE_NAME.SPEED, MCP_MODE.SPEED.HOLD);\n    }\n\n    /**\n     * Set the MCP speed mode to `N1`\n     *\n     * @for ModeController\n     * @method setSpeedN1\n     */\n    setSpeedN1() {\n        this._setModeSelectorMode(MCP_MODE_NAME.SPEED, MCP_MODE.SPEED.N1);\n    }\n\n    /**\n     * Set the MCP speed mode to `VNAV`\n     *\n     * @for ModeController\n     * @method setSpeedVnav\n     */\n    setSpeedVnav() {\n        this._setModeSelectorMode(MCP_MODE_NAME.SPEED, MCP_MODE.SPEED.VNAV);\n    }\n\n    /**\n     * Set the appropriate values in the MCP when spawning an aircraft already in flight\n     *\n     * @for ModeController\n     * @method initializeForAirborneFlight\n     * @param {number} bottomAltitude - the lowest altitude restriction in the FMS\n     * @param {number} airspaceCeiling - maximum altitude belonging to the controller\n     * @param {number} currentAltitude - aircraft's current altitude, in feet ASL\n     * @param {number} currentHeading - aircraft's current heading, in radians\n     * @param {number} currentSpeed - aircraft's current speed, in knots\n     */\n    initializeForAirborneFlight(bottomAltitude, airspaceCeiling, currentAltitude, currentHeading, currentSpeed) {\n        // ensure aircraft will always descend at least to reach our airspace ceiling\n        const descentAltitude = Math.min(bottomAltitude, airspaceCeiling, currentAltitude);\n\n        this.setAltitudeFieldValue(descentAltitude);\n        this.setAltitudeVnav();\n\n        // if unable to descend via STAR, force a descent to the top of our airspace\n        if (bottomAltitude === -1) {\n            this.setAltitudeFieldValue(Math.min(airspaceCeiling, currentAltitude));\n            this.setAltitudeHold();\n        }\n\n        this.setHeadingFieldValue(currentHeading);\n        this.setHeadingLnav();\n        this.setSpeedFieldValue(currentSpeed);\n        this.setSpeedVnav();\n        this.enable();\n    }\n\n    /**\n    * Set the value of a given fieldName\n    *\n    * @for ModeController\n    * @method _setFieldValue\n    * @param fieldName {MCP_FIELD_NAME}\n    * @param value {number}\n    */\n    _setFieldValue(fieldName, value) {\n        this[fieldName] = value;\n    }\n\n    /**\n     * Set the mode of a given modeSelector\n     *\n     * @for ModeController\n     * @method _setModeSelectorMode\n     * @param modeSelector {MCP_MODE_NAME}\n     * @param mode {MCP_MODE}\n     */\n    _setModeSelectorMode(modeSelector, mode) {\n        this[modeSelector] = mode;\n    }\n}\n","/**\n * Available values for `ModeController#altitudeMode`\n *\n * @memberof MCP_MODE\n * @property MCP_ALTITUDE_MODE\n * @type {Object}\n * @final\n */\nexport const MCP_ALTITUDE_MODE = {\n    HOLD: 'HOLD',\n    APPROACH: 'APPROACH',\n    LEVEL_CHANGE: 'LEVEL_CHANGE',\n    OFF: 'OFF',\n    VERTICAL_SPEED: 'VERTICAL_SPEED',\n    VNAV: 'VNAV'\n};\n\n/**\n * Available values for `ModeController#autopilotMode`\n *\n * @memberof MCP_MODE\n * @property MCP_AUTOPILOT_MODE\n * @type {Object}\n * @final\n */\nexport const MCP_AUTOPILOT_MODE = {\n    ON: 'ON',\n    OFF: 'OFF'\n};\n\n/**\n * Available values for `ModeController#headingMode`\n *\n * @memberof MCP_MODE\n * @property MCP_HEADING_MODE\n * @type {Object}\n * @final\n */\nexport const MCP_HEADING_MODE = {\n    HOLD: 'HOLD',\n    LNAV: 'LNAV',\n    OFF: 'OFF',\n    VOR_LOC: 'VOR_LOC'\n};\n\n/**\n * Available values for `ModeController#speedMode`\n *\n * @memberof MCP_MODE\n * @property MCP_SPEED_MODE\n * @type {Object}\n * @final\n */\nexport const MCP_SPEED_MODE = {\n    LEVEL_CHANGE: 'LEVEL_CHANGE',\n    N1: 'N1',\n    OFF: 'OFF',\n    HOLD: 'HOLD',\n    VNAV: 'VNAV'\n};\n\n/**\n * Available modes for `ModeController`\n *\n * @property MCP_MODE\n * @type {Object}\n * @final\n */\nexport const MCP_MODE = {\n    ALTITUDE: MCP_ALTITUDE_MODE,\n    AUTOPILOT: MCP_AUTOPILOT_MODE,\n    HEADING: MCP_HEADING_MODE,\n    SPEED: MCP_SPEED_MODE\n};\n\n/**\n *\n *\n * @property MCP_MODE_NAME\n * @type {Object}\n * @final\n */\nexport const MCP_MODE_NAME = {\n    ALTITUDE: 'altitudeMode',\n    AUTOPILOT: 'autopilotMode',\n    HEADING: 'headingMode',\n    SPEED: 'speedMode'\n};\n\n/**\n * Representation of the numerical values of the various dials on the MCP\n *\n * @property MCP_FIELDS\n * @type {Object}\n * @final\n */\nexport const MCP_FIELD_NAME = {\n    ALTITUDE: 'altitude',\n    COURSE: 'course',\n    HEADING: 'heading',\n    SPEED: 'speed'\n};\n","import _ceil from 'lodash/ceil';\nimport _find from 'lodash/find';\nimport _floor from 'lodash/floor';\nimport _isNil from 'lodash/isNil';\nimport AirportController from '../../airport/AirportController';\nimport Fms from '../FlightManagementSystem/Fms';\nimport ModeController from '../ModeControl/ModeController';\nimport NavigationLibrary from '../../navigationLibrary/NavigationLibrary';\nimport { MCP_MODE } from '../ModeControl/modeControlConstants';\nimport { FLIGHT_PHASE } from '../../constants/aircraftConstants';\nimport { INVALID_NUMBER } from '../../constants/globalConstants';\nimport { radians_normalize } from '../../math/circle';\nimport {\n    groupNumbers,\n    radio_altitude,\n    radio_heading,\n    radio_runway,\n    radio_spellOut,\n    radio_trend,\n    getRadioCardinalDirectionNameForHeading\n} from '../../utilities/radioUtilities';\nimport {\n    degreesToRadians,\n    heading_to_string,\n    radiansToDegrees\n} from '../../utilities/unitConverters';\n\n/**\n * Executes control actions upon the aircraft by manipulating the MCP and FMS, and provides\n * readbacks to air traffic control instructions.\n *\n * @class Pilot\n */\nexport default class Pilot {\n    /**\n     * @for Pilot\n     * @constructor\n     * @param modeController {ModeController}\n     * @param fms {Fms}\n     */\n    constructor(fms, modeController) {\n        if (!(fms instanceof Fms)) {\n            throw new TypeError(`Expected fms to an instance of Fms but received ${typeof fms}`);\n        }\n\n        if (!(modeController instanceof ModeController)) {\n            throw new TypeError('Expected modeController to an instance of ' +\n                `ModeController, but received ${typeof modeController}`);\n        }\n\n        /**\n         * @for Pilot\n         * @property _fms\n         * @type {Fms}\n         * @private\n         */\n        this._fms = null;\n\n        /**\n         * @for Pilot\n         * @property _mcp\n         * @type {ModeController}\n         * @private\n         */\n        this._mcp = null;\n\n        /**\n         * Whether the aircraft has received a clearance to conduct an approach to a runway\n         *\n         * @for Pilot\n         * @property hasApproachClearance\n         * @type {boolean}\n         * @default false\n         */\n        this.hasApproachClearance = false;\n\n        /**\n         * Whether the aircraft has received an IFR clearance to their destination\n         *\n         * @for Pilot\n         * @property hasDepartureClearance\n         * @type {boolean}\n         * @default false\n         */\n        this.hasDepartureClearance = false;\n\n        return this.init(fms, modeController);\n    }\n\n    /**\n     * @for Pilot\n     * @method init\n     * @chainable\n     */\n    init(fms, modeController) {\n        this._fms = fms;\n        this._mcp = modeController;\n        this.hasApproachClearance = false;\n        this.hasDepartureClearance = false;\n\n        return this;\n    }\n\n    /**\n     * @for Pilot\n     * @method reset\n     * @chainable\n     */\n    reset() {\n        this._fms = null;\n        this._mcp = null;\n        this.hasApproachClearance = false;\n        this.hasDepartureClearance = false;\n\n        return this;\n    }\n\n    /**\n     * Maintain a given altitude\n     *\n     * @for Pilot\n     * @method maintainAltitude\n     * @param altitude {number}   the altitude to maintain, in feet\n     * @param expedite {boolean}  whether to use maximum possible climb/descent rate\n     * @param shouldUseSoftCeiling {boolean}\n     * @param airportModel {AirportModel}\n     * @param aircraftModel {AircraftModel}\n     * @return {array} [success of operation, readback]\n     */\n    maintainAltitude(altitude, expedite, shouldUseSoftCeiling, airportModel, aircraftModel) {\n        const response = aircraftModel.validateNextAltitude(altitude, airportModel);\n\n        if (!response[0]) {\n            return response;\n        }\n\n        const currentAltitude = aircraftModel.altitude;\n        let clampedAltitude = airportModel.clampWithinAssignableAltitudes(altitude);\n\n        if (shouldUseSoftCeiling && clampedAltitude === airportModel.maxAssignableAltitude) {\n            // causes aircraft to 'leave' airspace, and continue climb through ceiling\n            clampedAltitude += 1;\n        }\n\n        this.cancelApproachClearance(aircraftModel);\n        this._mcp.setAltitudeFieldValue(clampedAltitude);\n        this._mcp.setAltitudeHold();\n        this._mcp.shouldExpediteAltitudeChange = false;\n\n        // Build readback\n        const readbackAltitude = _floor(clampedAltitude, -2);\n        const altitudeInstruction = radio_trend('altitude', currentAltitude, altitude);\n        const altitudeVerbal = radio_altitude(readbackAltitude);\n        let expediteReadback = '';\n\n        if (expedite) {\n            this._mcp.shouldExpediteAltitudeChange = true;\n\n            // including space here so when expedite is false there isnt an extra space after altitude\n            expediteReadback = ' and expedite';\n        }\n\n        const readback = {};\n        readback.log = `${altitudeInstruction} ${readbackAltitude}${expediteReadback}`;\n        readback.say = `${altitudeInstruction} ${altitudeVerbal}${expediteReadback}`;\n\n        return [true, readback];\n    }\n\n    /**\n     * Maintain a given heading\n     *\n     * @for Pilot\n     * @method maintainHeading\n     * @param aircraftModel {AircraftModel}\n     * @param headingInDegrees {number}                 the heading to maintain, in degrees\n     * @param direction      {string|null}  (optional)  the direction of turn; either 'left' or 'right'\n     * @param incremental    {boolean}      (optional)  whether the value is a numeric heading, or a\n     *                                                  number of degrees to turn\n     * @return {array}                                  [success of operation, readback]\n     */\n    maintainHeading(aircraftModel, headingInDegrees, direction, incremental) {\n        const nextHeadingInRadians = degreesToRadians(headingInDegrees);\n        let correctedHeading = nextHeadingInRadians;\n\n        if (incremental) {\n            // if direction is left\n            correctedHeading = radians_normalize(aircraftModel.heading - nextHeadingInRadians);\n\n            if (direction === 'right') {\n                correctedHeading = radians_normalize(aircraftModel.heading + nextHeadingInRadians);\n            }\n        }\n\n        this.cancelApproachClearance(aircraftModel);\n        this.cancelHoldingPattern();\n        this._mcp.setHeadingFieldValue(correctedHeading);\n        this._mcp.setHeadingHold();\n\n        const headingStr = heading_to_string(correctedHeading);\n        const readback = {};\n        readback.log = `fly heading ${headingStr}`;\n        readback.say = `fly heading ${radio_heading(headingStr)}`;\n\n        if (incremental) {\n            readback.log = `turn ${headingInDegrees} degrees ${direction}`;\n            readback.say = `turn ${groupNumbers(headingInDegrees)} degrees ${direction}`;\n        } else if (direction) {\n            readback.log = `turn ${direction} heading ${headingStr}`;\n            readback.say = `turn ${direction} heading ${radio_heading(headingStr)}`;\n        }\n\n        return [true, readback];\n    }\n\n    /**\n     * Maintain the aircraft's present magnetic heading\n     *\n     * @for Pilot\n     * @method maintainPresentHeading\n     * @param aircraftModel {AircraftModel} the heading the aircraft is facing at the time the command is given\n     * @return {array} [success of operation, readback]\n     */\n    maintainPresentHeading(aircraftModel) {\n        this.cancelApproachClearance(aircraftModel);\n        this._mcp.setHeadingFieldValue(aircraftModel.heading);\n        this._mcp.setHeadingHold();\n\n        const readback = {};\n        const runwayOrPresent = (\n            aircraftModel.flightPhase === FLIGHT_PHASE.WAITING || aircraftModel.flightPhase === FLIGHT_PHASE.TAKEOFF\n        ) ? 'runway' : 'present';\n        readback.log = `fly ${runwayOrPresent} heading`;\n        readback.say = `fly ${runwayOrPresent} heading`;\n\n        return [true, readback];\n    }\n\n    /**\n     * Maintain a given speed\n     *\n     * @for Pilot\n     * @method maintainSpeed\n     * @param speed {Number} - the speed to maintain, in knots\n     * @param aircraftModel {AircraftModel}\n     * @return {Array} [success of operation, readback]\n     */\n    maintainSpeed(speed, aircraftModel) {\n        if (!aircraftModel.model.isAbleToMaintainSpeed(speed)) {\n            const readback = {};\n            readback.log = `unable to maintain ${speed} knots due to performance`;\n            readback.say = `unable to maintain ${radio_spellOut(speed)} knots due to performance`;\n\n            return [false, readback];\n        }\n\n        const currentSpeed = aircraftModel.speed;\n        const instruction = radio_trend('speed', currentSpeed, speed);\n\n        this._mcp.setSpeedFieldValue(speed);\n        this._mcp.setSpeedHold();\n\n        // Build the readback\n        const readback = {};\n        readback.log = `${instruction} ${speed}`;\n        readback.say = `${instruction} ${radio_spellOut(speed)}`;\n\n        return [true, readback];\n    }\n\n    /**\n     * Apply the specified arrival procedure by adding it to the fms route\n     * Note: SHOULD NOT change the heading mode\n     *\n     * @for Pilot\n     * @method applyArrivalProcedure\n     * @param routeString {string}       route string in the form of `entry.procedure.airport`\n     * @param airportName {string}\n     * @return {array}                   [success of operation, readback]\n     */\n    applyArrivalProcedure(routeString, airportName) {\n        const [successful, response] = this._fms.replaceArrivalProcedure(routeString);\n\n        if (!successful) {\n            return [false, response];\n        }\n\n        this.cancelHoldingPattern();\n\n        // Build readback\n        const readback = {};\n        readback.log = `cleared to ${airportName} via the ${this._fms._routeModel.getStarIcao().toUpperCase()} arrival`;\n        readback.say = `cleared to ${airportName} via the ${this._fms._routeModel.getStarName().toUpperCase()} arrival`;\n\n        return [true, readback];\n    }\n\n    /**\n     * Apply the specified departure procedure by adding it to the fms route\n     * Note: SHOULD NOT change the heading mode\n     *\n     * @for Pilot\n     * @method applyDepartureProcedure\n     * @param routeString {String}          the route\n     * @param airportIcao {string}          airport icao identifier\n     * @return {array}                      [success of operation, readback]\n     */\n    applyDepartureProcedure(routeString, airportIcao) {\n        const [successful, response] = this._fms.replaceDepartureProcedure(routeString, airportIcao);\n\n        if (!successful) {\n            return [false, response];\n        }\n\n        this.hasDepartureClearance = true;\n\n        const sidIcao = this._fms.getSidIcao();\n        const sidName = this._fms.getSidName();\n        const readback = {};\n        readback.log = `cleared to destination via the ${sidIcao.toUpperCase()} departure, then as filed`;\n        readback.say = `cleared to destination via the ${sidName.toUpperCase()} departure, then as filed`;\n\n        return [true, readback];\n    }\n\n    /**\n     * Apply the specified route, and as applicable, merge it with the current route\n     *\n     * @for Pilot\n     * @method applyPartialRouteAmendment\n     * @param routeString {tring}  route string in the form of `entry.procedure.airport`\n     * @return {array}             [success of operation, readback]\n     */\n    applyPartialRouteAmendment(routeString) {\n        const readback = this._fms.applyPartialRouteAmendment(routeString);\n\n        if (readback[0]) {\n            this.hasDepartureClearance = true;\n\n            this.cancelHoldingPattern();\n        }\n\n        return readback;\n    }\n\n    /**\n     * Ensure the STAR leg has the specified arrival runway as the exit point and\n     * set the specified runway as the new arrival runway.\n     *\n     * @for Pilot\n     * @method updateStarLegForArrivalRunway\n     * @param aircraft {AircraftModel}\n     * @param nextRunwayModel {RunwayModel}\n     * @return {array} [success of operation, response]\n     */\n    updateStarLegForArrivalRunway(aircraft, nextRunwayModel) {\n        if (aircraft.isOnGround()) {\n            return [false, 'unable to accept arrival runway assignment until airborne'];\n        }\n\n        return this._fms.updateStarLegForArrivalRunway(nextRunwayModel);\n    }\n\n    /**\n     * Stop conducting the instrument approach, and maintain:\n     * - current or last assigned altitude (whichever is lower)\n     * - current heading\n     * - last assigned speed\n     *\n     * @for Pilot\n     * @method cancelApproachClearance\n     * @param aircraftModel {AircraftModel}\n     * @return {array} [success of operation, readback]\n     */\n    cancelApproachClearance(aircraftModel) {\n        if (!this.hasApproachClearance) {\n            return [false, 'we have no approach clearance to cancel!'];\n        }\n\n        const airport = AirportController.airport_get();\n        const currentAltitude = _floor(aircraftModel.altitude, -2);\n        const descentAltitude = Math.min(currentAltitude, this._mcp.altitude);\n        const altitudeToMaintain = Math.max(descentAltitude, airport.minAssignableAltitude);\n\n        this._mcp.setAltitudeFieldValue(altitudeToMaintain);\n        this._mcp.setAltitudeHold();\n        this._mcp.setHeadingFieldValue(aircraftModel.heading);\n        this._mcp.setHeadingHold();\n        this._mcp.setSpeedHold();\n\n        this.hasApproachClearance = false;\n\n        const readback = 'cancel approach clearance, fly present heading, ' +\n            'maintain last assigned altitude and speed';\n\n        return [true, readback];\n    }\n\n    /**\n     * Cancel departure clearance\n     *\n     * @for Pilot\n     * @method cancelDepartureClearance\n     * @param aircraftModel {AircraftModel}\n     * @return {array} [success of operation, response]\n     */\n    cancelDepartureClearance(aircraftModel) {\n        if (aircraftModel.isAirborne()) {\n            return;\n        }\n\n        this.hasDepartureClearance = false;\n\n        return [true, 'roger, understand IFR clearance is cancelled, standing by'];\n    }\n\n    /**\n    * Arm the exit of the holding pattern\n    *\n    * @for Pilot\n    * @method cancelHoldingPattern\n    * @param fixName {string} name of the fix at which the hold should be canceled (optional)\n    * @return {array} [success of operation, readback]\n    */\n    cancelHoldingPattern(fixName) {\n        let holdWaypointModel = _find(this._fms.waypoints, (waypointModel) => waypointModel.isHoldWaypoint);\n\n        if (!holdWaypointModel) {\n            return [false, 'that must be for somebody else, we weren\\'t given any holding instructions'];\n        }\n\n        if (fixName) {\n            holdWaypointModel = this._fms.findWaypoint(fixName);\n\n            if (!holdWaypointModel || !holdWaypointModel.isHoldWaypoint) {\n                return [false, {\n                    log: `that must be for somebody else, we weren't given holding over ${fixName.toUpperCase()}`,\n                    say: `that must be for somebody else, we weren't given holding over ${NavigationLibrary.getFixSpokenName(fixName)}`\n                }];\n            }\n        }\n\n        holdWaypointModel.deactivateHold();\n\n        return [true, {\n            log: `roger, we'll cancel the hold at ${holdWaypointModel.getDisplayName()}`,\n            say: `roger, we'll cancel the hold at ${NavigationLibrary.getFixSpokenName(holdWaypointModel.name)}`\n        }];\n    }\n\n    /**\n     * Configure the aircraft to fly in accordance with the requested flightplan\n     *\n     * @for Pilot\n     * @method clearedAsFiled\n     * @return {Array}                  [success of operation, readback]\n     */\n    clearedAsFiled() {\n        this.hasDepartureClearance = true;\n\n        const readback = {};\n        readback.log = 'cleared to destination as filed';\n        readback.say = 'cleared to destination as filed';\n\n        return [true, readback];\n    }\n\n    /**\n     * Climb in accordance with the altitude restrictions, and sets\n     * altitude at which the climb will end regardless of fix restrictions.\n     *\n     * https://www.faa.gov/about/office_org/headquarters_offices/avs/offices/afx/afs/afs400/afs470/pbn/\n     *      media/Climb_Descend_Via_FAQ.pdf\n     * https://www.faa.gov/documentLibrary/media/Notice/N7110.584.pdf\n     *\n     * @for Pilot\n     * @method climbViaSid\n     * @param aircraftModel {AircraftModel}\n     * @param maximumAltitude {number} (optional) altitude at which the climb will end (regardless of fix restrictions)\n     * @return {array}           [success of operation, readback]\n     */\n    climbViaSid(aircraftModel, maximumAltitude) {\n        let nextAltitude = maximumAltitude;\n\n\n        if (typeof nextAltitude === 'undefined') {\n            nextAltitude = this._fms.flightPlanAltitude;\n        }\n\n        const { departureAirportModel } = this._fms;\n        const altitudeCheck = aircraftModel.validateNextAltitude(nextAltitude, departureAirportModel);\n\n        if (!altitudeCheck[0]) {\n            return altitudeCheck;\n        }\n\n        nextAltitude = departureAirportModel.clampWithinAssignableAltitudes(nextAltitude);\n\n        if (aircraftModel.altitude > nextAltitude) {\n            const currentAltitude = _ceil(aircraftModel.altitude, -2);\n            const readback = {};\n            readback.log = `unable, we're already at ${currentAltitude}`;\n            readback.say = `unable, we're already at ${radio_altitude(currentAltitude)}`;\n\n            return [false, readback];\n        }\n\n        this._mcp.setAltitudeFieldValue(nextAltitude);\n        this._mcp.setAltitudeVnav();\n        this._mcp.setSpeedVnav();\n\n        const readback = {};\n        readback.log = `climb via SID and maintain ${nextAltitude}`;\n        readback.say = `climb via SID and maintain ${radio_altitude(nextAltitude)}`;\n\n        return [true, readback];\n    }\n\n    /**\n     * Descend in accordance with the altitude restrictions\n     *\n     * https://www.faa.gov/about/office_org/headquarters_offices/avs/offices/afx/afs/afs400/afs470/pbn/\n     *      media/Climb_Descend_Via_FAQ.pdf\n     * https://www.faa.gov/documentLibrary/media/Notice/N7110.584.pdf\n     *\n     * @for Pilot\n     * @method descendViaStar\n     * @param aircraftModel {AircraftModel}\n     * @param bottomAltitude {number} (optional) altitude at which the descent will end (regardless of fix restrictions)\n     * @return {array}                [success of operation, readback]\n     */\n    descendViaStar(aircraftModel, bottomAltitude) {\n        let nextAltitude = bottomAltitude;\n\n        if (typeof nextAltitude === 'undefined') {\n            nextAltitude = this._fms.getBottomAltitude();\n        }\n\n        const { arrivalAirportModel } = this._fms;\n        const altitudeCheck = aircraftModel.validateNextAltitude(nextAltitude, arrivalAirportModel);\n\n        if (!altitudeCheck[0]) {\n            return altitudeCheck;\n        }\n\n        nextAltitude = arrivalAirportModel.clampWithinAssignableAltitudes(nextAltitude);\n\n        if (aircraftModel.altitude < nextAltitude) {\n            const currentAltitude = _ceil(aircraftModel.altitude, -2);\n            const readback = {};\n            readback.log = `unable, we're already at ${currentAltitude}`;\n            readback.say = `unable, we're already at ${radio_altitude(currentAltitude)}`;\n\n            return [false, readback];\n        }\n\n        this._mcp.setAltitudeFieldValue(nextAltitude);\n        this._mcp.setAltitudeVnav();\n        this._mcp.setSpeedVnav();\n\n        const readback = {};\n        readback.log = `descend via STAR and maintain ${nextAltitude}`;\n        readback.say = `descend via STAR and maintain ${radio_altitude(nextAltitude)}`;\n\n        return [true, readback];\n    }\n\n    /**\n     * Cross a fix at a certain altitude and/or speed\n     *\n     * @for Pilot\n     * @method crossFix\n     * @param aircraftModel {AircraftModel}\n     * @param fixName  {string} name of the fix\n     * @param altitude {number} the altitude\n     * @param speed {number} the speed\n     * @return {array}  success of operation, readback]\n     */\n    crossFix(aircraftModel, fixName, altitude, speed) {\n        if (!altitude && !speed) {\n            return [false, 'say again? In crossing restrictions, prefix altitudes with A and speeds with S!'];\n        }\n\n        if (!NavigationLibrary.hasFixName(fixName)) {\n            const readback = {\n                log: `unable to find '${fixName.toUpperCase()}'`,\n                say: `unable to find ${NavigationLibrary.getFixSpokenName(fixName)}`\n            };\n            return [false, readback];\n        }\n\n        if (!this._fms.hasWaypointName(fixName)) {\n            const readback = {\n                log: `unable, '${fixName.toUpperCase()}' is not on our route`,\n                say: `unable, ${NavigationLibrary.getFixSpokenName(fixName)} is not on our route`\n            };\n            return [false, readback];\n        }\n\n        const airportModel = this._fms.arrivalAirportModel || this._fms.departureAirportModel;\n        const waypoint = this._fms.findWaypoint(fixName);\n\n        // altitude-only crossing restriction\n        if (!speed) {\n            const altitudeCheck = aircraftModel.validateNextAltitude(altitude, airportModel);\n\n            if (!altitudeCheck[0]) {\n                return altitudeCheck;\n            }\n\n            altitude = airportModel.clampWithinAssignableAltitudes(altitude);\n\n            waypoint.setAltitude(altitude);\n            this._mcp.setAltitudeFieldValue(altitude);\n            this._mcp.setAltitudeVnav();\n\n            const readback = {\n                log: `cross ${fixName.toUpperCase()} at ${altitude}`,\n                say: `cross ${NavigationLibrary.getFixSpokenName(fixName)} at ${radio_altitude(altitude)}`\n            };\n\n            return [true, readback];\n        }\n\n        // speed-only crossing restriction\n        if (!altitude) {\n            const speedCheck = aircraftModel.validateNextSpeed(speed);\n\n            if (!speedCheck[0]) {\n                return speedCheck;\n            }\n\n            waypoint.setSpeed(speed);\n            this._mcp.setSpeedFieldValue(speed);\n            this._mcp.setSpeedVnav();\n\n            const readback = {\n                log: `cross ${fixName.toUpperCase()} at ${speed}kt`,\n                say: `cross ${NavigationLibrary.getFixSpokenName(fixName)} at ${radio_spellOut(speed)} knots`\n            };\n\n            return [true, readback];\n        }\n\n        // altitude AND speed crossing restriction\n        const altitudeCheck = aircraftModel.validateNextAltitude(altitude, airportModel);\n        const speedCheck = aircraftModel.validateNextSpeed(speed);\n\n        if (!altitudeCheck[0]) {\n            return altitudeCheck;\n        }\n\n        if (!speedCheck[0]) {\n            return speedCheck;\n        }\n\n        waypoint.setAltitude(altitude);\n        waypoint.setSpeed(speed);\n        this._mcp.setAltitudeFieldValue(altitude);\n        this._mcp.setSpeedFieldValue(speed);\n        this._mcp.setAltitudeVnav();\n        this._mcp.setSpeedVnav();\n\n        const readback = {\n            log: `cross ${fixName.toUpperCase()} at ${altitude} and ${speed}kt`,\n            say: `cross ${NavigationLibrary.getFixSpokenName(fixName)} at ${radio_altitude(altitude)} and ${radio_spellOut(speed)} knots`\n        };\n\n        return [true, readback];\n    }\n\n    /**\n     * Abort the landing attempt; maintain present heading/speed, and climb to a reasonable altitude\n     *\n     * @for Pilot\n     * @method goAround\n     * @param heading {number}           the aircraft's current heading\n     * @param speed {number}             the aircraft's current speed\n     * @param airportElevation {number}  the elevation of the airport, in feet MSL\n     * @return {array}                   [success of operation, readback]\n     */\n    goAround(heading, speed, airportElevation) {\n        const altitudeToMaintain = _ceil(airportElevation, -2) + 1000;\n\n        this._mcp.setHeadingFieldValue(heading);\n        this._mcp.setHeadingHold();\n        this._mcp.setAltitudeFieldValue(altitudeToMaintain);\n        this._mcp.setAltitudeHold();\n        this._mcp.setSpeedFieldValue(speed);\n        this._mcp.setSpeedHold();\n\n        const readback = {};\n        readback.log = `go around, fly present heading, maintain ${altitudeToMaintain}`;\n        readback.say = `go around, fly present heading, maintain ${radio_altitude(altitudeToMaintain)}`;\n\n        return [true, readback];\n    }\n\n    /**\n     * Intercept a radial course or localizer (horizontal guidance)\n     *\n     * @for Pilot\n     * @method _interceptCourse\n     * @param datum {StaticPositionModel}  the position the course is based upon\n     * @param course {number}              the heading inbound to the datum\n     * @return {array}                     [success of operation, readback]\n     * @private\n     */\n    _interceptCourse(datum, course) {\n        this._mcp.setNav1Datum(datum);\n        this._mcp.setCourseFieldValue(course);\n        this._mcp.setHeadingVorLoc();\n\n        const readback = {};\n        readback.log = 'intercept localizer';\n        readback.say = 'intercept localizer';\n\n        return [true, readback];\n    }\n\n    /**\n     * Intercept a glidepath or glideslop (vertical guidance)\n     *\n     * @for Pilot\n     * @method _interceptGlidepath\n     * @param datum {StaticPositionModel}  the position the glidepath is projected from\n     * @param course {number}              the heading inbound to the datum\n     * @param descentAngle {number}        the angle of descent along the glidepath\n     * @return {array}                     [success of operation, readback]\n     * @private\n     */\n    _interceptGlidepath(datum, course, descentAngle) {\n        // TODO: I feel like our description of lateral/vertical guidance should be done with its\n        // own class rather than like this by storing all sorts of irrelevant stuff in the pilot/MCP.\n        if (this._mcp.nav1Datum !== datum) {\n            return [false, 'cannot follow glidepath because we are using lateral navigation from a different origin'];\n        }\n\n        if (this._mcp.course !== course) {\n            return [\n                false,\n                'cannot follow glidepath because its course differs from that specified for lateral guidance'\n            ];\n        }\n\n        // TODO: the descentAngle is a part of the ILS system itself, and should not be owned by the MCP\n        this._mcp.setDescentAngle(descentAngle);\n\n        // TODO: Though not realistic, to emulate the refusal to descend below MCP altitude\n        // until established on the localizer, we should not be setting the altitude mode to\n        // 'APP' until established on the localizer. This will prevent improper descent behaviors.\n        this._mcp.setAltitudeApproach();\n\n        return [true, 'intercept glidepath'];\n    }\n\n    /**\n     * Conduct the specified instrument approachType\n     * Note: Currently only supports ILS approaches\n     * Note: Approach variants cannot yet be specified (eg RNAV-Y)\n     *\n     * @for pilot\n     * @method conductInstrumentApproach\n     * @param aircraftModel {AircraftModel} the aircraft model belonging to this pilot\n     * @param approachType {string}         the type of instrument approach (eg 'ILS', 'RNAV', 'VOR', etc)\n     * @param runwayModel {RunwayModel}     the runway the approach ends at\n     * @return {array}                      [success of operation, readback]\n     */\n    conductInstrumentApproach(aircraftModel, approachType, runwayModel) {\n        if (_isNil(runwayModel)) {\n            return [false, 'the specified runway does not exist'];\n        }\n\n        const minimumGlideslopeInterceptAltitude = runwayModel.getMinimumGlideslopeInterceptAltitude();\n\n        if (aircraftModel.mcp.altitude < minimumGlideslopeInterceptAltitude) {\n            const readback = {};\n\n            readback.log = `unable ILS ${runwayModel.name}, our assigned altitude is below the minimum ` +\n                `glideslope intercept altitude, request climb to ${minimumGlideslopeInterceptAltitude}`;\n            readback.say = `unable ILS ${radio_runway(runwayModel.name)}, our assigned altitude is below the minimum ` +\n                `glideslope intercept altitude, request climb to ${radio_altitude(minimumGlideslopeInterceptAltitude)}`;\n\n            return [false, readback];\n        }\n\n        // TODO: split these two method calls and the corresponding ifs to a new method\n        const datum = runwayModel.positionModel;\n        const course = runwayModel.angle;\n        const descentAngle = runwayModel.ils.glideslopeGradient;\n        const lateralGuidance = this._interceptCourse(datum, course);\n        const verticalGuidance = this._interceptGlidepath(datum, course, descentAngle);\n\n        // TODO: As written, `._interceptCourse()` will always return true.\n        if (!lateralGuidance[0]) {\n            return lateralGuidance;\n        }\n\n        if (!verticalGuidance[0]) {\n            return verticalGuidance;\n        }\n\n        this.cancelHoldingPattern();\n        this._fms.setArrivalRunway(runwayModel);\n        this.hasApproachClearance = true;\n\n        const readback = {};\n        readback.log = `cleared ${approachType.toUpperCase()} runway ${runwayModel.name} approach`;\n        readback.say = `cleared ${approachType.toUpperCase()} runway ${radio_runway(runwayModel.name)} approach`;\n\n        return [true, readback];\n    }\n\n    // TODO: Add ability to hold at present position\n    /**\n     * Conduct a holding pattern at a specific fix\n     *\n     * @for Fms\n     * @method initiateHoldingPattern\n     * @param fixName {string} name of the fix to hold over\n     * @param holdParameters {object} parameters to apply to WaypointModel._holdParameters\n     * @param fallbackInboundHeading {number} the inboundHeading that is used if no default is available\n     * @return {array} [success of operation, readback]\n     */\n    initiateHoldingPattern(fixName, holdParameters, fallbackInboundHeading) {\n        const [success, responseValue] = this._fms.activateHoldForWaypointName(fixName, holdParameters, fallbackInboundHeading);\n\n        if (!success) {\n            return [success, responseValue];\n        }\n\n        // When successful, the responseValue contains the actual holdParameters used by the\n        // `WaypointModel`. This means that we can send partial holdParameters, to patch\n        // the `WaypointModel`s _holdParameters property\n        holdParameters = responseValue;\n\n        const radialText = heading_to_string(holdParameters.inboundHeading + Math.PI);\n        const cardinalDirectionFromFix = getRadioCardinalDirectionNameForHeading(holdParameters.inboundHeading);\n        const holdParametersReadback = `${holdParameters.turnDirection} turns, ${holdParameters.legLength} legs`;\n        const radialReadbackLog = `on the ${radialText} radial`;\n        const radialReadbackSay = `on the ${radio_heading(radialText)} radial`;\n\n        // force lower-case in verbal readback to get speech synthesis to pronounce the fix instead of spelling it\n        return [true, {\n            log: `hold ${cardinalDirectionFromFix} of ${fixName.toUpperCase()} ${radialReadbackLog}, ${holdParametersReadback}`,\n            say: `hold ${cardinalDirectionFromFix} of ${NavigationLibrary.getFixSpokenName(fixName)} ${radialReadbackSay}, ${holdParametersReadback}`\n        }];\n    }\n\n    /**\n     * Initialize all autopilot systems after being given an IFR clearance to destination\n     *\n     * @for Pilot\n     * @method configureForTakeoff\n     * @param initialAltitude {number} the altitude aircraft can automatically climb to at this airport\n     * @param runway {RunwayModel} the runway taking off on\n     * @param cruiseSpeed {number} the cruise speed of the aircraft, in knots\n     */\n    configureForTakeoff(initialAltitude, runway, cruiseSpeed) {\n        if (this._mcp.altitude === INVALID_NUMBER) {\n            this._mcp.setAltitudeFieldValue(initialAltitude);\n        }\n\n        if (this._mcp.altitudeMode === MCP_MODE.ALTITUDE.OFF) {\n            this._mcp.setAltitudeHold();\n        }\n\n        if (this._mcp.heading === INVALID_NUMBER) {\n            this._mcp.setHeadingFieldValue(runway.angle);\n        }\n\n        if (this._mcp.headingMode === MCP_MODE.HEADING.OFF) {\n            this._mcp.setHeadingLnav();\n        }\n\n        if (this._mcp.speed === INVALID_NUMBER) {\n            this._mcp.setSpeedFieldValue(cruiseSpeed);\n        }\n\n        if (this._mcp.speedMode === MCP_MODE.SPEED.OFF) {\n            this._mcp.setSpeedN1();\n        }\n    }\n\n    /**\n     * Skip ahead in the FMS to the waypoint for the specified waypointName, and activate LNAV to fly to it\n     *\n     * @for Pilot\n     * @method proceedDirect\n     * @param waypointName {string}  name of the fix we are flying direct to\n     * @return {array}               [success of operation, readback]\n     */\n    proceedDirect(waypointName) {\n        if (!this._fms.hasWaypointName(waypointName)) {\n            const readback = {\n                log: `cannot proceed direct to ${waypointName}, it does not exist in our flight plan`,\n                say: `cannot proceed direct to ${NavigationLibrary.getFixSpokenName(waypointName)}, it does not exist in our flight plan`\n            };\n            return [false, readback];\n        }\n\n        this._fms.skipToWaypointName(waypointName);\n        this.cancelHoldingPattern();\n        this._mcp.setHeadingLnav();\n\n        const readback = {\n            log: `proceed direct ${waypointName}`,\n            say: `proceed direct ${NavigationLibrary.getFixSpokenName(waypointName)}`\n        };\n        return [true, readback];\n    }\n\n    /**\n     * End of takeoff, stop hand flying, and give the autopilot control of the aircraft\n     *\n     * Note: This should be done when the phase changes from takeoff to climb\n     * Note: The 'raise landing gear' portion has no relevance, and exists solely for specificity of context\n     *\n     * @for Pilot\n     * @method raiseLandingGearAndActivateAutopilot\n     */\n    raiseLandingGearAndActivateAutopilot() {\n        this._mcp.enable();\n    }\n\n    /**\n     * Replace the entire route with a new one built from the provided route string\n     *\n     * @for Pilot\n     * @method replaceFlightPlanWithNewRoute\n     * @param routeString {string}  routeString defining the new route to use\n     * @return {array}              [success of operation, readback]\n     */\n    replaceFlightPlanWithNewRoute(routeString) {\n        const readback = this._fms.replaceFlightPlanWithNewRoute(routeString);\n\n        if (readback[0]) {\n            this.hasDepartureClearance = true;\n        }\n\n        return readback;\n    }\n\n    /**\n     * Return the altitude the aircraft is currently assigned. May be moving toward this altitude,\n     * or already established at that altitude.\n     *\n     * @for Pilot\n     * @method sayTargetedAltitude\n     * @return {Array} [success of operation, readback]\n     */\n    sayTargetedAltitude() {\n        const readback = {};\n        readback.log = `we're assigned ${this._mcp.altitude}`;\n        readback.say = `we're assigned ${radio_altitude(this._mcp.altitude)}`;\n\n        return [true, readback];\n    }\n\n    /**\n     * Return the heading the aircraft is currently targeting. May be moving toward this heading,\n     * or already established at that heading.\n     *\n     * @for Pilot\n     * @method sayTargetHeading\n     * @return {array} [success of operation, readback]\n     */\n    sayTargetHeading() {\n        const readback = {};\n\n        switch (this._mcp.headingMode) {\n            case MCP_MODE.HEADING.HOLD:\n                readback.log = `we're assigned heading ${this._mcp.headingInDegrees}`;\n                readback.say = `we're assigned heading ${radio_heading(this._mcp.headingInDegrees)}`;\n\n                return [true, readback];\n\n            case MCP_MODE.HEADING.VOR_LOC:\n                readback.log = `we're joining a course of ${this._mcp.course}`;\n                readback.say = `we're joining a course of ${radio_heading(this._mcp.course)}`;\n\n                return [true, readback];\n\n            case MCP_MODE.HEADING.LNAV: {\n                const waypoint = this._fms.currentWaypoint;\n                const waypointPosition = waypoint.positionModel;\n                const bearing = Math.round(radiansToDegrees(this.positionModel.bearingToPosition(waypointPosition)));\n\n                readback.log = `our on-course heading to ${waypoint.getDisplayName()} is ${bearing}`;\n                readback.say = `our on-course heading to ${NavigationLibrary.getFixSpokenName(waypoint.getDisplayName())} is ${radio_heading(bearing)}`;\n\n                return [true, readback];\n            }\n\n            default:\n                readback.log = 'we haven\\'t been assigned a heading';\n                readback.say = 'we haven\\'t been assigned a heading';\n\n                return [true, readback];\n        }\n    }\n\n    /**\n     * Return the speed the aircraft is currently assigned. May be moving toward this speed, or\n     * already established at this speed.\n     *\n     * @for Pilot\n     * @method sayTargetedSpeed\n     */\n    sayTargetedSpeed() {\n        // TODO: How do we handle the cases where aircraft are using VNAV speed?\n        return [true, this._mcp.speed];\n    }\n\n    /**\n     * Stop taxiing to the runway and return to the gate\n     *\n     * @for Pilot\n     * @method stopOutboundTaxiAndReturnToGate\n     * @return {Array} [success of operation, readback]\n     */\n    stopOutboundTaxiAndReturnToGate() {\n        this._fms.flightPhase = FLIGHT_PHASE.APRON;\n        // TODO: What to do with this little number....?\n        // aircraft.taxi_start = 0;\n\n        return [true, 'taxiing back to the gate'];\n    }\n\n    /**\n     * Leave the departure line and return to the gate\n     *\n     * @for Pilot\n     * @method stopWaitingInRunwayQueueAndReturnToGate\n     * @return {Array} [success of operation, readback]\n     */\n    stopWaitingInRunwayQueueAndReturnToGate() {\n        // TODO: this will likely need to be called from somewhere other than the `AircraftCommander`\n        // TODO: remove aircraft from the runway queue (`Runway.removeAircraftFromQueue()`)\n        this._fms.flightPhase = FLIGHT_PHASE.APRON;\n\n        return [true, 'taxiing back to the gate'];\n    }\n}\n","import _find from 'lodash/find';\nimport _without from 'lodash/without';\nimport BaseCollection from '../../base/BaseCollection';\n\n/**\n * Collection used to manage `StripViewModel` objects\n *\n * @class StripViewCollection\n * @extends BaseCollection\n */\nexport default class StripViewCollection extends BaseCollection {\n    /**\n     *\n     * @constructor\n     */\n    constructor() {\n        super();\n\n        /**\n         * Inherited from `BaseCollection`\n         *\n         * @property _items\n         * @type {array<any>}\n         * @default []\n         * @private\n         */\n\n        /**\n         * Inherited from `BaseCollection`\n         *\n         * @property length\n         * @type {number}\n         */\n\n        return this._init();\n    }\n\n    /**\n     * Initialize the instance\n     *\n     * @for StripViewCollection\n     * @method _init\n     */\n    _init() {\n\n    }\n\n    /**\n     * Reset the instance\n     *\n     * @for StripViewCollection\n     * @method reset\n     */\n    reset() {\n        this._items = [];\n    }\n\n    /**\n     * Add a `StripViewModel` instance to the collection\n     *\n     * @for StripViewCollection\n     * @method addItem\n     */\n    addItem(stripViewModel) {\n        this._items.push(stripViewModel);\n    }\n\n    /**\n     * Remove a `StripViewModel` instance from the collection\n     *\n     * @for StripViewCollection\n     * @method removeItem\n     */\n    removeItem(stripViewModel) {\n        this._items = _without(this._items, stripViewModel);\n    }\n\n    /**\n     * Find an active `StripViewModel`.\n     *\n     * Active is defined by the presence of a specific css classname\n     *\n     * @for StripViewCollection\n     * @method findActiveStripViewModel\n     * @return {StripViewModel}\n     */\n    findActiveStripViewModel() {\n        return _find(this._items, { isActive: true });\n    }\n\n    /**\n     * Find a `StripViewModel` in the collection by an `aircraftid`\n     *\n     * @for StripViewCollection\n     * @method findStripByAircraftId\n     * @param aircraftId {number}\n     * @return {StripViewModel|undefined}\n     */\n    findStripByAircraftId(aircraftId) {\n        return _find(this._items, { aircraftId: aircraftId });\n    }\n}\n","import $ from 'jquery';\nimport _random from 'lodash/random';\nimport _without from 'lodash/without';\nimport StripViewCollection from './StripViewCollection';\nimport StripViewModel from './StripViewModel';\nimport { INVALID_INDEX } from '../../constants/globalConstants';\nimport { SELECTORS } from '../../constants/selectors';\n\n/**\n * The highest number allowed for a cid value\n *\n * @property CID_UPPER_BOUND\n * @type {number}\n * @final\n */\nconst CID_UPPER_BOUND = 999;\n\n/**\n * Control modifications of the `$stripViewList` and coordinate\n * management of the `StripViewCollection`. Also responsible for\n * creating new `StripViewModel` instances.\n *\n * @class StripViewController\n */\nexport default class StripViewController {\n    /**\n     * @constructor\n     */\n    constructor() {\n        /**\n         * Collection class used to manage instances of `StripViewModel`s\n         *\n         * @property _collection\n         * @type {StripViewCollection}\n         * @default null\n         * @private\n         */\n        this._collection = null;\n\n        /**\n         * Root list view element\n         *\n         * @property $stripView\n         * @type {JQuery|HTMLElement}\n         */\n        this.$stripView = $(SELECTORS.DOM_SELECTORS.STRIP_VIEW);\n\n        /**\n         * List element containing each `StripViewModel` instance that is an Arrival\n         *\n         * @property $stripViewListArrivals\n         * @type {JQuery|HTMLElement}\n         */\n        this.$stripViewListArrivals = $(SELECTORS.DOM_SELECTORS.STRIP_VIEW_ARRIVALS_LIST);\n\n        /**\n         * List element containing each `StripViewModel` instance that is a Departure\n         *\n         * @property $stripViewListDepartures\n         * @type {JQuery|HTMLElement}\n         */\n        this.$stripViewListDepartures = $(SELECTORS.DOM_SELECTORS.STRIP_VIEW_DEPARTURES_LIST);\n\n        /**\n         * Trigger that toggles visibility of the `$stripView`\n         *\n         * @property $stripListTrigger\n         * @type {JQuery|HTMLElement}\n         */\n        this.$stripListTrigger = $(SELECTORS.DOM_SELECTORS.STRIP_VIEW_TRIGGER);\n\n        /**\n         * @property _cidNumbersInUse\n         * @type {array<number>}\n         * @private\n         */\n        this._cidNumbersInUse = [];\n\n        return this._init()\n            .enable();\n    }\n\n    /**\n     * Initialize the instance\n     *\n     * Should be run only once on instantiation\n     *\n     * @for StripViewController\n     * @method _init\n     */\n    _init() {\n        this._collection = new StripViewCollection();\n\n        return this;\n    }\n\n    /**\n     * Enable handlers\n     *\n     * @for StripViewController\n     * @method enable\n     * @chainable\n     */\n    enable() {\n        this.$stripListTrigger.on('click', this._onStripListToggle);\n        this.$stripViewListArrivals.on('click', this._onStripListClickOutsideStripViewModel);\n        this.$stripViewListDepartures.on('click', this._onStripListClickOutsideStripViewModel);\n\n        return this;\n    }\n\n    /**\n     * Tear down handlers and destroy the instance\n     *\n     * @for StripViewController\n     * @method destroy\n     */\n    destroy() {\n        this._collection = null;\n    }\n\n    /**\n     * Provides a way to check if a `StripViewModel` exists for a given `AircraftModel`\n     *\n     * @for StripViewController\n     * @method hasStripViewModel\n     * @param aircraftModel {AircraftModel}\n     * @returns {booelan}\n     */\n    hasStripViewModel(aircraftModel) {\n        const stripViewModel = this._collection.findStripByAircraftId(aircraftModel.id);\n\n        return typeof stripViewModel !== 'undefined';\n    }\n\n    /**\n     * Update each `StripViewModel` with new aricraft data\n     *\n     * The `StripViewModel` provides an early out when\n     * `StripViewModel.shouldUpdate()` returns false\n     *\n     * This method is part of the animation loop\n     *\n     * @for StripViewController\n     * @method update\n     * @param aircraftList {array<AircraftModel>}\n     */\n    update(aircraftList) {\n        // TODO: this should probably work the other way; loop through list items and find an aircraft.\n        // We need a proper `AircraftCollection` for that to work\n        for (let i = 0; i < aircraftList.length; i++) {\n            const aircraftModel = aircraftList[i];\n\n            if (!aircraftModel.isControllable) {\n                continue;\n            }\n\n            let stripViewModel = this._collection.findStripByAircraftId(aircraftModel.id);\n\n            // Here we create the StripViewModel for ARRIVALS at the moment they become\n            // \"controllable\". By contrast, departure strips are created immediately.\n            if (typeof stripViewModel === 'undefined') {\n                stripViewModel = this.createStripView(aircraftModel);\n            }\n\n            stripViewModel.update(aircraftModel);\n        }\n    }\n\n    /**\n     * Create a new `StripViewModel` instance and add it to the collection\n     *\n     * @for StripViewController\n     * @method createStripView\n     * @param aircraftModel {AircraftModel}\n     * @return {StripViewModel}\n     */\n    createStripView(aircraftModel) {\n        const stripViewCid = this._generateCidNumber();\n        const stripViewModel = new StripViewModel(aircraftModel, stripViewCid);\n\n        this._collection.addItem(stripViewModel);\n\n        if (aircraftModel.isDeparture() || aircraftModel.isControllable) {\n            this._addViewToStripList(stripViewModel);\n        }\n\n        return stripViewModel;\n    }\n\n    /**\n     * Find a `StripViewModel` and attempt to add an active state\n     *\n     * @for StripViewController\n     * @method selectStripView\n     * @param  aircraftModel {AircraftModel}\n     */\n    selectStripView(aircraftModel) {\n        const stripModel = this._collection.findStripByAircraftId(aircraftModel.id);\n\n        if (!stripModel) {\n            throw Error(`No StripViewModel found for selected Aircraft: ${aircraftModel.callsign}`);\n        }\n\n        this.findAndDeselectActiveStripView();\n        stripModel.addActiveState();\n    }\n\n    /**\n     * Given a `stripViewModel`, call the `.removeActiveState()` method\n     * that will remove the active css classname\n     *\n     * @for StripViewController\n     * @method deselectStripView\n     * @param stripViewModel {StripViewModel}\n     */\n    deselectStripView(stripViewModel) {\n        if (!(stripViewModel instanceof StripViewModel)) {\n            throw new TypeError('Expected stripViewModel to be an instance of ' +\n                `StripViewModel but instead found ${typeof stripViewModel}`);\n        }\n\n        stripViewModel.removeActiveState();\n    }\n\n    /**\n     * Find a `StripViewModel` and scroll it into view\n     *\n     * @for StripViewController\n     * @method scrollToStripView\n     * @param  aircraftModel {AircraftModel}\n     */\n    scrollToStripView(aircraftModel) {\n        const stripModel = this._collection.findStripByAircraftId(aircraftModel.id);\n\n        if (!stripModel) {\n            throw Error(`No StripViewModel found for selected Aircraft: ${aircraftModel.callsign}`);\n        }\n\n        if (this.$stripView.hasClass(SELECTORS.CLASSNAMES.STRIP_VIEW_IS_HIDDEN)) {\n            this.$stripView.removeClass(SELECTORS.CLASSNAMES.STRIP_VIEW_IS_HIDDEN);\n            // wait 0.3s for strip view drawer slide out transition to complete\n            setTimeout(() => {\n                stripModel.scrollIntoView();\n            }, 300);\n        } else {\n            stripModel.scrollIntoView();\n        }\n    }\n\n    /**\n     * Method used to deselect an active `StripViewModel` when\n     * the specific model is not known.\n     *\n     * This useful for when a click is registered within the\n     * `stripViewList`, but not on a specific `StripViewModel`\n     * or when an event is triggered to clear the active callsign\n     *\n     * @for StripViewController\n     * @method findAndDeselectActiveStripView\n     * @private\n     */\n    findAndDeselectActiveStripView() {\n        const activeStripViewModel = this._collection.findActiveStripViewModel();\n\n        if (!activeStripViewModel) {\n            return;\n        }\n\n        this.deselectStripView(activeStripViewModel);\n    }\n\n    /**\n     * Remove a `StripViewModel` from the `$stripViewList`\n     *\n     * @for StripViewController\n     * @method removeStripView\n     * @param aircraftModel {AircraftModel}\n     */\n    removeStripView(aircraftModel) {\n        const stripViewModel = this._collection.findStripByAircraftId(aircraftModel.id);\n\n        if (!stripViewModel) {\n            return;\n        }\n\n        this._removeCidFromUse(stripViewModel.cid);\n        this._collection.removeItem(stripViewModel);\n        stripViewModel.destroy();\n    }\n\n    /**\n     * Add `StripViewModel` to the `$stripViewList`\n     *\n     * This adds a given `stripViewModel` into the DOM as a\n     * child of `$stripViewList`\n     *\n     * @for StripViewController\n     * @method _addViewToStripList\n     * @param stripViewModel {StripViewModel}\n     * @private\n     */\n    _addViewToStripList(stripViewModel) {\n        if (!(stripViewModel instanceof StripViewModel)) {\n            throw new TypeError(`Expected an instance of StripViewModel but received ${typeof stripViewModel}`);\n        }\n\n        const listView = stripViewModel.isDeparture ? this.$stripViewListDepartures : this.$stripViewListArrivals;\n        const scrollPosition = listView.scrollTop();\n\n        listView.prepend(stripViewModel.$element);\n        // shift scroll down one strip's height\n        listView.scrollTop(scrollPosition + StripViewModel.HEIGHT);\n    }\n\n    /**\n     * Event handler for when a the strip view drawer toggle is clicked\n     *\n     * @for StripViewController\n     * @method _onStripListToggle\n     * @param event {JQueryEventObject}\n     * @private\n     */\n    // eslint-disable-next-line no-unused-vars\n    _onStripListToggle = (event) => {\n        this.$stripView.toggleClass(SELECTORS.CLASSNAMES.STRIP_VIEW_IS_HIDDEN);\n    };\n\n    /**\n     * Event handler for when a click is registered within the `$stripViewList`\n     * but not targeting a specific `StripViewModel`\n     *\n     * @for StripViewController\n     * @method _onStripListClickOutsideStripViewModel\n     * @param event {JQueryEventObject}\n     * @private\n     */\n    // eslint-disable-next-line no-unused-vars\n    _onStripListClickOutsideStripViewModel = (event) => this.findAndDeselectActiveStripView();\n\n    /**\n     * Generate a unique number to represent a `CID`\n     *\n     * Should be displayed with leading zeros, so a `CID` value of `1` should be displayed as `001`\n     *\n     * @for StripViewController\n     * @method _generateCidNumber\n     * @return nextCid {number}\n     * @private\n     */\n    _generateCidNumber() {\n        const nextCid = _random(1, CID_UPPER_BOUND);\n\n        if (this._cidNumbersInUse.indexOf(nextCid) !== INVALID_INDEX) {\n            return this._generateCidNumber();\n        }\n\n        this._cidNumbersInUse.push(nextCid);\n\n        return nextCid;\n    }\n\n    /**\n     * Remove a given `#cid` from use\n     *\n     * Used when an aircraft has landed or departed controlled airspace\n     *\n     * @for StripViewController\n     * @method _removeCidFromUse\n     * @param cid {number}\n     * @private\n     */\n    _removeCidFromUse(cid) {\n        const cidIndex = this._cidNumbersInUse.indexOf(cid);\n\n        if (cidIndex === INVALID_INDEX) {\n            return;\n        }\n\n        this._cidNumbersInUse = _without(this._cidNumbersInUse, cid);\n    }\n}\n","import $ from 'jquery';\nimport BaseModel from '../../base/BaseModel';\nimport EventBus from '../../lib/EventBus';\nimport { STRIP_VIEW_TEMPLATE } from './stripViewTemplate';\nimport { EVENT } from '../../constants/eventNames';\nimport { INVALID_NUMBER } from '../../constants/globalConstants';\nimport { SELECTORS } from '../../constants/selectors';\nimport { leftPad } from '../../utilities/generalUtilities';\n\n/**\n * Encapsulation of data and view elements for a single aircraft progress strip\n *\n * Handles display and updating of an aircraft progress strip\n *\n * @class StripViewModel\n * @extends BaseModel\n */\nexport default class StripViewModel extends BaseModel {\n    /**\n     * Height of the AircraftStrip DOM element in px.\n     *\n     * @property AIRCRAFT_STRIP_HEIGHT\n     * @type {number}\n     * @static\n     */\n    static HEIGHT = 60;\n\n    /**\n     * @constructor\n     * @param aircraftModel {object}\n     * @param cidValue {number}\n     */\n    constructor(aircraftModel, cidValue) {\n        super('stripViewModel');\n\n        /**\n         * Model `#_id` inherited from `BaseModel`\n         *\n         * @property _id\n         * @type {string}\n         */\n\n        /**\n         * Internal reference to `EventBus` class\n         *\n         * @property _eventBus\n         * @type {EventBus}\n         * @default EventBus\n         * @private\n         */\n        this._eventBus = EventBus;\n\n        /**\n         * If an aircraft is a Departure\n         *\n         * When this is true it means the aircraft is a Departure\n         * and if this is false it means the aircraft is an Arrival.\n         *\n         * @property isDeparture\n         * @type {boolean}\n         * @default false\n         */\n        this.isDeparture = false;\n\n        /**\n         * Root HTML Element\n         *\n         * @property $element\n         * @type {JQuery Element}\n         * @default null\n         */\n        this.$element = null;\n\n        /**\n         * Reference to the `AircraftModel#id` property\n         *\n         * Used only for associating a `StripViewModel` with a\n         * specific `aircraftId`\n         *\n         * @property aircraftId\n         * @type {string}\n         */\n        this.aircraftId = aircraftModel.id;\n\n        /**\n         * If an aircraft inside controlled airspace\n         *\n         * When this is true it means the aircraft is (or should)\n         * be under ATC control and it's progress strip should\n         * be visible in the strip list.\n         *\n         * @property insideCenter\n         * @type {boolean}\n         * @default false\n         */\n        this.insideCenter = false;\n\n        /**\n         * CSS classname applied for arrival or departure\n         *\n         * @property _categoryClassname\n         * @type string\n         * @default ''\n         */\n        this._categoryClassName = '';\n\n        // the following properties are arranged in view order\n        // this sort will be used throughout this class\n\n        /**\n         * Aircraft callsign\n         *\n         * @property _callsign\n         * @type {string}\n         * @default ''\n         * @private\n         */\n        this._callsign = '';\n\n        /**\n         * HTML Element that holds the `#_callsign` value\n         *\n         * @property\n         * @type {JQuery Element}\n         * @default null\n         */\n        this.$callsignView = null;\n\n        /**\n         * The aircraft type, with weight prefix and equipment suffix\n         *\n         * Will be generated by the `AircraftTypeDefinitionModel`,\n         * this merely caches that value so it doesn't need to be\n         * calculated every time.\n         *\n         * @property _aircraftType\n         * @type {string}\n         * @default ''\n         * @private\n         */\n        this._aircraftType = '';\n\n        /**\n         * HTML Element that holds the `#_aircraftType` value\n         *\n         * @property $aircraftTypeView\n         * @type {JQuery Element}\n         * @default null\n         */\n        this.$aircraftTypeView = null;\n\n        /**\n         * This value is generated by the `StripViewController` and is\n         * unique to every `StripViewModel`\n         *\n         * Currently only numeric, but could be made alpha-numberic\n         *\n         * Padded with leading zeros in `#cidString` for display purposes\n         *\n         * @property cid\n         * @type {number}\n         * @default cidValue\n         */\n        this.cid = cidValue;\n\n        /**\n         * A string version of `#cid` for display purposes\n         * Has been padded with leading zeros so that it is always\n         * displayed as three digits\n         *\n         * @property cidString\n         * @type {string}\n         * @default cidValue\n         */\n        this.cidString = leftPad(cidValue, 3);\n\n        /**\n         * HTML Element that holds `#_cidValue`\n         *\n         * @property $cidView\n         * @type {JQuery Element}\n         * @default null\n         */\n        this.$cidView = null;\n\n        /**\n         * Aircraft transponder code\n         *\n         * @property _transponder\n         * @type {number}\n         * @default INVALID_NUMBER\n         * @private\n         */\n        this._transponder = INVALID_NUMBER;\n\n        /**\n         * HTML Element that holds the `#_transponderCode` value\n         *\n         * @property $transponderView\n         * @type {JQuery Element}\n         * @default null\n         */\n        this.$transponderView = null;\n\n        /**\n         * Altitude aircraft has been assigned in FL feet\n         *\n         * @property _assingedAltitude\n         * @type {number}\n         * @default INVALID_NUMBER\n         * @private\n         */\n        this._assignedAltitude = INVALID_NUMBER;\n\n        /**\n         * HTML Element that holds the `#_assignedAltitude` value\n         *\n         * @property $assignedAltitudeView\n         * @type {JQuery Element}\n         * @default null\n         */\n        this.$assignedAltitudeView = null;\n\n        /**\n         * Cruise altitude\n         *\n         * @property _flightPlanAltitude\n         * @type {number}\n         * @default INVALID_NUMBER\n         * @private\n         */\n        this._flightPlanAltitude = INVALID_NUMBER;\n\n        /**\n         * HTML Element that holds the `#_flightPlanAltitude` value\n         *\n         * @property $flightPlanAltitudeView\n         * @type {JQuery Element}\n         * @default null\n         */\n        this.$flightPlanAltitudeView = null;\n\n        /**\n         * Arrival airport icao\n         *\n         * @property _arrivalAirport\n         * @type\n         * @default\n         * @private\n         */\n        this._arrivalAirport = '';\n\n        /**\n         * HTML Element that hold the `#_arrivalAirport` value\n         *\n         * @property $arrivalAirportView\n         * @type {JQuery Element}\n         * @default null\n         */\n        this.$arrivalAirportView = null;\n\n        /**\n         * Departure airport icao\n         *\n         * @property _departureAirport\n         * @type\n         * @default\n         * @private\n         */\n        this._departureAirport = '';\n\n        /**\n         * HTML Element that hold the `#_departureAirport` value\n         *\n         * @property $departureAirportView\n         * @type {JQuery Element}\n         * @default null\n         */\n        this.$departureAirportView = null;\n\n        /**\n         * Alternate airport icao\n         *\n         * @property _alternateAirport\n         * @type\n         * @default\n         * @private\n         */\n        this._alternateAirport = '';\n\n        /**\n         * HTML Element that hold the `#_alternateAirport` value\n         *\n         * @property $alternateAirportView\n         * @type {JQuery Element}\n         * @default null\n         */\n        this.$alternateAirportView = null;\n\n        /**\n         * Route string that represents the 'filed' flight plan\n         *\n         * @property _flightPlan\n         * @type {string}\n         * @default ''\n         * @private\n         */\n        this._flightPlan = '';\n\n        /**\n         * HTML Element that holds the `#_flightPlan` value\n         *\n         * @property $flightPlanView\n         * @type {JQuery Element}\n         * @default null\n         */\n        this.$flightPlanView = null;\n\n        /**\n         * Value of the remarks field\n         *\n         * @property _remarks\n         * @type {string}\n         * @default ''\n         * @private\n         */\n        this._remarks = '';\n\n        /**\n         * HTML Element that holds the `#remarks` value\n         *\n         * @property $remarks\n         * @type {JQuery Element}\n         * @default null\n         */\n        this.$remarks = null;\n\n        /**\n         * The expected or assigned runway\n         *\n         * @property _runwayInformation\n         * @type {object}\n         * @default ''\n         * @private\n         */\n        this._runwayInformation = null;\n\n        /**\n         * HTML Element that holds the `#runway` value\n         *\n         * @property $runway\n         * @type {JQuery Element}\n         * @default null\n         */\n        this.$runway = null;\n\n        return this._init(aircraftModel)\n            ._createChildren()\n            ._setupHandlers()\n            ._enable()\n            ._layout()\n            ._redraw();\n    }\n\n    /**\n     * Does `#$element` currently have the active css classname applied\n     *\n     * This is useful when trying to find the current active `stripView`\n     * by looping through the `StripViewCollection#_items`.\n     *\n     * @property isActive\n     * @type {boolean}\n     */\n    get isActive() {\n        return this.$element.hasClass(SELECTORS.CLASSNAMES.ACTIVE);\n    }\n\n    /**\n     * Initialize the instance\n     *\n     * Should be run once only on instantiation\n     *\n     * @for StripViewModel\n     * @method _init\n     * @param aircraftModel {object}\n     * @chainable\n     */\n    _init(aircraftModel) {\n        const {\n            insideCenter,\n            callsign,\n            transponderCode,\n            icaoWithWeightClass,\n            assignedAltitude,\n            flightPlanAltitude,\n            arrivalAirportId,\n            departureAirportId,\n            flightPlan\n        } = aircraftModel.getViewModel();\n\n        this.insideCenter = insideCenter;\n        this._callsign = callsign;\n        this._transponder = transponderCode;\n        this._aircraftType = icaoWithWeightClass;\n        this._assignedAltitude = assignedAltitude;\n        this._flightPlanAltitude = flightPlanAltitude;\n        this._arrivalAirport = arrivalAirportId;\n        this._departureAirport = departureAirportId;\n        this._flightPlan = flightPlan;\n        this._categoryClassName = this._buildClassnameForFlightCategory(aircraftModel);\n        this.isDeparture = aircraftModel.isDeparture();\n        this._runwayInformation = this._buildRunwayInformation(aircraftModel);\n\n        return this;\n    }\n\n    /**\n     * Set initial element references\n     *\n     * Should be run once only on instantiation\n     *\n     * @for StripViewModel\n     * @method _createChildren\n     * @chainable\n     */\n    _createChildren() {\n        this.$element = $(STRIP_VIEW_TEMPLATE);\n        this.$callsignView = this.$element.find(SELECTORS.CLASSNAMES.STRIP_VIEW_CALLSIGN);\n        this.$aircraftTypeView = this.$element.find(SELECTORS.CLASSNAMES.STRIP_VIEW_AIRCRAFT_TYPE);\n        this.$cidView = this.$element.find(SELECTORS.CLASSNAMES.STRIP_VIEW_CID);\n        this.$transponderView = this.$element.find(SELECTORS.CLASSNAMES.STRIP_VIEW_TRANSPONDER);\n        this.$assignedAltitudeView = this.$element.find(SELECTORS.CLASSNAMES.STRIP_VIEW_ASSIGNED_ALTITUDE);\n        this.$flightPlanAltitudeView = this.$element.find(SELECTORS.CLASSNAMES.STRIP_VIEW_FLIGHT_PLAN_ALTITUDE);\n        this.$arrivalAirportView = this.$element.find(SELECTORS.CLASSNAMES.STRIP_VIEW_ARRIVAL_AIRPORT_ID);\n        this.$departureAirportView = this.$element.find(SELECTORS.CLASSNAMES.STRIP_VIEW_DEPARTURE_AIRPORT_ID);\n        this.$alternateAirportView = this.$element.find(SELECTORS.CLASSNAMES.STRIP_VIEW_ALTERNATE_AIRPORT_ID);\n        this.$flightPlanView = this.$element.find(SELECTORS.CLASSNAMES.STRIP_VIEW_FLIGHT_PLAN);\n        this.$remarks = this.$element.find(SELECTORS.CLASSNAMES.STRIP_VIEW_REMARKS);\n        this.$runway = this.$element.find(SELECTORS.CLASSNAMES.STRIP_VIEW_RUNWAY);\n\n        return this;\n    }\n\n    /**\n     * Create event handlers\n     *\n     * Should be run once only on instantiation\n     *\n     * @for StripViewModel\n     * @method _setupHandlers\n     * @chainable\n     */\n    _setupHandlers() {\n        this._onClickHandler = this._onClick.bind(this);\n        this._onDoubleClickHandler = this._onDoubleClick.bind(this);\n\n        return this;\n    }\n\n    /**\n     * Register handlers with events on the `$element`\n     *\n     * @for StripViewModel\n     * @method _enable\n     * @private\n     */\n    _enable() {\n        this.$element.on('click', this._onClickHandler);\n        this.$element.on('dblclick', this._onDoubleClickHandler);\n\n        return this;\n    }\n\n    /**\n     * Set the layout with the correct data\n     *\n     * This method will be run on instantiation to set up the view for the first time\n     * and will also run on every subsequent re-render.\n     *\n     * We do not selectively render, if one property has changed\n     * (as determined by `_shouldUpdate()`) we re-draw everything in one shot.\n     *\n     * @for StripViewModel\n     * @method _layout\n     * @chainable\n     */\n    _layout() {\n        this.$element.addClass(this._categoryClassName);\n\n        return this;\n    }\n\n    /**\n     * Update the view with new data\n     *\n     * This method will be run on instantiation to initialize the view with data,\n     * and will be run again any time updatable data has changed.\n     *\n     * After instantiation, this method should only be run after `._shouldUpdate()`\n     * has returned true.\n     *\n     * @for StripViewModel\n     * @method _render\n     * @chainable\n     */\n    _redraw() {\n        this.$callsignView.text(this._callsign);\n        this.$aircraftTypeView.text(this._aircraftType);\n        this.$cidView.text(this.cidString);\n        this.$transponderView.text(this._transponder);\n        this.$assignedAltitudeView.text(this._assignedAltitude);\n        this.$flightPlanAltitudeView.text(this._flightPlanAltitude);\n        this.$departureAirportView.text(this._departureAirport);\n        this.$arrivalAirportView.text(this._arrivalAirport);\n        this.$alternateAirportView.text(this._alternateAirport);\n        this.$flightPlanView.text(this._flightPlan);\n        this.$remarks.text(this._remarks);\n        this.$runway.text(this._runwayInformation.name);\n\n        return this;\n    }\n\n    /**\n     * Disable the instance ane tear down handlers\n     *\n     * @for StripViewModel\n     * @method disable\n     */\n    disable() {\n        this.$element.off('click', this._onClickHandler);\n        this.$element.off('dblclick', this._onDoubleClickHandler);\n\n        return this;\n    }\n\n    /**\n     * Destroy the instance\n     *\n     * @for StripViewModel\n     * @method destroy\n     * @chainable\n     */\n    destroy() {\n        this.disable();\n        this.$element.remove();\n\n        this.id = '';\n        this._eventBus = null;\n        this.$element = null;\n        this.aircraftId = '';\n        this.insideCenter = false;\n        this._categoryClassName = '';\n        this._callsign = '';\n        this.$callsignView = null;\n        this._aircraftType = '';\n        this.$aircraftTypeView = null;\n        this.cid = INVALID_NUMBER;\n        this.cidString = '';\n        this.$cidView = null;\n        this._transponder = 1200;\n        this.$transponderView = null;\n        this._assignedAltitude = INVALID_NUMBER;\n        this.$assignedAltitudeView = null;\n        this._flightPlanAltitude = INVALID_NUMBER;\n        this.$flightPlanAltitudeView = null;\n        this._arrivalAirport = '';\n        this.$arrivalAirportView = null;\n        this._departureAirport = '';\n        this.$departureAirportView = null;\n        this._alternateAirport = '';\n        this.$alternateAirportView = null;\n        this._flightPlan = '';\n        this.$flightPlanView = null;\n        this._remarks = '';\n        this.$remarks = null;\n        this._runwayInformation = null;\n        this.$runway = null;\n\n        return this;\n    }\n\n    /**\n     * Update the instance with new information or return\n     * early if nothing has changed\n     *\n     * @for StripViewModel\n     * @method update\n     * @param aircraftModel {AircraftModel}\n     */\n    update(aircraftModel) {\n        if (!this._shouldUpdate(aircraftModel)) {\n            return;\n        }\n\n        this._updateStripView(aircraftModel);\n    }\n\n    /**\n     * Add active css classname\n     *\n     * @for StripViewModel\n     * @method addActiveState\n     */\n    addActiveState() {\n        this.$element.addClass(SELECTORS.CLASSNAMES.ACTIVE);\n    }\n\n    /**\n     * Remove active css classname\n     *\n     * @for StripViewModel\n     * @method removeActiveState\n     */\n    removeActiveState() {\n        this.$element.removeClass(SELECTORS.CLASSNAMES.ACTIVE);\n    }\n\n    /**\n     * Scroll into view\n     *\n     * @for StripViewModel\n     * @method scrollIntoView\n     */\n    scrollIntoView() {\n        this.$element[0].scrollIntoView({ behavior: 'smooth', block: 'nearest' });\n    }\n\n    /**\n     * Return a classname based on whether an aircraft is a `departure` or an `arrival`\n     *\n     * @for AircraftStripView\n     * @method _buildClassnameForFlightCategory\n     * @param aircraftModel {AircraftModel}\n     * @return {string}\n     */\n    _buildClassnameForFlightCategory(aircraftModel) {\n        if (aircraftModel.isDeparture()) {\n            return SELECTORS.CLASSNAMES.DEPARTURE;\n        }\n\n        if (aircraftModel.isOverflight()) {\n            return SELECTORS.CLASSNAMES.OVERFLIGHT;\n        }\n\n        return SELECTORS.CLASSNAMES.ARRIVAL;\n    }\n\n    /**\n     * Returns the runway and if it is expected or assigned based on whether an\n     * aircraft is a `departure` or an `arrival`.\n     *\n     * @for AircraftStripView\n     * @method _buildRunwayInformation\n     * @param aircraftModel {AircraftModel}\n     * @return {object}\n     */\n    _buildRunwayInformation(aircraftModel) {\n        if (aircraftModel.isDeparture() && aircraftModel.isOnGround()) {\n            return {\n                hasRunwayAssigned: !aircraftModel.isApron(),\n                name: aircraftModel.fms.departureRunwayModel.name\n            };\n        }\n\n        if (aircraftModel.isArrival()) {\n            return {\n                hasRunwayAssigned: aircraftModel.pilot.hasApproachClearance,\n                name: aircraftModel.fms.arrivalRunwayModel.name\n            };\n        }\n\n        return {\n            hasRunwayAssigned: false,\n            name: ''\n        };\n    }\n\n    /**\n     * Click handler for a single click on `StripViewModel`\n     *\n     * This method will prevent event bubbling so a click\n     * doesn't cause the `stripView` to close\n     *\n     * @for AircraftStripView\n     * @method _onClick\n     * @param event {jquery event}\n     * @private\n     */\n    _onClick(event) {\n        event.stopPropagation();\n\n        this._eventBus.trigger(EVENT.STRIP_CLICK, this._callsign);\n    }\n\n    /**\n     * Handler for a double-click on an AircraftStripView\n     *\n     * Initiates the process of centering a single aircraft in the middle of the view\n     *\n     * This method should prevent event bubbling so a click doesn't cause the `stripView` to close\n     *\n     * @for AircraftStripView\n     * @method _onDoubleClick\n     * @param  event {Event}\n     * @private\n     */\n    _onDoubleClick(event) {\n        event.stopPropagation();\n\n        this._eventBus.trigger(EVENT.STRIP_DOUBLE_CLICK, this._callsign);\n    }\n\n\n    /**\n     * Encapsulation of boolean logic used to determine if the view needs to be updated\n     *\n     * This method provides an implementation an 'early exit', so if the view doesn't\n     * need to be updated it can be skipped.\n     *\n     * @for StripViewModel\n     * @method shouldUpdate\n     * @param  aircraftModel {AircraftModel}\n     * @return {boolean}\n     * @private\n     */\n    _shouldUpdate(aircraftModel) {\n        const {\n            insideCenter,\n            transponderCode,\n            assignedAltitude,\n            flightPlanAltitude,\n            arrivalAirportId,\n            departureAirportId,\n            flightPlan\n        } = aircraftModel.getViewModel();\n        const runwayInfo = this._buildRunwayInformation(aircraftModel);\n\n        return this.insideCenter !== insideCenter ||\n            this._transponder !== transponderCode ||\n            this._assignedAltitude !== assignedAltitude ||\n            this._flightPlanAltitude !== flightPlanAltitude ||\n            this._arrivalAirport !== arrivalAirportId ||\n            this._departureAirport !== departureAirportId ||\n            this._flightPlan !== flightPlan ||\n            this._runwayInformation.hasRunwayAssigned !== runwayInfo.hasRunwayAssigned ||\n            this._runwayInformation.name !== runwayInfo.name;\n    }\n\n    /**\n     * Update instance properties with new values from the `AircraftModel`\n     *\n     * This method should only be run after `_shouldUpdate()` returns true\n     * This method will only update the mutable properties of `StripViewModel`\n     *\n     * @for StripViewModel\n     * @method _updateStripView\n     * @param {AircraftModel} aircraftModel\n     * @private\n     */\n    _updateStripView(aircraftModel) {\n        const {\n            insideCenter,\n            transponderCode,\n            assignedAltitude,\n            flightPlanAltitude,\n            arrivalAirportId,\n            departureAirportId,\n            flightPlan\n        } = aircraftModel.getViewModel();\n\n        this.insideCenter = insideCenter;\n        this._transponder = transponderCode;\n        this._assignedAltitude = assignedAltitude;\n        this._flightPlanAltitude = flightPlanAltitude;\n        this._arrivalAirport = arrivalAirportId;\n        this._departureAirport = departureAirportId;\n        this._flightPlan = flightPlan;\n        this._runwayInformation = this._buildRunwayInformation(aircraftModel);\n\n        this.$runway.toggleClass(\n            SELECTORS.CLASSNAMES.STRIP_VIEW_PREPLANNING,\n            !this._runwayInformation.hasRunwayAssigned\n        );\n\n        return this._redraw();\n    }\n}\n","/* eslint-disable max-len */\n/**\n * HTML element used for each `StripViewModel`\n *\n * @property STRIP_VIEW_TEMPLATE\n * @type {string|HTMLElement}\n * @final\n */\nexport const STRIP_VIEW_TEMPLATE = '' +\n'<li class=\"stripViewItem\">' +\n'   <table class=\"stripViewItem-table\">' +\n'       <tbody>' +\n'           <tr class=\"stripView-table-tr\">' +\n'               <td class=\"stripView-table-td js-stripView-callsign\" title=\"Callsign\"></td>' +\n'               <td class=\"stripView-table-td js-stripView-transponder\" title=\"Transponder\"></td>' +\n'               <td class=\"stripView-table-td js-stripView-departureAirportId\" title=\"Departure Airport Identifier\"></td>' +\n'               <td class=\"stripView-table-td js-stripView-flightPlan\" title=\"Flight Plan Route\" rowspan=\"2\" colspan=\"2\"></td>' +\n'           </tr>' +\n'           <tr class=\"stripView-table-tr\">' +\n'               <td class=\"stripView-table-td js-stripView-aircraftModel\" title=\"Aircraft Model\"></td>' +\n'               <td class=\"stripView-table-td mix-stripView-table_borderTop js-stripView-assignedAltitude\" title=\"Assigned Altitude\"></td>' +\n'               <td class=\"stripView-table-td js-stripView-arrivalAirportId\" title=\"Arrival Airport Identifier\"></td>' +\n'           </tr>' +\n'           <tr class=\"stripView-table-tr\">' +\n'               <td class=\"stripView-table-td\">' +\n'                   <div class=\"u-float-right js-stripView-flightRules\" title=\"IFR (I) or VFR (V)\">I</div>' +\n'                   <div class=\"u-float-left js-stripView-cid\" title=\"Computer Identification number\"></div>' +\n'               </td>' +\n'               <td class=\"stripView-table-td mix-stripView-table_borderTop js-stripView-flightPlanAltitude\" title=\"Flight Plan Altitude\"></td>' +\n'               <td class=\"stripView-table-td js-stripView-alternateAirportId\" title=\"Alternate Airport Identifier\"></td>' +\n'               <td class=\"stripView-table-td js-stripView-remarks\" title=\"Remarks\"></td>' +\n'               <td class=\"stripView-table-td js-stripView-runway stripView-preplanning\" title=\"Runway\"></td>' +\n'           </tr>' +\n'       </tbody' +\n'   </table>' +\n'</li>';\n","import _find from 'lodash/find';\nimport _flatten from 'lodash/flatten';\nimport _forEach from 'lodash/forEach';\nimport _map from 'lodash/map';\nimport BaseCollection from '../base/BaseCollection';\nimport AirlineModel from './AirlineModel';\nimport { AIRLINE_NAME_FLEET_SEPARATOR } from '../constants/airlineConstants';\nimport { INVALID_INDEX } from '../constants/globalConstants';\nimport { isEmptyOrNotArray } from '../utilities/validatorUtilities';\n\n/**\n * Houses an `AirlineModel` for each possible airline in the app.\n *\n * The contents of `_items` shouldn't ever need to change when an airport changes,\n * though this class does provide methods to reset each `AirlineModel`.\n *\n * @class AirlineCollection\n * @extends BaseCollection\n */\nexport default class AirlineCollection extends BaseCollection {\n    /**\n     * @constructor\n     * @for AirlineCollection\n     * @param airlineList {array}\n     */\n    /* istanbul ignore next */\n    constructor(airlineList) {\n        super(airlineList);\n\n        if (isEmptyOrNotArray(airlineList)) {\n            throw new TypeError('Invalid airlineList passed to AirlineCollection constructor. ' +\n                `Expected a non-empty array, but received ${typeof airlineList}`);\n        }\n\n        this.init(airlineList);\n    }\n\n    /**\n     * List of all `activeFlightNumbers`\n     *\n     * Used when generating new flightNumbers to verify a new\n     * number isn't already in use\n     *\n     * @property flightNumbers\n     * @return {array<string>}\n     */\n    get flightNumbers() {\n        const flightNumberList = _map(this._items, (airline) => airline.flightNumbers);\n\n        return _flatten(flightNumberList);\n    }\n\n    /**\n     * Lifecycle method. Should be run only once on instantiation\n     *\n     * Initialize instance properties\n     *\n     * @for AirlineCollection\n     * @method init\n     * @param airlineList {array}\n     */\n    init(airlineList) {\n        _forEach(airlineList, (airlineDefinition) => this._buildAirlineModels(airlineDefinition));\n    }\n\n    /**\n     * Add and `AirlineModel` to the collection\n     *\n     * @for AirlineCollection\n     * @method addItem\n     * @param airlineToAdd {AirlineModel}\n     */\n    addItem(airlineToAdd) {\n        this._items.push(airlineToAdd);\n    }\n\n    /**\n     * Find an `AirlineModel` by `id` (also referred to as `icao`).\n     *\n     * This method accepts airline ids in the shape of:\n     * - `aal`\n     * - `aal/long`\n     *\n     * Where a string following the '/' is assumed to be a specific fleet designation.\n     * Though this method supports the `name/fleet` shape, the puropse of this method\n     * is to find and `AirlineModel` object and not a list of aircraft from a fleet.\n     * When a fleet name is encountered it is discarded.\n     *\n     * If you need to find a specific fleet from an airline, you can use the AirlineModel method:\n     * `airlineModel._getRandomAircraftTypeFromFleet(fleetName)`\n     *\n     * @for AirlineCollection\n     * @method findAirlineById\n     * @param id {string}\n     * @return {AirlineModel|undefined}\n     */\n    findAirlineById(id) {\n        let airlineId = id.toLowerCase();\n\n        if (airlineId.indexOf(AIRLINE_NAME_FLEET_SEPARATOR) !== INVALID_INDEX) {\n            // this should not get hit in most circumstances. The puropse of this method is to find\n            // and `AirlineModel` object and not a list of aircraft from a fleet\n            console.warn(\n                `Found a specific fleet with airline id ${id}. This method should be used to find an ` +\n                'AirlineModel instance and not a fleet within an AirlineModel. If you need to find a ' +\n                'specific fleet from an airline, you can use the AirlineModel method: ' +\n                'airlineModel._getRandomAircraftTypeFromFleet(fleetName)'\n            );\n            airlineId = id.split(AIRLINE_NAME_FLEET_SEPARATOR)[0];\n        }\n\n        return _find(this._items, { icao: airlineId });\n    }\n\n    /**\n     * Reset each `AirlineModel` within the collection\n     *\n     * Used when an airport change has occurred.\n     *\n     * @for AirlineCollection\n     * @method reset\n     */\n    reset() {\n        _forEach(this._items, (airlineModel) => {\n            airlineModel.reset();\n        });\n    }\n\n    /**\n     * Instantiate a new `AirlineModel` and add the new model to the collection\n     *\n     * @for airlineCollection\n     * @method _buildAirlineModels\n     * @param airlineDefinition {object}\n     * @private\n     */\n    _buildAirlineModels(airlineDefinition) {\n        const airlineToAdd = new AirlineModel(airlineDefinition);\n\n        this.addItem(airlineToAdd);\n    }\n}\n","import _isNil from 'lodash/isNil';\nimport AirlineCollection from './AirlineCollection';\nimport AirlineModel from './AirlineModel';\nimport { INVALID_INDEX } from '../constants/globalConstants';\n\n/**\n * Controller for all things Airline\n *\n * @class AirlineController\n */\nexport default class AirlineController {\n    /**\n     * @constructor\n     * @for AirlineController\n     * @param airlineList {array<object>}\n     */\n    constructor(airlineList) {\n        /**\n         * Instance of an `AirlineCollection`\n         *\n         * @property airlineCollection\n         * @type {AirlineCollection}\n         */\n        this.airlineCollection = new AirlineCollection(airlineList);\n    }\n\n    /**\n     * Convenience property that exposes a list of all `flightNumbers` currently in use\n     *\n     * Useful for determining if a freshly generated `flightNumber` is currently in use.\n     *\n     * @for AirlineController\n     * @method flightNumbers\n     * @return {array<string>}\n     */\n    get flightNumbers() {\n        return this.airlineCollection.flightNumbers;\n    }\n\n    /**\n     * Given an `airlineId` find and return an `AirlineModel`\n     *\n     * @for AirlineController\n     * @method findAirlineById\n     * @param airlineId {string}\n     * @return {AirlineModel}\n     */\n    findAirlineById(airlineId) {\n        return this.airlineCollection.findAirlineById(airlineId);\n    }\n\n    /**\n     * Generates a new `flightNumber` using the `flightNumberGeneration` rules of a given `AirlineModel`.\n     *\n     * This method provides a higher-level view of all the `flightNumbers` in use, and gurantees unique\n     * `flightNumbers` across all airlines. Though not as realistic, having unique `flightNumbers` allows\n     * for faster processing of aircraft commands by using only a `flightNumber` for a command.\n     *\n     * @for AirlineController\n     * @method generateFlightNumberWithAirlineModel\n     * @param airlineModel {AirlineModel}\n     * @return flightNumber {string}\n     */\n    generateFlightNumberWithAirlineModel(airlineModel) {\n        if (!(airlineModel instanceof AirlineModel)) {\n            throw new TypeError('Invalid parameter. Expected airlineModel to be an instance of AirlineModel');\n        }\n\n        const flightNumber = airlineModel.generateFlightNumber();\n\n        if (this._isActiveFlightNumber(flightNumber)) {\n            // `flightNumber` already exists, recurse back through this method and generate a new flight number\n            return this.generateFlightNumberWithAirlineModel(airlineModel);\n        }\n\n        airlineModel.addFlightNumberToInUse(flightNumber);\n\n        return flightNumber;\n    }\n\n    /**\n     * Remove a provided flightNumber from an airline's list of `activeFlightNumbers`\n     *\n     * Used when an aircraft leaves controlled airspace. Removing a flightNumber\n     * from the list allows it to be used again by another aircraft\n     *\n     * @for AirlineCollection\n     * @method removeFlightNumberFromList\n     * @param airlineId {string}\n     * @param flightNumber {string}\n     */\n    removeFlightNumberFromList(airlineId, flightNumber) {\n        const airlineModel = this.findAirlineById(airlineId);\n\n        if (_isNil(airlineModel)) {\n            throw new TypeError('Invalid airline passed to removeFlightNumberFromList, no AirlineModel found');\n        }\n\n        airlineModel.removeFlightNumber(flightNumber);\n    }\n\n    /**\n     * Reset session specific instance properties\n     *\n     * Used when changing airports. Clears activeFlightNumbers and\n     * any other properties specific to a current session at a\n     * specific airport\n     *\n     * @for AirlineController\n     * @method reset\n     */\n    reset() {\n        this.airlineCollection.reset();\n    }\n\n    /**\n     * Used to determine if a provided `flightNumber` is already in use\n     *\n     * @for AirlineController\n     * @method _isActiveFlightNumber\n     * @param flightNumber {string}\n     * @returns {boolean}\n     */\n    _isActiveFlightNumber(flightNumber) {\n        return this.flightNumbers.indexOf(flightNumber) !== INVALID_INDEX;\n    }\n}\n","import _get from 'lodash/get';\nimport _has from 'lodash/has';\nimport _head from 'lodash/head';\nimport _forEach from 'lodash/forEach';\nimport _map from 'lodash/map';\nimport _random from 'lodash/random';\nimport _uniq from 'lodash/uniq';\nimport _without from 'lodash/without';\nimport BaseModel from '../base/BaseModel';\nimport { buildFlightNumber } from './buildFlightNumber';\nimport { INVALID_INDEX } from '../constants/globalConstants';\nimport { isEmptyOrNotObject } from '../utilities/validatorUtilities';\nimport { DEFAULT_CALLSIGN_FORMAT } from '../constants/airlineConstants';\n\n/**\n * An aircraft operating agency\n *\n * Defines aircraft and fleets used by an airline along with methods\n * and rules for flightNumberGeneration.\n *\n * @class AirlineModel\n * @extends BaseModel\n */\nexport default class AirlineModel extends BaseModel {\n    /**\n     * @constructor\n     * @for AirlineModel\n     * @param airlineDefinition {object}\n     */\n    /* istanbul ignore next */\n    constructor(airlineDefinition) {\n        super();\n\n        if (isEmptyOrNotObject(airlineDefinition)) {\n            throw new TypeError('Invalid airlineDefinition passed to AirlineModel constructor. ' +\n                `Expected a non-empty object, but received ${typeof airlineDefinition}`);\n        }\n\n        /**\n         * ICAO airline designation\n         *\n         * @property icao\n         * @type {string}\n         */\n        this.icao = airlineDefinition.icao;\n\n        /**\n         * Agency name\n         *\n         * @property name\n         * @type {string}\n         */\n        this.name = _get(airlineDefinition, 'name', 'Default airline');\n\n        /**\n         * Radio callsign\n         *\n         * @property radioName\n         * @type {string}\n         * @default 'Default'\n         */\n        this.radioName = 'Default';\n\n        /**\n         * Parameters for flight number generation\n         *\n         * @property flightNumberGeneration\n         * @type {Object}\n         */\n        this.flightNumberGeneration = {\n            /**\n             * Array of callsign formats\n             *\n             * @memberof flightNumberGeneration\n             * @property callsignFormats\n             * @type {Array}\n             * @default ['###']\n            */\n\n            callsignFormats: [DEFAULT_CALLSIGN_FORMAT]\n        };\n\n        /**\n         * Named weighted sets of aircraft\n         *\n         * @property fleets\n         * @type {Object}\n         */\n        this.fleets = {\n            /**\n             * @property default\n             * @type {array}\n             * @default []\n             */\n            default: []\n        };\n\n        /**\n         * List of all flight numbers in use in the app\n         *\n         * @property activeFlightNumbers\n         * @type {array}\n         * @default []\n         */\n        this.activeFlightNumbers = [];\n\n        this.init(airlineDefinition);\n    }\n\n    /**\n     * A unique list of all aircraft in all fleets belonging to this airline\n     *\n     * @property aircraftList\n     * @return {array<string>}\n     */\n    get aircraftList() {\n        const aircraft = [];\n\n        _forEach(this.fleets, (fleet) => {\n            const fleetAircraft = _map(fleet, (aircraft) => _head(aircraft));\n\n            aircraft.push(...fleetAircraft);\n        });\n\n        return _uniq(aircraft);\n    }\n\n    /**\n     * List of all `activeFlightNumbers` by this airline\n     *\n     * Used when generating new `flightNumbers` to verify a new\n     * number isn't already in use\n     *\n     * @property flightNumbers\n     * @return {array<string>}\n     */\n    get flightNumbers() {\n        return this.activeFlightNumbers;\n    }\n\n    /**\n     * Lifecycle method\n     *\n     * Should run only once on instantiation\n     *\n     * @for AirlineModel\n     * @method init\n     * @param airlineDefinition {object}\n     */\n    init(airlineDefinition) {\n        // TODO: these _get() lines are likely redundant and could be removed only after proper testing\n        this.icao = _get(airlineDefinition, 'icao', this.icao).toLowerCase();\n        this.radioName = _get(airlineDefinition, 'callsign.name', this.radioName);\n        this.flightNumberGeneration.callsignFormats = _get(airlineDefinition, 'callsign.callsignFormats', this.flightNumberGeneration.callsignFormats); // eslint-disable-line max-len\n        this.fleets = _get(airlineDefinition, 'fleets');\n\n        this._transformFleetNamesToLowerCase();\n    }\n\n    /**\n     * Remove a given flight number from the `activeFlightNumbers` list\n     *\n     * @for AirlineModel\n     * @method removeFlightNumber\n     * @param flightNumber {string}\n     */\n    removeFlightNumber(flightNumber) {\n        this._deactivateFlightNumber(flightNumber);\n    }\n\n    /**\n     * Resets the current list of `activeFlightNumbers`.\n     *\n     * This can be used when changing airports and all existing\n     * aircraft are removed.\n     *\n     * @for AirlineModel\n     * @method reset\n     */\n    reset() {\n        this.activeFlightNumbers = [];\n    }\n\n    /**\n     * @method getRandomAircraftType\n     * @param fleet {string}\n     * @return {string}\n     */\n    getRandomAircraftType(fleet = '') {\n        if (fleet === '') {\n            return this._getRandomAircraftTypeFromAllFleets();\n        }\n\n        return this._getRandomAircraftTypeFromFleet(fleet);\n    }\n\n    // TODO: the logic here can be simplified.\n    /**\n     * Creates a flight number/identifier\n     *\n     * This method should only be called from the `AircraftController` so the controller\n     * can guarantee unique `flightNumbers` across all `AirlineModels`.\n     *\n     * @for AirlineModel\n     * @method generateFlightNumber\n     * @return flightNumber {string}\n    */\n    generateFlightNumber() {\n        const flightNumber = buildFlightNumber(this.flightNumberGeneration.callsignFormats);\n\n        return flightNumber;\n    }\n\n    // TODO: need better name\n    /**\n     * Add a given `flightNumber` to the `activeFlightNumbers` list.\n     *\n     * @for AirlineModel\n     * @method addFlightNumberToInUse\n     * @param flightNumber {string}\n     */\n    addFlightNumberToInUse(flightNumber) {\n        this.activeFlightNumbers.push(flightNumber);\n    }\n\n    /**\n     * Returns a random aircraft type from any fleet that belongs to this airline\n     *\n     * Used when a new aircraft spwans with a defined airline, but no defined aircraft type\n     *\n     * @for AirlineCollection\n     * @method _getRandomAircraftTypeFromAllFleets\n     * @return {AirlineModel}\n     */\n    _getRandomAircraftTypeFromAllFleets() {\n        const index = _random(0, this.aircraftList.length - 1);\n\n        return this.aircraftList[index];\n    }\n\n    // TODO: this returns a random, and not weighted, result\n    /**\n     * Return a random aircraft type from within a specific fleet\n     *\n     * @for AirlineModel\n     * @method _getRandomAircraftTypeFromFleet\n     * @param fleetName {string}\n     * @return {string}\n     */\n    _getRandomAircraftTypeFromFleet(fleetName) {\n        // if we want to be uber defensive here we would lowercase the `fleetName` param\n        if (!this._hasFleet(fleetName)) {\n            // eslint-disable-next-line max-len\n            throw new Error(`Invalid fleetName passed to AirlineModel. ${fleetName} is not a fleet defined in ${this.icao}`);\n        }\n\n        const fleet = this.fleets[fleetName];\n        const index = _random(0, fleet.length - 1);\n\n        // entries in `fleets[fleetName]` are of the shape `[TYPE, WEIGHT]` we only need the type here\n        return _head(fleet[index]);\n    }\n\n    /**\n     * Remove flight number from `activeFlightNumbers` list allowing\n     * it to be reused by another aircraft some time in the future\n     *\n     * @for AirlineModel\n     * @method _deactivateFlightNumber\n     * @param flightNumber {string}\n     */\n    _deactivateFlightNumber(flightNumber) {\n        if (!this._isActiveFlightNumber(flightNumber)) {\n            // TODO: check that the number is there first\n            // throw or console.error?\n            return;\n        }\n\n        this.activeFlightNumbers = _without(this.activeFlightNumbers, flightNumber);\n    }\n\n    /**\n     * Boolean abstraction used to determine if a fleetName is present within\n     * this instances `fleets` object.\n     *\n     * @for AirlineModel\n     * @method _hasFleet\n     * @param fleetName {string}\n     * @return {boolean}\n     */\n    _hasFleet(fleetName) {\n        return _has(this.fleets, fleetName);\n    }\n\n    /**\n     *\n     *\n     * @for AirlineModel\n     * @method _isActiveFlightNumber\n     * @param flightNumber {string}\n     * @return {boolean}\n     */\n    _isActiveFlightNumber(flightNumber) {\n        return this.activeFlightNumbers.indexOf(flightNumber) !== INVALID_INDEX;\n    }\n\n    /**\n     * Loop through each aircraft in each fleet defined in the airline and make sure it\n     * is defined in lowercase to ease string matching\n     *\n     * @for AirlineCollection\n     * @method _transformFleetNamesToLowerCase\n     * @private\n     */\n    _transformFleetNamesToLowerCase() {\n        _forEach(this.fleets, (fleet) => {\n            _forEach(fleet, (aircraftInFleet) => {\n                const NAME_INDEX = 0;\n                aircraftInFleet[NAME_INDEX] = aircraftInFleet[NAME_INDEX].toLowerCase();\n            });\n        });\n    }\n}\n","import _isArray from 'lodash/isArray';\nimport _toLower from 'lodash/toLower';\nimport { AIRLINE_NAME_FLEET_SEPARATOR } from '../constants/airlineConstants';\nimport { choose_weight } from '../utilities/generalUtilities';\n\n// TODO: this file needs to be renamed to something more generalized.\n\n/**\n * Enemeration of an index value of `0`\n *\n * @property FIRST_INDEX\n * @type {number}\n * @final\n */\nconst FIRST_INDEX = 0;\n\n/**\n * Enemeration of an index value of `1`\n *\n * @property SECOND_INDEX\n * @type {number}\n * @final\n */\nconst SECOND_INDEX = 1;\n\n/**\n * Accepts a selected airline name, which may or may not contain the `AIRLINE_NAME_FLEET_SEPARATOR`, and\n * returns the `airlineNameAndFleet` object with updated property values.\n *\n * @function _extractNameAndFleetFromCurrentAirline\n * @param selectedAirline {string}\n * @param airlineNameAndFleet {object}\n * @return airlineNameAndFleet {object}\n */\nfunction _extractNameAndFleetFromCurrentAirline(selectedAirline, airlineNameAndFleet) {\n    airlineNameAndFleet.name = _toLower(selectedAirline);\n\n    if (selectedAirline.indexOf(AIRLINE_NAME_FLEET_SEPARATOR) > -1) {\n        const nameAndFleet = selectedAirline.split(AIRLINE_NAME_FLEET_SEPARATOR);\n\n        airlineNameAndFleet.name = _toLower(nameAndFleet[FIRST_INDEX]);\n        airlineNameAndFleet.fleet = nameAndFleet[SECOND_INDEX];\n    }\n\n    return airlineNameAndFleet;\n}\n\n// TODO: this method should be able to handle a string value as a parameter\n/**\n * Accepts an airline, as defined in an airport json file from the `departures` and `arrivals` sections,\n * and returns a consistent object containing an airline name and fleet classification.\n *\n * example input:\n * ```\n * - 'aal'\n * - 'ual/long'\n * - 'aal/90long'\n * ```\n *\n * @function airlineNameAndFleetHelper\n * @param airline {array<string>}\n * @return airlineNameAndFleet {object}\n */\nexport function airlineNameAndFleetHelper(airline) {\n    if (!_isArray(airline)) {\n        throw new TypeError(`Invalid parameter. Expected airline to be an array ' +\n            'but instead received ${typeof airline}`);\n    }\n\n    // this could be a model object, but the values used here are temporary so we just use a constant\n    // and update its key values as needed.\n    const airlineNameAndFleet = {\n        name: '',\n        fleet: 'default'\n    };\n\n    if (airline.length === 0) {\n        return airlineNameAndFleet;\n    }\n\n    // we're being sneaky here. the `airlineNameAndFleet` object is created within this function. It then\n    // gets sent off to the next function to be modified.\n    return _extractNameAndFleetFromCurrentAirline(airline[FIRST_INDEX], airlineNameAndFleet);\n}\n\n\n// @deprecated\n/**\n * Accepts a list of airlines, as defined in an airport json file from the `departures` and `arrivals` sections,\n * and returns a consistent object containing an airline name and fleet classification.\n *\n * @function randomAirlineSelectionHelper\n * @param airlineList {array}\n * @return {object}\n */\nexport function randomAirlineSelectionHelper(airlineList) {\n    // TODO: a large portion of this function is duplicated above, refactor\n    if (!_isArray(airlineList)) {\n        throw new TypeError(`Invalid parameter. Expected airlineList to be an array ' +\n            'but instead received ${typeof airlineList}`);\n    }\n\n    // this could be a model object, but the values used here are temporary so we just use a constant\n    // and update its key values as needed.\n    const airlineNameAndFleet = {\n        name: '',\n        fleet: ''\n    };\n\n    if (airlineList.length === 0) {\n        return airlineNameAndFleet;\n    }\n\n    const selectedAirline = choose_weight(airlineList);\n\n    return _extractNameAndFleetFromCurrentAirline(selectedAirline, airlineNameAndFleet);\n}\n","import { choose } from '../utilities/generalUtilities';\nimport {\n    DEFAULT_CALLSIGN_FORMAT,\n    CALLSIGN_RANDOM_DIGIT_CHARACTER,\n    CALLSIGN_RANDOM_LETTER_CHARACTER\n} from '../constants/airlineConstants';\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz';\nconst NUMERIC = '0123456789';\nconst defaultCallsignFormats = [DEFAULT_CALLSIGN_FORMAT];\n\n/**\n * This picks a random number. If it is the first value within the callsign (ie. i === 0), then it picks a\n * number between 1 and 9. Otherwise, it picks a number between 0 and 9.\n *\n * @function _generateRandomDigit\n * @param i {number}\n * @return NUMERIC {string}\n*/\nfunction _generateRandomDigit(i) {\n    if (i === 0) {\n        return choose(NUMERIC.substr(1));\n    }\n\n    return choose(NUMERIC);\n}\n\n/**\n * This function picks a random letter and returns it.\n *\n * @function _generateRandomLetter\n * @return ALPHA {string}\n*/\nfunction _generateRandomLetter() {\n    return choose(ALPHA);\n}\n\n/**\n * This function takes a list of callsignFormats, validates them (ie. ensures that no callsignFormat has a leading 0)\n * then returns a list of validated callsignFormats or the default callsignFormat if there are no valid callsignFormats\n *\n * @function _validateCallsignFormats\n * @param callsignFormat {array<string>}\n * @return validatedFormats {array<string>}\n*/\nfunction _validateCallsignFormats(callsignFormats) {\n    const validatedFormats = [];\n\n    for (let i = 0; i < callsignFormats.length; i++) {\n        if (callsignFormats[i].charAt(0) === '0') {\n            console.warn(`Format ${callsignFormats[i]} is invalid as it has a leading zero!`);\n            continue;\n        }\n\n        validatedFormats.push(callsignFormats[i]);\n    }\n\n    if (validatedFormats.length === 0) {\n        return defaultCallsignFormats;\n    }\n\n    return validatedFormats;\n}\n\n/**\n * Accepts a list of callsign formats, which are defined in the airline files. It randomly selects one of these\n * formats and generates a callsign based off this format.\n *\n * @function buildFlightNumber\n * @param callsignFormats {array<string>}\n * @return {string}\n*/\nexport function buildFlightNumber(callsignFormats) {\n    let flightNumber = '';\n\n    const validatedFormats = _validateCallsignFormats(callsignFormats);\n    const chosenFormat = choose(validatedFormats);\n\n    for (let i = 0; i < chosenFormat.length; i++) {\n        switch (chosenFormat[i]) {\n            case CALLSIGN_RANDOM_DIGIT_CHARACTER:\n                flightNumber += _generateRandomDigit(i);\n                break;\n            case CALLSIGN_RANDOM_LETTER_CHARACTER:\n                flightNumber += _generateRandomLetter();\n                break;\n            default:\n                flightNumber += chosenFormat[i];\n        }\n    }\n\n    return flightNumber;\n}\n","import _has from 'lodash/has';\nimport AirportModel from './AirportModel';\nimport EventBus from '../lib/EventBus';\nimport { EVENT } from '../constants/eventNames';\nimport { STORAGE_KEY } from '../constants/storageKeys';\n\n/**\n * Responsible for maintaining references to all the available airports\n *\n * @class AirportController\n */\nclass AirportController {\n    /**\n     * @constructor\n     */\n    constructor() {\n        /**\n         * @property _eventBus\n         * @type {EventBus}\n         */\n        this._eventBus = EventBus;\n\n        /**\n         * Local reference to `window.AIRPORT_LOAD_LIST`\n         *\n         * This is defined in `assets/airports/airportLoadList.json`\n         * This property is the only way the possible list of airports\n         * makes its way into the app.\n         *\n         * @property _airportListToLoad\n         * @type {Array<object>}\n         * @default []\n         */\n        this._airportListToLoad = [];\n\n        /**\n         * Dictionary of available airports\n         *\n         * @property airports\n         * @type {Object<string, AirportModel>}\n         * @default {}\n         */\n        this.airports = {};\n\n        /**\n         * The current airport\n         *\n         * This is a mutable property that will change based on\n         * the currently selected airport\n         *\n         * @property current\n         * @type {AirportModel}\n         * @default null\n         */\n        this.current = null;\n    }\n\n    /**\n     * Lifecycle method. Should run only once on App initialiazation\n     *\n     * Load each airport in the `airportLoadList`\n     *\n     * @for AirportController\n     * @method init\n     * @param InitialAirportIcao {string}\n     * @param initialAirportData {object}\n     * @param airportLoadList {array<object>}  List of airports to load\n     */\n    init(initialAirportIcao, initialAirportData, airportLoadList) {\n        this._airportListToLoad = airportLoadList;\n\n        for (let i = 0; i < this._airportListToLoad.length; i++) {\n            const airport = this._airportListToLoad[i];\n\n            this.airport_load(airport);\n        }\n\n        this.airport_set(initialAirportIcao, initialAirportData);\n    }\n\n    /**\n     * Create a new `AirportModel` flyweight\n     *\n     * This will create a minimal `AirportModel` with just enough data to\n     * create a valid instance. When switching airports, this model will\n     * be filled in with the rest of the airport data if it does\n     * not exist already\n     *\n     * @for AirportController\n     * @method airport_load\n     * @param icao {string}\n     * @param level {string}\n     * @param name {string}\n     */\n    airport_load({ icao, level, name }) {\n        icao = icao.toLowerCase();\n\n        if (this.hasAirport(icao)) {\n            console.log(`${icao}: already loaded`);\n\n            return null;\n        }\n\n        const airportModel = new AirportModel({ icao, level, name });\n\n        this.airport_add(airportModel);\n    }\n\n    /**\n     * Add an airport config to the `#airports` dictionary\n     *\n     * @for AirportController\n     * @method airport_add\n     * @param airport {object}\n     */\n    airport_add(airport) {\n        this.airports[airport.icao] = airport;\n    }\n\n    /**\n     * Reset the instance\n     *\n     * Placeholder method, currently not in use\n     *\n     * @for AircraftController\n     * @method reset\n     */\n    reset() {\n        this._eventBus = EventBus;\n        this._airportListToLoad = [];\n        this.airports = {};\n        this.current = null;\n    }\n\n    /**\n     * Set a given `icao` as the `#current` airport\n     *\n     * @for AirportController\n     * @method airport_set\n     * @param icao {string}\n     * @param airportJson {object} [default=null]\n     */\n    airport_set(icao, airportJson = null) {\n        if (this.hasStoredIcao(icao)) {\n            icao = localStorage[STORAGE_KEY.ATC_LAST_AIRPORT];\n        }\n\n        icao = icao.toLowerCase();\n\n        if (!this.airports[icao]) {\n            console.warn(`${icao}: no such airport`);\n\n            return;\n        }\n\n        const nextAirportModel = this.airports[icao];\n        this.current = nextAirportModel;\n\n        // if loaded is true, we wont need to load any data thus the call to `onAirportChange` within the\n        // success callback will never fire so we do that here.\n        if (nextAirportModel.loaded) {\n            this._eventBus.trigger(EVENT.AIRPORT_CHANGE, nextAirportModel.data);\n        }\n\n        nextAirportModel.set(airportJson);\n    }\n\n    /**\n     * @for AirportController\n     * @method getAiracCycle\n     * @property airac\n     * @return {number}\n    */\n    getAiracCycle() {\n        return this.current.airac;\n    }\n\n    /**\n     * Retrieve a specific `AirportModel` instance\n     *\n     * @for AirportController\n     * @method airport_get\n     * @param icao {string}\n     * @return {AirportModel}\n     */\n    airport_get(icao) {\n        if (!icao) {\n            return this.current;\n        }\n\n        return this.airports[icao.toLowerCase()];\n    }\n\n    /**\n     * Return the name of the `arrivalRunwayModel`.\n     *\n     * This should be used only in the `SpawnPatternModel` when determining initial\n     * heading for arrival aircraft. We only need the name so we can properly select\n     * an exit segment of a STAR.\n     *\n     * Sometimes route definitions do not contain enough waypoints in the entry and body\n     * segments. This gives us a way to guess the runway and grab an exit segment.\n     *\n     * @for AirportController\n     * @method getInitialArrivalRunwayName\n     * @return {string}\n     */\n    getInitialArrivalRunwayName() {\n        return this.current.arrivalRunwayModel.name;\n    }\n\n    /**\n     * Boolean helper used to determine if a given `icao` exists within `localStorage`\n     *\n     * @for AirportController\n     * @method hasStoredIcao\n     * @param icao {string}\n     * @return {boolean}\n     */\n    hasStoredIcao(icao) {\n        return !icao && _has(localStorage, STORAGE_KEY.ATC_LAST_AIRPORT);\n    }\n\n    /**\n     * Boolean helper used to determine if a given `icao` exists within `#airports`\n     *\n     * @for AirportController\n     * @method hasAirport\n     * @param icao {string}\n     * @return {boolean}\n     */\n    hasAirport(icao) {\n        return _has(this.airports, icao);\n    }\n\n    /**\n     * Remove an aircraft from the queue of any `AirportModel` `RunwayModel`(s)\n     *\n     * @for AirportModel\n     * @method removeAircraftFromAllRunwayQueues\n     * @param  aircraft {AircraftModel}\n     */\n    removeAircraftFromAllRunwayQueues(aircraft) {\n        this.current.removeAircraftFromAllRunwayQueues(aircraft.id);\n    }\n}\n\nexport default new AirportController();\n","/* eslint-disable max-len */\nimport _ceil from 'lodash/ceil';\nimport _chunk from 'lodash/chunk';\nimport _clamp from 'lodash/clamp';\nimport _forEach from 'lodash/forEach';\nimport _get from 'lodash/get';\nimport _map from 'lodash/map';\nimport AirportController from './AirportController';\nimport AirspaceModel from './AirspaceModel';\nimport DynamicPositionModel from '../base/DynamicPositionModel';\nimport EventBus from '../lib/EventBus';\nimport GameController from '../game/GameController';\nimport MapCollection from './MapCollection';\nimport RunwayCollection from './runway/RunwayCollection';\nimport StaticPositionModel from '../base/StaticPositionModel';\nimport TimeKeeper from '../engine/TimeKeeper';\nimport { isValidGpsCoordinatePair } from '../base/positionModelHelpers';\nimport { degreesToRadians, parseElevation } from '../utilities/unitConverters';\nimport {\n    sin,\n    cos,\n    round\n} from '../math/core';\nimport {\n    vectorize2dFromRadians,\n    vlen,\n    vsub,\n    vadd,\n    vscale\n} from '../math/vector';\nimport {\n    FLIGHT_CATEGORY,\n    PERFORMANCE\n} from '../constants/aircraftConstants';\nimport { ENVIRONMENT } from '../constants/environmentConstants';\nimport { EVENT } from '../constants/eventNames';\nimport { STORAGE_KEY } from '../constants/storageKeys';\nimport { distance2d } from '../math/distance';\n\nconst DEFAULT_CTR_RADIUS_KM = 80;\nconst DEFAULT_CTR_CEILING_FT = 10000;\nconst DEFAULT_INITIAL_ALTITUDE_FT = 5000;\nconst DEFAULT_RANGE_RINGS = {\n    enabled: false,\n    radius_nm: 0,\n    center: [0, 0]\n};\n\n/**\n * @class AirportModel\n */\nexport default class AirportModel {\n    /**\n     * @constructor\n     * @param options {object}\n     */\n    // istanbul ignore next\n    constructor(options = {}) {\n        /**\n         * @property EventBus\n         * @type {EventBus}\n         */\n        this.eventBus = EventBus;\n\n        /**\n         * cache of airport json data\n         *\n         * used externally when changing airports\n         *\n         * @property data\n         * @type {object}\n         * @default {}\n         */\n        this.data = {};\n\n        /**\n         * @property arrivalRunwayModel\n         * @type {RunwayModel}\n         * @default null\n         */\n        this.arrivalRunwayModel = null;\n\n        /**\n         * @property departureRunwayModel\n         * @type {RunwayModel}\n         * @default null\n         */\n        this.departureRunwayModel = null;\n\n        /**\n         * Flag for is an airport has been loaded successfully\n         *\n         * @property loaded\n         * @type {boolean}\n         * @default false\n         */\n        this.loaded = false;\n\n        /**\n         * Flag for if an airport is in the process of loading\n         *\n         * @property loading\n         * @type {boolean}\n         * @default false\n         */\n        this.loading = false;\n\n        /**\n         * Name of the airport\n         *\n         * @property name\n         * @type {string}\n         * @default null\n         */\n        this.name = null;\n\n        /**\n         * ICAO identifier of the airport\n         *\n         * @property icao\n         * @type {string}\n         * @default null\n         */\n        this.icao = null;\n\n        /**\n         * AIRAC cycle from which data for the airport was taken\n         *\n         * @property airac\n         * @type {number}\n         * @default null\n        */\n        this.airac = null;\n\n        /**\n         * @property radio\n         * @type\n         * @default null\n         */\n        this.radio = null;\n\n        /**\n         * @property level\n         * @type\n         * @default null\n         */\n        this.level = null;\n\n        /**\n         * @property _positionModel\n         * @type {StaticPositionModel}\n         * @default null\n         */\n        this._positionModel = null;\n\n        /**\n         * Collection of all airport `RunwayModel` objects\n         *\n         * @property _runwayCollection\n         * @type {RunwayCollection}\n         * @default null\n         */\n        this._runwayCollection = null;\n\n        /**\n         * Collection of all `MapModel`s available to be displayed on the scope\n         *\n         * @property mapCollection\n         * @type {MapCollection}\n         * @default null\n         */\n        this.mapCollection = null;\n\n        /**\n         * @property restricted_areas\n         * @type {array}\n         * @default []\n         */\n        this.restricted_areas = [];\n\n        /**\n         * areas under this sector's control. If null, draws circle with diameter of 'ctr_radius'\n         *\n         * @property airspace\n         * @type {object}\n         * @default null\n         */\n        this.airspace = null;\n\n        // TODO: this should really be its own class possibly separate from the `AirportModel`\n        /**\n         * Container for airport terrain definition\n         *\n         * @property terrain\n         * @type {object}\n         * @default {}\n         */\n        this.terrain = {};\n\n        /**\n         * @property timeout\n         * @type {object}\n         */\n        this.timeout = {\n            runway: null,\n            departure: null\n        };\n\n        /**\n         * current wind settings for an airport\n         *\n         * @property wind\n         * @type {object}\n         */\n        this.wind = {\n            speed: 10,\n            angle: 0\n        };\n\n        /**\n         * default wind settings for an airport\n         * to preserve initial configuration\n         *\n         * @property wind\n         * @type {object}\n         */\n        this.defaultWind = {\n            speed: 10,\n            angle: 0\n        };\n\n        /**\n         * @for AirportModel\n         * @property ctr_radius\n         * @type {nunmber}\n         */\n        this.ctr_radius = null;\n\n        /**\n         * @for AirportModel\n         * @property ctr_ceiling\n         * @type {nunmber}\n         */\n        this.ctr_ceiling = null;\n\n        /**\n         * @for AirportModel\n         * @property initial_alt\n         * @type {nunmber}\n         */\n        this.initial_alt = null;\n\n        /**\n         * @for AirportModel\n         * @property rangeRings\n         * @type {object}\n         */\n        this.rangeRings = null;\n\n        this.init(options);\n    }\n\n    /**\n     * @property elevation\n     * @return {number}\n     */\n    get elevation() {\n        return this._positionModel.elevation;\n    }\n\n    /**\n     * Provide read-only public access to this._positionModel\n     *\n     * @for SpawnPatternModel\n     * @property position\n     * @type {StaticPositionModel}\n     */\n    get positionModel() {\n        return this._positionModel;\n    }\n\n    /**\n     * Fascade to access relative position\n     *\n     * @for AirportModel\n     * @property relativePosition\n     * @type {array<number>} [kilometersNorth, kilometersEast]\n     */\n    get relativePosition() {\n        return this._positionModel.relativePosition;\n    }\n\n    /**\n     * Fascade to access the airport's position's magnetic declination value\n     *\n     * @for AirportModel\n     * @property magneticNorth\n     * @return {number}\n     */\n    get magneticNorth() {\n        return this._positionModel.magneticNorth;\n    }\n\n    /**\n     * Minimum altitude an aircraft can be assigned to.\n     *\n     * @property minAssignableAltitude\n     * @return {number}\n     */\n    get minAssignableAltitude() {\n        return _ceil(this.elevation + 1000, -2);\n    }\n\n    /**\n     * This will return an array of two-value arrays containing a `RunwayModel`\n     * for each end of a runway.\n     *\n     * This should only be used by the `CanvasController` for drawing runways.\n     * This returns data in this shape in an effort to maintain a previous api.\n     *\n     * @property runways\n     * @return {array<array<RunwayModel>>}\n     */\n    get runways() {\n        return _chunk(this._runwayCollection.runways, 2);\n    }\n\n    /**\n     * Minimum descent altitude of an instrument approach\n     *\n     * This is 200 feet AGL but every airport is at a different elevation\n     * This provides easy access to the correct value from within an aircraft\n     *\n     * @property minDescentAltitude\n     * @return {number}\n     */\n    get minDescentAltitude() {\n        return Math.floor(this.elevation + PERFORMANCE.INSTRUMENT_APPROACH_MINIMUM_DESCENT_ALTITUDE);\n    }\n\n    /**\n     * Maximum altitude an aircraft can be assigned to.\n     *\n     * @property maxAssignableAltitude\n     * @return {number}\n     */\n    get maxAssignableAltitude() {\n        return this.ctr_ceiling;\n    }\n\n    /**\n     * @for AirportModel\n     * @method init\n     * @param data {object}\n     */\n    init(data) {\n        this.name = _get(data, 'name', this.name);\n        this.icao = _get(data, 'icao', this.icao).toLowerCase();\n        this.level = _get(data, 'level', this.level);\n        // exit early if `position` doesn't exist in data. on app initialiazation, we loop through every airport\n        // in the `airportLoadList` and instantiate a model for each but wont have the full data set until the\n        // airport json file is loaded.\n        if (!data.position) {\n            return;\n        }\n\n        this.setCurrentPosition(data.position, degreesToRadians(data.magnetic_north));\n\n        this.airac = _get(data, 'airac', this.airac);\n        this.radio = _get(data, 'radio', this.radio);\n        this.has_terrain = _get(data, 'has_terrain', false);\n        this.ctr_radius = _get(data, 'ctr_radius', DEFAULT_CTR_RADIUS_KM);\n        this.ctr_ceiling = _get(data, 'ctr_ceiling', DEFAULT_CTR_CEILING_FT);\n        this.initial_alt = _get(data, 'initial_alt', DEFAULT_INITIAL_ALTITUDE_FT);\n        this._runwayCollection = new RunwayCollection(data.runways, this._positionModel);\n        this.mapCollection = new MapCollection(data.maps, data.defaultMaps, this.positionModel, this.magneticNorth);\n        this.defaultWind.speed = data.wind.speed;\n        this.defaultWind.angle = degreesToRadians(data.wind.angle);\n\n        this._initRangeRings(data.rangeRings);\n        this.loadTerrain();\n        this.buildAirspace(data.airspace);\n        this.setActiveRunwaysFromNames(data.arrivalRunway, data.departureRunway);\n        this.buildRestrictedAreas(data.restricted);\n        this.updateCurrentWind(data.wind);\n\n        this.eventBus.on(EVENT.WIND_CHANGE, this.updateCurrentWind.bind(this));\n    }\n\n    /**\n     * Initialize the range ring position model\n     *\n     * @for AirportModel\n     * @method _initRangeRings\n     * @param {object} rangeRingData\n     * @private\n     */\n    _initRangeRings(rangeRingData) {\n        if (!rangeRingData) {\n            this.rangeRings = DEFAULT_RANGE_RINGS;\n        }\n\n        this.rangeRings = {\n            enabled: rangeRingData.enabled,\n            center: new DynamicPositionModel(\n                rangeRingData.center,\n                this.positionModel,\n                this.magneticNorth\n            ),\n            radius_nm: rangeRingData.radius_nm\n        };\n    }\n\n    /**\n     * @for AirportModel\n     * @method setCurrentPosition\n     * @param gpsCoordinates {array<number>}  [latitude, longitude]\n     * @param magneticNorth {number}          magnetic declination (variation), in radians\n     */\n    setCurrentPosition(gpsCoordinates, magneticNorth) {\n        if (!isValidGpsCoordinatePair(gpsCoordinates)) {\n            return;\n        }\n\n        this._positionModel = new StaticPositionModel(gpsCoordinates, null, magneticNorth);\n    }\n\n    /**\n     * create 3d polygonal airspace\n     *\n     * @for AirportModel\n     * @method buildAirspace\n     * @param airspace\n     */\n    buildAirspace(airspace) {\n        if (!airspace) {\n            return;\n        }\n\n        // for each area\n        this.airspace = _map(airspace, (airspaceSection) => {\n            return new AirspaceModel(\n                airspaceSection,\n                this._positionModel,\n                this._positionModel.magneticNorth\n            );\n        });\n\n        this.ctr_radius = 0;\n\n        for (const airspaceModel of this.airspace) {\n            this.ctr_radius = Math.max(\n                this.ctr_radius,\n                ..._map(airspaceModel.poly, (vertexPosition) => vlen(\n                    vsub(vertexPosition.relativePosition, this.rangeRings.center.relativePosition)\n                ))\n            );\n        }\n    }\n\n    /**\n     * @for AirportModel\n     * @method buildRestrictedAreas\n     * @param data\n     */\n    buildRestrictedAreas(data) {\n        if (!data) {\n            return;\n        }\n\n        _forEach(data, (areaData) => {\n            const restrictedArea = {};\n\n            if (areaData.name) {\n                restrictedArea.name = areaData.name;\n            }\n\n            restrictedArea.height = parseElevation(areaData.height);\n            restrictedArea.poly = areaData.poly.map((gps) => {\n                return DynamicPositionModel.calculateRelativePosition(gps, this._positionModel, this.magneticNorth);\n            });\n\n            let coords_max = restrictedArea.poly[0];\n            let coords_min = restrictedArea.poly[0];\n\n            _forEach(restrictedArea.poly, (v) => {\n                coords_max = [\n                    Math.max(v[0], coords_max[0]),\n                    Math.max(v[1], coords_max[1])\n                ];\n                coords_min = [\n                    Math.min(v[0], coords_min[0]),\n                    Math.min(v[1], coords_min[1])\n                ];\n            });\n\n            let labelRelativePositions = [vscale(vadd(coords_max, coords_min), 0.5)];\n\n            if (areaData.labelPositions) {\n                labelRelativePositions = areaData.labelPositions.map((v) => {\n                    return DynamicPositionModel.calculateRelativePosition(v, this._positionModel, this.magneticNorth);\n                });\n            }\n\n            restrictedArea.labelRelativePositions = labelRelativePositions;\n\n            this.restricted_areas.push(restrictedArea);\n        });\n    }\n\n    /**\n     * Return an altitude clamped within the min/max assignable altitudes for this airport\n     *\n     * @for AirportModel\n     * @method clampWithinAssignableAltitudes\n     * @param altitude\n     * @return {number}\n     */\n    clampWithinAssignableAltitudes(altitude) {\n        return _clamp(altitude, this.minAssignableAltitude, this.maxAssignableAltitude);\n    }\n\n    /**\n     * @for AirportModel\n     * @method updateCurrentWind\n     * @param currentWind\n     */\n    updateCurrentWind(currentWind) {\n        if (!currentWind) {\n            return;\n        }\n\n        this.wind.speed = currentWind.speed;\n        this.wind.angle = degreesToRadians(currentWind.angle);\n    }\n\n    /**\n     * @for AirportModel\n     * @method set\n     * @param airportJson {object}\n     */\n    set(airportJson) {\n        if (!this.loaded) {\n            this.load(airportJson);\n\n            return;\n        }\n\n        localStorage[STORAGE_KEY.ATC_LAST_AIRPORT] = this.icao;\n\n        // TODO: this should live elsewhere and be called by a higher level controller\n        GameController.game_reset_score_and_events();\n\n        this.start = TimeKeeper.accumulatedDeltaTime;\n\n        this.eventBus.trigger(EVENT.PAUSE_UPDATE_LOOP, true);\n    }\n\n    /**\n     * Get the wind at the specified altitude.\n     * When the altitude is not specified, the airport's surface wind is given.\n     *\n     * @for AirportModel\n     * @method getWindAtAltitude\n     * @param {number} altitude\n     * @returns {object<angle, speed>}\n     */\n    getWindAtAltitude(altitude = this.elevation) {\n        const windTravelSpeedAtSurface = this.wind.speed;\n        const altitudeAboveSurface = altitude - this.elevation;\n        const windIncreaseFactor = altitudeAboveSurface * ENVIRONMENT.WIND_INCREASE_FACTOR_PER_FT;\n        const windTravelSpeedAtAltitude = windTravelSpeedAtSurface * (1 + windIncreaseFactor);\n        const wind = {\n            angle: this.wind.angle,\n            speed: windTravelSpeedAtAltitude\n        };\n\n        return wind;\n    }\n\n    /**\n     * @for AirportModel\n     * @method getWindForRunway\n     * @param runway {runwayModel}\n     * @return {object} headwind and crosswind\n     */\n    getWindForRunway(runway) {\n        const crosswindAngle = runway.calculateCrosswindAngleForRunway(this.wind.angle);\n\n        return {\n            cross: sin(crosswindAngle) * this.wind.speed,\n            head: cos(crosswindAngle) * this.wind.speed\n        };\n    }\n\n    /**\n     * Generates a vector representation of the wind at a given altitude.\n     * When the altitude is not specified, the airport elevation is used as the assumed altitude.\n     *\n     * @for AirportModel\n     * @method getWindVectorAtAltitude\n     * @param {number} altitude\n     * @returns {array<number, number>}\n     */\n    getWindVectorAtAltitude(altitude) {\n        const { angle, speed } = this.getWindAtAltitude(altitude);\n        const windTravelDirection = angle + Math.PI;\n        const windVector = vscale(vectorize2dFromRadians(windTravelDirection), speed);\n\n        return windVector;\n    }\n\n    /**\n     * Set active arrival/departure runways from the runway names\n     *\n     * @for AirportModel\n     * @method setActiveRunwaysFromNames\n     * @param arrivalRunwayName {string}\n     * @param departureRunwayName {string}\n     */\n    setActiveRunwaysFromNames(arrivalRunwayName, departureRunwayName) {\n        const arrivalRunwayModel = this.getRunway(arrivalRunwayName);\n        const departureRunwayModel = this.getRunway(departureRunwayName);\n\n        this.setArrivalRunway(arrivalRunwayModel);\n        this.setDepartureRunway(departureRunwayModel);\n    }\n\n    /**\n     * Set the airport's active arrival runway\n     *\n     * @for AirportModel\n     * @method setArrivalRunway\n     * @param runwayModel {RunwayModel}\n     */\n    setArrivalRunway(runwayModel) {\n        this.arrivalRunwayModel = runwayModel;\n    }\n\n    /**\n     * Set the airport's active departure runway\n     *\n     * @for AirportModel\n     * @method setDepartureRunway\n     * @param runwayModel {RunwayModel}\n     */\n    setDepartureRunway(runwayModel) {\n        this.departureRunwayModel = runwayModel;\n    }\n\n    /**\n     * Get RunwayModel in use for 'arrival' or 'departure', as specified in call\n     *\n     * @for AirportModel\n     * @method getActiveRunwayForCategory\n     * @param category {string} whether the arrival or departure runway is being queried\n     * @return {RunwayModel}\n     */\n    getActiveRunwayForCategory(category) {\n        if (category === FLIGHT_CATEGORY.ARRIVAL) {\n            return this.arrivalRunwayModel;\n        }\n\n        if (category === FLIGHT_CATEGORY.DEPARTURE) {\n            return this.departureRunwayModel;\n        }\n\n        if (category === FLIGHT_CATEGORY.OVERFLIGHT) {\n            return;\n        }\n\n        console.warn('Did not expect a query for runway that applies to aircraft of category ' +\n            `'${category}'! Returning the arrival runway (${this.arrivalRunwayModel.name})`);\n\n        return this.arrivalRunwayModel;\n    }\n\n    /**\n     * Return a `RunwayRelationshipModel` given two runway names\n     *\n     * @for AirportModel\n     * @method getRunwayRelationshipForRunwayNames\n     * @param  primaryRunwayName {string}\n     * @param  comparatorRunwayName {string}\n     * @return {RunwayRelationshipModel|undefined}\n     */\n    getRunwayRelationshipForRunwayNames(primaryRunwayName, comparatorRunwayName) {\n        return this._runwayCollection.getRunwayRelationshipForRunwayNames(primaryRunwayName, comparatorRunwayName);\n    }\n\n    // TODO: Implement changing winds, then bring this method back to life\n    /**\n     * @for AirportModel\n     * @method updateRunway\n     */\n    updateRunway() {\n        // const bestRunwayForWind = this._runwayCollection.findBestRunwayForWind(this.getWind);\n        //\n        // this.setArrivalRunway(bestRunwayForWind);\n        // this.setDepartureRunway(bestRunwayForWind);\n    }\n\n    // TODO: leaving this here for when we implement variable winds\n    // /**\n    //  * @for AirportModel\n    //  * @method setRunwayTimeout\n    //  */\n    // setRunwayTimeout() {\n    //     this.timeout.runway = GameController.game_timeout(this.updateRunway, Math.random() * 30, this);\n    // }\n\n    /**\n     * Return a `RunwayModel` for the provided name\n     *\n     * @for AirportModel\n     * @method getRunway\n     * @param name {string} name of the runway, eg '28R'\n     * @return {RunwayModel|null}\n     */\n    getRunway(name) {\n        return this._runwayCollection.findRunwayModelByName(name);\n    }\n\n    /**\n     * Remove an aircraft from all runway queues\n     *\n     * @for AirportModel\n     * @method removeAircraftFromAllRunwayQueues\n     * @param  aircraft {AircraftModel}\n     */\n    removeAircraftFromAllRunwayQueues(aircraftId) {\n        return this._runwayCollection.removeAircraftFromAllRunwayQueues(aircraftId);\n    }\n\n    /**\n     * Reset the queues for ALL runways at once\n     *\n     * @for AirportModel\n     * @method resetAllRunwayQueues\n     * @returns undefined\n     */\n    resetAllRunwayQueues() {\n        this._runwayCollection.runways.forEach((runwayModel) => runwayModel.resetQueue());\n    }\n\n    /**\n     * @for AirportModel\n     * @method parseTerrain\n     * @param  data {object}\n     */\n    parseTerrain(data) {\n        const GEOMETRY_TYPE = {\n            LINE_STRING: 'LineString',\n            POLYGON: 'Polygon'\n        };\n\n        // reassigning `this` to maintain correct scope wen working in multiple nested `_forEach()` and `_map()` loops\n        const apt = this;\n        apt.terrain = {};\n\n        _forEach(data.features, (f) => {\n            // const f = data.features[i];\n            // m => ft, rounded to 1K (but not divided)\n            const ele = round(f.properties.elevation / 0.3048, 1000);\n\n            if (!apt.terrain[ele]) {\n                apt.terrain[ele] = [];\n            }\n\n            let multipoly = f.geometry.coordinates;\n            if (f.geometry.type === GEOMETRY_TYPE.LINE_STRING) {\n                multipoly = [[multipoly]];\n            }\n\n            if (f.geometry.type === GEOMETRY_TYPE.POLYGON) {\n                multipoly = [multipoly];\n            }\n\n            _forEach(multipoly, (poly) => {\n                // multipoly contains several polys\n                // each poly has 1st outer ring and other rings are holes\n                const terrainAtElevation = _map(poly, (line_string) => {\n                    return _map(line_string, (point) => {\n                        // `StaticPositionModel` requires [lat,lon] order\n                        const latLongPoint = point.slice().reverse();\n                        const pos = new StaticPositionModel(latLongPoint, apt.positionModel, apt.magneticNorth);\n\n                        return pos.relativePosition;\n                    });\n                });\n\n                apt.terrain[ele].push(terrainAtElevation);\n            });\n        });\n    }\n\n    /**\n     * @for AirportModel\n     * @method loadTerrain\n     */\n    loadTerrain() {\n        if (!this.has_terrain) {\n            return;\n        }\n\n        // eslint-disable-next-line no-undef\n        zlsa.atc.loadAsset({\n            url: `assets/airports/terrain/${this.icao.toLowerCase()}.geojson`,\n            immediate: true\n        }).done((data) => { // TODO: change to onSuccess and onError handler abstractions\n            try {\n                // eslint-disable-next-line no-undef\n                this.parseTerrain(data);\n            } catch (e) {\n                throw new Error(e.message);\n            }\n        }).fail((jqXHR, textStatus, errorThrown) => {\n            console.error(`Unable to load airport/terrain/${this.icao}: ${textStatus}`);\n\n            this.loading = false;\n            AirportController.current.set();\n        });\n    }\n\n    /**\n     * Stop the game loop and Load airport json asyncronously\n     *\n     * @for AirportModel\n     * @method load\n     * @param airportJson {object}\n     */\n    load(airportJson = null) {\n        if (this.loaded) {\n            return;\n        }\n\n        this.loading = true;\n        this.eventBus.trigger(EVENT.PAUSE_UPDATE_LOOP, false);\n\n        if (airportJson && airportJson.icao.toLowerCase() === this.icao) {\n            this.onLoadIntialAirportFromJson(airportJson);\n\n            return;\n        }\n\n        // eslint-disable-next-line no-undef\n        zlsa.atc.loadAsset({\n            url: `assets/airports/${this.icao.toLowerCase()}.json`,\n            immediate: true\n        }).done((response) => this.onLoadAirportSuccess(response))\n            .fail((...args) => this.onLoadAirportError(...args));\n    }\n\n    /**\n     * @method onLoadAirportSuccess\n     * @param response {object}\n     */\n    onLoadAirportSuccess = (response) => {\n        // cache of airport.json data to be used to hydrate other classes on airport change\n        this.data = response;\n        this.loading = false;\n        this.loaded = true;\n\n        this.init(response);\n        this.eventBus.trigger(EVENT.AIRPORT_CHANGE, this.data);\n        this.set();\n    };\n\n    /**\n     * @for AirportModel\n     * @method onLoadAirportError\n     * @param textStatus {string}\n     */\n    onLoadAirportError = ({ textStatus }) => {\n        console.error(`Unable to load airport/${this.icao}: ${textStatus}`);\n\n        this.loading = false;\n        AirportController.current.set();\n    }\n\n    /**\n     * Provides a way to get data into the instance with passed in\n     * data and without running `.load()`\n     *\n     * Data received here is identical to data that would be received\n     * when changing airports.\n     *\n     * @for AirportModel\n     * @method onLoadIntialAirportFromJson\n     * @param response {object}\n     */\n    onLoadIntialAirportFromJson(response) {\n        // TODO: this is extremely similar to `onLoadAirportSuccess()`, consolidate these two methods\n        // cache of airport.json data to be used to hydrate other classes on airport change\n        this.data = response;\n        this.loading = false;\n        this.loaded = true;\n\n        this.init(response);\n        this.set();\n    }\n\n    /**\n     * Returns whether or not the provided point (at the specified altitude) is within any\n     * airspace area belonging to this airport\n     *\n     * @for AirportModel\n     * @function isPointWithinAirspace\n     * @param point {array} x,y\n     * @param altitude {number}\n     * @return {boolean}\n     */\n    isPointWithinAirspace(point, altitude) {\n        for (let i = 0; i < this.airspace.length; i++) {\n            const airspace = this.airspace[i];\n\n            if (airspace.isPointInside(point, altitude)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     *\n     * @for AirportModel\n     * @function distance2d\n     * @param point {array} x,y\n     * @return {number} distance in km\n     */\n    distance2d(point) {\n        return distance2d(point, this.relativePosition);\n    }\n}\n","import _isEqual from 'lodash/isEqual';\nimport _isNumber from 'lodash/isNumber';\nimport _map from 'lodash/map';\nimport BaseModel from '../base/BaseModel';\nimport StaticPositionModel from '../base/StaticPositionModel';\nimport { INVALID_NUMBER } from '../constants/globalConstants';\nimport { convertToThousands, nm } from '../utilities/unitConverters';\nimport { point_in_poly, distance_to_poly } from '../math/vector';\n\n/**\n * An enclosed region defined by a series of Position objects and an altitude range\n *\n * @class AirspaceModel\n */\nexport default class AirspaceModel extends BaseModel {\n    /**\n     * @for AirspaceModel\n     * @constructor\n     * @param data {object}\n     * @param airportPosition {StaticPositionModel}\n     * @param magneticNorth {number}\n     */\n    constructor(data, airportPosition, magneticNorth) {\n        super();\n\n        if (!data || !airportPosition || !_isNumber(magneticNorth)) {\n            // eslint-disable-next-line max-len\n            throw new TypeError('Invalid parameter, expected airspace, airportPosition and magneticNorth to be defined');\n        }\n\n        /**\n         * List of lat/long coordinates that outline the shape of the area\n         *\n         * DO NOT repeat the origin to 'close' the shape, this happens programatically\n         *\n         * @for AirspaceModel\n         * @property poly\n         * @type {array}\n         * @default []\n         */\n        this.poly = [];\n\n        /**\n         * A transformed version of this.poly\n         *\n         * @for AirspaceModel\n         * @property relativePoly\n         * @type {array}\n         * @default []\n         */\n        this.relativePoly = [];\n\n        /**\n         * Altitude at bottom of area, in hundreds of feet\n         *\n         * @for AirspaceModel\n         * @property floor\n         * @type {number}\n         * @default INVALID_NUMBER\n         */\n        this.floor = INVALID_NUMBER;\n\n        /**\n         * Altitude of top of area, in hundreds of feet\n         *\n         * @for AirspaceModel\n         * @property ceiling\n         * @type {number}\n         * @default INVALID_NUMBER\n         */\n        this.ceiling = INVALID_NUMBER;\n\n        /**\n         * FAA airspace classification (A,B,C,D,E,G)\n         *\n         * @for AirspaceModel\n         * @property airspace_class\n         * @type {string}\n         * @default ''\n         */\n        this.airspace_class = '';\n\n        /**\n         * Relative positions at which to draw airspace labels\n         *\n         * @for AirspaceModel\n         * @property labelRelativePositions\n         * @type {array<array<number>>} [ [x,y], [x,y], ... ], in km\n         * @default []\n         */\n        this.labelRelativePositions = [];\n\n        return this._init(data, airportPosition, magneticNorth);\n    }\n\n    // ------------------------------ LIFECYCLE ------------------------------\n\n    /**\n     * Initialize the model\n     *\n     * @for AirspaceModel\n     * @method _init\n     * @param data {array}\n     * @param airportPosition {StaticPositionModel}\n     * @param magneticNorth {number}\n     * @chainable\n     * @private\n     */\n    _init(data, airportPosition, magneticNorth) {\n        this.floor = convertToThousands(data.floor);\n        this.ceiling = convertToThousands(data.ceiling);\n        this.airspace_class = data.airspace_class;\n        this.poly = this._buildPolyPositionModels(data.poly, airportPosition, magneticNorth);\n        this.relativePoly = _map(this.poly, (v) => v.relativePosition);\n\n        this._initLabelPositions(data, airportPosition, magneticNorth);\n\n        return this;\n    }\n\n    _initLabelPositions(data, airportPosition, magneticNorth) {\n        if (!data.labelPositions) {\n            const centerRelativePosition = this._calculateAirspaceCenterRelativePosition();\n            this.labelRelativePositions = [centerRelativePosition];\n\n            return;\n        }\n\n        const labelRelativePositions = data.labelPositions.map((position) => {\n            const labelPositionModel = new StaticPositionModel(position, airportPosition, magneticNorth);\n\n            return labelPositionModel.relativePosition;\n        });\n\n        this.labelRelativePositions = labelRelativePositions;\n    }\n\n    /**\n     * Calculates the relative position of the center of the airspace\n     *\n     * @for AirspaceModel\n     * @method _calculateAirspaceCenterRelativePosition\n     * @returns {array} [x,y] coordinates in km\n     * @private\n     */\n    _calculateAirspaceCenterRelativePosition() {\n        let [minX, minY] = this.relativePoly[0];\n        let [maxX, maxY] = this.relativePoly[0];\n\n        // iterate through all points in the polygon to find the extreme X/Y coordinates\n        for (const point of this.relativePoly) {\n            minX = Math.min(minX, point[0]);\n            maxX = Math.max(maxX, point[0]);\n            minY = Math.min(minY, point[1]);\n            maxY = Math.max(maxY, point[1]);\n        }\n\n        // calculate the center point as the middle of the extremes\n        return [\n            (minX + maxX) / 2,\n            (minY + maxY) / 2\n        ];\n    }\n\n    /**\n     * @for AirspaceModel\n     * @method reset\n     */\n    reset() {\n        this.poly = [];\n        this.floor = INVALID_NUMBER;\n        this.ceiling = INVALID_NUMBER;\n        this.airspace_class = '';\n    }\n\n    // ------------------------------ PUBLIC ------------------------------\n\n    /**\n     * Checks if a point (2D position and altitude) is within this airspace\n     *\n     * @for AirspaceModel\n     * @method isPointInside\n     * @param point {array} x,y\n     * @param altitude {number}\n     * @return {boolean}\n     */\n    isPointInside(point, altitude) {\n        if (altitude < this.floor || this.ceiling < altitude) {\n            return false;\n        }\n\n        return this.isPointInside2D(point);\n    }\n\n    /**\n     * Checks if a 2D point is within the 2D projection of the airspace\n     *\n     * @for AirspaceModel\n     * @method isPointInside\n     * @param point {array} x,y\n     * @return {boolean}\n     */\n    isPointInside2D(point) {\n        return point_in_poly(point, this.relativePoly);\n    }\n\n    /**\n     * calculates the distance to the airspace in nm\n     *\n     * @for AirspaceModel\n     * @method distanceToBoundary\n     * @param point {array} x,y\n     * @return {number} in nm\n     */\n    distanceToBoundary(point) {\n        return nm(distance_to_poly(point, this.relativePoly));\n    }\n\n    // ------------------------------ PRIVATE ------------------------------\n\n    /**\n     * Create a StaticPositionModel for each poly\n     *\n     * If the last entry is the same as the first, remove it because the path will be closed automatically.\n     *\n     * @for AirspaceModel\n     * @method _buildPolyPositionModels\n     * @param polyList {array}\n     * @param airportPosition {StaticPositionModel}\n     * @param magneticNorth {number}\n     * @return polyPositionModels {array}\n     */\n    _buildPolyPositionModels(polyList, airportPosition, magneticNorth) {\n        const polyPositionModels = _map(polyList, (poly) => {\n            return new StaticPositionModel(poly, airportPosition, magneticNorth);\n        });\n\n        // TODO: Though its reusability is not real likely, this might as well be made into an external helper\n        // shape shouldn't fully close; will draw with 'cc.closepath()' so we remove the last item\n        const firstIndex = 0;\n        const lastIndex = polyPositionModels.length - 1;\n        const firstIndexRelativePosition = polyPositionModels[firstIndex].relativePosition;\n        const lastIndexRelativePosition = polyPositionModels[lastIndex].relativePosition;\n\n        if (_isEqual(firstIndexRelativePosition, lastIndexRelativePosition)) {\n            polyPositionModels.pop();\n        }\n\n        return polyPositionModels;\n    }\n}\n","import _isNil from 'lodash/isNil';\nimport _isNumber from 'lodash/isNumber';\nimport MapModel from './MapModel';\nimport BaseCollection from '../base/BaseCollection';\nimport StaticPositionModel from '../base/StaticPositionModel';\nimport { isEmptyOrNotArray } from '../utilities/validatorUtilities';\n\n/**\n * Collection of `MapModel`s available to be displayed on the scope\n *\n * Provides methods to create `MapModel`s, used by `AirportModel`\n * and to extract video map line data to be rendered by the\n * `CanvasController`\n *\n * @class MapCollection\n * @extends BaseCollection\n */\nexport default class MapCollection extends BaseCollection {\n    /**\n     * @constructor\n     * @param mapJson {object}\n     * @param defaultMaps {array<string>}\n     * @param airportPositionModel {StaticPositionModel}\n     * @param magneticNorth {number}\n     */\n    constructor(mapJson, defaultMaps, airportPositionModel, magneticNorth) {\n        super();\n\n        if (_isNil(mapJson) || _isNil(defaultMaps) || _isNil(airportPositionModel) || !_isNumber(magneticNorth)) {\n            throw new TypeError('Invalid parameter(s) passed to MapCollection constructor. ' +\n                'Expected mapJson, defaultMaps, airportPositionModel and magneticNorth to be defined, but received ' +\n                `${typeof mapJson}, ${typeof defaultMaps}, ${typeof airportPositionModel} and ${typeof magneticNorth}`);\n        }\n\n        if (isEmptyOrNotArray(mapJson)) {\n            throw new TypeError('Invalid mapJson passed to MapCollection constructor. ' +\n                `Expected a non-empty array, but received ${typeof mapJson}`);\n        }\n\n        if (isEmptyOrNotArray(defaultMaps)) {\n            throw new TypeError('Invalid defaultMaps passed to MapCollection constructor. ' +\n                `Expected a non-empty array, but received ${typeof defaultMaps}`);\n        }\n\n        if (!(airportPositionModel instanceof StaticPositionModel)) {\n            throw new TypeError('Invalid airportPositionModel passed to MapCollection constructor. ' +\n                `Expected instance of StaticPositionModel, but received ${typeof airportPositionModel}`);\n        }\n\n        /**\n         * @inherited\n         * @memberof BaseCollection\n         * @property _items\n         * @type {array<MapModel>}\n         * @default []\n         */\n\n        /**\n         * @inherited\n         * @memberof BaseCollection\n         * @property length\n         * @type {number}\n         * @default #_items.length\n         */\n\n        this._init(mapJson, defaultMaps, airportPositionModel, magneticNorth);\n    }\n\n    /**\n     * A flag indicating whether the `MapCollection` has any visible maps.\n     *\n     * @for MapCollection\n     * @property hasVisibleMaps\n     * @return {boolean}\n     */\n    get hasVisibleMaps() {\n        return this._items.some((map) => !map.isHidden);\n    }\n\n    /**\n     * Public fascade for `#_items`\n     *\n     * @for MapCollection\n     * @property maps\n     * @return {array<MapModel>}\n     */\n    get maps() {\n        return this._items;\n    }\n\n    // ------------------------------ LIFECYCLE ------------------------------\n\n    /**\n     * Initialize the instance\n     *\n     * @for MapCollection\n     * @method _init\n     * @param mapJson {object}\n     * @param defaultMaps {array<string>}\n     * @param airportPositionModel {StaticPositionModel}\n     * @param magneticNorth {number}\n     */\n    _init(mapJson, defaultMaps, airportPositionModel, magneticNorth) {\n        this._items = this._buildMapModels(mapJson, defaultMaps, airportPositionModel, magneticNorth);\n    }\n\n    // ------------------------------ PUBLIC ------------------------------\n\n    /**\n     * A list of all the map lines for the visible maps in the `MapCollection`\n     *\n     * @for MapCollection\n     * @method getVisibleMapLines\n     * @return {array<object>}\n     */\n    getVisibleMapLines() {\n        return this._items.reduce((sum, map) => {\n            if (map.isHidden) {\n                return sum;\n            }\n\n            return [\n                ...map.lines,\n                ...sum\n            ];\n        }, []);\n    }\n\n    /**\n     * A list of names of all the visible maps in the `MapCollection`\n     *\n     * @for MapCollection\n     * @method getVisibleMapNames\n     * @return {array<object>}\n     */\n    getVisibleMapNames() {\n        return this._items.reduce((sum, map) => {\n            if (map.isHidden) {\n                return sum;\n            }\n\n            return [\n                ...sum,\n                map.name\n            ];\n        }, []);\n    }\n\n    /**\n     * A list of all the `MapModel` names in the `MapCollection`\n     *\n     * @for MapCollection\n     * @method getMapNames\n     * @returns {array<string>}\n     */\n    getMapNames() {\n        return this._items.map((map) => map.name);\n    }\n\n    /**\n     * Sets which maps should be rendered on the `CanvasController`\n     *\n     * @for MapCollection\n     * @method setVisibleMaps\n     * @param names {array<string>}\n     */\n    setVisibleMaps(names) {\n        this._items.forEach((map) => {\n            map.isHidden = !names.includes(map.name);\n        });\n    }\n\n    // ------------------------------ PRIVATE ------------------------------\n\n    /**\n     * @for MapCollection\n     * @method _buildMapModels\n     * @param mapJson {object}\n     * @param defaultMaps {array<string>}\n     * @param airportPositionModel {StaticPositionModel}\n     * @param magneticNorth {number}\n     * @returns {array<MapModel>}\n     */\n    _buildMapModels(mapJson, defaultMaps, airportPositionModel, magneticNorth) {\n        return mapJson.map((item) => {\n            const map = new MapModel(item, airportPositionModel, magneticNorth);\n\n            map.isHidden = !defaultMaps.includes(map.name);\n\n            return map;\n        });\n    }\n}\n","import _isNil from 'lodash/isNil';\nimport _isNumber from 'lodash/isNumber';\nimport _isString from 'lodash/isString';\nimport BaseModel from '../base/BaseModel';\nimport DynamicPositionModel from '../base/DynamicPositionModel';\nimport StaticPositionModel from '../base/StaticPositionModel';\nimport {\n    isEmptyOrNotArray,\n    isEmptyOrNotObject\n} from '../utilities/validatorUtilities';\n\n/**\n * A video map item, containing a collection of map lines\n *\n * Defines a video map layer referenced by an `AirportModel` that\n * contains the map lines to be drawn by the `CanvasController`,\n * as well as a name describing the map contents and a flag\n * allowing rendering of the layer to be suppressed.\n *\n * @class MapModel\n */\nexport default class MapModel extends BaseModel {\n    /**\n     * @for MapModel\n     * @constructor\n     * @param map {object}\n     * @param airportPosition {StaticPositionModel}\n     * @param magneticNorth {number}\n     */\n    constructor(map, airportPosition, magneticNorth) {\n        super();\n\n        if (_isNil(map) || _isNil(airportPosition) || !_isNumber(magneticNorth)) {\n            throw new TypeError('Invalid parameter(s) passed to MapModel constructor. ' +\n                'Expected map, airportPosition and magneticNorth to be defined, ' +\n                `but received ${typeof map}, ${typeof airportPosition} and ${typeof magneticNorth}`);\n        }\n\n        if (isEmptyOrNotObject(map)) {\n            throw new TypeError('Invalid map passed to MapModel constructor. ' +\n                `Expected a non-empty object, but received ${typeof map}`);\n        }\n\n        if (!_isString(map.name)) {\n            throw new TypeError('Invalid map passed to MapModel constructor. ' +\n                `Expected map.name to be a string, but received ${typeof map.name}`);\n        }\n\n        if (isEmptyOrNotArray(map.lines)) {\n            throw new TypeError('Invalid map passed to MapModel constructor. ' +\n                `Expected map.lines to be a non-empty array, but received ${typeof map.lines}`);\n        }\n\n        if (!(airportPosition instanceof StaticPositionModel)) {\n            throw new TypeError('Invalid airportPosition passed to MapModel constructor. ' +\n                `Expected instance of StaticPositionModel, but received ${typeof airportPosition}`);\n        }\n\n        /**\n         * A flag indicating whether the layer should be hidden\n         *\n         * @for MapModel\n         * @property isHidden\n         * @type {boolean}\n         * @default false\n         */\n        this.isHidden = false;\n\n        /**\n         * List of lat/long coordinates pairs that define a line\n         *\n         * @for MapModel\n         * @property lines\n         * @type {array}\n         * @default []\n         */\n        this.lines = [];\n\n        /**\n         * Name of the map layer.\n         *\n         * @for MapModel\n         * @property name\n         * @type {string}\n         * @default ''\n         */\n        this.name = '';\n\n        return this._init(map, airportPosition, magneticNorth);\n    }\n\n    // ------------------------------ LIFECYCLE ------------------------------\n\n    /**\n     * Initialize the model\n     *\n     * @for MapModel\n     * @method _init\n     * @param map {object}\n     * @param airportPosition {StaticPositionModel}\n     * @param magneticNorth {number}\n     * @private\n     */\n    _init(map, airportPosition, magneticNorth) {\n        this.isHidden = map.isHidden === true;\n        this.name = map.name;\n\n        this._buildMapLines(map.lines, airportPosition, magneticNorth);\n\n        return this;\n    }\n\n    /**\n     * @for MapModel\n     * @method reset\n     */\n    reset() {\n        this.isHidden = false;\n        this.lines = [];\n        this.name = '';\n    }\n\n    // ------------------------------ PUBLIC ------------------------------\n\n    // ------------------------------ PRIVATE ------------------------------\n\n    /**\n     * Create the array of map lines\n     *\n     * @for MapModel\n     * @method _buildMapLines\n     * @param map {object}\n     * @param airportPosition {StaticPositionModel}\n     * @param magneticNorth {number}\n     * @private\n     */\n    _buildMapLines(lines, airportPosition, magneticNorth) {\n        this.lines = lines.map((line) => {\n            const airportPositionAndDeclination = [airportPosition, magneticNorth];\n            const lineStartCoordinates = [line[0], line[1]];\n            const lineEndCoordinates = [line[2], line[3]];\n            const startPosition = DynamicPositionModel.calculateRelativePosition(\n                lineStartCoordinates,\n                ...airportPositionAndDeclination\n            );\n            const endPosition = DynamicPositionModel.calculateRelativePosition(\n                lineEndCoordinates,\n                ...airportPositionAndDeclination\n            );\n\n            return [...startPosition, ...endPosition];\n        });\n    }\n}\n","import _find from 'lodash/find';\nimport _forEach from 'lodash/forEach';\nimport _isNil from 'lodash/isNil';\nimport BaseCollection from '../../base/BaseCollection';\nimport RunwayModel from './RunwayModel';\nimport RunwayRelationshipModel from './RunwayRelationshipModel';\nimport { isEmptyOrNotArray } from '../../utilities/validatorUtilities';\n\n/**\n * Collection of `RunwayModel`s\n *\n * Provides methods to reason about the various `RunwayModel`s belonging to an airport\n *\n * @class RunwayCollection\n * @extends BaseCollection\n */\nexport default class RunwayCollection extends BaseCollection {\n    /**\n     * @constructor\n     * @param runwayJson {array<object>}\n     * @param airportPositionModel {StaticPositionModel}\n     */\n    constructor(runwayJson, airportPositionModel) {\n        super();\n\n        if (_isNil(runwayJson) || _isNil(airportPositionModel)) {\n            throw new TypeError('Invalid parameter(s) passed to RunwayCollection constructor. ' +\n                'Expected runwayJson and airportPositionModel to be defined, ' +\n                `but received ${typeof runwayJson} and ${typeof airportPositionModel}`);\n        }\n\n        if (isEmptyOrNotArray(runwayJson)) {\n            throw new TypeError('Invalid runwayJson passed to RunwayCollection constructor. ' +\n                `Expected a non-empty array, but received ${typeof runwayJson}`);\n        }\n\n        /**\n         * @inherited\n         * @memberof BaseCollection\n         * @property _items\n         * @type {array<RunwayModel>}\n         * @default []\n         */\n\n        /**\n         * @inherited\n         * @memberof BaseCollection\n         * @property length\n         * @type {number}\n         * @default #_items.length\n         */\n\n        /**\n         * @property _airportPositionModel\n         * @type {StaticPositionModel}\n         * @default null\n         * @private\n         */\n        this._airportPositionModel = null;\n\n        /**\n         * Dictionary of all airport runways, organized by runway name, that\n         * contains a `RunwayRelationshipModel` for each runway\n         *\n         * @property _runwayRelationships\n         * @type object\n         * @default {}\n         * @private\n         */\n        this._runwayRelationships = {};\n\n        this._init(runwayJson, airportPositionModel);\n    }\n\n    /**\n     * Public fascade for `#_items`\n     *\n     * @property runways\n     * @return {array<RunwayModel>}\n     */\n    get runways() {\n        return this._items;\n    }\n\n    /**\n     * Initialize the instance\n     *\n     * @for RunwayCollection\n     * @method _init\n     * @param runwayJson {array<object>}\n     * @param airportPositionModel {StaticPositionModel}\n     */\n    _init(runwayJson, airportPositionModel) {\n        this._airportPositionModel = airportPositionModel;\n\n        this._buildRunwayModels(runwayJson);\n        this._buildRunwayRelationships();\n    }\n\n    /**\n     * Tear down the instance and destroy any instance property values\n     *\n     * @for RunwayCollection\n     * @method destroy\n     */\n    destroy() {\n        this._airportPositionModel = null;\n        this._runwayRelationships = {};\n    }\n\n    /**\n     * Based on the current wind, find the most appropriate runway for use\n     *\n     * Used to find a default runway\n     *\n     * @for findBestRunwayForWind\n     * @method findBestRunwayForWind\n     * @param getCurrentWindProps {function<object>}\n     * @return bestRunway {string}\n     */\n    findBestRunwayForWind(getCurrentWindProps) {\n        let bestRunway = '';\n        let bestRunwayHeadwind = -Infinity;\n        const headwind = {};\n        const wind = getCurrentWindProps();\n\n        for (let i = 0; i < this._items.length; i++) {\n            const runway = this._items[i];\n\n            headwind[runway.name] = Math.cos(runway.angle - wind.angle) * wind.speed;\n        }\n\n        for (const runway in headwind) {\n            if (headwind[runway] > bestRunwayHeadwind) {\n                bestRunway = runway;\n                bestRunwayHeadwind = headwind[runway];\n            }\n        }\n\n        return bestRunway;\n    }\n\n    /**\n     * Loop through all the `RunwayModel`s in the collection and\n     * call the `.removeAircraftFromQueue()` method on each.\n     *\n     * This is a catchall method used for cleanup\n     *\n     * This method is overkill and can likely be removed in\n     * the near future\n     *\n     * @for RunwayCollection\n     * @method removeAircraftFromAllRunwayQueues\n     */\n    removeAircraftFromAllRunwayQueues(aircraftId) {\n        for (let i = 0; i < this.length; i++) {\n            const runwayModel = this._items[i];\n\n            runwayModel.removeAircraftFromQueue(aircraftId);\n        }\n    }\n\n    /**\n     * @for RunwayCollection\n     * @method findRunwayModelByName\n     * @param\n     * @return {RunwayModel|null}\n     */\n    findRunwayModelByName(runwayName = '') {\n        return _find(this._items, { name: runwayName.toUpperCase() }) || null;\n    }\n\n    /**\n     * @for RunwayCollection\n     * @method getRunwayRelationshipForRunwayNames\n     * @param  primaryRunwayName {string}\n     * @param  comparatorRunwayName {string}\n     * @return {boolean}\n     */\n    getRunwayRelationshipForRunwayNames(primaryRunwayName, comparatorRunwayName) {\n        return this._runwayRelationships[primaryRunwayName.toUpperCase()][comparatorRunwayName.toUpperCase()];\n    }\n\n    /**\n     * Given two runway names, find if the runways are parallel\n     *\n     * @for RunwayCollection\n     * @method areRunwaysParallel\n     * @param  primaryRunwayName {string}\n     * @param  comparatorRunwayName {string}\n     * @return {boolean}\n     */\n    areRunwaysParallel(primaryRunwayName, comparatorRunwayName) {\n        const runwayRelationship = this.getRunwayRelationshipForRunwayNames(\n            primaryRunwayName,\n            comparatorRunwayName\n        );\n\n        return runwayRelationship.parallel;\n    }\n\n    /**\n     * @for RunwayCollection\n     * @method _buildRunwayModels\n     * @param runwayJson {array<object>}\n     */\n    _buildRunwayModels(runwayJson) {\n        _forEach(runwayJson, (runway) => {\n            this._addRunwayToCollection(new RunwayModel(runway, 0, this._airportPositionModel));\n            this._addRunwayToCollection(new RunwayModel(runway, 1, this._airportPositionModel));\n        });\n    }\n\n    /**\n     * @for RunwayCollection\n     * @method _addRunwayToCollection\n     * @param runwayModel {RunwayModel}\n     */\n    _addRunwayToCollection(runwayModel) {\n        this._items.push(runwayModel);\n    }\n\n    /**\n     * Build the `#_runwayRelationships` dictionary\n     *\n     * This method mutates `#_runwayRelationships`\n     *\n     * @for RunwayCollection\n     * @method _buildRunwayRelationships\n     */\n    _buildRunwayRelationships() {\n        for (let i = 0; i < this.length; i++) {\n            const primaryRunway = this._items[i];\n            // create subobject with primaryRunway name as the key\n            this._runwayRelationships[primaryRunway.name] = {};\n\n            this._buildRunwayRelationshipsForRunway(primaryRunway);\n        }\n    }\n\n    /**\n     * Create a `RunwayRelationshipModel` for each `runwayModel`.\n     *\n     * This method mutates `#_runwayRelationships`\n     *\n     * @method _buildRunwayRelationshipsForRunway\n     * @param runwayModel {runwayModel}\n     */\n    _buildRunwayRelationshipsForRunway(runwayModel) {\n        for (let i = 0; i < this.length; i++) {\n            const comparatorRunway = this._items[i];\n\n            if (runwayModel.name !== comparatorRunway.name) {\n                this._runwayRelationships[runwayModel.name][comparatorRunway.name] = new RunwayRelationshipModel(\n                    runwayModel,\n                    comparatorRunway\n                );\n            }\n        }\n    }\n}\n","import _ceil from 'lodash/ceil';\nimport _without from 'lodash/without';\nimport BaseModel from '../../base/BaseModel';\nimport StaticPositionModel from '../../base/StaticPositionModel';\nimport { PERFORMANCE } from '../../constants/aircraftConstants';\nimport { AIRPORT_CONSTANTS } from '../../constants/airportConstants';\nimport { INVALID_NUMBER } from '../../constants/globalConstants';\nimport {\n    angle_offset,\n    radians_normalize\n} from '../../math/circle';\nimport {\n    abs,\n    tan\n} from '../../math/core';\nimport {\n    calculateCrosswindAngle,\n    getOffset\n} from '../../math/flightMath';\nimport { radio_runway } from '../../utilities/radioUtilities';\nimport {\n    km,\n    km_ft,\n    nm,\n    degreesToRadians\n} from '../../utilities/unitConverters';\n\n/**\n * Describes a single runway at an airport\n *\n * @class RunwayModel\n * @extends BaseModel\n */\nexport default class RunwayModel extends BaseModel {\n    /**\n     * @for RunwayModel\n     * @constructor\n     * @param options {object}\n     * @param end {number}\n     * @param airportPositionModel {StaticPositionModel}\n     */\n    // istanbul ignore next\n    constructor(options = {}, end, airportPositionModel) {\n        super();\n\n        /**\n         * @property airportPositionModel\n         * @type {StaticPositionModel|null}\n         * @default null\n         */\n        this.airportPositionModel = null;\n\n        /**\n         * @property _positionModel\n         * @type {StaticPositionModel|null}\n         * @default null\n         * @private\n         */\n        this._positionModel = null;\n\n        /**\n         * Name of the runway\n         *\n         * @property name\n         * @type {string}\n         * @default ''\n         */\n        this.name = '';\n\n        /**\n         * Runway magnetic heading (from landing end to liftoff end), in radians\n         *\n         * @property angle\n         * @type {number}\n         * @default null\n         */\n        this.angle = -999;\n\n        /**\n         * @property delay\n         * @type {number}\n         * @default 2\n         */\n        this.delay = 2;\n\n        /**\n         * @property ils\n         * @type {object}\n         */\n        this.ils = {\n            enabled: true,\n            loc_maxDist: km(25),\n            // gs_maxHeight: 9999,\n            glideslopeGradient: degreesToRadians(3)\n        };\n\n        /**\n         * @property length\n         * @type\n         * @default\n         */\n        this.length = null;\n\n        /**\n         * @property sepFromAdjacent\n         * @type {number}\n         */\n        this.sepFromAdjacent = km(3);\n\n        /**\n         * Aircraft queue\n         *\n         * A list of aircraft that have taxied to the end of\n         * the runway and are waiting to takeoff\n         *\n         * @property queue\n         * @type {array<string>}\n         * @default []\n         */\n        this.queue = [];\n\n        /**\n         * The flight number of the last aircraft that used the runway for takeoff.\n         *\n         * @property lastDepartedAircraftModel\n         * @type {AircraftModel}\n         * @default null\n         */\n        this.lastDepartedAircraftModel = null;\n\n        this._init(options, end, airportPositionModel);\n    }\n\n    /**\n     * Reset the runway queue\n     *\n     * @for RunwayModel\n     * @method resetQueue\n     * @returns undefined\n     */\n    resetQueue() {\n        this.queue = [];\n        this.lastDepartedAircraftModel = null;\n    }\n\n    /**\n     * Fascade to access relative position\n     *\n     * @for RunwayModel\n     * @property relativePosition\n     * @type {array<number>} [kilometersNorth, kilometersEast]\n     */\n    get relativePosition() {\n        return this._positionModel.relativePosition;\n    }\n\n    /**\n     * Provide read-only public access to this._positionModel\n     *\n     * @for SpawnPatternModel\n     * @property positionModel\n     * @type {StaticPositionModel}\n     */\n    get positionModel() {\n        return this._positionModel;\n    }\n\n    /**\n     * Provide gps coordinates for the runway\n     *\n     * @for RunwayModel\n     * @property gps\n     * @type {array<number>} gps coordinates of the runway\n     */\n    get gps() {\n        return this._positionModel.gps;\n    }\n\n    /**\n     * @for RunwayModel\n     * @property elevation\n     * @type {number}\n     */\n    get elevation() {\n        return this._positionModel.elevation || this.airportPositionModel.elevation;\n    }\n\n    /**\n     * Reverse of runway magnetic heading, in radians\n     *\n     * @for RunwayModel\n     * @property oppositeAngle\n     * @type {number}\n     */\n    get oppositeAngle() {\n        return radians_normalize(this.angle + Math.PI);\n    }\n\n    /**\n     * @for RunwayModel\n     * @method _init\n     * @param data\n     * @param end\n     * @param airportPositionModel {AirportModel}\n     */\n    _init(data, end, airportPositionModel) {\n        this.airportPositionModel = airportPositionModel;\n        this.name = data.name[end];\n\n        // TODO: deprecate\n        if (data.delay) {\n            this.delay = data.delay[end];\n        }\n\n        if (data.end) {\n            const farSideIndex = end === 0 ?\n                1 :\n                0;\n\n            const thisSide = new StaticPositionModel(\n                data.end[end],\n                this.airportPositionModel,\n                this.airportPositionModel.magneticNorth\n            );\n            const farSide = new StaticPositionModel(\n                data.end[farSideIndex],\n                this.airportPositionModel,\n                this.airportPositionModel.magneticNorth\n            );\n\n            // relative position, based on center of map\n            this._positionModel = thisSide;\n            this.length = km(thisSide.distanceToPosition(farSide));\n            this.angle = thisSide.bearingToPosition(farSide);\n        }\n\n        if (data.ils) {\n            this.ils.enabled = data.ils[end];\n        }\n\n        if (data.ils_distance) {\n            this.ils.loc_maxDist = km(data.ils_distance[end]);\n        }\n\n        if (data.glideslope) {\n            this.ils.glideslopeGradient = degreesToRadians(data.glideslope[end]);\n        }\n\n        // TODO: neither property is defined in any airport json files\n        // if (data.ils_gs_maxHeight) {\n        //     this.ils.gs_maxHeight = data.ils_gs_maxHeight[end];\n        // }\n        //\n        // if (data.sepFromAdjacent) {\n        //     this.sepFromAdjacent = km(data.sepFromAdjacent[end]);\n        // }\n    }\n\n    /**\n    * Calculate the height of the glideslope for a runway's ILS at a given distance on final\n    *\n    * @for RunwayModel\n    * @method getGlideslopeAltitude\n    * @param distance {number}                       distance from the runway threshold, in kilometers\n    * @param glideslopeGradient {number} [optional]  gradient of the glideslope in radians\n    *                                                (typically equivalent to 3.0 degrees)\n    * @return {number}\n    */\n    getGlideslopeAltitude(distance, glideslopeGradient) {\n        if (!glideslopeGradient) {\n            glideslopeGradient = this.ils.glideslopeGradient;\n        }\n\n        distance = Math.max(0, distance);\n        const rise = tan(abs(glideslopeGradient));\n\n        // TODO: this logic could be abstracted to a helper.\n        return this.elevation + (rise * km_ft(distance));\n    }\n\n    /**\n     * Calculate the height of the glideslope at (or abeam) the final approach fix\n     *\n     * @for RunwayModel\n     * @method getGlideslopeAltitudeAtFinalApproachFix\n     * @return {number} glideslope altitude in ft MSL\n     */\n    getGlideslopeAltitudeAtFinalApproachFix() {\n        return this.getGlideslopeAltitude(km(AIRPORT_CONSTANTS.FINAL_APPROACH_FIX_DISTANCE_NM));\n    }\n\n    /**\n     * Calculate the height of the lowest 100-ft-increment altitude which is along the glideslope and beyond the FAF\n     *\n     * @for RunwayModel\n     * @method getMinimumGlideslopeInterceptAltitude\n     * @return {number} glideslope altitude in ft MSL\n     */\n    getMinimumGlideslopeInterceptAltitude() {\n        const altitudeAtFinalApproachFix = this.getGlideslopeAltitudeAtFinalApproachFix();\n        const minimumInterceptAltitude = _ceil(altitudeAtFinalApproachFix, -2);\n\n        return minimumInterceptAltitude;\n    }\n\n    /**\n     * Return the spoken name of the runway, spelled out into words\n     *\n     * Ex: \"two six left\"\n     *\n     * @for RunwayModel\n     * @method getRadioName\n     * @return {string}\n     */\n    getRadioName() {\n        return radio_runway(this.name);\n    }\n\n    /**\n     * Adds the specified aircraft to the runway queue\n     *\n     * @for RunwayModel\n     * @method addAircraftToQueue\n     * @param aircraftId {string}\n     */\n    addAircraftToQueue(aircraftId) {\n        this.queue.push(aircraftId);\n    }\n\n    /**\n     * Remove the specified aircraft from the runway queue\n     *\n     * @for RunwayModel\n     * @method removeAircraftFromQueue\n     * @param aircraftId {string}\n     */\n    removeAircraftFromQueue(aircraftId) {\n        this.queue = _without(this.queue, aircraftId);\n    }\n\n    /**\n     * Boolean helper used to determine if a specific aircraft instance is currently in the queue\n     *\n     * @for RunwayModel\n     * @method isAircraftInQueue\n     * @param aircraftId {string}\n     * @return {boolean}\n     */\n    isAircraftInQueue(aircraftId) {\n        return this.getAircraftQueuePosition(aircraftId) !== INVALID_NUMBER;\n    }\n\n    /**\n     * Returns whether the specified aircraft is the first still waiting for takeoff clearance\n     *\n     * @for RunwayModel\n     * @method isAircraftNextInQueue\n     * @param  aircraftId {string}\n     * @return {boolean}\n     */\n    isAircraftNextInQueue(aircraftId) {\n        return this.getAircraftQueuePosition(aircraftId) === 0;\n    }\n\n    /**\n     * Returns the position of a specified aircraft in the runway's queue\n     *\n     * @for RunwayModel\n     * @method getAircraftQueuePosition\n     * @param  aircraftId {string}\n     * @return {number}\n     */\n    getAircraftQueuePosition(aircraftId) {\n        return this.queue.indexOf(aircraftId);\n    }\n\n    /**\n     * Wrapper for `calculateCrosswindAngleForRunway()` where an implementor needs only the `windAngle`\n     * to calculate the crosswind angle\n     *\n     * @for RunwayModel\n     * @method calculateCrosswindAngleForRunway\n     * @param windAngle {number}\n     * @return {number}  in radians\n     */\n    calculateCrosswindAngleForRunway(windAngle) {\n        return calculateCrosswindAngle(this.angle, windAngle);\n    }\n\n    /**\n     * Boolean helper used to determine if an aircraftModel is on an approach course\n     *\n     * @for RunwayModel\n     * @method isOnApproachCourse\n     * @return {boolean}\n     */\n    isOnApproachCourse(aircraftModel) {\n        const approachOffset = getOffset(aircraftModel, this.relativePosition, this.angle);\n        const lateralDistanceFromCourse_nm = abs(nm(approachOffset[0]));\n        const isAlignedWithCourse = lateralDistanceFromCourse_nm <= PERFORMANCE.MAXIMUM_DISTANCE_CONSIDERED_ESTABLISHED_ON_APPROACH_COURSE_NM;\n        const isNotPastRunwayThreshold = approachOffset[1] > 0;\n\n        return isAlignedWithCourse && isNotPastRunwayThreshold;\n    }\n\n    /**\n     * Boolean helper used to determine if an aircraftModel is on the correct approach heading.\n     *\n     * @for RunwayModel\n     * @method isOnCorrectApproachGroundTrack\n     * @param  aircraftGroundTrack {number}\n     * @return {boolean}\n     */\n    isOnCorrectApproachGroundTrack(aircraftGroundTrack) {\n        const angle_diff = abs(angle_offset(aircraftGroundTrack, this.angle));\n\n        return angle_diff < PERFORMANCE.MAXIMUM_ANGLE_CONSIDERED_ESTABLISHED_ON_APPROACH_COURSE;\n    }\n}\n","import _uniqueId from 'lodash/uniqueId';\nimport {\n    km_ft,\n    km,\n    degreesToRadians\n} from '../../utilities/unitConverters';\nimport { abs } from '../../math/core';\nimport { angle_offset } from '../../math/circle';\nimport { getOffset } from '../../math/flightMath';\nimport { raysIntersect } from '../../math/vector';\nimport { SEPARATION } from '../../constants/aircraftConstants';\n\n/**\n * Describes a relationship between two `RunwayModel`s\n *\n * @class RunwayRelationshipModel\n */\nexport default class RunwayRelationshipModel {\n    /**\n     *\n     * @constructor\n     * @param primaryRunway {RuwnayModel}\n     * @param comparatorRunway {RunwayModel}\n     */\n    constructor(primaryRunway, comparatorRunway) {\n        if (!primaryRunway || !comparatorRunway) {\n            throw new TypeError('Invalid parameters. RunwayRelationshipModel requires two RunwayModel instances');\n        }\n\n        /**\n         * @property _id\n         * @type {string}\n         * @private\n         */\n        this._id = _uniqueId('runwayRelationshipModel-');\n\n        /**\n         * @property lateral_dist\n         * @type {number}\n         * @default -999\n         */\n        this.lateral_dist = -999;\n\n        /**\n         * @property straight_dist\n         * @type {number}\n         * @default -999\n         */\n        this.straight_dist = -999;\n\n        /**\n         * @property converging\n         * @type {boolean}\n         * @default false\n         */\n        this.converging = false;\n\n        /**\n         * @property parallel\n         * @type {boolean}\n         * @default false\n         */\n        this.parallel = false;\n\n        /**\n         * @property separationMinimum\n         * @type {number}\n         * @default -999\n         */\n        this.separationMinimum = -999;\n\n        this.calculateRelationshipValues(primaryRunway, comparatorRunway);\n    }\n\n    /**\n     * Calculate relationship values for each runway pair\n     *\n     * @for RunwayRelationshipModel\n     * @method calculateRelationshipValues\n     * @param primaryRunway {RuwnayModel}\n     * @param comparatorRunway {RunwayModel}\n     */\n    calculateRelationshipValues(primaryRunway, comparatorRunway) {\n        const offset = getOffset(primaryRunway, comparatorRunway.relativePosition, primaryRunway.angle);\n\n        this.lateral_dist = abs(offset[0]);\n        this.straight_dist = abs(offset[2]);\n        this.converging = raysIntersect(\n            primaryRunway.relativePosition,\n            primaryRunway.angle,\n            comparatorRunway.relativePosition,\n            comparatorRunway.angle\n        );\n        this.parallel = abs(angle_offset(primaryRunway.angle, comparatorRunway.angle)) < degreesToRadians(10);\n        this.separationMinimum = this.calculateSeparationMinimums();\n    }\n\n    /**\n     * Determine applicable lateral separation minima for conducting\n     * parallel simultaneous dependent approaches on these runways:\n     *\n     * Note: This does not take into account the (more complicated)\n     * rules for dual/triple simultaneous parallel dependent approaches as\n     * outlined by FAA JO 7110.65, para 5-9-7. Users playing at any of our\n     * airports that have triple parallels may be able to \"get away with\"\n     * the less restrictive rules, whilst their traffic may not be 100%\n     * legal. It's just complicated and not currently worthwhile to add\n     * rules for running trips at this point... maybe later. -@erikquinn\n     * Reference: FAA JO 7110.65, section 5-9-6\n     *\n     * @for RunwayRelationshipModel\n     * @method calculateSeparationMinimums\n     * @return applicableLatSepMin {number}\n     */\n    calculateSeparationMinimums() {\n        let applicableLatSepMin = SEPARATION.STANDARD_LATERAL_KM; // 3.0nm\n        const runwaySeparationDistanceFeet = km_ft(this.lateral_dist);\n\n        if (runwaySeparationDistanceFeet >= 2500 && runwaySeparationDistanceFeet <= 3600) {\n            // 2500'-3600'\n            applicableLatSepMin = km(1); // 1.852km\n        } else if (runwaySeparationDistanceFeet > 3600 && runwaySeparationDistanceFeet <= 8300) {\n            // 3601'-8300'\n            applicableLatSepMin = km(1.5); // 2.778km\n        } else if (runwaySeparationDistanceFeet > 8300 && runwaySeparationDistanceFeet <= 9000) {\n            // 8301'-9000'\n            applicableLatSepMin = km(2); // 3.704km\n        }\n\n        return applicableLatSepMin;\n    }\n\n    /**\n     * @for RunwayRelationshipModel\n     * @method destroy\n     */\n    destroy() {\n        this.lateral_dist = -999;\n        this.straight_dist = -999;\n        this.converging = false;\n        this.parallel = false;\n        this.separationMinimum = -999;\n    }\n}\n","import { SELECTORS } from '../constants/selectors';\n\n/**\n * Display information about the active airport\n *\n * Part of the build includes copying and converting source\n * documents to html. This is retrieved via ajax request and\n * stored in memory until needed\n *\n * _Original documentation can be found in `documentation/airport-guides`_\n *\n * @class AirportGuideView\n */\nexport default class AirportGuideView {\n    /**\n     * @constructor\n     * @param {JQuery|HTMLElement} $element\n     * @param {string} data  html string generated from airport-guide markdown\n     */\n    constructor($element, data) {\n        /**\n         * Local instance of the airport guide data\n         *\n         * @property _airportGuideMarkup\n         * @type {string}\n         * @private\n         */\n        this._airportGuideMarkup = data;\n\n        /**\n         * The HTML containing the data itself\n         *\n         * @property _$airportGuideView\n         * @type {JQuery|HTMLElement}\n         * @private\n         */\n        this._$airportGuideView = null;\n\n        /**\n         * The HTML view container of the data (formatted)\n         *\n         * @property _$element\n         * @type {JQuery|HTMLElement}\n         * @default null\n         * @private\n         */\n        this._$element = null;\n\n        return this.init($element);\n    }\n\n    // ------------------------------ LIFECYCLE ------------------------------\n\n    /**\n     * Initialize the instance\n     *\n     * @for AirportGuideView\n     * @method init\n     * @chainable\n     */\n    init($element) {\n        this._createChildren($element);\n        this.update(this._airportGuideMarkup);\n\n        return this;\n    }\n\n    /**\n     * Reset the instance\n     *\n     * @for AirportGuideView\n     * @method reset\n     * @chainable\n     */\n    reset() {\n        this._airportGuideMarkup = null;\n        this._$airportGuideView = null;\n        this._$element = null;\n\n        return this;\n    }\n\n    /**\n     * Create child elements\n     *\n     * Should be run only once on instantiation\n     *\n     * @for AirportGuideView\n     * @method _createChildren\n     * @param {JQuery|HTMLElement} $element\n     * @private\n     * @chainable\n     */\n    _createChildren($element) {\n        this._$element = $element.find(SELECTORS.DOM_SELECTORS.AIRPORT_GUIDE_CONTAINER);\n        this._$airportGuideView = this._$element.find(SELECTORS.DOM_SELECTORS.AIRPORT_GUIDE_VIEW);\n\n        return this;\n    }\n\n    // ------------------------------ PUBLIC ------------------------------\n\n    /**\n     * Updates the text in the view.\n     * Should be run by the controller on airport change.\n     *\n     * @for AirportGuideView\n     * @method update\n     * @param {string} nextAirportMarkup\n     */\n    update(nextAirportMarkup) {\n        this._airportGuideMarkup = nextAirportMarkup;\n\n        this._$airportGuideView.html(this._airportGuideMarkup);\n    }\n\n    /**\n     * Toggles visibility of the airport guide modal\n     *\n     * This method should only be called by the `AirportGuideController`\n     *\n     * @for AirportGuideView\n     * @method toggleView\n     */\n    toggleView() {\n        this._$element.toggleClass(SELECTORS.CLASSNAMES.OPEN);\n    }\n}\n","import _has from 'lodash/has';\nimport EventBus from '../lib/EventBus';\nimport AirportGuideView from './AirportGuideView';\nimport { EVENT } from '../constants/eventNames';\n\n/**\n * Controls airportGuide view\n *\n * Responsible for maintaining a dictionary of `{[icao: string] html string}`\n * where each key is an airport icao with an html string as a value.\n * This markup is generated during the build from source markdown files\n *\n * @class AirportGuideViewController\n */\nexport default class AirportGuideViewController {\n    /**\n     * @constructor\n     * @param {JQuery|HTMLElement} $element\n     * @param {object} airportGuideData  dictionary of airport icao and html string\n     * @param {string} initialIcao  airport used during startup of the app\n     */\n    constructor($element, airportGuideData, initialIcao) {\n        /**\n         * View instance model\n         *\n         * Used to show, hide, update the airportGuide view\n         *\n         * @property _airportGuideView\n         * @type {AirportGuideView}\n         * @default null\n         * @private\n         */\n        this._airportGuideView = null;\n\n        /**\n         * Root DOM element\n         *\n         * @property _$element\n         * @type {JQuery|HTMLElement}\n         * @default null\n         * @private\n         */\n        this._$element = null;\n\n        /**\n         * Local reference to the EventBus\n         *\n         * @property _eventBus\n         * @type {EventBus}\n         * @private\n         */\n        this._eventBus = null;\n\n        /**\n         * Contains an object with keys of icao idents and values\n         * of the airport guides from the documentation folder.\n         *\n         * @property _guideData\n         * @type {object<string, string>}\n         * @private\n         */\n        this._guideData = airportGuideData;\n\n        /**\n         * The ICAO of the initial airport.\n         *\n         * @property _initialIcao\n         * @type {string}\n         * @private\n         */\n        this._initialIcao = initialIcao.toLowerCase();\n\n        return this.init($element);\n    }\n\n    // ------------------------------ LIFECYCLE ------------------------------\n\n    /**\n     * Enable handlers\n     *\n     * @for airportGuideViewController\n     * @method enable\n     * @chainable\n     */\n    enable() {\n        this._eventBus.on(EVENT.AIRPORT_CHANGE, this._onAirportChangeHandler);\n        this._eventBus.on(EVENT.TOGGLE_AIRPORT_GUIDE, this._onToggleViewHandler);\n\n        return this;\n    }\n\n    /**\n     * Disable handlers\n     *\n     * @for airportGuideViewController\n     * @method disable\n     * @chainable\n     */\n    disable() {\n        this._eventBus.off(EVENT.AIRPORT_CHANGE, this._onAirportChangeHandler);\n        this._eventBus.off(EVENT.TOGGLE_AIRPORT_GUIDE, this._onToggleViewHandler);\n\n        return this;\n    }\n\n    /**\n     * Initialize the instance\n     *\n     * Should only be run once on instantiation\n     *\n     * @for airportGuideViewController\n     * @method init\n     * @chainable\n     */\n    init($element) {\n        this._eventBus = EventBus;\n\n        this._initAirportGuideView($element);\n        this._setupHandlers();\n        this.enable();\n\n        return this;\n    }\n\n    /**\n     * Reset the instance\n     *\n     * @for airportGuideViewController\n     * @method reset\n     * @chainable\n     */\n    reset() {\n        this._resetHandlers();\n\n        this._eventBus = null;\n        this._$element = null;\n        this._initialIcao = null;\n        this._airportGuideView = null;\n        this._guideData = null;\n\n        return this;\n    }\n\n    /**\n     * Initialize the `AirportGuideView` instance\n     *\n     * @for AirportGuideViewController\n     * @method _initAirportGuideView\n     * @param {Jquery Element} $element\n     * @chainable\n     * @private\n     */\n    _initAirportGuideView($element) {\n        const activeAirportGuide = this.getAirportGuide(this._initialIcao);\n        this._airportGuideView = new AirportGuideView($element, activeAirportGuide);\n\n        return this;\n    }\n\n    /**\n     * Bind method handlers\n     *\n     * Should only be run once on instantiation\n     *\n     * @for airportGuideViewController\n     * @method _setupHandlers\n     * @chainable\n     */\n    _setupHandlers() {\n        this._onAirportChangeHandler = this._onAirportChange.bind(this);\n        this._onToggleViewHandler = this._onToggleView.bind(this);\n\n        return this;\n    }\n\n    /**\n     * Reset method handlers\n     *\n     * Should only be run once on instantiation\n     *\n     * @for airportGuideViewController\n     * @method _resetHandlers\n     * @chainable\n     */\n    _resetHandlers() {\n        this._onAirportChangeHandler = null;\n        this._onToggleViewHandler = null;\n\n        return this;\n    }\n\n    // ------------------------------ PUBLIC ------------------------------\n\n    /**\n     * Main getter method for an airport guide, identified by ICAO\n     *\n     * @for AirportGuideViewController\n     * @method getAirportGuide\n     * @param {string} nextIcao\n     * @returns {string} - the requested guide\n     */\n    getAirportGuide(nextIcao) {\n        const guideExists = this.hasAirportGuide(nextIcao);\n\n        if (!guideExists) {\n            nextIcao = 'not_found';\n        }\n\n        return this._guideData[nextIcao];\n    }\n\n    /**\n     * Returns whether or not an airport guide\n     * exists for the given airport\n     *\n     * @for AirportGuideViewController\n     * @method hasAirportGuide\n     * @param {string} icao\n     * @returns {Boolean} whether a guide was found\n     */\n    hasAirportGuide(icao) {\n        return _has(this._guideData, icao);\n    }\n\n    // ------------------------------ PRIVATE ------------------------------\n\n    /**\n     * Event handler for when an airport is changed.\n     *\n     * @for AirportGuideViewController\n     * @method _onAirportChange\n     * @param {object} nextAirportJson\n     * @private\n     */\n    _onAirportChange(nextAirportJson) {\n        const nextIcao = nextAirportJson.icao.toLowerCase();\n        const airportGuideMarkupString = this.getAirportGuide(nextIcao);\n\n        this._airportGuideView.update(airportGuideMarkupString);\n    }\n\n    /**\n     * Event handler for toggling visibility of the airport guide view\n     *\n     * @for airportGuideViewController\n     * @method _onToggleView\n     * @param event {JQueryEventObject}\n     * @private\n     */\n    _onToggleView() {\n        this._airportGuideView.toggleView();\n    }\n}\n","import _uniqueId from 'lodash/uniqueId';\n\n/**\n * Base class from which a collection type class can inherit from.\n *\n * This class is meant to be extended and should never be used directly.\n *\n * @class BaseCollection\n */\nexport default class BaseCollection {\n    /**\n     * @constructor\n     * @for BaseCollection\n     */\n    constructor() {\n        /**\n         * Unigue string id that can be used to differentiate this model instance from another.\n         *\n         * @property _id\n         * @type {string}\n         * @private\n         */\n        this._id = _uniqueId();\n\n        /**\n         * @property _items\n         * @type {array}\n         * @default []\n         * @private\n         */\n        this._items = [];\n    }\n\n    /**\n     * Current length of the collection\n     *\n     * @property length\n     * @return {number}\n     */\n    get length() {\n        return this._items.length;\n    }\n\n    /**\n     * Initialize the model properties. Should be run on instantiation and, though not desired,\n     * could be run multiple times after instantiation.\n     *\n     * This method may be called by the constructor or from a public fascade.\n     *\n     * @for BaseCollection\n     * @method _init\n     * @private\n     */\n    _init() {\n        throw new TypeError('BaseCollection#_init has not been implemented by the extending class');\n    }\n\n    /**\n     * Destory the current instance.\n     *\n     * When implemented by the inheriting class, this method should un-set all instance properties\n     * and remove any handlers.\n     *\n     * @for BaseCollection\n     * @method destroy\n     */\n    destroy() {\n        throw new TypeError('BaseCollection#destroy has not been implemented by the extending class');\n    }\n\n    // TODO: add additional common collection method\n    // reset()\n    // addItems()\n    // addItem()\n    // removeItem()\n}\n","import _uniqueId from 'lodash/uniqueId';\nimport _isString from 'lodash/isString';\n\n/**\n * Base class for all Model objects to inherit from.\n *\n * This class is meant to be extended and should never be used directly.\n *\n * @class BaseModel\n */\nexport default class BaseModel {\n    constructor(modelName = 'BaseModel') {\n        const optionalIdPrefix = this._buildIdPrefix(modelName);\n\n        /**\n         * Unigue string id that can be used to differentiate this model instance from another.\n         *\n         * @property _id\n         * @type {string}\n         * @private\n         */\n        this._id = _uniqueId(optionalIdPrefix);\n    }\n\n    /**\n     * Initialize the model properties. Should be run on instantiation and, though not desired,\n     * could be run multiple times after instantiation.\n     *\n     * This method may be called by the constructor or from a public fascade.\n     *\n     * @for BaseModel\n     * @method _init\n     * @private\n     */\n    _init() {\n        throw new TypeError('BaseModel#_init method must be implemented by the class extending BaseModel');\n    }\n\n    /**\n     * Destory the current instance.\n     *\n     * When implemented by the inheriting class, this method should un-set all instance properties\n     * and remove any handlers.\n     *\n     * @for BaseModel\n     * @method reset\n     */\n    reset() {\n        throw new TypeError('BaseModel#reset method must be implemented by the class extending BaseModel');\n    }\n\n    /**\n     * This will verify if the given argument is a string otherwise it will return 'Base Model'\n     *\n     * @for BaseModel\n     * @method veriftyModelName\n     * @param {string}\n     * @private\n     */\n    _buildIdPrefix(modelName) {\n        if (!_isString(modelName)) {\n            throw new TypeError('BaseModel#constructor expects a string for its first parameter but a string was not given');\n        }\n\n        // Default option since it is an optional parameter\n        return `${modelName}-`;\n    }\n}\n","import _isNumber from 'lodash/isNumber';\nimport _uniqueId from 'lodash/uniqueId';\nimport {\n    adjustForMagneticNorth,\n    calculateDistanceToPointForX,\n    calculateDistanceToPointForY,\n    isValidGpsCoordinatePair\n} from './positionModelHelpers';\nimport { radians_normalize } from '../math/circle';\nimport {\n    degreesToRadians,\n    nm,\n    parseCoordinate,\n    parseElevation,\n    radiansToDegrees\n} from '../utilities/unitConverters';\nimport { PHYSICS_CONSTANTS } from '../constants/globalConstants';\nimport {\n    DEFAULT_SCREEN_POSITION,\n    GPS_COORDINATE_INDEX,\n    RELATIVE_POSITION_OFFSET_INDEX\n} from '../constants/positionConstants';\nimport {\n    vlen,\n    vradial\n} from '../math/vector';\n\n/**\n * @class Position\n */\nexport default class DynamicPositionModel {\n    /**\n     * Coordinates may contain an optional elevation as a third element.\n     * It must be suffixed by either 'ft' or 'm' to indicate the units.\n     *\n     * Latitude and Longitude numbers may be one of the following forms:\n     *   Decimal degrees - `47.112388112`\n     *   Decimal degrees - `'N47.112388112'`\n     *   Decimal minutes - `'N38d38.109808'`\n     *   Decimal seconds - `'N58d27m12.138'`\n     *\n     * @for DynamicPositionModel\n     * @constructor\n     * @param coordinates {array<string|number>}    array in shape of [latitude, longitude]\n     * @param reference {StaticPositionModel}       position to use for calculating relative position\n     * @param magnetic_north {number}               magnetic declination (variation), in radians east\n     */\n    constructor(coordinates = [], reference = null, magnetic_north = 0) {\n        if (!isValidGpsCoordinatePair(coordinates)) {\n            throw new TypeError('Invalid coordinates passed to DynamicPositionModel. Expected shape of ' +\n                `\"[latitude, longitude]\" but received \"${coordinates}\"`);\n        }\n\n        /**\n         * @property _id\n         * @type {string}\n         */\n        this._id = _uniqueId('position-model-');\n\n        /**\n         * Latitudinal coordinate, in degrees\n         *\n         * @property latitude\n         * @type {number}\n         * @default 0\n         */\n        this.latitude = 0;\n\n        /**\n         * Longitudinal coordinate, in degrees\n         *\n         * @property longitude\n         * @type {number}\n         * @default 0\n         */\n        this.longitude = 0;\n\n        /**\n         * Altitude of this position, above MSL (mean sea level), in feet\n         *\n         * @property elevation\n         * @type {number}\n         * @default 0\n         */\n        this.elevation = 0;\n\n        /**\n         * PositionModel this position is magnetically rotated in reference to\n         *\n         * @property _referencePosition\n         * @type {DynamicPositionModel|null}\n         */\n        this._referencePosition = reference;\n\n        /**\n         * Magnetic declination, in radians east\n         *\n         * @property _magneticNorth\n         * @type {number}\n         */\n        this._magneticNorth = magnetic_north;\n\n        this.init(coordinates);\n    }\n\n    /**\n     * GPS coordinates in [latitude, longitude] order\n     * For reverse order, see `DynamicPositionModel.gpsXY`\n     *\n     * @property gps\n     * @return {array}\n     */\n    get gps() {\n        return [\n            this.latitude,\n            this.longitude\n        ];\n    }\n\n    /**\n     * GPS coordinates in [x,y] order\n     * For reverse order, see `DynamicPositionModel.gps`\n     *\n     * @property gpsXY\n     * @return {array}\n     */\n    get gpsXY() {\n        return [\n            this.longitude,\n            this.latitude\n        ];\n    }\n\n    /**\n     * @for DynamicPositionModel\n     * @property magneticNorth\n     * @return {number}\n     */\n    get magneticNorth() {\n        return this._magneticNorth;\n    }\n\n    /**\n     * Relative position, in km offset from the airport\n     *\n     * @property relativePosition\n     * @return {array}\n     */\n    get relativePosition() {\n        return this._calculateRelativePosition();\n    }\n\n    /**\n     * Kilometers east (magnetic) of the reference position\n     *\n     * @for DynamicPositionModel\n     * @property x\n     * @type {number}\n     */\n    get x() {\n        return this.relativePosition[RELATIVE_POSITION_OFFSET_INDEX.LONGITUDINAL];\n    }\n\n    /**\n     * Kilometers north (magnetic) of the reference position\n     *\n     * @for DynamicPositionModel\n     * @property y\n     * @type {number}\n     */\n    get y() {\n        return this.relativePosition[RELATIVE_POSITION_OFFSET_INDEX.LATITUDINAL];\n    }\n\n    /**\n     * @for DynamicPositionModel\n     * @method init\n     */\n    init(coordinates) {\n        this.latitude = parseCoordinate(coordinates[GPS_COORDINATE_INDEX.LATITUDE]);\n        this.longitude = parseCoordinate(coordinates[GPS_COORDINATE_INDEX.LONGITUDE]);\n\n        // TODO: this is using coersion and shoudld be updated to be more explicit\n        if (coordinates[GPS_COORDINATE_INDEX.ELEVATION] != null) {\n            this.elevation = parseElevation(coordinates[GPS_COORDINATE_INDEX.ELEVATION]);\n        }\n    }\n\n    /**\n     * Calculate the initial magnetic bearing from a given position to the position of `this`\n     *\n     * @for DynamicPositionModel\n     * @method bearingFromPosition\n     * @param position {DynamicPositionModel|StaticPositionModel} position we're comparing against\n     * @return {Number} magnetic bearing from `position` to `this`, in radians\n     */\n    bearingFromPosition(position) {\n        return position.bearingToPosition(this);\n    }\n\n    /**\n     * Calculate the initial magnetic bearing to a given position from the position of `this`\n     * Note: This method uses great circle math to determine the bearing. It is very accurate, but\n     * also a very expensive operation. If the precision is not needed, a vradial(vsub()) of the\n     * x/y positions is a more \"quick and dirty\" option.\n     *\n     * Source: Chris Veness, Movable Type Scripts\n     * Subject: \"Bearing\"\n     * Link: http://www.movable-type.co.uk/scripts/latlong.html\n     *\n     * @for DynamicPositionModel\n     * @method bearingToPosition\n     * @param position {DynamicPositionModel|StaticPositionModel} position we're comparing against\n     * @return {Number} magnetic bearing from `this` to `position`, in radians\n     */\n    bearingToPosition(position) {\n        const φ1 = degreesToRadians(this.latitude);\n        const φ2 = degreesToRadians(position.latitude);\n        const Δλ = degreesToRadians(position.longitude - this.longitude);\n        const y = Math.sin(Δλ) * Math.cos(φ2);\n        const x = Math.cos(φ1) * Math.sin(φ2) - Math.sin(φ1) * Math.cos(φ2) * Math.cos(Δλ);\n        const θ = Math.atan2(y, x);\n\n        return radians_normalize(θ - this._magneticNorth);\n    }\n\n    /**\n     * Get the distance from `this` to a given position\n     *\n     * @for DynamicPositionModel\n     * @method distanceToPosition\n     * @param position {DynamicPositionModel|StaticPositionModel} position we're comparing against\n     * @return {number} distance to `position`, in nautical miles\n     */\n    distanceToPosition(position) {\n        const R = PHYSICS_CONSTANTS.EARTH_RADIUS_NM;\n        const φ1 = degreesToRadians(this.latitude);\n        const φ2 = degreesToRadians(position.latitude);\n        const Δφ = degreesToRadians(position.latitude - this.latitude);\n        const Δλ = degreesToRadians(position.longitude - this.longitude);\n        const a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) +\n                Math.cos(φ1) * Math.cos(φ2) *\n                Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\n        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n        const d = R * c;\n\n        return d;\n    }\n\n    /**\n     * Returns a new `DynamicPositionModel` a given magnetic bearing/distance from `this`\n     *\n     * @for DynamicPositionModel\n     * @method generateDynamicPositionFromBearingAndDistance\n     * @param bearing {number} magnetic bearing, in radians\n     * @param distance {number} distance, in nautical miles\n     * @return {DynamicPositionModel}\n     */\n    generateDynamicPositionFromBearingAndDistance(bearing, distance) {\n        const [lat, lon] = this.generateCoordinatesFromBearingAndDistance(bearing, distance);\n        const dynamicPositionModel = new DynamicPositionModel([lat, lon], this._referencePosition, this._magneticNorth);\n\n        return dynamicPositionModel;\n    }\n\n    /**\n     * Returns the GPS coordinate pair a given magnetic bearing/distance from `this`\n     *\n     * Source: Chris Veness, Movable Type Scripts\n     * Subject: \"Destination point given distance and bearing from start point\"\n     * Link: http://www.movable-type.co.uk/scripts/latlong.html\n     *\n     * @for DynamicPositionModel\n     * @method generateDynamicPositionFromBearingAndDistance\n     * @param bearing {number} magnetic bearing, in radians\n     * @param distance {number} distance, in nautical miles\n     * @return {array} [latitude, longitude]\n     */\n    generateCoordinatesFromBearingAndDistance(bearing, distance) {\n        const R = PHYSICS_CONSTANTS.EARTH_RADIUS_NM;\n        const θ = bearing + this._magneticNorth; // true bearing, in radians\n        const d = distance;\n        const δ = d / R; // angular distance, in earth laps\n        const φ1 = degreesToRadians(this.latitude);\n        const λ1 = degreesToRadians(this.longitude);\n        const φ2 = Math.asin(Math.sin(φ1) * Math.cos(δ) + Math.cos(φ1) * Math.sin(δ) * Math.cos(θ));\n        const λ2 = λ1 + Math.atan2(Math.sin(θ) * Math.sin(δ) * Math.cos(φ1), Math.cos(δ) - Math.sin(φ1) * Math.sin(φ2));\n        const lat = radiansToDegrees(φ2);\n        const lon = radiansToDegrees(λ2);\n\n        return [lat, lon];\n    }\n\n    /**\n     * Change the lat/lon coordinates of `this`\n     *\n     * @for DynamicPositionModel\n     * @method setCoordinates\n     * @param gpsCoordinates {Array<number>} [latitude, longitude]\n     */\n    setCoordinates(gpsCoordinates) {\n        if (!isValidGpsCoordinatePair(gpsCoordinates)) {\n            return new TypeError('Expected valid GPS coordinates to be passed to Position.setCoordinates, ' +\n                `but received ${gpsCoordinates}`);\n        }\n\n        this.latitude = gpsCoordinates[GPS_COORDINATE_INDEX.LATITUDE];\n        this.longitude = gpsCoordinates[GPS_COORDINATE_INDEX.LONGITUDE];\n    }\n\n    /**\n     * Change the lat/lon coordinates of `this` by providing the distance to move along a given magnetic heading\n     *\n     * @for DynamicPositionModel\n     * @method setCoordinates\n     * @param bearing {number} magnetic bearing, in radians\n     * @param distance {number} distance, in nautical miles\n     */\n    setCoordinatesByBearingAndDistance(bearing, distance) {\n        const nextCoordinates = this.generateCoordinatesFromBearingAndDistance(bearing, distance);\n\n        this.setCoordinates(nextCoordinates);\n    }\n\n    /**\n     * Determine the `x` and `y` values of the `DynamicPositionModel`, used for drawing on the canvas\n     *\n     * @for DynamicPositionModel\n     * @method _calculateRelativePosition\n     * @return {array<number>}\n     * @private\n     */\n    _calculateRelativePosition() {\n        if (!this._hasReferencePosition()) {\n            return DEFAULT_SCREEN_POSITION;\n        }\n\n        return DynamicPositionModel.calculateRelativePosition(this.gps, this._referencePosition, this._magneticNorth);\n    }\n\n    /**\n     * Checks whether or not this `DynamicPositionModel` has a reference `DynamicPositionModel`\n     * Without the reference position, the rotation due to magnetic variation will not be applied\n     *\n     * @for DynamicPositionModel\n     * @method _hasReferencePosition\n     * @return {Boolean} whether this position is based on a reference position\n     * @private\n     */\n    _hasReferencePosition() {\n        return this._referencePosition !== null;\n    }\n}\n\n/**\n * Calculate x/y position from latitude and longitude and a referencePosition\n *\n * Provides a static method to calculate position without instantiating a `DynamicPositionModel` class.\n *\n * @function getPosition\n * @param coordinates {array<string>}\n * @param referencePosition {DynamicPositionModel|StaticPositionModel|null}\n * @param magneticNorth {number}\n * @return {array}\n * @static\n */\nDynamicPositionModel.calculateRelativePosition = (coordinates, referencePosition, magneticNorth) => {\n    if (!coordinates || !referencePosition || !_isNumber(magneticNorth)) {\n        throw new TypeError('Invalid parameter. DynamicPositionModel.calculateRelativePosition() requires ' +\n        'coordinates, referencePosition and magneticNorth as parameters');\n    }\n\n    const latitude = parseCoordinate(coordinates[GPS_COORDINATE_INDEX.LATITUDE]);\n    const longitude = parseCoordinate(coordinates[GPS_COORDINATE_INDEX.LONGITUDE]);\n    const canvasPositionX = calculateDistanceToPointForX(\n        referencePosition,\n        referencePosition.latitude,\n        longitude\n    );\n    const canvasPositionY = calculateDistanceToPointForY(\n        referencePosition,\n        latitude,\n        referencePosition.longitude\n    );\n    const { x, y } = adjustForMagneticNorth(canvasPositionX, canvasPositionY, magneticNorth);\n\n    return [x, y];\n};\n\n/**\n * Calculate lat/lon position from an x/y offset, relative to a referencePosition\n *\n * Provides a static method to calculate lat/lon coordinates without instantiating a `DynamicPositionModel` class.\n *\n * @for DynamicPositionModel\n * @method calculateGpsCoordinatesFromRelativePosition\n * @param offsetKm {array<number>} the relative position, in km offset [x, y] from the airport center\n * @param referencePosition {DynamicPositionModel|StaticPositionModel|null}\n * @return {array<number>}\n * @static\n */\nDynamicPositionModel.calculateGpsCoordinatesFromRelativePosition = (offsetKm, referencePosition) => {\n    if (!offsetKm || !referencePosition) {\n        throw new TypeError('Invalid parameter. DynamicPositionModel.calculateGpsCoordinatesFromRelativePosition() requires ' +\n            'coordinates, referencePosition and magneticNorth as parameters');\n    }\n\n    const magneticBearing = vradial(offsetKm);\n    const distance = nm(vlen(offsetKm));\n    const coordinates = referencePosition.generateCoordinatesFromBearingAndDistance(magneticBearing, distance);\n\n    return coordinates;\n};\n","import DynamicPositionModel from './DynamicPositionModel';\nimport {\n    DEFAULT_SCREEN_POSITION,\n    RELATIVE_POSITION_OFFSET_INDEX\n} from '../constants/positionConstants';\n\n/**\n * Like a DynamicPositionModel, but calculates once and PERMANANTLY stores the relative position [x, y] as a property\n *\n * @class StaticPositionModel\n * @extends DynamicPositionModel\n */\nexport default class StaticPositionModel extends DynamicPositionModel {\n    /**\n     * Coordinates may contain an optional elevation as a third element.\n     * It must be suffixed by either 'ft' or 'm' to indicate the units.\n     *\n     * Latitude and Longitude numbers may be one of the following forms:\n     *   Decimal degrees - `47.112388112`\n     *   Decimal degrees - `'N47.112388112'`\n     *   Decimal minutes - `'N38d38.109808'`\n     *   Decimal seconds - `'N58d27m12.138'`\n     *\n     * @for StaticPositionModel\n     * @constructor\n     * @param coordinates {array<string|number>}    array in shape of [latitude, longitude]\n     * @param reference {StaticPositionModel}       position to use for calculating relative position\n     * @param magnetic_north {number}               magnetic declination (variation), in radians east\n     */\n    constructor(coordinates = [], reference = null, magnetic_north = 0) {\n        super(coordinates, reference, magnetic_north);\n\n        /**\n         * Description of a location, expressed in 'kilometers' north and east of a given\n         * reference position on the screen (which is almost always the airport). Note that\n         * this location is offset from the reference position not in alignment with TRUE\n         * north, but rather MAGNETIC north (which is the alignment of the scope).\n         *\n         * @for StaticPositionModel\n         * @property _relativePosition\n         * @type {array<number>} [kilometersNorth, kilometersEast]\n         * @private\n         */\n        this._relativePosition = DEFAULT_SCREEN_POSITION;\n\n        this._initializeRelativePosition();\n    }\n\n    /**\n     * @for StaticPositionModel\n     * @property referencePosition\n     * @return {array<number>} [kilometersNorth, kilometersEast]\n     */\n    get referencePosition() {\n        return this._referencePosition;\n    }\n\n    /**\n     * Relative position, in km offset from the airport\n     *\n     * @for StaticPositionModel\n     * @property relativePosition\n     * @return {array<number>} [kilometersNorth, kilometersEast]\n     */\n    get relativePosition() {\n        return this._relativePosition;\n    }\n\n    /**\n     * Kilometers east (magnetic) of the reference position\n     *\n     * @for StaticPositionModel\n     * @property x\n     * @type {number}\n     */\n    get x() {\n        return this._relativePosition[RELATIVE_POSITION_OFFSET_INDEX.LONGITUDINAL];\n    }\n\n    /**\n     * Kilometers north (magnetic) of the reference position\n     *\n     * @for StaticPositionModel\n     * @property y\n     * @type {number}\n     */\n    get y() {\n        return this._relativePosition[RELATIVE_POSITION_OFFSET_INDEX.LATITUDINAL];\n    }\n\n    /**\n     * Dummy method to overwrite that of `DynamicPositionModel` in order to disallow the making of\n     * any modifications to the `StaticPositionModel`.\n     *\n     * @for StaticPositionModel\n     * @method setCoordinates\n     */\n    setCoordinates(...args) {\n        console.warn(`Unexpected attempt to modify a StaticPositionModel, via .setCoordinates(${args});`);\n        // do nothing, because `StaticPositionModel`s cannot be changed\n    }\n\n    /**\n     * Calculate the relative position and store it in the property\n     *\n     * @for DynamicPositionModel\n     * @method _initializeRelativePosition\n     */\n    _initializeRelativePosition() {\n        if (!this._hasReferencePosition()) {\n            return DEFAULT_SCREEN_POSITION;\n        }\n\n        this._relativePosition = DynamicPositionModel.calculateRelativePosition(\n            this.gps,\n            this._referencePosition,\n            this._magneticNorth\n        );\n    }\n}\n","import _isNil from 'lodash/isNil';\nimport {\n    INVALID_INDEX,\n    REGEX\n} from '../constants/globalConstants';\nimport { distanceToPoint } from '../math/circle';\n\n/**\n * @function hasCardinalDirectionInCoordinate\n * @param coordinate {string}\n * @return {boolean}\n */\nexport const hasCardinalDirectionInCoordinate = (coordinate) => REGEX.COMPASS_DIRECTION.test(coordinate);\n\n// TODO: Are these two functions really needed to be separate?\n/**\n * @function calculateDistanceToPointForX\n * @param referencePosition {StaticPositionModel}\n * @param latitude {number}\n * @param longitude {number}\n * @return x {number}\n */\nexport const calculateDistanceToPointForX = (referencePosition, latitude, longitude) => {\n    let x = distanceToPoint(\n        referencePosition.latitude,\n        referencePosition.longitude,\n        latitude,\n        longitude\n    );\n\n    if (referencePosition.longitude > longitude) {\n        x *= -1;\n    }\n\n    return x;\n};\n\n// TODO: Are these two functions really needed to be separate?\n/**\n *\n *\n * @function calculateDistanceToPointForY\n * @param referencePosition {StaticPositionModel}\n * @param latitude {number}\n * @param longitude {number}\n * @return y {number}\n */\nexport const calculateDistanceToPointForY = (referencePosition, latitude, longitude) => {\n    let y = distanceToPoint(\n        referencePosition.latitude,\n        referencePosition.longitude,\n        latitude,\n        longitude\n    );\n\n\n    if (referencePosition.latitude > latitude) {\n        y *= -1;\n    }\n\n    return y;\n};\n\n/**\n * Adjust to use magnetic north instead of true north\n *\n * @function adjustForMagneticNorth\n * @param originalX {string}\n * @param originalY {string}\n * @param magneticNorth {number}\n * @return {object}\n */\nexport const adjustForMagneticNorth = (originalX, originalY, magneticNorth) => {\n    const t = Math.atan2(originalY, originalX) + magneticNorth;\n    const r = Math.sqrt((originalX * originalX) + (originalY * originalY));\n\n    const x = r * Math.cos(t);\n    const y = r * Math.sin(t);\n\n    return {\n        x,\n        y\n    };\n};\n\n/**\n * Returns whether provided GPS coordinate pair is valid\n *\n * @function isValidGpsCoordinatePair\n * @param  gpsCoordinates {array<number>} in the shape of [latitude, longitude]\n * @return {Boolean}\n */\nexport const isValidGpsCoordinatePair = (gpsCoordinates) => {\n    const hasContent = !_isNil(gpsCoordinates);\n    const hasTwoOrThreeElements = gpsCoordinates.length === 2 || gpsCoordinates.length === 3;\n    const firstTwoElementsHaveSameType = typeof gpsCoordinates[0] === typeof gpsCoordinates[1];\n\n    if (!hasContent || !hasTwoOrThreeElements || !firstTwoElementsHaveSameType) {\n        return false;\n    }\n\n    const latitude = gpsCoordinates[0];\n    const longitude = gpsCoordinates[1];\n\n    if (typeof latitude === 'number') {\n        return true;\n    } else if (typeof latitude === 'string') {\n        const latFirstCharIsNorthOrSouth = ['N', 'S'].indexOf(latitude[0].toUpperCase()) !== INVALID_INDEX;\n        const lonFirstCharIsEastOrWest = ['E', 'W'].indexOf(longitude[0].toUpperCase()) !== INVALID_INDEX;\n\n        return latFirstCharIsNorthOrSouth && lonFirstCharIsEastOrWest;\n    }\n\n    return false;\n};\n","import DynamicPositionModel from './DynamicPositionModel';\n\n/**\n * Accepts a `StaticPositionModel` and returns a `DynamicPositionModel` with the same location\n *\n * @function convertStaticPositionToDynamic\n * @param staticPositionModel {StaticPositionModel}\n * @return {DynamicPositionModel}\n */\nexport const convertStaticPositionToDynamic = (staticPositionModel) => {\n    return new DynamicPositionModel(\n        staticPositionModel.gps,\n        staticPositionModel.referencePosition,\n        staticPositionModel.magneticNorth\n    );\n};\n","import $ from 'jquery';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _filter from 'lodash/filter';\nimport _has from 'lodash/has';\nimport _inRange from 'lodash/inRange';\nimport AirportController from '../airport/AirportController';\nimport CanvasStageModel from './CanvasStageModel';\nimport EventBus from '../lib/EventBus';\nimport GameController from '../game/GameController';\nimport MeasureTool from '../measurement/MeasureTool';\nimport NavigationLibrary from '../navigationLibrary/NavigationLibrary';\nimport TimeKeeper from '../engine/TimeKeeper';\nimport { tau } from '../math/circle';\nimport {\n    round,\n    clamp\n} from '../math/core';\nimport {\n    positive_intersection_with_rect,\n    vectorize2dFromRadians,\n    vectorize2dFromDegrees,\n    vadd,\n    vscale\n} from '../math/vector';\nimport {\n    FLIGHT_PHASE,\n    FLIGHT_CATEGORY\n} from '../constants/aircraftConstants';\nimport {\n    BASE_CANVAS_FONT,\n    CANVAS_NAME\n} from '../constants/canvasConstants';\nimport { THEME } from '../constants/themes';\nimport { EVENT } from '../constants/eventNames';\nimport {\n    INVALID_INDEX,\n    INVALID_NUMBER,\n    TIME\n} from '../constants/globalConstants';\nimport { GAME_OPTION_NAMES } from '../constants/gameOptionConstants';\nimport { PROCEDURE_TYPE } from '../constants/routeConstants';\nimport { leftPad } from '../utilities/generalUtilities';\nimport {\n    DECIMAL_RADIX,\n    degreesToRadians,\n    km,\n    nm\n} from '../utilities/unitConverters';\n\n/**\n * @class CanvasController\n */\nexport default class CanvasController {\n    /**\n     * @constructor\n     * @param $element {JQuery|HTML Element}\n     * @param aircraftController {AircraftController}\n     * @param scopeModel {ScopeModel}\n     */\n    constructor($element, aircraftController, scopeModel) {\n        /**\n         * Reference to the `window` object\n         *\n         * @property $window\n         * @type {JQuery|HTML Element}\n         */\n        this.$window = $(window);\n\n        /**\n         * Reference to the `#canvases` tag which acts as the container\n         * element for all the `<canvas />` elements\n         *\n         * @property $element\n         * @type $element {JQuery|HTML Element}\n         * @default $element\n         */\n        this.$element = $element;\n\n        /**\n         * @property _aircraftController\n         * @type {AircraftController}\n         * @private\n         */\n        this._aircraftController = aircraftController;\n\n        /**\n         * @property _scopeModel\n         * @type {ScopeModel}\n         * @private\n         */\n        this._scopeModel = scopeModel;\n\n        /**\n         * @property _eventBus\n         * @type {EventBus}\n         * @private\n         */\n        this._eventBus = EventBus;\n\n        /**\n         * @property _context\n         * @type {object<string, HTMLCanvasContext>}\n         * @private\n         */\n        this._context = {};\n\n        /**\n         * Flag used to determine if the canvas dimensions should be resized\n         *\n         * @property _shouldResize\n         * @type {boolean}\n         * @default true\n         * @private\n         */\n        this._shouldResize = true;\n\n        /**\n         * Flag used to determine if the Aircraft canvas should be updated\n         *\n         * @property _shouldShallowRender\n         * @type {boolean}\n         * @default true\n         */\n        this._shouldShallowRender = true;\n\n        /**\n         * Flag used to determine if _all_ canvases should be updated\n         *\n         * When this is true, the non-updating canvases like terrain, fix labels,\n         * video map, etc will be recalculated and re-drawn.\n         *\n         * This should only be true when the view changes via zoom/pan or airport change\n         *\n         * @property _shouldDeepRender\n         * @type {boolean}\n         * @default true\n         */\n        this._shouldDeepRender = true;\n\n        /**\n         * Flag used to determine if airspace polygons should be displayed and labeled\n         *\n         * @property _shouldDrawAirspace\n         * @type {boolean}\n         * @default false\n         */\n        this._shouldDrawAirspace = false;\n\n        /**\n         * Flag used to determine if fix labels should be displayed\n         *\n         * @property _shouldDrawFixLabels\n         * @type {boolean}\n         * @default false\n         */\n        this._shouldDrawFixLabels = false;\n\n        /**\n         * Flag used to determine if restricted areas should be displayed\n         *\n         * @property _shouldDrawRestrictedAreas\n         * @type {boolean}\n         * @default false\n         */\n        this._shouldDrawRestrictedAreas = false;\n\n        /**\n         * Flag used to determine if the sid map should be displayed\n         *\n         * @property _shouldDrawSidMap\n         * @type {boolean}\n         * @default false\n         */\n        this._shouldDrawSidMap = false;\n\n        /**\n         * Flag used to determine if the star map should be displayed\n         *\n         * @property _shouldDrawStarMap\n         * @type {boolean}\n         * @default false\n         */\n        this._shouldDrawStarMap = false;\n\n        /**\n         * Flag used to determine if terrain should be displayed\n         *\n         * @property _shouldDrawTerrain\n         * @type {boolean}\n         * @default true\n         */\n        this._shouldDrawTerrain = true;\n\n        /**\n         * has a console.warn been output for terrain?\n         *\n         * This is meant for airport contributors designing new airports\n         *\n         * @property _hasSeenTerrainWarning\n         * @type {boolean}\n         * @default false\n         */\n        this._hasSeenTerrainWarning = false;\n\n        /**\n         * container property for the current canvas theme\n         *\n         * @property theme\n         * @type {object}\n         * @default null\n         */\n        this.theme = null;\n\n        return this._init()\n            ._setupHandlers()\n            .enable();\n    }\n\n    /**\n     * @for CanvasController\n     * @method _init\n     * @private\n     * @chainable\n     */\n    _init() {\n        this._setTheme(GameController.getGameOption(GAME_OPTION_NAMES.THEME));\n\n        return this;\n    }\n\n    /**\n     * @for CanvasController\n     * @method _setupHandlers\n     * @chainable\n     * @private\n     */\n    _setupHandlers() {\n        this._onSelectAircraftHandler = this._onSelectAircraft.bind(this);\n        this._onDeselectAircraftHandler = this._onDeselectAircraft.bind(this);\n        this._onCenterPointInViewHandler = this._onCenterPointInView.bind(this);\n        this._onChangeViewportPanHandler = this._onChangeViewportPan.bind(this);\n        this._onChangeViewportZoomHandler = this._onChangeViewportZoom.bind(this);\n        this._onMarkDirtyCanvasHandler = this._onMarkDirtyCanvas.bind(this);\n        this._onToggleAirspaceHandler = this._onToggleAirspace.bind(this);\n        this._onToggleLabelsHandler = this._onToggleLabels.bind(this);\n        this._onToggleRestrictedAreasHandler = this._onToggleRestrictedAreas.bind(this);\n        this._onToggleSidMapHandler = this._onToggleSidMap.bind(this);\n        this._onToggleStarMapHandler = this._onToggleStarMap.bind(this);\n        this._onAirportChangeHandler = this._onAirportChange.bind(this);\n        this._onToggleTerrainHandler = this._onToggleTerrain.bind(this);\n        this._onToggleVideoMapHandler = this._onToggleVideoMap.bind(this);\n        this._onRangeRingsChangeHandler = this._onRangeRingsChange.bind(this);\n        this._onResizeHandler = this.canvas_resize.bind(this);\n\n        this._setThemeHandler = this._setTheme.bind(this);\n\n        return this;\n    }\n\n    /**\n     * @for CanvasController\n     * @method enable\n     * @chainable\n     */\n    enable() {\n        this._eventBus.on(EVENT.SELECT_AIRCRAFT, this._onSelectAircraftHandler);\n        this._eventBus.on(EVENT.DESELECT_AIRCRAFT, this._onDeselectAircraftHandler);\n        this._eventBus.on(EVENT.REQUEST_TO_CENTER_POINT_IN_VIEW, this._onCenterPointInViewHandler);\n        this._eventBus.on(EVENT.PAN_VIEWPORT, this._onChangeViewportPanHandler);\n        this._eventBus.on(EVENT.ZOOM_VIEWPORT, this._onChangeViewportZoomHandler);\n        this._eventBus.on(EVENT.MARK_SHALLOW_RENDER, this._onMarkDirtyCanvasHandler);\n        this._eventBus.on(EVENT.TOGGLE_AIRSPACE, this._onToggleAirspaceHandler);\n        this._eventBus.on(EVENT.TOGGLE_LABELS, this._onToggleLabelsHandler);\n        this._eventBus.on(EVENT.TOGGLE_RESTRICTED_AREAS, this._onToggleRestrictedAreasHandler);\n        this._eventBus.on(EVENT.TOGGLE_SID_MAP, this._onToggleSidMapHandler);\n        this._eventBus.on(EVENT.TOGGLE_STAR_MAP, this._onToggleStarMapHandler);\n        this._eventBus.on(EVENT.TOGGLE_TERRAIN, this._onToggleTerrainHandler);\n        this._eventBus.on(EVENT.TOGGLE_VIDEO_MAP, this._onToggleVideoMapHandler);\n        this._eventBus.on(EVENT.RANGE_RINGS_CHANGE, this._onRangeRingsChangeHandler);\n        this._eventBus.on(EVENT.AIRPORT_CHANGE, this._onAirportChangeHandler);\n        this._eventBus.on(EVENT.SET_THEME, this._setThemeHandler);\n        window.addEventListener('resize', this._onResizeHandler);\n\n        this.$element.addClass(this.theme.CLASSNAME);\n\n        return this;\n    }\n\n    /**\n     * @for CanvasController\n     * @method disable\n     */\n    disable() {\n        this._eventBus.off(EVENT.SELECT_AIRCRAFT, this._onSelectAircraftHandler);\n        this._eventBus.off(EVENT.DESELECT_AIRCRAFT, this._onDeselectAircraftHandler);\n        this._eventBus.off(EVENT.REQUEST_TO_CENTER_POINT_IN_VIEW, this._onCenterPointInView);\n        this._eventBus.off(EVENT.PAN_VIEWPORT, this._onChangeViewportPan);\n        this._eventBus.off(EVENT.ZOOM_VIEWPORT, this._onChangeViewportZoom);\n        this._eventBus.off(EVENT.MARK_SHALLOW_RENDER, this._onMarkDirtyCanvas);\n        this._eventBus.off(EVENT.TOGGLE_AIRSPACE, this._onToggleAirspaceHandler);\n        this._eventBus.off(EVENT.TOGGLE_LABELS, this._onToggleLabels);\n        this._eventBus.off(EVENT.TOGGLE_RESTRICTED_AREAS, this._onToggleRestrictedAreas);\n        this._eventBus.off(EVENT.TOGGLE_SID_MAP, this._onToggleSidMap);\n        this._eventBus.off(EVENT.TOGGLE_STAR_MAP, this._onToggleStarMap);\n        this._eventBus.off(EVENT.TOGGLE_TERRAIN, this._onToggleTerrain);\n        this._eventBus.off(EVENT.TOGGLE_VIDEO_MAP, this._onToggleVideoMapHandler);\n        this._eventBus.off(EVENT.RANGE_RINGS_CHANGE, this._onRangeRingsChangeHandler);\n        this._eventBus.off(EVENT.AIRPORT_CHANGE, this._onAirportChangeHandler);\n        this._eventBus.off(EVENT.SET_THEME, this._setTheme);\n        window.removeEventListener('resize', this._onResizeHandler);\n\n        return this.destroy();\n    }\n\n    /**\n     * @for CanvasController\n     * @method destroy\n     */\n    destroy() {\n        this.$window = null;\n        this.$element = null;\n        this._context = {};\n        this._shouldResize = true;\n        this._shouldShallowRender = true;\n        this._shouldDeepRender = true;\n        this._shouldDrawFixLabels = false;\n        this._shouldDrawRestrictedAreas = false;\n        this._shouldDrawSidMap = false;\n        this._shouldDrawStarMap = false;\n        this._shouldDrawTerrain = true;\n\n        return this;\n    }\n\n    /**\n     * Called by `AppController.init()`\n     *\n     * Creates canvas elements and stores context\n     *\n     * @for CanvasController\n     * @method canvas_init\n     */\n    canvas_init() {\n        this._addCanvas(CANVAS_NAME.STATIC);\n        this._addCanvas(CANVAS_NAME.DYNAMIC);\n    }\n\n    /**\n     * Called by `AppController.complete()`\n     *\n     * @for CanvasController\n     * @method\n     */\n    canvas_complete() {\n        // TODO: not sure what the rationale is here. this should be removed/reworked if possible\n        setTimeout(() => {\n            this._markDeepRender();\n        }, 500);\n    }\n\n    /**\n     * A `resize` event was captured by the `AppController`\n     *\n     * Here we re-calculate the canvas dimensions\n     *\n     * @for CanvasController\n     * @method canvas_resize\n     */\n    canvas_resize() {\n        if (this._shouldResize) {\n            CanvasStageModel.updateHeightAndWidth(\n                this.$window.height(),\n                this.$window.width()\n            );\n        }\n\n        for (const canvasName in this._context) {\n            const context = this._context[canvasName];\n            context.canvas.height = CanvasStageModel.height;\n            context.canvas.width = CanvasStageModel.width;\n\n            this._adjustHidpi(canvasName);\n        }\n\n        this._markDeepRender();\n    }\n\n    /**\n     * Main update method called by `AppController.update_post()` within the game loop\n     *\n     * All methods called from this function should accept a canvas context argument.\n     * The rationale here is that each method sets up and tears down any origin or state\n     * transformations themselves. This way the methods can be organized or moved any\n     * way we choose without having to worry about what the current state of the `context`\n     *\n     * It is important for code in this method, or called by this method, to be as\n     * performant as possible so as not to degrade performance.\n     *\n     * @for CanvasController\n     * @method canvasUpdatePost\n     */\n    canvasUpdatePost() {\n        if (!this._shouldShallowRender && !TimeKeeper.shouldUpdate()) {\n            return;\n        }\n\n        if (this._shouldDeepRender) {\n            // we should only ever enter this block as a result of a change in the view\n            // or an airport change. these methods involve much more complicated drawing\n            // and can degrade performance if called too frequently.\n            const staticCanvasCtx = this._getCanvasContextByName(CANVAS_NAME.STATIC);\n\n            this._clearCanvasContext(staticCanvasCtx);\n            this._drawVideoMap(staticCanvasCtx);\n            this._drawTerrain(staticCanvasCtx);\n            this._drawRestrictedAirspace(staticCanvasCtx);\n            this._drawRunways(staticCanvasCtx);\n            this._drawAirportFixesAndLabels(staticCanvasCtx);\n            this._drawSids(staticCanvasCtx);\n            this._drawStars(staticCanvasCtx);\n            this._drawAirspaceAndRangeRings(staticCanvasCtx);\n            this._drawAirspaceShelvesAndLabels(staticCanvasCtx);\n            this._drawRunwayLabels(staticCanvasCtx);\n            this._drawCurrentScale(staticCanvasCtx);\n        }\n\n        const dynamicCanvasCtx = this._getCanvasContextByName(CANVAS_NAME.DYNAMIC);\n\n        this._clearCanvasContext(dynamicCanvasCtx);\n        this._drawSelectedAircraftCompass(dynamicCanvasCtx);\n        this._drawRadarTargetList(dynamicCanvasCtx);\n        this._drawAircraftDataBlocks(dynamicCanvasCtx);\n        this._drawMeasureTool(dynamicCanvasCtx);\n\n        this._shouldShallowRender = false;\n        this._shouldDeepRender = false;\n    }\n\n    /**\n     * Used primarily for the data block\n     *\n     * This provides a way to know when to show the primary\n     * dataBlock or the secondary dataBlock\n     *\n     * @method shouldShowSecondaryDataBlock\n     * @returns {boolean}\n     */\n    shouldShowSecondaryDataBlock() {\n        return _inRange(TimeKeeper.gameTimeMilliseconds % 3000, 2000, 3000);\n    }\n\n    /**\n     * Add a `canvas` element to the DOM\n     *\n     * @for CanvasController\n     * @method _addCanvas\n     * @param name {CANVAS_NAME|string}\n     * @private\n     */\n    _addCanvas(name) {\n        const canvasTemplate = `<canvas id='${name}-canvas'></canvas>`;\n\n        this.$element.append(canvasTemplate);\n\n        this._context[name] = $(`#${name}-canvas`).get(0).getContext('2d');\n    }\n\n    /**\n     * @for CanvasController\n     * @method _adjustHidpi\n     * @private\n     */\n    _adjustHidpi(canvasName) {\n        const devicePixelRatio = window.devicePixelRatio || 1;\n        const canvasContext = this._context[canvasName];\n\n        if (devicePixelRatio <= 1) {\n            return;\n        }\n\n        const $canvasElement = $(`#${canvasContext.canvas.id}`).get(0);\n\n        $($canvasElement).attr('height', CanvasStageModel.height * devicePixelRatio);\n        $($canvasElement).css('height', CanvasStageModel.height);\n        $($canvasElement).attr('width', CanvasStageModel.width * devicePixelRatio);\n        $($canvasElement).css('width', CanvasStageModel.width);\n\n        canvasContext.scale(devicePixelRatio, devicePixelRatio);\n    }\n\n    /**\n     * Clear the current canvas context\n     *\n     * @for CanvasController\n     * @method _clearCanvasContext\n     * @param cc {HTMLCanvasContext}\n     * @private\n     */\n    _clearCanvasContext(cc) {\n        cc.clearRect(0, 0, CanvasStageModel.width, CanvasStageModel.height);\n    }\n\n    /**\n     * Draw the specified RunwayModel (line only)\n     *\n     * POSITIONING: Before calling this method, translate to the AIRPORT CENTER\n     *\n     * @for CanvasController\n     * @method _drawSingleRunway\n     * @param cc {HTMLCanvasContext}\n     * @param runwayModel {RunwayModel}\n     * @param mode {boolean}               flag to switch between drawing a runway or just a runway centerline\n     * @returns undefined\n     * @private\n     */\n    _drawSingleRunway(cc, runwayModel, mode) {\n        const runwayLength = round(CanvasStageModel._translateKilometersToPixels(runwayModel.length / 2)) * -2;\n        const { angle, relativePosition } = runwayModel;\n        const runwayCanvasPosition = CanvasStageModel.calculateRoundedCanvasPositionFromRelativePosition(relativePosition);\n\n        cc.save();\n        cc.translate(...runwayCanvasPosition);\n        cc.rotate(angle);\n\n        // runway body\n        if (!mode) {\n            cc.strokeStyle = '#ffbbee';\n            cc.lineWidth = 2.8;\n\n            cc.beginPath();\n            cc.moveTo(0, 0);\n            cc.lineTo(0, runwayLength);\n            cc.stroke();\n        } else { // extended centerlines\n            if (!runwayModel.ils.enabled) {\n                cc.restore();\n\n                return;\n            }\n\n            cc.strokeStyle = this.theme.SCOPE.RUNWAY_EXTENDED_CENTERLINE;\n            cc.lineWidth = 1;\n\n            cc.beginPath();\n            cc.moveTo(0, 0);\n            cc.lineTo(0, CanvasStageModel._translateKilometersToPixels(runwayModel.ils.loc_maxDist));\n            cc.stroke();\n        }\n\n        cc.restore();\n    }\n\n    /**\n     * Draw labels for all runways, but NOT the runways themselves (see _drawRunways())\n     *\n     * POSITIONING: Before calling this method, translate to the AIRPORT CENTER\n     *\n     * @for CanvasController\n     * @method _drawRunwayLabel\n     * @param cc {HTMLCanvasContext}\n     * @param runway {RunwayModel}\n     * @returns undefined\n     * @private\n     */\n    _drawRunwayLabel(cc, runwayModel) {\n        const length2 = round(CanvasStageModel._translateKilometersToPixels(runwayModel.length / 2)) + 0.5;\n        const { angle, relativePosition } = runwayModel;\n        const runwayCanvasPosition = CanvasStageModel.calculateRoundedCanvasPositionFromRelativePosition(relativePosition);\n        const textHeight = 14;\n\n        cc.save();\n        cc.textAlign = 'center';\n        cc.textBaseline = 'middle';\n        cc.translate(...runwayCanvasPosition);\n        cc.rotate(angle);\n        cc.translate(0, length2 + textHeight);\n        cc.rotate(-angle);\n        cc.fillText(runwayModel.name, 0, 0);\n        cc.restore();\n    }\n\n    /**\n     * Draw all runways, but NOT their labels (see _drawRunwayLabels())\n     *\n     * POSITIONING: Before calling this method, ensure NO TRANSLATION has occurred\n     *\n     * @for CanvasController\n     * @method _drawRunways\n     * @param cc {HTMLCanvasContext}\n     * @returns undefined\n     * @private\n     */\n    _drawRunways(cc) {\n        if (!this._shouldDrawFixLabels) {\n            return;\n        }\n\n        cc.save();\n        this._ccTranslateFromCanvasOriginToAirportCenter(cc);\n        cc.font = '11px monoOne, monospace';\n        cc.strokeStyle = this.theme.SCOPE.RUNWAY;\n        cc.fillStyle = this.theme.SCOPE.RUNWAY;\n        cc.lineWidth = 4;\n\n        const airportModel = AirportController.airport_get();\n\n        // TODO: we should try to consolidate this so we aren't looping over the runway collection multiple times\n        // Extended Centerlines\n        for (let i = 0; i < airportModel.runways.length; i++) {\n            this._drawSingleRunway(cc, airportModel.runways[i][0], true);\n            this._drawSingleRunway(cc, airportModel.runways[i][1], true);\n        }\n\n        // Runways\n        for (let i = 0; i < airportModel.runways.length; i++) {\n            this._drawSingleRunway(cc, airportModel.runways[i][0], false);\n        }\n\n        cc.restore();\n    }\n\n    /**\n     * Draw runway label text\n     *\n     * POSITIONING: Before calling this method, ensure NO TRANSLATION has occurred\n     *\n     * @for CanvasController\n     * @method _drawRunwayLabels\n     * @param cc {HTMLCanvasContext}\n     * @returns undefined\n     * @private\n     */\n    _drawRunwayLabels(cc) {\n        if (!this._shouldDrawFixLabels) {\n            return;\n        }\n\n        const airportModel = AirportController.airport_get();\n\n        cc.save();\n        this._ccTranslateFromCanvasOriginToAirportCenter(cc);\n        cc.fillStyle = this.theme.SCOPE.RUNWAY_LABELS;\n\n        for (let i = 0; i < airportModel.runways.length; i++) {\n            this._drawRunwayLabel(cc, airportModel.runways[i][0]);\n            this._drawRunwayLabel(cc, airportModel.runways[i][1]);\n        }\n\n        cc.restore();\n    }\n\n    /**\n     * Draw scale in the top right corner of the scope\n     *\n     * POSITIONING: Before calling this method, ensure NO TRANSLATION has occurred\n     *\n     * @for CanvasController\n     * @method _drawCurrentScale\n     * @param cc {HTMLCanvasContext}\n     * @returns undefined\n     * @private\n     */\n    _drawCurrentScale(cc) {\n        cc.save();\n\n        const offsetX = 35;\n        const offsetY = 10;\n        const height = 5;\n        const lengthNm = round(nm(1 / CanvasStageModel.scale * 50));\n        const lengthKm = km(lengthNm);\n        const px_length = round(CanvasStageModel._translateKilometersToPixels(lengthKm));\n        const widthLessOffset = CanvasStageModel.width - offsetX;\n\n        cc.font = '10px monoOne, monospace';\n        cc.fillStyle = this.theme.SCOPE.TOP_ROW_TEXT;\n        cc.strokeStyle = this.theme.SCOPE.TOP_ROW_TEXT;\n        cc.lineWidth = 1;\n        cc.textAlign = 'center';\n        cc.beginPath();\n        cc.moveTo(widthLessOffset, offsetY);\n        cc.lineTo(widthLessOffset, offsetY + height);\n        cc.lineTo(widthLessOffset - px_length, offsetY + height);\n        cc.lineTo(widthLessOffset - px_length, offsetY);\n        cc.stroke();\n        cc.fillText(\n            `${lengthNm} nm`,\n            widthLessOffset - px_length * 0.5,\n            offsetY + height + 17\n        );\n        cc.restore();\n    }\n\n    /**\n     * Draw the provided `FixModel`, including triangle marker AND text label\n     *\n     * POSITIONING: Before calling this method, translate to the AIRPORT CENTER\n     *\n     * @for CanvasController\n     * @method _drawSingleFixAndLabel\n     * @param cc {HTMLCanvasContext}\n     * @param fixModel {FixModel}\n     * @returns undefined\n     * @private\n     */\n    _drawSingleFixAndLabel(cc, fixModel) {\n        const fixCanvasPosition = CanvasStageModel.calculateRoundedCanvasPositionFromRelativePosition(fixModel.relativePosition);\n\n        cc.save();\n        cc.translate(...fixCanvasPosition);\n        cc.fillStyle = this.theme.SCOPE.FIX_FILL;\n        cc.globalCompositeOperation = 'source-over';\n        cc.lineWidth = 1;\n        cc.beginPath();\n        cc.moveTo(0, -5);\n        cc.lineTo(4, 3);\n        cc.lineTo(-4, 3);\n        cc.closePath();\n        cc.fill();\n        cc.fillStyle = this.theme.SCOPE.FIX_TEXT;\n        cc.textAlign = 'center';\n        cc.textBaseline = 'top';\n        cc.fillText(fixModel.name, 0, 6);\n        cc.restore();\n    }\n\n    /**\n     * Draw fixes and labels\n     *\n     * POSITIONING: Before calling this method, ensure NO TRANSLATION has occurred\n     *\n     * @for CanvasController\n     * @method _drawAirportFixesAndLabels\n     * @param cc {HTMLCanvasContext}\n     * @returns undefined\n     * @private\n     */\n    _drawAirportFixesAndLabels(cc) {\n        if (!this._shouldDrawFixLabels) {\n            return;\n        }\n\n        cc.save();\n        this._ccTranslateFromCanvasOriginToAirportCenter(cc);\n\n        cc.lineJoin = 'round';\n        cc.font = BASE_CANVAS_FONT;\n\n        for (let i = 0; i < NavigationLibrary.realFixes.length; i++) {\n            const fixModel = NavigationLibrary.realFixes[i];\n\n            this._drawSingleFixAndLabel(cc, fixModel);\n        }\n\n        cc.restore();\n    }\n\n    // TODO: break this method up into smaller chunks\n    /**\n     * Draw SID lines and labels\n     *\n     * POSITIONING: Before calling this method, ensure NO TRANSLATION has occurred\n     *\n     * @for CanvasController\n     * @method _drawSids\n     * @param cc {HTMLCanvasContext}\n     * @returns undefined\n     * @private\n     */\n    _drawSids(cc) {\n        if (!this._shouldDrawSidMap) {\n            return;\n        }\n\n        const textAtFix = [];\n        const sidLines = NavigationLibrary.getProcedureLines(PROCEDURE_TYPE.SID);\n\n        cc.save();\n        this._ccTranslateFromCanvasOriginToAirportCenter(cc);\n        cc.strokeStyle = this.theme.SCOPE.SID;\n        cc.fillStyle = this.theme.SCOPE.SID;\n        cc.setLineDash([1, 10]);\n        cc.font = 'italic 14px monoOne, monospace';\n\n        for (let i = 0; i < sidLines.length; i++) {\n            const sid = sidLines[i];\n            let shouldDrawProcedureName = true;\n\n            for (let j = 0; j < sid.lines.length; j++) {\n                this._drawPolyLineFromRelativePositions(cc, sid.lines[j]);\n            }\n\n            for (let j = 0; j < sid.exits.length; j++) {\n                const exitName = sid.exits[j];\n\n                if (!(exitName in textAtFix)) {\n                    textAtFix[exitName] = [];\n                }\n\n                textAtFix[exitName].push(`${sid.identifier}.${exitName}`);\n\n                shouldDrawProcedureName = false;\n            }\n\n            if (shouldDrawProcedureName) {\n                const { lastFixName } = sid;\n\n                if (!(lastFixName in textAtFix)) {\n                    textAtFix[lastFixName] = [];\n                }\n\n                textAtFix[lastFixName].push(sid.identifier);\n            }\n        }\n\n        // draw labels\n        for (const fix in textAtFix) {\n            const textItemsToPrint = textAtFix[fix];\n            const fixPosition = NavigationLibrary.getFixRelativePosition(fix);\n\n            this._drawText(cc, fixPosition, textItemsToPrint);\n        }\n\n        cc.restore();\n    }\n\n    /**\n     * Draw STAR lines and labels\n     *\n     * POSITIONING: Before calling this method, ensure NO TRANSLATION has occurred\n     *\n     * @for CanvasController\n     * @method _drawStars\n     * @param cc {HTMLCanvasContext}\n     * @returns undefined\n     * @private\n     */\n    _drawStars(cc) {\n        if (!this._shouldDrawStarMap) {\n            return;\n        }\n\n        const starLines = NavigationLibrary.getProcedureLines(PROCEDURE_TYPE.STAR);\n        const textAtFix = [];\n\n        cc.save();\n        this._ccTranslateFromCanvasOriginToAirportCenter(cc);\n        cc.strokeStyle = this.theme.SCOPE.STAR;\n        cc.fillStyle = this.theme.SCOPE.STAR;\n        cc.setLineDash([1, 10]);\n        cc.font = 'italic 14px monoOne, monospace';\n        cc.textAlign = 'right';\n\n        for (let i = 0; i < starLines.length; i++) {\n            const star = starLines[i];\n\n            for (let j = 0; j < star.lines.length; j++) {\n                this._drawPolyLineFromRelativePositions(cc, star.lines[j]);\n            }\n\n            const { firstFixName } = star;\n\n            if (!(firstFixName in textAtFix)) {\n                textAtFix[firstFixName] = [];\n            }\n\n            textAtFix[firstFixName].push(star.identifier);\n        }\n\n        // draw labels\n        for (const fix in textAtFix) {\n            const textItemsToPrint = textAtFix[fix];\n            const fixPosition = NavigationLibrary.getFixRelativePosition(fix);\n\n            this._drawText(cc, fixPosition, textItemsToPrint);\n        }\n\n        cc.restore();\n    }\n\n    /**\n     * Draw the provided polyline (includes 2 or more points)\n     *\n     * POSITIONING: Before calling this method, translate to the AIRPORT CENTER\n     *\n     * @for CanvasController\n     * @method _drawPolyLineFromRelativePositions\n     * @param cc {HTMLCanvasContext}\n     * @param relativePositions {array<array<number, number>>} position coordinates (in km)\n     * @returns undefined\n     * @private\n     */\n    _drawPolyLineFromRelativePositions(cc, relativePositions) {\n        if (relativePositions.length < 2) {\n            return;\n        }\n\n        const lineStartPosition = CanvasStageModel.calculateRoundedCanvasPositionFromRelativePosition(relativePositions[0]);\n\n        cc.beginPath();\n        cc.moveTo(...lineStartPosition);\n\n        for (let k = 0; k < relativePositions.length; k++) {\n            const relativePosition = relativePositions[k];\n            const canvasPosition = CanvasStageModel.calculateRoundedCanvasPositionFromRelativePosition(relativePosition);\n\n            cc.lineTo(...canvasPosition);\n        }\n\n        cc.stroke();\n    }\n\n    /**\n     * Draw the provided text at the specified relative position\n     *\n     * POSITIONING: Before calling this method, translate to the AIRPORT CENTER\n     *\n     * @for CanvasController\n     * @method _drawText\n     * @param cc {HTMLCanvasContext}\n     * @param relativePosition {array<number, number>} offset coordinates from airport center (in km)\n     * @param labels {array}\n     * @param lineHeight {number} in pixels\n     * @returns undefined\n     * @private\n     */\n    _drawText(cc, relativePosition, labels, lineHeight = 15) {\n        const canvasPosition = CanvasStageModel.calculateRoundedCanvasPositionFromRelativePosition(relativePosition);\n        let dx = cc.textAlign === 'right' ? -10 : 10;\n\n        if (cc.textAlign === 'center') {\n            dx = 0;\n        }\n\n        for (let k = 0; k < labels.length; k++) {\n            const textItem = labels[k];\n            const drawCanvasPositionX = canvasPosition[0] + dx;\n            const drawCanvasPositionY = canvasPosition[1] + (lineHeight * k);\n\n            cc.fillText(textItem, drawCanvasPositionX, drawCanvasPositionY);\n        }\n    }\n\n    /**\n     * Draw a trailing indicator 2.5 NM (4.6km) behind landing aircraft to help with traffic spacing\n     *\n     * POSITIONING: Before calling this method, translate to the AIRPORT CENTER\n     *\n     * @for CanvasController\n     * @method _drawSeparationIndicator\n     * @param cc {HTMLCanvasContext}\n     * @param aircraftModel {AircraftModel}\n     * @returns undefined\n     * @private\n     */\n    _drawSeparationIndicator(cc, aircraftModel) {\n        if (!GameController.shouldUseTrailingSeparationIndicator(aircraftModel)) {\n            return;\n        }\n\n        cc.save();\n\n        const { fms, relativePosition } = aircraftModel;\n        const oppositeOfRunwayHeading = fms.arrivalRunwayModel.oppositeAngle;\n        const aircraftCanvasPosition = CanvasStageModel.calculateRoundedCanvasPositionFromRelativePosition(relativePosition);\n        cc.strokeStyle = this.theme.RADAR_TARGET.TRAILING_SEPARATION_INDICATOR;\n        cc.lineWidth = 3;\n\n        cc.translate(...aircraftCanvasPosition);\n        cc.rotate(oppositeOfRunwayHeading);\n        cc.beginPath();\n\n        const indicatorPaddingPx = 5;\n        const indicatorKmInTrail = 5.556; // 5.556km = 3.0nm\n        const pixelsInTrail = CanvasStageModel._translateKilometersToPixels(indicatorKmInTrail);\n\n        cc.moveTo(-indicatorPaddingPx, -pixelsInTrail);\n        cc.lineTo(indicatorPaddingPx, -pixelsInTrail);\n        cc.stroke();\n\n        cc.restore();\n    }\n\n    /**\n     * Draws circle around aircraft that are in (or soon to be in) conflict with another aircraft\n     *\n     * POSITIONING: Before calling this method, translate to the AIRCRAFT POSITION\n     *\n     * These rings are drawn independently of user-set halos\n     *\n     * @for CanvasController\n     * @method _drawAircraftConflictRings\n     * @param cc {HTMLCanvasContext}\n     * @param radarTargetModel {RadarTargetModel}\n     * @returns undefined\n     * @private\n     */\n    _drawAircraftConflictRings(cc, radarTargetModel) {\n        const { aircraftModel } = radarTargetModel;\n        const aircraftAlerts = aircraftModel.getAlerts();\n        const radiusNm = 3;\n\n        if (!aircraftAlerts[0]) {\n            return;\n        }\n\n        let strokeStyle = this.theme.RADAR_TARGET.RING_CONFLICT;\n\n        if (aircraftAlerts[1]) {\n            strokeStyle = this.theme.RADAR_TARGET.RING_VIOLATION;\n        }\n\n        cc.strokeStyle = strokeStyle;\n\n        cc.beginPath();\n        cc.arc(0, 0, CanvasStageModel._translateKilometersToPixels(km(radiusNm)), 0, tau());\n        cc.stroke();\n    }\n\n    /**\n     * Draws circle around aircraft with radius as requested by the user\n     *\n     * POSITIONING: Before calling this method, translate to the AIRCRAFT POSITION\n     *\n     * @for CanvasController\n     * @method _drawAircraftHalo\n     * @param cc {HTMLCanvasContext}\n     * @param radarTargetModel {RadarTargetModel}\n     * @returns undefined\n     * @private\n     */\n    _drawAircraftHalo(cc, radarTargetModel) {\n        if (!radarTargetModel.hasHalo) {\n            return;\n        }\n\n        const radiusNm = radarTargetModel.haloRadius;\n        cc.strokeStyle = this.theme.RADAR_TARGET.HALO;\n\n        cc.beginPath();\n        cc.arc(0, 0, CanvasStageModel._translateKilometersToPixels(km(radiusNm)), 0, tau());\n        cc.stroke();\n    }\n\n    /**\n     * Draw the RADAR RETURN AND HISTORY DOTS ONLY of the specified radar target model\n     *\n     * POSITIONING: Before calling this method, translate to the AIRPORT CENTER\n     *\n     * @for CanvasController\n     * @method _drawSingleRadarTarget\n     * @param cc {HTMLCanvasContext}\n     * @param radarTargetModel {RadarTargetModel}\n     * @returns undefined\n     * @private\n     */\n    _drawSingleRadarTarget(cc, radarTargetModel) {\n        const { aircraftModel } = radarTargetModel;\n\n        if (!aircraftModel.isVisible()) {\n            return;\n        }\n\n        cc.save();\n\n        // TODO: death to the `prop`!!!\n        const match = prop.input.callsign.length > 0 && aircraftModel.matchCallsign(prop.input.callsign);\n        let fillStyle = this.theme.RADAR_TARGET.HISTORY_DOT_OUTSIDE_RANGE;\n\n        if (aircraftModel.isControllable && aircraftModel.category === 'arrival') {\n            fillStyle = this.theme.RADAR_TARGET.HISTORY_DOT_INSIDE_RANGE_ARRIVAL;\n        }\n\n        if (aircraftModel.isControllable && aircraftModel.category === 'departure') {\n            fillStyle = this.theme.RADAR_TARGET.HISTORY_DOT_INSIDE_RANGE_DEPARTURE;\n        }\n\n        cc.fillStyle = fillStyle;\n\n        const positionHistory = aircraftModel.relativePositionHistory;\n\n        for (let i = 0; i < positionHistory.length; i++) {\n            const position = aircraftModel.relativePositionHistory[i];\n            const canvasPosition = CanvasStageModel.calculatePreciseCanvasPositionFromRelativePosition(position);\n\n            cc.beginPath();\n            cc.arc(\n                ...canvasPosition,\n                CanvasStageModel._translateKilometersToPixels(this.theme.RADAR_TARGET.HISTORY_DOT_RADIUS_KM),\n                0,\n                tau()\n            );\n            cc.closePath();\n            cc.fill();\n        }\n\n        cc.restore();\n        cc.save();\n\n        if (positionHistory.length > this.theme.RADAR_TARGET.HISTORY_LENGTH) {\n            // TODO: This slice is being reassigned to the aircraft, which doesn't really\n            // make sense as a canvas controller job. This should be done elsewhere.\n            aircraftModel.relativePositionHistory = positionHistory.slice(\n                positionHistory.length - this.theme.RADAR_TARGET.HISTORY_LENGTH,\n                positionHistory.length\n            );\n        }\n\n        if (aircraftModel.isEstablishedOnCourse()) {\n            this._drawSeparationIndicator(cc, aircraftModel);\n        }\n\n        // Draw the future path\n        switch (GameController.game.option.getOptionByName('drawProjectedPaths')) {\n            case 'always':\n                this._drawAircraftFuturePath(cc, aircraftModel, match);\n\n                break;\n            case 'selected':\n                if (match) {\n                    this._drawAircraftFuturePath(cc, aircraftModel, match);\n                }\n\n                break;\n            default:\n                break;\n        }\n\n        const aircraftCanvasPosition = CanvasStageModel.calculatePreciseCanvasPositionFromRelativePosition(\n            aircraftModel.relativePosition\n        );\n        // console.log('Position: ');\n        // console.log(aircraftModel);\n        cc.translate(...aircraftCanvasPosition);\n\n        this._drawAircraftVectorLines(cc, aircraftModel);\n        this._drawAircraftHalo(cc, radarTargetModel);\n        this._drawAircraftConflictRings(cc, radarTargetModel);\n\n        let radarTargetRadiusKm = this.theme.RADAR_TARGET.RADIUS_KM;\n\n        // Draw bigger circle around radar target when the aircraftModel is selected\n        if (match) {\n            radarTargetRadiusKm = this.theme.RADAR_TARGET.RADIUS_SELECTED_KM;\n        }\n\n        // Draw the radar target (aka aircraft position dot)\n        cc.fillStyle = this.theme.RADAR_TARGET.RADAR_TARGET;\n        cc.beginPath();\n        cc.arc(0, 0, CanvasStageModel._translateKilometersToPixels(radarTargetRadiusKm), 0, tau());\n        cc.fill();\n\n        cc.restore();\n    }\n\n    /**\n     * Draw aircraft vector lines (\"projected track lines\" or \"PTL\")\n     *\n     * POSITIONING: Before calling this method, translate to the AIRCRAFT POSITION\n     *\n     * Note: These extend in front of aircraft a definable number of minutes\n     *\n     * @for CanvasController\n     * @method _drawAircraftVectorLines\n     * @param cc {HTMLCanvasContext}\n     * @param aircraftModel {AircraftModel}\n     * @private\n     */\n    _drawAircraftVectorLines(cc, aircraftModel) {\n        if (aircraftModel.hit) {\n            return;\n        }\n\n        cc.save();\n\n        cc.fillStyle = this.theme.RADAR_TARGET.PROJECTED_TRACK_LINES;\n        cc.strokeStyle = this.theme.RADAR_TARGET.PROJECTED_TRACK_LINES;\n\n        const lineLengthInMinutes = this._scopeModel.ptlLength;\n        const lineLengthInHours = lineLengthInMinutes * TIME.ONE_MINUTE_IN_HOURS;\n        const lineLength_km = km(aircraftModel.groundSpeed * lineLengthInHours);\n        const groundTrackVector = vectorize2dFromRadians(aircraftModel.groundTrack);\n        const scaledGroundTrackVector = vscale(groundTrackVector, lineLength_km);\n        const screenPositionOffsetX = CanvasStageModel._translateKilometersToPixels(scaledGroundTrackVector[0]);\n        const screenPositionOffsetY = CanvasStageModel._translateKilometersToPixels(scaledGroundTrackVector[1]);\n\n        cc.beginPath();\n        cc.moveTo(0, 0);\n        cc.lineTo(screenPositionOffsetX, -screenPositionOffsetY);\n        cc.stroke();\n        cc.restore();\n    }\n\n    // TODO: This is currently not working correctly and not in use\n    /**\n     * Draw dashed line from last coordinate of future track through\n     * any later requested fixes.\n     *\n     * POSITIONING: Before calling this method, translate to the AIRPORT CENTER\n     *\n     * @for CanvasController\n     * @method canvas_draw_future_track_fixes\n     * @param cc {HTMLCanvasContext}\n     * @param aircraft {AircraftModel}\n     * @param future_track\n     * @returns undefined\n     */\n    canvas_draw_future_track_fixes(/* cc, aircraft, future_track */) {\n        // const waypointList = aircraft.fms.waypoints;\n\n        // if (waypointList.length <= 1) {\n        //     return;\n        // }\n\n        // const start = future_track.length - 1;\n        // const [x, y] = CanvasStageModel.calculateRoundedCanvasPositionFromRelativePosition(future_track[start]);\n\n        // cc.beginPath();\n        // cc.moveTo(x, y);\n        // cc.setLineDash([3, 10]);\n\n        // for (let i = 0; i < waypointList.length; i++) {\n        //     const [fx, fy] = CanvasStageModel.calculateRoundedCanvasPositionFromRelativePosition(\n        //         waypointList[i].relativePosition\n        //     );\n\n        //     cc.lineTo(fx, fy);\n        // }\n\n        // cc.stroke();\n    }\n\n    /**\n     * Run physics updates into the future, draw future track\n     *\n     * POSITIONING: Before calling this method, translate to the AIRPORT CENTER\n     *\n     * @for CanvasController\n     * @method _drawAircraftFuturePath\n     * @param cc {HTMLCanvasContext}\n     * @param aircraftModel {AircraftModel}\n     * @param selected {boolean}\n     * @private\n     */\n    _drawAircraftFuturePath(cc, aircraftModel, selected) {\n        if (aircraftModel.isTaxiing() || TimeKeeper.simulationRate !== 1) {\n            return;\n        }\n\n        let was_locked = false;\n        const future_track = [];\n        const fms_twin = _cloneDeep(aircraftModel.fms);\n        const twin = _cloneDeep(aircraftModel);\n\n        twin.fms = fms_twin;\n        twin.projected = true;\n        TimeKeeper.saveDeltaTimeBeforeFutureTrackCalculation();\n\n        for (let i = 0; i < 60; i++) {\n            twin.update();\n\n            const ils_locked = twin.isEstablishedOnCourse() && twin.fms.currentPhase === FLIGHT_PHASE.APPROACH;\n\n            future_track.push([...twin.relativePosition, ils_locked]);\n\n            if (ils_locked && twin.altitude < 500) {\n                break;\n            }\n        }\n\n        TimeKeeper.restoreDeltaTimeAfterFutureTrackCalculation();\n\n        cc.save();\n\n        // future track colors\n        let strokeStyle = this.theme.RADAR_TARGET.PROJECTION_ARRIVAL_ALL;\n\n        if (aircraftModel.category === FLIGHT_CATEGORY.DEPARTURE) {\n            if (selected) {\n                strokeStyle = this.theme.RADAR_TARGET.PROJECTION_DEPARTURE;\n            } else {\n                strokeStyle = this.theme.RADAR_TARGET.PROJECTION_DEPARTURE_ALL;\n            }\n        } else if (selected) {\n            strokeStyle = this.theme.RADAR_TARGET.PROJECTION_ARRIVAL;\n        }\n\n        cc.strokeStyle = strokeStyle;\n        cc.globalCompositeOperation = 'screen';\n        cc.lineWidth = 2;\n        cc.beginPath();\n\n        for (let i = 0; i < future_track.length; i++) {\n            const track = future_track[i];\n            const ils_locked = track[2];\n            const trackPosition = CanvasStageModel.calculatePreciseCanvasPositionFromRelativePosition(track);\n\n            if (ils_locked && !was_locked) {\n                cc.lineTo(trackPosition[0], trackPosition[1]);\n                // end the current path, start a new path with lockedStroke\n                cc.stroke();\n                cc.strokeStyle = this.theme.RADAR_TARGET.PROJECTION_ESTABLISHED_ON_APPROACH;\n                cc.lineWidth = 2;\n                cc.beginPath();\n                cc.moveTo(trackPosition[0], trackPosition[1]);\n\n                was_locked = true;\n\n                continue;\n            }\n\n            if (i === 0) {\n                cc.moveTo(trackPosition[0], trackPosition[1]);\n            } else {\n                cc.lineTo(trackPosition[0], trackPosition[1]);\n            }\n        }\n\n        cc.stroke();\n\n        // TODO: following method not in use, leaving for posterity\n        // this.canvas_draw_future_track_fixes(cc, twin, future_track);\n\n        cc.restore();\n    }\n\n    /**\n     * Draw the `MeasureTool` path and text labels\n     *\n     * POSITIONING: Before calling this method, ensure NO TRANSLATION has occurred\n     *\n     * @for CanvasController\n     * @method _drawMeasureTool\n     * @param cc {HTMLCanvasContext}\n     * @returns undefined\n     * @private\n     */\n    _drawMeasureTool(cc) {\n        if (!MeasureTool.hasPaths) {\n            return;\n        }\n\n        const pathInfoList = MeasureTool.buildPathInfo();\n\n        cc.save();\n        this._ccTranslateFromCanvasOriginToAirportCenter(cc);\n\n        pathInfoList.forEach((pathInfo) => {\n            this._drawMeasureToolPath(cc, pathInfo);\n            this._drawMeasureToolLabels(cc, pathInfo);\n        });\n\n        cc.restore();\n    }\n\n    /**\n     * Draw the `MeasureTool` text labels\n     *\n     * POSITIONING: Before calling this method, translate to the AIRPORT CENTER\n     *\n     * @for CanvasController\n     * @method _drawMeasureToolLabels\n     * @param cc {HTMLCanvasContext}\n     * @param pathInfo {object} as returned by `MeasureTools.getPointsAndLabels()`\n     * @returns undefined\n     * @private\n     */\n    _drawMeasureToolLabels(cc, pathInfo) {\n        let leg = pathInfo.firstLeg;\n        const values = [];\n        const labelPadding = 5;\n\n        // This way the points are translated only once\n        while (leg != null) {\n            // Ignore empty labels\n            if (leg.labels !== null && leg.labels.length !== 0) {\n                const position = CanvasStageModel.calculatePreciseCanvasPositionFromRelativePosition(leg.midPoint);\n\n                values.push({\n                    x: position[0],\n                    y: position[1],\n                    labels: leg.labels\n                });\n            }\n\n            leg = leg.next;\n        }\n\n        // Shortcut if there are no labels (line is too short)\n        if (values.length === 0) {\n            return;\n        }\n\n        cc.save();\n\n        // Label backgrounds\n        cc.fillStyle = this.theme.SCOPE.MEASURE_BACKGROUND;\n        cc.font = this.theme.DATA_BLOCK.TEXT_FONT;\n\n        values.forEach((item) => {\n            const { x, y, labels } = item;\n            const height = (2 * labelPadding) + (12 * labels.length);\n            const maxLabelWidth = labels.reduce((lastWidth, label) => {\n                const newWidth = cc.measureText(label).width;\n\n                return Math.max(lastWidth, newWidth);\n            }, 0);\n            const width = (2 * labelPadding) + maxLabelWidth;\n\n            cc.fillRect(x, y, width, height);\n        });\n\n        // Label text\n        cc.fillStyle = this.theme.SCOPE.MEASURE_TEXT;\n\n        values.forEach((item) => {\n            const { labels } = item;\n            const x = item.x + labelPadding;\n            const y = item.y + 15;\n\n            labels.forEach((line, index) => {\n                cc.fillText(line, x, y + (12 * index));\n            });\n        });\n\n        cc.restore();\n    }\n\n    /**\n     * Draw the `MeasureTool` path\n     *\n     * POSITIONING: Before calling this method, translate to the AIRPORT CENTER\n     *\n     * @for CanvasController\n     * @method _drawMeasureToolPath\n     * @param cc {HTMLCanvasContext}\n     * @param pathInfo {object} as returned by `MeasureTools.getPointsAndLabels()`\n     * @returns undefined\n     * @private\n     */\n    _drawMeasureToolPath(cc, pathInfo) {\n        const { initialTurn } = pathInfo;\n        let leg = pathInfo.firstLeg;\n        const firstPoint = CanvasStageModel.calculatePreciseCanvasPositionFromRelativePosition(leg.startPoint);\n        const firstMidPoint = CanvasStageModel.calculatePreciseCanvasPositionFromRelativePosition(leg.midPoint);\n\n        cc.save();\n\n        cc.strokeStyle = this.theme.SCOPE.MEASURE_LINE;\n\n        cc.beginPath();\n\n        // If available, this draws the arc the a/c will fly to intercept the course to the\n        // first fix\n        if (initialTurn !== null) {\n            const {\n                isRHT, center, entryAngle, exitAngle, turnRadius\n            } = initialTurn;\n            const position = CanvasStageModel.calculatePreciseCanvasPositionFromRelativePosition(center);\n            const radius = CanvasStageModel._translateKilometersToPixels(turnRadius);\n\n            // The angles calculated in the `MeasureTool` are magnetic, and have to be shifted CCW 90°\n            cc.arc(position[0], position[1], radius, entryAngle - Math.PI / 2, exitAngle - Math.PI / 2, !isRHT);\n        }\n\n        // Draw up to the first midpoint\n        cc.moveTo(firstPoint[0], firstPoint[1]);\n        cc.lineTo(firstMidPoint[0], firstMidPoint[1]);\n\n        // Iterate through the linked list\n        while (leg != null) {\n            const { next } = leg;\n            const radius = CanvasStageModel._translateKilometersToPixels(leg.radius);\n            const position1 = CanvasStageModel.calculatePreciseCanvasPositionFromRelativePosition(leg.endPoint);\n\n            if (next === null) {\n                // This is the last leg, so simply draw to the end point\n                cc.lineTo(position1[0], position1[1]);\n            } else {\n                // Draw an arc'd line to the next midpoint\n                const position2 = CanvasStageModel.calculatePreciseCanvasPositionFromRelativePosition(next.midPoint);\n\n                cc.arcTo(position1[0], position1[1], position2[0], position2[1], radius);\n                cc.lineTo(position2[0], position2[1]);\n            }\n\n            leg = next;\n        }\n\n        cc.stroke();\n\n        cc.restore();\n    }\n\n    /**\n     * Draw the RADAR RETURN AND HISTORY DOTS ONLY of all radar target models\n     *\n     * POSITIONING: Before calling this method, ensure NO TRANSLATION has occurred\n     *\n     * @for CanvasController\n     * @method _drawRadarTargetList\n     * @param cc {HTMLCanvasContext}\n     * @returns undefined\n     * @private\n     */\n\n    _drawRadarTargetList(cc) {\n        cc.font = BASE_CANVAS_FONT;\n        cc.save();\n        this._ccTranslateFromCanvasOriginToAirportCenter(cc);\n\n        const radarTargetModels = this._scopeModel.radarTargetCollection.items;\n\n        for (let i = 0; i < radarTargetModels.length; i++) {\n            this._drawSingleRadarTarget(cc, radarTargetModels[i]);\n        }\n\n        cc.restore();\n    }\n\n    /**\n     * Draw an aircraft's data block\n     * (box that contains callsign, altitude, speed)\n     *\n     * POSITIONING: Before calling this method, translate to the AIRPORT CENTER\n     *\n     * @for CanvasController\n     * @method _drawSingleAircraftDataBlock\n     * @param cc {HTMLCanvasContext}\n     * @param radarTargetModel {RadarTargetModel}\n     * @returns undefined\n     * @private\n     */\n    _drawSingleAircraftDataBlock(cc, radarTargetModel) {\n        const { aircraftModel } = radarTargetModel;\n\n        if (!aircraftModel.isVisible() || aircraftModel.hit) {\n            return;\n        }\n\n        cc.save();\n\n        const paddingLR = 5;\n        let match = false;\n\n        // Callsign Matching\n        if (prop.input.callsign.length > 0 && aircraftModel.matchCallsign(prop.input.callsign)) {\n            match = true;\n        }\n\n        let white = aircraftModel.isControllable ?\n            this.theme.DATA_BLOCK.TEXT_IN_RANGE :\n            this.theme.DATA_BLOCK.TEXT_OUT_OF_RANGE;\n\n        if (match) {\n            white = this.theme.DATA_BLOCK.TEXT_SELECTED;\n        }\n\n        cc.textBaseline = 'middle';\n\n        let { dataBlockLeaderDirection } = radarTargetModel;\n\n        if (dataBlockLeaderDirection === INVALID_NUMBER) {\n            dataBlockLeaderDirection = this.theme.DATA_BLOCK.LEADER_DIRECTION;\n        }\n\n        let offsetComponent = [\n            Math.sin(degreesToRadians(dataBlockLeaderDirection)),\n            -Math.cos(degreesToRadians(dataBlockLeaderDirection))\n        ];\n\n        // `degreesToRadians('ctr')` above will yield NaN, so we override that here\n        if (dataBlockLeaderDirection === 'ctr') {\n            offsetComponent = [0, 0];\n        }\n\n        // Move to center of where the data block is to be drawn\n        const radarTargetPosition = CanvasStageModel.calculateRoundedCanvasPositionFromRelativePosition(\n            aircraftModel.relativePosition\n        );\n        const leaderLength = this._calculateLeaderLength(radarTargetModel.dataBlockLeaderLength);\n        const leaderStart = [\n            radarTargetPosition[0] + (offsetComponent[0] * this.theme.DATA_BLOCK.LEADER_PADDING_FROM_TARGET_PX),\n            radarTargetPosition[1] + (offsetComponent[1] * this.theme.DATA_BLOCK.LEADER_PADDING_FROM_TARGET_PX)\n        ];\n        const leaderEnd = [\n            radarTargetPosition[0] + offsetComponent[0] * (leaderLength - this.theme.DATA_BLOCK.LEADER_PADDING_FROM_BLOCK_PX),\n            radarTargetPosition[1] + offsetComponent[1] * (leaderLength - this.theme.DATA_BLOCK.LEADER_PADDING_FROM_BLOCK_PX)\n        ];\n        const leaderIntersectionWithBlock = [\n            radarTargetPosition[0] + offsetComponent[0] * leaderLength,\n            radarTargetPosition[1] + offsetComponent[1] * leaderLength\n        ];\n\n        cc.beginPath();\n        cc.moveTo(...leaderStart);\n        cc.lineTo(...leaderEnd);\n        cc.strokeStyle = white;\n        cc.stroke();\n\n        const dataBlockCenterCanvasPosition = radarTargetModel.calculateDataBlockCenter(leaderIntersectionWithBlock);\n\n        cc.translate(...dataBlockCenterCanvasPosition);\n\n        this._drawLegacyDatablock(cc, aircraftModel);\n\n        // height of TOTAL vertical space between the rows (0 for touching)\n        const gap = 3;\n        const lineheight = 4.5; // height of text row (used for spacing basis)\n        const row1text = radarTargetModel.buildDataBlockRowOne();\n        let row2text = radarTargetModel.buildDataBlockRowTwoPrimaryInfo();\n\n        if (this.shouldShowSecondaryDataBlock()) {\n            row2text = radarTargetModel.buildDataBlockRowTwoSecondaryInfo();\n        }\n\n        const fillStyle = aircraftModel.isControllable ?\n            this.theme.DATA_BLOCK.TEXT_IN_RANGE :\n            this.theme.DATA_BLOCK.TEXT_OUT_OF_RANGE;\n\n        cc.fillStyle = fillStyle;\n\n        // Draw full datablock text\n        cc.font = this.theme.DATA_BLOCK.TEXT_FONT;\n        cc.textAlign = 'left';\n        cc.fillText(row1text, -this.theme.DATA_BLOCK.HALF_WIDTH + paddingLR, -gap / 2 - lineheight);\n        cc.fillText(row2text, -this.theme.DATA_BLOCK.HALF_WIDTH + paddingLR, gap / 2 + lineheight);\n        cc.font = BASE_CANVAS_FONT;\n\n        cc.restore();\n    }\n\n    /**\n     * Draw the legacy dataBlock\n     *\n     * POSITIONING: Before calling this method, translate to the AIRCRAFT'S DATA BLOCK CENTER\n     *\n     * @for CanvasController\n     * @method\n     * @param {HTMLCanvasContext} cc\n     * @param {AircraftModel} aircraftModel\n     * @returns undefined\n     * @private\n     */\n    _drawLegacyDatablock(cc, aircraftModel) {\n        if (!this.theme.DATA_BLOCK.HAS_FILL) {\n            return;\n        }\n\n        // TODO: logic and math here should be done once and not every frame. this could be moved to the `RadarTargetModel`\n        // width of datablock (scales to fit callsign)\n        const width = this.theme.DATA_BLOCK.WIDTH; // clamp(1, 6 * callsign.length) + (paddingLR * 2);\n        const halfWidth = this.theme.DATA_BLOCK.HALF_WIDTH; // width / 2;\n        // height of datablock\n        const height = this.theme.DATA_BLOCK.HEIGHT; // 31;\n        const halfHeight = this.theme.DATA_BLOCK.HALF_HEIGHT; // height / 2;\n        // width of colored bar\n        const barWidth = 3;\n        const barHalfWidth = barWidth / 2;\n        // const ILS_enabled = aircraftModel.pilot.hasApproachClearance;\n        const lock_size = height / 3;\n        const lock_offset = lock_size / 8;\n        const point1 = lock_size - barHalfWidth;\n        const a = point1 - lock_offset;\n        const b = barHalfWidth;\n        const clipping_mask_angle = Math.atan(b / a);\n        // describes how far around to arc the arms of the ils lock case\n        const pi_slice = Math.PI / 24;\n        let match = false;\n\n        // Callsign Matching\n        if (prop.input.callsign.length > 0 && aircraftModel.matchCallsign(prop.input.callsign)) {\n            match = true;\n        }\n\n        // set color, intensity, and style elements\n        let red = this.theme.DATA_BLOCK.ARRIVAL_BAR_OUT_OF_RANGE;\n        let green = this.theme.DATA_BLOCK.BACKGROUND_OUT_OF_RANGE;\n        let blue = this.theme.DATA_BLOCK.DEPARTURE_BAR_OUT_OF_RANGE;\n        let white = this.theme.DATA_BLOCK.TEXT_OUT_OF_RANGE;\n\n        if (aircraftModel.isControllable) {\n            red = this.theme.DATA_BLOCK.ARRIVAL_BAR_IN_RANGE;\n            green = this.theme.DATA_BLOCK.BACKGROUND_IN_RANGE;\n            blue = this.theme.DATA_BLOCK.DEPARTURE_BAR_IN_RANGE;\n            white = this.theme.DATA_BLOCK.TEXT_IN_RANGE;\n\n            if (match) {\n                red = this.theme.DATA_BLOCK.ARRIVAL_BAR_SELECTED;\n                green = this.theme.DATA_BLOCK.BACKGROUND_SELECTED;\n                blue = this.theme.DATA_BLOCK.DEPARTURE_BAR_SELECTED;\n                white = this.theme.DATA_BLOCK.TEXT_SELECTED;\n            }\n        }\n\n        // Draw datablock shapes\n        if (!aircraftModel.pilot.hasApproachClearance && this.theme.DATA_BLOCK.HAS_FILL) {\n            // data block box background fill\n            cc.fillStyle = green;\n            cc.fillRect(-halfWidth, -halfHeight, width, height);\n\n            // Draw colored bar\n            cc.fillStyle = (aircraftModel.category === FLIGHT_CATEGORY.DEPARTURE) ? blue : red;\n            cc.fillRect(-halfWidth - barWidth, -halfHeight, barWidth, height);\n\n            return;\n        }\n\n        // Box with ILS Lock Indicator\n        cc.save();\n\n        // Draw green part of box (excludes space where ILS Clearance Indicator juts in)\n        cc.fillStyle = green;\n        cc.beginPath();\n        cc.moveTo(-halfWidth, halfHeight); // bottom-left corner\n        cc.lineTo(halfWidth, halfHeight); // bottom-right corner\n        cc.lineTo(halfWidth, -halfHeight); // top-right corner\n        cc.lineTo(-halfWidth, -halfHeight); // top-left corner\n        cc.lineTo(-halfWidth, -point1); // begin side cutout\n        cc.arc(-halfWidth - barHalfWidth,\n            -lock_offset, lock_size / 2 + barHalfWidth,\n            clipping_mask_angle - Math.PI / 2,\n            0);\n        cc.lineTo(-halfWidth + lock_size / 2, lock_offset);\n        cc.arc(-halfWidth - barHalfWidth,\n            lock_offset,\n            lock_size / 2 + barHalfWidth,\n            0,\n            Math.PI / 2 - clipping_mask_angle);\n        cc.closePath();\n        cc.fill();\n\n        // Draw ILS Clearance Indicator\n        cc.translate(-halfWidth - barHalfWidth, 0);\n        cc.lineWidth = barWidth;\n        cc.strokeStyle = red;\n        cc.beginPath(); // top arc start\n        cc.arc(0, -lock_offset, lock_size / 2, -pi_slice, Math.PI + pi_slice, true);\n        cc.moveTo(0, -lock_size / 2);\n        cc.lineTo(0, -halfHeight);\n        cc.stroke(); // top arc end\n        cc.beginPath(); // bottom arc start\n        cc.arc(0, lock_offset, lock_size / 2, pi_slice, Math.PI - pi_slice);\n        cc.moveTo(0, lock_size - barWidth);\n        cc.lineTo(0, halfHeight);\n        cc.stroke(); // bottom arc end\n\n        if (aircraftModel.isEstablishedOnCourse()) {\n            // Localizer Capture Indicator\n            cc.fillStyle = white;\n            cc.beginPath();\n            cc.arc(0, 0, lock_size / 5, 0, Math.PI * 2);\n            cc.fill(); // Draw Localizer Capture Dot\n        }\n\n        cc.translate(halfWidth + barHalfWidth, 0);\n        // unclear how this works...\n        cc.beginPath(); // if removed, white lines appear on top of bottom half of lock case\n        cc.stroke(); // if removed, white lines appear on top of bottom half of lock case\n\n        cc.restore();\n    }\n\n    /**\n     * Draw data blocks for each aircraft\n     *\n     * POSITIONING: Before calling this method, ensure NO TRANSLATION has occurred\n     *\n     * @for CanvasController\n     * @method _drawAircraftDataBlocks\n     * @param cc {HTMLCanvasContext}\n     * @returns undefined\n     * @private\n     */\n    _drawAircraftDataBlocks(cc) {\n        const radarTargetModels = this._scopeModel.radarTargetCollection.items;\n\n        cc.save();\n        this._ccTranslateFromCanvasOriginToAirportCenter(cc);\n\n        for (let i = 0; i < radarTargetModels.length; i++) {\n            this._drawSingleAircraftDataBlock(cc, radarTargetModels[i]);\n        }\n\n        cc.restore();\n    }\n\n    /**\n     * Draw and fill all airspace boundaries, and draw range rings clipped to that area\n     *\n     * POSITIONING: Before calling this method, ensure NO TRANSLATION has occurred\n     *\n     * @for CanvasController\n     * @method _drawAirspaceAndRangeRings\n     * @param cc {HTMLCanvasContext}\n     * @returns undefined\n     * @private\n     */\n    _drawAirspaceAndRangeRings(cc) {\n        cc.save();\n\n        // translate to airport center\n        this._ccTranslateFromCanvasOriginToAirportCenter(cc);\n        this._drawAirspaceBorder(cc); // includes the .clip() used by ._drawRangeRings()\n        this._drawRangeRings(cc);\n\n        cc.restore();\n    }\n\n    // TODO: To round, or not to round?\n    /**\n     * From the canvas origin, cc.translate() to the airport center, adjusting for user panning\n     *\n     * @for CanvasController\n     * @method _ccTranslateFromCanvasOriginToAirportCenter\n     * @param cc {HTMLCanvasContext}\n     * @returns undefined\n     * @private\n     */\n    _ccTranslateFromCanvasOriginToAirportCenter(cc) {\n        cc.translate(\n            round(CanvasStageModel.halfWidth),\n            round(CanvasStageModel.halfHeight)\n        );\n    }\n\n    // TODO: To round, or not to round?\n    /**\n     * From the airport center, cc.translate() to the canvas origin, adjusting for user panning\n     *\n     * @for CanvasController\n     * @method _ccTranslateFromAirportCenterToCanvasOrigin\n     * @param cc {HTMLCanvasContext}\n     * @returns undefined\n     * @private\n     */\n    _ccTranslateFromAirportCenterToCanvasOrigin(cc) {\n        cc.translate(\n            -round(CanvasStageModel.halfWidth),\n            -round(CanvasStageModel.halfHeight)\n        );\n    }\n\n    /**\n     * Draw range rings\n     *\n     * POSITIONING: Before calling this method, translate to the AIRPORT CENTER\n     *\n     * @for CanvasController\n     * @method _drawRangeRings\n     * @param cc {HTMLCanvasContext}\n     * @returns undefined\n     * @private\n     */\n    _drawRangeRings(cc) {\n        const airportModel = AirportController.airport_get();\n        const centerCanvasPosition = CanvasStageModel.calculatePreciseCanvasPositionFromRelativePosition(\n            airportModel.rangeRings.center.relativePosition\n        );\n        const ringRadiusKm = this._calculateRangeRingRadiusKm(airportModel);\n\n        if (ringRadiusKm === 0) { // prevent infinite loop\n            return;\n        }\n\n        cc.save();\n\n        cc.linewidth = 1;\n        cc.strokeStyle = this.theme.SCOPE.RANGE_RING_COLOR;\n\n        // Fill up airportModel's ctr_radius with rings of the specified radius\n        for (let i = 1; i * ringRadiusKm < airportModel.ctr_radius * 3; i++) {\n            cc.beginPath();\n            cc.arc(...centerCanvasPosition, ringRadiusKm * CanvasStageModel.scale * i, 0, tau());\n            cc.stroke();\n        }\n\n        cc.restore();\n    }\n\n    /**\n     * Draw polygonal airspace border\n     *\n     * POSITIONING: Before calling this method, translate to the AIRPORT CENTER\n     *\n     * @for CanvasController\n     * @method _drawAirspaceBorder\n     * @param cc {HTMLCanvasContext}\n     * @returns undefined\n     * @private\n     */\n    _drawAirspaceBorder(cc) {\n        cc.save();\n\n        const airport = AirportController.airport_get();\n        cc.strokeStyle = this.theme.SCOPE.AIRSPACE_PERIMETER;\n        cc.fillStyle = this.theme.SCOPE.AIRSPACE_FILL;\n\n        for (let i = 0; i < airport.airspace.length; i++) {\n            const airspace = airport.airspace[i];\n\n            this._drawRelativePoly(cc, airspace.relativePoly, true);\n        }\n\n        // this only includes the last polygon... and therefore does not support multiple\n        // airspace shelves, which are now supported elsewhere in the app. Removing for now.\n        // cc.clip();\n\n        cc.restore();\n    }\n\n    /**\n     * Draw individual airspace shelves, each labeled by index and altitude(s)\n     *\n     * POSITIONING: Before calling this method, ensure NO TRANSLATION has occurred\n     *\n     * @for CanvasController\n     * @method _drawAirspaceShelvesAndLabels\n     * @param cc {HTMLCanvasContext}\n     * @returns undefined\n     * @private\n     */\n    _drawAirspaceShelvesAndLabels(cc) {\n        if (!this._shouldDrawAirspace) {\n            return;\n        }\n\n        cc.save();\n\n        const airport = AirportController.airport_get();\n        cc.strokeStyle = 'rgba(224, 128, 128, 1.0)';\n        cc.fillStyle = 'rgba(224, 128, 128, 1.0)';\n        cc.font = '12px monoOne, monospace';\n        cc.textAlign = 'center';\n        cc.textBaseline = 'middle';\n\n        for (let i = 0; i < airport.airspace.length; i++) {\n            const airspace = airport.airspace[i];\n\n            cc.save(); // to allow reset of translation\n            // required positioning to use _drawPoly\n            this._ccTranslateFromCanvasOriginToAirportCenter(cc);\n            // draw lines\n            this._drawRelativePoly(cc, airspace.relativePoly, false);\n\n            const bottomFlightLevel = leftPad(Math.floor(airspace.floor / 100), 3);\n            const topFlightLevel = leftPad(Math.ceil(airspace.ceiling / 100), 3);\n            const content = `${bottomFlightLevel}-${topFlightLevel} (#${i})`;\n\n            cc.restore(); // reset from translation used for poly above\n            cc.save();\n            // required positioning to use _drawText\n            this._ccTranslateFromCanvasOriginToAirportCenter(cc);\n\n            // draw labels\n            for (const labelRelativePosition of airspace.labelRelativePositions) {\n                this._drawText(cc, labelRelativePosition, [content]);\n            }\n\n            cc.restore();\n        }\n\n        cc.restore();\n    }\n\n    /**\n     * Calculates the range ring radius\n     *\n     * Returns radius of 0 if rings should not be drawn\n     *\n     * @for CanvasController\n     * @method _calculateRangeRingRadiusKm\n     * @param airportModel {AirportModel}\n     * @returns {number} radius to use for range rings, in km\n     * @private\n     */\n    _calculateRangeRingRadiusKm(airportModel) {\n        const userValue = GameController.getGameOption(GAME_OPTION_NAMES.RANGE_RINGS);\n        const useDefault = userValue === 'default';\n        const defaultRangeRings = airportModel.rangeRings;\n\n        if (userValue === 'off' || (useDefault && defaultRangeRings.enabled === false)) {\n            return 0;\n        }\n\n        if (!useDefault) {\n            return km(parseInt(userValue, DECIMAL_RADIX));\n        }\n\n        return km(defaultRangeRings.radius_nm);\n    }\n\n    /**\n     * Draw the provided polygon to the specified canvas\n     *\n     * POSITIONING: Before calling this method, translate to the AIRPORT CENTER\n     *\n     * This method does not itself provide any specific color/width/etc properties. These must be\n     * set prior to calling this method.\n     *\n     * @for CanvasController\n     * @method _drawPoly\n     * @param cc {HTMLCanvasContext}\n     * @param relativePoly {array<array<number, number>>} an array of relative positions to draw as a polygon\n     * @param fill {boolean} whether to fill the polygon\n     * @returns undefined\n     * @private\n     */\n    _drawRelativePoly(cc, relativePoly, fill = true) {\n        cc.beginPath();\n\n        for (let i = 0; i < relativePoly.length; i++) {\n            const pointRelativePos = relativePoly[i];\n            const pointCanvasPos = CanvasStageModel.calculateRoundedCanvasPositionFromRelativePosition(pointRelativePos);\n\n            cc.lineTo(...pointCanvasPos);\n        }\n\n        cc.closePath();\n        cc.stroke();\n\n        if (fill) {\n            cc.fill();\n        }\n    }\n\n    /**\n     * Draw terrain contours for a SPECIFIC elevation\n     *\n     * POSITIONING: Before calling this method, translate to the AIRPORT CENTER\n     *\n     * @for CanvasController\n     * @method _drawTerrainAtElevation\n     * @param cc {HTMLCanvasContext}\n     * @param terrainLevel {object}\n     * @param elevation {number} elevation, in ft\n     * @returns undefined\n     * @private\n     */\n    _drawTerrainAtElevation(cc, terrainLevel, elevation) {\n        // Here we use HSL colors instead of RGB to enable easier bulk adjustments\n        // to saturation/lightness of multiple elevation levels without the need\n        // to use web-based color tools\n        const color = `hsla(${this.theme.TERRAIN.COLOR[elevation]}`;\n\n        cc.save();\n\n        cc.strokeStyle = `${color}, ${this.theme.TERRAIN.BORDER_OPACITY})`;\n        cc.fillStyle = `${color}, ${this.theme.TERRAIN.FILL_OPACITY})`;\n\n        for (let i = 0; i < terrainLevel.length; i++) {\n            const terrainGroup = terrainLevel[i];\n\n            cc.beginPath();\n\n            for (let j = 0; j < terrainGroup.length; j++) {\n                const terrainItem = terrainGroup[j];\n\n                for (let k = 0; k < terrainItem.length; k++) {\n                    const canvasPosition = CanvasStageModel.calculateRoundedCanvasPositionFromRelativePosition(terrainItem[k]);\n\n                    if (k === 0) { // .moveTo() to start the line\n                        cc.moveTo(...canvasPosition);\n                        // cc.moveTo(\n                        //     CanvasStageModel._translateKilometersToPixels(terrainItem[k][0]),\n                        //     -CanvasStageModel._translateKilometersToPixels(terrainItem[k][1])\n                        // );\n                    } else { // .lineTo() to draw a line segment\n                        cc.lineTo(...canvasPosition);\n                        // cc.lineTo(\n                        //     CanvasStageModel._translateKilometersToPixels(terrainItem[k][0]),\n                        //     -CanvasStageModel._translateKilometersToPixels(terrainItem[k][1])\n                        // );\n                    }\n                }\n\n                cc.closePath();\n            }\n\n            cc.fill();\n            cc.stroke();\n        }\n\n        cc.restore();\n    }\n\n    /**\n     * Draw the terrain legend in the upper right hand corner of the scope view\n     *\n     * POSITIONING: Before calling this method, translate to the AIRPORT CENTER\n     *\n     * @for CanvasController\n     * @method _drawTerrainElevationLegend\n     * @param  cc  {HTMLCanvasContext}\n     * @param max_elevation {number}\n     * @returns undefined\n     * @private\n     */\n    _drawTerrainElevationLegend(cc, max_elevation) {\n        cc.save();\n        cc.font = BASE_CANVAS_FONT;\n        cc.lineWidth = 1;\n\n        const offset = 10;\n        const { width } = CanvasStageModel;\n        const { height } = CanvasStageModel;\n        const box_width = 30;\n        const box_height = 5;\n\n        for (let i = 0; i <= max_elevation; i += 1000) {\n            cc.save();\n            // translate coordinates for every block to not use these X & Y twice in rect and text\n            // .5 in X and Y coordinates are used to make 1px rectangle fit exactly into 1 px\n            // and not be blurred\n            cc.translate(\n                width / 2 - 170 - (max_elevation - i) / 1000 * (box_width + 1),\n                -height / 2 + offset + 0.5\n            );\n            cc.beginPath();\n            cc.rect(0, 0, box_width - 1, box_height);\n            cc.closePath();\n\n            // in the map, terrain of higher levels has fill of all the lower levels\n            // so we need to fill it below exactly as in the map\n            for (let j = 0; j <= i; j += 1000) {\n                cc.fillStyle = `hsla(${this.theme.TERRAIN.COLOR[j]}, ${this.theme.TERRAIN.FILL_OPACITY})`;\n                cc.fill(); // 'rgba(32, 64, 72, 1.0)'\n            }\n\n            cc.strokeStyle = `hsla(${this.theme.TERRAIN.COLOR[i]}, ${this.theme.TERRAIN.BORDER_OPACITY})`;\n            cc.stroke();\n\n            // write elevation signs only for the outer elevations\n            const labeledAltitudes = [0, 5000, 10000, 15000, 20000, 25000, 30000].filter((alt) => {\n                return alt < max_elevation - 1001;\n            });\n\n            if (i === max_elevation || labeledAltitudes.indexOf(i) !== INVALID_INDEX) {\n                cc.fillStyle = this.theme.SCOPE.FIX_FILL;\n                cc.textAlign = 'center';\n                cc.textBaseline = 'top';\n                const text = i === 0 ? 'MSL' : `${i}'`;\n\n                cc.fillText(text, box_width / 2 + 0.5, offset + 2);\n            }\n\n            cc.restore();\n        }\n\n        cc.restore();\n    }\n\n    /**\n     * Draw all terrain contours and legend\n     *\n     * POSITIONING: Before calling this method, ensure NO TRANSLATION has occurred\n     *\n     * @for CanvasController\n     * @method _drawTerrain\n     * @param cc {HTMLCanvasContext}\n     * @returns undefined\n     * @private\n     */\n    _drawTerrain(cc) {\n        const airport = AirportController.airport_get();\n        const airportTerrain = airport.terrain;\n        let max_elevation = 0;\n\n        if (!this._shouldDrawTerrain || Object.keys(airportTerrain).length === 0) {\n            return;\n        }\n\n        cc.save();\n        this._ccTranslateFromCanvasOriginToAirportCenter(cc);\n        // Terrain key rectangles' outline stroke color\n        // Also determines color of terrain outline drawn at '0ft'\n        cc.strokeStyle = this.theme.SCOPE.FIX_FILL;\n        // Somehow used to tint the terrain key rectangles' fill color\n        // Also determines color of terrain fill at '0ft'\n        cc.fillStyle = this.theme.SCOPE.FIX_FILL;\n        cc.lineWidth = clamp(0.5, (CanvasStageModel.scale / 10), 2);\n        cc.lineJoin = 'round';\n\n        for (const elevation in airportTerrain) {\n            // eslint-disable-next-line\n            if (!airportTerrain.hasOwnProperty(elevation)) {\n                continue;\n            }\n\n            const terrainLevel = airportTerrain[elevation];\n\n            if (elevation < 0 && !this._hasSeenTerrainWarning) {\n                console.warn(`${airport.icao}.geojson contains 'terrain' ` +\n                    ' below sea level, which is not supported!');\n\n                this._hasSeenTerrainWarning = true;\n\n                continue;\n            }\n\n            max_elevation = Math.max(max_elevation, elevation);\n\n            this._drawTerrainAtElevation(cc, terrainLevel, elevation);\n        }\n\n        if (max_elevation !== 0) {\n            this._drawTerrainElevationLegend(cc, max_elevation);\n        }\n\n        cc.restore();\n    }\n\n    /**\n     * Draw restricted airspace and labels\n     *\n     * POSITIONING: Before calling this method, ensure NO TRANSLATION has occurred\n     *\n     * @for CanvasController\n     * @method _drawRestrictedAirspace\n     * @param cc {HTMLCanvasContext}\n     * @returns undefined\n     * @private\n     */\n    _drawRestrictedAirspace(cc) {\n        if (!this._shouldDrawRestrictedAreas) {\n            return;\n        }\n\n        cc.save();\n        this._ccTranslateFromCanvasOriginToAirportCenter(cc);\n\n        cc.fillStyle = this.theme.SCOPE.RESTRICTED_AIRSPACE;\n        cc.strokeStyle = this.theme.SCOPE.RESTRICTED_AIRSPACE;\n        cc.lineWidth = Math.max(CanvasStageModel.scale / 3, 2);\n        cc.lineJoin = 'round';\n        cc.font = BASE_CANVAS_FONT;\n        cc.textAlign = 'center';\n        cc.textBaseline = 'top';\n\n        const airportModel = AirportController.airport_get();\n\n        for (let i = 0; i < airportModel.restricted_areas.length; i++) {\n            const area = airportModel.restricted_areas[i];\n            const areaRelativePositions = area.poly;\n\n            this._drawRelativePoly(cc, areaRelativePositions, false);\n\n            const height = area.height === Infinity ? 'UNL' : `FL ${Math.ceil(area.height / 1000) * 10}`;\n\n            for (let j = 0; j < area.labelRelativePositions.length; j++) {\n                const canvasPosition = CanvasStageModel.calculateRoundedCanvasPositionFromRelativePosition(\n                    area.labelRelativePositions[j]\n                );\n                let linePaddingPx = 0;\n\n                if (area.name) {\n                    linePaddingPx = 6;\n                    const nameLineCanvasPosition = [canvasPosition[0], canvasPosition[1] - linePaddingPx];\n\n                    cc.fillText(area.name, ...nameLineCanvasPosition);\n                }\n\n                const altLineCanvasPosition = [canvasPosition[0], canvasPosition[1] + linePaddingPx];\n\n                cc.fillText(height, ...altLineCanvasPosition);\n            }\n        }\n\n        cc.restore();\n    }\n\n    /**\n     * Draw all active video map(s)\n     *\n     * POSITIONING: Before calling this method, ensure NO TRANSLATION has occurred\n     *\n     * @for CanvasController\n     * @method _drawVideoMap\n     * @param cc {HTMLCanvasContext}\n     * @returns undefined\n     * @private\n     */\n    _drawVideoMap(cc) {\n        const airportModel = AirportController.airport_get();\n\n        // Don't bother with the canvas set up if the airport has no visible maps\n        if (!airportModel.mapCollection.hasVisibleMaps) {\n            return;\n        }\n\n        cc.save();\n        this._ccTranslateFromCanvasOriginToAirportCenter(cc);\n\n        cc.strokeStyle = this.theme.SCOPE.VIDEO_MAP;\n        cc.lineWidth = Math.max(1, CanvasStageModel.scale / 15);\n        cc.lineJoin = 'round';\n        cc.font = BASE_CANVAS_FONT;\n\n        cc.beginPath();\n\n        const lines = airportModel.mapCollection.getVisibleMapLines();\n\n        lines.forEach((mapItem) => {\n            const startRelativePos = [mapItem[0], mapItem[1]];\n            const startCanvasPos = CanvasStageModel.calculateRoundedCanvasPositionFromRelativePosition(startRelativePos);\n            const endRelativePos = [mapItem[2], mapItem[3]];\n            const endCanvasPos = CanvasStageModel.calculateRoundedCanvasPositionFromRelativePosition(endRelativePos);\n\n            cc.moveTo(...startCanvasPos);\n            cc.lineTo(...endCanvasPos);\n        });\n\n        cc.stroke();\n        cc.restore();\n    }\n\n    // TODO: this method should be removed or reworked.\n    /**\n     * Draw the compass around the edge of the scope view\n     *\n     * POSITIONING: Before calling this method, ensure NO TRANSLATION has occurred\n     *\n     * @for CanvasController\n     * @method _drawSelectedAircraftCompass\n     * @param cc {HTMLCanvasContext}\n     * @returns undefined\n     * @private\n     */\n    _drawSelectedAircraftCompass(cc) {\n        if (GameController.game_paused()) {\n            return;\n        }\n\n        const callsign = prop.input.callsign.toUpperCase();\n\n        if (callsign.length === 0) {\n            return;\n        }\n\n        // TODO: this should be a method on the `AircraftController` if one doesn't already exist.\n        // Get the selected aircraft.\n        const aircraft = _filter(this._aircraftController.aircraft.list, (p) => {\n            return p.matchCallsign(callsign) && p.isVisible();\n        })[0];\n\n        if (!aircraft) {\n            return;\n        }\n\n        const canvasOrigin = [0, 0];\n        const canvasSize = [CanvasStageModel.width, CanvasStageModel.height];\n        const aircraftPosition = this._toCanvasPosition(aircraft.relativePosition);\n\n        cc.save();\n\n        // generic styles of the compass marks\n        cc.strokeStyle = this.theme.SCOPE.COMPASS_HASH;\n        cc.fillStyle = this.theme.SCOPE.COMPASS_TEXT;\n        cc.textAlign = 'center';\n        cc.textBaseline = 'middle';\n\n        // Compute the intersection point between a ray originating from the\n        // aircraft at a given heading angle and the canvas boundaries, for\n        // each heading angle between 0 and 360 (by 1 degree increment)\n        for (let heading = 1; heading <= 360; heading++) {\n            // compute the 2D unit vector representing the ray direction using the given\n            // heading angle\n            const rayUnitVector = vectorize2dFromDegrees(heading);\n\n            // Use the opposite of the y component of the vector because of the vertical\n            // axes of the reference frames being oriented in opposite directions\n            rayUnitVector[1] = -rayUnitVector[1];\n\n            // compute the intersection point between the ray and the canvas\n            const intersection = positive_intersection_with_rect(\n                aircraftPosition,\n                rayUnitVector,\n                canvasOrigin,\n                canvasSize\n            );\n\n            if (!intersection) {\n                continue;\n            }\n\n            // draw a mark and label at the intersection point\n            // standard marks on all headings\n            // minor marks on headings multiple of 5 degrees\n            // major marks on headings multiple of 10 degrees\n            let markLen = 8;\n\n            if (heading % 5 === 0) {\n                markLen = heading % 10 === 0 ? 16 : 12;\n            }\n\n            const markWeight = heading % 30 === 0 ? 2 : 1;\n\n            // use the opposite of the length to draw toward the inside of the canvas\n            const markVector = vscale(rayUnitVector, -markLen);\n            const markStartPoint = intersection;\n            const markEndPoint = vadd(markStartPoint, markVector);\n\n            // draw the mark\n            cc.lineWidth = markWeight;\n            cc.beginPath();\n            cc.moveTo(...markStartPoint);\n            cc.lineTo(...markEndPoint);\n            cc.stroke();\n\n            // only draw label on major marks\n            if (heading % 10 !== 0) {\n                continue;\n            }\n\n            // set label font heavier every 3 major marks\n            cc.font = heading % 30 === 0 ?\n                'bold 10px monoOne, monospace' :\n                BASE_CANVAS_FONT;\n\n            const text = `${String(heading).padStart(3, '0')}`;\n            const textWidth = cc.measureText(text).width;\n\n            // draw the label\n            cc.fillText(\n                text,\n                markEndPoint[0] - rayUnitVector[0] * (textWidth / 2 + 4),\n                markEndPoint[1] - rayUnitVector[1] * 7\n            );\n        }\n\n        cc.restore();\n    }\n\n    /**\n     * Find a canvas context stored within `#_context`\n     *\n     * @for CanvasController\n     * @method _getCanvasContextByName\n     * @param name {string} name of the canvas you desire\n     * @returns {HTMLCanvasContext}\n     * @private\n     */\n    _getCanvasContextByName(name) {\n        return this._context[name];\n    }\n\n    // TODO: this duplicates (but is slightly different than) the more widely-used method of\n    // `CanvasStageModel.calculatePreciseCanvasPositionFromRelativePosition()`. What is the\n    // difference, and can _toCanvasPosition() be removed in favor of using the former?\n    /**\n     * Transform a scope relative position to a canvas relative position.\n     *\n     * NOTE: DONT USE ME! I AM BEING DEPRECATED! INSTEAD USE:\n     * `CanvasStageModel.calculatePreciseCanvasPositionFromRelativePosition()`\n     *\n     * POSITIONING: Before calling this method, ensure NO TRANSLATION has occurred\n     *\n     * Create a vector \"vCanvasToScope\" describing the position of the canvas\n     * relative to the scope, and simply add it to the given position to get the\n     * position relative to the canvas.\n     *\n     * The vertical axes are oriented in opposite direction in our source and\n     * destination frames of reference (scope versus canvas), so the y component of\n     * the given position need to be \"reversed\".\n     *\n     * The given position in expressed in kilometers so it needs to be\n     * translated to pixels.\n     *\n     * @for CanvasController\n     * @method _toCanvasPosition\n     * @param positionFromScope {array<number>} relative position, in km offset from airport center\n     * @returns {array<number>} canvas position, in pixels\n     * @private\n     */\n    _toCanvasPosition(positionFromScope) {\n        // positionFromScope is given in kilometers so it needs to be translated\n        // to pixels first\n\n        // use the opposite of the y component of the aircraft position because\n        // the vertical axes are not oriented in the same direction in the\n        // scope (aircraft) frame of reference versus the canvas frame of reference\n        positionFromScope = [\n            CanvasStageModel._translateKilometersToPixels(positionFromScope[0]),\n            -CanvasStageModel._translateKilometersToPixels(positionFromScope[1])\n        ];\n\n        const scopePositionRelativeToView = [CanvasStageModel._panX, CanvasStageModel._panY];\n        const viewPositionRelativeToCanvasOrigin = [CanvasStageModel.halfWidth, CanvasStageModel.halfHeight];\n        const scopePositionRelativeToCanvasOrigin = vadd(viewPositionRelativeToCanvasOrigin, scopePositionRelativeToView);\n\n        return vadd(scopePositionRelativeToCanvasOrigin, positionFromScope);\n    }\n\n    /**\n     * Calculate the length of the leader line connecting the target to the data block\n     *\n     * @for CanvasController\n     * @method _calculateLeaderLength\n     * @param dataBlockLeaderLength {number} from RadarTargetModel#dataBlockLeaderLength\n     * @return {number} length, in pixels\n     * @private\n     */\n    _calculateLeaderLength(dataBlockLeaderLength) {\n        return dataBlockLeaderLength *\n            this.theme.DATA_BLOCK.LEADER_LENGTH_INCREMENT_PIXELS +\n            this.theme.DATA_BLOCK.LEADER_LENGTH_ADJUSTMENT_PIXELS -\n            this.theme.DATA_BLOCK.LEADER_PADDING_FROM_BLOCK_PX -\n            this.theme.DATA_BLOCK.LEADER_PADDING_FROM_TARGET_PX;\n    }\n\n    /**\n     * Mark the canvas as dirty, forcing a redraw during the next frame\n     *\n     * This method should only be called via the `EventBus`\n     * Facade method for `._markShallowRender()`\n     *\n     * @for CanvasController\n     * @method _onMarkDirtyCanvas\n     * @returns undefined\n     * @private\n     */\n    _onMarkDirtyCanvas() {\n        this._markShallowRender();\n    }\n\n    /**\n     * Update local props as a result of the user panning the view\n     *\n     * This method will only be `trigger`ed by some other\n     * class via the `EventBus`\n     *\n     * @for CanvasController\n     * @method _onChangeViewportPan\n     * @returns undefined\n     * @private\n     */\n    _onChangeViewportPan() {\n        this._markDeepRender();\n    }\n\n    /**\n     * Update local props as a result of a change in the current zoom level\n     *\n     * This method will only be `trigger`ed by some other\n     * class via the `EventBus`\n     *\n     * @for CanvasController\n     * @method _onChangeViewportZoom\n     * @returns undefined\n     * @private\n     */\n    _onChangeViewportZoom() {\n        this._markDeepRender();\n    }\n\n    /**\n     * Toogle current value of `#_shouldDrawAirspace`\n     *\n     * This method will only be `trigger`ed by some other\n     * class via the `EventBus`\n     *\n     * @for CanvasController\n     * @method _onToggleAirspace\n     * @returns undefined\n     * @private\n     */\n    _onToggleAirspace() {\n        this._shouldDrawAirspace = !this._shouldDrawAirspace;\n\n        this._markDeepRender();\n    }\n\n    /**\n     * Toogle current value of `#draw_labels`\n     *\n     * This method will only be `trigger`ed by some other\n     * class via the `EventBus`\n     *\n     * @for CanvasController\n     * @method _onToggleLabels\n     * @returns undefined\n     * @private\n     */\n    _onToggleLabels() {\n        this._shouldDrawFixLabels = !this._shouldDrawFixLabels;\n\n        this._markDeepRender();\n    }\n\n    /**\n     * Toogle current value of `#draw_restricted`\n     *\n     * This method will only be `trigger`ed by some other\n     * class via the `EventBus`\n     *\n     * @for CanvasController\n     * @method _onToggleRestrictedAreas\n     * @returns undefined\n     * @private\n     */\n    _onToggleRestrictedAreas() {\n        this._shouldDrawRestrictedAreas = !this._shouldDrawRestrictedAreas;\n\n        this._markDeepRender();\n    }\n\n    /**\n     * Toogle current value of `#draw_sids`\n     *\n     * This method will only be `trigger`ed by some other\n     * class via the `EventBus`\n     *\n     * @for CanvasController\n     * @method _onToggleSidMap\n     * @returns undefined\n     * @private\n     */\n    _onToggleSidMap() {\n        this._shouldDrawSidMap = !this._shouldDrawSidMap;\n\n        this._markDeepRender();\n    }\n\n    /**\n     * Toogle display of STAR routes\n     *\n     * This method will only be `trigger`ed by some other\n     * class via the `EventBus`\n     *\n     * @for CanvasController\n     * @method _onToggleStarMap\n     * @returns undefined\n     * @private\n     */\n    _onToggleStarMap() {\n        this._shouldDrawStarMap = !this._shouldDrawStarMap;\n\n        this._markDeepRender();\n    }\n\n    /**\n     * Toogle current value of `#draw_terrain`\n     *\n     * This method will only be `trigger`ed by some other\n     * class via the `EventBus`\n     *\n     * @for CanvasController\n     * @method _onToggleTerrain\n     * @returns undefined\n     * @private\n     */\n    _onToggleTerrain() {\n        this._shouldDrawTerrain = !this._shouldDrawTerrain;\n\n        this._markDeepRender();\n    }\n\n    /**\n     * Toogle display of video map\n     *\n     * This method will only be `trigger`ed by some other\n     * class via the `EventBus`\n     *\n     * @for CanvasController\n     * @method _onToggleVideoMap\n     * @returns undefined\n     * @private\n     */\n    _onToggleVideoMap(mapNames) {\n        AirportController.airport_get().mapCollection.setVisibleMaps(mapNames);\n\n        this._markDeepRender();\n    }\n\n    /**\n     * Notify that the range rings value has changed by the user.\n     *\n     * This method will only be `trigger`ed by some other\n     * class via the `EventBus`\n     *\n     * @for CanvasController\n     * @method _onRangeRingsChange\n     * @returns undefined\n     * @private\n     */\n    _onRangeRingsChange() {\n        this._markDeepRender();\n    }\n\n    /**\n     * Update the value of `#_shouldShallowRender` to true, forcing a redraw\n     * on the next frame.\n     *\n     * This method should be used for forcing redraws on _dynamic_ elements\n     * only. In the future this will mean only items contained within the\n     * `CANVAS_NAME.DYNAMIC` will be redrawn.\n     *\n     * @for CanvasController\n     * @method _markShallowRender\n     * @returns undefined\n     * @private\n     */\n    _markShallowRender() {\n        this._shouldShallowRender = true;\n    }\n\n    /**\n     * Update the value of `#_shouldShallowRender` and `#_shouldDeepRender` to true, thus\n     * forcing a redraw of both canvases on the next frame.\n     *\n     * This method should be used for forcing redraws on dynamic _and_ static elements.\n     * In the future this will mean both `CANVAS_NAME.STATIC` and `CANVAS_NAME.DYNAMIC`\n     * will be redrawn on the next frame.\n     *\n     * @for CanvasController\n     * @method _markDeepRender\n     * @returns undefined\n     * @private\n     */\n    _markDeepRender() {\n        this._shouldDeepRender = true;\n\n        this._markShallowRender();\n    }\n\n    /**\n     * Trigger _markShallowRender() when an aircraft is selected, thus\n     * forcing a redraw of the dynamic canvas on the next frame.\n     *\n     * @for CanvasController\n     * @method _onSelectAircraft\n     * @returns undefined\n     * @private\n     */\n    _onSelectAircraft() {\n        this._markShallowRender();\n    }\n\n    /**\n     * Trigger _markShallowRender() when an aircraft is deselected, thus\n     * forcing a redraw of the dynamic canvas on the next frame.\n     *\n     * @for CanvasController\n     * @method _onDeselectAircraft\n     * @returns undefined\n     * @private\n     */\n    _onDeselectAircraft() {\n        this._markShallowRender();\n    }\n\n    /**\n     * Center a point in the view\n     *\n     * Used only for centering view on an aircraft position using\n     * the x, y of an aircraft's `relativePosition`\n     *\n     * @for CanvasController\n     * @method _onCenterPointInView\n     * @param relativePosition {array<string>}\n     * @returns undefined\n     * @private\n     */\n    _onCenterPointInView(relativePosition) {\n        const newPanX = -round(CanvasStageModel._translateKilometersToPixels(relativePosition[0]));\n        const newPanY = round(CanvasStageModel._translateKilometersToPixels(relativePosition[1]));\n\n        CanvasStageModel.updatePan(newPanX, newPanY);\n    }\n\n    /**\n     * Callback method fired when an airport is changed\n     *\n     * Changing an airport will require a complete re-draw of all\n     * items on all canvases, thus we call `._markDeepRender()` here\n     * to initiate that process\n     *\n     * @for CanvasController\n     * @method _onAirportChange\n     * @returns undefined\n     * @private\n     */\n    _onAirportChange() {\n        this._markDeepRender();\n    }\n\n    /**\n     * Change theme to the specified name\n     *\n     * This should ONLY be called through the EventBus during a `SET_THEME` event,\n     * thus ensuring that the same theme is always in use by all app components\n     *\n     * This method must remain an arrow function in order to preserve the scope\n     * of `this`, since it is being invoked by an EventBus callback\n     *\n     * @for CanvasController\n     * @method _setTheme\n     * @param themeName {string}\n     * @returns undefined\n     * @private\n     */\n    _setTheme(themeName) {\n        if (!_has(THEME, themeName)) {\n            console.error(`Expected valid theme to change to, but received '${themeName}'`);\n\n            return;\n        }\n\n        // TODO: abstract to method\n        if (this.theme !== null) {\n            this.$element.removeClass(this.theme.CLASSNAME);\n        }\n\n        this.theme = THEME[themeName];\n        // TODO: abstract to method\n        this.$element.addClass(this.theme.CLASSNAME);\n        this._markDeepRender();\n    }\n}\n","import _has from 'lodash/has';\nimport EventBus from '../lib/EventBus';\nimport { round } from '../math/core';\nimport { EVENT } from '../constants/eventNames';\nimport {\n    DEFAULT_CANVAS_SIZE,\n    PAN,\n    SCALE\n} from '../constants/canvasConstants';\nimport { STORAGE_KEY } from '../constants/storageKeys';\nimport { INVALID_NUMBER } from '../constants/globalConstants';\n\n/**\n * Singleton responsible for mantining canvas dimensions, pan and zoom\n *\n * Also provides methods for translating `[x, y]` positions to\n * and from kilometers or pixels\n *\n * POSITION INFO:\n * \"Page Position\": the position on the canvas, where the top-left is 0,0 (returned by click events)\n *      V     (shift coordinate origin from top-left to center of canvas)\n * \"Canvas Position\": the position on the canvas, in pixels, where the canvas center is 0,0 (used in most canvas drawing)\n *      V     (adjust for pan and scale values)\n * \"Relative Position\": a geographical distance based offset, in km, from the airport center, along magnetic north\n *      V     (haversine math from DynamicPositionModel to find GPS coordinates based on dist/dir from known coordinates)\n * \"GPS Coordinates\": the latitude/longitude values of a given position\n *\n * @class CanvasStageModel\n */\nclass CanvasStageModel {\n    /**\n     * @constructor\n     */\n    constructor() {\n        /**\n         * @property _eventBus\n         * @type {EventBus}\n         * @private\n         */\n        this._eventBus = EventBus;\n\n        /**\n         * Pixel height of the canvas(es)\n         *\n         * @property height\n         * @type {number}\n         * @default INVALID_NUMBER\n         * @private\n         */\n        this._height = INVALID_NUMBER;\n\n        /**\n         * Pixel width of the canvas(es)\n         *\n         * @property width\n         * @type {number}\n         * @default INVALID_NUMBER\n         * @private\n         */\n        this._width = INVALID_NUMBER;\n\n        /**\n         * Midpoint of view along the `x` coordinate\n         *\n         * @property _panX\n         * @type {number}\n         * @default INVALID_NUMBER\n         * @private\n         */\n        this._panX = INVALID_NUMBER;\n\n        /**\n         * Midpoint of view along the `y` coordinate\n         *\n         * @property _panY\n         * @type {number}\n         * @default INVALID_NUMBER\n         * @private\n         */\n        this._panY = INVALID_NUMBER;\n\n        /**\n         * pixels per km\n         *\n         * @property _defaultScale\n         * @type {number}\n         * @default INVALID_NUMBER\n         * @private\n         */\n        this._defaultScale = INVALID_NUMBER;\n\n        /**\n         * maximum scale value\n         *\n         * @property _scaleMax\n         * @type {number}\n         * @default INVALID_NUMBER\n         * @private\n         */\n        this._scaleMax = INVALID_NUMBER;\n\n        /**\n         * minimum scale value\n         *\n         * @property _scaleMin\n         * @type {number}\n         * @default INVALID_NUMBER\n         * @private\n         */\n        this._scaleMin = INVALID_NUMBER;\n\n        /**\n         * Current scale value\n         *\n         * scale is essentially the zoom value, the larger the\n         * scale the closer the current zoom.\n         *\n         * @property _scale\n         * @type {number}\n         * @default INVALID_NUMBER\n         * @private\n         */\n        this._scale = INVALID_NUMBER;\n\n        return this._init();\n    }\n\n    /**\n     * @property height\n     * @type {number}\n     */\n    get height() {\n        return this._height;\n    }\n\n    /**\n     * @property halfHeight\n     * @type {number}\n     */\n    get halfHeight() {\n        return round(this._height / 2);\n    }\n\n    /**\n     * @property scale\n     * @type {number}\n     */\n    get scale() {\n        return this._scale;\n    }\n\n    /**\n     * @property width\n     * @type {number}\n     */\n    get width() {\n        return this._width;\n    }\n\n    /**\n     * @property halfWidth\n     * @type {number}\n     */\n    get halfWidth() {\n        return round(this._width / 2);\n    }\n\n    /**\n     * @for CanvasStageModel\n     * @method _init\n     * @private\n     */\n    _init() {\n        this._height = DEFAULT_CANVAS_SIZE.HEIGHT;\n        this._width = DEFAULT_CANVAS_SIZE.WIDTH;\n        this._panX = PAN.X;\n        this._panY = PAN.Y;\n        this._defaultScale = SCALE.DEFAULT;\n        this._scaleMin = SCALE.MIN;\n        this._scaleMax = SCALE.MAX;\n        this._scale = this._retrieveZoomLevelFromStorageOrDefault();\n    }\n\n    /**\n     * @for CanvasStageModel\n     * @method reset\n     */\n    reset() {\n        this._height = INVALID_NUMBER;\n        this._width = INVALID_NUMBER;\n        this._panX = INVALID_NUMBER;\n        this._panY = INVALID_NUMBER;\n        this._defaultScale = INVALID_NUMBER;\n        this._scaleMax = INVALID_NUMBER;\n        this._scaleMin = INVALID_NUMBER;\n        this._scale = INVALID_NUMBER;\n    }\n\n    /**\n     * Translate a kilometer value to pixels based on the current `#_scale` value\n     *\n     * @for CanvasStageModel\n     * @method _translateKilometersToPixels\n     * @param kilometerValue {number}   value in kilometers\n     * @return {number}                 value in pixels\n     * @private\n     */\n    _translateKilometersToPixels(kilometerValue) {\n        return kilometerValue * this._scale;\n    }\n\n    /**\n     * Translate the specified x, y pixel coordinates to map kilometers\n     *\n     * @for CanvasStageModel\n     * @method calculateRelativePositionFromCanvasPosition\n     * @param x {number} canvas position X value, in px\n     * @param y {number} canvas position Y value, in px\n     * @returns {array<number>} [x, y], in km\n     * @private\n     */\n    calculateRelativePositionFromCanvasPosition(x, y) {\n        const relativePositionX = this.translatePixelsToKilometers(x - this._panX);\n        const relativePositionY = this.translatePixelsToKilometers(y + this._panY);\n        const relativePosition = [relativePositionX, relativePositionY];\n\n        return relativePosition;\n    }\n\n    /**\n     * Translate a page position, in pixels, as it relates to the browser window to canvas position\n     *\n     * @for CanvasStageModel\n     * @method calculateCanvasPositionFromPagePosition\n     * @param x {number}\n     * @param y {number}\n     * @return {array<number>}\n     */\n    calculateCanvasPositionFromPagePosition(x, y) {\n        const canvasPositionX = x - this.halfWidth;\n        const canvasPositionY = -y + this.halfHeight;\n\n        return [canvasPositionX, canvasPositionY];\n    }\n\n    /**\n     * Translate a pixel value to kilometers based on the current `#_scale` value\n     *\n     * @for CanvasStageModel\n     * @method translatePixelsToKilometers\n     * @param pixelValue {number}  value in pixels\n     * @return {number}            value in kilometers\n     */\n    translatePixelsToKilometers(pixelValue) {\n        return pixelValue / this._scale;\n    }\n\n    /**\n     * Calculate a canvas position (in px) from the provided relative position (km offset from airport center)\n     *\n     * NOTE: The return values will be high precision floating-point numbers with subpixel resolution. This will cause the\n     * browser to perform additional antialiasing, and therefore should not be used for things like aircraft projections.\n     *\n     * @for CanvasStageModel\n     * @method calculatePreciseCanvasPositionFromRelativePosition\n     * @param relativePosition {array<number>} `[x, y]` position coordinates (in km offset from airport center)\n     * @return {array<number>} - `[154.173, 381.029]`\n     */\n    calculatePreciseCanvasPositionFromRelativePosition(relativePosition) {\n        const [x, y] = relativePosition;\n        const canvasX = this._translateKilometersToPixels(x) + this._panX;\n        const canvasY = (this._translateKilometersToPixels(y) * -1) + this._panY;\n        const precisePosition = [canvasX, canvasY];\n\n        return precisePosition;\n    }\n\n    /**\n     * Calculate a canvas position (in px) from the provided relative position (km offset from airport center)\n     *\n     * NOTE: The return values will be rounded to the nearest integer, and are thus not considered precise.\n     *\n     * Calls to this method should be used to calculate approximate canvas position, useful for plotting things\n     * in an imprecise, but non-subpixelated manner, which are corrected for user panning. This method should\n     * not be used to translate an aircraft position due to this inherent inaccuracy.\n     *\n     * @for CanvasStageModel\n     * @method calculateRoundedCanvasPositionFromRelativePosition\n     * @param relativePosition {array<number>} `[x, y]` position coordinates (in km offset from airport center)\n     * @return {array<number>} - `[154.173, 381.029]`\n     */\n    calculateRoundedCanvasPositionFromRelativePosition(relativePosition) {\n        const precisePosition = this.calculatePreciseCanvasPositionFromRelativePosition(relativePosition);\n        const roundedPosition = [round(precisePosition[0]), round(precisePosition[1])];\n\n        return roundedPosition;\n    }\n\n    /**\n     * Update the current canvas dimensions\n     *\n     * Calls to this method will happen as a result of a browser window resize\n     *\n     * @for CanvasStageModel\n     * @method updateHeightAndWidth\n     * @param nextHeight {number}   next height value in pixels\n     * @param nextWidth {number}    next width value in pixels\n     */\n    updateHeightAndWidth(nextHeight, nextWidth) {\n        this._height = nextHeight - DEFAULT_CANVAS_SIZE.FOTTER_HEIGHT_OFFSET;\n        this._width = nextWidth;\n    }\n\n    /**\n     * Update the current pan values.\n     *\n     * @for CanvasStageModel\n     * @method updatePan\n     * @param x {number}\n     * @param y {number}\n     */\n    updatePan(x, y) {\n        this._panX = x;\n        this._panY = y;\n\n        this._eventBus.trigger(EVENT.PAN_VIEWPORT);\n    }\n\n    /**\n     * @for CanvasStageModel\n     * @method zoomIn\n     */\n    zoomIn() {\n        const isZoomOut = true;\n\n        this._updateZoom(isZoomOut);\n    }\n\n    /**\n     * @for CanvasStageModel\n     * @method zoomOut\n     */\n    zoomOut() {\n        const isZoomOut = false;\n\n        this._updateZoom(isZoomOut);\n    }\n\n    /**\n     * Reset the current `#_scale` value to the `#_defaultScale`\n     *\n     * @for CanvasStageModel\n     * @method zoomReset\n     */\n    zoomReset() {\n        this._scale = this._defaultScale;\n\n        this._storeZoomLevel();\n        this._eventBus.trigger(EVENT.ZOOM_VIEWPORT);\n    }\n\n    /**\n     * Look for a stored `#_scale` value in localStorage\n     *\n     * When a stored value cannot be found, use the `SCALE.DEFAULT` value\n     *\n     * @for CanvasStageModel\n     * @method _retrieveZoomLevelFromStorage\n     * @return {number}\n     * @private\n     */\n    _retrieveZoomLevelFromStorageOrDefault() {\n        if (!_has(localStorage, STORAGE_KEY.ZOOM_LEVEL)) {\n            return SCALE.DEFAULT;\n        }\n\n        const storedScale = localStorage.getItem(STORAGE_KEY.ZOOM_LEVEL);\n\n        return storedScale;\n    }\n\n    /**\n     * Store the current `#_scale` value in localStorage\n     *\n     * @for CanvasStageModel\n     * @method _storeZoomLevel\n     * @private\n     */\n    _storeZoomLevel() {\n        localStorage.setItem(STORAGE_KEY.ZOOM_LEVEL, this._scale);\n    }\n\n    /**\n     * Update the current `#_scale` value\n     *\n     * @for CanvasStageModel\n     * @method _updateScale\n     * @param isZoomIn {boolean}\n     * @private\n     */\n    _updateScale(isZoomIn) {\n        if (isZoomIn) {\n            this._scale = Math.min(this._scale / SCALE.CHANGE_FACTOR, this._scaleMax);\n\n            return;\n        }\n\n        this._scale = Math.max(this._scale * SCALE.CHANGE_FACTOR, this._scaleMin);\n    }\n\n    /**\n     * Update the current `#_panX`, `#_panY`, and `#_scale` values\n     *\n     * When a user changes the zoom level, we must also adjust pan\n     * values to account for a change in `#_scale`. Pixel dimensions of\n     * the canvas don't change on zoom, but the `#_scale` does. So we\n     * must re-calculate current pan values with the updated `#_scale`\n     *\n     * Calling this method will trigger an `EventBus` event that the\n     * `CanvasController` is listening for that will trigger a deepRender\n     *\n     * @for CanvasStageModel\n     * @method _updateZoom\n     * @param isZoomIn {boolean}  flag for when use is zooming in\n     * @private\n     */\n    _updateZoom(isZoomIn) {\n        // store current pan in km, so it can be re-calculated with an updated `_#scale`\n        const previousX = round(this.translatePixelsToKilometers(this._panX));\n        const previousY = round(this.translatePixelsToKilometers(this._panY));\n\n        this._updateScale(isZoomIn);\n\n        // take previous pan values (in km) and calculate their current position\n        // based on the new `#_scale` value\n        const nextPanX = round(this._translateKilometersToPixels(previousX));\n        const nextPanY = round(this._translateKilometersToPixels(previousY));\n\n        this.updatePan(nextPanX, nextPanY);\n        this._storeZoomLevel();\n        this._eventBus.trigger(EVENT.ZOOM_VIEWPORT);\n    }\n}\n\nexport default new CanvasStageModel();\n","import $ from 'jquery';\nimport EventBus from '../lib/EventBus';\nimport { SELECTORS } from '../constants/selectors';\nimport { STORAGE_KEY } from '../constants/storageKeys';\nimport { EVENT } from '../constants/eventNames';\n\n/**\n * The controller class for the in-game changelog.\n *\n * @class ChangelogController\n */\nexport default class ChangelogController {\n    /**\n     * @constructor\n     * @param {ContentQueue} contentQueue\n     */\n    constructor(contentQueue) {\n        /**\n         * A string representation of the actual changelog.\n         *\n         * @property content\n         * @type {String}\n         */\n        this.content = null;\n\n        /**\n         * The content queue, used to load in the changelog data\n         *\n         * @property contentQueue\n         * @type {ContentQueue}\n         */\n        this.contentQueue = null;\n\n        /**\n         * The DOM of the changelog container, containing version, data, and dismiss.\n         *\n         * @property $changelogContainer\n         * @type {JQuery|HTMLElement}\n         */\n        this.$changelogContainer = null;\n\n        /**\n         * Changelog data element - where the text goes\n         *\n         * @property $changelogData\n         * @type {JQuery|HTMLElement}\n         */\n        this.$changelogData = null;\n\n        /**\n         * Toggle selector for the changelog\n         * You know, the button thing\n         *\n         * @property $changelogToggle\n         * @type {JQuery|HTMLElement}\n         */\n        this.$changelogToggle = null;\n\n        /**\n         * local reference to the EventBus\n         *\n         * @property _eventBus\n         * @type {EventBus}\n         */\n        this._eventBus = null;\n\n        this.init(contentQueue);\n    }\n\n    // ------------------------------ LIFECYCLE ------------------------------\n\n    /**\n     * @for ChangelogController\n     * @method init\n     * @chainable\n     */\n    init(contentQueue) {\n        this.content = '<p>Loading...</p>';\n        this.contentQueue = contentQueue;\n        this._eventBus = EventBus;\n\n        this._createChildren();\n        this.$changelogData.html(this.content);\n        this._createHandlers();\n        this.enable();\n        this.loadChangelogContent();\n\n        return this;\n    }\n\n    /**\n     * @for ChangelogController\n     * @method reset\n     * @chainable\n     */\n    reset() {\n        this.content = null;\n        this.contentQueue = null;\n        this.$changelogContainer = null;\n        this.$changelogData = null;\n        this.$changelogToggle = null;\n        this._eventBus = null;\n\n        this._resetHandlers();\n        this.disable();\n\n        return this;\n    }\n\n    /**\n     * @for ChangelogController\n     * @method enable\n     */\n    enable() {\n        this._eventBus.on(EVENT.TOGGLE_CHANGELOG, this._onChangelogToggleHandler);\n    }\n\n    /**\n     * @for ChangelogController\n     * @method disable\n     */\n    disable() {\n        this.$changelogToggle.off(EVENT.TOGGLE_CHANGELOG, this._onChangelogToggleHandler);\n    }\n\n    /**\n     * Sets up the DOM class properties\n     *\n     * @for ChangelogController\n     * @method _createChildren\n     * @private\n     * @chainable\n     */\n    _createChildren() {\n        this.$changelogContainer = $(SELECTORS.DOM_SELECTORS.CHANGELOG_CONTAINER);\n        this.$changelogData = $(SELECTORS.DOM_SELECTORS.CHANGELOG_CONTENT);\n        this.$changelogToggle = $(SELECTORS.DOM_SELECTORS.TOGGLE_CHANGELOG);\n\n        return this;\n    }\n\n    /**\n     * Sets up the event handlers\n     *\n     * @for ChangelogController\n     * @method _createHandlers\n     * @private\n     * @chainable\n     */\n    _createHandlers() {\n        this._onChangelogToggleHandler = this._onChangelogToggle.bind(this);\n\n        return this;\n    }\n\n\n    /**\n     * Sets up the event handlers\n     *\n     * @for ChangelogController\n     * @method _resetHandlers\n     * @private\n     * @chainable\n     */\n    _resetHandlers() {\n        this._onChangelogToggleHandler = null;\n\n        return this;\n    }\n\n    // ------------------------------ PUBLIC ------------------------------\n\n    /**\n     * Calls a changelog loader asynchronously. Calls `onLoadComplete` when\n     * the changelog data is successfully loaded. Stores data in\n     * `this.content`.\n     *\n     * @for ChangelogController\n     * @method loadChangelogContent\n     */\n    loadChangelogContent() {\n        const options = {\n            url: 'assets/changelog.json',\n            immediate: true\n        };\n        const changelogPromise = this.contentQueue.add(options);\n\n        changelogPromise.done((data /* , textStatus, jqXHR */) => {\n            this.content = data.changelog;\n            this.onLoadComplete();\n        });\n    }\n\n    /**\n     * Called when the changelog is loaded (the promise was resolved) as the\n     * callback from the deferred promise.\n     *\n     * @for ChangelogController\n     * @method onLoadComplete\n     */\n    onLoadComplete() {\n        this.isLoaded = true;\n        this.$changelogData.html(this.content);\n\n        if (this._shouldShowOnLoad()) {\n            this._onChangelogToggle();\n        }\n    }\n\n    // ------------------------------ PRIVATE ------------------------------\n\n    /**\n     * Toggles visibility.\n     *\n     * @for ChangelogController\n     * @method _onChangelogToggle\n     * @private\n     */\n    _onChangelogToggle() {\n        this.$changelogToggle.toggleClass(SELECTORS.CLASSNAMES.ACTIVE);\n        this.$changelogContainer.toggleClass(SELECTORS.CLASSNAMES.OPEN);\n    }\n\n    /**\n     * Determines whether the user has played this version before,\n     * and if the changelog should display on load.\n     *\n     * @for ChangelogController\n     * @method _shouldShowOnLoad\n     * @returns {Boolean} if the user has not played this version\n     */\n    _shouldShowOnLoad() {\n        const lastPlayedVersion = localStorage[STORAGE_KEY.ATC_LAST_VERSION];\n        const currentVersion = this.version;\n        const shouldDisplayChangelog = lastPlayedVersion !== currentVersion;\n\n        if (shouldDisplayChangelog) {\n            localStorage[STORAGE_KEY.ATC_LAST_VERSION] = currentVersion;\n        }\n\n        return shouldDisplayChangelog;\n    }\n}\n","import _map from 'lodash/map';\nimport { PARSED_COMMAND_NAME } from '../constants/inputConstants';\n\n/**\n * This class is returned from `CommandParser` on successful parsing.\n *\n * Commands are broken out into two categories: `System` and `Transmit`.\n * - System commands are zero or single argument commands that are used for interacting with the app\n *   itself. Things like `timewarp` or `tutorial` are examples of system commands.\n *\n * - Transmit commands are instructions meant for a specific aircraft within the controlled airspace.\n *   These commands can have zero to many arguments, depending on the command. Some examples of transmit\n *   commands are `to`, `taxi`, `hold`.\n *\n *\n * All available commands are defined in the `commandMap`. Two terms of note are alias and root command.\n * We would call the `takeoff` command a root command and `to` and `cto` aliases. The root command is the\n * one that shares the same key as the command definition which gives us the correct validator and parser.\n * The root command is also what the `AircraftModel` is expecting when it receives commands\n * from the `InputController`.\n *\n * @class ParsedCommand\n */\nexport default class ParsedCommand {\n    /**\n     * @constructor\n     * @for ParsedCommand\n     * @param {{}} command\n     * @param {array<AircraftCommandModel>} commandList\n     * @param {string} callsign\n     */\n    constructor(command = '', commandList = [], callsign = '') {\n        /**\n         * Command name\n         *\n         * Could be either Transmit or a System command\n         *\n         * This is consumed by the `InputController` after parsing here and is used to\n         * determine what to do with the parsed command(s)\n         *\n         * @type {string}\n         * @default ''\n         */\n        this.command = command;\n\n        /**\n         * List of `AircraftCommandModel` objects.\n         *\n         * Each command is contained within a `AircraftCommandModel`, even System commands. This provides\n         * a consistent interface for obtaining commands and arguments (via getter) and also\n         * aloows for easy implementation of the legacy API structure.\n         *\n         * @type {array<AircraftCommandModel>}\n         */\n        this.commandList = commandList;\n\n        /**\n         * Aircraft callsign\n         *\n         * this is optional and not included with system commands\n         *\n         * @type {string}\n         * @default ''\n         */\n        this.callsign = callsign;\n    }\n\n    /**\n     * Return an array of [commandName, ...args]\n     *\n     * We use this shape solely to match the existing api.\n     *\n     * When command is a System command:\n     * - commandList is assumed to have a length on 1\n     * - commandList[0].args[0] is assumed to have a single string value\n     *\n     * @property args\n     * @return {string|array<string>}\n     */\n    get args() {\n        if (this.command !== PARSED_COMMAND_NAME.TRANSMIT) {\n            return this.commandList[0].args;\n        }\n\n        return _map(this.commandList, (command) => command.nameAndArgs);\n    }\n}\n","import { AIRCRAFT_COMMAND_DEFINITION } from './aircraftCommandDefinitions';\n\n/**\n * A definition of a specific command and it's arguments.\n *\n * Conatins a command name, which maps 1:1 with a name defined in `commandMap.js` and `commandDefinitions.js`.\n * Commands may have an alias or many, we care only about the root command. The command map will map any\n * alias to a root command and this `AircraftCommandModel` is only concerned about those root commands. It has\n * no way of knowing what the original alias was, if one was used.\n *\n * Each `AircraftCommandModel` will be expected to have, at a minimum, a `name` and a matching\n * `AIRCRAFT_COMMAND_DEFINITION`.\n *\n * @class AircraftCommandModel\n */\nexport default class AircraftCommandModel {\n    /**\n     * @constructor\n     * @for AircraftCommandModel\n     */\n    constructor(name = '') {\n        /**\n         * command name, should match a command in the COMMANDS constant\n         *\n         * @property name\n         * @type {string}\n         */\n        this.name = name;\n\n        /**\n         * A reference to the AIRCRAFT_COMMAND_DEFINITION for this particular command.\n         * this gives us access to both the `validate` and `parse` methods\n         * that belong to this command.\n         *\n         * Storing this as an instance property allows us to do the lookup once\n         * and then make it available to the rest of the class so it can\n         * be referenced when needed.\n         *\n         * @property _commandDefinition\n         * @type {object}\n         * @private\n         */\n        this._commandDefinition = AIRCRAFT_COMMAND_DEFINITION[name];\n\n        /**\n         * list of command arguments\n         *\n         * - assumed to be the text command names\n         * - may be empty, depending on the command\n         * - should only ever be strings on initial set immediately after instantiation\n         * - will later be parsed via the `_commandDefinition.parse()` method to the\n         *   correct data types and shape\n         *\n         * @property args\n         * @type {array}\n         * @default []\n         */\n        this.args = [];\n\n        // TODO: may need to throw here if `_commandDefinition` is undefined\n    }\n\n    /**\n     * Return an array of [name, ...args]\n     *\n     * We use this shape solely to match the existing api.\n     *\n     * @property nameAndArgs\n     * @return {array}\n     */\n    get nameAndArgs() {\n        return [\n            this.name,\n            ...this.args\n        ];\n    }\n\n    /**\n     * Send the initial args off to the validator\n     *\n     * @for AircraftCommandModel\n     * @method validateArgs\n     * @return {string|undefined}\n     */\n    validateArgs() {\n        if (typeof this._commandDefinition === 'undefined') {\n            return;\n        }\n\n        return this._commandDefinition.validate(this.args);\n    }\n\n    /**\n     * Send the initial args, set from the `CommandParser` right after instantiation, off to\n     * the parser for formatting.\n     *\n     * @for AircraftCommandModel\n     * @method parseArgs\n     */\n    parseArgs() {\n        // this completely overwrites current args. this is intended because all args are received as\n        // strings but consumed as strings, numbers or booleans. and when the args are initially set\n        // they may not all be available yet\n        this.args = this._commandDefinition.parse(this.args);\n    }\n}\n","/**\n * Root commands defined in the `commandMap` have a matching definition defined here. This definition\n * give us access to vaildate and parse functions. Some commands don't require either function and simply\n * pass the arguments through via `noop`. Other commands commands have very unique demands for how\n * arguments are formatted, these functions let us validate and parse on a case by case basis.\n *\n * Keys are lowercased here so they can be accessed programatically using input string segments\n * that are converted to lowercase for ease of comparison.\n *\n * @fileoverview\n */\nimport { convertStringToNumber } from '../../utilities/unitConverters';\nimport {\n    zeroArgumentsValidator,\n    singleArgumentValidator,\n    zeroOrOneArgumentValidator,\n    altitudeValidator,\n    fixValidator,\n    headingValidator,\n    holdValidator,\n    squawkValidator,\n    optionalAltitudeValidator,\n    crossingValidator\n} from '../parsers/argumentValidators';\nimport {\n    altitudeParser,\n    headingParser,\n    holdParser,\n    timewarpParser,\n    optionalAltitudeParser,\n    crossingParser,\n    ilsParser\n} from '../parsers/argumentParsers';\n\n/**\n * A no-op function used for command definitions that do not need a parser\n *\n * This function will immediately return any arguments passed to it and is\n * used in place of an actual parser. this way `command.parse` can still\n * be called even with commands that don't need to be parsed.\n *\n * @function noop\n * @param args {*}\n * @return {*}\n */\nexport const noop = (args) => args;\n\n\n/**\n * Call `convertStringToNumber` and store the result in an array\n *\n * @function strToNumArray\n * @param args {*}\n */\nexport const strToNumArray = (args) => [convertStringToNumber(args)];\n\n/**\n * System and Aircraft command definitions that accept zero arguments\n *\n * @property ZERO_ARG_AIRCRAFT_COMMANDS\n * @type {Object}\n * @final\n */\nconst ZERO_ARG_AIRCRAFT_COMMANDS = {\n    // system commands\n    airac: {\n        validate: zeroArgumentsValidator,\n        parse: noop\n    },\n    auto: {\n        validate: zeroArgumentsValidator,\n        parse: noop\n    },\n    clear: {\n        validate: zeroArgumentsValidator,\n        parse: noop\n    },\n    pause: {\n        validate: zeroArgumentsValidator,\n        parse: noop\n    },\n    tutorial: {\n        validate: zeroArgumentsValidator,\n        parse: noop\n    },\n\n    // Aircraft commands\n    abort: {\n        validate: zeroArgumentsValidator,\n        parse: noop\n    },\n    clearedAsFiled: {\n        validate: zeroArgumentsValidator,\n        parse: noop\n    },\n    delete: {\n        validate: zeroArgumentsValidator,\n        parse: noop\n    },\n    flyPresentHeading: {\n        validate: zeroArgumentsValidator,\n        parse: noop\n    },\n    takeoff: {\n        validate: zeroArgumentsValidator,\n        parse: noop\n    },\n    sayAltitude: {\n        validate: zeroArgumentsValidator,\n        parse: noop\n    },\n    sayAssignedAltitude: {\n        validate: zeroArgumentsValidator,\n        parse: noop\n    },\n    sayHeading: {\n        validate: zeroArgumentsValidator,\n        parse: noop\n    },\n    sayAssignedHeading: {\n        validate: zeroArgumentsValidator,\n        parse: noop\n    },\n    sayIndicatedAirspeed: {\n        validate: zeroArgumentsValidator,\n        parse: noop\n    },\n    sayAssignedSpeed: {\n        validate: zeroArgumentsValidator,\n        parse: noop\n    },\n    sayRoute: {\n        validate: zeroArgumentsValidator,\n        parse: noop\n    }\n};\n\n/**\n * System and Aircraft commands that accept a single argument\n *\n * these commands accept a single argument and may require further parsing, eg: (string -> number)\n *\n * @property SINGLE_ARG_AIRCRAFT_COMMANDS\n * @type {Object}\n * @final\n */\nconst SINGLE_ARG_AIRCRAFT_COMMANDS = {\n    airport: {\n        validate: singleArgumentValidator,\n        parse: noop\n    },\n    direct: {\n        validate: singleArgumentValidator,\n        parse: noop\n    },\n    expectArrivalRunway: {\n        validate: singleArgumentValidator,\n        parse: noop\n    },\n    ils: {\n        validate: singleArgumentValidator,\n        parse: ilsParser\n    },\n    land: {\n        validate: zeroOrOneArgumentValidator,\n        parse: noop\n    },\n    moveDataBlock: {\n        validate: singleArgumentValidator,\n        parse: noop\n    },\n    rate: {\n        validate: singleArgumentValidator,\n        // calling method is expecting an array with values that will get spread later, thus we purposly\n        // return an array here\n        parse: strToNumArray\n    },\n    reroute: {\n        validate: singleArgumentValidator,\n        parse: noop\n    },\n    route: {\n        validate: singleArgumentValidator,\n        parse: noop\n    },\n    sid: {\n        validate: singleArgumentValidator,\n        parse: noop\n    },\n    speed: {\n        validate: singleArgumentValidator,\n        // calling method is expecting an array with values that will get spread later, thus we purposly\n        // return an array here\n        parse: strToNumArray\n    },\n    star: {\n        validate: singleArgumentValidator,\n        parse: noop\n    }\n};\n\n/**\n * System and Aircraft commands that accept arguments specific to the command\n *\n * These definitions will likely reference functions for validate and parse that are specific only\n * to one command\n *\n * @property CUSTOM_ARG_AIRCRAFT_COMMANDS\n * @type {Object}\n * @final\n */\nconst CUSTOM_ARG_AIRCRAFT_COMMANDS = {\n    taxi: {\n        validate: zeroOrOneArgumentValidator,\n        parse: noop\n    },\n    cancelHold: {\n        validate: zeroOrOneArgumentValidator,\n        parse: noop\n    },\n\n    // these commands have specific argument requirements and may need to be parsed\n    // into the correct type (sting -> number)\n    altitude: {\n        validate: altitudeValidator,\n        parse: altitudeParser\n    },\n    cross: {\n        validate: crossingValidator,\n        parse: crossingParser\n    },\n    fix: {\n        validate: fixValidator,\n        parse: noop\n    },\n    heading: {\n        validate: headingValidator,\n        parse: headingParser\n    },\n    hold: {\n        validate: holdValidator,\n        parse: holdParser\n    },\n    squawk: {\n        validate: squawkValidator,\n        parse: noop\n    },\n    timewarp: {\n        validate: zeroOrOneArgumentValidator,\n        parse: timewarpParser\n    },\n    descendViaStar: {\n        validate: optionalAltitudeValidator,\n        parse: optionalAltitudeParser\n    },\n    climbViaSid: {\n        validate: optionalAltitudeValidator,\n        parse: optionalAltitudeParser\n    }\n};\n\n// TODO: This entire thing ought to be absorbed into aircraftCommandMap, to keep\n// all command definition information in a single place.\n/**\n * Single exported constant that combines all the definitions above\n *\n * @property AIRCRAFT_COMMAND_DEFINITION\n * @type {Object}\n * @final\n */\nexport const AIRCRAFT_COMMAND_DEFINITION = {\n    ...ZERO_ARG_AIRCRAFT_COMMANDS,\n    ...SINGLE_ARG_AIRCRAFT_COMMANDS,\n    ...CUSTOM_ARG_AIRCRAFT_COMMANDS\n};\n","import _findKey from 'lodash/findKey';\n\n/**\n * Complete map of commands\n *\n * This list includes both System and Unicode commands, as well as all the various aircraft\n * commands.\n *\n * Aliased commands map to a single root command that is shared among all aliases. The values\n * here then map to a `AIRCRAFT_COMMAND_DEFINITION` which contains `validate` and `parse` functions for\n * each root command. Some commands have very unique demands for how arguments are formatted,\n * those functions let us do that on a case by case basis.\n *\n * Keys are lowercased here so they can be accessed programatically using input string segments\n * that are converted to lowercase for ease of comparison.\n *\n * @propery AIRCRAFT_COMMAND_MAP\n * @type {Object}\n * @final\n */\nexport const AIRCRAFT_COMMAND_MAP = {\n    abort: {\n        aliases: ['abort'],\n        functionName: 'runAbort',\n        isSystemCommand: false\n    },\n    airac: {\n        aliases: ['airac'],\n        functionName: '',\n        isSystemCommand: true\n    },\n    airport: {\n        aliases: ['airport'],\n        functionName: '',\n        isSystemCommand: true\n    },\n    altitude: {\n        aliases: ['a', 'altitude', 'c', 'climb', 'd', 'descend'],\n        functionName: 'runAltitude',\n        isSystemCommand: false\n    },\n    auto: {\n        aliases: ['auto'],\n        functionName: '',\n        isSystemCommand: true\n    },\n    clear: {\n        aliases: ['clear'],\n        functionName: '',\n        isSystemCommand: true\n    },\n    clearedAsFiled: {\n        aliases: ['caf', 'clearedAsFiled'],\n        functionName: 'runClearedAsFiled',\n        isSystemCommand: false\n    },\n    climbViaSid: {\n        aliases: ['climbViaSid', 'cvs'],\n        functionName: 'runClimbViaSID',\n        isSystemCommand: false\n    },\n    cross: {\n        aliases: ['cross', 'cr', 'x'],\n        functionName: 'runCross',\n        isSystemCommand: false\n    },\n    delete: {\n        aliases: ['del', 'delete', 'kill'],\n        functionName: 'runDelete',\n        isSystemCommand: false\n    },\n    descendViaStar: {\n        aliases: ['descendViaStar', 'dvs'],\n        functionName: 'runDescendViaStar',\n        isSystemCommand: false\n    },\n    direct: {\n        aliases: ['dct', 'direct', 'pd'],\n        functionName: 'runDirect',\n        isSystemCommand: false\n    },\n    cancelHold: {\n        aliases: ['exithold', 'cancelhold', 'continue', 'nohold', 'xh'],\n        functionName: 'runCancelHoldingPattern',\n        isSystemCommand: false\n    },\n    expectArrivalRunway: {\n        aliases: ['e'],\n        functionName: 'runExpectArrivalRunway',\n        isSystemCommand: false\n    },\n    fix: {\n        aliases: ['f', 'fix', 'track'],\n        functionName: 'runFix',\n        isSystemCommand: false\n    },\n    flyPresentHeading: {\n        aliases: ['fph'],\n        functionName: 'runFlyPresentHeading',\n        isSystemCommand: false\n    },\n    heading: {\n        aliases: ['fh', 'h', 'heading', 't', 'turn'],\n        functionName: 'runHeading',\n        isSystemCommand: false\n    },\n    hold: {\n        aliases: ['hold'],\n        functionName: 'runHold',\n        isSystemCommand: false\n    },\n    ils: {\n        aliases: ['*', 'i', 'ils'],\n        functionName: 'runIls',\n        isSystemCommand: false\n    },\n    land: {\n        aliases: ['land'],\n        functionName: 'runLand',\n        isSystemCommand: false\n    },\n    moveDataBlock: {\n        aliases: ['`'],\n        functionName: 'runMoveDataBlock',\n        isSystemCommand: false\n    },\n    pause: {\n        aliases: ['pause'],\n        functionName: '',\n        isSystemCommand: true\n    },\n    rate: {\n        aliases: ['rate'],\n        functionName: '',\n        isSystemCommand: true\n    },\n    reroute: {\n        aliases: ['reroute', 'rr'],\n        functionName: 'runReroute',\n        isSystemCommand: false\n    },\n    route: {\n        aliases: ['route'],\n        functionName: 'runRoute',\n        isSystemCommand: false\n    },\n    sayAltitude: {\n        aliases: ['sa'],\n        functionName: 'runSayAltitude',\n        isSystemCommand: false\n    },\n    sayAssignedAltitude: {\n        aliases: ['saa'],\n        functionName: 'runSayAssignedAltitude',\n        isSystemCommand: false\n    },\n    sayAssignedHeading: {\n        aliases: ['sah'],\n        functionName: 'runSayAssignedHeading',\n        isSystemCommand: false\n    },\n    sayAssignedSpeed: {\n        aliases: ['sas'],\n        functionName: 'runSayAssignedSpeed',\n        isSystemCommand: false\n    },\n    sayHeading: {\n        aliases: ['sh'],\n        functionName: 'runSayHeading',\n        isSystemCommand: false\n    },\n    sayIndicatedAirspeed: {\n        aliases: ['si'],\n        functionName: 'runSayIndicatedAirspeed',\n        isSystemCommand: false\n    },\n    sayRoute: {\n        aliases: ['sr'],\n        functionName: 'runSayRoute',\n        isSystemCommand: false\n    },\n    sid: {\n        aliases: ['sid'],\n        functionName: 'runSID',\n        isSystemCommand: false\n    },\n    speed: {\n        aliases: ['-', '+', 'slow', 'sp', 'speed'],\n        functionName: 'runSpeed',\n        isSystemCommand: false\n    },\n    squawk: {\n        aliases: ['sq', 'squawk'],\n        functionName: 'runSquawk',\n        isSystemCommand: false\n    },\n    star: {\n        aliases: ['star'],\n        functionName: 'runSTAR',\n        isSystemCommand: false\n    },\n    takeoff: {\n        aliases: ['/', 'cto', 'to', 'takeoff'],\n        functionName: 'runTakeoff',\n        isSystemCommand: false\n    },\n    taxi: {\n        aliases: ['taxi', 'w', 'wait'],\n        functionName: 'runTaxi',\n        isSystemCommand: false\n    },\n    timewarp: {\n        aliases: ['timewarp', 'tw'],\n        functionName: '',\n        isSystemCommand: true\n    },\n    tutorial: {\n        aliases: ['tutorial'],\n        functionName: '',\n        isSystemCommand: true\n    }\n};\n\n/**\n * @property EXPEDITE\n * @type {array}\n * @final\n */\nexport const EXPEDITE = ['expedite', 'ex'];\n\n/**\n * Get the name of a command when given any of that command's aliases\n *\n * @function findCommandNameWithAlias\n * @param commandAlias {string}\n * @return {string}\n */\nexport function findCommandNameWithAlias(commandAlias) {\n    return _findKey(AIRCRAFT_COMMAND_MAP, (command) => command.aliases.indexOf(commandAlias) !== -1);\n}\n","import _compact from 'lodash/compact';\nimport _forEach from 'lodash/forEach';\nimport _isString from 'lodash/isString';\nimport _map from 'lodash/map';\nimport _tail from 'lodash/tail';\nimport AircraftCommandModel from '../aircraftCommand/AircraftCommandModel';\nimport {\n    AIRCRAFT_COMMAND_MAP,\n    findCommandNameWithAlias\n} from '../aircraftCommand/aircraftCommandMap';\nimport { PARSED_COMMAND_NAME } from '../../constants/inputConstants';\nimport ParsedCommand from '../ParsedCommand';\n\n/**\n * Symbol used to split the command string as it enters the class.\n *\n * @property COMMAND_ARGS_SEPARATOR\n * @type {string}\n * @final\n */\nconst COMMAND_ARGS_SEPARATOR = ' ';\n\n/**\n * This class is responsible for taking the content of the `$commandInput` and parsing it\n * out into commands and arguments.\n *\n * Everything this class needs comes in as a single string provided by `InputController.input_run()`.\n * ex:\n * - `timewarp 50`\n * - `AA777 fh 0270 d 050 sp 200`\n * - `AA777 hold dumba left 2min`\n *\n * **Differentiation of commands and arguments is determined by splitting the string on an empty space. This\n * is very important, so legacy commands did not have spaces between the command and argument. With this\n * implementation _every_ command shall have a space between itself and it's arguments.**\n *\n * Commands are broken out into two categories: `System` and `Transmit`.\n * - System commands are zero or single argument commands that are used for interacting with the app\n *   itself. Things like `timewarp` or `tutorial` are examples of system commands.\n *\n * - Transmit commands are instructions meant for a specific aircraft within the controlled airspace.\n *   These commands can have zero to many arguments, depending on the command. Some examples of transmit\n *   commands are `to`, `taxi`, `hold`.\n *\n * Commands go through a lifecycle as they move from raw to parsed:\n * - user types command and presses enter\n * - command string is captured via input value, then passed as an argument to this class\n * - determine if command string is a `System Command` or `Transmit`\n * - creation of `AircraftCommandModel` objects for each command/argument group found\n * - validate command arguments (number of arguments and data type)\n * - parse command arguments\n *\n * All available commands are defined in the `commandMap`. Two terms of note are alias and root command.\n * We would call the `takeoff` command a root command and `to` and `cto` aliases. The root command is the\n * one that shares the same key as the command definition which gives us the correct validator and parser.\n * The root command is also what the `AircraftModel` is expecting when it receives commands\n * from the `InputController`.\n *\n * @class CommandParser\n */\nexport default class CommandParser {\n    /**\n     * @constructor\n     * @for CommandParser\n     * @param rawCommandWithArgs {string}  string present in the `$commandInput` when the user pressed `enter`\n     */\n    constructor(rawCommandWithArgs = '') {\n        if (!_isString(rawCommandWithArgs)) {\n            // istanbul ignore next\n            // eslint-disable-next-line max-len\n            throw new TypeError(`Invalid parameter. AircraftCommandParser expects a string but received ${typeof rawCommandWithArgs}`);\n        }\n\n        /**\n         * Command name\n         *\n         * Could be either Transmit or a System command\n         *\n         * This is consumed by the `InputController` after parsing here and is used to\n         * determine what to do with the parsed command(s)\n         *\n         * @type {string}\n         * @default ''\n         */\n        this.command = '';\n\n        /**\n         * Aircraft callsign\n         *\n         * this is optional and not included with system commands\n         *\n         * @type {string}\n         * @default ''\n         */\n        this.callsign = '';\n\n        /**\n         * List of `AircraftCommandModel` objects.\n         *\n         * Each command is contained within a `AircraftCommandModel`, even System commands. This provides\n         * a consistent interface for obtaining commands and arguments (via getter) and also\n         * aloows for easy implementation of the legacy API structure.\n         *\n         * @type {array<AircraftCommandModel>}\n         */\n        this.commandList = [];\n\n        this._extractCommandsAndArgs(rawCommandWithArgs.toLowerCase());\n    }\n\n    /**\n     * Returns the parsed command.\n     * @return ParsedCommand\n     */\n    parse() {\n        return new ParsedCommand(this.command, this.commandList, this.callsign);\n    }\n\n    /**\n     * Accept the entire string provided to the constructor and attempt to break it up into:\n     * - System command and its arguments\n     * - Transmit commands and thier arguments\n     *\n     * @for CommandParser\n     * @method _extractCommandsAndArgs\n     * @param rawCommandWithArgs {string}\n     * @private\n     */\n    _extractCommandsAndArgs(rawCommandWithArgs) {\n        const commandOrCallsignIndex = 0;\n        const commandArgSegmentsWithCallsign = rawCommandWithArgs.split(COMMAND_ARGS_SEPARATOR).filter((t) => t);\n        const callsignOrSystemCommandName = commandArgSegmentsWithCallsign[commandOrCallsignIndex];\n        // effectively a slice of the array that returns everything but the first item\n        const commandArgSegments = _tail(commandArgSegmentsWithCallsign);\n\n        if (this._isSystemCommand(callsignOrSystemCommandName)) {\n            this._buildSystemCommandModel(commandArgSegmentsWithCallsign);\n\n            return;\n        }\n\n        this._buildTransmitAircraftCommandModels(callsignOrSystemCommandName, commandArgSegments);\n    }\n\n    /**\n     * Build a `AircraftCommandModel` for a System command then add that model to the `commandList`\n     *\n     * @for CommandParser\n     * @method _buildSystemCommandModel\n     * @private\n     */\n    _buildSystemCommandModel(commandArgSegments) {\n        const commandIndex = 0;\n        const argIndex = 1;\n        const commandName = findCommandNameWithAlias(commandArgSegments[commandIndex]);\n        const commandArgs = commandArgSegments[argIndex];\n        const aircraftCommandModel = new AircraftCommandModel(commandName);\n\n        // undefined will happen with zeroArgument system commands, so we check for that here\n        // and add only when args are defined\n        if (typeof commandArgs !== 'undefined') {\n            aircraftCommandModel.args.push(commandArgs);\n        }\n\n        this.command = commandName;\n        this.commandList.push(aircraftCommandModel);\n\n        this._validateAndParseCommandArguments();\n    }\n\n    /**\n     * Build `AircraftCommandModel` objects for each transmit commands then add them to the `commandList`\n     *\n     * @private\n     */\n    _buildTransmitAircraftCommandModels(callsignOrSystemCommandName, commandArgSegments) {\n        this.command = PARSED_COMMAND_NAME.TRANSMIT;\n        this.callsign = callsignOrSystemCommandName;\n        this.commandList = this._buildCommandList(commandArgSegments);\n\n        this._validateAndParseCommandArguments();\n    }\n\n    /**\n     * Loop through the commandArgSegments array and either create a new `AircraftCommandModel` or add\n     * arguments to a `AircraftCommandModel`.\n     *\n     * commandArgSegments will contain both commands and arguments (very contrived example):\n     * - `[cmd, arg, arg, cmd, cmd, arg, arg, arg]`\n     *\n     * this method is expecting that\n     * the first item it receives, that is not a space, is a command. we then push each successive\n     * array item to the args array until we find another command. then we repeat the process.\n     *\n     * this allows us to create several `AircraftCommandModel` with arguments and only loop over them once.\n     *\n     * @for CommandParser\n     * @method _buildCommandList\n     * @param commandArgSegments {array<string>}\n     * @return {array<AircraftCommandModel>}\n     * @private\n     */\n    _buildCommandList(commandArgSegments) {\n        const commandList = [];\n        let aircraftCommandModel;\n\n        for (let i = 0; i < commandArgSegments.length; i++) {\n            const commandOrArg = commandArgSegments[i];\n            const commandName = findCommandNameWithAlias(commandOrArg);\n\n            if (typeof aircraftCommandModel === 'undefined') {\n                if (typeof commandName === 'undefined') {\n                    continue;\n                }\n\n                aircraftCommandModel = new AircraftCommandModel(commandName);\n            } else {\n                if (typeof commandName === 'undefined') {\n                    aircraftCommandModel.args.push(commandOrArg);\n\n                    continue;\n                }\n\n                commandList.push(aircraftCommandModel);\n\n                aircraftCommandModel = new AircraftCommandModel(commandName);\n            }\n        }\n\n        // add last command to array\n        commandList.push(aircraftCommandModel);\n\n        return _compact(commandList);\n    }\n\n    /**\n     * Fire off the `_validateCommandArguments` method and throws any errors returned\n     *\n     * @for CommandParser\n     * @method _validateAndParseCommandArguments\n     * @private\n     */\n    _validateAndParseCommandArguments() {\n        const validationErrors = this._validateCommandArguments();\n\n        if (validationErrors.length > 0) {\n            _forEach(validationErrors, (error) => {\n                throw error;\n            });\n        }\n    }\n\n    /**\n     * For each `AircraftCommandModel` in the `commandList`, first validate it's arguments\n     * then parse those arguments into a consumable array.\n     *\n     * @for CommandParser\n     * @method _validateCommandArguments\n     * @private\n     */\n    _validateCommandArguments() {\n        const validatedCommandList = _map(this.commandList, (command) => {\n            if (typeof command === 'undefined') {\n                return null;\n            }\n\n            const errorMessage = command.validateArgs();\n\n            if (errorMessage) {\n                // we only return here so all the errors can be thrown at once\n                // from within the calling method\n                return errorMessage;\n            }\n\n            command.parseArgs();\n        });\n\n        return _compact(validatedCommandList);\n    }\n\n    /**\n     * Encapsulation of boolean logic used to determine if the `callsignOrSystemCommandName`\n     * is in fact a system command.\n     *\n     *\n     * @for CommandParser\n     * @method _isSystemCommand\n     * @param callsignOrSystemCommandName {string}\n     * @return {boolean}\n     */\n    _isSystemCommand(callsignOrSystemCommandName) {\n        const commandName = findCommandNameWithAlias(callsignOrSystemCommandName);\n\n        if (typeof commandName === 'undefined') {\n            return false;\n        }\n\n        return AIRCRAFT_COMMAND_MAP[commandName].isSystemCommand;\n    }\n}\n","import _defaultTo from 'lodash/defaultTo';\nimport { isValidCourseString, isValidDirectionString } from './argumentValidators';\nimport { REGEX } from '../../constants/globalConstants';\nimport {\n    convertToThousands,\n    convertStringToNumber\n} from '../../utilities/unitConverters';\n\n/**\n * Enumeration of possible the hold command argument names.\n *\n * Enumerated here base these nanes are shared accross several functions and this\n * provides a single source of truth.\n *\n * @property HOLD_COMMAND_ARG_NAMES\n * @type {Object}\n * @final\n */\nconst HOLD_COMMAND_ARG_NAMES = {\n    TURN_DIRECTION: 'turnDirection',\n    LEG_LENGTH: 'legLength',\n    FIX_NAME: 'fixName',\n    RADIAL: 'radial'\n};\n\n/**\n * Parses the the runway of an ils command.\n *\n * @function ilsParser\n * @param args {array}\n */\n// TODO: define the second value\nexport const ilsParser = (args) => [null, args[0]];\n\n/**\n * Converts a flight level altitude to a number in thousands and converts second arg to a boolean\n *\n * @function altitudeParser\n * @param args {array}\n * @return {array<number, boolean>}\n */\nexport const altitudeParser = (args) => {\n    const altitude = convertToThousands(args[0]);\n    // the validator will have already caught an invalid value here. if one exists, it is assumed to be valid and\n    // thus we return true. otherwise its false\n    const shouldExpedite = typeof args[1] !== 'undefined';\n\n    return [altitude, shouldExpedite];\n};\n\n/**\n * Converts a flight level altitude to a number in thousands if available\n *\n * @function optionalAltitudeParser\n * @param args {array}\n * @return {array<number>}\n */\nexport const optionalAltitudeParser = (args) => {\n    return args.length !== 0 ? [convertToThousands(args[0])] : [];\n};\n\n/**\n * Accepts a direction string:\n * - `left / l / right / r`\n *\n * and returns `left / right`\n *\n * @function directionNormalizer\n * @param direction {string}\n * @return normalizedDirection {string}\n */\nexport const directionNormalizer = (direction) => {\n    let normalizedDirection = direction;\n\n    if (direction === 'l') {\n        normalizedDirection = 'left';\n    } else if (direction === 'r') {\n        normalizedDirection = 'right';\n    }\n\n    return normalizedDirection;\n};\n\n/**\n * Returns a consistent array with the same shape no matter the number of arguments received\n *\n * Converts a flight level altitude to a number in thousands and converts second arg to a boolean\n *\n * @function headingParser\n * @param args {array}\n * @return {array<string, number, boolean>}\n */\nexport const headingParser = (args) => {\n    let direction;\n    let heading;\n    let isIncremental = false;\n\n    switch (args.length) {\n        case 1:\n            // existing api is expeting undefined values to be exactly null\n            direction = null;\n            heading = convertStringToNumber(args[0]);\n\n            return [direction, heading, isIncremental];\n        case 2:\n            isIncremental = args[1].length === 2 || args[1].length === 1;\n            direction = directionNormalizer(args[0]);\n            heading = convertStringToNumber(args[1]);\n\n            return [direction, heading, isIncremental];\n        default:\n            throw new Error('An error ocurred parsing the Heading arguments');\n    }\n};\n\n/**\n * Abstracted boolean logic used to detmine if a string contains `min` or `nm`.\n *\n * This is useful specifically with the `findHoldCommandByType`.\n *\n * @function isLegLengthArg\n * @param arg {string}\n * @return {boolean}\n */\nexport const isLegLengthArg = (arg) => REGEX.HOLD_DISTANCE.test(arg);\n\n/**\n * Given a type and an argument list, find the first occurance of `type` from within the argument list.\n *\n * We are looking for one of three things here:\n * - `turnDirection` - a variation of left or right\n * - `legLength` - length of hold leg in either minutes (min) or nautical miles (nm)\n * - `fixName` - assumed to be a string that isn't a `turnDirection` or `legLength`. The parser has no way of\n *               knowing if a certain string is an actual `fixName`. We can only determine that it isn't a\n *               `turnDirection` or `legLength`. This will error from within the `runHold` method if the\n *               `fixName` is not valid.\n *\n * @function findHoldCommandByType\n * @param type {HOLD_COMMAND_ARG_NAMES}\n * @param args {array}\n * @return {string|null}\n */\nexport const findHoldCommandByType = (type, args) => {\n    for (let i = 0; i < args.length; i++) {\n        const arg = args[i];\n\n        switch (type) {\n            case HOLD_COMMAND_ARG_NAMES.TURN_DIRECTION:\n                if (!isValidDirectionString(arg)) {\n                    continue;\n                }\n\n                // make sure we return only `left` or `right`\n                return directionNormalizer(arg);\n            case HOLD_COMMAND_ARG_NAMES.LEG_LENGTH:\n                if (!isLegLengthArg(arg)) {\n                    continue;\n                }\n\n                return arg;\n            case HOLD_COMMAND_ARG_NAMES.FIX_NAME:\n                if (isValidDirectionString(arg) || isLegLengthArg(arg)) {\n                    continue;\n                }\n\n                return arg;\n            case HOLD_COMMAND_ARG_NAMES.RADIAL:\n                if (!isValidCourseString(arg)) {\n                    continue;\n                }\n\n                return convertStringToNumber(arg);\n            default:\n                return null;\n        }\n    }\n\n    return null;\n};\n\n// TODO: This duplicates work being done with initializing WaypointModel._holdParameters\n//        We must determine how best to achieve this and remove the duplicated effort.\n/**\n * The `hold` command accepts arguments in any order thus, we use the `findHoldCommandByType` helper\n * method to do that for us. This provides an easy way tp find the correct argument, no matter the order,\n * and consistently return an array of the same shape.\n *\n * @function holdParser\n * @param args {array}\n * @return {array<string>}\n */\nexport const holdParser = (args) => {\n    // existing api is expeting undefined values to be exactly null\n    const fixName = findHoldCommandByType(HOLD_COMMAND_ARG_NAMES.FIX_NAME, args);\n    const turnDirection = _defaultTo(\n        findHoldCommandByType(HOLD_COMMAND_ARG_NAMES.TURN_DIRECTION, args),\n        null\n    );\n    const legLength = _defaultTo(\n        findHoldCommandByType(HOLD_COMMAND_ARG_NAMES.LEG_LENGTH, args),\n        null\n    );\n    const radial = _defaultTo(\n        findHoldCommandByType(HOLD_COMMAND_ARG_NAMES.RADIAL, args),\n        null\n    );\n\n    return [turnDirection, legLength, fixName, radial];\n};\n\n/**\n * the `timewarp` command needs to be able to provide a default value,\n * this parser allows us to do that.\n *\n * @function timewarpParser\n * @param  {array|undefined} [args=[]]\n * @return {array<number>}\n */\nexport const timewarpParser = (args = []) => {\n    const defaultTimewarpValue = 1;\n\n    if (args.length === 0) {\n        return [defaultTimewarpValue];\n    }\n\n    // calling method is expecting an array with values that will get spread later, thus we purposly\n    // return an array here\n    return [\n        convertStringToNumber(args[0])\n    ];\n};\n\n/**\n * Convert the altitude argument from flight level number (i.e. 180) to feet in thousands (i.e. 18000).\n *\n * @function crossingParser\n * @param  args {array} [fix name, altitude]\n * @return {array<string, number>}\n */\nexport const crossingParser = (args = []) => {\n    const fix = args[0];\n\n    let altitude;\n    let speed;\n\n    // Set i to 1 to skip fixName\n    for (let i = 1; i < args.length; i++) {\n        if (args[i][0].toLowerCase() === 'a') {\n            altitude = convertToThousands(args[i].toString()\n                .substr(1));\n        } else if (args[i][0].toLowerCase() === 's') {\n            speed = convertStringToNumber(args[i].toString()\n                .substr(1));\n        }\n    }\n\n    return [fix, altitude, speed];\n};\n","import _isNaN from 'lodash/isNaN';\nimport _isString from 'lodash/isString';\nimport _forEach from 'lodash/forEach';\nimport { convertStringToNumber } from '../../utilities/unitConverters';\nimport { EXPEDITE } from '../aircraftCommand/aircraftCommandMap';\nimport { ERROR_MESSAGE } from './parserMessages';\nimport {\n    INVALID_INDEX,\n    REGEX\n} from '../../constants/globalConstants';\n\n/**\n * Check that `args` has exactly zero values\n *\n * @function zeroArgumentsValidator\n * @param args {array}\n * @return {string|undefined}\n */\nexport const zeroArgumentsValidator = (args = []) => {\n    if (args.length !== 0) {\n        return ERROR_MESSAGE.ZERO_ARG_LENGTH;\n    }\n};\n\n/**\n * Checks that `args` has exactly one value\n *\n * @function singleArgumentValidator\n * @param args {array}\n * @return {string|undefined}\n */\nexport const singleArgumentValidator = (args = []) => {\n    if (args.length !== 1) {\n        return ERROR_MESSAGE.SINGLE_ARG_LENGTH;\n    }\n};\n\n/**\n * Checks that `args` has exactly zero or one value\n *\n * @function zeroOrOneArgumentValidator\n * @param args {array}\n * @return {string|undefined}\n */\nexport const zeroOrOneArgumentValidator = (args = []) => {\n    if (args.length > 1) {\n        return ERROR_MESSAGE.ZERO_OR_ONE_ARG_LENGTH;\n    }\n};\n\n/**\n * Checks that `args` has exactly one or two values\n *\n * @function oneOrTwoArgumentValidator\n * @param args {array}\n * @return {string|undefined}\n */\nexport const oneOrTwoArgumentValidator = (args = []) => {\n    if (args.length < 1 || args.length > 2) {\n        return ERROR_MESSAGE.ONE_OR_TWO_ARG_LENGTH;\n    }\n};\n\n/**\n * Checks that `args` has exactly one, two or three values\n *\n * @function oneToThreeArgumentsValidator\n * @param args {array}\n * @return {string|undefined}\n */\nexport const oneToThreeArgumentsValidator = (args = []) => {\n    if (args.length === 0 || args.length > 3) {\n        return ERROR_MESSAGE.ONE_TO_THREE_ARG_LENGTH;\n    }\n};\n\n/**\n * Checks that `args` has exactly one or three values\n *\n * @function oneOrThreeArgumentsValidator\n * @param args {array}\n * @return {string|undefined}\n */\nexport const oneOrThreeArgumentsValidator = (args = []) => {\n    if (args.length !== 1 && args.length !== 3) {\n        return ERROR_MESSAGE.ONE_OR_THREE_ARG_LENGTH;\n    }\n};\n\n/**\n * Checks that `args` has exactly two or three values\n *\n * @function twoOrThreeArgumentsValidator\n * @param args {array}\n * @return {string|undefined}\n */\nexport const twoOrThreeArgumentsValidator = (args = []) => {\n    if (args.length !== 2 && args.length !== 3) {\n        return ERROR_MESSAGE.TWO_OR_THREE_ARG_LENGTH;\n    }\n};\n\n/**\n * Checks that args is the required length and the data is of the correct type\n *\n * ```\n * Allowed argument shapes:\n * - ['030']\n * - ['030', 'expedite']\n * - ['030', 'ex']\n * ```\n *\n * @function altitudeValidator\n * @param args {array}\n * @return {string|undefined}\n */\nexport const altitudeValidator = (args = []) => {\n    const hasLengthError = oneOrTwoArgumentValidator(args);\n\n    if (hasLengthError) {\n        return hasLengthError;\n    }\n\n    const numberFromString = convertStringToNumber(args[0]);\n\n    if (_isNaN(numberFromString)) {\n        return ERROR_MESSAGE.ALTITUDE_MUST_BE_NUMBER;\n    }\n\n    if (args.length === 2 && EXPEDITE.indexOf(args[1]) === INVALID_INDEX) {\n        return ERROR_MESSAGE.ALTITUDE_EXPEDITE_ARG;\n    }\n};\n\n/**\n * Checks that there is exactly zero or one value and the data is of the correct type\n *\n * ```\n * Allowed argument shapes:\n * - ['030']\n * ```\n *\n * @function optionalAltitudeValidator\n * @param args {array}\n * @return {string|undefined}\n */\nexport const optionalAltitudeValidator = (args = []) => {\n    const hasLengthError = zeroOrOneArgumentValidator(args);\n\n    if (hasLengthError) {\n        return hasLengthError;\n    }\n\n    if (args.length !== 0) {\n        return altitudeValidator(args);\n    }\n};\n\n/**\n * Verifies a list of fix names are all strings and that there is at least one\n *\n * @function fixValidator\n * @param args {array}\n * @return {array<string>}\n */\nexport const fixValidator = (args = []) => {\n    let hasTypeError;\n\n    if (args.length < 1) {\n        return ERROR_MESSAGE.ONE_OR_MORE_ARG_LENGTH;\n    }\n\n    _forEach(args, (arg) => {\n        if (!_isString(arg) && !hasTypeError) {\n            hasTypeError = ERROR_MESSAGE.MUST_BE_STRING;\n        }\n    });\n\n    if (hasTypeError) {\n        return hasTypeError;\n    }\n};\n\n/**\n * Tests if value is exactly a 3 digit decimal number\n * between 001 and 360\n *\n * @function isValidCourseString\n * @param value {string}\n * @returns {boolean}\n */\nexport const isValidCourseString = (value) => {\n    // Can't rely on parseInt/convertStringToNumber as it'll parse 1min => 1\n    if (!REGEX.THREE_DIGIT_NUMBER.test(value)) {\n        return false;\n    }\n\n    const course = convertStringToNumber(value);\n\n    return course >= 1 && course <= 360;\n};\n\n/**\n * Returns true if value is one of `left / l / right / r`\n *\n * @function isValidDirectionString\n * @param value {string}\n * @return {boolean}\n */\nexport const isValidDirectionString = (value) => {\n    return value === 'left' ||\n        value === 'l' ||\n        value === 'right' ||\n        value === 'r';\n};\n\n/**\n * Checks that args is the required length and the data is of the correct type for the number of arguments\n *\n * ```\n * Allowed arguments shapes:\n * - ['180']\n * - ['left', '180']\n * - ['l', '180']\n * - ['left', '80']\n * - ['l', '80']\n * ```\n *\n * @function headingValidator\n * @param args {array}\n * @return {string|undefined}\n */\nexport const headingValidator = (args = []) => {\n    const { length } = args;\n    const hasLengthError = oneOrTwoArgumentValidator(args);\n    let numberFromString;\n\n    if (hasLengthError) {\n        return hasLengthError;\n    }\n\n    switch (length) {\n        case 1:\n            if (!isValidCourseString(args[0])) {\n                return ERROR_MESSAGE.HEADING_MUST_BE_VALID_COURSE;\n            }\n\n            break;\n        case 2:\n            numberFromString = convertStringToNumber(args[1]);\n\n            if (!isValidDirectionString(args[0])) {\n                return ERROR_MESSAGE.INVALID_DIRECTION_STRING;\n            }\n\n            if (args[1].length === 3 && !isValidCourseString(args[1])) {\n                return ERROR_MESSAGE.HEADING_MUST_BE_VALID_COURSE;\n            }\n\n            if (_isNaN(numberFromString)) {\n                return ERROR_MESSAGE.HEADING_MUST_BE_NUMBER;\n            }\n\n            if (numberFromString < 1) {\n                return ERROR_MESSAGE.INCREMENTAL_HEADING_MUST_BE_POSITIVE;\n            }\n\n            break;\n        // default case is included only for semtantics, this should not ever be reachable\n        // istanbul ignore next\n        default:\n            throw new Error('An error ocurred parsing the Heading arguments');\n    }\n};\n\n/**\n * Checks that args is the required length and the data is of the correct type\n *\n * ```\n * Allowed argument shapes:\n * - ['dumba']\n * - ['dumba', 'left', '2min']\n * - ['dumba', 'left', '2nm']\n * - ['dumba', 'right', '2min']\n * - ['dumba', 'right', '2nm']\n * - ['dumba', 'right', '2nm', '265']\n * ```\n *\n * @function holdValidator\n * @param args {array}\n * @return {array<string>}\n */\nexport const holdValidator = (args = []) => {\n    if (args.length > 4) {\n        return ERROR_MESSAGE.ZERO_TO_FOUR_ARG_LENGTH;\n    }\n\n    for (let i = 0; i < args.length; i++) {\n        if (!_isString(args[i])) {\n            return ERROR_MESSAGE.MUST_BE_STRING;\n        }\n    }\n};\n\n/**\n * Checks that `args` has one value that corresponds to a valid squawk\n *\n * @function squawkValidator\n * @param args {array}\n * @return {string|undefined}\n */\nexport const squawkValidator = (args = []) => {\n    if (args.length !== 1) {\n        return ERROR_MESSAGE.SINGLE_ARG_LENGTH;\n    }\n\n    if (!REGEX.TRANSPONDER_CODE.test(args[0])) {\n        return ERROR_MESSAGE.INVALID_SQUAWK;\n    }\n};\n\n/**\n * Checks that args is the required length and the data is of the correct type\n *\n * ```\n * Allowed argument shapes:\n * - ['dumba', 'a120', 's210']\n * ```\n *\n * @function crossingValidator\n * @param args {array}\n * @return {array<string>}\n */\nexport const crossingValidator = (args = []) => {\n    if (args.length !== 2 && args.length !== 3) {\n        return ERROR_MESSAGE.TWO_OR_THREE_ARG_LENGTH;\n    }\n\n    const [fixName] = args;\n\n    let altitude;\n    let speed;\n\n    // Set i to 1 to skip fixName\n    for (let i = 1; i < args.length; i++) {\n        if (typeof args[i][0] === 'string') {\n            if (args[i][0].toLowerCase() === 'a') {\n                altitude = args[i].toString().substr(1);\n            } else if (args[i][0].toLowerCase() === 's') {\n                speed = args[i].toString().substr(1);\n            }\n        }\n    }\n\n    if (!_isString(fixName)) {\n        return ERROR_MESSAGE.MUST_BE_STRING;\n    }\n\n    if (altitude) {\n        altitude = convertStringToNumber(altitude);\n\n        if (_isNaN(altitude)) {\n            return ERROR_MESSAGE.ALTITUDE_MUST_BE_NUMBER;\n        }\n    }\n\n    if (speed) {\n        speed = convertStringToNumber(speed);\n\n        if (_isNaN(speed)) {\n            return ERROR_MESSAGE.SPEED_MUST_BE_NUMBER;\n        }\n    }\n\n    if (args.length === 3) {\n        if (altitude == null) {\n            return ERROR_MESSAGE.ALTITUDE_MUST_BE_NUMBER;\n        } else if (speed == null) {\n            return ERROR_MESSAGE.SPEED_MUST_BE_NUMBER;\n        }\n    }\n};\n","/* eslint-disable max-len */\n/**\n * @property INVALID_ARG\n * @type {string}\n * @final\n */\nconst INVALID_ARG = 'Invalid argument';\n\n/**\n * @property INVALID_ARG_LENGTH\n * @type {string}\n * @final\n */\nconst INVALID_ARG_LENGTH = `${INVALID_ARG} length`;\n\n/**\n * Encapsulation of error messaging used with `argumentValidators` functions\n *\n * @property ERROR_MESSAGE\n * @type {Object}\n * @final\n */\nexport const ERROR_MESSAGE = {\n    ZERO_ARG_LENGTH: `${INVALID_ARG_LENGTH}. Expected exactly zero arguments`,\n    SINGLE_ARG_LENGTH: `${INVALID_ARG_LENGTH}. Expected exactly one argument`,\n    TWO_ARG_LENGTH: `${INVALID_ARG_LENGTH}. Expected exactly two arguments`,\n    THREE_ARG_LENGTH: `${INVALID_ARG_LENGTH}. Expected exactly three arguments`,\n    ZERO_OR_ONE_ARG_LENGTH: `${INVALID_ARG_LENGTH}. Expected zero or one argument`,\n    ZERO_TO_THREE_ARG_LENGTH: `${INVALID_ARG_LENGTH}. Expected zero to three arguments`,\n    ZERO_TO_FOUR_ARG_LENGTH: `${INVALID_ARG_LENGTH}. Expected zero to four arguments`,\n    ONE_OR_MORE_ARG_LENGTH: `${INVALID_ARG_LENGTH}. Expected one or more arguments`,\n    ONE_OR_TWO_ARG_LENGTH: `${INVALID_ARG_LENGTH}. Expected one or two arguments`,\n    ONE_TO_THREE_ARG_LENGTH: `${INVALID_ARG_LENGTH}. Expected one, two, or three arguments`,\n    ONE_OR_THREE_ARG_LENGTH: `${INVALID_ARG_LENGTH}. Expected one or three arguments`,\n    TWO_OR_THREE_ARG_LENGTH: `${INVALID_ARG_LENGTH}. Expected two or three arguments`,\n    ALTITUDE_EXPEDITE_ARG: `${INVALID_ARG}. Altitude accepts only \"expedite\" or \"ex\" as a second argument`,\n    ALTITUDE_MUST_BE_NUMBER: `${INVALID_ARG}. Altitude must be a number`,\n    SPEED_MUST_BE_NUMBER: `${INVALID_ARG}. Speed must be a number`,\n    HEADING_MUST_BE_NUMBER: `${INVALID_ARG}. Heading must be a number`,\n    HEADING_MUST_BE_VALID_COURSE: `${INVALID_ARG}. Heading must be between 001 and 360`,\n    INCREMENTAL_HEADING_MUST_BE_POSITIVE: `${INVALID_ARG}. Incremental heading must be positive`,\n    MUST_BE_STRING: `${INVALID_ARG}. Must be a string`,\n    INVALID_DIRECTION_STRING: `${INVALID_ARG}. Expected one of 'left / l / right / r' as the first argument when passed three arguments`,\n    HEADING_ACCEPTS_BOOLEAN_AS_THIRD_ARG: `${INVALID_ARG}. Heading accepts a boolean for the third argument when passed three arguments`,\n    INVALID_SQUAWK: `${INVALID_ARG}. Expected '0000'-'7777' for the transponder code.`\n};\n","import _first from 'lodash/first';\nimport _has from 'lodash/has';\nimport _last from 'lodash/last';\nimport _without from 'lodash/without';\nimport _values from 'lodash/values';\nimport {\n    IMPLIED_COMMANDS,\n    EXPLICIT_COMMANDS,\n    COMMAND_FUNCTIONS\n} from './scopeCommandMap';\nimport { DATA_BLOCK_DIRECTION_LENGTH_SEPARATOR } from '../../constants/scopeConstants';\n\n// TODO: Replace dummy sector codes with a proper `SectorCollection`\nconst SECTOR_HANDOFF_CODES = ['18', '19', '10', '12'];\n\n/**\n * A command to be interpreted by the scope itself\n * Used for manipulation of the display and other ATC tasks\n *\n * @class ScopeCommandModel\n */\nexport default class ScopeCommandModel {\n    /**\n     * @for ScopeCommandModel\n     * @constructor\n     * @param command {string}\n     */\n    constructor(command) {\n        /**\n         * Information usable to find the applicable aircraft\n         * This could be the CID, assigned squawk code, or full callsign\n         *\n         * @for ScopeCommandModel\n         * @property aircraftReference\n         * @type {string}\n         */\n        this.aircraftReference = '';\n\n        /**\n         * Array of arguments to be passed to the specified command function\n         *\n         * @for ScopeCommandModel\n         * @property commandArguments\n         * @type {array<string>}\n         */\n        this.commandArguments = [];\n\n        /**\n         * Name of the `ScopeModel` method to call to execute this command\n         *\n         * @for ScopeCommandModel\n         * @property commandFunction\n         * @type {string}\n         */\n        this.commandFunction = '';\n\n        this._init(command);\n    }\n\n    /**\n     * Perform initialization tasks\n     *\n     * @for ScopeCommandModel\n     * @method _init\n     * @param command {string}\n     */\n    _init(command) {\n        const pieces = _without(command.toUpperCase().split(' '), '');\n\n        this.aircraftReference = _last(pieces);\n        this.commandFunction = this._extractCommandFunction(pieces);\n        this.commandArguments = this._extractCommandArguments(pieces);\n    }\n\n    /**\n     * Accept the full command and return only the arguments\n     *\n     * @for ScopeCommandModel\n     * @method _extractCommandArguments\n     * @param command {string}\n     * @return {string}\n     */\n    _extractCommandArguments(command) {\n        if (_values(IMPLIED_COMMANDS).indexOf(this.commandFunction) !== -1) {\n            return _without(command, this.aircraftReference);\n        }\n\n        return command.splice(1, command.length - 2);\n    }\n\n    /**\n     * Accept the full command and return only the function name\n     *\n     * @for ScopeCommandModel\n     * @method _extractCommandFunction\n     * @param command {string}\n     * @return {string}\n     */\n    _extractCommandFunction(command) {\n        const firstElement = _first(command);\n\n        if (_has(EXPLICIT_COMMANDS, firstElement)) {\n            return EXPLICIT_COMMANDS[firstElement];\n        }\n\n        if (SECTOR_HANDOFF_CODES.indexOf(firstElement) !== -1) {\n            return COMMAND_FUNCTIONS.INITIATE_HANDOFF;\n        }\n\n        if (firstElement === '.') {\n            return COMMAND_FUNCTIONS.SCRATCHPAD;\n        }\n\n        if (firstElement.indexOf(DATA_BLOCK_DIRECTION_LENGTH_SEPARATOR) !== -1 || firstElement.length < 2) {\n            return COMMAND_FUNCTIONS.MOVE_DATA_BLOCK;\n        }\n\n        if (command.length === 1) {\n            return COMMAND_FUNCTIONS.ACCEPT_HANDOFF;\n        }\n\n        return COMMAND_FUNCTIONS.SCRATCHPAD;\n    }\n}\n","/**\n * Scope commands whose first element is a reference to the function to execute\n *\n * @enum EXPLICIT_COMMANDS\n * @type {object}\n */\nexport const EXPLICIT_COMMANDS = {\n    QP: 'propogateDataBlock',\n    QP_J: 'setHalo',\n    QU: 'route',\n    QZ: 'amendAltitude'\n};\n\n/**\n * Scope commands where the function to execute is not explicitly stated in\n * the command itself, but is \"implied\" based on the context of the entry\n *\n * @enum IMPLIED_COMMANDS\n * @type {object}\n */\nexport const IMPLIED_COMMANDS = {\n    ACCEPT_HANDOFF: 'acceptHandoff',\n    INITIATE_HANDOFF: 'initiateHandoff',\n    MOVE_DATA_BLOCK: 'moveDataBlock',\n    SCRATCHPAD: 'setScratchpad'\n};\n\n/**\n * Array of all available scope commands that can be run\n * @enum COMMAND_FUNCTIONS\n * @type {object}\n */\nexport const COMMAND_FUNCTIONS = {\n    ...IMPLIED_COMMANDS,\n    ...EXPLICIT_COMMANDS\n};\n","/**\n * @property FLIGHT_CATEGORY\n * @type {Object}\n * @final\n */\nexport const FLIGHT_CATEGORY = {\n    ARRIVAL: 'arrival',\n    DEPARTURE: 'departure',\n    OVERFLIGHT: 'overflight'\n};\n\n/**\n * Enumeration for the phases of flight\n *\n * @property FLIGHT_PHASE\n * @type {object}\n * @final\n */\nexport const FLIGHT_PHASE = {\n    /**\n     * initial status of a new departing aircraft. After the aircraft is issued the 'taxi' command,\n     * the aircraft transitions to 'taxi' mode\n     *\n     * @memberof FLIGHT_PHASE\n     * @property\n     * @type {string}\n     */\n    APRON: 'APRON',\n    /**\n     * the process of getting ready for takeoff. After a delay, the aircraft becomes ready and\n     * transitions into 'waiting' mode\n     *\n     * @memberof FLIGHT_PHASE\n     * @property TAXI\n     * @type {string}\n     */\n    TAXI: 'TAXI',\n    /**\n     * the aircraft is ready for takeoff and awaits clearence to take off\n     *\n     * @memberof FLIGHT_PHASE\n     * @property WAITING\n     * @type {string}\n     */\n    WAITING: 'WAITING',\n    /**\n     * is assigned to an aircraft in the process of taking off. The aircraft are still on the\n     * ground or have not yet reached the minimum altitude\n     *\n     * @memberof FLIGHT_PHASE\n     * @property TAKEOFF\n     * @type {string}\n     */\n    TAKEOFF: 'TAKEOFF',\n    /**\n     * Not yet reached requested cruise altitude\n     *\n     * Aircraft remain in this phase until reaching their requested cruise altitude (CRUISE)\n     *\n     * @memberof FLIGHT_PHASE\n     * @property CLIMB\n     * @type {string}\n     */\n    CLIMB: 'CLIMB',\n    /**\n     * Not yet cleared to descend below requested cruise altitude\n     *\n     * Aircraft remain in this phase until cleared to descend (DESCENT)\n     *\n     * @memberof FLIGHT_PHASE\n     * @property CRUISE\n     * @type {string}\n     */\n    CRUISE: 'CRUISE',\n    /**\n     * Instructed to enter (or already in) airborne holding pattern\n     *\n     * Aircraft remain in this phase until cleared out of the hold (CLIMB/CRUISE/DESCENT)\n     *\n     * @memberof FLIGHT_PHASE\n     * @property HOLD\n     * @type {string}\n     */\n    HOLD: 'HOLD',\n    /**\n     * Configured for (or already in) descent out of requested cruise altitude\n     *\n     * Aircraft remain in this phase until fully established on an approach (APPROACH)\n     *\n     * @memberof FLIGHT_PHASE\n     * @property DESCENT\n     * @type {string}\n     */\n    DESCENT: 'DESCENT',\n    /**\n     * Fully established on the approach, outside of the final approach fix\n     *\n     * Aircraft remain in this phase until within the final approach fix (LANDING)\n     *\n     * @memberof FLIGHT_PHASE\n     * @property APPROACH\n     * @type {string}\n     */\n    APPROACH: 'APPROACH',\n    /**\n     * Fully established on the approach, within the final approach fix\n     *\n     * Aircraft remain in this phase until instructed to go around (DESCENT)\n     *   - If landing successful, they will remain in this phase until deletion\n     *\n     * @memberof FLIGHT_PHASE\n     * @property LANDING\n     * @type {string}\n     */\n    LANDING: 'LANDING'\n};\n\n/**\n * Enumerations for various performance constants\n *\n * @property PERFORMANCE\n * @type {Object}\n * @final\n */\nexport const PERFORMANCE = {\n    /**\n     * Factor by which to increase the speed of deceleration on the ground as opposed\n     * to while in flight, due to the effects of reverse thrust and braking\n     *\n     * @property DECELERATION_FACTOR_DUE_TO_GROUND_BRAKING\n     * @type {Number}\n     * @final\n     */\n    DECELERATION_FACTOR_DUE_TO_GROUND_BRAKING: 3.5,\n\n    /**\n     * Maximum vertical distance between the aircraft and the glidepath to\n     * consider the aircraft to be \"established on the glidepath\"\n     *\n     * @property MAXIMUM_ALTITUDE_DIFFERENCE_CONSIDERED_ESTABLISHED_ON_GLIDEPATH\n     * @type {number}\n     * @final\n     */\n    MAXIMUM_ALTITUDE_DIFFERENCE_CONSIDERED_ESTABLISHED_ON_GLIDEPATH: 100,\n\n    /**\n    * Maximum distance from the current waypoint to allow us to proceed to the next waypoint\n    * due to a tight turn, without requiring us to continue toward the current waypoint.\n    *\n    * @property MAXIMUM_DISTANCE_TO_FLY_BY_WAYPOINT_NM\n    * @type {number}\n    * @final\n    */\n    MAXIMUM_DISTANCE_TO_FLY_BY_WAYPOINT_NM: 5,\n\n    /**\n     * Maximum distance from the current waypoint to consider it to have been passed over,\n     * allowing us to proceed to the next fix.\n     *\n     * @property MAXIMUM_DISTANCE_TO_PASS_WAYPOINT_NM\n     * @type {number}\n     * @final\n     */\n    MAXIMUM_DISTANCE_TO_PASS_WAYPOINT_NM: 0.5,\n\n    /**\n     * Maximum lateral offset from the approach course to consider the aircraft close enough\n     * to be \"established on the approach course\", which is an important condition for applying\n     * rules of separation.\n     *\n     * @property MAXIMUM_DISTANCE_CONSIDERED_ESTABLISHED_ON_APPROACH_COURSE_NM\n     * @type {number}\n     * @final\n     */\n    MAXIMUM_DISTANCE_CONSIDERED_ESTABLISHED_ON_APPROACH_COURSE_NM: 0.0822894, // appx. 500 feet\n\n    /**\n     * Maximum angular difference from the approach course heading to consider the aircraft close\n     * to be \"established on the approach course\", which is an important condition for applying\n     * rules of separation.\n     *\n     * @property MAXIMUM_ANGLE_CONSIDERED_ESTABLISHED_ON_APPROACH_COURSE\n     * @type {number}\n     * @final\n     */\n    MAXIMUM_ANGLE_CONSIDERED_ESTABLISHED_ON_APPROACH_COURSE: 0.0872665, // appx. 5 degrees\n\n    /**\n     * Maximum angular difference from the hold outbound heading to consider the aircraft close\n     * to be \"established on the hold course\".\n     *\n     * @property MAXIMUM_ANGLE_CONSIDERED_ESTABLISHED_ON_HOLD_COURSE\n     * @type {number}\n     * @final\n     */\n    MAXIMUM_ANGLE_CONSIDERED_ESTABLISHED_ON_HOLD_COURSE: 0.0017453, // appx. 0.1 degrees\n\n    /**\n     * Altitude above the runway to which aircraft may descend on an instrument approach.\n     * Note: Below this altitude, the aircraft is in landing mode\n     *\n     * @property INSTRUMENT_APPROACH_MINIMUM_DESCENT_ALTITUDE\n     * @type {number}\n     * @final\n     */\n    INSTRUMENT_APPROACH_MINIMUM_DESCENT_ALTITUDE: 200,\n\n    /**\n     * Length of time individual aircraft will require themselves to be established at Vref\n     * (their landing speed) before landing. If they cannot reach that speed by that time, they\n     * will not consider themselves on a \"stable approach\", and will likely go around.\n     *\n     * @memberof PERFORMANCE\n     * @property STABLE_APPROACH_TIME_SECONDS\n     * @type {number}\n     * @final\n     */\n    STABLE_APPROACH_TIME_SECONDS: 60,\n\n    /**\n     * Altitude above the runway at which aircraft begin their on-course turn, in feet\n     *\n     * @property TAKEOFF_TURN_ALTITUDE\n     * @type {number}\n     * @final\n     */\n    TAKEOFF_TURN_ALTITUDE: 400,\n\n    /**\n     * Rate of turn, in radians per second\n     *\n     * @property TURN_RATE\n     * @type {number}\n     * @final\n     */\n    TURN_RATE: 0.0523598776, // 3 degrees\n\n    /**\n     * Proportion of the maximum capable descent rate that aircraft will use by default\n     *\n     * @property TYPICAL_DESCENT_FACTOR\n     * @type {number}\n     * @final\n     */\n    TYPICAL_DESCENT_FACTOR: 0.7,\n\n    /**\n     * Proportion of the maximum capable climb rate that aircraft will use by default\n     *\n     * @property TYPICAL_CLIMB_FACTOR\n     * @type {number}\n     * @final\n     */\n    TYPICAL_CLIMB_FACTOR: 0.7,\n\n    /**\n     * Standard pressure, the baseline used universally, is 1013.25 hPa, which is equivalent to 1013.25 mb or 29.92 inHg\n     *\n     * @property DEFAULT_ALTIMETER_IN_INHG\n     * @type {number}\n     * @final\n     */\n    DEFAULT_ALTIMETER_IN_INHG: 29.92\n};\n\n/**\n * Separation distances between aircraft\n *\n * @property SEPARATION\n * @type {Object}\n * @final\n */\nexport const SEPARATION = {\n    /**\n     * 14.816km = 8nm (max possible sep minmum)\n     *\n     * @memberof SEPARATION\n     * @property MAX_KM\n     * @type {number}\n     * @final\n     */\n    MAX_KM: 14.816,\n    /**\n     * Standard Basic Lateral Separation Minimum\n     *\n     * @memberof SEPARATION\n     * @property STANDARD_LATERAL_KM\n     * @type {number}\n     * @final\n     */\n    STANDARD_LATERAL_KM: 5.556, // 3nm\n    /**\n     * Minimum vertical separation in feet\n     *\n     * @memberof SEPARATION\n     * @property VERTICAL_FT\n     * @type {number}\n     * @final\n     */\n    VERTICAL_FT: 1000\n};\n\n/**\n * Wake turbulence categories\n *\n * @property WAKE_TURBULENCE_CATEGORY\n * @type {Object}\n * @final\n */\nexport const WAKE_TURBULENCE_CATEGORY = {\n    LIGHT: {\n        LETTER: 'L',\n        APPEND: false,\n        SPOKEN: ''\n    },\n    MEDIUM: {\n        LETTER: 'M',\n        APPEND: false,\n        SPOKEN: ''\n    },\n    HEAVY: {\n        LETTER: 'H',\n        APPEND: true,\n        SPOKEN: 'heavy'\n    },\n    SUPER: {\n        LETTER: 'J',\n        APPEND: true,\n        SPOKEN: 'super'\n    }\n};\n\n/**\n * Engine types\n *\n * @property ENGINE_TYPE\n * @type {Object}\n * @final\n */\nexport const ENGINE_TYPE = {\n    ELECTRIC: 'E',\n    JET: 'J',\n    PISTON: 'P',\n    ROCKET: 'R',\n    TURBOPROP: 'T'\n};\n","/**\n * Character used to separate the airline and fleet\n * Example: AAL airlines and long fleet -> 'AAL/long'\n *\n * @enum AIRLINE_NAME_FLEET_SEPARATOR\n * @type {string}\n */\nexport const AIRLINE_NAME_FLEET_SEPARATOR = '/';\n\n/**\n * Default callsign format\n *\n * @enum DEFAULT_CALLSIGN_FORMAT\n * @type {string}\n*/\nexport const DEFAULT_CALLSIGN_FORMAT = '###';\n\n/**\n * Character used to represent a position where a random letter should be generated\n * in a callsign\n *\n * @enum CALLSIGN_RANDOM_LETTER_CHARACTER\n * @type {string}\n*/\nexport const CALLSIGN_RANDOM_LETTER_CHARACTER = '@';\n\n/**\n * Character used to represent a position where a random digit should be generated\n * in a callsign\n *\n * @enum CALLSIGN_RANDOM_DIGIT_CHARACTER\n * @type {string}\n*/\nexport const CALLSIGN_RANDOM_DIGIT_CHARACTER = '#';\n","/**\n * @enum AIRPORT_CONSTANTS {object}\n * @type {object}\n * @final\n */\nexport const AIRPORT_CONSTANTS = {\n    /**\n     * @memberof AIRPORT_CONSTANTS\n     * @property DEFAULT_SPAWN_ALTITUDE_MIN\n     * @type {number}\n     * @final\n     */\n    DEFAULT_SPAWN_ALTITUDE_MIN: 10000,\n\n    /**\n     * @memberof AIRPORT_CONSTANTS\n     * @property DEFAULT_SPAWN_ALTITUDE_MAX\n     * @type {number}\n     * @final\n     */\n    DEFAULT_SPAWN_ALTITUDE_MAX: 10000,\n\n    /**\n     * @memberof AIRPORT_CONSTANTS\n     * @property DEFAULT_SPAWN_AIRCRAFT_SPEED_KTS\n     * @type {number}\n     * @final\n     */\n    DEFAULT_SPAWN_AIRCRAFT_SPEED_KTS: 250,\n\n    /**\n     * Distance out along final approach course where the FAF is located\n     *\n     * @memberof AIRPORT_CONSTANTS\n     * @property FINAL_APPROACH_FIX_DISTANCE_NM\n     * @type {number}\n     * @final\n     */\n    FINAL_APPROACH_FIX_DISTANCE_NM: 5,\n\n    /**\n     * Maximum allowable indicated airspeed for aircraft below 10,000 feet MSL\n     *\n     * @memberof AIRPORT_CONSTANTS\n     * @property MAX_SPEED_BELOW_10K_FEET\n     * @type {number}\n     * @final\n     */\n    MAX_SPEED_BELOW_10K_FEET: 250,\n\n    /**\n     * @memberof AIRPORT_CONSTANTS\n     * @property MIN_ENTRAIL_DISTANCE_NM\n     * @type {number}\n     * @final\n     */\n    MIN_ENTRAIL_DISTANCE_NM: 5.5,\n\n    SRS_REDUCED_MINIMA_FEET: {\n        CAT1: 3000,\n        CAT2: 4500,\n        CAT3: 6000\n    }\n};\n\n/**\n * List of control positions at the airport, used to differentiate which ATC callsign to used\n *\n * @enum AIRPORT_CONTROL_POSITION_NAME\n * @type {object}\n * @final\n */\nexport const AIRPORT_CONTROL_POSITION_NAME = {\n    /**\n    * Provides approach control services\n    *\n    * @memberof AIRPORT_CONTROL_POSITION_NAME\n    * @property APPROACH\n    * @type {string}\n    * @final\n    */\n    APPROACH: 'app',\n\n    /**\n    * Provides departure control services\n    *\n    * @memberof AIRPORT_CONTROL_POSITION_NAME\n    * @property TOWER\n    * @type {string}\n    * @final\n    */\n    DEPARTURE: 'dep',\n\n    /**\n    * Provides Air Traffic Control Tower (ATCT) services for surface and runway movements\n    *\n    * @memberof AIRPORT_CONTROL_POSITION_NAME\n    * @property TOWER\n    * @type {string}\n    * @final\n    */\n    TOWER: 'twr'\n};\n\n/**\n * ICAO identifier of the airport to show after initial load\n *\n * @enum DEFAULT_AIRPORT_ICAO\n * @type {string}\n * @final\n */\nexport const DEFAULT_AIRPORT_ICAO = 'ksea';\n","/**\n* @property AUTOCOMPLETE_COMMAND_TYPE\n* @type {Object}\n* @final\n*/\nexport const AUTOCOMPLETE_COMMAND_TYPE = {\n    TRANSMIT: 'transmit',\n    SYSTEM: 'system'\n};\n\n/**\n* @property AUTOCOMPLETE_STATE\n* @type {Object}\n* @final\n*/\nexport const AUTOCOMPLETE_STATE = {\n    COMMANDS: {\n        NO_MATCHES: 'autocomplete_commands_no_matches',\n        MATCHES: 'autocomplete_commands_matches',\n        HIGHLIGHT: 'autocomplete_commands_highlight'\n    },\n    PARAMS: {\n        INVALID: 'autocomplete_params_invalid',\n        VALID: 'autocomplete_params_valid'\n    }\n};\n\n/**\n* @property AUTOCOMPLETE_COMMAND_STATES\n* @type {Array}\n* @final\n*/\nexport const AUTOCOMPLETE_COMMAND_STATES = Object.values(AUTOCOMPLETE_STATE.COMMANDS);\n\n/**\n* @property AUTOCOMPLETE_INPUT_PLACEHOLDER\n* @type {Object}\n* @final\n*/\nexport const AUTOCOMPLETE_INPUT_PLACEHOLDER = {\n    COMMAND: 'search commands',\n    PARAM: 'input arguments'\n};\n\n/**\n* @property AUTOCOMPLETE_PARAMS_VALIDITY\n* @type {Object}\n* @final\n*/\nexport const AUTOCOMPLETE_PARAMS_VALIDITY = {\n    INVALID: 'invalid',\n    CANDIDATE: 'candidate',\n    VALID: 'valid'\n};\n\n/**\n* @property AUTOCOMPLETE_REGEXP\n* @type {Object}\n* @final\n*/\nexport const AUTOCOMPLETE_REGEXP = {\n    WHITESPACE: /\\s+/,\n    FIRST_TOKEN: /(\\S+)/,\n    TOKEN_MID: /\\S\\S/,\n    TOKEN_END: /\\S\\s|\\S$/\n};\n","/**\n * Enumeration of canvas names\n *\n * @enum CANVAS_NAME\n * @final\n */\nexport const CANVAS_NAME = {\n    /**\n     * Name of the `static` canvas.\n     *\n     * This canvas should hold all of the items that do not update every frame;\n     * things like terrain, fixes, video map, etc\n     *\n     * @memberOf CANVAS_NAME\n     * @property STATIC\n     */\n    STATIC: 'static',\n\n    /**\n     * Name of the `dynamic` canvas.\n     *\n     * This canvas should hold all of the items that do update every frame;\n     * things like aircraft, aircraft data blocks, etc\n     *\n     * @memberOf CANVAS_NAME\n     * @property STATIC\n     */\n    DYNAMIC: 'dynamic'\n};\n\n/**\n * @enum BASE_CANVAS_FONT\n * @final\n */\nexport const BASE_CANVAS_FONT = '10px monoOne, monospace';\n\n/**\n * @enum DEFAULT_CANVAS_SIZE\n * @final\n */\nexport const DEFAULT_CANVAS_SIZE = {\n    HEIGHT: 480,\n    WIDTH: 640,\n    FOTTER_HEIGHT_OFFSET: 36\n};\n\n/**\n * @enum SCALE\n * @final\n */\nexport const SCALE = {\n    // TODO: not a fan of this name\n    CHANGE_FACTOR: 0.9,\n    DEFAULT: 8,\n    MIN: 1,\n    MAX: 120\n};\n\n/**\n * @enum PAN\n * @final\n */\nexport const PAN = {\n    X: 0,\n    Y: 0\n};\n","/**\n * @enum ENVIRONMENT {object}\n * @type {object}\n * @final\n */\nexport const ENVIRONMENT = {\n    /**\n     * @memberof ENVIRONMENT\n     * @property WIND_INCREASE_FACTOR_PER_FT\n     * @type {number}\n     * @final\n     */\n    WIND_INCREASE_FACTOR_PER_FT: 0.00002, // 2.00% per thousand feet\n\n    /**\n     * Factor at which density altitude increases per foot of altitude.\n     * NOTE: At a higher density altitude, the same IAS will yield a higher TAS.\n     *       Consider density altitude to be directly proportionate to the amount\n     *       by which the TAS increases above the IAS. Therefore, this value also\n     *       represents how much the TAS will increase per foot.\n     *\n     * @memberof ENVIRONMENT\n     * @property DENSITY_ALT_INCREASE_FACTOR_PER_FT\n     * @type {number}\n     * @final\n     */\n    DENSITY_ALT_INCREASE_FACTOR_PER_FT: 0.000016 // 0.16% per thousand feet\n};\n","/**\n * Enum containing all triggerable events triggered via the `EventBus`\n *\n * Before adding an event, every effort should be made to communicate\n * accross classes with direct imports. Events are available but can\n * be harder to debug and follow. Use with caution.\n *\n * @property EVENT\n * @type {Object}\n * @final\n */\nexport const EVENT = {\n    /**\n     * Add an aircraft to the simulation\n     *\n     * @memberof EVENT\n     * @property ADD_AIRCRAFT\n     * @type {string}\n     */\n    ADD_AIRCRAFT: 'add-aircraft',\n\n    /**\n     * @memberof EVENT\n     * @property AIRPORT_CHANGE\n     * @type {string}\n     */\n    AIRPORT_CHANGE: 'airport-change',\n\n    /**\n     * @memberof EVENT\n     * @property CHAT_LOG_DURATION_CHANGE\n     * @type {string}\n     */\n    CHAT_LOG_DURATION_CHANGE: 'chat-log-duration-change',\n\n    /**\n     * A click was registered outside of a specific `StripViewModel`\n     * and the active strip, if any, should have the `active`\n     * css classname removed\n     *\n     * @memberof EVENT\n     * @property DESELECT_AIRCRAFT\n     * @type {string}\n     */\n    DESELECT_AIRCRAFT: 'deselect-aircraft',\n\n    /**\n     * Event used to notify the `CanvasController` when a re-draw\n     * should happen outside of the usual game loop.\n     *\n     * This should only occur as a result of a user action\n     *\n     * @memberof EVENT\n     * @property MARK_SHALLOW_RENDER\n     * @type {string}\n     */\n    MARK_SHALLOW_RENDER: 'mark-shallow-render',\n\n    /**\n     * @memberof EVENT\n     * @property MEASURE_TOOL_STYLE_CHANGE\n     * @type {string}\n     */\n    MEASURE_TOOL_STYLE_CHANGE: 'measure-tool-style-change',\n\n    /**\n     * A pan event has been detected necessitating an entire redraw of each canvas\n     *\n     * This may constitute a pan-in-progress and not the completion of a panning action\n     *\n     * @memberof EVENT\n     * @property PAN_VIEWPORT\n     * @type {string}\n     */\n    PAN_VIEWPORT: 'pan-viewport',\n\n    /**\n     * Fired when the update loop should be either paused or resumed.\n     *\n     * Usually called when airport data is changing (ie, when a new airport\n     * is being loaded).\n     *\n     * @memberof EVENT\n     * @property PAUSE_UPDATE_LOOP\n     * @type {string}\n     */\n    PAUSE_UPDATE_LOOP: 'pause-update-loop',\n\n    /**\n     * Increase the length of the PTL lines on the scope\n     *\n     * @memberof EVENT\n     * @property PTL_DECREASE_LENGTH\n     * @type {string}\n     */\n    PTL_DECREASE_LENGTH: 'ptl-decrease-length',\n\n    /**\n     * Increase the length of the PTL lines on the scope\n     *\n     * @memberof EVENT\n     * @property PTL_INCREASE_LENGTH\n     * @type {string}\n     */\n    PTL_INCREASE_LENGTH: 'ptl-increase-length',\n\n    /**\n     * Remove an aircraft from the sim\n     *\n     * Usually as a result of the `del` user command\n     *\n     * @memberof EVENT\n     * @property REMOVE_AIRCRAFT\n     * @type {string}\n     */\n    REMOVE_AIRCRAFT: 'remove-aircraft',\n\n    /**\n     * Remove an `AircraftConflict` for an aircraft\n     *\n     * @memberof EVENT\n     * @property REMOVE_AIRCRAFT_CONFLICT\n     * @type {string}\n     */\n    REMOVE_AIRCRAFT_CONFLICT: 'remove-aircraft-conflict',\n\n    /**\n     * An aircraft has been located and needs to be centered in the view\n     *\n     * @memberof EVENT\n     * @property REQUEST_TO_CENTER_POINT_IN_VIEW\n     * @type {string}\n     */\n    REQUEST_TO_CENTER_POINT_IN_VIEW: 'request-to-center-point-in-view',\n\n    /**\n     * An aircraft radar return was double clicked and the corresponding\n     * `StripViewModel` must be scrolled into view\n     *\n     * @memberof EVENT\n     * @property SCROLL_TO_AIRCRAFT\n     * @type {string}\n     */\n    SCROLL_TO_AIRCRAFT: 'scroll-to-aircraft',\n\n    /**\n     * An aircraft radar return was clicked and the corresponding\n     * `StripViewModel` must also be selected\n     *\n     * @memberof EVENT\n     * @property SELECT_AIRCRAFT\n     * @type {string}\n     */\n    SELECT_AIRCRAFT: 'select-aircraft',\n\n    /**\n     * An aircraft progress strip was clicked\n     *\n     * @memberof EVENT\n     * @property STRIP_CLICK\n     * @type {string}\n     */\n    STRIP_CLICK: 'strip-click',\n\n    /**\n     * An aircraft progress strip was double clicked\n     *\n     * @memberof EVENT\n     * @property STRIP_DOUBLE_CLICK\n     * @type {string}\n     */\n    STRIP_DOUBLE_CLICK: 'strip-double-click',\n\n    /**\n     * Change the active theme to the specified theme name\n     *\n     * @memberof EVENT\n     * @property SET_THEME\n     * @type {string}\n     */\n    SET_THEME: 'set-theme',\n\n    /**\n     * Step through pre-defined timewarp speeds\n     *\n     * @memberof EVENT\n     * @property TIMEWARP_TOGGLE\n     * @type {string}\n     */\n    TIMEWARP_TOGGLE: 'timewarp-toggle',\n\n    /**\n     * An request has been made to clear and respawn traffic at the current airport\n     *\n     * @memberof EVENT\n     * @property TRAFFIC_RESET\n     * @type {string}\n     */\n    TRAFFIC_RESET: 'traffic-reset',\n\n    /**\n     * @memberof EVENT\n     * @property TOGGLE_AIRPORT_GUIDE\n     * @type {string}\n     */\n    TOGGLE_AIRPORT_GUIDE: 'toggle-airport-guide',\n\n    /**\n     * @memberof EVENT\n     * @property TOGGLE_AIRSPACE\n     * @type {string}\n     */\n    TOGGLE_AIRSPACE: 'toggle-airspace',\n\n    /**\n     * @memberof EVENT\n     * @property TOGGLE_CHANGELOG\n     * @type {string}\n     */\n    TOGGLE_CHANGELOG: 'toggle-changelog',\n\n    /**\n     * @memberof EVENT\n     * @property TOGGLE_LABELS\n     * @type {string}\n     */\n    TOGGLE_LABELS: 'toggle-labels',\n\n    /**\n     * Pause/unpause the game loop\n     *\n     * @memberof EVENT\n     * @property TOGGLE_PAUSE\n     * @type {string}\n     */\n    TOGGLE_PAUSE: 'toggle-pause',\n\n    /**\n     * @memberof EVENT\n     * @property TOGGLE_RESTRICTED_AREAS\n     * @type {string}\n     */\n    TOGGLE_RESTRICTED_AREAS: 'toggle-restricted-areas',\n\n    /**\n     * @memberof EVENT\n     * @property TOGGLE_SID_MAP\n     * @type {string}\n     */\n    TOGGLE_SID_MAP: 'toggle-sid-map',\n\n    /**\n     * @memberof EVENT\n     * @property TOGGLE_STAR_MAP\n     * @type {string}\n     */\n    TOGGLE_STAR_MAP: 'toggle-star-map',\n\n    /**\n     * @memberof EVENT\n     * @property TOGGLE_TERRAIN\n     * @type {string}\n     */\n    TOGGLE_TERRAIN: 'toggle-terrain',\n\n    /**\n     * @memberof EVENT\n     * @property TOGGLE_TRAFFIC\n     * @type {string}\n     */\n    TOGGLE_TRAFFIC: 'toggle-traffic',\n\n    /**\n     * Open/close the tutorial modal\n     *\n     * @memberof EVENT\n     * @property TOGGLE_TUTORIAL\n     * @type {string}\n     */\n    TOGGLE_TUTORIAL: 'toggle-tutorial',\n\n    /**\n     * @memberof EVENT\n     * @property TOGGLE_VIDEO_MAP\n     * @type {string}\n     */\n    TOGGLE_VIDEO_MAP: 'toggle-video-map',\n\n    /**\n     * @memberof EVENT\n     * @property RANGE_RINGS_CHANGE\n     * @type {string}\n     */\n    RANGE_RINGS_CHANGE: 'range-rings-change',\n\n    /**\n     * A click has been registered in the unpause button shown within the\n     * screen overlay whil the app is paused\n     *\n     * @memberof EVENT\n     * @property UNPAUSE\n     * @type {string}\n     */\n    UNPAUSE: 'unpause',\n\n    /**\n     * @memberof EVENT\n     * @property WIND_CHANGE\n     * @type {string}\n     */\n    WIND_CHANGE: 'wind-change',\n\n    /**\n     * The zoom level has changed necessitating an entire redraw of each canvas\n     *\n     * @memberof EVENT\n     * @property ZOOM_VIEWPORT\n     * @type {string}\n     */\n    ZOOM_VIEWPORT: 'zoom-viewport'\n};\n\nexport const AIRCRAFT_EVENT = {\n    /**\n     * Triggered when the aircraft received takeoff clearance.\n     *\n     * @memberof AIRCRAFT_EVENT\n     * @property TAKEOFF\n     * @type {string}\n     */\n    TAKEOFF: 'takeoff',\n\n    /**\n     * Trigged when the aircraft enters the approach\n     *\n     * @memberof AIRCRAFT_EVENT\n     * @property APPROACH\n     * @type {string}\n     */\n    APPROACH: 'approach',\n\n    /**\n     * Trigged when the aircraft reaches its final approach\n     *\n     * @memberof AIRCRAFT_EVENT\n     * @property FINAL_APPROACH\n     * @type {string}\n     */\n    FINAL_APPROACH: 'final-approach',\n\n    /**\n     * FOR FUTURE USE. Should be trigged when the aircraft landed on the runway.\n     *\n     * @memberof AIRCRAFT_EVENT\n     * @property LANDING\n     * @type {string}\n     */\n    LANDING: 'landing',\n\n    /**\n     * The aircraft landed and came to a fullstop.\n     *\n     * @memberof AIRCRAFT_EVENT\n     * @property FULLSTOP\n     * @type {string}\n     */\n    FULLSTOP: 'fullstop',\n\n    /**\n     * Triggered when the aircraft exits the airspace.\n     *\n     * @memberof AIRCRAFT_EVENT\n     * @property AIRSPACE_EXIT\n     * @type {string}\n     */\n    AIRSPACE_EXIT: 'airspace-exit'\n};\n","import { EVENT } from './eventNames';\nimport { MEASURE_TOOL_STYLE } from './inputConstants';\n\n/* eslint-disable max-len, import/prefer-default-export */\n/**\n * Name enumeration of available game options\n *\n * @property GAME_OPTION_NAMES\n * @type {Object}\n * @final\n */\nexport const GAME_OPTION_NAMES = {\n    CONTROL_METHOD: 'controlMethod',\n    CHAT_LOG_DURATION: 'chatLogDuration',\n    DRAW_PROJECTED_PATHS: 'drawProjectedPaths',\n    DRAW_ILS_DISTANCE_SEPARATOR: 'drawIlsDistanceSeparator',\n    MEASURE_TOOL_PATH: 'measureToolPath',\n    MOUSE_CLICK_DRAG: 'mouseClickDrag',\n    PROJECTED_TRACK_LINE_LENGTHS: 'ptlLengths',\n    RANGE_RINGS: 'rangeRings',\n    SOFT_CEILING: 'softCeiling',\n    THEME: 'theme',\n    TOWER_CONTROLLER: 'towerController'\n};\n\n/**\n * User options\n *\n * These options are presented in a modal and are stored in localStorage\n *\n * @property GAME_OPTION_VALUES\n * @type {array<object>}\n * @final\n */\nexport const GAME_OPTION_VALUES = [\n    {\n        name: GAME_OPTION_NAMES.THEME,\n        defaultValue: 'DEFAULT',\n        description: 'Scope Theme',\n        type: 'select',\n        onChangeEventHandler: EVENT.SET_THEME,\n        optionList: [\n            {\n                displayLabel: 'Classic',\n                value: 'CLASSIC'\n            },\n            {\n                displayLabel: 'Default',\n                value: 'DEFAULT'\n            },\n            {\n                displayLabel: 'Celestial',\n                value: 'CELESTIAL'\n            }\n        ]\n    },\n    {\n        name: GAME_OPTION_NAMES.TOWER_CONTROLLER,\n        defaultValue: 'SYSTEM',\n        description: 'Tower Control (Experimental)',\n        type: 'select',\n        onChangeEventHandler: null,\n        optionList: [\n            {\n                displayLabel: 'System Controlled',\n                value: 'SYSTEM'\n            },\n            {\n                displayLabel: 'User Controlled',\n                value: 'USER'\n            }\n        ]\n    },\n    {\n        name: GAME_OPTION_NAMES.CONTROL_METHOD,\n        defaultValue: 'classic',\n        description: 'Control Method',\n        type: 'select',\n        onChangeEventHandler: null,\n        optionList: [\n            {\n                displayLabel: 'Classic',\n                value: 'classic'\n            },\n            {\n                displayLabel: 'Arrow Keys',\n                value: 'arrows'\n            }\n        ]\n    },\n    {\n        name: GAME_OPTION_NAMES.DRAW_ILS_DISTANCE_SEPARATOR,\n        defaultValue: 'from-theme',\n        description: 'Show trailing separation indicator on ILS',\n        help: 'Draw a trailing indicator 2.5 NM (4.6km) behind landing aircraft to help with traffic spacing',\n        type: 'select',\n        onChangeEventHandler: null,\n        optionList: [\n            {\n                displayLabel: 'From Theme',\n                value: 'from-theme'\n            },\n            {\n                displayLabel: 'Yes',\n                value: 'yes'\n            },\n            {\n                displayLabel: 'No',\n                value: 'no'\n            }\n        ]\n    },\n    {\n        name: GAME_OPTION_NAMES.PROJECTED_TRACK_LINE_LENGTHS,\n        defaultValue: '1-2-4-8',\n        description: 'Projected Track Line (PTL) increments, in minutes',\n        type: 'select',\n        onChangeEventHandler: null,\n        optionList: [\n            {\n                displayLabel: '0.5 x n ... 8',\n                value: '0.5-1-1.5-2-2.5-3-3.5-4-4.5-5-5.5-6-6.5-7-7.5-8'\n            },\n            {\n                displayLabel: '1.0 x n ... 8',\n                value: '1-2-3-4-5-6-7-8'\n            },\n            {\n                displayLabel: '1-2-4-6-8-10-12-14-16',\n                value: '1-2-4-6-8-10-12-14-16'\n            },\n            {\n                displayLabel: '0.5-1-2-4-8',\n                value: '0.5-1-2-4-8'\n            },\n            {\n                displayLabel: '1-2-4-8',\n                value: '1-2-4-8'\n            }\n        ]\n    },\n    {\n        name: GAME_OPTION_NAMES.DRAW_PROJECTED_PATHS,\n        defaultValue: 'selected',\n        description: 'Draw aircraft projected path',\n        type: 'select',\n        onChangeEventHandler: null,\n        optionList: [\n            {\n                displayLabel: 'Always',\n                value: 'always'\n            },\n            {\n                displayLabel: 'Selected',\n                value: 'selected'\n            },\n            {\n                displayLabel: 'Never',\n                value: 'never'\n            }\n        ]\n    },\n    {\n        name: GAME_OPTION_NAMES.SOFT_CEILING,\n        defaultValue: 'yes',\n        description: 'Allow departures via climb',\n        help: 'Normally aircraft departs the airspace by flying beyond the horizontal bounds.  If set to yes, aircraft may also depart the airspace by climbing above it.',\n        type: 'select',\n        onChangeEventHandler: null,\n        optionList: [\n            {\n                displayLabel: 'Yes',\n                value: 'yes'\n            },\n            {\n                displayLabel: 'No',\n                value: 'no'\n            }\n        ]\n    },\n    {\n        name: GAME_OPTION_NAMES.MOUSE_CLICK_DRAG,\n        defaultValue: 'right',\n        description: 'Panning Button',\n        help: 'Which mouse button (left or right) should drag the canvas when held',\n        type: 'select',\n        onChangeEventHandler: null,\n        optionList: [\n            {\n                displayLabel: 'Left Click',\n                value: 'left'\n            },\n            {\n                displayLabel: 'Right Click',\n                value: 'right'\n            }\n        ]\n    },\n    {\n        name: GAME_OPTION_NAMES.RANGE_RINGS,\n        defaultValue: 'default',\n        description: 'Range rings',\n        help: 'Radius of range rings, in nautical miles',\n        type: 'select',\n        onChangeEventHandler: EVENT.RANGE_RINGS_CHANGE,\n        optionList: [\n            {\n                displayLabel: 'Default',\n                value: 'default'\n            },\n            {\n                displayLabel: 'Off',\n                value: 'off'\n            },\n            {\n                displayLabel: '1 nm',\n                value: 1\n            },\n            {\n                displayLabel: '2 nm',\n                value: 2\n            },\n            {\n                displayLabel: '5 nm',\n                value: 5\n            },\n            {\n                displayLabel: '10 nm',\n                value: 10\n            },\n            {\n                displayLabel: '15 nm',\n                value: 15\n            },\n            {\n                displayLabel: '20 nm',\n                value: 20\n            }\n        ]\n    },\n    {\n        name: GAME_OPTION_NAMES.MEASURE_TOOL_PATH,\n        defaultValue: '0',\n        description: 'Measure path style',\n        help: 'How the path is rendered when using the range/bearing measuring tool',\n        type: 'select',\n        onChangeEventHandler: EVENT.MEASURE_TOOL_STYLE_CHANGE,\n        optionList: [\n            {\n                displayLabel: 'Straight lines only',\n                value: MEASURE_TOOL_STYLE.STRAIGHT\n            },\n            {\n                displayLabel: 'Arc to next fix, then straight',\n                value: MEASURE_TOOL_STYLE.ARC_TO_NEXT\n            },\n            {\n                displayLabel: 'All lines arced',\n                value: MEASURE_TOOL_STYLE.ALL_ARCED\n            }\n        ]\n    },\n    {\n        name: GAME_OPTION_NAMES.CHAT_LOG_DURATION,\n        defaultValue: '3',\n        description: 'Chat Log Duration',\n        help: 'How long chat transmissions will remain visible before fading out',\n        type: 'number',\n        onChangeEventHandler: EVENT.CHAT_LOG_DURATION_CHANGE,\n        unit: 'sec',\n        validationHandler(newVal) {\n            const output = parseFloat(newVal);\n\n            return !Number.isNaN(output) && output > 0;\n        }\n    }\n];\n","/**\n * Commonly used time conversion rates\n *\n * @property TIME\n * @type {Object}\n * @final\n */\nexport const TIME = {\n    ONE_HOUR_IN_SECONDS: 3600,\n    ONE_HOUR_IN_MINUTES: 60,\n    ONE_HOUR_IN_MILLISECONDS: 3600000,\n    ONE_MINUTE_IN_HOURS: 1 / 60,\n    ONE_MINUTE_IN_SECONDS: 60,\n    ONE_MINUTE_IN_MILLISECONDS: 60000,\n    ONE_SECOND_IN_HOURS: 1 / 3600,\n    ONE_SECOND_IN_MINUTES: 1 / 60,\n    ONE_SECOND_IN_MILLISECONDS: 1000,\n    ONE_MILLISECOND_IN_HOURS: 1 / 3600000,\n    ONE_MILLISECOND_IN_MINUTES: 1 / 60000,\n    ONE_MILLISECOND_IN_SECONDS: 1 / 1000\n};\n\n/**\n * Regular expressions\n *\n * @property REGEX\n * @type {Object}\n * @final\n */\nexport const REGEX = {\n    ALTITUDE_RESTRICTION: /^A([0-9]{1,3})([+-]?)$/,\n    COMPASS_DIRECTION: /^[NESW]/,\n    DOUBLE_DOT: /\\.\\./g,\n    HOLD_DISTANCE: /^((?:0(?=\\.[1-9])|[1-9]|[1-4][0-9])(?:\\.[0-9])?)(nm|min)$/i,\n    LAT_LONG: /^([NESW])(\\d+(\\.\\d+)?)([d °](\\d+(\\.\\d+)?))?([m '](\\d+(\\.\\d+)?))?$/,\n    SPEED_RESTRICTION: /^S([1-9][0-9]{2})([+-]?)$/,\n    SW: /[SW]/,\n    SINGLE_DOT: /\\./g,\n    THREE_DIGIT_NUMBER: /^[0-9]{3}$/,\n    TRANSPONDER_CODE: /^[0-7][0-7][0-7][0-7]$/,\n    UNICODE: /[^\\u0000-\\u00ff]/,\n    WHITESPACE: /\\s/g\n};\n\n/**\n * A collection of constant values used in physics calculations\n *\n * @property PHYSICS_CONSTANTS\n * @type {Object}\n * @final\n */\nexport const PHYSICS_CONSTANTS = {\n    /**\n     * Average radius of simplified earth spheroid, in nautical miles\n     * Note: Calculated from conversion of 3440nm to km\n     *\n     * @property EARTH_RADIUS_NM\n     * @type {number}\n     * @final\n     */\n    EARTH_RADIUS_KM: 6370.88,\n\n    /**\n     * Average radius of simplified earth spheroid, in nautical miles\n     *\n     * @property EARTH_RADIUS_NM\n     * @type {number}\n     * @final\n     */\n    EARTH_RADIUS_NM: 3440,\n\n    /**\n     * Acceleration due to force of gravity, in m/s\n     *\n     * @property GRAVITATIONAL_MAGNITUDE\n     * @type {number}\n     * @final\n     */\n    GRAVITATIONAL_MAGNITUDE: 9.81\n};\n\n/**\n * Value used to indicate an invalid or otherwise unset Value\n * Examples include invalid array index, and numeric properties that have\n * no real value set other than the value (this value) set at initilization.\n *\n * @enum INVALID_NUMBER\n * @type {number}\n * @final\n */\nexport const INVALID_NUMBER = -1;\n\n/**\n * Enumeration for an invalid index number.\n *\n * @enum INVALID_INDEX\n * @type {number}\n * @final\n */\nexport const INVALID_INDEX = -1;\n","/**\n * Context of commands entered into command bar\n *\n * @enum COMMAND_CONTEXT\n * @type {object}\n */\nexport const COMMAND_CONTEXT = {\n    AIRCRAFT: 'aircraft',\n    SCOPE: 'scope'\n};\n\n/**\n * Enumeration of key codes used for inputs.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code\n *\n * @property KEY_CODES\n * @type {Object}\n * @final\n */\nexport const KEY_CODES = {\n\n    CONTROL_LEFT: 'ControlLeft',\n    CONTROL_RIGHT: 'ControlRight',\n    SHIFT_LEFT: 'ShiftLeft',\n    SHIFT_RIGHT: 'ShiftRight',\n    ENTER: 'Enter',\n    ESCAPE: 'Escape',\n    TAB: 'Tab',\n    PAGE_UP: 'PageUp',\n    PAGE_DOWN: 'PageDown',\n    // numpad\n    NUM_MULTIPLY: 'NumpadMultiply',\n    NUM_ADD: 'NumpadAdd',\n    NUM_SUBTRACT: 'NumpadSubtract',\n    NUM_DIVIDE: 'NumpadDivide',\n    NUM_ENTER: 'NumpadEnter',\n    // arrow keys\n    LEFT_ARROW: 'ArrowLeft',\n    UP_ARROW: 'ArrowUp',\n    RIGHT_ARROW: 'ArrowRight',\n    DOWN_ARROW: 'ArrowDown',\n    // F-Keys\n    F1: 'F1',\n    F2: 'F2',\n    F3: 'F3',\n    F4: 'F4',\n    F5: 'F5',\n    F6: 'F6',\n    F7: 'F7',\n    F8: 'F8',\n    F9: 'F9',\n    F10: 'F10',\n    F11: 'F11',\n    F12: 'F12',\n    // `\n    BACKQUOTE: 'Backquote'\n};\n\n/**\n * Enumeration of key codes used for inputs (for older browsers like IE)\n *\n * @property LEGACY_KEY_CODES\n * @type {Object}\n * @final\n */\nexport const LEGACY_KEY_CODES = {\n\n    ENTER: 13,\n    ESCAPE: 27,\n    TAB: 9,\n    PAGE_UP: 33,\n    PAGE_DOWN: 34,\n    // numpad\n    NUM_MULTIPLY: 106,\n    NUM_ADD: 107,\n    NUM_SUBTRACT: 109,\n    NUM_DIVIDE: 111,\n    // arrow keys\n    LEFT_ARROW: 37,\n    UP_ARROW: 38,\n    RIGHT_ARROW: 39,\n    DOWN_ARROW: 40,\n    // F-Keys\n    F1: 112,\n    F2: 113,\n    F3: 114,\n    F4: 115,\n    F5: 116,\n    F6: 117,\n    F7: 118,\n    F8: 119,\n    F9: 120,\n    F10: 121,\n    F11: 122,\n    F12: 123,\n    // `\n    BACKQUOTE: 220\n};\n\n/**\n * Enumeration of the render styles used by `MeasureTool`\n */\nexport const MEASURE_TOOL_STYLE = {\n    STRAIGHT: 'straight',\n    ARC_TO_NEXT: 'initial_turn',\n    ALL_ARCED: 'arced'\n};\n\n/**\n * Enumeration of the mouse button names\n *\n * @property MOUSE_BUTTON_NAMES\n * @type {Object}\n * @final\n */\nexport const MOUSE_BUTTON_NAMES = {\n    LEFT: 'left',\n    MIDDLE: 'middle',\n    RIGHT: 'right'\n};\n\n/**\n * Enumeration of mouse events returned from $event.which\n *\n * These codes can only be used with jQuery event object.\n *\n * @property MOUSE_EVENT_CODE\n * @type {Object}\n * @final\n */\nexport const MOUSE_EVENT_CODE = {\n    LEFT_PRESS: 1,\n    MIDDLE_PRESS: 2,\n    RIGHT_PRESS: 3\n};\n\n/**\n * Name of a command returned from the Parser\n *\n * @property PARSED_COMMAND_NAME\n * @type {Object}\n * @final\n */\nexport const PARSED_COMMAND_NAME = {\n    AIRAC: 'airac',\n    AIRPORT: 'airport',\n    AUTO: 'auto',\n    CLEAR: 'clear',\n    PAUSE: 'pause',\n    RATE: 'rate',\n    TIMEWARP: 'timewarp',\n    TRANSMIT: 'transmit',\n    TUTORIAL: 'tutorial'\n};\n","/**\n * @property LOG\n * @type {Object}\n * @final\n */\nexport const LOG = {\n    DEBUG: 0,\n    INFO: 1,\n    WARNING: 2,\n    ERROR: 3,\n    FATAL: 4\n};\n","/**\n * Screen position to default to if the actual position cannot be calculated, in shape of [x,y]\n *\n * @property DEFAULT_SCREEN_POSITION\n * @type {Array}\n * @final\n */\nexport const DEFAULT_SCREEN_POSITION = [0, 0];\n\n/**\n * Map of the content of all indices of the array parsed into the position model\n *\n * @property GPS_COORDINATE_INDEX\n * @type {Object}\n * @final\n */\nexport const GPS_COORDINATE_INDEX = {\n    /**\n     * @property LATITUDE\n     * @type {number}\n     * @final\n     */\n    LATITUDE: 0,\n\n    /**\n     * @property LONGITUDE\n     * @type {number}\n     * @final\n     */\n    LONGITUDE: 1,\n\n    /**\n     * @property ELEVATION\n     * @type {number}\n     * @final\n     */\n    ELEVATION: 2\n};\n\n/**\n * Map of the content of all the indices of the relativePosition array\n *\n * @property RELATIVE_POSITION_OFFSET_INDEX\n * @type {Object}\n * @final\n */\nexport const RELATIVE_POSITION_OFFSET_INDEX = {\n    /**\n     * @property LATITUDINAL\n     * @type {number}\n     * @final\n     */\n    LATITUDINAL: 0,\n\n    /**\n     * @property LONGITUDINAL\n     * @type {number}\n     * @final\n     */\n    LONGITUDINAL: 1\n};\n","/**\n* Symbol that divides each direct segment\n*\n* @enum DIRECT_SEGMENT_DIVIDER\n* @type {string}\n* @final\n*/\nexport const DIRECT_SEGMENT_DIVIDER = '..';\n\n/**\n* Known types of `LegModel`s\n*\n* @enum LEG_TYPE\n* @type {object}\n* @final\n*/\nexport const LEG_TYPE = {\n    /**\n    * For legs following an airway from entry point to exit point\n    *\n    * @memberof LEG_TYPE\n    * @property AIRWAY\n    * @type {string}\n    */\n    AIRWAY: 'airway',\n\n    /**\n    * For legs that are simply direct from the previous fix to the next fix\n    *\n    * @memberof LEG_TYPE\n    * @property DIRECT\n    * @type {string}\n    */\n    DIRECT: 'direct',\n\n    /**\n    * For legs following an instrument procedure from entry point to exit point\n    *\n    * This currently includes SIDs and STARs (though additional procedures are planned)\n    *\n    * @memberof LEG_TYPE\n    * @property PROCEDURE\n    * @type {string}\n    */\n    PROCEDURE: 'procedure'\n};\n\n/**\n* Symbol that divides each route segment\n*\n* @enum PROCEDURE_OR_AIRWAY_SEGMENT_DIVIDER\n* @type {string}\n* @final\n*/\nexport const PROCEDURE_OR_AIRWAY_SEGMENT_DIVIDER = '.';\n\n/**\n* @property PROCEDURE_TYPE\n* @type {Object}\n* @final\n*/\nexport const PROCEDURE_TYPE = {\n    SID: 'SID',\n    STAR: 'STAR'\n};\n","/**\n * Character used to separate the data block direction and length when specified\n * in a scope command. Example: '3/2' --> direction '3' and length '2'\n *\n * @enum DATA_BLOCK_DIRECTION_LENGTH_SEPARATOR\n * @type {string}\n */\nexport const DATA_BLOCK_DIRECTION_LENGTH_SEPARATOR = '/';\n\n/**\n * Map of which number position correlates to what heading away from the\n * aircraft to draw the leader line and data block\n *\n * @enum DATA_BLOCK_POSITION_MAP\n * @type {object}\n */\nexport const DATA_BLOCK_POSITION_MAP = {\n    8: 360,\n    9: 45,\n    6: 90,\n    3: 135,\n    2: 180,\n    1: 225,\n    4: 270,\n    7: 315,\n    5: 'ctr'\n};\n","import _mapValues from 'lodash/mapValues';\n\n// TODO: Why are SO many element-specific selectors classes instead of IDs?\n// We are for some reason defining an ID, and sometimes finding the element by\n// searching the ID name, and other times we are searching by the id-specific\n// class name that is also assigned to that specific element... why?\n/**\n * CSS classnames used throught the app.\n *\n * @property CLASSNAMES\n * @type {Object}\n * @final\n */\nexport const CLASSNAMES = {\n    ACTIVE: 'active',\n    AIRCRAFT: 'aircraft',\n    AIRPORT_GUIDE_VIEW: 'js-airportGuide-view',\n    AIRPORT_LIST: 'airport-list',\n    AIRPORT_LIST_ITEM: 'airport-list-item',\n    AIRPORT_LIST_ITEM_IS_ACTIVE: 'mix-airport-list-item_isActive',\n    AIRPORT_SEARCH: 'search',\n    ALL_SET: 'allSet',\n    ALTITUDE: 'altitude',\n    ARRIVAL: 'arrival',\n    BLACKBOX: 'blackBox',\n    CALLSIGN: 'callsign',\n    CHANGELOG_CONTAINER: 'js-changelogContainer',\n    CHANGELOG_CONTENT: 'js-changelog',\n    CHANGELOG_VERSION: 'changelog-version',\n    COMMAND_SCOPE_MODE: 'scope-mode',\n    CONTROL: 'control',\n    DEPARTURE: 'departure',\n    DESTINATION: 'destination',\n    DIALOG: 'dialog',\n    DIALOG_BODY: 'dialog-body',\n    FAST_FORWARDS: 'fast-forwards',\n    FOLLOWING_STAR: 'followingSTAR',\n    FORM_VALUE: 'form-value',\n    HEADING: 'heading',\n    HIDDEN: 'hidden',\n    HOLD: 'hold',\n    LEFT: 'left',\n    LOADING_VIEW: 'js-loadingView',\n    LOOKING_GOOD: 'lookingGood',\n    MESSAGE: 'message',\n    NEGATIVE: 'negative',\n    NEXT: 'next',\n    NOT_SELECTABLE: 'notSelectable',\n    OPEN: 'open',\n    OPTIONS_DIALOG: 'option-dialog',\n    TRAFFIC_DIALOG: 'traffic-dialog',\n    TRAFFIC_DEFAULT_BUTTON: 'js-trafficDefaultButton',\n    TRAFFIC_RESTART_BUTTON: 'js-trafficRestartButton',\n    OVERFLIGHT: 'overflight',\n    PAUSED: 'paused',\n    PREV: 'prev',\n    RIGHT: 'right',\n    RUNWAY: 'runway',\n    SPEED_2: 'speed-2',\n    SPEED_5: 'speed-5',\n    SPEED: 'speed',\n    STRIP_VIEW_AIRCRAFT_TYPE: '.js-stripView-aircraftModel',\n    STRIP_VIEW_ALTERNATE_AIRPORT_ID: '.js-stripView-alternateAirportId',\n    STRIP_VIEW_ARRIVAL_AIRPORT_ID: '.js-stripView-arrivalAirportId',\n    STRIP_VIEW_ARRIVALS_LIST: 'js-stripViewArrivals-list',\n    STRIP_VIEW_ASSIGNED_ALTITUDE: '.js-stripView-assignedAltitude',\n    STRIP_VIEW_CALLSIGN: '.js-stripView-callsign',\n    STRIP_VIEW_CID: '.js-stripView-cid',\n    STRIP_VIEW_DEPARTURE_AIRPORT_ID: '.js-stripView-departureAirportId',\n    STRIP_VIEW_DEPARTURES_LIST: 'js-stripViewDepartures-list',\n    STRIP_VIEW_FLIGHT_PLAN_ALTITUDE: '.js-stripView-flightPlanAltitude',\n    STRIP_VIEW_FLIGHT_PLAN: '.js-stripView-flightPlan',\n    STRIP_VIEW_IS_HIDDEN: 'mix-stripView_isHidden',\n    STRIP_VIEW_PREPLANNING: 'stripView-preplanning',\n    STRIP_VIEW_REMARKS: '.js-stripView-remarks',\n    STRIP_VIEW_RUNWAY: '.js-stripView-runway',\n    STRIP_VIEW_TRANSPONDER: '.js-stripView-transponder',\n    STRIP_VIEW_TRIGGER: 'js-stripView-trigger',\n    STRIP_VIEW: 'js-stripView',\n    STRIP: 'strip',\n    SWITCH_AIRPORT: 'switch-airport',\n    TOGGLE_AIRPORT_GUIDE: 'toggle-airport-guide',\n    TOGGLE_AIRSPACE: 'toggle-airspace',\n    TOGGLE_CHANGELOG: 'js-changelogToggle',\n    TOGGLE_LABELS: 'toggle-labels',\n    TOGGLE_RESTRICTED_AREAS: 'toggle-restricted-areas',\n    TOGGLE_PAUSE: 'toggle-pause',\n    TOGGLE_SIDS: 'toggle-sids',\n    TOGGLE_SPEECH: 'toggle-speech',\n    TOGGLE_STARS: 'toggle-stars',\n    TOGGLE_TERRAIN: 'toggle-terrain',\n    TOGGLE_TRAFFIC: 'toggle-traffic',\n    TOGGLE_TUTORIAL: 'toggle-tutorial',\n    TOGGLE_VIDEO_MAP: 'toggle-video-map',\n    WARN: 'warn',\n    WARNING_BUTTON: 'warning-button'\n};\n\n/**\n * CSS IDs used throughout the app.\n *\n * @property SELECTOR_IDS\n * @type {Object}\n * @final\n */\nexport const IDS = {\n    AIRPORT_GUIDE: 'airportGuide-bd',\n    AIRPORT_GUIDE_CONTAINER: 'airportGuide-container',\n    AIRPORT_SWITCH: 'airport-switch',\n    AUTOCOMPLETE: 'autocomplete',\n    AUTOCOMPLETE_INPUT: 'autocomplete-input',\n    AUTOCOMPLETE_OUTPUT: 'autocomplete-output',\n    AUTOCOMPLETE_SPACER: 'autocomplete-spacer',\n    AUTOCOMPLETE_SUGGESTS: 'autocomplete-suggests',\n    CANVASES: 'canvases',\n    CLOCK: 'clock',\n    COMMAND: 'command',\n    LOADING: 'loading',\n    LOG: 'log',\n    NAVAIDS_CANVAS: 'navaids-canvas',\n    PAUSED: 'paused',\n    TOGGLE_OPTIONS: 'toggle-options',\n    TUTORIAL: 'tutorial',\n    GITHUB_EXTERNAL_LINK: 'js-github-external-link',\n    SCORE: 'score',\n    SCORE_LOG: 'score-log',\n    SIDEBAR: 'sidebar'\n};\n\n/**\n * Take a classname string and return a classname selector that can be used by jQuery to find an HTML Element.\n *\n * @function buildSelectorsFromClassnames\n * @return {object}\n */\nconst buildSelectorsFromClassnames = () => {\n    const classnameSelectors = _mapValues(CLASSNAMES, (value) => {\n        return `.${value}`;\n    });\n\n    return classnameSelectors;\n};\n\n/**\n *\n * @function buildSelectorsFromIds\n * @return {object}\n */\nconst buildSelectorsFromIds = () => {\n    const idSelectors = _mapValues(IDS, (value) => {\n        return `#${value}`;\n    });\n\n    return idSelectors;\n};\n\n/**\n * @property DOM_SELECTORS\n * @type {Object}\n * @final\n */\nconst DOM_SELECTORS = {\n    ...buildSelectorsFromClassnames(),\n    ...buildSelectorsFromIds()\n};\n\n/**\n * Combinator constant.\n *\n * Allows for a single import that has access to both CLASSNAMES, IDS and DOM_SELECTORS\n *\n * @property SELECTORS\n * @type {Object}\n * @final\n */\nexport const SELECTORS = {\n    CLASSNAMES,\n    IDS,\n    DOM_SELECTORS\n};\n","/**\n * @property VOICES\n * @type {Array}\n * @final\n */\nexport const VOICES = [\n    'Alex',\n    'Daniel',\n    'Fiona',\n    'Google US English',\n    'Google UK English Female',\n    'Google UK English Male'\n];\n\n/**\n * @property LOWER_PITCH\n * @type {float}\n * @final\n */\nexport const LOWER_PITCH = 0.9;\n\n/**\n * @property HIGHER_PITCH\n * @type {float}\n * @final\n */\nexport const HIGHER_PITCH = 1.125;\n\n/**\n * @property NORMAL_SPEED\n * @type {float}\n * @final\n */\nexport const NORMAL_SPEED = 1.0;\n\n/**\n * @property FASTER_SPEED\n * @type {float}\n * @final\n */\nexport const FASTER_SPEED = 1.125;\n","/**\n * @property STORAGE_KEY\n * @type {Object}\n * @final\n */\nexport const STORAGE_KEY = {\n    ATC_LAST_AIRPORT: 'atc-last-airport',\n    ATC_LAST_VERSION: 'atc-last-version',\n    ATC_SPEECH_ENABLED: 'atc-speech-enabled',\n    FIRST_RUN_TIME: 'first-run-time',\n    ZOOM_LEVEL: 'zoom-level'\n};\n","import { THEME_CLASSIC } from './themes/classic/theme';\nimport { THEME_DEFAULT } from './themes/default/theme';\nimport { THEME_CELESTIAL } from './themes/celestial/theme';\n\nexport const THEME = {\n    CLASSIC: THEME_CLASSIC,\n    DEFAULT: THEME_DEFAULT,\n    CELESTIAL: THEME_CELESTIAL\n};\n","/**\n * @property COLOR\n * @type {Object}\n * @final\n */\nexport const COLOR = {\n    BLUE_VERY_LIGHT: 'rgba(64, 127, 143, 1.0)',\n    BLUE_VERY_LIGHT_02: 'rgba(64, 127, 143, 0.2)',\n    BLUE_LIGHT: 'rgba(56, 111, 125, 1.0)',\n    BLUE_MEDIUM_LIGHT: 'rgba(48, 96, 108, 1.0)',\n    BLUE_MEDIUM: 'rgba(90, 180, 255, 1.0)',\n    BLUE_MEDIUM_DARK: 'rgba(32, 64, 72, 1.0)',\n    BLUE_MEDIUM_DARK_01: 'rgba(32, 64, 72, 0.1)',\n    BLUE_DARK: 'rgba(24, 49, 55, 1.0)',\n    BLUE_VERY_DARK: 'rgba(16, 33, 37, 1.0)',\n    BLUE_01: 'rgba(30,120,255,1.0)',\n    BLUE_02: 'rgba(70,70,170,1.0)',\n    GREEN_LIGHT: 'rgba(193, 218, 205, 1.0)',\n    GREEN_DARK: 'rgba(0,255,0,1.0)',\n    GRAY_VERY_VERY_DARK: 'rgba(20, 20, 20, 1.0)',\n    GRAY_BRIGHT: 'rgba(217, 217, 217, 1.0)',\n    GRAY_DIM: 'rgba(140,140,140,1.0)',\n    GRAY_DIMMER: 'rgba(54,54,54,1.0)',\n    RED_BRIGHT: 'rgba(255, 0, 0, 1.0)',\n    RED: 'rgba(224, 128, 128, 1.0)',\n    RED_02: 'rgba(224, 128, 128, 0.2)',\n    WHITE: 'rgba(255, 255, 255, 1.0)',\n    WHITE_05: 'rgba(255, 255, 255, 0.5)',\n    TRANSPARENT: 'rgba(0, 0, 0, 0)'\n};\n","import { COLOR } from '../color';\n\n// TODO: Instead of individual colors, can we somehow specify an alpha value\n// for 'IN_RANGE', 'OUT_OF_RANGE' and 'SELECTED', to be applied to the entire\n// data block? Possibly `cc.globalAlpha`, to be only effective while drawing\n// the data block, then `cc.restore()` to return to normal opacity?\n/**\n * Colors and options for data blocks\n *\n * @enum DATA_BLOCK_THEME\n * @type {object}\n */\nexport const DATA_BLOCK_THEME = {\n    /**\n     * Number of characters of aircraft model icao to show in data block\n     *\n     * @memberof AIRCRAFT_MODEL_ICAO_CHARACTER_LIMIT\n     * @type {number}\n     */\n    AIRCRAFT_MODEL_ICAO_CHARACTER_LIMIT: 4,\n\n    /**\n     * Color of the bar on the left side of the data block\n     * Opacity used for when the aircraft is within the airspace\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property ARRIVAL_BAR_IN_RANGE\n     */\n    ARRIVAL_BAR_IN_RANGE: COLOR.BLUE_VERY_LIGHT,\n\n    /**\n     * Color of the bar on the left side of the data block\n     * Opacity used for when the aircraft is outside the airspace\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property ARRIVAL_BAR_OUT_OF_RANGE\n     */\n    ARRIVAL_BAR_OUT_OF_RANGE: COLOR.BLUE_VERY_LIGHT,\n\n    /**\n     * Color of the bar on the left side of the data block\n     * Opacity used for when the aircraft is selected\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property ARRIVAL_BAR_SELECTED\n     */\n    ARRIVAL_BAR_SELECTED: COLOR.BLUE_VERY_LIGHT,\n\n    /**\n     * Color of the data block fill (if it is enabled)\n     * Opacity used for when the aircraft is within the airspace\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property BACKGROUND_IN_RANGE\n     */\n    BACKGROUND_IN_RANGE: COLOR.BLUE_VERY_LIGHT,\n\n    /**\n     * Color of the data block fill (if it is enabled)\n     * Opacity used for when the aircraft is outside the airspace\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property BACKGROUND_OUT_OF_RANGE\n     */\n    BACKGROUND_OUT_OF_RANGE: COLOR.BLUE_VERY_LIGHT,\n\n    /**\n     * Color of the data block fill (if it is enabled)\n     * Opacity used for when the aircraft is selected\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property BACKGROUND_SELECTED\n     */\n    BACKGROUND_SELECTED: COLOR.BLUE_VERY_LIGHT,\n\n    /**\n     * Color of the bar on the left side of the data block\n     * Opacity used for when the aircraft is within the airspace\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property DEPARTURE_BAR_IN_RANGE\n     */\n    DEPARTURE_BAR_IN_RANGE: COLOR.BLUE_VERY_LIGHT,\n\n    /**\n     * Color of the bar on the left side of the data block\n     * Opacity used for when the aircraft is outside the airspace\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property DEPARTURE_BAR_OUT_OF_RANGE\n     */\n    DEPARTURE_BAR_OUT_OF_RANGE: COLOR.BLUE_VERY_LIGHT,\n\n    /**\n     * Color of the bar on the left side of the data block\n     * Opacity used for when the aircraft is selected\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property DEPARTURE_BAR_SELECTED\n     */\n    DEPARTURE_BAR_SELECTED: COLOR.BLUE_VERY_LIGHT,\n\n    /**\n     * Whether or not to fill the data block with a background color\n     * This z\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property HAS_FILL\n     */\n    HAS_FILL: false,\n\n    /**\n     * One half of the height of a data block\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property HALF_HEIGHT\n     */\n    HALF_HEIGHT: 16,\n\n    /**\n     * One half of the width of a data block\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property HALF_HEIGHT\n     */\n    HALF_WIDTH: 30,\n\n    /**\n     * Height of a data block\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property HEIGHT\n     */\n    HEIGHT: 32,\n\n    /**\n     * Direction to extend the data block away from the target\n     * Currently, only 360, 45, 90, 135, 180, 225, 270, and 315 are available.\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property LEADER_DIRECTION\n     */\n    LEADER_DIRECTION: 360,\n\n    /**\n     * Number of additional pixels away from the target to position the data block\n     * Used to adjust spacing between data block and target at lowest leader length\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property LEADER_LENGTH_ADJUSTMENT_PIXELS\n     */\n    LEADER_LENGTH_ADJUSTMENT_PIXELS: -10,\n\n    /**\n     * Number of pixels longer the leader line becomes with each increase of\n     * the 'leader length' value\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property LEADER_LENGTH_INCREMENT_PIXELS\n     */\n    LEADER_LENGTH_INCREMENT_PIXELS: 25,\n\n    /**\n     * Default length of the leader lines (no meaningful units)\n     * The 'leader line' is the line that connects the target (position dot) to\n     * the data block so you know which callsign applies to which aircraft\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property LEADER_LENGTH\n     */\n    LEADER_LENGTH: 1,\n\n    /**\n     * Distance from data block after which the leader line is drawn\n     * Higher values mean a shorter leader line\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @type {number}\n     */\n    LEADER_PADDING_FROM_BLOCK_PX: -2,\n\n    /**\n     * Distance from radar target after which the leader line is drawn\n     * Higher values mean a shorter leader line\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @type {number}\n     */\n    LEADER_PADDING_FROM_TARGET_PX: 0,\n\n    /**\n     * Number of characters of scratchpad to show in data block\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @type {number}\n     */\n    SCRATCHPAD_CHARACTER_LIMIT: 3,\n\n    /**\n     * Font and size of text used in the data block\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property TEXT_FONT\n     */\n    TEXT_FONT: '10px monoOne, monospace',\n\n    /**\n     * Color of text used in the data block\n     * Opacity used for when the aircraft is within the airspace\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property TEXT_IN_RANGE\n     */\n    TEXT_IN_RANGE: COLOR.WHITE,\n\n    /**\n     * Color of text used in the data block\n     * Opacity used for when the aircraft is outside the airspace\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property TEXT_OUT_OF_RANGE\n     */\n    TEXT_OUT_OF_RANGE: COLOR.GREEN_DARK,\n\n    /**\n     * Color of text used in the data block\n     * Opacity used for when the aircraft is selected\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property TEXT_SELECTED\n     */\n    TEXT_SELECTED: COLOR.WHITE,\n\n    /**\n     * Width of the data block\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property WIDTH\n     */\n    WIDTH: 60\n};\n","import { COLOR } from '../color';\n\n/**\n * Colors and options for radar targets\n *\n * @enum RADAR_TARGET_THEME\n * @type {object}\n */\nexport const RADAR_TARGET_THEME = {\n\n    /**\n     * Color of the dots behind the aircraft, showing where it has been\n     * Opacity used for when the aircraft is within the airspace\n     *\n     * @memberof RADAR_TARGET_THEME\n     * @property HISTORY_DOT_INSIDE_RANGE\n     */\n    HISTORY_DOT_INSIDE_RANGE: COLOR.BLUE_02,\n\n    /**\n     * Color of the dots behind the aircraft, showing where it has been\n     * Opacity used for when the aircraft is outside the airspace\n     *\n     * @memberof RADAR_TARGET_THEME\n     * @property HISTORY_DOT_OUTSIDE_RANGE\n     */\n    HISTORY_DOT_OUTSIDE_RANGE: COLOR.BLUE_02,\n\n    /**\n     * Radius of the history dots, in kilometers\n     *\n     * @memberof RADAR_TARGET_THEME\n     * @property HISTORY_DOT_RADIUS_KM\n     */\n    HISTORY_DOT_RADIUS_KM: 0.3,\n\n    /**\n     * Number of history dots to display behind the aircraft\n     *\n     * @memberof RADAR_TARGET_THEME\n     * @property HISTORY_LENGTH\n     */\n    HISTORY_LENGTH: 5,\n\n    /**\n     * Color of projected track lines\n     *\n     * @memberof RADAR_TARGET_THEME\n     * @property PROJECTED_TRACK_LINES\n     */\n    PROJECTED_TRACK_LINES: COLOR.WHITE,\n\n    /**\n     * Color of projection lines showing an arrival aircraft will go\n     * (for selected aircraft)\n     *\n     * @memberof RADAR_TARGET_THEME\n     * @property PROJECTION_ARRIVAL\n     */\n    PROJECTION_ARRIVAL: COLOR.RED,\n\n    /**\n     * Color of projection lines showing an arrival aircraft will go\n     * (for non-selected aircraft when projected path set to \"always\")\n     *\n     * @memberof RADAR_TARGET_THEME\n     * @property PROJECTION_ARRIVAL_ALL\n     */\n    PROJECTION_ARRIVAL_ALL: COLOR.RED_02,\n\n    /**\n     * Color of projection lines showing where a departure aircraft will go\n     * (for selected aircraft)\n     *\n     * @memberof RADAR_TARGET_THEME\n     * @property PROJECTION_DEPARTURE\n     */\n    PROJECTION_DEPARTURE: COLOR.BLUE_VERY_LIGHT,\n\n    /**\n     * Color of projection lines showing where a departure aircraft will go\n     * (for non-selected aircraft when projected path set to \"always\")\n     *\n     * @memberof RADAR_TARGET_THEME\n     * @property PROJECTION_DEPARTURE_ALL\n     */\n    PROJECTION_DEPARTURE_ALL: COLOR.BLUE_VERY_LIGHT_02,\n\n    /**\n     * Color of projection lines used when the aircraft is\n     * established on an instrument approach\n     *\n     * @memberof RADAR_TARGET_THEME\n     * @property PROJECTION_ESTABLISHED_ON_APPROACH\n     */\n    PROJECTION_ESTABLISHED_ON_APPROACH: COLOR.RED,\n\n    /**\n     * Color of any radar target, including that of aircraft\n     * A 'radar target' is the dot showing the actual position\n     *\n     * @memberof RADAR_TARGET_THEME\n     * @property RADAR_TARGET\n     */\n    RADAR_TARGET: COLOR.BLUE_01,\n\n    /**\n     * Radius to draw all radar targets\n     *\n     * @memberof RADAR_TARGET_THEME\n     * @property RADIUS_KM\n     */\n    RADIUS_KM: 0.5,\n\n    /**\n     * Radius to draw radar targets of aircraft that are currently selected\n     *\n     * @memberof RADAR_TARGET_THEME\n     * @property RADIUS_SELECTED_KM\n     */\n    RADIUS_SELECTED_KM: 0.5,\n\n    /**\n     * Color of conflict rings (shown to warn you of possible issue)\n     *\n     * @memberof RADAR_TARGET_THEME\n     * @property RING_CONFLICT\n     */\n    RING_CONFLICT: COLOR.BLUE_MEDIUM,\n\n    /**\n     * Color of violation rings (shown when aircraft have lost separation)\n     *\n     * @memberof RADAR_TARGET_THEME\n     * @property RING_VIOLATION\n     */\n    RING_VIOLATION: COLOR.RED_BRIGHT,\n\n    /**\n     * Color of halo\n     *\n     * @memberof RADAR_TARGET_THEME\n     * @property HALO\n     */\n    HALO: COLOR.BLUE_MEDIUM,\n\n    /**\n     * Whether or not the small line behind aircraft established on an\n     * instrument approach should be drawn\n     *\n     * @memberof RADAR_TARGET_THEME\n     * @property TRAILING_SEPARATION_INDICATOR_ENABLED\n     */\n    TRAILING_SEPARATION_INDICATOR_ENABLED: false,\n\n    /**\n     * Color of small line behind aircraft established on an instrument approach\n     *\n     * @memberof RADAR_TARGET_THEME\n     * @property TRAILING_SEPARATION_INDICATOR\n     */\n    TRAILING_SEPARATION_INDICATOR: COLOR.RED_BRIGHT\n};\n","import { COLOR } from '../color';\n\n/**\n * Colors and options for scope\n *\n * @enum SCOPE_THEME\n * @type {object}\n */\nexport const SCOPE_THEME = {\n\n    /**\n     * Color to fill the airspace area\n     *\n     * @memberof SCOPE_THEME\n     * @property AIRSPACE_FILL\n     */\n    AIRSPACE_FILL: COLOR.TRANSPARENT,\n\n    /**\n     * Color to draw the solid line along the airspace perimeter\n     *\n     * @memberof SCOPE_THEME\n     * @property AIRSPACE_PERIMETER\n     */\n    AIRSPACE_PERIMETER: COLOR.TRANSPARENT,\n\n    /**\n     * Color of the overall background of the scope\n     *\n     * @memberof SCOPE_THEME\n     * @property BACKGROUND\n     */\n    BACKGROUND: COLOR.BLACK_07,\n\n    /**\n     * Color of the minor and major hash marks of the relative compass headings\n     * displayed when an aircraft is selected\n     *\n     * @memberof SCOPE_THEME\n     * @property COMPASS_HASH\n     */\n    COMPASS_HASH: COLOR.GRAY_DIM,\n\n    /**\n     * Color of the heading text by the major hash marks of the relative compass\n     * headings displayed when an aircraft is selected\n     *\n     * @memberof SCOPE_THEME\n     * @property COMPASS_TEXT\n     */\n    COMPASS_TEXT: COLOR.GRAY_DIM,\n\n    /**\n     * Color of the crosshair symbol drawn by `CanvasController.canvas_draw_crosshairs()`\n     * This is mostly a debug function used to help developers get some context on the\n     * state of the canvas when examining and improving the current drawing system\n     *\n     * @memberof SCOPE_THEME\n     * @property CROSSHAIR_STROKE\n     */\n    CROSSHAIR_STROKE: COLOR.RED,\n\n    /**\n     * Color to fill the fix triangles with\n     *\n     * @memberof SCOPE_THEME\n     * @property FIX_FILL\n     */\n    FIX_FILL: COLOR.GRAY_DIM,\n\n    /**\n     * Color to use for the labels on each of the fixes\n     *\n     * @memberof SCOPE_THEME\n     * @property FIX_TEXT\n     */\n    FIX_TEXT: COLOR.GRAY_DIM,\n\n    /**\n     * Size to draw halos when size is not specified\n     *\n     * @memberof SCOPE_THEME\n     * @property HALO_DEFAULT_RADIUS_NM\n     */\n    HALO_DEFAULT_RADIUS_NM: 3,\n\n    /**\n     * Maximum size to draw halos when size is not specified\n     *\n     * @memberof SCOPE_THEME\n     * @property HALO_MAX_RADIUS_NM\n     */\n    HALO_MAX_RADIUS_NM: 20,\n\n    /**\n     * Color to use for the background on the `MeasureTool` labels\n     *\n     * @memberof SCOPE_THEME\n     * @property MEASURE_BACKGROUND\n     */\n    MEASURE_BACKGROUND: COLOR.TRANSPARENT,\n\n    /**\n     * Color to use for the text on the `MeasureTool` line\n     *\n     * @memberof SCOPE_THEME\n     * @property MEASURE_LINE\n     */\n    MEASURE_LINE: COLOR.GRAY_BRIGHT,\n\n    /**\n     * Color to use for the labels on the `MeasureTool` labels\n     *\n     * @memberof SCOPE_THEME\n     * @property MEASURE_TEXT\n     */\n    MEASURE_TEXT: COLOR.GRAY_BRIGHT,\n\n    /**\n     * Color of the range rings shown on the scope around the airport\n     *\n     * @memberof SCOPE_THEME\n     * @property RANGE_RING_COLOR\n     */\n    RANGE_RING_COLOR: COLOR.GRAY_DIMMER,\n\n    /**\n     * Color used to depict the restricted airspace areas\n     *\n     * @memberof SCOPE_THEME\n     * @property RESTRICTED_AIRSPACE\n     */\n    RESTRICTED_AIRSPACE: COLOR.GRAY_DIMMER,\n\n    /**\n     * Color of the lines extending out from the runway thresholds\n     *\n     * @memberof SCOPE_THEME\n     * @property RUNWAY_EXTENDED_CENTERLINE\n     */\n    RUNWAY_EXTENDED_CENTERLINE: COLOR.GRAY_DIM,\n\n    /**\n     * Color of the runway label text\n     *\n     * @memberof SCOPE_THEME\n     * @property RUNWAY_LABELS\n     */\n    RUNWAY_LABELS: COLOR.GRAY_DIM,\n\n    /**\n     * Color of the runways themselves\n     *\n     * @memberof SCOPE_THEME\n     * @property RUNWAY\n     */\n    RUNWAY: COLOR.WHITE,\n\n    /**\n     * Color of the lines drawn between fixes on SIDs\n     *\n     * @memberof SCOPE_THEME\n     * @property SID\n     */\n    SID: COLOR.BLUE_VERY_LIGHT,\n\n    /**\n     * Color of the lines drawn between fixes on STARs\n     *\n     * @memberof SCOPE_THEME\n     * @property STAR\n     */\n    STAR: COLOR.RED,\n\n    /**\n     * Color of the lines drawn between fixes on STARs\n     *\n     * @memberof SCOPE_THEME\n     * @property TOP_ROW_TEXT\n     */\n    TOP_ROW_TEXT: COLOR.GREEN_DARK,\n\n    /**\n     * Color of the video map lines (defined in the `maps`\n     * section of the airport file)\n     *\n     * @memberof SCOPE_THEME\n     * @property VIDEO_MAP\n     */\n    VIDEO_MAP: COLOR.GRAY_DIM\n};\n","/**\n * Colors and options for terrain contours\n *\n * @enum TERRAIN_THEME\n * @type {object}\n */\nexport const TERRAIN_THEME = {\n    /**\n     * Opacity of the lines on outer edges of terrain-elevated areas\n     *\n     * @memberof TERRAIN_THEME\n     * @property BORDER_OPACITY\n     */\n    BORDER_OPACITY: 1,\n\n    /**\n     * Opacity of the fill color within terrain-elevated areas\n     *\n     * @memberof TERRAIN_THEME\n     * @property FILL_OPACITY\n     */\n    FILL_OPACITY: 0.0,\n\n    /**\n     * Colors for each elevation level (in feet), in HSL\n     * From these HSL values, we later generate HSLA for use in the canvas\n     *\n     * Note that values must use the following units:\n     * (H) Hue:         degrees\n     * (S) Saturation:  percentage\n     * (L) Lightness:   percentage\n     *\n     * @memberof TERRAIN_THEME\n     * @property COLOR\n     */\n    COLOR: {\n        0: '0, 0%, 54.9%',\n        1000: '0, 0%, 54.9%',\n        2000: '0, 0%, 54.9%',\n        3000: '0, 0%, 54.9%',\n        4000: '0, 0%, 54.9%',\n        5000: '0, 0%, 54.9%',\n        6000: '0, 0%, 54.9%',\n        7000: '0, 0%, 54.9%',\n        8000: '0, 0%, 54.9%',\n        9000: '0, 0%, 54.9%',\n        10000: '0, 0%, 54.9%',\n        11000: '0, 0%, 54.9%',\n        12000: '0, 0%, 54.9%',\n        13000: '0, 0%, 54.9%',\n        14000: '0, 0%, 54.9%',\n        15000: '0, 0%, 54.9%',\n        16000: '0, 0%, 54.9%',\n        17000: '0, 0%, 54.9%',\n        18000: '0, 0%, 54.9%',\n        19000: '0, 0%, 54.9%',\n        20000: '0, 0%, 54.9%',\n        21000: '0, 0%, 54.9%',\n        22000: '0, 0%, 54.9%',\n        23000: '0, 0%, 54.9%',\n        24000: '0, 0%, 54.9%',\n        25000: '0, 0%, 54.9%'\n    }\n};\n","import { COLOR } from '../color';\n\n/**\n * Colors and options for wind vane\n *\n * @enum WIND_VANE_THEME\n * @type {object}\n */\nexport const WIND_VANE_THEME = {\n\n    /**\n     * Color of the line indicating the wind direction in gusty winds\n     *\n     * @memberof WIND_VANE_THEME\n     * @property DIRECTION_LINE_GUSTY\n     */\n    DIRECTION_LINE_GUSTY: COLOR.WHITE,\n\n    /**\n     * Color of the line indicating the wind direction\n     *\n     * @memberof WIND_VANE_THEME\n     * @property DIRECTION_LINE\n     */\n    DIRECTION_LINE: COLOR.WHITE,\n\n    /**\n     * Color of the ring around the wind speed\n     *\n     * @memberof WIND_VANE_THEME\n     * @property INNER_RING_STROKE\n     */\n    INNER_RING_STROKE: COLOR.WHITE,\n\n    /**\n     * Color to fill the whole wind vane\n     *\n     * @memberof WIND_VANE_THEME\n     * @property OUTER_RING_FILL\n     */\n    OUTER_RING_FILL: COLOR.GRAY_VERY_VERY_DARK,\n\n    /**\n     * Color of the wind speed text\n     *\n     * @memberof WIND_VANE_THEME\n     * @property WIND_SPEED_TEXT\n     */\n    WIND_SPEED_TEXT: COLOR.GREEN_DARK\n};\n","import { DATA_BLOCK_THEME } from './modules/dataBlock';\nimport { RADAR_TARGET_THEME } from './modules/radarTarget';\nimport { SCOPE_THEME } from './modules/scope';\nimport { TERRAIN_THEME } from './modules/terrain';\nimport { WIND_VANE_THEME } from './modules/windVane';\n\n/**\n * @enum THEME_DEFAULT\n * @type {Object}\n * @final\n */\nexport const THEME_CELESTIAL = {\n    CLASSNAME: 'canvas-theme-celestial',\n    DATA_BLOCK: DATA_BLOCK_THEME,\n    RADAR_TARGET: RADAR_TARGET_THEME,\n    SCOPE: SCOPE_THEME,\n    TERRAIN: TERRAIN_THEME,\n    WIND_VANE: WIND_VANE_THEME\n};\n","/**\n * @property COLOR\n * @type {Object}\n * @final\n */\nexport const COLOR = {\n    BLACK_07: 'rgba(0, 0, 0, 0.7)',\n    BLUE_02: 'rgba(128, 255, 255, 0.2)',\n    BLUE_05: 'rgba(128, 255, 255, 0.5)',\n    BLUE_06: 'rgba(128, 255, 255, 0.6)',\n    BLUE_09: 'rgba(128, 255, 255, 0.9)',\n    BLUE_LIGHT_SOFT_03: 'rgba(150, 200, 255, 0.3)',\n    GRAY_LIGHT: 'rgba(224, 224, 224, 1.0)',\n    GRAY: 'rgba(150, 150, 150, 1)',\n    GREEN_02: 'rgba(76, 118, 97, 0.2)',\n    GREEN_05: 'rgba(76, 118, 97, 0.5)',\n    GREEN_09: 'rgba(76, 118, 97, 0.9)',\n    GREEN_DARK: 'rgba(51, 85, 68, 1)',\n    GREEN_LIGHT_PALE_002: 'rgba(200, 255, 200, 0.02)',\n    GREEN_LIGHT_PALE_01: 'rgba(200, 255, 200, 0.1)',\n    GREEN_LIGHT_PALE_025: 'rgba(200, 255, 200, 0.25)',\n    GREEN_LIGHT: 'rgba(193, 218, 205, 1)',\n    GREEN_MEDIUM: 'rgba(68, 102, 85, 1)',\n    RED_02: 'rgba(224, 128, 128, 0.2)',\n    RED_05: 'rgba(224, 128, 128, 0.5)',\n    RED_06: 'rgba(224, 128, 128, 0.6)',\n    RED_08: 'rgba(224, 128, 128, 0.8)',\n    RED_09: 'rgba(224, 128, 128, 0.9)',\n    RED_BRIGHT_07: 'rgba(255, 0, 0, 0.7)',\n    RED: 'rgba(224, 128, 128, 1.0)',\n    WHITE_02: 'rgba(255, 255, 255, 0.2)',\n    WHITE_04: 'rgba(255, 255, 255, 0.4)',\n    WHITE_05: 'rgba(255, 255, 255, 0.5)',\n    WHITE_07: 'rgba(255, 255, 255, 0.7)',\n    WHITE_08: 'rgba(255, 255, 255, 0.8)',\n    WHITE_09: 'rgba(255, 255, 255, 0.9)',\n    WHITE: 'rgba(255, 255, 255, 1.0)'\n};\n","import { COLOR } from '../color';\n\nexport const DATA_BLOCK_THEME = {\n    AIRCRAFT_MODEL_ICAO_CHARACTER_LIMIT: 4,\n    ARRIVAL_BAR_IN_RANGE: COLOR.RED_05,\n    ARRIVAL_BAR_OUT_OF_RANGE: COLOR.RED_02,\n    ARRIVAL_BAR_SELECTED: COLOR.RED_09,\n    BACKGROUND_IN_RANGE: COLOR.GREEN_05,\n    BACKGROUND_OUT_OF_RANGE: COLOR.GREEN_02,\n    BACKGROUND_SELECTED: COLOR.GREEN_09,\n    DEPARTURE_BAR_IN_RANGE: COLOR.BLUE_05,\n    DEPARTURE_BAR_OUT_OF_RANGE: COLOR.BLUE_02,\n    DEPARTURE_BAR_SELECTED: COLOR.BLUE_09,\n    HALF_HEIGHT: 16,\n    HALF_WIDTH: 35,\n    HAS_FILL: true,\n    HEIGHT: 32,\n    LEADER_DIRECTION: 360,\n    LEADER_LENGTH_ADJUSTMENT_PIXELS: -10,\n    LEADER_LENGTH_INCREMENT_PIXELS: 25,\n    LEADER_LENGTH: 1,\n    LEADER_PADDING_FROM_BLOCK_PX: 0,\n    LEADER_PADDING_FROM_TARGET_PX: 0,\n    SCRATCHPAD_CHARACTER_LIMIT: 3,\n    TEXT_FONT: '10px monoOne, monospace',\n    TEXT_IN_RANGE: COLOR.WHITE_05,\n    TEXT_OUT_OF_RANGE: COLOR.WHITE_02,\n    TEXT_SELECTED: COLOR.WHITE_09,\n    WIDTH: 70\n};\n","import { COLOR } from '../color';\n\nexport const RADAR_TARGET_THEME = {\n    HISTORY_DOT_INSIDE_RANGE: COLOR.WHITE,\n    HISTORY_DOT_OUTSIDE_RANGE: COLOR.GRAY_LIGHT,\n    HISTORY_DOT_RADIUS_KM: 0.2,\n    HISTORY_LENGTH: 10,\n    PROJECTED_TRACK_LINES: COLOR.WHITE,\n    PROJECTION_ARRIVAL: COLOR.RED_06,\n    PROJECTION_ARRIVAL_ALL: COLOR.RED_02,\n    PROJECTION_DEPARTURE: COLOR.BLUE_06,\n    PROJECTION_DEPARTURE_ALL: COLOR.BLUE_02,\n    PROJECTION_ESTABLISHED_ON_APPROACH: COLOR.RED,\n    RADAR_TARGET: COLOR.GRAY_LIGHT,\n    RADIUS_KM: 0.5,\n    RADIUS_SELECTED_KM: 0.75,\n    RING_CONFLICT: COLOR.WHITE_02,\n    RING_VIOLATION: COLOR.RED,\n    HALO: COLOR.GREEN_LIGHT,\n    TRAILING_SEPARATION_INDICATOR_ENABLED: true,\n    TRAILING_SEPARATION_INDICATOR: COLOR.RED_08\n};\n","import { COLOR } from '../color';\n\nexport const SCOPE_THEME = {\n    AIRSPACE_FILL: COLOR.GREEN_LIGHT_PALE_002,\n    AIRSPACE_PERIMETER: COLOR.GREEN_LIGHT_PALE_025,\n    BACKGROUND: COLOR.GREEN_DARK,\n    COMPASS_HASH: COLOR.GRAY_LIGHT,\n    COMPASS_TEXT: COLOR.WHITE,\n    CROSSHAIR_STROKE: COLOR.GRAY,\n    FIX_FILL: COLOR.WHITE_05,\n    FIX_TEXT: COLOR.WHITE_05,\n    HALO_DEFAULT_RADIUS_NM: 3,\n    HALO_MAX_RADIUS_NM: 20,\n\n    /**\n     * Color to use for the background on the `MeasureTool` labels\n     *\n     * @memberof SCOPE_THEME\n     * @property MEASURE_BACKGROUND\n     */\n    MEASURE_BACKGROUND: COLOR.GREEN_MEDIUM,\n\n    /**\n     * Color to use for the text on the `MeasureTool` line\n     *\n     * @memberof SCOPE_THEME\n     * @property MEASURE_LINE\n     */\n    MEASURE_LINE: COLOR.GREEN_LIGHT,\n\n    /**\n     * Color to use for the text on the `MeasureTool` labels\n     *\n     * @memberof SCOPE_THEME\n     * @property MEASURE_TEXT\n     */\n    MEASURE_TEXT: COLOR.WHITE,\n\n    RANGE_RING_COLOR: COLOR.GREEN_LIGHT_PALE_01,\n    RESTRICTED_AIRSPACE: COLOR.BLUE_LIGHT_SOFT_03,\n    RUNWAY_EXTENDED_CENTERLINE: COLOR.GREEN_MEDIUM,\n    RUNWAY_LABELS: COLOR.WHITE_08,\n    RUNWAY: COLOR.WHITE_04,\n    SID: COLOR.BLUE_06,\n    STAR: COLOR.RED,\n    TOP_ROW_TEXT: COLOR.WHITE_08,\n    VIDEO_MAP: COLOR.GREEN_LIGHT\n};\n","export const TERRAIN_THEME = {\n    BORDER_OPACITY: 1,\n    FILL_OPACITY: 0.1,\n    COLOR: {\n        0: '199, 100%, 30%',\n        1000: '139, 70%, 35%',\n        2000: '104, 46%, 56%',\n        3000: '60, 25%, 100%',\n        4000: '35, 97%, 75%',\n        5000: '18, 85%, 62%',\n        6000: '24, 67%, 37%'\n    }\n};\n","import { COLOR } from '../color';\n\nexport const WIND_VANE_THEME = {\n    DIRECTION_LINE_GUSTY: COLOR.RED_BRIGHT_07,\n    DIRECTION_LINE: COLOR.WHITE_07,\n    INNER_RING_STROKE: COLOR.WHITE_07,\n    OUTER_RING_FILL: COLOR.BLACK_07,\n    WIND_SPEED_TEXT: COLOR.WHITE_07\n};\n","import { DATA_BLOCK_THEME } from './modules/dataBlock';\nimport { RADAR_TARGET_THEME } from './modules/radarTarget';\nimport { SCOPE_THEME } from './modules/scope';\nimport { TERRAIN_THEME } from './modules/terrain';\nimport { WIND_VANE_THEME } from './modules/windVane';\n\n/**\n * @enum THEME_CLASSIC\n * @type {Object}\n * @final\n */\nexport const THEME_CLASSIC = {\n    CLASSNAME: 'canvas-theme-classic',\n    DATA_BLOCK: DATA_BLOCK_THEME,\n    RADAR_TARGET: RADAR_TARGET_THEME,\n    SCOPE: SCOPE_THEME,\n    TERRAIN: TERRAIN_THEME,\n    WIND_VANE: WIND_VANE_THEME\n};\n","/**\n * @property COLOR\n * @type {Object}\n * @final\n */\nexport const COLOR = {\n    BLUE_VERY_LIGHT: 'rgba(64, 127, 143, 1.0)',\n    BLUE_VERY_LIGHT_02: 'rgba(64, 127, 143, 0.2)',\n    BLUE_LIGHT: 'rgba(56, 111, 125, 1.0)',\n    BLUE_MEDIUM_LIGHT: 'rgba(48, 96, 108, 1.0)',\n    BLUE_MEDIUM: 'rgba(40, 80, 90, 1.0)',\n    BLUE_MEDIUM_DARK: 'rgba(32, 64, 72, 1.0)',\n    BLUE_MEDIUM_DARK_01: 'rgba(32, 64, 72, 0.1)',\n    BLUE_DARK: 'rgba(24, 49, 55, 1.0)',\n    BLUE_VERY_DARK: 'rgba(16, 33, 37, 1.0)',\n    GREEN_LIGHT: 'rgba(193, 218, 205, 1)',\n    GRAY_VERY_VERY_DARK: 'rgba(20, 20, 20, 1.0)',\n    RED: 'rgba(224, 128, 128, 1.0)',\n    RED_02: 'rgba(224, 128, 128, 0.2)',\n    WHITE: 'rgba(255, 255, 255, 1.0)',\n    WHITE_05: 'rgba(255, 255, 255, 0.5)',\n    GREEN_01: 'rgba(0, 128, 0, 1.0)',\n    RED_01: 'rgba(205, 92, 92, 1.0)'\n};\n","import { COLOR } from '../color';\n\n// TODO: Instead of individual colors, can we somehow specify an alpha value\n// for 'IN_RANGE', 'OUT_OF_RANGE' and 'SELECTED', to be applied to the entire\n// data block? Possibly `cc.globalAlpha`, to be only effective while drawing\n// the data block, then `cc.restore()` to return to normal opacity?\n/**\n * Colors and options for data blocks\n *\n * @enum DATA_BLOCK_THEME\n * @type {object}\n */\nexport const DATA_BLOCK_THEME = {\n    /**\n     * Number of characters of aircraft model icao to show in data block\n     *\n     * @memberof AIRCRAFT_MODEL_ICAO_CHARACTER_LIMIT\n     * @type {number}\n     */\n    AIRCRAFT_MODEL_ICAO_CHARACTER_LIMIT: 4,\n\n    /**\n     * Color of the bar on the left side of the data block\n     * Opacity used for when the aircraft is within the airspace\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property ARRIVAL_BAR_IN_RANGE\n     */\n    ARRIVAL_BAR_IN_RANGE: COLOR.BLUE_VERY_LIGHT,\n\n    /**\n     * Color of the bar on the left side of the data block\n     * Opacity used for when the aircraft is outside the airspace\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property ARRIVAL_BAR_OUT_OF_RANGE\n     */\n    ARRIVAL_BAR_OUT_OF_RANGE: COLOR.BLUE_VERY_LIGHT,\n\n    /**\n     * Color of the bar on the left side of the data block\n     * Opacity used for when the aircraft is selected\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property ARRIVAL_BAR_SELECTED\n     */\n    ARRIVAL_BAR_SELECTED: COLOR.BLUE_VERY_LIGHT,\n\n    /**\n     * Color of the data block fill (if it is enabled)\n     * Opacity used for when the aircraft is within the airspace\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property BACKGROUND_IN_RANGE\n     */\n    BACKGROUND_IN_RANGE: COLOR.BLUE_VERY_LIGHT,\n\n    /**\n     * Color of the data block fill (if it is enabled)\n     * Opacity used for when the aircraft is outside the airspace\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property BACKGROUND_OUT_OF_RANGE\n     */\n    BACKGROUND_OUT_OF_RANGE: COLOR.BLUE_VERY_LIGHT,\n\n    /**\n     * Color of the data block fill (if it is enabled)\n     * Opacity used for when the aircraft is selected\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property BACKGROUND_SELECTED\n     */\n    BACKGROUND_SELECTED: COLOR.BLUE_VERY_LIGHT,\n\n    /**\n     * Color of the bar on the left side of the data block\n     * Opacity used for when the aircraft is within the airspace\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property DEPARTURE_BAR_IN_RANGE\n     */\n    DEPARTURE_BAR_IN_RANGE: COLOR.BLUE_VERY_LIGHT,\n\n    /**\n     * Color of the bar on the left side of the data block\n     * Opacity used for when the aircraft is outside the airspace\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property DEPARTURE_BAR_OUT_OF_RANGE\n     */\n    DEPARTURE_BAR_OUT_OF_RANGE: COLOR.BLUE_VERY_LIGHT,\n\n    /**\n     * Color of the bar on the left side of the data block\n     * Opacity used for when the aircraft is selected\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property DEPARTURE_BAR_SELECTED\n     */\n    DEPARTURE_BAR_SELECTED: COLOR.BLUE_VERY_LIGHT,\n\n    /**\n     * Whether or not to fill the data block with a background color\n     * This z\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property HAS_FILL\n     */\n    HAS_FILL: false,\n\n    /**\n     * One half of the height of a data block\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property HALF_HEIGHT\n     */\n    HALF_HEIGHT: 16,\n\n    /**\n     * One half of the width of a data block\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property HALF_HEIGHT\n     */\n    HALF_WIDTH: 30,\n\n    /**\n     * Height of a data block\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property HEIGHT\n     */\n    HEIGHT: 32,\n\n    /**\n     * Direction to extend the data block away from the target\n     * Currently, only 360, 45, 90, 135, 180, 225, 270, and 315 are available.\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property LEADER_DIRECTION\n     */\n    LEADER_DIRECTION: 360,\n\n    /**\n     * Number of additional pixels away from the target to position the data block\n     * Used to adjust spacing between data block and target at lowest leader length\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property LEADER_LENGTH_ADJUSTMENT_PIXELS\n     */\n    LEADER_LENGTH_ADJUSTMENT_PIXELS: -10,\n\n    /**\n     * Number of pixels longer the leader line becomes with each increase of\n     * the 'leader length' value\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property LEADER_LENGTH_INCREMENT_PIXELS\n     */\n    LEADER_LENGTH_INCREMENT_PIXELS: 25,\n\n    /**\n     * Default length of the leader lines (no meaningful units)\n     * The 'leader line' is the line that connects the target (position dot) to\n     * the data block so you know which callsign applies to which aircraft\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property LEADER_LENGTH\n     */\n    LEADER_LENGTH: 1,\n\n    /**\n     * Distance from data block after which the leader line is drawn\n     * Higher values mean a shorter leader line\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @type {number}\n     */\n    LEADER_PADDING_FROM_BLOCK_PX: -2,\n\n    /**\n     * Distance from radar target after which the leader line is drawn\n     * Higher values mean a shorter leader line\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @type {number}\n     */\n    LEADER_PADDING_FROM_TARGET_PX: 0,\n\n    /**\n     * Number of characters of scratchpad to show in data block\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @type {number}\n     */\n    SCRATCHPAD_CHARACTER_LIMIT: 3,\n\n    /**\n     * Font and size of text used in the data block\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property TEXT_FONT\n     */\n    TEXT_FONT: '10px monoOne, monospace',\n\n    /**\n     * Color of text used in the data block\n     * Opacity used for when the aircraft is within the airspace\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property TEXT_IN_RANGE\n     */\n    TEXT_IN_RANGE: COLOR.WHITE,\n\n    /**\n     * Color of text used in the data block\n     * Opacity used for when the aircraft is outside the airspace\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property TEXT_OUT_OF_RANGE\n     */\n    TEXT_OUT_OF_RANGE: COLOR.WHITE,\n\n    /**\n     * Color of text used in the data block\n     * Opacity used for when the aircraft is selected\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property TEXT_SELECTED\n     */\n    TEXT_SELECTED: COLOR.WHITE,\n\n    /**\n     * Width of the data block\n     *\n     * @memberof DATA_BLOCK_THEME\n     * @property WIDTH\n     */\n    WIDTH: 60\n};\n","import { COLOR } from '../color';\n\n/**\n * Colors and options for radar targets\n *\n * @enum RADAR_TARGET_THEME\n * @type {object}\n */\nexport const RADAR_TARGET_THEME = {\n\n    /**\n     * Color of the dots behind the aircraft, showing where it has been\n     * Opacity used for when the aircraft is within the airspace\n     *\n     * @memberof RADAR_TARGET_THEME\n     * @property HISTORY_DOT_INSIDE_RANGE\n     */\n    HISTORY_DOT_INSIDE_RANGE: COLOR.WHITE_05,\n\n    /**\n     * Color of the dots behind the aircraft, showing where it has been\n     * Opacity used for when the aircraft is within the airspace for arrival\n     *\n     * @memberof RADAR_TARGET_THEME\n     * @property HISTORY_DOT_INSIDE_RANGE\n     */\n    HISTORY_DOT_INSIDE_RANGE_ARRIVAL: COLOR.GREEN_01,\n\n    /**\n     * Color of the dots behind the aircraft, showing where it has been\n     * Opacity used for when the aircraft is within the airspace for departure\n     *\n     * @memberof RADAR_TARGET_THEME\n     * @property HISTORY_DOT_INSIDE_RANGE\n     */\n    HISTORY_DOT_INSIDE_RANGE_DEPARTURE: COLOR.RED_01,\n\n    /**\n     * Color of the dots behind the aircraft, showing where it has been\n     * Opacity used for when the aircraft is outside the airspace\n     *\n     * @memberof RADAR_TARGET_THEME\n     * @property HISTORY_DOT_OUTSIDE_RANGE\n     */\n    HISTORY_DOT_OUTSIDE_RANGE: COLOR.WHITE_05,\n\n    /**\n     * Radius of the history dots, in kilometers\n     *\n     * @memberof RADAR_TARGET_THEME\n     * @property HISTORY_DOT_RADIUS_KM\n     */\n    HISTORY_DOT_RADIUS_KM: 0.2,\n\n    /**\n     * Number of history dots to display behind the aircraft\n     *\n     * @memberof RADAR_TARGET_THEME\n     * @property HISTORY_LENGTH\n     */\n    HISTORY_LENGTH: 7,\n\n    /**\n     * Color of projected track lines\n     *\n     * @memberof RADAR_TARGET_THEME\n     * @property PROJECTED_TRACK_LINES\n     */\n    PROJECTED_TRACK_LINES: COLOR.WHITE,\n\n    /**\n     * Color of projection lines showing an arrival aircraft will go\n     * (for selected aircraft)\n     *\n     * @memberof RADAR_TARGET_THEME\n     * @property PROJECTION_ARRIVAL\n     */\n    PROJECTION_ARRIVAL: COLOR.RED,\n\n    /**\n     * Color of projection lines showing an arrival aircraft will go\n     * (for non-selected aircraft when projected path set to \"always\")\n     *\n     * @memberof RADAR_TARGET_THEME\n     * @property PROJECTION_ARRIVAL_ALL\n     */\n    PROJECTION_ARRIVAL_ALL: COLOR.RED_02,\n\n    /**\n     * Color of projection lines showing where a departure aircraft will go\n     * (for selected aircraft)\n     *\n     * @memberof RADAR_TARGET_THEME\n     * @property PROJECTION_DEPARTURE\n     */\n    PROJECTION_DEPARTURE: COLOR.BLUE_VERY_LIGHT,\n\n    /**\n     * Color of projection lines showing where a departure aircraft will go\n     * (for non-selected aircraft when projected path set to \"always\")\n     *\n     * @memberof RADAR_TARGET_THEME\n     * @property PROJECTION_DEPARTURE_ALL\n     */\n    PROJECTION_DEPARTURE_ALL: COLOR.BLUE_VERY_LIGHT_02,\n\n    /**\n     * Color of projection lines used when the aircraft is\n     * established on an instrument approach\n     *\n     * @memberof RADAR_TARGET_THEME\n     * @property PROJECTION_ESTABLISHED_ON_APPROACH\n     */\n    PROJECTION_ESTABLISHED_ON_APPROACH: COLOR.RED,\n\n    /**\n     * Color of any radar target, including that of aircraft\n     * A 'radar target' is the dot showing the actual position\n     *\n     * @memberof RADAR_TARGET_THEME\n     * @property RADAR_TARGET\n     */\n    RADAR_TARGET: COLOR.WHITE,\n\n    /**\n     * Radius to draw all radar targets\n     *\n     * @memberof RADAR_TARGET_THEME\n     * @property RADIUS_KM\n     */\n    RADIUS_KM: 0.5,\n\n    /**\n     * Radius to draw radar targets of aircraft that are currently selected\n     *\n     * @memberof RADAR_TARGET_THEME\n     * @property RADIUS_SELECTED_KM\n     */\n    RADIUS_SELECTED_KM: 0.75,\n\n    /**\n     * Color of conflict rings (shown to warn you of possible issue)\n     *\n     * @memberof RADAR_TARGET_THEME\n     * @property RING_CONFLICT\n     */\n    RING_CONFLICT: COLOR.BLUE_DARK,\n\n    /**\n     * Color of violation rings (shown when aircraft have lost separation)\n     *\n     * @memberof RADAR_TARGET_THEME\n     * @property RING_VIOLATION\n     */\n    RING_VIOLATION: COLOR.RED,\n\n    /**\n     * Color of halo\n     *\n     * @memberof RADAR_TARGET_THEME\n     * @property HALO\n     */\n    HALO: COLOR.GREEN_LIGHT,\n\n    /**\n     * Whether or not the small line behind aircraft established on an\n     * instrument approach should be drawn\n     *\n     * @memberof RADAR_TARGET_THEME\n     * @property TRAILING_SEPARATION_INDICATOR_ENABLED\n     */\n    TRAILING_SEPARATION_INDICATOR_ENABLED: false,\n\n    /**\n     * Color of small line behind aircraft established on an instrument approach\n     *\n     * @memberof RADAR_TARGET_THEME\n     * @property TRAILING_SEPARATION_INDICATOR\n     */\n    TRAILING_SEPARATION_INDICATOR: COLOR.RED\n};\n","import { COLOR } from '../color';\n\n/**\n * Colors and options for scope\n *\n * @enum SCOPE_THEME\n * @type {object}\n */\nexport const SCOPE_THEME = {\n\n    /**\n     * Color to fill the airspace area\n     *\n     * @memberof SCOPE_THEME\n     * @property AIRSPACE_FILL\n     */\n    AIRSPACE_FILL: COLOR.BLUE_MEDIUM_DARK_01,\n\n    /**\n     * Color to draw the solid line along the airspace perimeter\n     *\n     * @memberof SCOPE_THEME\n     * @property AIRSPACE_PERIMETER\n     */\n    AIRSPACE_PERIMETER: COLOR.BLUE_DARK,\n\n    /**\n     * Color of the overall background of the scope\n     *\n     * @memberof SCOPE_THEME\n     * @property BACKGROUND\n     */\n    BACKGROUND: COLOR.BLUE_VERY_DARK,\n\n    /**\n     * Color of the minor and major hash marks of the relative compass headings\n     * displayed when an aircraft is selected\n     *\n     * @memberof SCOPE_THEME\n     * @property COMPASS_HASH\n     */\n    COMPASS_HASH: COLOR.BLUE_MEDIUM_DARK,\n\n    /**\n     * Color of the heading text by the major hash marks of the relative compass\n     * headings displayed when an aircraft is selected\n     *\n     * @memberof SCOPE_THEME\n     * @property COMPASS_TEXT\n     */\n    COMPASS_TEXT: COLOR.BLUE_MEDIUM_DARK,\n\n    /**\n     * Color of the crosshair symbol drawn by `CanvasController.canvas_draw_crosshairs()`\n     * This is mostly a debug function used to help developers get some context on the\n     * state of the canvas when examining and improving the current drawing system\n     *\n     * @memberof SCOPE_THEME\n     * @property CROSSHAIR_STROKE\n     */\n    CROSSHAIR_STROKE: COLOR.RED,\n\n    /**\n     * Color to fill the fix triangles with\n     *\n     * @memberof SCOPE_THEME\n     * @property FIX_FILL\n     */\n    FIX_FILL: COLOR.BLUE_MEDIUM,\n\n    /**\n     * Color to use for the labels on each of the fixes\n     *\n     * @memberof SCOPE_THEME\n     * @property FIX_TEXT\n     */\n    FIX_TEXT: COLOR.BLUE_MEDIUM,\n\n    /**\n     * Size to draw halos when size is not specified\n     *\n     * @memberof SCOPE_THEME\n     * @property HALO_DEFAULT_RADIUS_NM\n     */\n    HALO_DEFAULT_RADIUS_NM: 3,\n\n    /**\n     * Maximum size to draw halos when size is not specified\n     *\n     * @memberof SCOPE_THEME\n     * @property HALO_MAX_RADIUS_NM\n     */\n    HALO_MAX_RADIUS_NM: 20,\n\n    /**\n     * Color to use for the background on the `MeasureTool` labels\n     *\n     * @memberof SCOPE_THEME\n     * @property MEASURE_BACKGROUND\n     */\n    MEASURE_BACKGROUND: COLOR.BLUE_MEDIUM_DARK,\n\n    /**\n     * Color to use for the text on the `MeasureTool` line\n     *\n     * @memberof SCOPE_THEME\n     * @property MEASURE_LINE\n     */\n    MEASURE_LINE: COLOR.BLUE_VERY_LIGHT,\n\n    /**\n     * Color to use for the labels on the `MeasureTool` labels\n     *\n     * @memberof SCOPE_THEME\n     * @property MEASURE_TEXT\n     */\n    MEASURE_TEXT: COLOR.WHITE,\n\n    /**\n     * Color of the range rings shown on the scope around the airport\n     *\n     * @memberof SCOPE_THEME\n     * @property RANGE_RING_COLOR\n     */\n    RANGE_RING_COLOR: COLOR.BLUE_DARK,\n\n    /**\n     * Color used to depict the restricted airspace areas\n     *\n     * @memberof SCOPE_THEME\n     * @property RESTRICTED_AIRSPACE\n     */\n    RESTRICTED_AIRSPACE: COLOR.BLUE_MEDIUM_LIGHT,\n\n    /**\n     * Color of the lines extending out from the runway thresholds\n     *\n     * @memberof SCOPE_THEME\n     * @property RUNWAY_EXTENDED_CENTERLINE\n     */\n    RUNWAY_EXTENDED_CENTERLINE: COLOR.BLUE_MEDIUM_DARK,\n\n    /**\n     * Color of the runway label text\n     *\n     * @memberof SCOPE_THEME\n     * @property RUNWAY_LABELS\n     */\n    RUNWAY_LABELS: COLOR.BLUE_LIGHT,\n\n    /**\n     * Color of the runways themselves\n     *\n     * @memberof SCOPE_THEME\n     * @property RUNWAY\n     */\n    RUNWAY: COLOR.WHITE,\n\n    /**\n     * Color of the lines drawn between fixes on SIDs\n     *\n     * @memberof SCOPE_THEME\n     * @property SID\n     */\n    SID: COLOR.BLUE_VERY_LIGHT,\n\n    /**\n     * Color of the lines drawn between fixes on STARs\n     *\n     * @memberof SCOPE_THEME\n     * @property STAR\n     */\n    STAR: COLOR.RED,\n\n    /**\n     * Color of the lines drawn between fixes on STARs\n     *\n     * @memberof SCOPE_THEME\n     * @property TOP_ROW_TEXT\n     */\n    TOP_ROW_TEXT: COLOR.WHITE,\n\n    /**\n     * Color of the video map lines (defined in the `maps`\n     * section of the airport file)\n     *\n     * @memberof SCOPE_THEME\n     * @property VIDEO_MAP\n     */\n    VIDEO_MAP: COLOR.BLUE_MEDIUM\n};\n","/**\n * Colors and options for terrain contours\n *\n * @enum TERRAIN_THEME\n * @type {object}\n */\nexport const TERRAIN_THEME = {\n    /**\n     * Opacity of the lines on outer edges of terrain-elevated areas\n     *\n     * @memberof TERRAIN_THEME\n     * @property BORDER_OPACITY\n     */\n    BORDER_OPACITY: 1,\n\n    /**\n     * Opacity of the fill color within terrain-elevated areas\n     *\n     * @memberof TERRAIN_THEME\n     * @property FILL_OPACITY\n     */\n    FILL_OPACITY: 0.1,\n\n    /**\n     * Colors for each elevation level (in feet), in HSL\n     * From these HSL values, we later generate HSLA for use in the canvas\n     *\n     * Note that values must use the following units:\n     * (H) Hue:         degrees\n     * (S) Saturation:  percentage\n     * (L) Lightness:   percentage\n     *\n     * @memberof TERRAIN_THEME\n     * @property COLOR\n     */\n    COLOR: {\n        0: '199, 100%, 22%',\n        1000: '190, 38%, 20%',\n        2000: '190, 38%, 20%',\n        3000: '190, 38%, 20%',\n        4000: '190, 38%, 20%',\n        5000: '190, 38%, 20%',\n        6000: '72, 38%, 15%',\n        7000: '72, 38%, 15%',\n        8000: '72, 38%, 15%',\n        9000: '72, 38%, 15%',\n        10000: '72, 38%, 15%',\n        11000: '312, 38%, 20%',\n        12000: '312, 38%, 20%',\n        13000: '312, 38%, 20%',\n        14000: '312, 38%, 20%',\n        15000: '312, 38%, 20%',\n        16000: '132, 38%, 20%',\n        17000: '132, 38%, 20%',\n        18000: '132, 38%, 20%',\n        19000: '132, 38%, 20%',\n        20000: '132, 38%, 20%',\n        21000: '12, 38%, 30%',\n        22000: '12, 38%, 30%',\n        23000: '12, 38%, 30%',\n        24000: '12, 38%, 30%',\n        25000: '12, 38%, 30%'\n    }\n};\n","import { COLOR } from '../color';\n\n/**\n * Colors and options for wind vane\n *\n * @enum WIND_VANE_THEME\n * @type {object}\n */\nexport const WIND_VANE_THEME = {\n\n    /**\n     * Color of the line indicating the wind direction in gusty winds\n     *\n     * @memberof WIND_VANE_THEME\n     * @property DIRECTION_LINE_GUSTY\n     */\n    DIRECTION_LINE_GUSTY: COLOR.WHITE,\n\n    /**\n     * Color of the line indicating the wind direction\n     *\n     * @memberof WIND_VANE_THEME\n     * @property DIRECTION_LINE\n     */\n    DIRECTION_LINE: COLOR.WHITE,\n\n    /**\n     * Color of the ring around the wind speed\n     *\n     * @memberof WIND_VANE_THEME\n     * @property INNER_RING_STROKE\n     */\n    INNER_RING_STROKE: COLOR.WHITE,\n\n    /**\n     * Color to fill the whole wind vane\n     *\n     * @memberof WIND_VANE_THEME\n     * @property OUTER_RING_FILL\n     */\n    OUTER_RING_FILL: COLOR.GRAY_VERY_VERY_DARK,\n\n    /**\n     * Color of the wind speed text\n     *\n     * @memberof WIND_VANE_THEME\n     * @property WIND_SPEED_TEXT\n     */\n    WIND_SPEED_TEXT: COLOR.WHITE\n};\n","import { DATA_BLOCK_THEME } from './modules/dataBlock';\nimport { RADAR_TARGET_THEME } from './modules/radarTarget';\nimport { SCOPE_THEME } from './modules/scope';\nimport { TERRAIN_THEME } from './modules/terrain';\nimport { WIND_VANE_THEME } from './modules/windVane';\n\n/**\n * @enum THEME_DEFAULT\n * @type {Object}\n * @final\n */\nexport const THEME_DEFAULT = {\n    CLASSNAME: 'canvas-theme-default',\n    DATA_BLOCK: DATA_BLOCK_THEME,\n    RADAR_TARGET: RADAR_TARGET_THEME,\n    SCOPE: SCOPE_THEME,\n    TERRAIN: TERRAIN_THEME,\n    WIND_VANE: WIND_VANE_THEME\n};\n","/**\n * Enum of categories used for ga event tracking\n *\n * @property TRACKABLE_EVENT\n */\nexport const TRACKABLE_EVENT = {\n    /**\n     * airport-specific events like:\n     *\n     * - initial-load\n     * - airport switcher open\n     * - airport switcher close\n     * - airport switcher change\n     *\n     * @memberof TRACKABLE_EVENT\n     * @property AIRPORTS\n     */\n    AIRPORTS: 'airports',\n\n    /**\n     * spawn pattern changes like\n     *\n     * - flight-category\n     * - spawn-pattern\n     *\n     * @memberof CHANGE_SPAWN_PATTERN\n     * @property SETTINGS\n     */\n    CHANGE_SPAWN_PATTERN: 'change-spawn-pattern',\n\n    /**\n     * options events, encompasses all buttons\n     * in option bar footer\n     *\n     * will report on/off (true/false) for each option\n     *\n     * timewarp should report current timewarp value\n     *\n     * @memberof TRACKABLE_EVENT\n     * @property OPTIONS\n     */\n    OPTIONS: 'options',\n\n    /**\n     * toggle of settings dialog\n     *\n     * tracks change and next setting of a game option\n     *\n     * @memberof TRACKABLE_EVENT\n     * @property SETTINGS\n     */\n    SETTINGS: 'settings',\n\n    /**\n     * reports on prev/next actions of tutorial\n     *\n     * @memberof TRACKABLE_EVENT\n     * @property TUTORIAL\n     */\n    TUTORIAL: 'tutorial',\n\n    /**\n     * reports on clicks of links to an external resource\n     *\n     * @memberof\n     * @property OUTBOUND\n     */\n    OUTBOUND: 'outbound',\n\n    /**\n     * reports when the ui log renders an error message\n     *\n     * @memberof TRACKABLE_EVENT\n     * @property UI_LOG\n     */\n    UI_LOG: 'ui-log'\n};\n","/**\n * Symbol denoting a greater than restriction\n *\n * @enum ABOVE_SYMBOL\n * @type {string}\n * @final\n */\nexport const ABOVE_SYMBOL = '+';\n\n/**\n * Character prefix indicating the subsequent value is an altitude restriction\n *\n * @enum ALTITUDE_RESTRICTION_PREFIX\n * @type {string}\n * @final\n */\nexport const ALTITUDE_RESTRICTION_PREFIX = 'A';\n\n/**\n * Symbol denoting a less than restriction\n *\n * @enum ABOVE_SYMBOL\n * @type {string}\n * @final\n */\nexport const BELOW_SYMBOL = '-';\n\n/**\n * Default options for holding patterns\n *\n * @enum DEFAULT_HOLD_PARAMETERS\n * @type {Object}\n * @final\n */\nexport const DEFAULT_HOLD_PARAMETERS = {\n    inboundHeading: undefined,\n    legLength: '1min',\n    speedMaximum: undefined,\n    timer: -1,\n    turnDirection: 'right'\n};\n\n/**\n* Symbol that prepends a fixname indicating the aircraft should pass completely\n* over the fix before turning toward the next fix on their route\n*\n* @enum FLY_OVER_WAYPOINT_PREFIX\n* @type {string}\n*/\nexport const FLY_OVER_WAYPOINT_PREFIX = '^';\n\n/**\n* Symbol that prepends a fixname indicating the aircraft should enter\n* a holding pattern once it arrives at the fix.\n*\n* @enum HOLD_WAYPOINT_PREFIX\n* @type {string}\n* @final\n*/\nexport const HOLD_WAYPOINT_PREFIX = '@';\n\n/**\n* Index where the name is located within `[\"WAMMY\", \"A20+|S220\"]`\n*\n* @enum NAME_INDEX\n* @type {number}\n* @final\n*/\nexport const NAME_INDEX = 0;\n\n/**\n* Index where the restriction is located within `[\"WAMMY\", \"A20+|S220\"]`\n*\n* @enum RESTRICTION_INDEX\n* @type {number}\n* @final\n*/\nexport const RESTRICTION_INDEX = 1;\n\n/**\n* Character used to separate altitude/speed restrictions from each other\n*\n* @enum RESTRICTION_SEPARATOR\n* @type {string}\n* @final\n*/\nexport const RESTRICTION_SEPARATOR = '|';\n\n/**\n* Symbol used to denote an RNAV waypoint\n*\n* @enum RNAV_WAYPOINT_PREFIX\n* @type {string}\n* @final\n*/\nexport const RNAV_WAYPOINT_PREFIX = '_';\n\n/**\n* @enum RNAV_WAYPOINT_DISPLAY_NAME\n* @type {string}\n* @final\n*/\nexport const RNAV_WAYPOINT_DISPLAY_NAME = '[RNAV]';\n\n/**\n* Character prefix indicating the subsequent value is a speed restriction\n*\n* @enum SPEED_RESTRICTION_PREFIX\n* @type {string}\n* @final\n*/\nexport const SPEED_RESTRICTION_PREFIX = 'S';\n\n/**\n* Symbols that prepends a three digit number, indicating that the created waypoint\n* should simply be to follow the given heading until told to proceed to next waypoint\n*\n* @enum VECTOR_WAYPOINT_PREFIX\n* @type {string}\n* @final\n*/\nexport const VECTOR_WAYPOINT_PREFIX = '#';\n","import $ from 'jquery';\nimport LoadableContentModel from './LoadableContentModel';\n\n/**\n * Asynchronous JSON asset loading framework.\n *\n * Allows queueing assets to be loaded, assets may queued at a higher\n * priority by specifying the `immediate` option.  All assets with the\n * `immediate` option will be loaded before other assets.\n *\n * Events:\n *   startLoading - When an asset start being loaded, asset url as data\n *   stopLoading - When the last asset in the queue is downloaded\n *\n * Example:\n *  var promise = zlsa.atc.loadAsset({url: 'assets/aircraft/b747.json'});\n *\n * @module zlsa.atc.loadAsset\n */\n/**\n* Implementation of the queueing\n*/\nexport default class ContentQueueClass {\n    constructor(loadingView) {\n        this.loadingView = loadingView;\n        this.isLoading = false;\n        this.lowPriorityQueue = [];\n        this.highPriorityQueue = [];\n        this.queuedContent = {};\n    }\n\n    /**\n     * Adds or updates a piece of content\n     *\n     * Supports a url becoming an `immediate` load\n     *\n     * @for ContentQueue\n     * @method add\n     * @param options {object}\n     * @return {Promise}\n     */\n    add(options) {\n        let c = new LoadableContentModel(options);\n\n        if (c.url in this.queuedContent) {\n            c = this.queuedContent[c.url];\n\n            if (c.immediate && (!this.queuedContent[c.url].immediate)) {\n                const idx = $.inArray(c.url, this.lowPriorityQueue);\n\n                if (idx > -1) {\n                    this.highPriorityQueue.push(this.lowPriorityQueue.splice(idx, 1));\n                }\n            }\n        } else {\n            this.queuedContent[c.url] = c;\n\n            if (c.immediate) {\n                this.highPriorityQueue.push(c.url);\n            } else {\n                this.lowPriorityQueue.push(c.url);\n            }\n        }\n\n        if (!this.isLoading) {\n            this.startLoad();\n        }\n\n        return c.deferred.promise();\n    }\n\n    /**\n     * @for ContentQueue\n     * @method startLoad\n     * @return {boolean}\n     */\n    startLoad() {\n        if (this.highPriorityQueue.length) {\n            this.load(this.highPriorityQueue.shift());\n\n            return true;\n        } else if (this.lowPriorityQueue.length) {\n            this.load(this.lowPriorityQueue.shift());\n\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * @for contentQueue\n     * @method load\n     * @param url {string}\n     * @return {Promise}\n     */\n    load(url) {\n        const c = this.queuedContent[url];\n\n        $.getJSON(c.url)\n            .done((data, textStatus, jqXHR) => {\n                c.deferred.resolve(data, textStatus, jqXHR);\n            })\n            .fail((jqXHR, textStatus, errorThrown) => {\n                c.deferred.reject(jqXHR, textStatus, errorThrown);\n            })\n            .always(() => {\n                delete this.queuedContent[c.url];\n            });\n    }\n}\n","import $ from 'jquery';\nimport _get from 'lodash/get';\n\n/**\n * Simple container for a given piece of content\n *\n * @class LoadableContentModel\n */\nexport default class LoadableContentModel {\n    constructor(options) {\n        this.url = options.url;\n        this.immediate = _get(options, 'immediate', false);\n        this.type = 'json';\n        this.deferred = $.Deferred();\n    }\n}\n","import { extrapolate_range_clamp } from '../math/core';\nimport { TIME } from '../constants/globalConstants';\n\n/**\n * Value used as `#_frameDeltaTime` when performing future track\n * calculations for aircraft.\n *\n * @property SIMULATION_RATE_FOR_TRACK_PROJECTIONS\n * @type {number}\n * @final\n */\nconst SIMULATION_RATE_FOR_TRACK_PROJECTIONS = 5;\n\n/**\n * Singleton used to manage game time and the advancement of animation frames\n *\n * You will notice a large number of the instance properties are private with exposed getters.\n * This is done to ensure that other classes are not able to modify the property values\n * of this class. TimeKeeping is an integral part of the app and must be able to keep accurate,\n * consistent time. Other classes can use these values but should never, directly, edit them.\n *\n * @class TimeKeeper\n */\nclass TimeKeeper {\n    /**\n     * @constructor\n     */\n    constructor() {\n        /**\n         * Sum of `deltaTime` values\n         *\n         * Used an an incrementor, thus we default to `0` instead of `-1`\n         *\n         * @property _accumulatedDeltaTime\n         * @type {number}\n         * @default 0\n         * @private\n         */\n        this._accumulatedDeltaTime = 0;\n\n        /**\n         * Nubmer of frames rendered\n         *\n         * Used an an incrementor, thus we default to `0` instead of `-1`\n         *\n         * @property frames\n         * @type {number}\n         * @default 0\n         * @private\n         */\n        this._elapsedFrameCount = 0;\n\n        /**\n         * Time difference in seconds between the `#lastFrame` and `#_frameStartTimestamp`\n         *\n         * **This is the most important value of this class.**\n         *\n         * From this value, we calculate how far everything has moved within the sim\n         * as defined by (in the simplest terms):\n         *\n         * ```\n         * d = distance\n         * r = rate\n         * t = time\n         *\n         * d = r * t\n         * ```\n         *\n         * This property should only be used and accessed internally\n         * All external methods should use public getter: `#deltaTime`\n         *\n         * This value is the single source of truth for true `deltaTime`, however,\n         * we will only ever use this value locally. Every other external method needs\n         * `deltaTime * simulationRate`, as provided by `#deltaTime`, to account for\n         * any timewarp adjustments by the user\n         *\n         * @property _frameDeltaTime\n         * @type {number}\n         * @default -1\n         * @private\n         */\n        this._frameDeltaTime = 0;\n\n        /**\n         * Timestamp for the current frame\n         *\n         * @property _frameStartTimestamp\n         * @type {number}\n         * @default -1\n         * @private\n         */\n        this._frameStartTimestamp = 0;\n\n        // TODO: not entirely sure what this is for\n        /**\n         *\n         *\n         * @property _frameStep\n         * @type {number}\n         * @default 0\n         * @private\n         */\n        this._frameStep = 0;\n\n        /**\n         * This property is used to hold the value of `#_frameDeltaTime` when\n         * performing future path calculations.\n         *\n         * This value should never be modified externally and only modified internally via the\n         * `.saveDeltaTimeBeforeFutureTrackCalculation()' and `.restoreDeltaTimeAfterFutureTrackCalculation()`\n         * methods.\n         *\n         * We modify `#_frameDeltaTime` like this so we can _fake_ a timewarp of 5 during future\n         * track calculations.\n         *\n         * // TODO: this method of future track calculation should be looking into. it is non-performant\n         * // and, frankly, quite messy.\n         *\n         * @property _futureTrackDeltaTimeCache\n         * @type {number}\n         * @default -1\n         * @private\n         */\n        this._futureTrackDeltaTimeCache = -1;\n\n        /**\n         * Flag used to determine if the sim has been paused\n         *\n         * This defaults to `true` because the sim is effectively paused\n         * on initial load. This way the game loop doesn't run needlessly\n         * as the sim is loading.\n         *\n         * @property _isPaused\n         * @type {boolean}\n         * @default false\n         * @private\n         */\n        this._isPaused = true;\n\n        /**\n         * Timestamp of the previous frame\n         *\n         * @property _previousFrameTimestamp\n         * @type {number}\n         */\n        this._previousFrameTimestamp = 0;\n\n        /**\n         * Timestamp for the start of rendering\n         *\n         * @property _startTimestamp\n         * @type {number}\n         * @private\n         */\n        this._startTimestamp = 0;\n\n        /**\n         * Previously known as `timewarp`, this value is used a time multiplier\n         *\n         * This value is changed via methods exposed here used within the\n         * `GameController` and is used to effectively _speed up_ this sim\n         *\n         * This value is used as a multiplier when returning the current `#_frameDeltaTime`\n         * which causes moving objects appear to have moved a farther distance than they\n         * would have at normal speed\n         *\n         * It is possible to set any numeric value via system command, though the\n         * UI enforces values of: `1`, `2` and `5` via the timewarp toggle button\n         *\n         * @property _simulationRate\n         * @type {number}\n         * @default 1\n         * @private\n         */\n        this._simulationRate = 1;\n\n        return this._init();\n    }\n\n    /**\n     * Accumulated time since the start of the simulation in seconds\n     *\n     * @property accumulatedDeltaTime\n     * @type {number}\n     */\n    get accumulatedDeltaTime() {\n        return this._accumulatedDeltaTime;\n    }\n\n    /**\n     * Current timestamp in milliseconds\n     *\n     * This is the same value as `gameTime`.\n     * We define this getter here simply for the added context\n     * given in the name\n     *\n     * @property gameTimeMilliseconds\n     * @return {number}\n     */\n    get gameTimeMilliseconds() {\n        return (new Date()).getTime();\n    }\n\n    /**\n     * Current timestamp in seconds\n     *\n     * @property gameTimeSeconds\n     * @return {number}\n     */\n    get gameTimeSeconds() {\n        return (new Date()).getTime() * TIME.ONE_MILLISECOND_IN_SECONDS;\n    }\n\n    /**\n     * Current `#_frameDeltaTime` multiplied by the current `#_simulationRate`\n     *\n     * This is value any external method needs when calculating movement with\n     * deltaTime. No external method should every access `#_frameDeltaTime`\n     * because that value will not account for `#_simulationRate`.\n     *\n     * For more information on the concept of `deltaTime` see:\n     * https://en.wikipedia.org/wiki/Delta_timing\n     *\n     * @property deltaTime\n     * @return {number} current delta time in seconds\n     */\n    get deltaTime() {\n        const deltaTimeOffsetBySimulationRate = this._frameDeltaTime * this._simulationRate;\n\n        return Math.min(deltaTimeOffsetBySimulationRate, 100);\n    }\n\n    /**\n     * @property isPaused\n     * @type {boolean}\n     */\n    get isPaused() {\n        return this._isPaused;\n    }\n\n    /**\n     * The fast-forward value used to speed up animated distances\n     *\n     * Previously known as `timewarp`\n     *\n     * @property simulationRate\n     * @type {number}\n     */\n    get simulationRate() {\n        return this._simulationRate;\n    }\n\n    /**\n     * Lifecycle method\n     *\n     * @for TimeKeeper\n     * @method _init\n     * @chainable\n     */\n    _init() {\n        return this;\n    }\n\n    /**\n     * Reset model properties\n     *\n     * @for TimeKeeper\n     * @method reset\n     */\n    reset() {\n        this._accumulatedDeltaTime = 0;\n        this._elapsedFrameCount = 0;\n        this._frameDeltaTime = 0;\n        this._frameStartTimestamp = 0;\n        this._frameStep = 0;\n        this._futureTrackDeltaTimeCache = -1;\n        this._isPaused = true;\n        this._previousFrameTimestamp = 0;\n        this._startTimestamp = 0;\n        this._simulationRate = 1;\n    }\n\n    /**\n     * Wrapper used to get current `#_frameDeltaTime` value or zero under certain conditions\n     *\n     * When the sim is 'paused' or un-focused, we do not want `#_frameDeltaTime` to be used\n     * in position calculations. This causes movement at a time when there shouldn't be any.\n     *\n     * By supplying `0` in those cases, there is effectively no 'time' difference and thus no\n     * change in position given a rate. This freezes objects at their current position until\n     * such time we begin returning `#_frameDeltaTime` again.\n     *\n     * @for TimeKeeper\n     * @method getDeltaTimeForGameStateAndTimewarp\n     * @return {number} delta time in seconds\n     */\n    getDeltaTimeForGameStateAndTimewarp() {\n        if (this.isPaused || this._isReturningFromPauseAndNotFutureTrack()) {\n            return 0;\n        }\n\n        return this.deltaTime;\n    }\n\n    /**\n     * Used to store the current `#_frameDeltaTime` and override the current delta\n     * with a static value\n     *\n     * This method should be called immediately before performing calculations\n     * for an aircraft's future path. Immediately after those calculations are\n     * performed, `.restoreDeltaTimeAfterFutureTrackCalculation()` should be called\n     * so position calculations can continue with the correct `#_frameDeltaTime`\n     *\n     * Modifying `#_frameDeltaTime` this way, though not ideal, is based on\n     * the original implmenetation. This gives us a way to _fudge_ the\n     * current deltTime and make it easy to draw out an aircraft's future path\n     *\n     * @for TimeKeeper\n     * @method saveDeltaTimeBeforeFutureTrackCalculation\n     */\n    saveDeltaTimeBeforeFutureTrackCalculation() {\n        this._futureTrackDeltaTimeCache = this._frameDeltaTime;\n        this._frameDeltaTime = SIMULATION_RATE_FOR_TRACK_PROJECTIONS;\n    }\n\n    /**\n     * Used to reset `#_futureTrackDeltaTimeCache` after future track\n     * calculations have finished\n     *\n     * This method should be called immediately after performing calculations\n     * for an aircraft's future path.\n     *\n     * @for TimeKeeper\n     * @method restoreDeltaTimeAfterFutureTrackCalculation\n     */\n    restoreDeltaTimeAfterFutureTrackCalculation() {\n        this._frameDeltaTime = this._futureTrackDeltaTimeCache;\n        this._futureTrackDeltaTimeCache = -1;\n    }\n\n    /**\n     * Updates the value of `#_isPaused`\n     *\n     * Calls to this method will happen externally as a result of a user\n     * interaction with the controls bar\n     *\n     * This value is used in reference to `#_frameDeltaTime`. So `#_isPaused`\n     * will be true if the app is _either_ paused or blurred. When this\n     * value is true, `#_frameDeltaTime` value will be `0` so the position\n     * of moving objects will not changes while `#_isPaused` is `true`\n     *\n     * @for TimeKeeper\n     * @method setPause\n     * @param nextPaus {boolean}\n     */\n    setPause(nextPause) {\n        if (nextPause === this._isPaused) {\n            return;\n        }\n\n        this._isPaused = nextPause;\n    }\n\n    /**\n     * Helper method used by the `CanvasController` to determine whether or not we\n     * should re-calculate and re-draw\n     *\n     * This returns `true` once every `#_frameStep` based on total `#_elapsedFrameCount`\n     *\n     * @for TimeKeeper\n     * @method shouldUpdate\n     * @return {boolean}\n     */\n    shouldUpdate() {\n        return this._elapsedFrameCount % this._frameStep === 0;\n    }\n\n    /**\n     * Update time and `#_frameDeltaTime` values\n     *\n     * Should be called at the end of each update cycle by the `AppController`\n     * Calling this method signifies the end of a frame and the beginning of\n     * a new frame\n     *\n     * @for TimeKeeper\n     * @method update\n     */\n    update() {\n        if (this._futureTrackDeltaTimeCache !== -1) {\n            return;\n        }\n\n        const currentTime = this.gameTimeSeconds;\n\n        this._incrementFrame();\n        this._calculateNextDeltaTime(currentTime);\n        this._calculateFrameStep();\n    }\n\n    /**\n     * Update the value of `#_simulationRate`\n     *\n     * Calls to this method will happen externally as a result of a user interaction\n     * with the controls bar or by issuing a system command.\n     *\n     * @for TimeKeeper\n     * @method updateSimulationRate\n     * @param nextTimewarp {number}  the next value for `#_simulationRate`\n     */\n    updateSimulationRate(nextTimewarp) {\n        if (nextTimewarp < 0) {\n            return;\n        }\n\n        this._simulationRate = nextTimewarp;\n    }\n\n    /**\n     * Increments the `#_elapsedFrameCount` value by `1`\n     *\n     * Called every frame via `.update()`\n     *\n     * Calls to this method signal the start of a new frame\n     *\n     * @for TimeKeeper\n     * @method incrementFrame\n     * @private\n     */\n    _incrementFrame() {\n        this._elapsedFrameCount += 1;\n    }\n\n    /**\n     * Caclulate the difference (delta) between the `#currentTime`\n     * and `#_previousFrameTimestamp`\n     *\n     * Called every frame via `.update()`\n     *\n     * @for TimeKeeper\n     * @method _calculateNextDelatTime\n     * @param currentTime {number} current time in seconds\n     * @private\n     */\n    _calculateNextDeltaTime(currentTime) {\n        const frameDelay = 1;\n        const elapsed = currentTime - this._frameStartTimestamp;\n\n        if (elapsed > frameDelay) {\n            this._frameStartTimestamp = currentTime;\n        }\n\n        this._frameDeltaTime = currentTime - this._previousFrameTimestamp;\n        this._previousFrameTimestamp = currentTime;\n        this._accumulatedDeltaTime += this.getDeltaTimeForGameStateAndTimewarp();\n    }\n\n    /**\n     * Updates the `#_frameStep` value based on the current `#_simulationRate`\n     *\n     * Called every frame via `.update()`\n     *\n     * @for CanvasController\n     * @method _calculateFrameStep\n     * @private\n     */\n    _calculateFrameStep() {\n        // TODO: what do the magic numbers mean?\n        this._frameStep = Math.round(extrapolate_range_clamp(1, this._simulationRate, 10, 30, 1));\n    }\n\n\n    /**\n     * Boolean abstraction used to determine if this frame is being calculated after returning\n     * from pause, which is assumed when `#_frameDeltaTime` is greater than `1` and\n     * `#_simulationRate` is `1`. And this is not part of a future track calculation, when\n     * `#_futureTrackDeltaTimeCache` is `-1`.\n     *\n     * @for TimeKeeper\n     * @method _isReturningFromPauseAndNotFutureTrack\n     * @return {boolean}\n     */\n    _isReturningFromPauseAndNotFutureTrack() {\n        return this.deltaTime >= 1 && this._simulationRate === 1 && this._futureTrackDeltaTimeCache === -1;\n    }\n}\n\nexport default new TimeKeeper();\n","import $ from 'jquery';\nimport _forEach from 'lodash/forEach';\nimport _has from 'lodash/has';\nimport EventBus from '../lib/EventBus';\nimport EventTracker from '../EventTracker';\nimport GameOptions from './GameOptions';\nimport TimeKeeper from '../engine/TimeKeeper';\nimport { round } from '../math/core';\nimport { EVENT } from '../constants/eventNames';\nimport { GAME_OPTION_NAMES } from '../constants/gameOptionConstants';\nimport { TIME } from '../constants/globalConstants';\nimport { TRACKABLE_EVENT } from '../constants/trackableEvents';\nimport { SELECTORS } from '../constants/selectors';\nimport { THEME } from '../constants/themes';\n\n// TODO: Remember to move me to wherever the constants end up being moved to\n/**\n * Definitions of point values for given game events\n * @type {Object}\n */\nconst GAME_EVENTS_POINT_VALUES = {\n    AIRSPACE_BUST: -200,\n    ARRIVAL: 10,\n    COLLISION: -1000,\n    DEPARTURE: 10,\n    EXTREME_CROSSWIND_OPERATION: -15,\n    EXTREME_TAILWIND_OPERATION: -75,\n    GO_AROUND: -50,\n    HIGH_CROSSWIND_OPERATION: -5,\n    HIGH_TAILWIND_OPERATION: -25,\n    ILLEGAL_APPROACH_CLEARANCE: -10,\n    LOCALIZER_INTERCEPT_ABOVE_GLIDESLOPE: -10,\n    NOT_CLEARED_ON_ROUTE: -25,\n    SEPARATION_LOSS: -200,\n    NO_TAKEOFF_SEPARATION: -200\n};\n\n/**\n * List of game events\n * @type {Object}\n */\nexport const GAME_EVENTS = {\n    AIRSPACE_BUST: 'AIRSPACE_BUST',\n    ARRIVAL: 'ARRIVAL',\n    COLLISION: 'COLLISION',\n    DEPARTURE: 'DEPARTURE',\n    EXTREME_CROSSWIND_OPERATION: 'EXTREME_CROSSWIND_OPERATION',\n    EXTREME_TAILWIND_OPERATION: 'EXTREME_TAILWIND_OPERATION',\n    GO_AROUND: 'GO_AROUND',\n    HIGH_CROSSWIND_OPERATION: 'HIGH_CROSSWIND_OPERATION',\n    HIGH_TAILWIND_OPERATION: 'HIGH_TAILWIND_OPERATION',\n    ILLEGAL_APPROACH_CLEARANCE: 'ILLEGAL_APPROACH_CLEARANCE',\n    /**\n    * Aircraft is cleared for the approach, has just become fully established on the localizer,\n    * but they are above the glideslope, and will have to chase it down\n    *\n    * This event is used to assess a penalty to the controller because they are required to have\n    * aircraft at/below glideslope altitude when intercepting the localizer\n    *\n    * @memberof GAME_EVENTS\n    * @property LOCALIZER_INTERCEPT_ABOVE_GLIDESLOPE\n    * @type {string}\n    */\n    LOCALIZER_INTERCEPT_ABOVE_GLIDESLOPE: 'LOCALIZER_INTERCEPT_ABOVE_GLIDESLOPE',\n    NOT_CLEARED_ON_ROUTE: 'NOT_CLEARED_ON_ROUTE',\n    SEPARATION_LOSS: 'SEPARATION_LOSS',\n    NO_TAKEOFF_SEPARATION: 'NO_TAKEOFF_SEPARATION'\n};\n\n/**\n * Event log description for a point event\n * @type {Object}\n */\nconst GAME_EVENTS_DESCRIPTION = {\n    AIRSPACE_BUST: 'Aircraft left radar coverage as arrival',\n    ARRIVAL: 'Aircraft landed successfully',\n    COLLISION: 'Multiple aircraft collided',\n    DEPARTURE: 'Departing aircraft switched to center',\n    EXTREME_CROSSWIND_OPERATION: 'Aircraft operated with extreme crosswind',\n    EXTREME_TAILWIND_OPERATION: 'Aircraft operated with extreme tailwind',\n    GO_AROUND: 'Aircraft had to go around',\n    HIGH_CROSSWIND_OPERATION: 'Aircraft operated with high crosswind',\n    HIGH_TAILWIND_OPERATION: 'Aircraft operated with high tailwind',\n    ILLEGAL_APPROACH_CLEARANCE: 'Aircraft intercept angle was > 30 degrees',\n    LOCALIZER_INTERCEPT_ABOVE_GLIDESLOPE: 'Aircraft intercepted localizer above glidescope',\n    NOT_CLEARED_ON_ROUTE: 'Aircraft left airspace without being on route',\n    SEPARATION_LOSS: 'Aircraft violated separation requirements',\n    NO_TAKEOFF_SEPARATION: 'Aircraft violated same runway separation requirements'\n};\n\n/**\n * @class GameController\n */\nclass GameController {\n    /**\n     * @constructor\n     */\n    constructor() {\n        // TODO: the below $elements _should_ be used instead of the inline vars currently in use but\n        // take caution when implmenting these because it will break tests currently in place. This is\n        // because of the use of $ within lifecycle methods and becuase this is a static class used\n        // by many of the files under test.\n        // this._$htmlElement = $('html');\n        // this._$pauseToggleElement = null;\n        // this._$fastForwardElement = null;\n        // this._$scoreElement = null;\n        this.game = {};\n        this.game.focused = true;\n        this.game.frequency = 1;\n        this.game.events = {};\n        this.game.timeouts = [];\n        this.game.last_score = 0;\n        this.game.score = 0;\n        this.game.option = new GameOptions();\n        this.theme = THEME.DEFAULT;\n\n        this._eventBus = EventBus;\n    }\n\n    /**\n     * @for GameController\n     * @method init_pre\n     */\n    init_pre() {\n        return this.setupHandlers()\n            .createChildren()\n            .enable();\n    }\n\n    /**\n    * Initialize blur functions used during game pausing\n    *\n    * @for GameController\n    * @method setupHandlers\n    * @chainable\n    */\n    setupHandlers() {\n        this._onWindowBlurHandler = this._onWindowBlur.bind(this);\n        this._onWindowFocusHandler = this._onWindowFocus.bind(this);\n\n        return this;\n    }\n\n    /**\n     * @for GameController\n     * @method createChildren\n     * @chainable\n     */\n    createChildren() {\n        // see comment in constructor. tl;dr these props should be used but are not because they break tests\n        // this._$pauseToggleElement = $(SELECTORS.DOM_SELECTORS.TOGGLE_PAUSE);\n        // this._$fastForwardElement = $(SELECTORS.DOM_SELECTORS.FAST_FORWARDS);\n        // this._$scoreElement = $(SELECTORS.DOM_SELECTORS.SCORE);\n\n        return this;\n    }\n\n    /**\n     * @for GameController\n     * @method enable\n     * @chainable\n     */\n    enable() {\n        this._eventBus.on(EVENT.SET_THEME, this._setTheme);\n\n        window.addEventListener('blur', this._onWindowBlurHandler);\n        window.addEventListener('focus', this._onWindowFocusHandler);\n        // for when the browser window receives or looses focus\n        document.addEventListener('visibilitychange', () => {\n            if (document.visibilityState === 'hidden') {\n                return this._onWindowBlurHandler();\n            }\n\n            return this._onWindowFocusHandler();\n        });\n\n        return this.initializeEventCount();\n    }\n\n    /**\n     * @for GameController\n     * @method disable\n     * @chainable\n     */\n    disable() {\n        this._eventBus.off(EVENT.SET_THEME, this._setTheme);\n\n        return this.destroy();\n    }\n\n    /**\n     * Destroy instance properties\n     *\n     * @for GameController\n     * @method destroy\n     * @chainable\n     */\n    destroy() {\n        // this._$htmlElement = $('html');\n        // this._$pauseToggleElement = null;\n        // this._$fastForwardElement = null;\n        // this._$scoreElement = null;\n        this.game = {};\n        this.game.focused = true;\n        // TODO: remove\n        this.game.frequency = 1;\n        this.game.events = {};\n        this.game.timeouts = [];\n        this.game.last_score = 0;\n        this.game.score = 0;\n        this.game.option = new GameOptions();\n        this.theme = THEME.DEFAULT;\n\n        return this;\n    }\n\n    /**\n     * Initialize `GameController.events` to contain appropriate properties with values of 0\n     *\n     * @for GameController\n     * @method initializeEventCount\n     */\n    initializeEventCount() {\n        _forEach(GAME_EVENTS, (gameEvent, key) => {\n            this.game.events[key] = 0;\n        });\n    }\n\n    // TODO: usages of this method should move to use EventBus\n    /**\n     * Record a game event to this.game.events, and update this.game.score\n     *\n     * @for GameController\n     * @method events_recordNew\n     * @param gameEvent {String} one of the events listed in GAME_EVENTS\n     */\n    events_recordNew(gameEvent) {\n        if (!_has(GAME_EVENTS, gameEvent)) {\n            throw new TypeError(`Expected a game event listed in GAME_EVENTS, but instead received ${gameEvent}`);\n        }\n\n        this.game.events[gameEvent] += 1;\n        this.game.score += GAME_EVENTS_POINT_VALUES[gameEvent];\n\n        this.game_updateScore();\n        this.updateScoreHistory(gameEvent);\n    }\n\n\n    /**\n     * @for GameController\n     * @method game_get_weighted_score\n     */\n    game_get_weighted_score() {\n        const hoursPlayed = TimeKeeper.accumulatedDeltaTime / TIME.ONE_HOUR_IN_SECONDS;\n        const scorePerHour = this.game.score / hoursPlayed;\n\n        return scorePerHour;\n    }\n\n    /**\n     * @for GameController\n     * @method game_reset_score_and_events\n     */\n    game_reset_score_and_events() {\n        // Reset events\n        _forEach(this.game.events, (gameEvent, key) => {\n            this.game.events[key] = 0;\n        });\n\n        // Reset score\n        this.game.score = 0;\n\n        this.game_updateScore();\n    }\n\n    /**\n     *\n     * @for GameController\n     * @method updateTimescale\n     * @param nextValue {number}\n     */\n    updateTimescale(nextValue) {\n        if (nextValue === 0) {\n            this.game_timewarp_toggle();\n            return;\n        } else if (nextValue < 0) {\n            return;\n        }\n\n        TimeKeeper.updateSimulationRate(nextValue);\n        EventTracker.recordEvent(TRACKABLE_EVENT.OPTIONS, 'timewarp', nextValue);\n\n        const $fastForwards = $(SELECTORS.DOM_SELECTORS.FAST_FORWARDS);\n\n        if (nextValue === 1) {\n            $fastForwards.removeClass(SELECTORS.CLASSNAMES.SPEED_2);\n            $fastForwards.removeClass(SELECTORS.CLASSNAMES.SPEED_5);\n            $fastForwards.prop('title', 'Set time warp to 2');\n        } else if (nextValue < 5) {\n            $fastForwards.removeClass(SELECTORS.CLASSNAMES.SPEED_5);\n            $fastForwards.addClass(SELECTORS.CLASSNAMES.SPEED_2);\n            $fastForwards.prop('title', 'Set time warp to 5');\n        } else {\n            $fastForwards.removeClass(SELECTORS.CLASSNAMES.SPEED_2);\n            $fastForwards.addClass(SELECTORS.CLASSNAMES.SPEED_5);\n            $fastForwards.prop('title', 'Reset time warp');\n        }\n    }\n\n    /**\n     * Update the visual state of the timewarp control button and call\n     * `TimeKeeper.updateTimescalse` with the next timewarp value.\n     *\n     * This method is called as a result of a user interaction\n     *\n     * @for GameController\n     * @method game_timewarp_toggle\n     */\n    game_timewarp_toggle() {\n        if (TimeKeeper.simulationRate >= 5) {\n            this.updateTimescale(1);\n        } else if (TimeKeeper.simulationRate === 1) {\n            this.updateTimescale(2);\n        } else {\n            this.updateTimescale(5);\n        }\n    }\n\n    /**\n     * @for GameController\n     * @method game_pause\n     */\n    game_pause() {\n        TimeKeeper.setPause(true);\n\n        const $pauseToggleElement = $(SELECTORS.DOM_SELECTORS.TOGGLE_PAUSE);\n\n        $pauseToggleElement.addClass(SELECTORS.CLASSNAMES.ACTIVE);\n        $pauseToggleElement.attr('title', 'Resume simulation');\n        $('html').addClass(SELECTORS.CLASSNAMES.PAUSED);\n    }\n\n    /**\n     * @for GameController\n     * @method game_unpause\n     */\n    game_unpause() {\n        TimeKeeper.setPause(false);\n\n        const $pauseToggleElement = $(SELECTORS.DOM_SELECTORS.TOGGLE_PAUSE);\n\n        $pauseToggleElement.removeClass(SELECTORS.CLASSNAMES.ACTIVE);\n        $pauseToggleElement.attr('title', 'Pause simulation');\n        $('html').removeClass(SELECTORS.CLASSNAMES.PAUSED);\n    }\n\n    /**\n     * @for GameController\n     * @method game_pause_toggle\n     */\n    game_pause_toggle() {\n        if (TimeKeeper.isPaused) {\n            EventTracker.recordEvent(TRACKABLE_EVENT.OPTIONS, 'pause', 'false');\n            this.game_unpause();\n\n            return;\n        }\n\n        EventTracker.recordEvent(TRACKABLE_EVENT.OPTIONS, 'pause', 'true');\n        this.game_pause();\n    }\n\n    /**\n     * @for GameController\n     * @method game_paused\n     * @return {boolean}\n     */\n    game_paused() {\n        return !this.game.focused || TimeKeeper.isPaused;\n    }\n\n    /**\n     * @for GameController\n     * @method game_speedup\n     * @return {number}\n     */\n    game_speedup() {\n        return !this.game_paused() ? TimeKeeper.simulationRate : 0;\n    }\n\n    /**\n     * @for GameController\n     * @method game_timeout\n     * @param func {function} called when timeout is triggered\n     * @param delay {number} in seconds\n     * @param that\n     * @param data\n     * @return {array} gameTimeout\n     */\n    game_timeout(functionToCall, delay, that, data) {\n        const timerDelay = TimeKeeper.accumulatedDeltaTime + delay;\n        const gameTimeout = [functionToCall, timerDelay, data, delay, false, that];\n\n        this.game.timeouts.push(gameTimeout);\n\n        return gameTimeout;\n    }\n\n    /**\n     * @for GameController\n     * @method game_interval\n     * @param func {function} called when timeout is triggered\n     * @param delay {number} in seconds\n     * @param that\n     * @param data\n     * @return {array} to\n     */\n    game_interval(func, delay, that, data) {\n        const to = [func, TimeKeeper.accumulatedDeltaTime + delay, data, delay, true, that];\n\n        this.game.timeouts.push(to);\n\n        return to;\n    }\n\n    /**\n     * Destroys a specific timer.\n     *\n     * @for GameController\n     * @method destroyTimer\n     * @param timer {array} the timer to destroy\n     */\n    destroyTimer(timer) {\n        this.game.timeouts.splice(this.game.timeouts.indexOf(timer), 1);\n    }\n\n    /**\n     * Destroy all current timers\n     *\n     * Used when changing airports. any timer is only valid\n     * for a specific airport.\n     *\n     * @for GameController\n     * @method destroyTimers\n     */\n    destroyTimers() {\n        this.game.timeouts = [];\n    }\n\n    /**\n     * @for GameController\n     * @method game_updateScore\n     * @param score {number}\n     */\n    game_updateScore() {\n        if (this.game.score === this.game.last_score) {\n            return;\n        }\n\n        const $scoreElement = $(SELECTORS.DOM_SELECTORS.SCORE);\n\n        $scoreElement.text(round(this.game.score));\n\n        // TODO: wait, what? Why not just < 0?\n        if (this.game.score < -0.51) {\n            $scoreElement.addClass(SELECTORS.CLASSNAMES.NEGATIVE);\n        } else {\n            $scoreElement.removeClass(SELECTORS.CLASSNAMES.NEGATIVE);\n        }\n\n        this.game.last_score = this.game.score;\n    }\n\n    /**\n     * @for GameController\n     * @method updateScoreHistory\n     * @param event {String} one of the events listed in GAME_EVENTS\n     */\n    updateScoreHistory(event) {\n        let points = GAME_EVENTS_POINT_VALUES[event];\n\n        if (points < 0) {\n            points = `<span class=\"gameScoreHistory-points_negative\">${points}</span>`;\n        }\n\n        const html = $(`<li>${GAME_EVENTS_DESCRIPTION[event]}: ${points}</li>`);\n        const listView = $(SELECTORS.DOM_SELECTORS.SCORE_LOG);\n\n        listView.append(html);\n        listView.scrollTop(listView.get(0).scrollHeight);\n    }\n\n    /**\n     * @for GameController\n     * @method update_pre\n     */\n    update_pre() {\n        const $htmlElement = $('html');\n\n        if (!this.game_paused() && $htmlElement.hasClass(SELECTORS.CLASSNAMES.PAUSED)) {\n            $htmlElement.removeClass(SELECTORS.CLASSNAMES.PAUSED);\n        }\n\n        this.updateTimers();\n    }\n\n    /**\n     * @for GameController\n     * @method updateTimers\n     */\n    updateTimers() {\n        const currentGameTime = TimeKeeper.accumulatedDeltaTime;\n\n        for (let i = this.game.timeouts.length - 1; i >= 0; i--) {\n            let willRemoveTimerFromList = false;\n            const timeout = this.game.timeouts[i];\n            const callback = timeout[0];\n            const delayFireTime = timeout[1];\n            const callbackArguments = timeout[2];\n            const delayInterval = timeout[3];\n            const shouldRepeat = timeout[4];\n\n            if (currentGameTime > delayFireTime) {\n                callback.call(timeout[5], callbackArguments);\n                willRemoveTimerFromList = true;\n\n                if (shouldRepeat) {\n                    timeout[1] = delayFireTime + delayInterval;\n                    willRemoveTimerFromList = false;\n                }\n            }\n\n            if (willRemoveTimerFromList) {\n                this.game.timeouts.splice(i, 1);\n                i -= 1;\n            }\n        }\n    }\n\n    /**\n     * @for GameController\n     * @method complete\n     */\n    complete() {\n        TimeKeeper.setPause(false);\n    }\n\n    /**\n     * Facade for `game.option.get`\n     *\n     * Allows for classes that import the `GameController` single-level\n     * access to any game option value\n     *\n     * @for GameController\n     * @method getGameOption\n     * @param optionName {string}\n     * @return {string}\n     */\n    getGameOption(optionName) {\n        return this.game.option.getOptionByName(optionName);\n    }\n\n    /**\n     * Check whether or not the trailing distance separator should be drawn.\n     *\n     * Used by the `CanvasController` to determine whether or not to proceed with\n     * `canvas_draw_separation_indicator`.\n     *\n     * @for GameController\n     * @method shouldUseTrailingSeparationIndicator\n     * @param aircraft {AircraftModel}\n     * @return {boolean}\n     */\n    shouldUseTrailingSeparationIndicator(aircraft) {\n        const userSettingsValue = this.getGameOption(GAME_OPTION_NAMES.DRAW_ILS_DISTANCE_SEPARATOR);\n        let isIndicatorEnabled = userSettingsValue === 'yes';\n\n        if (userSettingsValue === 'from-theme') {\n            isIndicatorEnabled = this.theme.RADAR_TARGET.TRAILING_SEPARATION_INDICATOR_ENABLED;\n        }\n\n        return isIndicatorEnabled && aircraft.isArrival();\n    }\n\n    /**\n     * @for GameController\n     * @method _onWindowBlur\n     * @param event {UIEvent}\n     * @private\n     */\n    _onWindowBlur(event) {\n        this.game.focused = false;\n\n        // resetting back to 1 here so when focus returns, we can reliably reset\n        // `#game.delta` to 0 to prevent jumpiness\n        TimeKeeper.updateSimulationRate(1);\n        TimeKeeper.setPause(true);\n\n        // update visual state of the timewarp control button for consistency\n        const $fastForwards = $(SELECTORS.DOM_SELECTORS.FAST_FORWARDS);\n\n        $fastForwards.removeClass(SELECTORS.CLASSNAMES.SPEED_2);\n        $fastForwards.removeClass(SELECTORS.CLASSNAMES.SPEED_5);\n        $fastForwards.prop('title', 'Set time warp to 2');\n    }\n\n    /**\n     * @for GameController\n     * @method _onWindowFocus\n     * @param event {UIEvent}\n     * @private\n     */\n    _onWindowFocus(event) {\n        this.game.focused = true;\n\n        // if was already manually paused when lost focus, respect that\n        if ($('html').hasClass(SELECTORS.CLASSNAMES.PAUSED)) {\n            return;\n        }\n\n        TimeKeeper.setPause(false);\n    }\n\n\n    /**\n     * Change theme to the specified name\n     *\n     * This should ONLY be called through the EventBus during a `SET_THEME` event,\n     * thus ensuring that the same theme is always in use by all app components.\n     *\n     * This method must remain an arrow function in order to preserve the scope\n     * of `this`, since it is being invoked by an EventBus callback.\n     *\n     * @for GameController\n     * @method _setTheme\n     * @param themeName {string}\n     */\n    _setTheme = (themeName) => {\n        if (!_has(THEME, themeName)) {\n            console.error(`Expected valid theme to change to, but received '${themeName}'`);\n\n            return;\n        }\n\n        this.theme = THEME[themeName];\n    };\n}\n\nexport default new GameController();\n","import _isNil from 'lodash/isNil';\nimport EventBus from '../lib/EventBus';\nimport EventTracker from '../EventTracker';\nimport { GAME_OPTION_VALUES } from '../constants/gameOptionConstants';\nimport { TRACKABLE_EVENT } from '../constants/trackableEvents';\n\n/**\n * Set, store and retrieve game options.\n *\n * @class GameOptions\n */\nexport default class GameOptions {\n    /**\n     * @for GameOptions\n     * @constructor\n     */\n    constructor() {\n        /**\n         * @property _eventBus\n         * @type EventBus\n         * @private\n         */\n        this._eventBus = EventBus;\n\n        /**\n         * @property _options\n         * @type {Object}\n         * @default {}\n         * @private\n         */\n        this._options = {};\n\n        /**\n         * Model properties will be added for each game option\n         * dynamically via `.addGameOptions()`\n         *\n         * @property {*}\n         * @type {string}\n         *\n         * this[OPTION_NAME] = OPTION_VALUE;\n         */\n\n        this.addGameOptions();\n    }\n\n    /**\n     * Add available game options to `_options` dictionary\n     *\n     * @for GameOptions\n     * @method addGameOptions\n     */\n    addGameOptions() {\n        for (let i = 0; i < GAME_OPTION_VALUES.length; i++) {\n            const option = GAME_OPTION_VALUES[i];\n\n            this.addOption(option);\n        }\n    }\n\n    /**\n     * @for GameOptions\n     * @method addOption\n     * @param optionProps {object}\n     */\n    addOption(optionProps) {\n        const optionStorageKey = this.buildStorageName(optionProps.name);\n        const storedOptionValue = global.localStorage.getItem(optionStorageKey);\n        this._options[optionProps.name] = optionProps;\n        let optionValue = optionProps.defaultValue;\n\n        if (!_isNil(storedOptionValue)) {\n            optionValue = storedOptionValue;\n        }\n\n        this[optionProps.name] = optionValue;\n    }\n\n    /**\n     * @for GameOptions\n     * @method getDescriptions\n     * @return {object}\n     */\n    getDescriptions() {\n        return this._options;\n    }\n\n    /**\n     * Gets the value of a given game option\n     *\n     * @for GameOptions\n     * @method getOptionByName\n     * @param name {string}\n     * @return {object}\n     */\n    getOptionByName(name) {\n        return this[name];\n    }\n\n    /**\n     * Sets a game option to a given value\n     *\n     * will fire an event with the `EventBus` is one is registered\n     *\n     * @for GameOptions\n     * @method setOptionByName\n     * @param name {string} name of the option to change\n     * @param value {string} value to set the option to\n     */\n    setOptionByName(name, value) {\n        this[name] = value;\n        const optionStorageKey = this.buildStorageName(name);\n\n        global.localStorage.setItem(optionStorageKey, value);\n        EventTracker.recordEvent(TRACKABLE_EVENT.SETTINGS, name, value);\n\n        if (this._options[name].onChangeEventHandler) {\n            this._eventBus.trigger(this._options[name].onChangeEventHandler, value);\n        }\n\n        return value;\n    }\n\n    /**\n     * Build a string that can be used as a key for localStorage data\n     *\n     * @for GameOptions\n     * @method buildStorageName\n     * @param optionName {string}\n     * @return {string}\n     */\n    buildStorageName(optionName) {\n        return `zlsa.atc.option.${optionName}`;\n    }\n}\n","import EventBus from '../lib/EventBus';\nimport GameController, { GAME_EVENTS } from './GameController';\nimport UiController from '../ui/UiController';\nimport { nm_ft } from '../utilities/unitConverters';\nimport { AIRCRAFT_EVENT } from '../constants/eventNames';\nimport { AIRPORT_CONTROL_POSITION_NAME } from '../constants/airportConstants';\nimport { MCP_MODE } from '../aircraft/ModeControl/modeControlConstants';\n\n/**\n * @class ScoreController\n */\nexport default class ScoreController {\n    constructor(aircraftController) {\n        /**\n         * Whether the aircraft has received a clearance to conduct an approach to a runway\n         *\n         * @for ScoreController\n         * @property _aircraftController\n         * @type {boolean}\n         * @private\n         */\n        this._aircraftController = aircraftController;\n\n        this.init()\n            .setupHandlers()\n            .enable();\n    }\n\n    init() {\n        return this;\n    }\n\n    /**\n     * @for ScoreController\n     * @method setupHandler\n     * @chainable\n     */\n    setupHandlers() {\n        this._onApproachHandler = this._onApproach.bind(this);\n        this._onLandingHandler = this._onLanding.bind(this);\n        this._onExitAirspaceHandler = this._onExitAirspace.bind(this);\n\n        return this;\n    }\n\n    /**\n     * @for ScoreController\n     * @method enable\n     * @chainable\n     */\n    enable() {\n        EventBus.on(AIRCRAFT_EVENT.APPROACH, this._onApproachHandler);\n        EventBus.on(AIRCRAFT_EVENT.FULLSTOP, this._onLandingHandler);\n        EventBus.on(AIRCRAFT_EVENT.AIRSPACE_EXIT, this._onExitAirspaceHandler);\n\n        return this;\n    }\n\n    /**\n     * @for ScoreController\n     * @method disable\n     * @chainable\n     */\n    disable() {\n        EventBus.off(AIRCRAFT_EVENT.APPROACH, this._onApproachHandler);\n        EventBus.off(AIRCRAFT_EVENT.FULLSTOP, this._onLandingHandler);\n        EventBus.off(AIRCRAFT_EVENT.AIRSPACE_EXIT, this._onExitAirspaceHandler);\n\n        return this;\n    }\n\n    /**\n     * @for ScoreController\n     * @method _onApproach\n     * @param aircraftModel {AircraftModel}\n     */\n    _onApproach(aircraftModel) {\n        this._penalizeLocalizerInterceptAltitude(aircraftModel);\n\n        // TODO: How can we evaluate the intercept angle?\n        // if () {\n        //     this._penalizeLocalizerInterceptAngle();\n        // }\n    }\n\n    /**\n     * @for ScoreController\n     * @method _onLanding\n     * @param aircraftModel {AircraftModel}\n     * @param runwayModel {RunwayModel}\n     */\n    _onLanding(aircraftModel, runwayModel) {\n        this._scoreWind(aircraftModel, 'landed');\n        this._scoreRunwaySeparation(aircraftModel, runwayModel, 'landed');\n    }\n\n    /**\n     * @for ScoreController\n     * @method _onExitAirspace\n     * @param aircraftModel {AircraftModel}\n     */\n    _onExitAirspace(aircraftModel) {\n        if (aircraftModel.isArrival()) {\n            this._onAirspaceExitForArrival(aircraftModel);\n\n            return;\n        }\n\n        if (aircraftModel.mcp.headingMode !== MCP_MODE.HEADING.LNAV) {\n            this._onAirspaceExitWithoutClearance(aircraftModel);\n\n            return;\n        }\n\n        this._onAirspaceExitWithClearance(aircraftModel);\n    }\n\n    /**\n     * An arriving aircraft is exiting the airpsace\n     *\n     * @for ScoreController\n     * @method _onAirspaceExitForArrival\n     * @param aircraftModel {AircraftModel}\n     * @private\n     */\n    _onAirspaceExitForArrival(aircraftModel) {\n        aircraftModel.radioCall('leaving radar coverage as arrival', AIRPORT_CONTROL_POSITION_NAME.APPROACH, true);\n        GameController.events_recordNew(GAME_EVENTS.AIRSPACE_BUST);\n    }\n\n    /**\n     * @for ScoreController\n     * @method _onAirspaceExitWithClearance\n     * @param aircraftModel {AircraftModel}\n     * @private\n     */\n    _onAirspaceExitWithClearance(aircraftModel) {\n        aircraftModel.radioCall('switching to center, good day', AIRPORT_CONTROL_POSITION_NAME.DEPARTURE);\n        GameController.events_recordNew(GAME_EVENTS.DEPARTURE);\n    }\n\n    /**\n     * @for ScoreController\n     * @method _onAirspaceExitWithoutClearance\n     * @param aircraftModel {AircraftModel}\n     * @private\n     */\n    _onAirspaceExitWithoutClearance(aircraftModel) {\n        aircraftModel.radioCall('leaving airspace without being on our route', AIRPORT_CONTROL_POSITION_NAME.DEPARTURE, true);\n        GameController.events_recordNew(GAME_EVENTS.NOT_CLEARED_ON_ROUTE);\n    }\n\n    /**\n     * @for ScoreController\n     * @method _scoreWind\n     * @param aircraftModel {AircraftModel}\n     * @param action {string}\n     */\n    _scoreWind(aircraftModel, action) {\n        const isWarning = true;\n        const wind = aircraftModel.getWindComponents();\n\n        // TODO: these two if blocks could be done in a single switch statement\n        if (wind.cross >= 20) {\n            GameController.events_recordNew(GAME_EVENTS.EXTREME_CROSSWIND_OPERATION);\n            UiController.ui_log(`${aircraftModel.callsign} ${action} with major crosswind`, isWarning);\n        } else if (wind.cross >= 10) {\n            GameController.events_recordNew(GAME_EVENTS.HIGH_CROSSWIND_OPERATION);\n            UiController.ui_log(`${aircraftModel.callsign} ${action} with crosswind`, isWarning);\n        }\n\n        if (wind.head <= -10) {\n            GameController.events_recordNew(GAME_EVENTS.EXTREME_TAILWIND_OPERATION);\n            UiController.ui_log(`${aircraftModel.callsign} ${action} with major tailwind`, isWarning);\n        } else if (wind.head <= -5) {\n            GameController.events_recordNew(GAME_EVENTS.HIGH_TAILWIND_OPERATION);\n            UiController.ui_log(`${aircraftModel.callsign} ${action} with tailwind`, isWarning);\n        }\n    }\n\n    /**\n     * @for ScoreController\n     * @method _scoreRunwaySeparation\n     * @param aircraftModel {AircraftModel}\n     * @param runwayModel {RunwayModel}\n     * @param action {string}\n     */\n    _scoreRunwaySeparation(aircraftModel, runwayModel, action) {\n        const previousAircraft = runwayModel.lastDepartedAircraftModel;\n\n        // do not penalize departures launched automatically; only those launched by the user\n        if (!previousAircraft || previousAircraft.shouldTakeOffWhenRunwayIsClear) {\n            return;\n        }\n\n        const actualDistance = nm_ft(aircraftModel.distanceToAircraft(previousAircraft));\n        const requiredDistance = aircraftModel.model.calculateSameRunwaySeparationDistanceInFeet(previousAircraft.model);\n\n        if (actualDistance < requiredDistance || previousAircraft.isOnGround()) {\n            const isWarning = true;\n\n            GameController.events_recordNew(GAME_EVENTS.NO_TAKEOFF_SEPARATION);\n            UiController.ui_log(`${aircraftModel.callsign} ${action} without adequate separation from another ` +\n                'aircraft using the same runway', isWarning);\n        }\n    }\n\n    /**\n     * Display a waring and record an illegal glideslope intercept event\n     *\n     * @for ScoreController\n     * @method _penalizeLocalizerInterceptAltitude\n     * @param aircraftModel {AircraftModel}\n     */\n    _penalizeLocalizerInterceptAltitude(aircraftModel) {\n        if (!aircraftModel.isAboveGlidepath()) {\n            return;\n        }\n\n        const isWarning = true;\n\n        UiController.ui_log(`${aircraftModel.callsign} intercepted localizer above glideslope`, isWarning);\n        GameController.events_recordNew(GAME_EVENTS.LOCALIZER_INTERCEPT_ABOVE_GLIDESLOPE);\n    }\n\n    /**\n     * Display a waring and record an illegal approach event\n     *\n     * @for ScoreController\n     * @method _penalizeLocalizerInterceptAngle\n     * @param aircraftModel {AircraftModel}\n     */\n    _penalizeLocalizerInterceptAngle(aircraftModel) {\n        const isWarning = true;\n\n        UiController.ui_log(`${aircraftModel.callsign} approach course intercept angle was greater than 30 degrees`, isWarning);\n        GameController.events_recordNew(GAME_EVENTS.ILLEGAL_APPROACH_CLEARANCE);\n    }\n}\n","import $ from 'jquery';\nimport App from './App';\n\nrequire('raf').polyfill();\n\n/**\n * Entry point for the application.\n *\n * Provides a way to grab the `body` element of the document and pass it to the app.\n */\nexport default (() => {\n    const $body = $('body');\n    // eslint-disable-next-line no-unused-vars\n    const app = new App($body);\n})();\n","import $ from 'jquery';\nimport { leftPad } from '../utilities/generalUtilities';\nimport { radiansToDegrees } from '../utilities/unitConverters';\nimport AirportController from '../airport/AirportController';\nimport SimClockController from './SimClockController';\nimport EventBus from '../lib/EventBus';\nimport { INVALID_NUMBER } from '../constants/globalConstants';\nimport { EVENT } from '../constants/eventNames';\nimport { AIRPORT_INFO_TEMPLATE } from './airportInfoTemplate';\nimport { PERFORMANCE } from '../constants/aircraftConstants';\n\n/**\n * @property INFO_VIEW_SELECTORS\n * @type {object<string, string>}\n * @final\n */\nconst INFO_VIEW_SELECTORS = {\n    CLOCK_LABEL: '.js-airportInfo-clock-label',\n    CLOCK_VALUE: '.js-airportInfo-clock-value',\n    WIND_LABEL: '.js-airportInfo-wind-label',\n    WIND_VALUE: '.js-airportInfo-wind-value',\n    ALTIMETER_LABEL: '.js-airportInfo-altimeter-label',\n    ALTIMETER_VALUE: '.js-airportInfo-altimeter-value',\n    ELEVATION_LABEL: '.js-airportInfo-elevation-label',\n    ELEVATION_VALUE: '.js-airportInfo-elevation-value'\n};\n\n/**\n * Gets information about the current airport, specifically\n * the airport's elevation, wind speed and direction, and altimeter.\n *\n * @class AirportInfoController\n */\nexport default class AirportInfoController {\n    /**\n     * @for AirportInfoController\n     * @constructor\n     * @param {jQuery|HTML element}\n     */\n    constructor($element) {\n        /**\n         * Root DOM element\n         *\n         * @for AirportInfoController\n         * @property $element\n         * @type {jQuery|HTML element}\n         */\n        this.$element = $element;\n\n        /**\n         * Information div\n         *\n         * @for AirportInfoController\n         * @property $template\n         * @type {jQuery|HTML element}\n         */\n        this.$template = null;\n\n        /**\n         * Information div\n         *\n         * @for AirportInfoController\n         * @property $altimeterView\n         * @type {jQuery|HTML element}\n         */\n        this.$altimeterView = null;\n\n        /**\n         * Information div\n         *\n         * @for AirportInfoController\n         * @property $clockView\n         * @type {jQuery|HTML element}\n         */\n        this.$clockView = null;\n\n        /**\n         * Information div\n         *\n         * @for AirportInfoController\n         * @property $elevationView\n         * @type {jQuery|HTML element}\n         */\n        this.$elevationView = null;\n\n        /**\n         * Information div\n         *\n         * @for AirportInfoController\n         * @property $windView\n         * @type {jQuery|HTML element}\n         */\n        this.$windView = null;\n\n        /**\n         * @for AirportInfoController\n         * @property altimeter\n         * @type {Number}\n         */\n        this.altimeter = INVALID_NUMBER;\n\n        /**\n         * @for AirportInfoController\n         * @property elevation\n         * @type {String}\n         */\n        this.elevation = '';\n\n        /**\n         * @for AirportInfoController\n         * @property icao\n         * @type {String}\n         */\n        this.icao = '';\n\n        /**\n         * @for AirportInfoController\n         * @property simClockController\n         */\n        this.simClockController = null;\n\n        /**\n         * @for AirportInfoController\n         * @property wind\n         * @type {String}\n         */\n        this.wind = '';\n\n        /**\n         * Local reference of the event bus\n         *\n         * @for AirportInfoController\n         * @property _eventBus\n         * @type {EventBus}\n         */\n        this._eventBus = EventBus;\n\n        return this.init()\n            ._createChildren()\n            ._setupHandlers()\n            .enable()\n            .onAirportChange();\n    }\n\n    // ------------------------------ LIFECYCLE ------------------------------\n\n    /**\n     * @for AirportInfoController\n     * @method init\n     * @chainable\n     */\n    init() {\n        this.$template = $(AIRPORT_INFO_TEMPLATE);\n        this.$altimeterView = this.$template.find(INFO_VIEW_SELECTORS.ALTIMETER_VALUE);\n        this.$clockView = this.$template.find(INFO_VIEW_SELECTORS.CLOCK_VALUE);\n        this.$elevationView = this.$template.find(INFO_VIEW_SELECTORS.ELEVATION_VALUE);\n        this.$windView = this.$template.find(INFO_VIEW_SELECTORS.WIND_VALUE);\n        this.altimeter = INVALID_NUMBER;\n        this.elevation = '';\n        this.icao = '';\n        this.simClockController = new SimClockController();\n        this.wind = '';\n        this._eventBus = EventBus;\n\n        return this;\n    }\n\n    /**\n     * Set initial element references\n     *\n     * Should be run once only on instantiation\n     *\n     * @for StripViewModel\n     * @method _createChildren\n     * @chainable\n     * @private\n     */\n    _createChildren() {\n        this.$element.append(this.$template);\n\n        return this;\n    }\n\n    /**\n     * @for AirportInfoController\n     * @method _setupHandlers\n     * @chainable\n     * @private\n     */\n    _setupHandlers() {\n        this._onAirportChangeHandler = this.onAirportChange.bind(this);\n        this._onWindChangeHandler = this.onWindChange.bind(this);\n\n        return this;\n    }\n\n    /**\n     * Enable all event handlers\n     *\n     * @for AirportInfoController\n     * @method _enable\n     * @chainable\n     */\n    enable() {\n        this._eventBus.on(EVENT.AIRPORT_CHANGE, this._onAirportChangeHandler);\n        this._eventBus.on(EVENT.WIND_CHANGE, this._onWindChangeHandler);\n\n        return this;\n    }\n\n    /**\n     * Disable all event handlers\n     *\n     * @for AirportInfoController\n     * @method _disable\n     * @chainable\n     */\n    disable() {\n        this._eventBus.off(EVENT.AIRPORT_CHANGE, this._onAirportChangeHandler);\n        this._eventBus.off(EVENT.WIND_CHANGE, this._onWindChangeHandler);\n\n        return this;\n    }\n\n    /**\n     * @for AirportInfoController\n     * @method reset\n     * @chainable\n     */\n    reset() {\n        this.$element = null;\n        this.$template = null;\n        this.altimeter = null;\n        this.elevation = null;\n        this.icao = null;\n        this.simClockController = null;\n        this.wind = null;\n        this._eventBus = null;\n\n        return this;\n    }\n\n    // ------------------------------ PUBLIC ------------------------------\n\n    /**\n     * Updates the information taken from the AirportModel: the wind, the altimeter,\n     * and the elevation. Triggered on airport change.\n     *\n     * @for AirportInfoController\n     * @method onAirportChange\n     */\n    onAirportChange() {\n        const airport = AirportController.airport_get();\n        const windAngle = Math.round(radiansToDegrees(airport.wind.angle));\n\n        this.wind = this._buildWindAndGustReadout({ speed: airport.wind.speed, angle: windAngle });\n        this.altimeter = this._generateHighAltimeterReading(airport.wind.speed);\n        this.elevation = `${airport.elevation}`;\n        this.icao = airport.icao.toUpperCase();\n\n        this._render();\n    }\n\n    /**\n     * Updates the wind information\n     *\n     * @for AirportInfoController\n     * @method onWindChange\n     */\n    onWindChange(currentWind) {\n        this.wind = this._buildWindAndGustReadout({ speed: currentWind.speed, angle: currentWind.angle });\n\n        this._render();\n    }\n\n    /**\n     * Updates the clock, called from `AppController#update_pre`\n     *\n     * @for AirportInfoController\n     * @method updateClock\n     */\n    updateClock() {\n        const readout = this.simClockController.buildClockReadout();\n\n        this.$clockView.text(readout);\n    }\n\n    // ------------------------------ PRIVATE ------------------------------\n\n    /**\n     * Formats the wind angle and speed from object into a string,\n     * in the format `${newAngle} ${newSpeed}G${gustSpeed}`.\n     *\n     * Example output: 270 10G18\n     *\n     * @for AirportGameInfoView\n     * @method _buildWindAndGustReadout\n     * @param {Object} wind\n     * @returns {String} formatted string\n     * @private\n     */\n    _buildWindAndGustReadout(wind) {\n        const minGustStrength = 5;\n        const { speed } = wind;\n        const { angle } = wind;\n        const newAngle = leftPad((angle || 360), 3);\n        const newSpeed = leftPad(speed, 2);\n        // Creates a fake \"gusting\" speed\n        const gustStrength = speed * Math.random();\n        const gustSpeed = leftPad(Math.round(speed + gustStrength), 2);\n\n        if (gustStrength < minGustStrength) {\n            return `${newAngle} ${newSpeed}`;\n        }\n\n        return `${newAngle} ${newSpeed} G${gustSpeed}`;\n    }\n\n    /**\n     * Creates an 'altimeter' reading for the info view\n     *\n     * @for AirportInfoController\n     * @method _generateHighAltimeterReading\n     * @param {Number} windSpeed\n     * @returns {Number} the altimeter value (29.92 or above)\n     * @private\n     */\n    _generateHighAltimeterReading(windSpeed) {\n        const pressure = PERFORMANCE.DEFAULT_ALTIMETER_IN_INHG + (windSpeed * Math.random() / 100);\n\n        return pressure.toFixed(2);\n    }\n\n    /**\n     * Sets the values from the updated airport info.\n     *\n     * @for AirportInfoController\n     * @method _render\n     * @private\n     */\n    _render() {\n        this.$windView.text(`${this.icao} ${this.wind}`);\n        this.$altimeterView.text(`${this.icao} ${this.altimeter}`);\n        this.$elevationView.text(`${this.icao} ${this.elevation}`);\n    }\n}\n","import TimeKeeper from '../engine/TimeKeeper';\nimport { digits_integer } from '../utilities/radioUtilities';\nimport { TIME } from '../constants/globalConstants';\n\n/**\n * Manages a clock that stays in sync with the current game time\n * @class SimClockController\n */\nexport default class SimClockController {\n    /**\n     * @for SimClockController\n     * @constructor\n     */\n    constructor() {\n        /**\n         * @for SimClockController\n         * @property startTime\n         * @type {Number}\n         * @default 0\n         */\n        this.startTime = 0;\n\n        return this._init();\n    }\n\n    /**\n     * @for SimClockController\n     * @method _init\n     * @private\n     */\n    _init() {\n        this.startTime = this.realWorldCurrentZuluTime;\n\n        return this;\n    }\n\n    /**\n     * Get current time in the user's time zone\n     *\n     *  @for SimClockController\n     * @property realWorldCurrentLocalTime\n     * @return {number} ms since 01/01/1970, 00:00:00 (user's time zone)\n     */\n    get realWorldCurrentLocalTime() {\n        return new Date().getTime();\n    }\n\n    /**\n     * Get current zulu time in milliseconds\n     *\n     * @for SimClockController\n     * @property realWorldCurrentZuluTime\n     * @return utc {number} ms since 01/01/1970, 00:00:00 UTC\n     */\n    get realWorldCurrentZuluTime() {\n        const date = new Date();\n        const utc = date.getTime() + (date.getTimezoneOffset() * TIME.ONE_MINUTE_IN_MILLISECONDS);\n\n        return utc;\n    }\n\n    /**\n     * @for SimClockController\n     * @method reset\n     * @chainable\n     */\n    reset() {\n        this.startTime = 0;\n\n        return this;\n    }\n\n    /**\n     * Generates a string of the current game time in a human-readable format\n     *\n     * @for SimClockController\n     * @method buildClockReadout\n     * @return clockTime {string} current game time formatted like '03:44:17'\n     */\n    buildClockReadout() {\n        const elapsedTimeInMilliseconds = TimeKeeper.accumulatedDeltaTime * TIME.ONE_SECOND_IN_MILLISECONDS;\n        const clockDate = new Date(this.startTime + elapsedTimeInMilliseconds);\n        const hours = digits_integer(clockDate.getHours(), 2);\n        const minutes = digits_integer(clockDate.getMinutes(), 2);\n        const seconds = digits_integer(clockDate.getSeconds(), 2);\n        const clockTime = `${hours}${minutes}/${seconds}`;\n\n        return clockTime;\n    }\n}\n","/**\n * HTML template for the airport info view and clock.\n *\n * @property AIRPORT_INFO_TEMPLATE\n * @type {String|HTML Element}\n * @final\n */\nexport const AIRPORT_INFO_TEMPLATE = '' +\n'<div id=\"airportInfo\" class=\"notSelectable\">' +\n'    <div class=\"airportInfo-line\">' +\n'        <div class=\"airportInfo-label js-airportInfo-clock-label\">TIME</div>' +\n'        <div class=\"airportInfo-value js-airportInfo-clock-value\"></div>' +\n'    </div>' +\n'    <div class=\"airportInfo-line\">' +\n'        <div class=\"airportInfo-label js-airportInfo-wind-label\">WIND</div>' +\n'        <div class=\"airportInfo-value js-airportInfo-wind-value\"></div>' +\n'    </div>' +\n'    <div class=\"airportInfo-line\">' +\n'        <div class=\"airportInfo-label js-airportInfo-altimeter-label\">ALTIM</div>' +\n'        <div class=\"airportInfo-value js-airportInfo-altimeter-value\"></div>' +\n'    </div>' +\n'    <div class=\"airportInfo-line\">' +\n'        <div class=\"airportInfo-label js-airportInfo-elevation-label\">ELEV</div>' +\n'        <div class=\"airportInfo-value js-airportInfo-elevation-value\"></div>' +\n'    </div>' +\n'</div>';\n","import _has from 'lodash/has';\nimport EventModel from './EventModel';\n\n/**\n * Creates a static class that should be used for cross class communication.\n *\n * This alleviates the need for direct imports between classes. Instead, the class\n * that performs an action need only `trigger` and any listening classes can respond\n * with their own internal callback.\n *\n * As a rule, when this class is used it should be reassigned to an instance property `#eventBus`.\n *\n * Example:\n * - triggering class `this.eventBus.trigger('EVENT_NAME', DATA_TO_PASS)`\n * - responding class `this.eventBus.on('EVENT_NAME', this.onEventCallback)`\n *\n * @class EventBus\n */\nclass EventBus {\n    /**\n     * @constructor\n     */\n    constructor() {\n        /**\n         * Dictionary of `eventNames`\n         *\n         * @property _events\n         * @type {object<string, EventModel>}\n         * @default {}\n         * @private\n         */\n        this._events = {};\n    }\n\n    /**\n     * @for EventBus\n     * @method destroy\n     */\n    destroy() {\n        this._events = {};\n    }\n\n    /**\n     * Register an event with a callback\n     *\n     * If an eventName already exists, add the observer to the observers list\n     *\n     * @for EventBus\n     * @method on\n     * @param eventName {string}   the name of an event\n     * @param callback {function}  function to be called when an event is triggered\n     */\n    on(eventName, callback) {\n        if (this.has(eventName)) {\n            this._events[eventName].addObserver(callback);\n\n            return;\n        }\n\n        this._events[eventName] = new EventModel(eventName);\n\n        this._addObserver(eventName, callback);\n    }\n\n    /**\n     * Remove a callback from the observers list\n     *\n     * When multiple observers exist, remove only the one callback from that list\n     *\n     * When `eventName` is the only observer, the event will be destroyed\n     * and removed from `#_events`.\n     *\n     * @for EventBus\n     * @method off\n     * @param eventName {string}   the name of an event\n     * @param callback {function}  function to remove from an events observers list\n     */\n    off(eventName, callback) {\n        if (!this.has(eventName)) {\n            return;\n        }\n\n        this._removeObserver(eventName, callback);\n\n        if (this._events[eventName].observers.length < 1) {\n            this._removeEventKey(eventName);\n        }\n    }\n\n    /**\n     * Trigger an event\n     *\n     * Will result in calling all of the observers listed for a particular\n     * event with the provided argument(s)\n     *\n     * @for EventBus\n     * @method trigger\n     * @param eventName {string}\n     * @param args {rest parameter}\n     */\n    trigger(eventName, ...args) {\n        if (!this.has(eventName)) {\n            return;\n        }\n\n        const { observers } = this._events[eventName];\n\n        for (let i = 0; i < observers.length; i++) {\n            observers[i](...args);\n        }\n    }\n\n    /**\n     * Boolean helper used to determine if `eventName` exists within `#_events`\n     *\n     * @for EventBus\n     * @method has\n     * @return {boolean}\n     */\n    has(eventName) {\n        return _has(this._events, eventName);\n    }\n\n    /**\n     * Add an observer to an event's observer list\n     *\n     * @for EventBus\n     * @method _addObserver\n     * @param eventName {string}\n     * @param callback {function}\n     * @private\n     */\n    _addObserver(eventName, callback) {\n        this._events[eventName].addObserver(callback);\n    }\n\n    /**\n     * Remove an observer from an event's observer list\n     *\n     * @for EventBus\n     * @method _removeObserver\n     * @param eventName {string}\n     * @param callback {function}\n     * @private\n     */\n    _removeObserver(eventName, callback) {\n        this._events[eventName].removeObserver(callback);\n    }\n\n    /**\n     * Remove a key from `#_events`\n     *\n     * This should only be called after the removal of the last observer\n     * for an `eventName`.\n     *\n     * @for EventBus\n     * @method _removeEventKey\n     * @param eventName {string}\n     * @private\n     */\n    _removeEventKey(eventName) {\n        delete this._events[eventName];\n    }\n}\n\nexport default new EventBus();\n","import { INVALID_INDEX } from '../constants/globalConstants';\n\n/**\n * Defines an event and an event's observers\n *\n * Should be used by the `EventBus` when defining new events\n *\n * @class EventModel\n */\nexport default class EventModel {\n    /**\n     * @constructor\n     * @param name {string}\n     */\n    constructor(name) {\n        /**\n         * The name of an event\n         *\n         * @property name\n         * @type {string}\n         * @default ''\n         */\n        this.name = '';\n\n        /**\n         * Functions that will be called when this event is triggered\n         *\n         * @property observers\n         * @type {*[]}\n         * @default []\n         */\n        this.observers = [];\n\n        this.init(name);\n    }\n\n    /**\n     * @for EventModel\n     * @method init\n     * @param  name {string}\n     */\n    init(name) {\n        this.name = name;\n    }\n\n    /**\n     * @for EventModel\n     * @method destroy\n     */\n    destroy() {\n        this.name = '';\n        this.observers = [];\n    }\n\n    /**\n     * add a callback(s) that fires when an event is triggered\n     *\n     * @for EventModel\n     * @method addObserver\n     * @param observer\n     */\n    addObserver(observer) {\n        if (this.hasObserver(observer)) {\n            return;\n        }\n\n        this.observers.push(observer);\n    }\n\n    /**\n     * remove an observer from the observers list\n     *\n     * @for EventModel\n     * @method removeObserver\n     * @param  observer\n     */\n    removeObserver(observer) {\n        if (!this.hasObserver(observer)) {\n            return;\n        }\n\n        const index = this.observers.indexOf(observer);\n        this.observers.splice(index, 1);\n    }\n\n    /**\n     * Determine if a passed observer exists within the current observer list\n     *\n     * @for EventModel\n     * @method hasObserver\n     * @param observer {function}\n     * @return {boolean}\n     */\n    hasObserver(observer) {\n        return this.observers.indexOf(observer) !== INVALID_INDEX;\n    }\n}\n","import { mod } from './core';\nimport { radiansToDegrees, degreesToRadians } from '../utilities/unitConverters';\n\n/**\n * 2x Pi\n *\n * @function tau\n * @return {number}\n */\nexport const tau = () => {\n    return Math.PI * 2;\n};\n\n/**\n * Returns the angle difference between two headings\n *\n * @function angle_offset\n * @param {number} a     heading, in radians\n * @param {number} b     heading, in radians\n * @return {number}\n */\nexport const angle_offset = (a, b) => {\n    a = radiansToDegrees(a);\n    b = radiansToDegrees(b);\n    let invert = false;\n\n    if (b > a) {\n        invert = true;\n        const temp = a;\n\n        a = b;\n        b = temp;\n    }\n\n    let offset = mod(a - b, 360);\n    if (offset > 180) {\n        offset -= 360;\n    }\n\n    if (invert) {\n        offset *= -1;\n    }\n\n    offset = degreesToRadians(offset);\n\n    return offset;\n};\n\n/**\n * normalize angles to within 0° - 360°\n * @param  {number} degrees an angle\n * @return {number}         an angle within [0,360]\n */\nexport const degrees_normalize = (degrees) => {\n    if (degrees >= 0) {\n        return degrees % 360;\n    }\n\n    return 360 + (degrees % 360);\n};\n\n/**\n * normalize angles to within 0 - 2π\n * @param  {number} radians an angle\n * @return {number}         an angle within [0,2π]\n */\nexport const radians_normalize = (radians) => {\n    if (radians >= 0) {\n        return radians % tau();\n    }\n\n    return tau() + (radians % tau());\n};\n\n/**\n * Calculate the distance between two lat/long coordinates in km\n *\n * This is a javascript implementation of the Haversine Formula\n *\n * for more information on the math see:\n * - http://www.movable-type.co.uk/scripts/latlong.html\n * - http://stackoverflow.com/questions/27928/calculate-distance-between-two-latitude-longitude-points-haversine-formula\n *\n * @function distanceToPoint\n * @param startLatitude {number}\n * @param startLongitude {number}\n * @param endLatitude {number}\n * @param endLongitude {number}\n * return {number}\n */\nexport const distanceToPoint = (startLatitude, startLongitude, endLatitude, endLongitude) => {\n    // TODO: add to global constants\n    const EARTH_RADIUS_KM = 6371;\n    const startLatitudeRadians = degreesToRadians(startLatitude);\n    const endLatitudeRadians = degreesToRadians(endLatitude);\n    const distanceLatitude = degreesToRadians(startLatitude - endLatitude);\n    const distanceLongitude = degreesToRadians(startLongitude - endLongitude);\n\n    // the square of half the chord length between points\n    const a = Math.pow(Math.sin(distanceLatitude / 2), 2) +\n        (Math.cos(startLatitudeRadians) * Math.cos(endLatitudeRadians) * Math.pow(Math.sin(distanceLongitude / 2), 2));\n\n\n    const angularDistanceInRadians = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n    return angularDistanceInRadians * EARTH_RADIUS_KM;\n};\n\n// /**\n//  *\n//  * @function distEuclid\n//  * @param\n//  * @param\n//  * @return\n//  */\n// export const distEuclid = (lat1, lon1, lat2, lon2) => {\n//     // TODO: add to global constants\n//     const EARTH_RADIUS_KM = 6371;\n//     const lat1 = degreesToRadians(lat1);\n//     const lat2 = degreesToRadians(lat2);\n//     const dlat = degreesToRadians(lat2 - lat1);\n//     const dlon = degreesToRadians(lon2 - lon1);\n//\n//     const a = Math.sin(dlat / 2) * Math.sin(dlat / 2) + Math.cos(lat1) * Math.cos(lat2) * Math.sin(dlon / 2) * Math.sin(dlon / 2);\n//     const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n//     const d = EARTH_RADIUS_KM * c;\n//\n//     return d; // distance, in kilometers\n// };\n","import _isNumber from 'lodash/isNumber';\nimport _random from 'lodash/random';\nimport { leftPad } from '../utilities/generalUtilities';\n\n/**\n * @function round\n * @return {number}\n */\nexport function round(n, factor = 1) {\n    return Math.round(n / factor) * factor;\n}\n\n/**\n * @function abs\n * @return {number}\n */\nexport function abs(n) {\n    return Math.abs(n);\n}\n\n/**\n * @function avg\n * @param n {Number[]}\n * @return {number}\n */\nexport function avg(n) {\n    return n.reduce((a, b) => a + b) / n.length;\n}\n\n/**\n * @function sin\n * @return {number}\n */\nexport function sin(a) {\n    return Math.sin(a);\n}\n\n/**\n * @function cos\n * @return {number}\n */\nexport function cos(a) {\n    return Math.cos(a);\n}\n\n/**\n * @function tan\n * @return {number}\n */\nexport function tan(a) {\n    return Math.tan(a);\n}\n\n// TODO: rename to floor,\n/**\n * @function fl\n * @return {number}\n */\nexport function fl(n, number = 1) {\n    return Math.floor(n / number) * number;\n}\n\n// TODO: rename to randomInteger\n/**\n * @function randint\n * @return {number}\n */\nexport function randint(low, high) {\n    return Math.floor(Math.random() * (high - low + 1)) + low;\n}\n\n// TODO: rename to pluralize\n/**\n * @function s\n * @return {number}\n */\nexport function s(i) {\n    return (i === 1) ? '' : 's';\n}\n\n/**\n * Checks whether or not a given value is between (inclusive) two given values\n *\n * Note: The more efficient order is to pass (value, minimum, maximum), but if the\n * relative values are not known, the function will still conduct the comparison\n * correctly.\n *\n * @function isWithin\n * @param value {number}    the value in question\n * @param limit1 {number}   constraining value (inclusive)\n * @param limit2 {number}   constraining value (inclusive)\n * @return {boolean}\n */\nexport function isWithin(value, limit1, limit2) {\n    if (limit1 > limit2) {\n        const oldLimit1 = limit1;\n        limit1 = limit2;\n        limit2 = oldLimit1;\n    }\n\n    return limit1 <= value && value <= limit2;\n}\n\n/**\n * Test if a value is within EPSILON of an expected value\n *\n * this is necessary because of approximation due to the floating point arithmetics (i think)\n * For example: Math.cos(Math.PI/2) returns 6.123233995736766e-17 instead of 0\n * In this case iswithinEpsilon(Math.cos(Math.PI/2), 0) would return true\n *\n * @param {number}   value            the value we want to test\n * @param {number}   expectedValue    the value we want to test against\n * @return boolean  true if the value is within EPSILON of the expected value, false otherwise\n */\nexport function isWithinEpsilon(value, expectedValue) {\n    const lowerBound = expectedValue - Number.EPSILON;\n    const upperBound = expectedValue + Number.EPSILON;\n\n    return isWithin(value, lowerBound, upperBound);\n}\n\n// TODO: add a divisor paramater that defaults to `2`\n/**\n * Given a number, find the middle value.\n *\n * @method calculateMiddle\n * @param  {number} value\n * @return {number}\n */\nexport function calculateMiddle(value = 0) {\n    if (!_isNumber(value)) {\n        throw new TypeError(`Invalid parameter, expected a number but found ${typeof value}`);\n    }\n\n    return round(value / 2);\n}\n\n/**\n *\n * @function mod\n * @param firstValue {number}\n * @param secondValue {number}\n * @return {number}\n */\nexport function mod(firstValue, secondValue) {\n    return ((firstValue % secondValue) + secondValue) % secondValue;\n}\n\n// TODO: Reorder as (valueToClamp, min, max) to maintain uniformity with the lodash equivalent\n/**\n * Clamp a value to be within a certain range\n * Note: For the opposite, see `spread()`\n *\n * @function clamp\n * @param min {number}\n * @param valueToClamp {number}\n * @param max {number} (optional)\n * @return {number}\n */\nexport function clamp(min, valueToClamp, max = Infinity) {\n    let temp;\n\n    if (!_isNumber(valueToClamp)) {\n        throw new TypeError('Invalid parameter. Expected `valueToClamp` to be a number');\n    }\n\n    if (max === Infinity) {\n        if (min > valueToClamp) {\n            return min;\n        }\n\n        return valueToClamp;\n    }\n\n    if (min > max) {\n        temp = max;\n        max = min;\n        min = temp;\n    }\n\n    if (min > valueToClamp) {\n        return min;\n    }\n\n    if (max < valueToClamp) {\n        return max;\n    }\n\n    return valueToClamp;\n}\n\n/**\n * Spread a value to be OUTSIDE OF a certain range\n * Note: For the opposite, see `clamp()`\n *\n * @function spread\n * @param value {number} the value in question\n * @param lowerLimit {number} the minimum value that is considered unacceptable\n * @param upperLimit {number} the maximum value that is considered unacceptable\n * @return {number}\n */\nexport function spread(value, lowerLimit, upperLimit) {\n    const averageOfLimits = (lowerLimit + upperLimit) / 2;\n\n    if (value <= lowerLimit || value >= upperLimit) {\n        return value;\n    }\n\n    if (value < averageOfLimits) {\n        return lowerLimit;\n    }\n\n    return upperLimit;\n}\n\n/**\n * Takes a value's position relative to a given range, and extrapolates to another range.\n *\n * Note: Return will be outside range2 if target_val is outside range1.\n *       If you wish to clamp it within range2, use extrapolate_range_clamp.\n *\n * @function extrapolate_range\n * @param  {number} range1_min minimum value of range 1\n * @param  {number} target_val target value within range 1\n * @param  {number} range1_max maximum value of range 1\n * @param  {number} range2_min minimum value of range 2\n * @param  {number} range2_max maximum value of range 2\n * @return {number}            target value wihtin range 2\n */\nfunction extrapolate_range(range1_min, target_val, range1_max, range2_min, range2_max) {\n    return range2_min + (range2_max - range2_min) * (target_val - range1_min) / (range1_max - range1_min);\n}\n\n/**\n * Take a value's location relative to a given range then extrapolate to (and clamp within) another range.\n *\n * Note: Return will be clamped within range2, even if target_val is outside range1.\n *       If you wish to allow extrapolation beyond the bounds of range2, us extrapolate_range.\n *\n * @function extrapolate_range_clamp\n * @param  {number} range1Min       minimum value of range1\n * @param  {number} targetValue     target value relative to range1\n * @param  {number} range1Max       maximum value of range1\n * @param  {number} range2Min       minimum value of range2\n * @param  {number} range2Max       maximum value of range2\n * @return {number}                 target value within range2\n */\nexport function extrapolate_range_clamp(range1Min, targetValue, range1Max, range2Min, range2Max) {\n    const extrapolationResult = extrapolate_range(range1Min, targetValue, range1Max, range2Min, range2Max);\n\n    return clamp(extrapolationResult, range2Min, range2Max);\n}\n\n/**\n * Generate a random number with each digit between 0-7\n *\n * @function generateRandomOctalWithLength\n * @return {string}                         number with digits between 0-7\n */\nexport function generateRandomOctalWithLength(length = 1) {\n    const value = [];\n\n    for (let i = 0; i < length; i++) {\n        const randomOctal = _random(0, 7);\n\n        value.push(randomOctal);\n    }\n\n    return leftPad(value.join(''), length);\n}\n","/**\n * Calculate distance in a 2d plane between two points\n *\n * @function distance2d\n * @param a {array}\n * @param b {array}\n * return {number}\n */\nexport const distance2d = (a, b) => {\n    const x = a[0] - b[0];\n    const y = a[1] - b[1];\n\n    return Math.sqrt((x * x) + (y * y));\n};\n","import {\n    abs,\n    sin,\n    cos\n} from './core';\nimport {\n    tau,\n    angle_offset\n} from './circle';\nimport {\n    vradial,\n    vsub,\n    vlen\n} from './vector';\nimport {\n    degreesToRadians,\n    radiansToDegrees\n} from '../utilities/unitConverters';\nimport { PERFORMANCE } from '../constants/aircraftConstants';\n\n/**\n * Calculate the radius of turn of the aircraft, given its groundspeed\n *\n * Reference:\n * http://www.flightlearnings.com/2009/08/26/radius-of-turn/\n * https://en.wikipedia.org/wiki/Banked_turn#Banked_turn_in_aeronautics\n *\n * Possible conversion factor constants:\n *    - 68416 (yields nautical miles)\n *    - 11.26 (yields feet)\n *\n * @function calcTurnRadiusByBankAngle\n * @param speed {number} aircraft groundspeed, in knots\n * @param bankAngle {number} bank angle to use, in radians\n * @return {number} radius of turn, in nautical miles\n */\nexport function calcTurnRadiusByBankAngle(speed, bankAngle) {\n    const conversionFactor = 68416; // yields radius in nautical miles\n\n    return (speed * speed) / (conversionFactor * Math.tan(bankAngle));\n}\n\n\n/**\n * Calculate the radius of turn of the aircraft, given its groundspeed and\n * its turn rate\n *\n * R = speedInKnots / (turnRateInDegreePerSecond * 20 * PI)\n *\n * https://en.wikipedia.org/wiki/Standard_rate_turn#Formulae\n *\n * @function calcTurnRadiusByTurnRate\n * @param speed {number} aircraft groundspeed, in knots\n * @param turnRate {number} in radians per second\n * @return {number} radius of turn, in nautical miles\n */\nexport function calcTurnRadiusByTurnRate(speed, turnRate) {\n    return speed / (turnRate * 180 * 20);\n}\n\n/**\n * The turn initiation distance is the distance that is necessary to complete\n * a turn before reaching of a fly-by turn.\n *\n * @function calcTurnInitiationDistanceNm\n * @param speed {number}        current speed of the aircraft in knots\n * @param turnRate {number}     turn rate of the aircraft in radian per second\n * @param courseChange {number} angular difference, in radians\n * @return {number}\n */\nexport function calcTurnInitiationDistanceNm(speed, turnRate, courseChange) {\n    const turnRadiusNm = calcTurnRadiusByTurnRate(speed, turnRate);\n\n    return turnRadiusNm * Math.tan(courseChange * 0.5);\n}\n\n/**\n * Returns the bearing from `startPosition` to `endPosition`\n * @function bearingToPoint\n * @param startPosition {array}     positional array, start point\n * @param endPosition {array}       positional array, end point\n * @return {number}\n */\nexport function bearingToPoint(startPosition, endPosition) {\n    return vradial(vsub(endPosition, startPosition));\n}\n\n// TODO: this may be better suited to live in an Aircraft model somewhere.\n// TODO: This is goofy like this. Should be changed to accept (PositionModel, PositionModel, heading)\n/**\n * Returns an offset array showing how far [fwd/bwd, left/right] 'aircraft' is of 'target'\n *\n * @param aircraft {AircraftModel}      the aircraft in question\n * @param target {array}                        positional array of the targeted position [x,y]\n * @param headingThruTarget {number} (optional) The heading the aircraft should\n *                                              be established on when passing the target.\n *                                              Default value is the aircraft's heading.\n * @returns {array}                             [0] is the lateral offset, in km\n *                                              [1] is the longitudinal offset, in km\n *                                              [2] is the hypotenuse (straight-line distance), in km\n */\nexport function getOffset(aircraft, target, headingThruTarget = null) {\n    if (!headingThruTarget) {\n        headingThruTarget = aircraft.heading;\n    }\n\n    const offset = [0, 0, 0];\n    const vector = vsub(target, aircraft.relativePosition); // vector from aircraft pointing to target\n    const bearingToTarget = vradial(vector);\n\n    offset[2] = vlen(vector);\n    offset[0] = offset[2] * sin(headingThruTarget - bearingToTarget);\n    offset[1] = offset[2] * cos(headingThruTarget - bearingToTarget);\n\n    return offset;\n}\n\n/**\n * @function _calculateNominalNewCourse\n * @param nextWaypointRelativePosition {array}\n * @param currentWaypointRelativePosition {array}\n * @return nominalNewCourse {number}\n * */\nfunction _calculateNominalNewCourse(nextWaypointRelativePosition, currentWaypointRelativePosition) {\n    let nominalNewCourse = vradial(vsub(nextWaypointRelativePosition, currentWaypointRelativePosition));\n\n    // normalize angle within 0 to 2pi\n    if (nominalNewCourse < 0) {\n        nominalNewCourse += tau();\n    }\n\n    return nominalNewCourse;\n}\n\n/**\n * @function _calculateCourseChangeInRadians\n * @param currentHeading {number}\n * @param nominalNewCourse {number}\n * @return {number}\n */\nfunction _calculateCourseChangeInRadians(currentHeading, nominalNewCourse) {\n    let courseChange = abs(radiansToDegrees(currentHeading) - radiansToDegrees(nominalNewCourse));\n\n    if (courseChange > 180) {\n        courseChange = 360 - courseChange;\n    }\n\n    return degreesToRadians(courseChange);\n}\n\n/**\n * Calculate the turn initiation distance for an aircraft to navigate between two fixes.\n *\n * References:\n * - http://www.ohio.edu/people/uijtdeha/ee6900_fms_00_overview.pdf, Fly-by waypoint\n * - The Avionics Handbook, ch 15\n *\n * @function calculateTurnInitiationDistance\n * @param aircraft {AircraftModel}\n * @param currentWaypointPosition {StaticPositionModel}\n * @return {number} distance before fix to initiate turn to level out on route, in nautical miles\n */\nexport function calculateTurnInitiationDistance(aircraft, currentWaypointPosition) {\n    const nextWaypointModel = aircraft.fms.nextWaypoint;\n\n    if (!aircraft.fms.hasNextWaypoint() || nextWaypointModel.isVectorWaypoint) {\n        return 0;\n    }\n\n    // use the target heading instead of the actual heading to take into account\n    // that we might be already turning and there might be no need to initiate\n    // a turn at the moment. see #935\n    let { targetHeading } = aircraft;\n\n    if (targetHeading < 0) {\n        targetHeading += tau();\n    }\n\n    const turnRate = PERFORMANCE.TURN_RATE;\n    const nominalNewCourse = _calculateNominalNewCourse(\n        nextWaypointModel.relativePosition,\n        currentWaypointPosition.relativePosition\n    );\n    const courseChange = _calculateCourseChangeInRadians(targetHeading, nominalNewCourse);\n    const turnInitiationDistanceNm = calcTurnInitiationDistanceNm(aircraft.groundSpeed, turnRate, courseChange);\n\n    return turnInitiationDistanceNm;\n}\n\n/**\n * @function calculateCrosswindAngle\n * @param runwayAngle {number}\n * @param windAngle {number}\n * @return {number}\n */\nexport function calculateCrosswindAngle(runwayAngle, windAngle) {\n    return abs(angle_offset(runwayAngle, windAngle));\n}\n","import _forEach from 'lodash/forEach';\nimport _map from 'lodash/map';\nimport {\n    sin,\n    cos,\n    abs,\n    clamp\n} from './core';\nimport { radians_normalize } from './circle';\nimport { degreesToRadians } from '../utilities/unitConverters';\n\n/**\n * Computes length of 2D vector\n *\n * @function vlen\n */\nexport const vlen = (v) => {\n    try {\n        return Math.sqrt((v[0] * v[0]) + (v[1] * v[1]));\n    } catch (err) {\n        console.error(`call to vlen() failed. v:${v} | Err:${err}`);\n    }\n};\n\n/**\n * Compute angle of 2D vector, in radians\n *\n * @function vradial\n * @param v {}\n * @return {number}\n */\nexport const vradial = (v) => {\n    return Math.atan2(v[0], v[1]);\n};\n\n/**\n * Subtracts Vectors (all dimensions)\n *\n * @fuction vsub\n * @param v1 {number}\n * @param v2 {number}\n * @return {number}\n */\nexport const vsub = (v1, v2) => {\n    try {\n        const v = [];\n        const limit = Math.min(v1.length, v2.length);\n\n        // TODO: this is easie rwith _map()\n        for (let i = 0; i < limit; i++) {\n            v.push(v1[i] - v2[i]);\n        }\n\n        return v;\n    } catch (err) {\n        console.error(`call to vsub() failed. v1: ${v1} | v2:${v2} | Err: ${err}`);\n    }\n};\n\n// ************************ VECTOR FUNCTIONS ************************\n// For more info, see http://threejs.org/docs/#Reference/Math/Vector3\n// Remember: [x,y] convention is used, and doesn't match [lat,lon]\n\n/**\n * Normalize a 2D vector\n * eg scaling elements such that net length is 1\n * Turns vector 'v' into a 'unit vector'\n */\nexport const vnorm = (v, length) => {\n    const x = v[0];\n    const y = v[1];\n    const angle = Math.atan2(x, y);\n\n    if (!length) {\n        length = 1;\n    }\n\n    return [\n        sin(angle) * length,\n        cos(angle) * length\n    ];\n};\n\n/**\n * Get a 2D unit vector corresponding to a heading in radians\n *\n * @param  heading_angle    float    the heading angle, in radians\n * @return array    an array of the x and y components of the vector\n */\nexport const vectorize2dFromRadians = (heading_angle) => {\n    // normalize the angle beetween 0 and 2*PI\n    heading_angle = radians_normalize(heading_angle);\n\n    return [\n        sin(heading_angle),\n        cos(heading_angle)\n    ];\n};\n\n/**\n * Get a 2D unit vector corresponding to a heading in degrees\n *\n * @param  heading_angle    float    the heading angle, in degrees\n * @return array    an array of the x and y components of the vector\n */\nexport const vectorize2dFromDegrees = (heading_angle) => {\n    return vectorize2dFromRadians(degreesToRadians(heading_angle));\n};\n\n/**\n * Adds Vectors (all dimensions)\n */\nexport const vadd = (v1, v2) => {\n    // TODO: why try/catch?\n    try {\n        const v = [];\n        const limit = Math.min(v1.length, v2.length);\n\n        // TODO: this can be done with a _map()\n        for (let i = 0; i < limit; i++) {\n            v.push(v1[i] + v2[i]);\n        }\n\n        return v;\n    } catch (err) {\n        console.error(`call to vadd() failed. v1:${v1} | v2:${v2} | Err:${err}`);\n    }\n};\n\n/**\n * Multiplies Vectors (all dimensions)\n */\n// const vmul = (v1, v2) => {\n//     // TODO: why try/catch?\n//     try {\n//         const v = [];\n//         const limit = Math.min(v1.length, v2.length);\n//\n//         // TODO: this can be done with a _map()\n//         for (let i = 0; i < limit; i++) {\n//             v.push(v1[i] * v2[i]);\n//         }\n//\n//         return v;\n//     } catch (err) {\n//         console.error(`call to vmul() failed. v1:${v1} | v2:${v2} | Err:${err}`);\n//     }\n// };\n\n/**\n * Divides Vectors (all dimensions)\n */\n// const vdiv = (v1, v2) => {\n//     // TODO: why try/catch?\n//     try {\n//         const v = [];\n//         const lim = Math.min(v1.length, v2.length);\n//\n//         // TODO: this can be done with a _map()\n//         for (let i = 0; i < lim; i++) {\n//             v.push(v1[i] / v2[i]);\n//         }\n//\n//         return v;\n//     } catch (err) {\n//         console.error(`call to vdiv() failed. v1:${v1} | v2:${v2} | Err:${err}`);\n//     }\n// };\n\n/**\n * Scales vectors in magnitude (all dimensions)\n */\nexport const vscale = (vectors, factor) => {\n    return _map(vectors, (v) => v * factor);\n};\n\n/**\n * Vector dot product (all dimensions)\n */\n// const vdp = (v1, v2) => {\n//     let n = 0;\n//     const lim = Math.min(v1.length, v2.length);\n//\n//     // TODO: mabye use _map() here?\n//     for (let i = 0; i < lim; i++) {\n//         n += v1[i] * v2[i];\n//     }\n//\n//     return n;\n// };\n\n/**\n * Compute determinant of 2D/3D vectors\n * Remember: May return negative values (undesirable in some situations)\n */\nconst vdet = (v1, v2, /* optional */ v3) => {\n    if (Math.min(v1.length, v2.length) === 2) {\n        // 2x2 determinant\n        return (v1[0] * v2[1]) - (v1[1] * v2[0]);\n    } else if (Math.min(v1.length, v2.length, v3.length) === 3 && v3) {\n        // 3x3 determinant\n        return (\n            v1[0] *\n            vdet([v2[1], v2[2]], [v3[1], v3[2]]) - v1[1] *\n            vdet([v2[0], v2[2]], [v3[0], v3[2]]) + v1[2] *\n            vdet([v2[0], v2[1]], [v3[0], v3[1]])\n        );\n    }\n};\n\n/**\n * Vector cross product (3D/2D*)\n * Passing 3D vector returns 3D vector\n * Passing 2D vector (classically improper) returns z-axis SCALAR\n * *Note on 2D implementation: http://stackoverflow.com/a/243984/5774767\n */\nconst vcp = (v1, v2) => {\n    if (Math.min(v1.length, v2.length) === 2) {\n        // for 2D vector (returns z-axis scalar)\n        return vcp([v1[0], v1[1], 0], [v2[0], v2[1], 0])[2];\n    }\n\n    if (Math.min(v1.length, v2.length) === 3) {\n        // for 3D vector (returns 3D vector)\n        return [\n            vdet([v1[1], v1[2]], [v2[1], v2[2]]),\n            -vdet([v1[0], v1[2]], [v2[0], v2[2]]),\n            vdet([v1[0], v1[1]], [v2[0], v2[1]])\n        ];\n    }\n};\n\n/**\n * Returns vector rotated by \"radians\" radians\n */\nexport const vturn = (radians, v) => {\n    if (!v) {\n        v = [0, 1];\n    }\n\n    const x = v[0];\n    const y = v[1];\n    const cs = cos(-radians);\n    const sn = sin(-radians);\n\n    return [\n        x * cs - y * sn,\n        x * sn + y * cs\n    ];\n};\n\n/**\n * Determines if and where two rays will intersect. All angles in radians.\n * Variation based on http://stackoverflow.com/a/565282/5774767\n */\nexport const raysIntersect = (pos1, dir1, pos2, dir2, deg_allowance) => {\n    if (!deg_allowance) {\n        // degrees divergence still considered 'parallel'\n        deg_allowance = 0;\n    }\n\n    const p = pos1;\n    const q = pos2;\n    const r = vectorize2dFromRadians(dir1);\n    const s = vectorize2dFromRadians(dir2);\n    const t = abs(vcp(vsub(q, p), s) / vcp(r, s));\n    const t_norm = abs(vcp(vsub(vnorm(q), vnorm(p)), s) / vcp(r, s));\n    const u_norm = abs(vcp(vsub(vnorm(q), vnorm(p)), r) / vcp(r, s));\n\n    if (abs(vcp(r, s)) < abs(vcp([0, 1], vectorize2dFromRadians(degreesToRadians(deg_allowance))))) {\n        // parallel (within allowance)\n        const crossProduct = vcp(\n            vsub(vnorm(q), vnorm(p)),\n            r\n        );\n\n        if (crossProduct === 0) {\n            // collinear\n            return true;\n        }\n\n        // parallel, non-intersecting\n        return false;\n    } else if ((t_norm >= 0 && t_norm <= 1) && (u_norm >= 0 && u_norm <= 1)) {\n        // rays intersect here\n        return vadd(p, vscale(r, t));\n    }\n\n    // diverging, non-intersecting\n    return false;\n};\n\n/**\n * 'Flips' vector's Y component in direction\n * Helper function for culebron's poly edge vector functions\n */\nconst vflipY = (v) => {\n    return [-v[1], v[0]];\n};\n\n/**\n *\n *\n * solution by @culebron\n * turn poly edge into a vector.\n * the edge vector scaled by j and its normal vector scaled by i meet\n * if the edge vector points between the vertices,\n * then normal is the shortest distance.\n * --------\n * x1 + x2 * i == x3 + x4 * j\n * y1 + y2 * i == y3 + y4 * j\n * 0 < j < 1\n * --------\n *\n * i == (y3 + j y4 - y1) / y2\n * x1 + x2 y3 / y2 + j x2 y4 / y2 - x2 y1 / y2 == x3 + j x4\n * j x2 y4 / y2 - j x4 == x3 - x1 - x2 y3 / y2 + x2 y1 / y2\n * j = (x3 - x1 - x2 y3 / y2 + x2 y1 / y2) / (x2 y4 / y2 - x4)\n * i = (y3 + j y4 - y1) / y2\n *\n * i == (x3 + j x4 - x1) / x2\n * y1 + y2 x3 / x2 + j y2 x4 / x2 - y2 x1 / x2 == y3 + j y4\n * j y2 x4 / x2 - j y4 == y3 - y1 - y2 x3 / x2 + y2 x1 / x2\n * j = (y3 - y1 - y2 x3 / x2 + y2 x1 / x2) / (y2 x4 / x2 - y4)\n * i = (x3 + j x4 - x1) / x2\n *\n * @fnuction distance_to_poly\n * @param point {array}\n * @param poly {array}\n * @return number\n */\nexport const distance_to_poly = (point, poly) => {\n    const dists = _map(poly, (vertex1, i) => {\n        const prev = (i === 0 ? poly.length : i) - 1;\n        const vertex2 = poly[prev];\n        const edge = vsub(vertex2, vertex1);\n\n        if (vlen(edge) === 0) {\n            return vlen(vsub(point, vertex1));\n        }\n\n        // point + normal * i == vertex1 + edge * j\n        const norm = vflipY(edge);\n        const x1 = point[0];\n        const x2 = norm[0];\n        const x3 = vertex1[0];\n        const x4 = edge[0];\n        const y1 = point[1];\n        const y2 = norm[1];\n        const y3 = vertex1[1];\n        const y4 = edge[1];\n        let k;\n        let j;\n\n        if (y2 !== 0) {\n            j = (x3 - x1 - x2 * y3 / y2 + x2 * y1 / y2) / (x2 * y4 / y2 - x4);\n            k = (y3 + j * y4 - y1) / y2;\n        } else if (x2 !== 0) { // normal can't be zero unless the edge has 0 length\n            j = (y3 - y1 - y2 * x3 / x2 + y2 * x1 / x2) / (y2 * x4 / x2 - y4);\n            k = (x3 + j * x4 - x1) / x2;\n        }\n\n        if (j < 0 || j > 1 || !j) {\n            return Math.min(\n                vlen(vsub(point, vertex1)),\n                vlen(vsub(point, vertex2))\n            );\n        }\n\n        return vlen(vscale(norm, k));\n    });\n\n    return Math.min(...dists);\n};\n\n// source: https://github.com/substack/point-in-polygon/\nexport const point_in_poly = (point, vs) => {\n    // ray-casting algorithm based on\n    // http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n    const x = point[0];\n    const y = point[1];\n    let j = vs.length - 1;\n    let inside = false;\n\n    // poly might not be the correct term here\n    _forEach(vs, (poly, i) => {\n        const xi = poly[0];\n        const yi = poly[1];\n        const xj = vs[j][0];\n        const yj = vs[j][1];\n        const intersect = ((yi > y) !== (yj > y)) && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n\n        if (intersect) {\n            inside = !inside;\n        }\n\n        j = i;\n    });\n\n    return inside;\n};\n\n/**\n *\n * @function point_to_mpoly\n * @param point {array}\n * @param mpoly {array}\n * @return {object}\n */\nexport const point_to_mpoly = (point, mpoly) => {\n    // returns: boolean inside/outside & distance to the polygon\n    let inside = false;\n\n    _forEach(mpoly, (ring, k) => {\n        // ring = mpoly[k];\n\n        if (point_in_poly(point, ring)) {\n            if (k === 0) {\n                // if inside outer ring, remember that and wait till the end\n                inside = true;\n            }\n\n            // if by change in one of inner rings, it's out of poly, return distance to the inner ring\n            return {\n                inside: false,\n                distance: distance_to_poly(point, ring)\n            };\n        }\n    });\n\n    // if not matched to inner circles, return the match to outer and distance to it\n    return {\n        inside: inside,\n        distance: distance_to_poly(point, mpoly[0])\n    };\n};\n\n/**\n * Converts an 'area' to a 'poly'\n *\n * @param area {array<array>}  The #perimeter property of an `AirspaceModel`\n */\nexport const area_to_poly = (area) => {\n    return _map(area.poly, (v) => v.relativePosition);\n};\n\n/**\n * Checks to see if a point is in an area\n */\nexport const point_in_area = (point, area) => {\n    return point_in_poly(point, area_to_poly(area));\n};\n\n\n// TODO: this might be best accomplished with a Rectangle class, with this function working as the middleman\n// creating the class and asking if there is an intersection.\n/**\n * Compute a point of intersection of a ray with a rectangle.\n *\n * Args:\n *   pos: array of 2 numbers, representing ray source.\n *   dir: array of 2 numbers, representing ray direction.\n *   rectPos: array of 2 numbers, representing rectangle corner position.\n *   rectSize: array of 2 positive numbers, representing size of the rectangle.\n *\n * Returns:\n * - undefined, if pos is outside of the rectangle.\n * - undefined, in case of a numerical error.\n * - array of 2 numbers on a rectangle boundary, in case of an intersection.\n */\nexport const positive_intersection_with_rect = (pos, dir, rectPos, rectSize) => {\n    const left = rectPos[0];\n    const right = rectPos[0] + rectSize[0];\n    const top = rectPos[1];\n    const bottom = rectPos[1] + rectSize[1];\n    let t;\n    let x;\n    let y;\n\n    dir = vnorm(dir);\n\n    // Check if pos is outside of rectangle.\n    if (clamp(left, pos[0], right) !== pos[0] || clamp(top, pos[1], bottom) !== pos[1]) {\n        return undefined;\n    }\n\n    // Check intersection with top segment.\n    if (dir[1] < 0) {\n        t = (top - pos[1]) / dir[1];\n        x = pos[0] + dir[0] * t;\n\n        if (clamp(left, x, right) === x) {\n            return [x, top];\n        }\n    }\n\n    // Check intersection with bottom segment.\n    if (dir[1] > 0) {\n        t = (bottom - pos[1]) / dir[1];\n        x = pos[0] + dir[0] * t;\n\n        if (clamp(left, x, right) === x) {\n            return [x, bottom];\n        }\n    }\n\n    // Check intersection with left segment.\n    if (dir[0] < 0) {\n        t = (left - pos[0]) / dir[0];\n        y = pos[1] + dir[1] * t;\n\n        if (clamp(top, y, bottom) === y) {\n            return [left, y];\n        }\n    }\n\n    // Check intersection with right segment.\n    if (dir[0] > 0) {\n        t = (right - pos[0]) / dir[0];\n        y = pos[1] + dir[1] * t;\n\n        if (clamp(top, y, bottom) === y) {\n            return [right, y];\n        }\n    }\n\n    // Failed to compute intersection due to numerical precision.\n    return undefined;\n};\n","import { angle_offset } from '../math/circle';\nimport { bearingToPoint } from '../math/flightMath';\nimport { distance2d } from '../math/distance';\n\n/**\n * Describes a single leg of a path being measured, used by the\n * `MeasureTool` to draw the path on the `CanvasController`\n *\n * These form a doubly linked list, that allows each leg to reference\n * the `#previous` and `#next` legs.\n */\nexport default class MeasureLegModel {\n    /**\n     * @for MeasureLeg\n     * @constructor\n     * @param endPoint {array<number>}\n     * @param previousLeg {MeasureLegModel|null}\n     */\n    constructor(endPoint, radius = 0, previousLeg = null) {\n        /**\n         * The bearing along the leg (in radians)\n         *\n         * @for MeasureLegModel\n         * @property _bearing\n         * @type {number}\n         * @default null\n         * @private\n         */\n        this._bearing = null;\n\n        /**\n         * The end point of the leg\n         *\n         * @for MeasureLegModel\n         * @property endPoint\n         * @type {array<number>}\n         * @default endPoint\n         */\n        this.endPoint = endPoint;\n\n        /**\n         * The length of the leg (in km)\n         *\n         * @for MeasureLegModel\n         * @property _distance\n         * @type {number}\n         * @default null\n         * @private\n         */\n        this._distance = null;\n\n        /**\n         * The list of text labels to be displayed\n         *\n         * @for MeasureLegModel\n         * @property labels\n         * @type {labels}\n         * @default null;\n         */\n        this.labels = null;\n\n        /**\n         * The end point of the leg\n         *\n         * @for MeasureLegModel\n         * @property _midPoint\n         * @type {array<number>|null}\n         * @default null\n         * @private\n         */\n        this._midPoint = null;\n\n        /**\n         * The midpoint of this leg\n         *\n         * @for MeasureLegModel\n         * @property _next\n         * @type {MeasureLegModel}\n         * @default null;\n         * @private\n         */\n        this._next = null;\n\n        /**\n         * The previous leg\n         *\n         * @for MeasureLegModel\n         * @property _previous\n         * @type {MeasureLegModel}\n         * @default previousLeg\n         * @private\n         */\n        this._previous = previousLeg;\n\n        /**\n         * The turn radius (in km)\n         *\n         * @for MeasureLegModel\n         * @property _radius\n         * @type {number}\n         * @default radius\n         * @private\n         */\n        this._radius = radius;\n\n        this._init(previousLeg);\n    }\n\n    /**\n     * The bearing along the leg (in radians)\n     *\n     * @for MeasureLegModel\n     * @property bearing\n     * @type {number}\n     */\n    get bearing() {\n        return this._bearing;\n    }\n\n    /**\n     * The length of the leg (in km)\n     *\n     * @for MeasureLegModel\n     * @property distance\n     * @type {number}\n     */\n    get distance() {\n        return this._distance;\n    }\n\n    /**\n     * The midpoint of this leg\n     *\n     * @for MeasureLegModel\n     * @property midPoint\n     * @type {array<number>|null}\n     */\n    get midPoint() {\n        return this._midPoint;\n    }\n\n    /**\n     * The next leg\n     *\n     * @for MeasureLegModel\n     * @property next\n     * @type {MeasureLegModel}\n     */\n    get next() {\n        return this._next;\n    }\n\n    /**\n     * The previous leg\n     *\n     * @for MeasureLegModel\n     * @property next\n     * @type {MeasureLegModel}\n     */\n    get previous() {\n        return this._previous;\n    }\n\n    /**\n     * The turn radius (in km)\n     *\n     * @for MeasureLegModel\n     * @property radius\n     * @type {number}\n     */\n    get radius() {\n        const radius = this._radius;\n\n        // No point in validating if the radius is empty\n        if (radius === 0) {\n            return radius;\n        }\n\n        return this._hasValidRadius() ? radius : 0;\n    }\n\n    /**\n     * The start point of this leg\n     *\n     * @for MeasureLegModel\n     * @property startPoint\n     * @type {array<number>|null}\n     */\n    get startPoint() {\n        return this._previous === null ? null : this._previous.endPoint;\n    }\n\n    // ------------------------------ LIFECYCLE ------------------------------\n\n    /**\n     * @for MeasureLegModel\n     * @method _init\n     * @param previousLeg {MeasureLegModel|null}\n     * @private\n     */\n    _init(previousLeg) {\n        if (previousLeg !== null) {\n            previousLeg._next = this;\n\n            this._calculateLegParameters();\n        }\n    }\n\n    // ------------------------------ PUBLIC ------------------------------\n\n    // ------------------------------ PRIVATE ------------------------------\n\n    /**\n     * Calculates the metrics of the leg, `#_midPoint`, `#_distance`, `#_bearing`\n     *\n     * @for MeasureLegTool\n     * @method _calculateLegParameters\n     * @private\n     */\n    _calculateLegParameters() {\n        const start = this.startPoint;\n        const end = this.endPoint;\n\n        this._midPoint = [\n            (start[0] + end[0]) / 2,\n            (start[1] + end[1]) / 2\n        ];\n        this._bearing = bearingToPoint(start, end);\n        this._distance = distance2d(start, end);\n    }\n\n    /**\n     * Returns a flag that indicates whether the radius is valid for this leg\n     *\n     * The arcTo command gives strange results when the relative radius is too large\n     *\n     * @for MeasureLegMode\n     * @method _hasValidRadius\n     * @returns {boolean}\n     * @private\n     */\n    _hasValidRadius() {\n        const nextLeg = this.next;\n\n        if (nextLeg === null) {\n            return false;\n        }\n\n        // Test if the angle required to fillet the corner (ensuring the fillet\n        // doesn't extend pass the midpoint of the shortest line) is smaller\n        // than the angle between the two lines\n        const a1 = this.bearing;\n        const a2 = this.next.bearing + Math.PI;\n        const halfLength = Math.min(this.distance, nextLeg.distance) / 2;\n        const angularDifference = Math.abs(angle_offset(a1, a2));\n        const filletAngle = 2 * Math.atan2(this._radius, halfLength);\n\n        return angularDifference >= filletAngle;\n    }\n}\n","import _round from 'lodash/round';\nimport { radians_normalize } from '../math/circle';\nimport { bearingToPoint } from '../math/flightMath';\nimport { distance2d } from '../math/distance';\nimport {\n    heading_to_string,\n    km,\n    nm\n} from '../utilities/unitConverters';\nimport MeasureLegModel from './MeasureLegModel';\nimport AircraftModel from '../aircraft/AircraftModel';\nimport FixModel from '../navigationLibrary/FixModel';\nimport { MEASURE_TOOL_STYLE } from '../constants/inputConstants';\nimport { TIME } from '../constants/globalConstants';\n\n/**\n * Defines a `MeasurePath`\n *\n * The `MeasurePath` is used by the `MeasureTool` to keep\n * track of the points in a path being meaured and to\n * generate a path to be drawn by the `CanvasController`\n *\n * A `MeasurePath` is designed to only be used internally\n * by the `MeasureTool`\n */\nexport default class MeasurePath {\n    /**\n     * @for MeasurePath\n     * @constructor\n     * @param startPoint {AircraftModel|FixModel|array<number>}\n     * @param style {MEASURE_TOOL_STYLE}\n     */\n    constructor(style) {\n        /**\n         * The list of points that make up the path being measured\n         * This can be an object with a `#relativePosition` property,\n         * or a array of numbers that represent a `relativePosition`\n         *\n         * @for MeasurePath\n         * @property _points\n         * @type {AircraftModel|FixModel|array<number>}\n         * @default []\n         * @private\n         */\n        this._points = [];\n\n        /**\n         * The style of how the path is rendered\n         *\n         * @for MeasurePath\n         * @property style\n         * @type {MEASURE_TOOL_STYLE}\n         * @default null;\n         * @private\n         */\n        this._style = style;\n\n        this._init();\n    }\n\n    /** Gets the aircraft at the beginning of the path\n     *\n     * @for MeasurePath\n     * @property aircraft\n     * @type {AircraftModel|null}\n     */\n    get aircraft() {\n        if (!this.hasStarted || !(this._points[0] instanceof AircraftModel)) {\n            return null;\n        }\n\n        return this._points[0];\n    }\n\n    /**\n     * Indicates whether there are any valid legs\n     *\n     * @for MeasurePath\n     * @property hasLegs\n     * @type {boolean}\n     */\n    get hasLegs() {\n        return this._points.length > 1;\n    }\n\n    /**\n     * Indicates the `MeasurePath` has started measuring\n     * eg. the path has at least one point\n     *\n     * @for MeasurePath\n     * @property hasLegs\n     * @type {boolean}\n     */\n    get hasStarted() {\n        return this._points.length !== 0;\n    }\n\n    /**\n     * Gets a flag indicating whether the '#style' indicates that\n     * the initial turn should be used when building the path\n     *\n     * @for MeasurePath\n     * @property hasStyleInitialTurn\n     * @returns {boolean}\n     */\n    get hasStyleInitialTurn() {\n        return this._style === MEASURE_TOOL_STYLE.ARC_TO_NEXT ||\n            this._style === MEASURE_TOOL_STYLE.ALL_ARCED;\n    }\n\n    /**\n     * Gets a flag indicating whether the '#style' indicates that\n     * the arcs should be used when building the path\n     *\n     * @for MeasurePath\n     * @property hasStyleArced\n     * @returns {boolean}\n     */\n    get hasStyleArced() {\n        return this._style === MEASURE_TOOL_STYLE.ALL_ARCED;\n    }\n\n    // ------------------------------ LIFECYCLE ------------------------------\n\n    /**\n     * @for MeasurePath\n     * @method _init\n     * @private\n     */\n    _init() {\n    }\n\n    // ------------------------------ PUBLIC ------------------------------\n\n    /**\n     * Adds a point to the path being measured\n     *\n     * The value can be an object with a `#relativePosition` property,\n     * or a array of numbers that represent a `relativePosition`\n     *\n     * @for MeasurePath\n     * @method addPoint\n     * @param value {AircraftModel|FixModel|array<number>}\n     */\n    addPoint(value) {\n        this._throwIfPointInvalid(value);\n\n        this._points.push(value);\n    }\n\n    /**\n     * Gets the information for the path that should be drawn on the `CanvasController`\n     *\n     * @for MeasurePath\n     * @method buildPathInfo\n     * @returns {object}\n     */\n    buildPathInfo() {\n        if (!this.hasLegs) {\n            return null;\n        }\n\n        // Ground speed is only known if the first point is an AircraftModel\n        const { aircraft } = this;\n        const groundSpeed = aircraft === null ? null : aircraft.groundSpeed;\n        const initialTurn = this._buildInitialTurnParameters();\n        const pointsList = [...this._points]; // Shallow copy as the first point may be replaced\n        let radius = 0;\n\n        if (initialTurn !== null && this.hasStyleArced) {\n            radius = initialTurn.turnRadius;\n        }\n\n        // These are the values used when reducing the points array\n        const initialValues = {\n            previousLeg: null,\n            totalDistance: 0,\n            totalDuration: 0\n        };\n\n        // If there is an initialTurn (eg. a turn onto the first leg), then the exit point is used\n        // as the first point in the path\n        if (initialTurn !== null) {\n            const { exitPoint } = initialTurn;\n\n            initialValues.lastPoint = exitPoint;\n\n            pointsList[0] = exitPoint;\n        }\n\n        // The initial leg is just an end point\n        const firstPoint = this._getRelativePosition(pointsList.shift());\n        const initialLeg = new MeasureLegModel(firstPoint);\n        initialValues.previousLeg = initialLeg;\n\n        pointsList.reduce((lastValues, point, index) => {\n            const { previousLeg } = lastValues;\n            let { totalDistance, totalDuration } = lastValues;\n            const leg = new MeasureLegModel(\n                this._getRelativePosition(point),\n                radius,\n                previousLeg\n            );\n            const bearing = heading_to_string(leg.bearing);\n            let distance = nm(leg.distance);\n            let duration = 0;\n\n            // If there's an initial turn, include the length of that in the first leg\n            if (index === 0 && initialTurn !== null) {\n                distance += nm(initialTurn.arcLength);\n            }\n\n            if (groundSpeed !== null) {\n                duration = _round((distance / groundSpeed) * TIME.ONE_HOUR_IN_MINUTES, 1);\n            }\n\n            // We only want labels that have a distance\n            if (distance > 1) {\n                const labels = [\n                    this._buildLabel(distance, duration, bearing)\n                ];\n\n                totalDistance += distance;\n                totalDuration = _round(totalDuration + duration, 1);\n\n                if (totalDistance !== distance) {\n                    labels.push(this._buildLabel(totalDistance, totalDuration));\n                }\n\n                leg.labels = labels;\n            }\n\n            return {\n                previousLeg: leg,\n                totalDistance,\n                totalDuration\n            };\n        }, initialValues);\n\n        return {\n            initialTurn,\n            firstLeg: initialLeg.next\n        };\n    }\n\n    /**\n     * Removes the last point from the path\n     * Note: This \"last\" point is the one that follows the cursor position\n     *\n     * @for MeasurePath\n     * @method removeLastPoint\n     */\n    removeLastPoint() {\n        this._points.pop();\n    }\n\n    /**\n     * Removes the second-to-last point from the path\n     *\n     * @for MeasurePath\n     * @method removePreviousPoint\n     */\n    removePreviousPoint() {\n        // The \"last\" point is actually the 2nd last item in _points\n        // This means the path will end at the cursor position when redrawn\n        const { length } = this._points;\n\n        if (length > 2) {\n            this._points.splice(length - 2, 1);\n        }\n    }\n\n    /**\n     * Sets the style that should be used for path generation and rendering\n     *\n     * If an invalid valid for MEASURE_TOOL_STYLE is passed, it will default to\n     * `MEASURE_TOOL_STYLE.STRAIGHT`\n     *\n     * @for MeasurePath\n     * @method setStyle\n     * @param style {MEASURE_TOOL_STYLE}\n     */\n    setStyle(style) {\n        this._style = style;\n    }\n\n    /**\n     * Updates the last point in the path\n     *\n     * The value can be an object with a `#relativePosition` property,\n     * or a array of numbers that represent a `relativePosition`\n     *\n     * @for MeasurePath\n     * @method updateEndPoint\n     * @param value {AircraftModel|FixModel|array<number>}\n     */\n    updateLastPoint(value) {\n        this._throwIfPointInvalid(value);\n\n        if (!this.hasStarted) {\n            return;\n        }\n\n        if (!this.hasLegs) {\n            this.addPoint(value);\n\n            return;\n        }\n\n        this._points[this._points.length - 1] = value;\n    }\n\n    // ------------------------------ PRIVATE ------------------------------\n\n    /**\n     * Builds the initial turn parameters that are needed to fly to the first fix\n     *\n     * @for MeasurePath\n     * @method _buildInitialTurnParameters\n     * @returns {object}\n     * @private\n     */\n    _buildInitialTurnParameters() {\n        if (!this.hasStyleInitialTurn) {\n            return null;\n        }\n\n        const { aircraft } = this;\n\n        if (aircraft === null) {\n            return null;\n        }\n\n        const { groundSpeed, groundTrack } = aircraft;\n        const turnRate = 3; // Turn rate seems fixed at 3°/sec // groundSpeed > 250 ? 1.5 : 3;\n        const turnRadius = km(groundSpeed / (turnRate * 20 * Math.PI));\n        const start = aircraft.relativePosition;\n        const fix = this._getRelativePositionAtIndex(1);\n\n        // Get the turn direction by using the basic bearing to the next point\n        const bearingToFix = bearingToPoint(start, fix);\n        const isRHT = radians_normalize(bearingToFix - groundTrack) < Math.PI;\n        const direction = isRHT ? 1 : -1;\n\n        // The centre of the turn circle is offset to the left or right by 90°\n        const bearingToCenter = groundTrack + (direction * Math.PI / 2);\n        const center = [\n            start[0] + (turnRadius * Math.sin(bearingToCenter)),\n            start[1] + (turnRadius * Math.cos(bearingToCenter))\n        ];\n\n        // Turn exit (tangent from turn circle to the fix)\n        const centerToFixBearing = bearingToPoint(center, fix);\n        const centerToFixDistance = distance2d(center, fix);\n        const outboundCourse = centerToFixBearing + (direction * Math.asin(turnRadius / centerToFixDistance));\n\n        // Entry and exit angles\n        const entryAngle = bearingToCenter + Math.PI;\n        const exitAngle = outboundCourse - (direction * Math.PI / 2);\n\n        // The exit point is the point on the turn circle at the exit angle\n        const exitPoint = [\n            center[0] + (turnRadius * Math.sin(exitAngle)),\n            center[1] + (turnRadius * Math.cos(exitAngle))\n        ];\n\n        // Length around the arc\n        let turnAngle;\n        if (isRHT) {\n            turnAngle = exitAngle - entryAngle;\n        } else {\n            turnAngle = entryAngle - exitAngle;\n        }\n        const arcLength = turnRadius * radians_normalize(turnAngle);\n\n        return {\n            isRHT,\n            turnRadius,\n            arcLength,\n            entryAngle,\n            exitAngle,\n            center,\n            exitPoint\n        };\n    }\n\n    /**\n     * Builds the text label that displays the distance and\n     * optional duration and bearings\n     *\n     * @for MeasurePath\n     * @method _buildLabel\n     * @param distance {number} The distance (in NM) that the leg covers\n     * @param duration {number} The length of time (in minutes) that flying the leg will take\n     * @param bearing {number|null} The bearing (degrees magnetic) along the leg\n     * @private\n     */\n    _buildLabel(distance, duration, bearing = null) {\n        let label = `${distance.toPrecision(3)} NM`;\n\n        if (duration !== 0) {\n            label += `, ${duration.toFixed(1)} min`;\n        }\n\n        if (bearing !== null) {\n            label += `, ${bearing}° M`;\n        }\n\n        return label;\n    }\n\n    /**\n     * Gets the relative position for the point at the specified index.\n     *\n     * @for MeasurePath\n     * @method _getRelativePositionAtIndex\n     * @param index {number}\n     * @returns {array<number>}\n     */\n    _getRelativePositionAtIndex(index) {\n        const point = this._points[index];\n\n        return this._getRelativePosition(point);\n    }\n\n    /**\n     * Gets the relative position for the point at the specified index.\n     *\n     * @for MeasurePath\n     * @method _getRelativePosition\n     * @param point {AircraftModel|FixModel|array<number>}\n     * @returns {array<number>}\n     */\n    _getRelativePosition(point) {\n        return point.relativePosition || point;\n    }\n\n    /**\n     * Facade for throwing a TypeError if a point value is not a valid type\n     *\n     * @for MeasurePath\n     * @method _throwIfPointInvalid\n     * @param value {AircraftModel|FixModel|array<number>}\n    */\n    _throwIfPointInvalid(value) {\n        if (!(value instanceof Array || value instanceof AircraftModel || value instanceof FixModel)) {\n            throw new TypeError(`value cannot be ${typeof value}. An Array, AircraftModel or FixModel is expected.`);\n        }\n    }\n}\n","import EventBus from '../lib/EventBus';\nimport MeasurePath from './MeasurePath';\nimport GameController from '../game/GameController';\nimport { EVENT } from '../constants/eventNames';\nimport { MEASURE_TOOL_STYLE } from '../constants/inputConstants';\nimport { GAME_OPTION_NAMES } from '../constants/gameOptionConstants';\n\n/**\n * Defines a `MeasureTool`\n *\n * The `MeasureTool` is used by the `InputController` to\n * accept user input and build a list of `MeasurePath`s\n * which calculate distances, durations and bearings\n */\nclass MeasureTool {\n    /**\n     * @for MeasureLeg\n     * @constructor\n     */\n    constructor() {\n        /**\n         * The current path being measured\n         *\n         * @for MeasureTool\n         * @property _currentPath\n         * @type {MeasurePath}\n         * @default null\n         * @private\n         */\n        this._currentPath = null;\n\n        /**\n         * @for MeasureTool\n         * @property _eventBus\n         * @type {EventBus}\n         * @private\n         */\n        this._eventBus = EventBus;\n\n        /**\n         * The list of `MeasurePath` objects that the tools is\n         * measuring\n         *\n         * @for MeasureTool\n         * @property _paths\n         * @type {array<MeasurePath>}\n         * @default []\n         * @private\n         */\n        this._paths = [];\n\n        /**\n         * The style of how the path is rendered\n         *\n         * @for MeasureTool\n         * @property _style\n         * @type {MEASURE_TOOL_STYLE}\n         * @default null;\n         * @private\n         */\n        this._style = null;\n\n        this._init()\n            ._setupHandlers()\n            .enable();\n    }\n\n    /**\n     * Indicates whether the `MeasureTool` has any paths\n     *\n     * @for MeasureTool\n     * @property hasPaths\n     * @type {boolean}\n     */\n    get hasPaths() {\n        return this._paths.length !== 0;\n    }\n\n    /**\n     * Indicates the `MeasureTool`s current path has started measuring\n     * eg. the path has at least one point\n     *\n     * @for MeasureTool\n     * @property hasLegs\n     * @type {boolean}\n     */\n    get hasStarted() {\n        return this.isMeasuring && this._currentPath.hasStarted;\n    }\n\n    /**\n     * Indicates whether the tool should be receiving input\n     *\n     * @for MeasureTool\n     * @property isMeasuring\n     * @type {boolean}\n     */\n    get isMeasuring() {\n        return this._currentPath !== null;\n    }\n\n    // ------------------------------ LIFECYCLE ------------------------------\n\n    /**\n     * @for MeasureTool\n     * @method _init\n     * @chainable\n     * @private\n     */\n    _init() {\n        this.setStyle(GameController.getGameOption(GAME_OPTION_NAMES.MEASURE_TOOL_PATH));\n\n        return this;\n    }\n\n    /**\n     * @for MeasureTool\n     * @method _setupHandlers\n     * @chainable\n     * @private\n     */\n    _setupHandlers() {\n        this._onMeasureTooltyleChangeHandler = this._onMeasureTooltyleChange.bind(this);\n\n        return this;\n    }\n\n    /**\n     * @for MeasureTool\n     * @method disable\n     * @chainable\n     */\n    disable() {\n        this._eventBus.off(EVENT.MEASURE_TOOL_STYLE_CHANGE, this._onMeasureTooltyleChangeHandler);\n\n        return this;\n    }\n\n    /**\n     * @for MeasureTool\n     * @method enable\n     * @chainable\n     */\n    enable() {\n        this._eventBus.on(EVENT.MEASURE_TOOL_STYLE_CHANGE, this._onMeasureTooltyleChangeHandler);\n\n        return this;\n    }\n\n    /**\n     * @for MeasureTool\n     * @method reset\n     */\n    reset() {\n        this._paths = [];\n        this._currentPath = null;\n    }\n\n    // ------------------------------ PUBLIC ------------------------------\n\n    /**\n     * Adds a point to the current path being measured\n     *\n     * The value can be an object with a `#relativePosition` property,\n     * or a array of numbers that represent a `relativePosition`\n     *\n     * @for MeasureTool\n     * @method addPoint\n     * @param value {AircraftModel|FixModel|array<number>}\n     */\n    addPoint(value) {\n        this._throwIfNotMeasuring();\n\n        this._currentPath.addPoint(value);\n    }\n\n    /**\n     * Gets the information for the paths that should be drawn on the `CanvasController`\n     *\n     * @for MeasureTool\n     * @method buildPathInfo\n     * @returns {array<object>}\n     */\n    buildPathInfo() {\n        return this._paths.reduce((list, path) => {\n            if (path.hasLegs) {\n                list.push(path.buildPathInfo());\n            }\n\n            return list;\n        }, []);\n    }\n\n    /**\n     * Signals that the editing the current path has finished\n     *\n     * @for MeasureTool\n     * @method endPath\n     */\n    endPath() {\n        this._throwIfNotMeasuring();\n\n        // Discard the point which is attached to the cursor, and keep\n        // only those points which have been clicked into place\n        this._currentPath.removeLastPoint();\n\n        // If the path isn't valid, then don't keep it\n        if (!this._currentPath.hasLegs) {\n            this._paths.pop();\n        }\n\n        this._currentPath = null;\n    }\n\n    /**\n     * Removes the second-to-last point from the current path\n     *\n     * @for MeasureTool\n     * @method removePreviousPoint\n     */\n    removePreviousPoint() {\n        this._throwIfNotMeasuring();\n\n        this._currentPath.removePreviousPoint();\n    }\n\n    /**\n     * Signals that a new path should be created for measurement\n     *\n     * @for MeasureTool\n     * @method startNewPath\n     */\n    startNewPath() {\n        if (this.isMeasuring) {\n            throw new Error('Cannot start a new path. The current path hasn\\'t been ended.');\n        }\n\n        const path = new MeasurePath(this._style);\n\n        this._paths.push(path);\n        this._currentPath = path;\n    }\n\n    /**\n     * Sets the style that should be used for path generation and rendering\n     *\n     * If an invalid valid for MEASURE_TOOL_STYLE is passed, it will default to\n     * `MEASURE_TOOL_STYLE.STRAIGHT`\n     *\n     * @for MeasureTool\n     * @method setStyle\n     * @param style {MEASURE_TOOL_STYLE}\n     */\n    setStyle(style) {\n        const isValid = Object.keys(MEASURE_TOOL_STYLE).some((k) => {\n            return MEASURE_TOOL_STYLE[k] === style;\n        });\n\n        this._style = isValid ? style : MEASURE_TOOL_STYLE.STRAIGHT;\n\n        this._paths.forEach((path) => path.setStyle(style));\n    }\n\n    /**\n     * Updates the last point in the path\n     *\n     * The value can be an object with a `#relativePosition` property,\n     * or a array of numbers that represent a `relativePosition`\n     *\n     * @for MeasureTool\n     * @method updateEndPoint\n     * @param value {AircraftModel|FixModel|array<number>}\n     */\n    updateLastPoint(value) {\n        this._throwIfNotMeasuring();\n\n        this._currentPath.updateLastPoint(value);\n    }\n\n    // ------------------------------ PRIVATE ------------------------------\n\n    /**\n     * Update the `#_style` property\n     *\n     * This method should only be called via the `EventBus`\n     *\n     * @for MeasureTool\n     * @method _onMeasureTooltyleChange\n     * @param style {MEASURE_TOOL_STYLE}\n     * @private\n     */\n    _onMeasureTooltyleChange(style) {\n        this.setStyle(style);\n    }\n\n    /**\n     * Facade for throwing an Error if the `#isMeasuring` flag is not set\n     *\n     * @for MeasureTool\n     * @method _throwIfNotMeasuring\n     */\n    _throwIfNotMeasuring() {\n        if (!this.isMeasuring) {\n            throw Error(`Cannot add point when MeasureTool.isMeasuring is ${this.isMeasuring}`);\n        }\n    }\n}\n\n/**\n * The static instance of the `MeasureTool` class\n */\nexport default new MeasureTool();\n","import _forEach from 'lodash/forEach';\nimport _isEmpty from 'lodash/isEmpty';\nimport _map from 'lodash/map';\nimport NavigationLibrary from './NavigationLibrary';\nimport WaypointModel from '../aircraft/FlightManagementSystem/WaypointModel';\nimport { INVALID_INDEX } from '../constants/globalConstants';\n\nexport default class AirwayModel {\n    constructor(icao, fixNames) {\n        if (_isEmpty(icao)) {\n            throw new TypeError('Expected airway to have a non-empty name, but no airway name was given');\n        }\n\n        if (_isEmpty(fixNames)) {\n            throw new TypeError(`Expected a list of fix names for airway \"${icao}\", but received none`);\n        }\n\n        this._fixNameCollection = [];\n\n        this._icao = '';\n\n        this.init(icao, fixNames);\n    }\n\n    /**\n     * Return the #_fixNameCollection\n     *\n     * @for AirwayModel\n     * @property fixNameCollection\n     * @type {array<string>}\n     */\n    get fixNameCollection() {\n        return this._fixNameCollection;\n    }\n\n    get icao() {\n        return this._icao;\n    }\n\n    // ------------------------------ LIFECYCLE ------------------------------\n\n    init(icao, fixNames) {\n        this._fixNameCollection = fixNames;\n        this._icao = icao;\n\n        this._verifyFixNamesExistInNavigationLibrary(fixNames);\n\n        return this;\n    }\n\n    reset() {\n        this._fixNameCollection = [];\n        this._icao = '';\n\n        return this;\n    }\n\n    _verifyFixNamesExistInNavigationLibrary(fixNames) {\n        _forEach(fixNames, (fixName) => {\n            if (!NavigationLibrary.hasFixName(fixName)) {\n                throw new TypeError(`Expected to find fix \"${fixName}\" for ` +\n                    `airway \"${this._icao}\", but it is not a defined fix!`);\n            }\n        });\n    }\n\n    // ------------------------------ PUBLIC ------------------------------\n\n    getWaypointModelsForEntryAndExit(entryName, exitName) {\n        if (entryName === exitName) {\n            console.error('Expected use of airway to include at least two fixes');\n\n            return;\n        }\n\n        const indexOfEntryFix = this._fixNameCollection.indexOf(entryName);\n        const indexOfExitFix = this._fixNameCollection.indexOf(exitName);\n\n        if (indexOfEntryFix === INVALID_INDEX) {\n            console.error(`Expected valid entry of \"${this._icao}\" airway, but received \"${entryName}\"`);\n\n            return;\n        }\n\n        if (indexOfExitFix === INVALID_INDEX) {\n            console.error(`Expected valid exit of \"${this._icao}\" airway, but received \"${exitName}\"`);\n\n            return;\n        }\n\n        const fixNames = this._getFixNamesFromIndexToIndex(indexOfEntryFix, indexOfExitFix);\n        const waypointModels = _map(fixNames, (fixName) => new WaypointModel(fixName));\n\n        return waypointModels;\n    }\n\n    /**\n     * Returns whether the specified fix name is on the airway\n     *\n     * @for AirwayModel\n     * @method hasFixName\n     * @return {boolean}\n     */\n    hasFixName(fixName) {\n        return this._fixNameCollection.indexOf(fixName) !== INVALID_INDEX;\n    }\n\n    // ------------------------------ PRIVATE ------------------------------\n\n    _getFixNamesFromIndexToIndex(startIndex, endIndex) {\n        if (startIndex === endIndex) {\n            throw new TypeError('Expected use of airway to include at least two fixes');\n        }\n\n        const numberOfFixes = Math.abs(endIndex - startIndex) + 1;\n\n        if (endIndex > startIndex) {\n            return this._fixNameCollection.slice().splice(startIndex, numberOfFixes);\n        }\n\n        return this._fixNameCollection.slice().splice(endIndex, numberOfFixes).reverse();\n    }\n}\n","import _find from 'lodash/find';\nimport _forEach from 'lodash/forEach';\n// TODO: Start using the model source factory again!\n// import modelSourceFactory from '../base/ModelSource/ModelSourceFactory';\nimport BaseCollection from '../base/BaseCollection';\nimport { distance2d } from '../math/distance';\nimport FixModel from './FixModel';\n\n/**\n * A collection of all the `FixModel`s defined in an airport json file.\n *\n * This is built as a static class, so there is only ever once instance.\n * We use a static class here because the methods contained herein are needed by several\n * different classes. This provides a single source of truth for all the `FixModel`s\n * belonging to an Airport.\n *\n * @class FixCollection\n * @extends BaseCollection\n */\nclass FixCollection extends BaseCollection {\n    /**\n     * Lifecycle method. Should be run only once on instantiation.\n     *\n     * @for FixCollection\n     * @method addItems\n     * @param fixList {object}\n     * @param referencePosition {StaticPositionModel}\n     */\n    addItems(fixList, referencePosition) {\n        if (this.length !== 0) {\n            // you made it here because an airport has changed.\n            // in `AirportModel.init()` this method is called with the fix data for the new airport. We don't want\n            // or need to keep the fixes from a previous airport so if `_items` has a length, we need to reset that\n            // property before we begin to add fixes for the new airport.\n            this.removeItems();\n        }\n\n        this._buildFixModelsFromList(fixList, referencePosition);\n    }\n\n    /**\n     * Destroy the current instance\n     *\n     * @for FixCollection\n     * @method removeItems\n     */\n    removeItems() {\n        this._resetFixModels();\n\n        this._items = [];\n    }\n\n    /**\n     * Add a `FixModel` to the collection\n     *\n     * @for FixCollection\n     * @method addFixToCollection\n     * @param fixToAdd {FixModel}\n     */\n    addFixToCollection(fixToAdd) {\n        if (!(fixToAdd instanceof FixModel)) {\n            throw new TypeError('Expected fixToAdd to be an instance of FixModel');\n        }\n\n        this._items.push(fixToAdd);\n    }\n\n    /**\n     * Find a `FixModel` by `name` if it exists within the collection.\n     *\n     * @for FixCollection\n     * @method findFixByName\n     * @param fixName {string}\n     * @return {FixModel|null}\n     */\n    findFixByName(fixName) {\n        if (!fixName) {\n            return null;\n        }\n\n        const fixModel = _find(this._items, { name: fixName.toUpperCase() });\n\n        // if a fix is not found, _find() returns `undefined` so we specifically return null here if a fix is not found\n        return fixModel || null;\n    }\n\n    /**\n     * @for FixCollection\n     * @method getFixRelativePosition\n     * @param fixName {string}\n     * @return {array<number>}\n     */\n    getFixRelativePosition(fixName) {\n        const fixModel = this.findFixByName(fixName);\n\n        if (!fixModel) {\n            return null;\n        }\n\n        return fixModel.relativePosition;\n    }\n\n    /**\n     * Returns the pronunciation of the fix name if it exists, otherwise returns the input name\n     *\n     * @for FixCollection\n     * @method getFixSpokenName\n     * @param fixName {string}\n     * @return {string}\n     */\n    getFixSpokenName(fixName) {\n        const fixModel = this.findFixByName(fixName);\n\n        if (!fixModel) {\n            return fixName.toLowerCase(); // lower-case forces the voice engine to try to pronounce it\n        }\n\n        return fixModel.spoken;\n    }\n\n    /**\n     * Returns the nearest fix to the specified position\n     *\n     * @for FixCollection\n     * @method getNearestFix\n     * @param position {array<number>} These are x, y canvas units (km)\n     * @param hiddenFixes {boolean} A flag indicating whether hidden fixes should be used\n     */\n    getNearestFix(position, hiddenFixes = false) {\n        return this._items.reduce((lastResult, fix) => {\n            let [nearest, distance] = lastResult;\n            const d = distance2d(fix.relativePosition, position);\n\n            if ((fix.isRealFix || hiddenFixes) && d < distance) {\n                nearest = fix;\n                distance = d;\n            }\n\n            return [nearest, distance];\n        }, [null, Infinity]);\n    }\n\n    /**\n     * Return the position model for the specified fix, if that fix exists\n     *\n     * @for FixCollection\n     * @method getPositionModelForFixName\n     * @param fixName {string}\n     * @return {StaticPositionModel}\n     */\n    getPositionModelForFixName(fixName) {\n        const fixModel = this.findFixByName(fixName);\n\n        if (!fixModel) {\n            return null;\n        }\n\n        return fixModel.positionModel;\n    }\n\n    /**\n     * Find a list of all `FixModel`s within the collection that have a name that does not start with an underscore.\n     *\n     * @for FixCollection\n     * @method findRealFixes\n     * @return {array<FixModel>}\n     */\n    findRealFixes() {\n        return this._items.filter((fix) => fix.isRealFix);\n    }\n\n    /**\n     * Loop through each fix provided in the fix list, create a new `FixModel` instance, then send it off\n     * to be added to the collection.\n     *\n     * @for FixCollection\n     * @method _buildFixModelsFromList\n     * @param fixList {object}\n     * @param referencePosition {StaticPositionModel}\n     * @private\n     */\n    _buildFixModelsFromList(fixList, referencePosition) {\n        _forEach(fixList, (fixData, fixName) => {\n            const fixModel = new FixModel(fixName, fixData, referencePosition);\n            // const fixModel = modelSourceFactory.getModelSourceForType('FixModel', fixName, fixCoordinates, referencePosition);\n\n            this.addFixToCollection(fixModel);\n        });\n    }\n\n    /**\n     * @for FixCollection\n     * @method _resetFixModels\n     * @private\n     */\n    _resetFixModels() {\n        _forEach(this._items, (fixModel) => {\n            fixModel.reset();\n            // modelSourceFactory.returnModelToPool(fixModel);\n        });\n    }\n}\n\nexport default new FixCollection();\n","import _cloneDeep from 'lodash/cloneDeep';\nimport BaseModel from '../base/BaseModel';\nimport StaticPositionModel from '../base/StaticPositionModel';\nimport { RNAV_WAYPOINT_PREFIX } from '../constants/waypointConstants';\n\n/**\n * Defines a navigational `FixModel`\n *\n * A `FixModel` can be used as part of a `StandardRoute` or as a naviagtional aid.\n * Not all `FixModel`s are a part of a `StandardRoute`.\n *\n * @class FixModel\n */\nexport default class FixModel extends BaseModel {\n    /**\n     * @for FixModel\n     * @constructor\n     * @param fixName {string}\n     * @param fixData {array or object}\n     * @param referencePosition {StaticPositionModel}\n     */\n    constructor(fixName, fixData, referencePosition) {\n        super();\n\n        /**\n         * Name of the Fix\n         *\n         * @property name\n         * @type {string}\n         * @default ''\n         */\n        this.name = '';\n\n        /**\n         * Pronunciation of the fix name\n         *\n         * @property _spoken\n         * @type {string}\n         * @default ''\n         */\n        this._spoken = '';\n\n        /**\n         * Coordinates of the fix\n         *\n         * @property _positionModel\n         * @type {StaticPositionModel}\n         * @default null\n         */\n        this._positionModel = null;\n\n        this.init(fixName, fixData, referencePosition);\n    }\n\n    /**\n     * Indicates whether the fix is a real fix, not an RNAV fix\n     * (prefixed with an underscore)\n     *\n     * @property isRealFix\n     * @return {boolean}\n     */\n    get isRealFix() {\n        return this.name[0] !== RNAV_WAYPOINT_PREFIX;\n    }\n\n    /**\n     * Provides access to the position data of the instance\n     *\n     * @property positionModel\n     * @return {array}\n     */\n    get positionModel() {\n        return this._positionModel;\n    }\n\n    /**\n     * Facade to access relative position\n     *\n     * @for FixModel\n     * @return {array<number>} [kilometersNorth, kilometersEast]\n     */\n    get relativePosition() {\n        return this._positionModel.relativePosition;\n    }\n\n    /**\n     * Facade to access spoken name\n     *\n     * @for FixModel\n     * @return {string}\n     */\n    get spoken() {\n        return this._spoken;\n    }\n\n    /**\n     * Lifecycle method. Should be run only once on instantiation.\n     *\n     * @for FixModel\n     * @method init\n     * @param fixName {string}\n     * @param fixData {array or object}\n     * @param referencePosition {StaticPositionModel}\n     * @chainable\n     */\n    init(fixName, fixData, referencePosition) {\n        if (!fixName || !fixData || !referencePosition) {\n            throw new TypeError(`Expected FixModel ${fixName} to receive name, data, and referencePosition, but ` +\n                `received ${typeof fixName}, ${typeof fixData}, ${typeof referencePosition}`);\n        }\n\n        const [lat, lon, spoken] = fixData;\n        this.name = fixName.toUpperCase();\n        this._positionModel = new StaticPositionModel([lat, lon], referencePosition, referencePosition.magneticNorth);\n\n        if (typeof spoken === 'undefined') {\n            this._spoken = fixName.toLowerCase();\n        } else {\n            this._spoken = spoken.toLowerCase();\n        }\n\n        return this;\n    }\n\n    /**\n     * reset the current instance\n     *\n     * @for FixModel\n     * @method reset\n     * @chainable\n     */\n    reset() {\n        this.name = '';\n        this._spoken = '';\n        this._positionModel = null;\n\n        return this;\n    }\n\n    /**\n     * Returns a clone of an instance's `_positionModel` property.\n     *\n     * It is important to note that this is a _clone_ and not a copy. Any changes made to this instance will\n     * not be reflected in the clone. This creates an entirely new instance of the `_positionModel` property,\n     * and after creation is completely independant of this instance.\n     *\n     * This is used with `StandardRouteWaypointModel` objects to obtain the position of a fix. This method\n     * provides easy access to the `StaticPositionModel` that already exists here.\n     *\n     * @for FixModel\n     * @return {StaticPositionModel}  a clone of the current `_positionModel` property\n     */\n    clonePosition() {\n        return _cloneDeep(this._positionModel);\n    }\n}\n","import _isObject from 'lodash/isObject';\nimport HoldModel from './HoldModel';\nimport BaseCollection from '../base/BaseCollection';\n\n/**\n * Collection of `HoldModel`s\n *\n * Provides methods to create `HoldModel`s, used by `AirportModel`\n * and `WaypointModel` for configuring hold\n *\n * @class HoldCollection\n * @extends BaseCollection\n */\nexport default class HoldCollection extends BaseCollection {\n    /**\n     * @constructor\n     * @param holdJson {object}\n     */\n    constructor(holdJson) {\n        super();\n\n        // holdsJson is permitted to be null/undefined/empty, but if valid must be an object\n        if (holdJson != null && !_isObject(holdJson)) {\n            throw new TypeError(\n                `Invalid holdJson parameter passed to HoldCollection. Expected an object but found ${typeof holdJson}`\n            );\n        }\n\n        /**\n         * @inherited\n         * @memberof BaseCollection\n         * @property _items\n         * @type {array<HoldModel>}\n         * @default []\n         */\n\n        /**\n         * @inherited\n         * @memberof BaseCollection\n         * @property length\n         * @type {number}\n         * @default #_items.length\n         */\n\n        this._init(holdJson);\n    }\n\n    /**\n     * Public fascade for `#_items`\n     *\n     * @for HoldCollection\n     * @property holds\n     * @return {array<HoldModel>}\n     */\n    get holds() {\n        return this._items;\n    }\n\n    // ------------------------------ LIFECYCLE ------------------------------\n\n    /**\n     * Initialize the instance\n     *\n     * @for HoldCollection\n     * @method _init\n     * @param holdJson {object}\n     */\n    _init(holdJson) {\n        this.populateHolds(holdJson);\n    }\n\n    /**\n     * @for HoldCollection\n     * @method reset\n     */\n    reset() {\n        this.holds.forEach((item) => item.reset());\n\n        this._items = [];\n    }\n\n    // ------------------------------ PUBLIC ------------------------------\n\n    /**\n     * Returns a flag indicating whether the `fixName` exists within the collection\n     *\n     * @for HoldCollection\n     * @method containsHoldForFix\n     * @param fixName {string}\n     * @return {boolean}\n     */\n    containsHoldForFix(fixName) {\n        if (!fixName) {\n            return false;\n        }\n\n        fixName = fixName.toUpperCase();\n\n        return this._items.some((hold) => hold.fixName === fixName);\n    }\n\n    /**\n     * Find holdParameters by `fixName` if it exists within the collection\n     *\n     * @for HoldCollection\n     * @method findHoldParametersByFix\n     * @param fixName {string}\n     * @return {object|null}\n     */\n    findHoldParametersByFix(fixName) {\n        if (!fixName) {\n            return null;\n        }\n\n        fixName = fixName.toUpperCase();\n\n        const model = this._items.find((hold) => hold.fixName === fixName);\n\n        return model ? model.holdParameters : null;\n    }\n\n    /**\n     * Populates the hold collection with the specified holds object\n     *\n     * @for HoldCollection\n     * @method populateHolds\n     * @param holdJson {object}\n     */\n    populateHolds(holdJson) {\n        if (!holdJson) {\n            return;\n        }\n\n        // Check for duplicate fixName as multiple collections may have to be combined\n        // by the `NavigationLibrary` in the future\n        Object.keys(holdJson).forEach((fixName) => {\n            if (this.containsHoldForFix(fixName)) {\n                return;\n            }\n\n            this._items.push(new HoldModel(fixName, holdJson[fixName]));\n        });\n    }\n}\n","import _isString from 'lodash/isString';\nimport BaseModel from '../base/BaseModel';\nimport { radians_normalize } from '../math/circle';\nimport { isValidCourseString, isValidDirectionString } from '../commands/parsers/argumentValidators';\nimport { directionNormalizer, isLegLengthArg } from '../commands/parsers/argumentParsers';\nimport { parseSpeedRestriction } from '../utilities/navigationUtilities';\nimport { degreesToRadians } from '../utilities/unitConverters';\n\n/**\n * Defines a navigational `HoldModel`\n *\n * A `HoldModel` is used to specify how a hold executed at\n * a specific fix\n *\n * @class HoldModel\n */\nexport default class HoldModel extends BaseModel {\n    /**\n     * @for HoldModel\n     * @constructor\n     * @param fixName {string}\n     * @param holdString {string}\n     */\n    constructor(fixName, holdString) {\n        super();\n\n        if (!_isString(fixName)) {\n            throw new TypeError(\n                `Invalid parameter, fixName must be a string, but found ${typeof fixName}`\n            );\n        } else if (!_isString(holdString)) {\n            throw new TypeError(\n                `Invalid parameter, holdString must be a string, but found ${typeof holdString}`\n            );\n        }\n\n        /**\n         * Name of the Fix\n         *\n         * @property fixName\n         * @type {string}\n         * @default ''\n         */\n        this.fixName = '';\n\n        /**\n         * The parameters of the hold\n         *\n         * @property holdParameters\n         * @type {object}\n         * @default null\n         */\n        this.holdParameters = null;\n\n        this._init(fixName, holdString);\n    }\n\n    // ------------------------------ LIFECYCLE ------------------------------\n\n    /**\n     * Initialize the model\n     *\n     * @for HoldModel\n     * @method _init\n     * @param fixName {string}\n     * @param holdString {string}\n     * @private\n     */\n    _init(fixName, holdString) {\n        this.fixName = fixName;\n        this.holdParameters = this._buildHoldParameters(holdString);\n\n        return this;\n    }\n\n    /**\n     * @for MapModel\n     * @method reset\n     */\n    reset() {\n        this.fixName = '';\n        this.holdParameters = null;\n    }\n\n    // ------------------------------ LIFECYCLE ------------------------------\n\n    /**\n     * Builds the HoldParameters from the specified string\n     *\n     * @for HoldModel\n     * @method _buildHoldParameters\n     * @param holdString {string}\n     * @returns {object}\n     * @private\n     */\n    _buildHoldParameters(holdString) {\n        const holdParameters = {};\n\n        holdString.split('|').forEach((item) => {\n            if (holdParameters.inboundHeading == null && isValidCourseString(item)) {\n                holdParameters.inboundHeading = radians_normalize(degreesToRadians(180 + parseInt(item, 10)));\n\n                return;\n            }\n\n            if (holdParameters.turnDirection == null && isValidDirectionString(item)) {\n                holdParameters.turnDirection = directionNormalizer(item);\n\n                return;\n            }\n\n            if (holdParameters.legLength == null && isLegLengthArg(item)) {\n                holdParameters.legLength = item;\n\n                return;\n            }\n\n            // The speed limit can be optional, but it tends to imply ICAO speed restrictions\n            const [value, limit] = parseSpeedRestriction(item);\n            if (value != null) {\n                if (limit !== '-') {\n                    throw new Error(`Invalid speedMaximum parameter for Fix '${this.fixName}': ${item} is not valid`);\n                }\n\n                holdParameters.speedMaximum = value;\n\n                return;\n            }\n\n            throw new Error(`Unexpected parameter for Fix '${this.fixName}': ${item}`);\n        });\n\n        if (holdParameters.inboundHeading == null) {\n            throw new Error(`Missing radial parameter for Fix '${this.fixName}': ${holdString}`);\n        }\n\n        if (holdParameters.turnDirection == null) {\n            throw new Error(`Missing turnDirection parameter for Fix '${this.fixName}': ${holdString}`);\n        }\n\n        if (holdParameters.legLength == null) {\n            throw new Error(`Missing legLength parameter for Fix '${this.fixName}': ${holdString}`);\n        }\n\n        return holdParameters;\n    }\n}\n","import _filter from 'lodash/filter';\nimport _flatten from 'lodash/flatten';\nimport _forEach from 'lodash/forEach';\nimport _isNil from 'lodash/isNil';\nimport _isEmpty from 'lodash/isEmpty';\nimport _map from 'lodash/map';\nimport _without from 'lodash/without';\nimport _uniq from 'lodash/uniq';\nimport AirwayModel from './AirwayModel';\nimport FixCollection from './FixCollection';\nimport HoldCollection from './HoldCollection';\nimport ProcedureModel from './ProcedureModel';\nimport StaticPositionModel from '../base/StaticPositionModel';\nimport { PROCEDURE_TYPE } from '../constants/routeConstants';\nimport { degreesToRadians } from '../utilities/unitConverters';\nimport { INVALID_INDEX } from '../constants/globalConstants';\n\n/**\n *\n *\n * @class NavigationLibrary\n */\nclass NavigationLibrary {\n    /**\n     * @constructor\n     * @for NavigationLibrary\n     * @param airportJson {object}\n     */\n    constructor() {\n        this._airwayCollection = {};\n\n        /**\n         * Collection of all `HoldModel`s for the airport region\n         *\n         * @property holdCollection\n         * @type {HoldCollection}\n         * @default HoldCollection()\n         */\n        this._holdCollection = new HoldCollection();\n\n        // /**\n        //  *\n        //  *\n        //  * @property _sidCollection\n        //  * @type {StandardRoute}\n        //  * @default null\n        //  */\n        // this._sidCollection = null;\n        //\n        // /**\n        //  *\n        //  *\n        //  * @property _starCollection\n        //  * @type {StandardRoute}\n        //  * @default null\n        //  */\n        // this._starCollection = null;\n\n        /**\n         *\n         *\n         * @property _procedureCollection\n         * @type {array}\n         * @default {}\n         */\n        this._procedureCollection = {};\n\n        /**\n         *\n         *\n         * @property _referencePosition\n         * @type {StaticPositionModel}\n         * @default null\n         */\n        this._referencePosition = null;\n\n        /**\n         * additional information to draw the procedures on the screen\n         *\n         * @property _procedureLines\n         * @type {array}\n         * @default {}\n         */\n        this._procedureLines = {};\n    }\n\n    /**\n     *\n     * @for NavigationLibrary\n     * @property hasSids\n     * @type {boolean}\n     */\n    get hasSids() {\n        const sidProcedureModels = _filter(this._procedureCollection, (procedure) => {\n            return procedure.procedureType === PROCEDURE_TYPE.SID;\n        });\n\n        return sidProcedureModels.length > 0;\n    }\n\n    /**\n     *\n     * @for NavigationLibrary\n     * @property hasStars\n     * @type {boolean}\n     */\n    get hasStars() {\n        const starProcedureModels = _filter(this._procedureCollection, (procedure) => {\n            return procedure.procedureType === PROCEDURE_TYPE.STAR;\n        });\n\n        return starProcedureModels.length > 0;\n    }\n\n    // get sidCollection() {\n    //     return _filter(this._procedureCollection, (procedure) => procedure.procedureType === PROCEDURE_TYPE.SID);\n    // }\n    //\n    // get starCollection() {\n    //     return _filter(this._procedureCollection, (procedure) => procedure.procedureType === PROCEDURE_TYPE.STAR);\n    // }\n\n    /**\n     *\n     * @for NavigationLibrary\n     * @property realFixes\n     * @type {array<FixModel>}\n     */\n    get realFixes() {\n        return FixCollection.findRealFixes();\n    }\n\n    /**\n     * Set initial instance properties\n     *\n     * May be run multiple times on an instance. Subsequent calls to this method\n     * should happen only after a call to `.reset()`\n     *\n     * @for NavigationLibrary\n     * @method init\n     */\n    init(airportJson) {\n        const {\n            airways, fixes, holds, sids, stars\n        } = airportJson;\n\n        this._initializeReferencePosition(airportJson);\n        this._initializeFixCollection(fixes);\n        this._initializeAirwayCollection(airways);\n        this._initializeHoldCollection(holds);\n        this._initializeProcedureCollection(sids, stars);\n        this._initializeSidLines();\n        this._initializeStarLines();\n        this._showConsoleWarningForUndefinedFixes();\n    }\n\n    /**\n     *\n     * @for NavigationLibrary\n     * @method _initializeAirwayCollection\n     * @param airways {object} - airways to add to the collection.\n     */\n    _initializeAirwayCollection(airways) {\n        _forEach(airways, (fixNames, airwayName) => {\n            if (airwayName in this._airwayCollection) {\n                throw new TypeError(`Expected single definition for \"${airwayName}\" airway, but received multiple`);\n            }\n\n            this._airwayCollection[airwayName] = new AirwayModel(airwayName, fixNames, this);\n        });\n    }\n\n    /**\n     *\n     * @for NavigationLibrary\n     * @method _initializeFixCollection\n     * @param fixes {object} - fixes to add to the collection.\n     */\n    _initializeFixCollection(fixes) {\n        FixCollection.addItems(fixes, this._referencePosition);\n    }\n\n    /**\n     *\n     * @for NavigationLibrary\n     * @method _initializeHoldCollection\n     * @param holds {object} - non-procedural holds to add to the collection.\n     */\n    _initializeHoldCollection(holds) {\n        this._holdCollection.populateHolds(holds);\n    }\n\n    /**\n     *\n     * @for NavigationLibrary\n     * @method _initializeProcedureCollection\n     * @param sids {object} - SIDs to add to the collection\n     * @param stars {object} - STARs to add to the collection\n     */\n    _initializeProcedureCollection(sids, stars) {\n        _forEach(sids, (sid, sidId) => {\n            if (sidId in this._procedureCollection) {\n                throw new TypeError(`Expected single definition for '${sidId}' procedure, but received multiple`);\n            }\n\n            this._procedureCollection[sidId] = new ProcedureModel(PROCEDURE_TYPE.SID, sid);\n        });\n\n        _forEach(stars, (star, starId) => {\n            if (starId in this._procedureCollection) {\n                throw new TypeError(`Expected single definition for '${starId}' procedure, but received multiple`);\n            }\n\n            this._procedureCollection[starId] = new ProcedureModel(PROCEDURE_TYPE.STAR, star);\n        });\n    }\n\n    /**\n     *\n     * @for NavigationLibrary\n     * @method _initializeReferencePosition\n     * @param airportJson {object}\n     */\n    _initializeReferencePosition(airportJson) {\n        this._referencePosition = new StaticPositionModel(\n            airportJson.position,\n            null,\n            degreesToRadians(airportJson.magnetic_north)\n        );\n    }\n\n    /**\n     * Generate lines for SIDs and add them to the procedure lines\n     *\n     * @for NavigationLibrary\n     * @method _initializeSidLines\n     */\n    _initializeSidLines() {\n        const sids = this.getProceduresByType(PROCEDURE_TYPE.SID);\n        this._procedureLines[PROCEDURE_TYPE.SID] = this._buildProcedureLine(sids);\n    }\n\n    /**\n     * Generate lines for STARs and add them to the procedure lines\n     *\n     * @for NavigationLibrary\n     * @method _initializeStarLines\n     */\n    _initializeStarLines() {\n        const stars = this.getProceduresByType(PROCEDURE_TYPE.STAR);\n        this._procedureLines[PROCEDURE_TYPE.STAR] = this._buildProcedureLine(stars);\n    }\n\n    /**\n     * Generate lines for prodecures and return the resulting lines.\n     *\n     * @for NavigationLibrary\n     * @method _buildProcedureLine\n     * @param procedures {array<ProcedureModel>}\n     * @return {array<object>}\n     */\n    _buildProcedureLine(procedures) {\n        const procedureLines = [];\n\n        // TODO: simplify/rector these nested loops.\n        for (let i = 0; i < procedures.length; i++) {\n            const procedure = procedures[i];\n            const lines = [];\n            const exits = [];\n            let firstFixName = null;\n            let mostRecentFixName = '';\n\n            for (let j = 0; j < procedure.draw.length; j++) {\n                const fixList = procedure.draw[j];\n                const positions = [];\n\n                for (let k = 0; k < fixList.length; k++) {\n                    const fixName = fixList[k];\n                    mostRecentFixName = fixName;\n\n                    if (fixName.indexOf('*') !== INVALID_INDEX) {\n                        mostRecentFixName = fixName.replace('*', '');\n                        exits.push(mostRecentFixName);\n                    }\n\n                    const fixPosition = this.getFixRelativePosition(mostRecentFixName);\n\n                    if (!fixPosition) {\n                        console.warn(`Unable to draw line to '${fixName}' because its position is not defined!`);\n                        continue;\n                    }\n\n                    if (firstFixName === null) {\n                        firstFixName = mostRecentFixName;\n                    }\n\n                    positions.push(fixPosition);\n                }\n\n                if (positions.length > 1) {\n                    lines.push(positions);\n                }\n            }\n\n            procedureLines.push({\n                identifier: procedure.icao,\n                lines: lines,\n                firstFixName: firstFixName,\n                lastFixName: mostRecentFixName,\n                exits: exits\n            });\n        }\n\n        return procedureLines;\n    }\n\n    /**\n     * Tear down the instance\n     *\n     * @for NavigationLibrary\n     * @method reset\n     */\n    reset() {\n        FixCollection.removeItems();\n        this._holdCollection.reset();\n\n        this._airwayCollection = {};\n        this._procedureCollection = {};\n        this._referencePosition = null;\n        this._procedureLines = {};\n    }\n\n    // /**\n    //  * Given a `procedureRouteSegment`, find and assemble a list\n    //  * of `WaypointModel` objects to be used with a `LegModel`\n    //  * in the Fms.\n    //  *\n    //  * @for NavigationLibrary\n    //  * @method buildWaypointModelsForProcedure\n    //  * @param procedureRouteSegment {string}  of the shape `ENTRY.PROCEDURE_NAME.EXIT`\n    //  * @param runway {string}                 assigned runway\n    //  * @param flightPhase {string}            current phase of flight\n    //  * @return {array<WaypointModel>}\n    //  */\n    // buildWaypointModelsForProcedure(procedureRouteSegment, runway, flightPhase) {\n    //     const routeModel = new RouteModel(procedureRouteSegment);\n    //     let standardRouteWaypointModelList;\n    //\n    //     if (this.isGroundedFlightPhase(flightPhase)) {\n    //         standardRouteWaypointModelList = this.sidCollection.generateFmsWaypointModelsForRoute(\n    //             routeModel.procedure,\n    //             runway,\n    //             routeModel.exit\n    //         );\n    //     } else {\n    //         standardRouteWaypointModelList = this.starCollection.generateFmsWaypointModelsForRoute(\n    //             routeModel.procedure,\n    //             routeModel.entry,\n    //             runway\n    //         );\n    //     }\n    //\n    //     return standardRouteWaypointModelList;\n    // }\n    //\n    // /**\n    //  * Find the `StandardRouteWaypointModel` objects for a given route.\n    //  *\n    //  * @for NavigationLibrary\n    //  * @method findWaypointModelsForSid\n    //  * @param id {string}\n    //  * @param runway {string}\n    //  * @param exit {string}\n    //  * @return {array<StandardWaypointModel>}\n    //  */\n    // findWaypointModelsForSid(id, runway, exit) {\n    //     return this.sidCollection.findRouteWaypointsForRouteByEntryAndExit(id, runway, exit);\n    // }\n    //\n    // /**\n    //  * Find the `StandardRouteWaypointModel` objects for a given route.\n    //  *\n    //  * @for NavigationLibrary\n    //  * @method findWaypointModelsForStar\n    //  * @param id {string}\n    //  * @param entry {string}\n    //  * @param runway {string}\n    //  * @param isPreSpawn {boolean} flag used to determine if distances between waypoints should be calculated\n    //  * @return {array<StandardWaypointModel>}\n    //  */\n    // findWaypointModelsForStar(id, entry, runway, isPreSpawn = false) {\n    //     return this.starCollection.findRouteWaypointsForRouteByEntryAndExit(id, entry, runway, isPreSpawn);\n    // }\n    //\n    // /**\n    //  * Finds the collectionName a given `procedureId` belongs to.\n    //  *\n    //  * This is useful when trying to find a particular route without\n    //  * knowing, first, what collection it may be a part of. Like when\n    //  * validating a user entered route.\n    //  *\n    //  * @for NavigationLibrary\n    //  * @method findCollectionNameForProcedureId\n    //  * @param procedureId {string}\n    //  * @return collectionName {string}\n    //  */\n    // findCollectionNameForProcedureId(procedureId) {\n    //     let collectionName = '';\n    //\n    //     if (this.sidCollection.hasRoute(procedureId)) {\n    //         collectionName = 'sidCollection';\n    //     } else if (this.starCollection.hasRoute(procedureId)) {\n    //         collectionName = 'starCollection';\n    //     }\n    //\n    //     return collectionName;\n    // }\n\n    /**\n     * Facade for `HoldCollection.findHoldParametersByFix`\n     *\n     * @for NavigationLibrary\n     * @method findHoldParametersByFix\n     * @param fixName {string}\n     * @return {object|null}\n     */\n    findHoldParametersByFix(fixName) {\n        return this._holdCollection.findHoldParametersByFix(fixName);\n    }\n\n    /**\n     * Facade Method\n     *\n     * @for NavigationLibrary\n     * @method findFixByName\n     * @param fixName {string}\n     * @return {FixModel|undefined}\n     */\n    findFixByName(fixName) {\n        return FixCollection.findFixByName(fixName);\n    }\n\n    /**\n     * Return the corresponding AirwayModel with the specified identifier\n     *\n     * @for NavigationLibrary\n     * @method getAirway\n     * @return {AirwayModel}\n     */\n    getAirway(airwayId) {\n        if (!this.hasAirway(airwayId)) {\n            return null;\n        }\n\n        return this._airwayCollection[airwayId];\n    }\n\n    /**\n     * Return the corresponding ProcedureModel with the specified identifier\n     *\n     * @for NavigationLibrary\n     * @method getProcedure\n     * @param procedureId {string}\n     * @return {ProcedureModel}\n     */\n    getProcedure(procedureId) {\n        if (!this.hasProcedure(procedureId)) {\n            return null;\n        }\n\n        return this._procedureCollection[procedureId];\n    }\n\n    /**\n    * Return a list of ProcedureModel with the specified procedure type\n    *\n    * @for NavigationLibrary\n    * @method getProceduresByType\n    * @param procedureType {string}\n    * @return {array<ProcedureModel>}\n    */\n    getProceduresByType(procedureType) {\n        return _filter(this._procedureCollection, (procedureModel) => {\n            return !_isEmpty(procedureModel) && procedureModel.procedureType === procedureType;\n        });\n    }\n\n    /**\n     * Facade Method\n     *\n     * @for NavigationLibrary\n     * @method getFixRelativePosition\n     * @param fixName {string}\n     * @return {array<number>}\n     */\n    getFixRelativePosition(fixName) {\n        return FixCollection.getFixRelativePosition(fixName);\n    }\n\n    /**\n     * Facade Method\n     *\n     * @for NavigationLibrary\n     * @method getFixSpokenName\n     * @param fixName {string}\n     * @return {string}\n     */\n    getFixSpokenName(fixName) {\n        return FixCollection.getFixSpokenName(fixName);\n    }\n\n    /**\n     *\n     *\n     * @for NavigationLibrary\n     * @method getProcedureLines\n     * @param procedureId {string}\n     * @return {array}\n     */\n    getProcedureLines(procedureId) {\n        return this._procedureLines[procedureId];\n    }\n\n    /**\n     * Return whether the specified airway identifier is listed in the #_airwayCollection\n     *\n     * @for NavigationLibrary\n     * @method hasAirway\n     * @param airwayId {string}\n     * @return {boolean}\n     */\n    hasAirway(airwayId) {\n        return airwayId in this._airwayCollection;\n    }\n\n    /**\n    * Provides a way to check the `FixCollection` for the existence\n    * of a specific `fixName`.\n    *\n    * @for NavigationLibrary\n    * @method hasFixName\n    * @param fixName {string}\n    * @return {boolean}\n    */\n    hasFixName(fixName) {\n        const fixOrNull = this.findFixByName(fixName);\n\n        return !_isNil(fixOrNull);\n    }\n\n    /**\n    * Provides a way to check for the existence\n    * of a specific `procedureId`.\n    *\n    * @for NavigationLibrary\n    * @method hasProcedure\n    * @param procedureId {string}\n    * @return {boolean}\n    */\n    hasProcedure(procedureId) {\n        return procedureId in this._procedureCollection;\n    }\n\n    /**\n     * Check all fixes used in procedures, and gather a list of any fixes that are\n     * not defined in the `fixes` section of the airport file, then sort and print\n     * that list to the console.\n     *\n     * @for NavigationLibrary\n     * @method _showConsoleWarningForUndefinedFixes\n     */\n    _showConsoleWarningForUndefinedFixes() {\n        const allFixNames = this._getAllFixNamesInUse();\n        const missingFixes = allFixNames.filter((fix) => !FixCollection.findFixByName(fix));\n\n        if (missingFixes.length < 1) {\n            return;\n        }\n\n        console.warn(`The following fixes have yet to be defined in the \"fixes\" section: \\n${missingFixes}`);\n    }\n\n    /**\n     * Gathers a unique, sorted list of all fixes used in all known procedures\n     *\n     * @for NavigationLibrary\n     * @method _getAllFixNamesInUse\n     * @return {array<string>} ['fixxa', 'fixxb', 'fixxc', ...]\n     * @private\n     */\n    _getAllFixNamesInUse() {\n        const airwayFixes = _map(this._airwayCollection, (airwayModel) => airwayModel.fixNameCollection);\n        const fixGroups = _map(this._procedureCollection, (procedureModel) => procedureModel.getAllFixNamesInUse());\n        const uniqueFixNames = _without(_uniq(_flatten([...airwayFixes, ...fixGroups])), undefined);\n\n        return uniqueFixNames.sort();\n    }\n}\n\nexport default new NavigationLibrary();\n","import _forEach from 'lodash/forEach';\nimport _isArray from 'lodash/isArray';\nimport _isNil from 'lodash/isNil';\nimport _map from 'lodash/map';\nimport _random from 'lodash/random';\nimport _uniq from 'lodash/uniq';\nimport WaypointModel from '../aircraft/FlightManagementSystem/WaypointModel';\nimport HoldCollection from './HoldCollection';\nimport { PROCEDURE_TYPE } from '../constants/routeConstants';\n\n/**\n * Generic class for instrument procedures of multiple types, such as SIDs/STARs\n *\n * Used by FMS to generate waypoints from instrument procedures outlined in an\n * airport's JSON file. The FMS is given a route on spawn, or a reroute by a\n * controller, and if it contains a procedure, it will look up the associated\n * `ProcedureModel`, and request the waypoints for that procedure at\n * the planned entry and exit points, which are then consumed by the FMS for\n * navigation purposes.\n *\n * @class ProcedureModel\n */\nexport default class ProcedureModel {\n    /**\n     * @for ProcedureModel\n     * @constructor\n     * @param procedureType {string} must belong to the `PROCEDURE_TYPE` enum\n     * @param data {object} JSON data from airport file\n     */\n    constructor(procedureType, data) {\n        if (_isNil(data)) {\n            throw new TypeError(`Expected valid procedure data, but received '${data}'`);\n        }\n\n        /**\n         * Body segment of the procedure\n         *\n         * All possible routes will contain all waypoints from the body, regardless\n         * of where they enter or exit the procedure. Does not necessarily contain\n         * any waypoints, provided that no combination of entry/exit would result\n         * in fewer than two waypoints.\n         *\n         * @property _body\n         * @type {array<array<string>|<string>>}\n         * @default []\n         * @private\n         */\n        this._body = [];\n\n        /**\n         * 2D array describing the lines needed to be drawn between fixes in order\n         * to properly depict the procedure's path on the scope\n         *\n         * [\n         *     ['FIXXA', 'FIXXB', 'FIXXC'],\n         *     ['FIXXA', 'FIXXC']\n         * ]\n         *\n         * @property _draw\n         * @type {array<array<string>>}\n         * @default []\n         * @private\n         */\n        this._draw = [];\n\n        /**\n         * All fixes where aircraft may enter the procedure\n         *\n         * Each entry fix is a key in this property, whose value is a list of (restrictable)\n         * fixes to follow on that entry in order to join the body of the procedure.\n         *\n         * @property _entryPoints\n         * @type {array<array<string>|<string>>}\n         * @default {}\n         * @private\n         */\n        this._entryPoints = {};\n\n        /**\n         * All fixes where aircraft may exit the procedure\n         *\n         * Each exit fix is a key in this property, whose value is a list of (restrictable)\n         * fixes to follow on that exit in order to leave the procedure.\n         *\n         * @property _exitPoints\n         * @type {array<array<string>|<string>>}\n         * @default {}\n         * @private\n         */\n        this._exitPoints = {};\n\n        /**\n         * The ICAO identifier for this procedure\n         *\n         * @property _icao\n         * @type {string}\n         * @default ''\n         * @private\n         */\n        this._icao = '';\n\n        /**\n         * The collection of holds for this procedure\n         *\n         * @property _holdCollection\n         * @type {HoldCollection}\n         * @default null\n         * @private\n         */\n        this._holdCollection = null;\n\n        /**\n         * The verbally spoken name of the procedure\n         *\n         * Nonstandard spellings may be used to achieve the desired pronunciations,\n         * since this is only used for speech synthesis.\n         *\n         * @property _name\n         * @type {string}\n         * @default ''\n         * @private\n         */\n        this._name = '';\n\n        /**\n         * The type of instrument procedure (must be one of `PROCEDURE_TYPE`)\n         *\n         * @property _procedureType\n         * @type {string}\n         * @default ''\n         * @private\n         */\n        this._procedureType = '';\n\n        /**\n         * The initial climb clearance (only for SIDs)\n         *\n         * @property _altitude\n         * @type {number}\n         * @default null\n         * @private\n         */\n        this._altitude = null;\n\n        this.init(procedureType, data);\n    }\n\n    /**\n     * Return value of `#_draw`\n     *\n     * @for ProcedureModel\n     * @property draw\n     * @type {array}\n     */\n    get draw() {\n        return this._draw;\n    }\n\n    /**\n     * Return value of `#_icao`\n     *\n     * @for ProcedureModel\n     * @property icao\n     * @type {string}\n     */\n    get icao() {\n        return this._icao;\n    }\n\n    /**\n     * Return value of `#_name`\n     *\n     * @for ProcedureModel\n     * @property name\n     * @type {string}\n     */\n    get name() {\n        return this._name;\n    }\n\n    /**\n     * Return value of `#_procedureType`\n     *\n     * @for ProcedureModel\n     * @property procedureType\n     * @type {string}\n     */\n    get procedureType() {\n        return this._procedureType;\n    }\n\n    /**\n     * Return value of `#_altitude`\n     *\n     * @for ProcedureModel\n     * @property altitude\n     * @type {number}\n     */\n    get altitude() {\n        return this._altitude;\n    }\n\n    // ------------------------------ LIFECYCLE ------------------------------\n\n    /**\n     * Initialize instance properties\n     *\n     * @for ProcedureModel\n     * @method init\n     * @param procedureType {string} must belong to the `PROCEDURE_TYPE` enum\n     * @param data {object} JSON data from airport file\n     * @chainable\n     */\n    init(procedureType, data) {\n        this._body = data.body;\n        this._draw = data.draw;\n        this._holdCollection = new HoldCollection(data.holds);\n        this._icao = data.icao;\n        this._name = data.name;\n        this._altitude = data.altitude;\n        this._procedureType = procedureType;\n\n        if (this._procedureType === PROCEDURE_TYPE.SID) {\n            return this._initEntriesAndExitsForSid(data);\n        } else if (this._procedureType === PROCEDURE_TYPE.STAR) {\n            return this._initEntriesAndExitsForStar(data);\n        }\n\n        throw new TypeError('Expected procedure definition with known type, ' +\n            `but received unknown type '${this._procedureType}'`);\n    }\n\n    /**\n     * Reset instance properties\n     *\n     * @for ProcedureModel\n     * @method reset\n     * @chainable\n     */\n    reset() {\n        this._body = [];\n        this._draw = [];\n        this._entryPoints = {};\n        this._exitPoints = {};\n        this._icao = '';\n        this._name = '';\n        this._procedureType = '';\n        this._altitude = null;\n\n        return this;\n    }\n\n    /**\n     * Initialize `#_entryPoints` and `#_exitPoints` for 'SID' procedure\n     *\n     * @for ProcedureModel\n     * @method _initEntriesAndExitsForSid\n     * @param data {object} JSON data from airport file\n     * @private\n     * @chainable\n     */\n    _initEntriesAndExitsForSid(data) {\n        this._entryPoints = data.rwy;\n        this._exitPoints = data.exitPoints;\n\n        return this;\n    }\n\n    /**\n     * Initialize `#_entryPoints` and `#_exitPoints` for 'STAR' procedure\n     *\n     * @for ProcedureModel\n     * @method _initEntriesAndExitsForStar\n     * @param data {object} JSON data from airport file\n     * @private\n     * @chainable\n     */\n    _initEntriesAndExitsForStar(data) {\n        this._entryPoints = data.entryPoints;\n        this._exitPoints = data.rwy;\n\n        return this;\n    }\n\n    // ------------------------------ PUBLIC ------------------------------\n\n    /**\n     * Return an array of names of all fixes existing in any segment of this procedure\n     *\n     * @for ProcedureModel\n     * @method getAllFixNamesInUse\n     * @return {array<string>}\n     */\n    getAllFixNamesInUse() {\n        if (!_isArray(this._draw[0])) {\n            throw new TypeError(`Invalid data set in draw segment of the ${this._icao} procedure. Expected a 2D ` +\n                'array: `[[FIXXA, FIXXB*], [FIXXC, FIXXD*]]`. Please see airport documentation for more information ' +\n                '(https://github.com/ATSSIM/openscope/blob/develop/documentation/airport-format.md#sids).');\n        }\n\n        const entryFixNames = this._getFixNamesFromEntries();\n        const bodyFixNames = this._getFixNamesFromBody();\n        const exitFixNames = this._getFixNamesFromExits();\n        const drawFixNames = this._getFixNamesFromDraw();\n        const allFixNames = [...entryFixNames, ...bodyFixNames, ...exitFixNames, ...drawFixNames];\n        const uniqueFixNames = _uniq(allFixNames);\n\n        return uniqueFixNames;\n    }\n\n    /**\n     * Return the name of a randomly selected exit point\n     *\n     * @for ProcedureModel\n     * @method getRandomExitPoint\n     * @return {string}\n     */\n    getRandomExitPoint() {\n        const exitNames = Object.keys(this._exitPoints);\n        const maxIndex = exitNames.length - 1;\n        const randomIndex = _random(0, maxIndex);\n\n        return exitNames[randomIndex];\n    }\n\n    /**\n     * Return the name of the first entry point in the list\n     *\n     * NOTE: Since this will return whichever element appears first in the object,\n     * it should only really be useful when we are trying to get ANY valid entry point.\n     *\n     * The above is exactly the use case for which this was created: When given a clearance\n     * with a route that is invalid for the planned departure runway, we need to apply that\n     * route using ANY runway which is valid. When the aircraft is taxiied to a runway and\n     * cleared for takeoff, they will verify the procedure's compatibility with that runway.\n     *\n     * @for ProcedureModel\n     * @method getFirstEntryPoint\n     * @return {string}\n     */\n    getFirstEntryPoint() {\n        const entryNames = Object.keys(this._entryPoints);\n\n        if (entryNames.length === 0) {\n            return null;\n        }\n\n        return entryNames[0];\n    }\n\n    /**\n     * Return the name of the first entry point if there is exactly one entry point.\n     *\n     * @for ProcedureModel\n     * @method getUniqueEntryPoint\n     * @return {string}\n     */\n    getUniqueEntryPoint() {\n        const entryNames = Object.keys(this._entryPoints);\n\n        if (entryNames.length !== 1) {\n            return '';\n        }\n\n        return entryNames[0];\n    }\n\n    /**\n    * Given an entry point and exit point, return a list of all applicable waypoints\n    *\n    * @for ProcedureModel\n    * @method getWaypointModelsForEntryAndExit\n    * @param entry {string} name of the requested entry point\n    * @param exit {string} name of the requested exit point\n    * @return {array<WaypointModel>}\n    */\n    getWaypointModelsForEntryAndExit(entry, exit) {\n        if (!(entry in this._entryPoints)) {\n            console.error(`Expected valid entry of ${this._icao}, but received ${entry}`);\n\n            return;\n        }\n\n        if (!(exit in this._exitPoints)) {\n            console.error(`Expected valid exit of ${this._icao}, but received ${exit}`);\n\n            return;\n        }\n\n        const entryWaypointModels = this._generateWaypointsForEntry(entry);\n        const bodyWaypointModels = this._generateWaypointsForBody();\n        const exitWaypointModels = this._generateWaypointsForExit(exit);\n\n        return [...entryWaypointModels, ...bodyWaypointModels, ...exitWaypointModels];\n    }\n\n    /**\n     * Return whether this procedure contains an entry point with the specified name\n     *\n     * @for ProcedureModel\n     * @method hasEntry\n     * @return {boolean}\n     */\n    hasEntry(entryName) {\n        return entryName in this._entryPoints;\n    }\n\n    /**\n     * Return whether this procedure contains an exit point with the specified name\n     *\n     * @for ProcedureModel\n     * @method hasExit\n     * @return {boolean}\n     */\n    hasExit(exitName) {\n        return exitName in this._exitPoints;\n    }\n\n    /**\n     * Returns whether this procedure is a SID\n     *\n     * @for ProcedureModel\n     * @method isSid\n     * @return {Boolean}\n     */\n    isSid() {\n        return this._procedureType === PROCEDURE_TYPE.SID;\n    }\n\n    /**\n     * Returns whether this procedure is a STAR\n     *\n     * @for ProcedureModel\n     * @method isStar\n     * @return {Boolean}\n     */\n    isStar() {\n        return this._procedureType === PROCEDURE_TYPE.STAR;\n    }\n\n    // ------------------------------ PRIVATE ------------------------------\n\n    /**\n     * Generate a `WaypointModel` for the specified data\n     *\n     * @for ProcedureModel\n     * @method _generateWaypoint\n     * @param data {string|array<string>}\n     * @returns {WaypointModel}\n     * @private\n     */\n    _generateWaypoint(data) {\n        const waypoint = new WaypointModel(data);\n\n        const holdParameters = this._holdCollection.findHoldParametersByFix(waypoint.name);\n\n        if (holdParameters != null) {\n            waypoint.setDefaultHoldParameters(holdParameters);\n        }\n\n        return waypoint;\n    }\n\n    /**\n    * Generate new `WaypointModel`s for the body portion of the procedure\n    *\n    * @for ProcedureModel\n    * @method _generateWaypointsForBody\n    * @return {array<WaypointModel>}\n    * @private\n    */\n    _generateWaypointsForBody() {\n        return _map(this._body, (waypoint) => this._generateWaypoint(waypoint));\n    }\n\n    /**\n    * Generate new `WaypointModel`s for the specified entry\n    *\n    * @for ProcedureModel\n    * @method _generateWaypointsForEntry\n    * @param entryPoint {string} name of the requested entry point\n    * @return {array<WaypointModel>}\n    * @private\n    */\n    _generateWaypointsForEntry(entryPoint) {\n        if (!(entryPoint in this._entryPoints)) {\n            throw new TypeError(`Expected valid entry of ${this._icao}, but received ${entryPoint}`);\n        }\n\n        return _map(this._entryPoints[entryPoint], (waypoint) => this._generateWaypoint(waypoint));\n    }\n\n    /**\n    * Generate new `WaypointModel`s for the specified exit\n    *\n    * @for ProcedureModel\n    * @method _generateWaypointsForEntry\n    * @param exitPoint {string} name of the requested exit point\n    * @return {array<WaypointModel>}\n    * @private\n    */\n    _generateWaypointsForExit(exitPoint) {\n        if (!(exitPoint in this._exitPoints)) {\n            throw new TypeError(`Expected valid exit of ${this._icao}, but received ${exitPoint}`);\n        }\n\n        return _map(this._exitPoints[exitPoint], (waypoint) => this._generateWaypoint(waypoint));\n    }\n\n    /**\n     * Return an array containing names of all fixes existing in the body\n     *\n     * @for ProcedureModel\n     * @method _getFixNamesFromBody\n     * @return {array<string>}\n     * @private\n     */\n    _getFixNamesFromBody() {\n        return _map(this._body, (restrictedFix) => {\n            return this._getFixNameFromRestrictedFixArray(restrictedFix);\n        });\n    }\n\n    /**\n     * Return an array containing names of all fixes existing in the draw array\n     *\n     * @for ProcedureModel\n     * @method _getFixNamesFromDraw\n     * @return {array<string>}\n     * @private\n     */\n    _getFixNamesFromDraw() {\n        const drawFixNames = this._draw.reduce((fixList, lineSegment) => fixList.concat(lineSegment));\n        const drawFixNamesWithoutAsterisks = drawFixNames.map((fixName) => fixName.replace('*', ''));\n\n        return drawFixNamesWithoutAsterisks;\n    }\n\n    /**\n     * Return an array containing names of all fixes existing in any entry\n     *\n     * @for ProcedureModel\n     * @method _getFixNamesFromEntries\n     * @return {array<string>}\n     * @private\n     */\n    _getFixNamesFromEntries() {\n        let fixNames = [];\n\n        _forEach(this._entryPoints, (segment) => {\n            const fixesInSegment = _map(segment, (restrictedFix) => {\n                return this._getFixNameFromRestrictedFixArray(restrictedFix);\n            });\n\n            fixNames = fixNames.concat(fixesInSegment);\n        });\n\n        return _uniq(fixNames);\n    }\n\n    /**\n     * Return an array containing names of all fixes existing in any exit\n     *\n     * @for ProcedureModel\n     * @method _getFixNamesFromExits\n     * @return {array<string>}\n     * @private\n     */\n    _getFixNamesFromExits() {\n        let fixNames = [];\n\n        _forEach(this._exitPoints, (segment) => {\n            const fixesInSegment = _map(segment, (restrictedFix) => {\n                return this._getFixNameFromRestrictedFixArray(restrictedFix);\n            });\n\n            fixNames = fixNames.concat(fixesInSegment);\n        });\n\n        return _uniq(fixNames);\n    }\n\n    /**\n     * Return the name of a fix from a restrited-fix array\n     *\n     * Ex:    ['FIXXA', 'A100']    -->    'FIXXA'\n     *\n     * @for ProcedureModel\n     * @method _getFixNameFromRestrictedFixArray\n     * @param restrictedFix {array<string>}\n     * @return {string}\n     * @private\n     */\n    _getFixNameFromRestrictedFixArray(restrictedFix) {\n        if (_isArray(restrictedFix)) {\n            restrictedFix = restrictedFix[0];\n        }\n\n        if (restrictedFix.indexOf('#') !== -1) {\n            return;\n        }\n\n        return restrictedFix.replace('^', '').replace('@', '');\n    }\n}\n","import _filter from 'lodash/filter';\nimport _has from 'lodash/has';\nimport RadarTargetModel from './RadarTargetModel';\nimport BaseCollection from '../base/BaseCollection';\nimport EventBus from '../lib/EventBus';\nimport { EVENT } from '../constants/eventNames';\nimport { THEME } from '../constants/themes';\n\n/**\n * Collection of `RadarTargetModel`s\n *\n * @class RadarTargetCollection\n */\nexport default class RadarTargetCollection extends BaseCollection {\n    /**\n     * @for RadarTargetCollection\n     * @constructor\n     * @param theme {object}\n     */\n    constructor(theme) {\n        super();\n\n        /**\n         * Local reference to the event bus\n         *\n         * @for RadarTargetModel\n         * @property _eventBus\n         * @type {EventBus}\n         */\n        this._eventBus = EventBus;\n\n        /**\n         * Current theme, updated via event bus events\n         *\n         * @for RadarTargetCollection\n         * @property _theme\n         * @type {object}\n         */\n        this._theme = theme;\n\n        this._init()\n            .enable();\n    }\n\n    /**\n     * Return a read-only reference to the collection array\n     *\n     * @for RadarTargetCollection\n     * @property items\n     * @type {array}\n     */\n    get items() {\n        return this._items;\n    }\n\n    /**\n     * Complete initialization tasks\n     *\n     * @for RadarTargetCollection\n     * @method _init\n     * @private\n     * @chainable\n     */\n    _init() {\n        return this;\n    }\n\n    /**\n    * Activate event handlers\n    *\n    * @for RadarTargetModel\n    * @method enable\n    */\n    enable() {\n        this._eventBus.on(EVENT.ADD_AIRCRAFT, this.addRadarTargetModelForAircraftModel);\n        this._eventBus.on(EVENT.SET_THEME, this._setTheme);\n    }\n\n    /**\n    * Deactivate event handlers\n    *\n    * @for RadarTargetModel\n    * @method disable\n    */\n    disable() {\n        this._eventBus.off(EVENT.ADD_AIRCRAFT, this.addRadarTargetModelForAircraftModel);\n        this._eventBus.off(EVENT.SET_THEME, this._setTheme);\n    }\n\n    /**\n     * Add the provided `RadarTargetModel` instance to the collection\n     *\n     * @for RadarTargetCollection\n     * @method addRadarTargetModel\n     * @param radarTargetModel {RadarTargetModel}\n     */\n    addRadarTargetModel(radarTargetModel) {\n        if (!(radarTargetModel instanceof RadarTargetModel)) {\n            throw new TypeError(`Expected instance of RadarTargetModel but received '${radarTargetModel}'`);\n        }\n\n        this._items.push(radarTargetModel);\n    }\n\n    /**\n     * Create `RadarTargetModel`s for the given `AircraftModel`\n     *\n     * @for RadarTargetCollection\n     * @method addRadarTargetModelForAircraftModel\n     * @param aircraftModel {AircraftModel}\n     */\n    addRadarTargetModelForAircraftModel = (aircraftModel) => {\n        const radarTargetModel = new RadarTargetModel(this._theme, aircraftModel);\n\n        this.addRadarTargetModel(radarTargetModel);\n    };\n\n    /**\n     * Get the radar target model object for the specified aircraft\n     *\n     * @for RadarTargetCollection\n     * @method findRadarTargetModelForAircraftModel\n     * @param aircraftModel {AircraftModel}\n     * @return radarTargetModel {RadarTargetModel}\n     */\n    findRadarTargetModelForAircraftModel(aircraftModel) {\n        // Store variable because `this` within lodash `_filter` has different scope\n        const radarTargetModels = this._items;\n        const results = _filter(\n            radarTargetModels,\n            (radarTargetModel) => radarTargetModel.aircraftModel.id === aircraftModel.id\n        );\n\n        if (results.length > 1) {\n            throw new Error(`Unable to get radar target because ${results.length} matching aircraft were found`);\n        }\n\n        const radarTargetModel = results[0];\n\n        return radarTargetModel;\n    }\n\n    // TODO: Allow us to choose an aircraft by its CID\n    /**\n     * Get the radar target model object for the specified aircraft\n     *\n     * @for RadarTargetCollection\n     * @method findRadarTargetModelForAircraftReference\n     * @param aircraftReference {string} the CID, squawk code, or callsign assigned to an aircraft\n     * @return radarTargetModel {RadarTargetModel}\n     */\n    findRadarTargetModelForAircraftReference(aircraftReference) {\n        // Store variable because `this` within lodash `_filter` has different scope\n        const radarTargetModels = this._items;\n        const results = _filter(radarTargetModels, ({ aircraftModel }) => {\n            return aircraftModel.transponderCode === aircraftReference ||\n                aircraftModel.callsign === aircraftReference;\n        });\n\n        if (results.length > 1) {\n            return;\n        }\n\n        const radarTargetModel = results[0];\n\n        return radarTargetModel;\n    }\n\n    /**\n     * Remove from the collection the radar target model associated with the specified aircraft model\n     *\n     * @for RadarTargetCollection\n     * @method removeRadarTargetModelForAircraftModel\n     * @param aircraftModel {AircraftModel}\n     */\n    removeRadarTargetModelForAircraftModel = (aircraftModel) => {\n        const collectionWithAircraftRemoved = _filter(this._items, (radarTargetModel) => {\n            return radarTargetModel.aircraftModel.id !== aircraftModel.id;\n        });\n\n        this._items = collectionWithAircraftRemoved;\n    };\n\n    /**\n    * Reset all properties to their default values\n    *\n    * @for RadarTargetCollection\n    * @method reset\n    */\n    reset() {\n        this._items = [];\n    }\n\n    /**\n     * Reset all radar target models to default state\n     *\n     * @for RadarTargetCollection\n     * @method resetAllRadarTargets\n     */\n    resetAllRadarTargets() {\n        const radarTargetModels = this._items;\n\n        for (let i = 0; i < radarTargetModels.length; i++) {\n            radarTargetModels[i].reset();\n        }\n    }\n\n    /**\n     * Change theme to the specified name\n     *\n     * This should ONLY be called through the EventBus during a `SET_THEME` event,\n     * thus ensuring that the same theme is always in use by all app components.\n     *\n     * This method must remain an arrow function in order to preserve the scope\n     * of `this`, since it is being invoked by an EventBus callback.\n     *\n     * @for RadarTargetCollection\n     * @method _setTheme\n     * @param themeName {string}\n     * @private\n     */\n    _setTheme = (themeName) => {\n        if (!_has(THEME, themeName)) {\n            console.error(`Expected valid theme to change to, but received '${themeName}'`);\n\n            return;\n        }\n\n        this._theme = THEME[themeName];\n    }\n}\n","import _has from 'lodash/has';\nimport _isEmpty from 'lodash/isEmpty';\nimport _isNaN from 'lodash/isNaN';\nimport _padEnd from 'lodash/padEnd';\nimport EventBus from '../lib/EventBus';\nimport { round } from '../math/core';\nimport { vadd } from '../math/vector';\nimport { leftPad } from '../utilities/generalUtilities';\nimport { EVENT } from '../constants/eventNames';\nimport { INVALID_NUMBER } from '../constants/globalConstants';\nimport { DECIMAL_RADIX } from '../utilities/unitConverters';\nimport {\n    DATA_BLOCK_DIRECTION_LENGTH_SEPARATOR,\n    DATA_BLOCK_POSITION_MAP\n} from '../constants/scopeConstants';\nimport { THEME } from '../constants/themes';\nimport { WAKE_TURBULENCE_CATEGORY } from '../constants/aircraftConstants';\n\n/**\n * A single radar target observed by the radar system and shown on the scope\n * Contains references to the full aircraft model, though only some of that\n * information will be made available to the controller through the scope.\n *\n * @class RadarTargetModel\n */\nexport default class RadarTargetModel {\n    /**\n     * @for RadarTargetModel\n     * @constructor\n     * @param theme {object}\n     * @param aircraftModel {AircraftModel}\n     */\n    constructor(theme, aircraftModel) {\n        /**\n         * The full aircraft model object that this radar target corresponds to\n         *\n         * @for RadarTargetModel\n         * @property aircraftModel\n         * @type {AircraftModel}\n         */\n        this.aircraftModel = null;\n\n        /**\n         * The cruise altitude (hard) assigned in the data block\n         *\n         * @for RadarTargetModel\n         * @property _cruiseAltitude\n         * @type {number}\n         */\n        this._cruiseAltitude = INVALID_NUMBER;\n\n        /**\n         * Direction the data block is extended away from the radar target.\n         * A value of -1 means to leave at default position.\n         *\n         * @for RadarTargetModel\n         * @property _dataBlockLeaderDirection\n         * @type {number}\n         */\n        this._dataBlockLeaderDirection = INVALID_NUMBER;\n\n        /**\n         * Length of the leader line extending away from the radar target and\n         * connecting to the data block.\n         *\n         * @for RadarTargetModel\n         * @property _dataBlockLeaderLength\n         * @type {number}\n         */\n        this._dataBlockLeaderLength = theme.DATA_BLOCK.LEADER_LENGTH;\n\n        /**\n         * Event Bus reference\n         *\n         * @for RadarTargetModel\n         * @property _eventBus\n         * @type {EventBus}\n         */\n        this._eventBus = EventBus;\n\n        // TODO: This will later be expanded upon such that aircraft may exist in\n        // the simulation without necessarily having full data blocks. An example\n        // of this would be VFR traffic with a partial or altitude-only data block.\n        // For now, assuming all aircraft in existence have an editable data block.\n        /**\n         * Boolean value representing whether the aircraft has a full data block.\n         * This is opposed to a partial (PDB), limited (LDB), or other non-full state.\n         *\n         * @for RadarTargetModel\n         * @property _hasFullDataBlock\n         * @type {boolean}\n         */\n        this._hasFullDataBlock = true;\n\n        /**\n         * Radius of the halo to be drawn around the radar taget\n         *\n         * If no halo is to be drawn, the value will be INVALID_NUMBER\n         *\n         * @for RadarTargetModel\n         * @property _haloRadius\n         * @type {number}\n         * @default INVALID_NUMBER\n         */\n        this._haloRadius = INVALID_NUMBER;\n\n        /**\n         * Boolean value representing whether the full data block is being suppressed\n         * on this particular scope.\n         *\n         * @for RadarTargetModel\n         * @property _hasSuppressedDataBlock\n         * @type {boolean}\n         */\n        this._hasSuppressedDataBlock = false;\n\n        /**\n         * The altitude (soft) assigned in the data block\n         *\n         * @for RadarTargetModel\n         * @property _interimAltitude\n         * @type {number}\n         */\n        this._interimAltitude = INVALID_NUMBER;\n\n        // TODO: This will be replaced with `this._sectorInControl` or something\n        // when handoffs become possible. For now, just marking whether or not \"we\"\n        // are the sector with control of the track.\n        /**\n         * Boolean value representing whether the track of this target is under\n         * control of this particular scope.\n         *\n         * @for RadarTargetModel\n         * @property _isUnderOurControl\n         * @type {boolean}\n         */\n        this._isUnderOurControl = true;\n\n        // TODO: Store the aircraft's initial route here. Yes, we want to intentionally\n        // make a copy of the route and store it here, not point to the aircraft's route.\n        // When the aircraft is told to fly a new route, this property should still show\n        // the old route, until the controller updates it in the scope.\n        /**\n         * The flight plan route for the aircraft associated with this radar target\n         *\n         * @for RadarTargetModel\n         * @property _routeString\n         * @type {string}\n         */\n        this._routeString = '';\n\n        /**\n         * A 3 character (or less) alphanumeric string that is shown in the data block\n         * The scratchpad is used for controller shorthand notes and other purposes\n         *\n         * @for RadarTargetModel\n         * @property _scratchPadText\n         * @type {string}\n         */\n        this._scratchPadText = '';\n\n        /**\n         * Active theme\n         *\n         * @for RadarTargetModel\n         * @property _theme\n         * @type {object}\n         */\n        this._theme = theme;\n\n        this._init(aircraftModel)\n            .enable();\n    }\n\n    /**\n     * Angle away from the radar target to draw the leader line and data block\n     *\n     * @for RadarTargetModel\n     * @property dataBlockLeaderDirection\n     * @type {number}\n     */\n    get dataBlockLeaderDirection() {\n        return this._dataBlockLeaderDirection;\n    }\n\n    /**\n     * Length of leader line connecting radar target and data block\n     *\n     * @for RadarTargetModel\n     * @property dataBlockLeaderLength\n     * @type {number}\n     */\n    get dataBlockLeaderLength() {\n        return this._dataBlockLeaderLength;\n    }\n\n    /**\n     * Get the `PositionModel` for the aircraft associated with the radar target\n     *\n     * @for RadarTargetModel\n     * @property positionModel\n     * @type {PositionModel}\n     */\n    get positionModel() {\n        return this.aircraftModel.positionModel;\n    }\n\n    /**\n     * Get the latest known altitude for the aircraft associated with the radar target\n     *\n     * @for RadarTargetModel\n     * @property positionModel\n     * @type {PositionModel}\n     */\n    get indicatedAltitude() {\n        return this.aircraftModel.altitude;\n    }\n\n    /**\n     * @for RadarTargetModel\n     * @property scratchPadText\n     * @type {string}\n     */\n    get scratchPadText() {\n        return this._scratchPadText;\n    }\n\n    set scratchPadText(text) {\n        this._scratchPadText = text.slice(0, 3).toUpperCase();\n    }\n\n    /**\n     * @for RadarTargetModel\n     * @property haloRadius\n     * @type {number}\n     */\n    get haloRadius() {\n        return this._haloRadius;\n    }\n\n    /**\n     * @for RadarTargetModel\n     * @property hasHalo\n     * @type {boolean}\n     */\n    get hasHalo() {\n        return this._haloRadius > 0;\n    }\n\n    /**\n     * Complete initialization tasks\n     *\n     * @for RadarTargetModel\n     * @method _init\n     * @param theme {object}\n     * @param aircraftModel {AircraftModel}\n     * @private\n     * @chainable\n     */\n    _init(aircraftModel) {\n        this.aircraftModel = aircraftModel;\n        this._cruiseAltitude = aircraftModel.fms.flightPlanAltitude;\n        this._dataBlockLeaderDirection = this._theme.DATA_BLOCK.LEADER_DIRECTION;\n        this._dataBlockLeaderLength = this._theme.DATA_BLOCK.LEADER_LENGTH;\n        this._routeString = aircraftModel.fms.getRouteString();\n\n        this.setDefaultScratchpad();\n\n        return this;\n    }\n\n    /**\n    * Disable handlers\n    *\n    * @for RadarTargetModel\n    * @method enable\n    * @chainable\n    */\n    enable() {\n        this._eventBus.on(EVENT.SET_THEME, this._setTheme);\n\n        return this;\n    }\n\n    /**\n    * Enable handlers\n    *\n    * @for RadarTargetModel\n    * @method disable\n    * @chainable\n    */\n    disable() {\n        this._eventBus.off(EVENT.SET_THEME, this._setTheme);\n\n        return this;\n    }\n\n    /**\n    * Reset all properties to their default state\n    *\n    * @for RadarTargetModel\n    * @method reset\n    * @chainable\n    */\n    reset() {\n        this.aircraftModel = null;\n        this._cruiseAltitude = INVALID_NUMBER;\n        this._dataBlockLeaderDirection = INVALID_NUMBER;\n        this._dataBlockLeaderLength = this._theme.DATA_BLOCK.LEADER_LENGTH;\n        this._hasFullDataBlock = true;\n        this._haloRadius = INVALID_NUMBER;\n        this._hasSuppressedDataBlock = false;\n        this._interimAltitude = INVALID_NUMBER;\n        this._isUnderOurControl = true;\n        this._routeString = '';\n\n        return this;\n    }\n\n    /**\n     * Assign a new \"hard\" altitude\n     *\n     * @for RadarTargetModel\n     * @param altitude {number}\n     * @return {array} [success of operation, system's response]\n     */\n    amendAltitude(altitude) {\n        this._cruiseAltitude = altitude;\n\n        return [true, 'AMEND ALTITUDE'];\n    }\n\n    /**\n     * Generate a string to be used for the first row of a datablock\n     *\n     * @for RadarTargetModel\n     * @method buildDataBlockRowOne\n     * @returns {string}\n     */\n    buildDataBlockRowOne() {\n        let dataBlockRowOne = this.aircraftModel.callsign;\n\n        const wtc = Object.values(WAKE_TURBULENCE_CATEGORY).find((WTC) => WTC.LETTER === this.aircraftModel.model.weightClass) ??\n            { APPEND: false };\n\n        if (wtc.APPEND) {\n            // NOTE: using empty space before the letter on purpose so this gets rendered appropriately within a canvas\n            dataBlockRowOne += ` ${wtc.LETTER}`;\n        }\n\n        return dataBlockRowOne;\n    }\n\n    /**\n     * Generate a string to be used for the second row of a datablock\n     *\n     * @for RadarTargetModel\n     * @method buildDataBlockRowTwoPrimaryInfo\n     * @returns {string}\n     */\n    buildDataBlockRowTwoPrimaryInfo() {\n        const aircraftAltitude = round(this.aircraftModel.altitude / 100);\n        const aircraftSpeed = round(this.aircraftModel.groundSpeed / 10);\n\n        return `${leftPad(aircraftAltitude, 3)} ${leftPad(aircraftSpeed, 2)}`;\n    }\n\n    /**\n     * Generate a string to be used for the second row of a datablock\n     * when the timeshare section is active\n     *\n     * @for RadarTargetModel\n     * @method buildDataBlockRowTwoSecondaryInfo\n     * @returns {string}\n     */\n    buildDataBlockRowTwoSecondaryInfo() {\n        const paddedScratchPadText = _padEnd(\n            this.scratchPadText,\n            this._theme.DATA_BLOCK.SCRATCHPAD_CHARACTER_LIMIT,\n            ' '\n        );\n        const paddedAircraftModelIcao = _padEnd(\n            this.aircraftModel.model.icao.toUpperCase(),\n            this._theme.DATA_BLOCK.AIRCRAFT_MODEL_ICAO_CHARACTER_LIMIT,\n            ' '\n        );\n        const scratchPadText = paddedScratchPadText.slice(0, this._theme.DATA_BLOCK.SCRATCHPAD_CHARACTER_LIMIT);\n        const aircraftModelIcao = paddedAircraftModelIcao.slice(0, this._theme.DATA_BLOCK.AIRCRAFT_MODEL_ICAO_CHARACTER_LIMIT);\n\n        return `${scratchPadText} ${aircraftModelIcao}`;\n    }\n\n    /**\n     * Abstracts the math from the `CanvasController` used to determine\n     * where the center of a datablock should be located\n     *\n     * @param {number} leaderIntersectionWithBlock\n     */\n    calculateDataBlockCenter(leaderIntersectionWithBlock) {\n        const blockCenterOffset = {\n            ctr: [0, 0],\n            360: [0, -this._theme.DATA_BLOCK.HALF_HEIGHT],\n            45: [this._theme.DATA_BLOCK.HALF_WIDTH, -this._theme.DATA_BLOCK.HALF_HEIGHT],\n            90: [this._theme.DATA_BLOCK.HALF_WIDTH, 0],\n            135: [this._theme.DATA_BLOCK.HALF_WIDTH, this._theme.DATA_BLOCK.HALF_HEIGHT],\n            180: [0, this._theme.DATA_BLOCK.HALF_HEIGHT],\n            225: [-this._theme.DATA_BLOCK.HALF_WIDTH, this._theme.DATA_BLOCK.HALF_HEIGHT],\n            270: [-this._theme.DATA_BLOCK.HALF_WIDTH, 0],\n            315: [-this._theme.DATA_BLOCK.HALF_WIDTH, -this._theme.DATA_BLOCK.HALF_HEIGHT]\n        };\n        const leaderEndToBlockCenter = blockCenterOffset[this.dataBlockLeaderDirection];\n\n        return vadd(leaderIntersectionWithBlock, leaderEndToBlockCenter);\n    }\n\n    /**\n    * Mark this radar target as NOT being controlled by \"our\" ScopeModel\n    * Note that this will eventually be reworked so we can specify which\n    * scope has control, not just whether or not \"we\" do.\n    *\n    * @for RadarTargetModel\n    * @method markAsNotOurControl\n    */\n    markAsNotOurControl() {\n        this._isUnderOurControl = false;\n    }\n\n    /**\n     * Mark this radar target as being controlled by \"our\" ScopeModel\n     * Note that this will eventually be reworked so we can specify which\n     * scope has control, not just whether or not \"we\" do.\n     *\n     * @for RadarTargetModel\n     * @method markAsOurControl\n     */\n    markAsOurControl() {\n        this._isUnderOurControl = true;\n    }\n\n    /**\n     * Change the direction and/or length of the data block leader line\n     *\n     * @for RadarTargetModel\n     * @method moveDataBlock\n     * @param commandArguments {string}\n     * @return {array} [success of operation, system's response]\n     */\n    moveDataBlock(commandArguments) {\n        if (_isEmpty(commandArguments)) {\n            return [false, 'ERR: BAD SYNTAX'];\n        }\n\n        let desiredDirection = commandArguments;\n        let desiredLength = '';\n\n        if (commandArguments.indexOf(DATA_BLOCK_DIRECTION_LENGTH_SEPARATOR) !== INVALID_NUMBER) {\n            const argumentPieces = commandArguments.split(DATA_BLOCK_DIRECTION_LENGTH_SEPARATOR);\n            desiredDirection = parseInt(argumentPieces[0], DECIMAL_RADIX);\n            desiredLength = parseInt(argumentPieces[1], DECIMAL_RADIX);\n\n            if (_isEmpty(argumentPieces[0])) {\n                desiredDirection = '';\n            }\n        }\n\n        if (desiredLength > 6 || desiredLength < 0) {\n            return [false, 'ERR: LEADER LENGTH 0-6 ONLY'];\n        }\n\n        if (desiredDirection !== '' && !_isNaN(desiredDirection)) {\n            if (!_has(DATA_BLOCK_POSITION_MAP, desiredDirection)) {\n                return [false, 'ERR: BAD SYNTAX'];\n            }\n\n            this._dataBlockLeaderDirection = DATA_BLOCK_POSITION_MAP[desiredDirection];\n        }\n\n        if (desiredLength !== '' && !_isNaN(desiredLength)) {\n            this._dataBlockLeaderLength = desiredLength;\n        }\n\n        return [true, 'ADJUST DATA BLOCK'];\n    }\n\n    /**\n     * Clear any existing halo\n     *\n     * @for RadarTargetModel\n     * @method removeHalo\n     * @return {array} [success of operation, system's response]\n     */\n    removeHalo() {\n        if (!this.hasHalo) {\n            return;\n        }\n\n        this._haloRadius = INVALID_NUMBER;\n\n        return [true, 'TOGGLE HALO'];\n    }\n\n    /**\n     * Set the radius of the halo\n     *\n     * @for RadarTargetModel\n     * @method setHalo\n     * @param radius {number}\n     * @return {array} [success of operation, system's response]\n     */\n    setHalo(radius) {\n        if (!this.hasHalo) {\n            this._haloRadius = radius;\n\n            return [true, 'TOGGLE HALO'];\n        }\n\n        if (radius === this._haloRadius) {\n            return this.removeHalo();\n        }\n\n        this._haloRadius = radius;\n\n        return [true, 'ADJUST HALO'];\n    }\n\n    /**\n     * Set default value of the scratchpad\n     *\n     * @for RadarTargetModel\n     * @method setDefaultScratchpad\n     * @return {array} [success of operation, system's response]\n     */\n    setDefaultScratchpad() {\n        if (this.aircraftModel.isDeparture()) {\n            this.scratchPadText = this.aircraftModel.fms.getFlightPlanEntry();\n\n            return [true, 'RESET SCRATCHPAD'];\n        }\n\n        this.scratchPadText = this.aircraftModel.destination.substr(1, 3);\n\n        return [true, 'RESET SCRATCHPAD'];\n    }\n\n    /**\n     * Set the value of the scratchpad\n     *\n     * @for RadarTargetModel\n     * @method setScratchpad\n     * @param scratchPadText {string}\n     * @return {array} [success of operation, system's response]\n     */\n    setScratchpad(scratchPadText) {\n        this.scratchPadText = scratchPadText;\n\n        return [true, 'SET SCRATCHPAD'];\n    }\n\n    /**\n     * Change theme to the specified name\n     *\n     * This should ONLY be called through the EventBus during a `SET_THEME` event,\n     * thus ensuring that the same theme is always in use by all app components.\n     *\n     * This method must remain an arrow function in order to preserve the scope\n     * of `this`, since it is being invoked by an EventBus callback.\n     *\n     * @for RadarTargetModel\n     * @method _setTheme\n     * @param themeName {string}\n     */\n    _setTheme = (themeName) => {\n        if (!_has(THEME, themeName)) {\n            console.error(`Expected valid theme to change to, but received '${themeName}'`);\n\n            return;\n        }\n\n        this._theme = THEME[themeName];\n    };\n}\n","/* eslint-disable no-unused-vars */\nimport _has from 'lodash/has';\nimport _isNil from 'lodash/isNil';\nimport GameController from '../game/GameController';\nimport RadarTargetCollection from './RadarTargetCollection';\nimport EventBus from '../lib/EventBus';\nimport { EVENT } from '../constants/eventNames';\nimport { GAME_OPTION_NAMES } from '../constants/gameOptionConstants';\nimport { THEME } from '../constants/themes';\nimport { DECIMAL_RADIX } from '../utilities/unitConverters';\n\n/**\n * Scope belonging to a Player\n *\n * NOTE: Many methods are just placeholders for future use, hence why their params are commented out\n *\n * @class ScopeModel\n */\nexport default class ScopeModel {\n    /**\n     * @for ScopeModel\n     * @constructor\n     */\n    constructor() {\n        /**\n         * Local reference to the event bus\n         *\n         * @for ScopeModel\n         * @property _eventBus\n         * @type {EventBus}\n         * @private\n         */\n        this._eventBus = EventBus;\n\n        /**\n         * Length of PTL lines (aka \"vector lines\") for all aircraft\n         *\n         * @for ScopeModel\n         * @property _ptlLength\n         * @type {number} length in minutes\n         * @default 0\n         * @private\n         */\n        this._ptlLength = 0;\n\n        // TODO: Use this!\n        /**\n         * Collection of all sectors being controlled by this scope\n         *\n         * Currently set to null and not used. Is a placeholder for the\n         * forthcoming class `SectorCollection`.\n         *\n         * @for ScopeModel\n         * @property _sectorCollection\n         * @type {null}\n         * @private\n         */\n        this._sectorCollection = null;\n\n        /**\n         * Current theme\n         *\n         * @for ScopeModel\n         * @property _theme\n         * @type {object}\n         * @private\n         */\n        this._theme = THEME.DEFAULT;\n\n        /**\n         * Collection of all radar targets observed by this scope\n         *\n         * @for ScopeModel\n         * @property radarTargetCollection\n         * @type {RadarTargetCollection}\n         */\n        this.radarTargetCollection = new RadarTargetCollection(this._theme);\n\n        this.init()\n            .enable();\n    }\n\n    get ptlLength() {\n        return this._ptlLength;\n    }\n\n    // ------------------------------ LIFECYCLE ------------------------------\n\n    /**\n     * Complete initialization tasks\n     *\n     * @for ScopeModel\n     * @method init\n     * @chainable\n     */\n    init() {\n        return this;\n    }\n\n    /**\n    * Enable handlers\n    *\n    * @for ScopeModel\n    * @method enable\n    */\n    enable() {\n        this._eventBus.on(EVENT.SET_THEME, this._setTheme);\n    }\n\n    /**\n    * Disable handlers\n    *\n    * @for ScopeModel\n    * @method disable\n    */\n    disable() {\n        this._eventBus.off(EVENT.SET_THEME, this._setTheme);\n    }\n\n    // ------------------------------ PUBLIC ------------------------------\n\n    /**\n     * Accept a pending handoff from another sector\n     *\n     * NOTE: This is just a placeholder for future use, hence why the params are commented out\n     *\n     * @for ScopeModel\n     * @method acceptHandoff\n     * @param radarTargetModel {RadarTargetModel}\n     * @return result {array} [success of operation, system's response]\n     */\n    acceptHandoff(/* radarTargetModel */) {\n        return [false, 'acceptHandoff command not yet available'];\n    }\n\n    /**\n     * Amend the cruise altitude OR interim altitude for a given `RadarTargetModel`\n     *\n     * @for ScopeModel\n     * @method amendAltitude\n     * @param radarTargetModel {RadarTargetModel}\n     * @param altitude {string}\n     * @return result {array} [success of operation, system's response]\n     */\n    amendAltitude(radarTargetModel, altitude) {\n        altitude = parseInt(altitude, DECIMAL_RADIX);\n\n        return radarTargetModel.amendAltitude(altitude);\n    }\n\n    /**\n     * Increase or decrease the PTL length by one step\n     *\n     * @for ScopeModel\n     * @method changePtlLength\n     * @param {number} direction - either -1 or 1 to indicate increment direction\n     */\n    changePtlLength(direction) {\n        const validValues = GameController.getGameOption(GAME_OPTION_NAMES.PROJECTED_TRACK_LINE_LENGTHS)\n            .split('-')\n            .map((val) => parseFloat(val));\n        const currentIndex = validValues.indexOf(this._ptlLength);\n        const nextIndex = currentIndex + Math.sign(direction);\n\n        if (nextIndex >= validValues.length) {\n            return;\n        }\n\n        if (nextIndex < 0) {\n            this._ptlLength = 0;\n\n            this._eventBus.trigger(EVENT.MARK_SHALLOW_RENDER);\n\n            return;\n        }\n\n        this._ptlLength = validValues[nextIndex];\n\n        this._eventBus.trigger(EVENT.MARK_SHALLOW_RENDER);\n    }\n\n    /**\n     * Decrease the length of the PTL lines for all aircraft\n     *\n     * @for ScopeModel\n     * @method decreasePtlLength\n     */\n    decreasePtlLength() {\n        const direction = -1;\n\n        this.changePtlLength(direction);\n    }\n\n    /**\n     * Increase the length of the PTL lines for all aircraft\n     *\n     * @for ScopeModel\n     * @method increasePtlLength\n     */\n    increasePtlLength() {\n        const direction = 1;\n\n        this.changePtlLength(direction);\n    }\n\n    /**\n     * Initiate a handoff to another sector\n     *\n     * NOTE: This is just a placeholder for future use, hence why the params are commented out\n     *\n     * @for ScopeModel\n     * @method initiateHandoff\n     * @param radarTargetModel {RadarTargetModel}\n     * @param sectorCode {string} the handoff code for the receiving sector\n     * @return result {array} [success of operation, system's response]\n     */\n    initiateHandoff(/* radarTargetModel, sectorCode */) {\n        return [false, 'initiateHandoff command not yet available'];\n    }\n\n    /**\n     * Change direction and/or length of data block leader line\n     *\n     * @for ScopeModel\n     * @method moveDataBlock\n     * @param radarTargetModel {RadarTargetModel}\n     * @param commandArguments {string}\n     * @return result {array} [success of operation, system's response]\n     */\n    moveDataBlock(radarTargetModel, commandArguments) {\n        return radarTargetModel.moveDataBlock(commandArguments);\n    }\n\n    /**\n     * Toggle visibility of the data block of a given `RadarTargetModel`, on this\n     * sector's scope, or the scope of another sector\n     *\n     * NOTE: This is just a placeholder for future use, hence why the params are commented out\n     *\n     * @for ScopeModel\n     * @method propogateDataBlock\n     * @param radarTargetModel {RadarTargetModel}\n     * @param sectorCode {string} handoff code for the receiving sector\n     * @return result {array} [success of operation, system's response]\n     */\n    propogateDataBlock(/* radarTargetModel, sectorCode */) {\n        return [false, 'propogateDataBlock command not yet available'];\n    }\n\n    /**\n     * Amend the route stored in the scope for a given `RadarTargetModel`\n     *\n     * NOTE: This is just a placeholder for future use, hence why the params are commented out\n     *\n     * @for ScopeModel\n     * @method route\n     * @param radarTargetModel {RadarTargetModel}\n     * @param routeString {string}\n     * @return result {array} [success of operation, system's response]\n     */\n    route(/* radarTargetModel, routeString */) {\n        return [false, 'route command not yet available'];\n    }\n\n    /**\n     * Execute a scope command from a `ScopeCommandModel`\n     * @method runScopeCommand\n     * @param scopeCommandModel {ScopeCommandModel}\n     * @return result {array} [success of operation, system's response]\n     */\n    runScopeCommand(scopeCommandModel) {\n        const functionName = scopeCommandModel.commandFunction;\n        const functionArguments = scopeCommandModel.commandArguments;\n        const radarTargetModel = this.radarTargetCollection.findRadarTargetModelForAircraftReference(\n            scopeCommandModel.aircraftReference\n        );\n\n        if (!(functionName in this)) {\n            return [false, 'ERR: BAD SYNTAX'];\n        }\n\n        if (_isNil(radarTargetModel)) {\n            return [false, 'ERR: UNKNOWN AIRCRAFT'];\n        }\n\n        // call the appropriate function, and explode the array of arguments\n        // this allows any number of arguments to be accepted by the receiving method\n        return this[functionName](radarTargetModel, ...functionArguments);\n    }\n\n    /**\n     * Amend the scratchpad for a given `RadarTargetModel`\n     *\n     * @for ScopeModel\n     * @method setScratchpad\n     * @param radarTargetModel {RadarTargetModel}\n     * @param scratchPadText {string}\n     * @return result {array} [success of operation, system's response]\n     */\n    setScratchpad(radarTargetModel, scratchPadText) {\n        if (scratchPadText.length > 3) {\n            return [false, 'ERR: SCRATCHPAD MAX 3 CHAR'];\n        }\n\n        if (scratchPadText === '.') {\n            return radarTargetModel.setDefaultScratchpad();\n        }\n\n        return radarTargetModel.setScratchpad(scratchPadText.toUpperCase());\n    }\n\n    /**\n     * Toggle halo for a given `RadarTargetModel`\n     *\n     * @for ScopeModel\n     * @method setHalo\n     * @param radarTargetModel {RadarTargetModel}\n     * @return result {array} [success of operation, system's response]\n     */\n    setHalo(radarTargetModel, radius) {\n        const haloDefaultRadius = this._theme.SCOPE.HALO_DEFAULT_RADIUS_NM;\n        const haloMaxRadius = this._theme.SCOPE.HALO_MAX_RADIUS_NM;\n\n        if (radius <= 0) {\n            return [false, 'ERR: HALO SIZE INVALID'];\n        }\n\n        if (radius > haloMaxRadius) {\n            return [false, `ERR: HALO MAX ${haloMaxRadius} NM`];\n        }\n\n        if (!radius) {\n            radius = haloDefaultRadius;\n        }\n\n        return radarTargetModel.setHalo(radius);\n    }\n\n    // ------------------------------ PRIVATE ------------------------------\n\n    /**\n     * Change theme to the specified name\n     *\n     * This should ONLY be called through the EventBus during a `SET_THEME` event,\n     * thus ensuring that the same theme is always in use by all app components.\n     *\n     * This method must remain an arrow function in order to preserve the scope\n     * of `this`, since it is being invoked by an EventBus callback.\n     *\n     * @for ScopeModel\n     * @method _setTheme\n     * @param themeName {string}\n     */\n    _setTheme = (themeName) => {\n        if (!_has(THEME, themeName)) {\n            console.error(`Expected valid theme to change to, but received '${themeName}'`);\n\n            return;\n        }\n\n        this._theme = THEME[themeName];\n    }\n}\n","/* eslint-disable no-underscore-dangle, no-unused-vars, no-undef, global-require */\nimport $ from 'jquery';\nimport _get from 'lodash/get';\nimport _has from 'lodash/has';\nimport EventTracker from './EventTracker';\nimport { radio_heading, radio_altitude } from './utilities/radioUtilities';\nimport { STORAGE_KEY } from './constants/storageKeys';\nimport { SELECTORS } from './constants/selectors';\nimport {\n    VOICES,\n    LOWER_PITCH,\n    HIGHER_PITCH,\n    NORMAL_SPEED,\n    FASTER_SPEED\n} from './constants/speechConstants';\nimport { TRACKABLE_EVENT } from './constants/trackableEvents';\n\n/**\n *\n * @function speech_init\n */\nexport const speech_init = () => {\n    prop.speech = {};\n    prop.speech.synthesis = window.speechSynthesis;\n    prop.speech.enabled = false;\n\n    if (_get(localStorage, STORAGE_KEY.ATC_SPEECH_ENABLED, false) === true) {\n        prop.speech.enabled = true;\n        $(SELECTORS.DOM_SELECTORS.TOGGLE_SPEECH).addClass(SELECTORS.CLASSNAMES.ACTIVE);\n    }\n};\n\n/**\n *\n * @function randomizePilotVoice\n */\nexport const randomizePilotVoice = () => {\n    const voice = VOICES[Math.floor(Math.random() * VOICES.length)];\n    const pitch = (Math.random() * (LOWER_PITCH - HIGHER_PITCH) + HIGHER_PITCH).toFixed(1);\n    const rate = (Math.random() * (NORMAL_SPEED - FASTER_SPEED) + FASTER_SPEED).toFixed(3);\n\n    return {\n        voice,\n        pitch,\n        rate\n    };\n};\n\n/**\n *\n * @function speech_say\n * @param sentence\n */\nexport const speech_say = (sentence, pilotVoice) => {\n    if (prop.speech.synthesis != null && prop.speech.enabled) {\n        let textToSay = '';\n\n        for (let i = 0; i < sentence.length; i++) {\n            const singleSentence = sentence[i];\n\n            switch (singleSentence.type) {\n                case 'callsign':\n                    textToSay += ` ${singleSentence.content.getRadioCallsign()} `;\n                    break;\n                case 'altitude':\n                    textToSay += ` ${radio_altitude(singleSentence.content)} `;\n                    break;\n                case 'speed': case 'heading':\n                    textToSay += ` ${radio_heading(singleSentence.content)} `;\n                    break;\n                case 'text':\n                    textToSay += ` ${singleSentence.content} `;\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        const utterance = new SpeechSynthesisUtterance(textToSay); // make the object\n        utterance.lang = 'en-US'; // set the language\n        utterance.voice = prop.speech.synthesis.getVoices().filter((voice) => {\n            // set the voice\n            return voice.name === pilotVoice.voice;\n        })[0];\n        utterance.rate = pilotVoice.rate;\n        utterance.pitch = pilotVoice.pitch;\n\n        // say the words\n        prop.speech.synthesis.speak(utterance);\n    }\n};\n\n/**\n *\n * @function speech_toggle\n */\nexport const speech_toggle = () => {\n    const $speechToggleElement = $(SELECTORS.DOM_SELECTORS.TOGGLE_SPEECH);\n    prop.speech.enabled = !prop.speech.enabled;\n\n    if (!prop.speech.enabled) {\n        prop.speech.synthesis.cancel();\n    }\n\n    $speechToggleElement.toggleClass(SELECTORS.CLASSNAMES.ACTIVE);\n\n    localStorage[STORAGE_KEY.ATC_SPEECH_ENABLED] = prop.speech.enabled;\n    const hasClass = $speechToggleElement.hasClass(SELECTORS.CLASSNAMES.ACTIVE);\n\n    EventTracker.recordEvent(TRACKABLE_EVENT.OPTIONS, 'speech', `${hasClass}`);\n};\n","import _filter from 'lodash/filter';\nimport _forEach from 'lodash/forEach';\nimport _isNaN from 'lodash/isNaN';\nimport _random from 'lodash/random';\nimport BaseCollection from '../base/BaseCollection';\nimport SpawnPatternModel from './SpawnPatternModel';\nimport { FLIGHT_CATEGORY } from '../constants/aircraftConstants';\nimport { isEmptyOrNotObject } from '../utilities/validatorUtilities';\n\n/**\n * A collection of `SpawnPatternModel` objects\n *\n * @class SpawnPatternCollection\n * @extends BaseCollection\n */\nclass SpawnPatternCollection extends BaseCollection {\n    /**\n     * Public property that gives access to the current value of `_items`\n     *\n     * @property spawnPatternModels\n     * @type {array<SpawnPatternModel>}\n     */\n    get spawnPatternModels() {\n        return this._items;\n    }\n\n    /**\n     * All `SpawnPatternModel` objects categorized as `departure`\n     *\n     * Used for assembling preSpawn departures\n     *\n     * @property departureModels\n     * @return {array<SpawnPatternModel>}\n     */\n    get departureModels() {\n        return _filter(this._items, { category: FLIGHT_CATEGORY.DEPARTURE });\n    }\n\n    /**\n     * Lifecycle method. Should be run only once on instantiation.\n     *\n     * Set up the instance properties\n     *\n     * @for SpawnPatternCollection\n     * @method init\n     * @param airportJson {object}\n     */\n    init(airportJson) {\n        if (isEmptyOrNotObject(airportJson)) {\n            throw new TypeError('Invalid airportJson passed to SpawnPatternCollection.init. ' +\n                `Expected a non-empty object, but received ${typeof airportJson}`);\n        }\n\n        this._buildSpawnPatternModels(airportJson.spawnPatterns);\n    }\n\n    /**\n     * Loop through each item in the collection and call `.destroy()` on that model.\n     *\n     * Used when resetting the collection, like onAirportChange.\n     *\n     * @for SpawnPatternCollection\n     * @method reset\n     */\n    reset() {\n        _forEach(this._items, (spawnPatternModel) => {\n            spawnPatternModel.reset();\n\n            // ModelSourceFactory.returnModelToPool(spawnPatternModel);\n        });\n\n        this._items = [];\n    }\n\n    /**\n     * Loop through each item in the collection and reset the spaen rate.\n     *\n     * Used when resetting the rate in the traffic settings panel.\n     *\n     * @for SpawnPatternCollection\n     * @method resetRates\n     */\n    resetRates() {\n        this._items.forEach((spawnPatternModel) => {\n            spawnPatternModel.resetRate();\n        });\n    }\n\n    /**\n     * @for SpawnPatternCollection\n     * @method addItems\n     * @param items {array}\n     */\n    addItems(items = []) {\n        if (items.length === 0) {\n            return;\n        }\n\n        for (let i = 0; i < items.length; i++) {\n            const itemToAdd = items[i];\n\n            this.addItem(itemToAdd);\n        }\n    }\n\n    /**\n     * @for SpawnPatternCollection\n     * @method addItem\n     * @param item {SpawnPatternModel}\n     */\n    addItem(item) {\n        if (!(item instanceof SpawnPatternModel)) {\n            throw new TypeError('Only SpawnPatternModel objects can be added to the SpawnPatternCollection.');\n        }\n\n        this._items.push(item);\n    }\n\n    /**\n     * Gather a randomized list of departure `SpawnPatternModel` objects\n     * that will be created during the preSpawn.\n     *\n     * Clamps max at 5 patterns.\n     * Randomly selects departure patterns from a filtered list containing only departure patterns.\n     *\n     * This method should be called by the `SpawnScheduler` when preSpawning new\n     * aircraft on session start.\n     *\n     * @for SpawnPatternCollection\n     * @method getDepartureModelsForPreSpawn\n     * @return departureModelsForPreSpawn {array<SpawnPatternModel>}\n     */\n    getDepartureModelsForPreSpawn() {\n        const spawnPatternsByDepartureRunway = {};\n\n        // note this DOES NOT include patterns where the route doesn't specify the runway, because we can't\n        // deconflict them. Instead, we just don't prespawn those departures.\n        for (const spawnPattern of this.departureModels) {\n            const firstElement = spawnPattern.routeString.split('.')[0];\n\n            // if not in shape of `KSEA16L`, mark this spawn pattern as having an unknown runway assignment\n            if (firstElement.length < 5 || _isNaN(+firstElement[4])) {\n                if (!('unknownRunway' in spawnPatternsByDepartureRunway)) {\n                    spawnPatternsByDepartureRunway.unknownRunway = [];\n                }\n\n                spawnPatternsByDepartureRunway.unknownRunway.push(spawnPattern);\n\n                continue;\n            }\n\n            // else, we know we do have a route string which specifies the departure runway\n            const departureRunwayId = firstElement.substr(4);\n\n            if (!(departureRunwayId in spawnPatternsByDepartureRunway)) {\n                spawnPatternsByDepartureRunway[departureRunwayId] = [];\n            }\n\n            spawnPatternsByDepartureRunway[departureRunwayId].push(spawnPattern);\n        }\n\n        const spawnPatternsToPreSpawn = [];\n\n        // randomly select (while respecting spawn weighting) ONE departure\n        // pattern to pre-spawn for each departure runway detected\n        for (const runway of Object.keys(spawnPatternsByDepartureRunway)) {\n            if (runway === 'unknownRunway') {\n                if (Object.keys(spawnPatternsByDepartureRunway).length > 1) {\n                    continue; // if known AND unknown runways exist, ignore unknown\n                }\n                // else, NO runways are known, and all spawn patterns are via\n                // 'unknownRunway', in which case we will pick a pattern below.\n            }\n\n            // randomly choose a spawn pattern for this runway to prespawn\n            const spawnPatterns = spawnPatternsByDepartureRunway[runway].filter((p) => p.rate > 0);\n            const rateMap = spawnPatterns.map((pattern) => pattern.rate);\n            const rateTotal = spawnPatterns.reduce((sum, pattern) => sum + pattern.rate, 0);\n            const randomPosition = _random(rateTotal, true);\n            let position = 0;\n\n            for (let i = 0; i < rateMap.length; i++) {\n                const endOfThisRange = position + rateMap[i];\n\n                if (randomPosition <= endOfThisRange) {\n                    spawnPatternsToPreSpawn.push(spawnPatterns[i]);\n\n                    break;\n                }\n\n                position += rateMap[i];\n            }\n        }\n\n        return spawnPatternsToPreSpawn;\n    }\n\n    /**\n     * Gather a list of `SpawnPatternModel` objects by their flight category.\n     *\n     * @for SpawnPatternCollection\n     * @method findSpawnPatternsByCategory\n     * @param flightCategory {FLIGHT_CATEGORY}\n     * @return {array<SpawnPatternModel>}\n     */\n    findSpawnPatternsByCategory(flightCategory) {\n        return _filter(this._items, { category: flightCategory });\n    }\n\n    /**\n     * Loop through spawnPatterns, as defined in airport json, and create\n     * a `SpawnPatternModel` for each. Then add it to the collection.\n     *\n     * @for SpawnPatternCollection\n     * @method _buildSpawnPatternModels\n     * @param spawnPatterns {array<object>}\n     * @private\n     */\n    _buildSpawnPatternModels(spawnPatterns) {\n        _forEach(spawnPatterns, (spawnPattern) => {\n            const spawnPatternModel = new SpawnPatternModel(spawnPattern);\n\n            this.addItem(spawnPatternModel);\n        });\n    }\n}\n\nexport default new SpawnPatternCollection();\n","import _forEach from 'lodash/forEach';\nimport _get from 'lodash/get';\nimport _map from 'lodash/map';\nimport _isArray from 'lodash/isArray';\nimport _isEmpty from 'lodash/isEmpty';\nimport _random from 'lodash/random';\nimport _round from 'lodash/round';\nimport RouteModel from '../aircraft/FlightManagementSystem/RouteModel';\nimport AirportController from '../airport/AirportController';\nimport BaseModel from '../base/BaseModel';\nimport StaticPositionModel from '../base/StaticPositionModel';\nimport { buildPreSpawnAircraft } from './buildPreSpawnAircraft';\nimport { spawnPatternModelJsonValidator } from './spawnPatternModelJsonValidator';\nimport { tau } from '../math/circle';\nimport { FLIGHT_CATEGORY } from '../constants/aircraftConstants';\nimport { AIRPORT_CONSTANTS } from '../constants/airportConstants';\nimport {\n    INVALID_NUMBER,\n    TIME\n} from '../constants/globalConstants';\nimport {\n    convertMinutesToSeconds,\n    DECIMAL_RADIX\n} from '../utilities/unitConverters';\n\n// TODO: this may need to live somewhere else\n/**\n * @property SPAWN_METHOD\n * @type {Object}\n * @final\n */\nconst SPAWN_METHOD = {\n    RANDOM: 'random',\n    CYCLIC: 'cyclic',\n    SURGE: 'surge',\n    WAVE: 'wave'\n};\n\n/**\n * Defines a spawn pattern for a specific route within the area\n *\n * This same structure is used to define departures and arrivals\n * and is used by the `SpawnScheduler` to instantiate new `AircraftModel`\n * objects.\n *\n * This class will expect data in the following shape:\n * ```javascript\n * // Departures\n * {\n *    \"origin\": \"KLAS\",\n *    \"destination\": \"\",\n *    \"category\": \"departure\",\n *    \"route\": \"KLAS.BOACH6.HEC\",\n *    \"altitude\": \"\",\n *    \"speed\": \"\",\n *    \"method\": \"random\",\n *    \"rate\": 5,\n *    \"airlines\": [\n *        [\"aal\", 10],\n *        [\"ual\", 10],\n *        [\"ual/long\", 3]\n *    ]\n * }\n *\n * // Arrivals\n * {\n *   \"origin\": \"\",\n *   \"destination\": \"KLAS\",\n *   \"category\": \"arrival\",\n *   \"route\": \"BETHL.GRNPA1.KLAS\",\n *   \"altitude\": [30000, 40000],\n *   \"speed\": 320,\n *   \"method\": \"cyclic\",\n *   \"rate\": 17.5,\n *   \"period\": 75,\n *   \"offset\": 25,\n *   \"airlines\": [\n *       [\"aal\", 10],\n *       [\"ual\", 10],\n *       [\"ual/long\", 3]\n *   ]\n * }\n * ```\n * additional information on `spawnPatterns` can be found in the\n * [spawnPatternReadme](https://github.com/ATSSIM/openscope/tree/develop/documentation/spawnPatternReadme.md)\n *\n * @class SpawnPatternModel\n * @extends BaseModel\n */\nexport default class SpawnPatternModel extends BaseModel {\n    /**\n     * @constructor\n     * @for SpawnPatternModel\n     * @param spawnPatternJson {object}\n     */\n    // istanbul ignore next\n    constructor(spawnPatternJson) {\n        super('spawnPatternModel');\n\n        /**\n         * Schedule reference id\n         *\n         * Stored here so a specific interval can be associated with a\n         * specfic `SpawnPatternModel` instance. An Interval may be reset\n         * or changed during the life of the app.\n         *\n         * Provides easy access to a specific scheduleId\n         *\n         * @property scheduleId\n         * @type {number}\n         * @default INVALID_NUMBER\n         * @private\n         */\n        this.scheduleId = INVALID_NUMBER;\n\n        /**\n         * One of `FLIGHT_CATEGORY`\n         *\n         * @property category\n         * @type {string}\n         * @default ''\n         */\n        this.category = '';\n\n        /**\n         * Type of arrival or departure pattern\n         *\n         * Could be `random`, `cyclic`, `surge` or `wave`\n         *\n         * @property type\n         * @type {string}\n         * @default ''\n         */\n        this.method = '';\n\n        /**\n         * List of possible airlines a spawning aircraft can belong to.\n         *\n         * @property airlines\n         * @type {array<string>}\n         * @default []\n         */\n        this.airlines = [];\n\n        /**\n         * List of airlines enumerated by weight\n         *\n         * In english, if the value of `this.airlines` was:\n         * ```\n         * [\n         *     ['aal', 5],\n         *     ['ual', 2]\n         * ]\n         * ```\n         * This property would have a length of 7, with 5 entires of `aal` and two entries of `ual`.\n         * The reason for this is to provide an easy way to find a weighted value. Now all we need is\n         * a random index and the value located at that index.\n         *\n         * @property _weightedAirlineList\n         * @type {array}\n         * @default []\n         */\n        this._weightedAirlineList = [];\n\n        /**\n         * Aircraft to spawn on airport load\n         *\n         * This list is evaluated by the `SpawnScheduler` when setting up\n         * schedules for each `SpawnPatternModel`.\n         *\n         * @property preSpawnAircraftList\n         * @type {array<object>}\n         * @default []\n         */\n        this.preSpawnAircraftList = [];\n\n        /**\n         * A local copy of the `RouteModel` that will exist in all aircraft spawned\n         * from this spawn pattern. Note that this property IS NOT transferred or\n         * copied or anything like that during aircraft spawn, but rather is included\n         * here so we can ask questions about the route related to HOW we spawn traffic.\n         *\n         * @for SpawnPatternModel\n         * @property _routeModel\n         * @type {RouteModel}\n         */\n        this._routeModel = null;\n\n        // SPAWNING AIRCRAFT PROPERTIES\n\n        /**\n         * The airport this pattern begins at\n         *\n         * @property origin\n         * @type {string}\n         * @default ''\n         */\n        this.origin = '';\n\n        /**\n         * The airport icao id this pattern's aircraft will land at\n         * or the procedure name the aircraft is departing with\n         *\n         * @property destination\n         * @type {string}\n         * @default ''\n         */\n        this.destination = '';\n\n        /**\n         * String representation of a `StandardRoute` or a list of fixes\n         *\n         * @property routeString\n         * @type {string}\n         * @default\n         */\n        this.routeString = '';\n\n        /**\n         * Object defining runway specific commands to send to an aircraft at spawn time\n         *\n         * @property commands\n         * @type {object}\n         * @default\n         */\n        this.commands = {};\n\n        /**\n         * List of fixes to follow on spawn.\n         *\n         * This property will be set to an array of strings representing\n         * fixnames. this is only used when a DirectRouteString has been\n         * passed for the route parameter.\n         *\n         * @property waypoints\n         * @type {array<string>}\n         * @default []\n         */\n        this.waypoints = [];\n\n        /**\n         * Lowest altitude an aircraft can spawn at\n         *\n         * @property _minimumAltitude\n         * @type {number}\n         * @default INVALID_NUMBER\n         * @private\n         */\n        this._minimumAltitude = INVALID_NUMBER;\n\n        /**\n         * Highest altitude an aircraft can spawn at\n         *\n         * @property _maximumAltitude\n         * @type {number}\n         * @default INVALID_NUMBER\n         * @private\n         */\n        this._maximumAltitude = INVALID_NUMBER;\n\n        /**\n         * Speed of spawning aircraft\n         *\n         * @property speed\n         * @type {number}\n         * @default 0\n         */\n        this.speed = 0;\n\n        /**\n         * Heading of a spawning aircraft\n         *\n         * @property heading\n         * @type {number}\n         * @default -999\n         */\n        this.heading = -999;\n\n        /**\n         * Initial position of a spawning aircraft\n         *\n         * @property _positionModel\n         * @type {StaticPositionModel}\n         * @default null\n         */\n        this._positionModel = null;\n\n        // SPAWN PATTERN PROPERTIES\n\n        /**\n         * Rate at which aircaft spawn, express in aircraft per hour\n         *\n         * @property rate\n         * @type {number}\n         * @default INVALID_NUMBER\n         */\n        this.rate = INVALID_NUMBER;\n\n        /**\n         * Rate at which aircaft spawn, express in aircraft per hour\n         * Used to preserve initial configuration\n         *\n         * @property defaultRate\n         * @type {number}\n         * @default INVALID_NUMBER\n         */\n        this.defaultRate = INVALID_NUMBER;\n\n        /**\n         * GameTime when a specific spawn pattern started\n         *\n         * Used only for cycle, surge and wave patterns\n         *\n         * @property cycleStartTime\n         * @type {number}\n         * @default INVALID_NUMBER\n         */\n        this.cycleStartTime = INVALID_NUMBER;\n\n        /**\n         * Used only with cycle, surge or wave spawnPatters\n         *\n         * Shifts the pattern to a different part of the cycle\n         *\n         * @property offset\n         * @type {number}\n         * @default INVALID_NUMBER\n         */\n        this.offset = INVALID_NUMBER;\n\n        /**\n         * Used only with cycle, surge or wave spawnPatters\n         *\n         * Length of a pattern cycle\n         *\n         * @property period\n         * @type {number}\n         * @default INVALID_NUMBER\n         */\n        this.period = INVALID_NUMBER;\n\n        /**\n         * Used only with cycle, surge or wave spawnPatters\n         *\n         * @property variation\n         * @type {number}\n         * @default INVALID_NUMBER\n         */\n        this.variation = INVALID_NUMBER;\n\n        /**\n         * Miles entrail during the surge [fast, slow]\n         *\n         * Used only for `surge` spawn patterns. set as a class\n         * property to allow maintainence of state between spawns\n         *\n         * @property entrail\n         * @type {number}\n         * @default\n         */\n        this.entrail = [5.5, 10];\n\n        /**\n         * calculated arrival rate when \"in the surge\"\n         *\n         * Used only for `surge` spawn patterns. set as a class\n         * property to allow maintainence of state between spawns\n         *\n         * @property _aircraftPerHourUp\n         * @type {number}\n         * @default INVALID_NUMBER\n         * @private\n         */\n        this._aircraftPerHourUp = INVALID_NUMBER;\n\n        /**\n         * calculated arrival rate when not \"in the surge\"\n         *\n         * Used only for `surge` spawn patterns. set as a class\n         * property to allow maintainence of state between spawns\n         *\n         * @property _aircraftPerHourDown\n         * @type {number}\n         * @default INVALID_NUMBER\n         * @private\n         */\n        this._aircraftPerHourDown = INVALID_NUMBER;\n\n        /**\n         * Calculated time length of surge, in minutes\n         *\n         * Used only for `surge` spawn patterns. set as a class\n         * property to allow maintainence of state between spawns\n         *\n         * @property _uptime\n         * @type {number}\n         * @default INVALID_NUMBER\n         * @private\n         */\n        this._uptime = INVALID_NUMBER;\n\n        this.init(spawnPatternJson);\n    }\n\n    /**\n     * The spawn pattern's id\n     *\n     * @property id\n     * @return {string}\n     */\n\n    get id() {\n        return this._id;\n    }\n\n    /**\n     * List of airline icaos for this spawnPattern\n     *\n     * @property airlineList\n     * @return {array<string>}\n     */\n    get airlineList() {\n        return _map(this.airlines, (airline) => airline.name);\n    }\n\n    /**\n     * Convenience getter used for `EventTracker`\n     *\n     * This getter *should not* be used in code for\n     * anything other than event tracking\n     *\n     * @property airportIcao\n     * @return string\n     */\n    get airportIcao() {\n        if (this.isOverflight()) {\n            return 'overflight';\n        }\n\n        return this.isArrival()\n            ? this.destination\n            : this.origin;\n    }\n\n    /**\n     * Initial altitude of a spawning aircraft\n     *\n     * value rounded to the nearest thousandth foot\n     *\n     * @property altitude\n     * @return {number}\n     */\n    get altitude() {\n        const altitude = _random(this._minimumAltitude, this._maximumAltitude);\n\n        return _round(altitude, -3);\n    }\n\n    /**\n     * Provide read-only public access to this._positionModel\n     *\n     * @for SpawnPatternModel\n     * @property positionModel\n     * @type {StaticPositionModel}\n     */\n    get positionModel() {\n        return this._positionModel;\n    }\n\n    /**\n     * Facade to access relative position\n     *\n     * @for SpawnPatternModel\n     * @property relativePosition\n     * @type {array<number>} [kilometersNorth, kilometersEast]\n     */\n    get relativePosition() {\n        return this._positionModel.relativePosition;\n    }\n\n    /**\n     * Lifecycle method. Should be run only once on instantiation.\n     *\n     * Set up the instance properties\n     *\n     * This is a pooled object so we verify essential parameters\n     * here instead of the constructor\n     *\n     * @for SpawnPatternModel\n     * @method init\n     * @param spawnPatternJson {object}\n     */\n    init(spawnPatternJson) {\n        // We return early here if the object is empty because we pre-hydrate objects in the `ModelSourcePool`\n        if (_isEmpty(spawnPatternJson)) {\n            return;\n        }\n\n        if (!spawnPatternModelJsonValidator(spawnPatternJson)) {\n            console.error('### Invalid spawnPatternJson received', spawnPatternJson);\n        }\n\n        this.origin = spawnPatternJson.origin;\n        this.destination = spawnPatternJson.destination;\n        this.category = spawnPatternJson.category;\n        this.routeString = spawnPatternJson.route;\n        this.commands = spawnPatternJson.commands;\n        this.speed = this._extractSpeedFromJson(spawnPatternJson);\n        this.method = spawnPatternJson.method;\n        this.rate = parseFloat(spawnPatternJson.rate);\n        this.defaultRate = this.rate;\n        this.entrail = _get(spawnPatternJson, 'entrail', this.entrail);\n\n        this._routeModel = new RouteModel(spawnPatternJson.route);\n        this.cycleStartTime = 0;\n        this.period = TIME.ONE_HOUR_IN_SECONDS / 2;\n        this._positionModel = this._generateSelfReferencedAirportPositionModel();\n        this.airlines = this._assembleAirlineNamesAndFrequencyForSpawn(spawnPatternJson.airlines);\n        this._weightedAirlineList = this._buildWeightedAirlineList();\n        this.preSpawnAircraftList = this._buildPreSpawnAircraft(spawnPatternJson);\n\n        this._calculateSurgePatternInitialDelayValues(spawnPatternJson);\n        this._setCyclePeriodAndOffset(spawnPatternJson);\n        this._initializePositionAndHeadingForAirborneAircraft(spawnPatternJson);\n        this._setMinMaxAltitude(spawnPatternJson.altitude);\n    }\n\n    /**\n     * Destroy the current instance properties\n     *\n     * Useful when changing airports\n     *\n     * @for SpawnPatternModel\n     * @method reset\n     */\n    reset() {\n        this.scheduleId = INVALID_NUMBER;\n        this.category = '';\n        this.method = '';\n        this.origin = '';\n        this.destination = '';\n        this.routeString = '';\n        this.commands = {};\n        this._minimumAltitude = INVALID_NUMBER;\n        this._maximumAltitude = INVALID_NUMBER;\n        this.speed = 0;\n        this.heading = INVALID_NUMBER;\n        this._positionModel = null;\n\n        this.cycleStartTime = INVALID_NUMBER;\n        this.rate = INVALID_NUMBER;\n        this.offset = INVALID_NUMBER;\n        this.period = INVALID_NUMBER;\n        this.variation = INVALID_NUMBER;\n\n        this.airlines = [];\n        this._weightedAirlineList = [];\n        this.preSpawnAircraftList = [];\n    }\n\n    /**\n     * Reset the spawn rate to the value found in the Airport Json\n     *\n     * @for SpawnPatternModel\n     * @method resetRate\n     */\n    resetRate() {\n        this.rate = this.defaultRate;\n    }\n\n    /**\n     * Sets the `cycleStart` property with the value of the gameClock when the first\n     * timer for this pattern is run by the `SpawnScheduler`\n     *\n     * Used to calculate cycle, wave and surge spawn patterns\n     *\n     * @for SpawnPatternModel\n     * @method cycleStart\n     * @param startTime {number}\n     */\n    cycleStart(startTime) {\n        if (this.cycleStartTime !== INVALID_NUMBER) {\n            return;\n        }\n\n        this.cycleStartTime = startTime - this.offset;\n    }\n\n    /**\n     * Return a random value from `_weightedAirlineList`\n     *\n     * Used for spawning arrival aircraft that do not yet have an assigned airline\n     *\n     * @for SpawnPatternModel\n     * @method getRandomAirlineForSpawn\n     * @return {string}\n     */\n    getRandomAirlineForSpawn() {\n        const index = this._findRandomIndexForList(this._weightedAirlineList);\n        const airlineId = this._weightedAirlineList[index];\n\n        return airlineId;\n    }\n\n    /**\n     * Return a number to use for the next delay period calculated based\n     * on spawning method.\n     *\n     * This is the value that will be used by the `SpawnScheduler` when\n     * when creating a new spawn interval.\n     *\n     * @for SpawnPatternModel\n     * @method getNextDelayValue\n     * @param gameTime {number}\n     * @return {number}  Next delay period based on spawn method in seconds\n     */\n    getNextDelayValue(gameTime = 0) {\n        switch (this.method) {\n            case SPAWN_METHOD.RANDOM:\n                return this._calculateRandomDelayPeriod();\n            case SPAWN_METHOD.CYCLIC:\n                return this._calculateNextCyclicDelayPeriod(gameTime);\n            case SPAWN_METHOD.SURGE:\n                return this._calculateNextSurgeDelayPeriod(gameTime);\n            case SPAWN_METHOD.WAVE:\n                return this._calculateNextWaveDelayPeriod(gameTime);\n            default:\n                break;\n        }\n    }\n\n    /**\n     * Used to determine if this spawn pattern will spawn aircraft in the air instead of on the ground\n     *\n     * @for SpawnPatternModel\n     * @method isAirborneAtSpawn\n     * @return {boolean}\n     */\n    isAirborneAtSpawn() {\n        return this.isArrival() || this.isOverflight();\n    }\n\n    /**\n     * Used to determine if this spawn pattern is for an arrival\n     *\n     * @for SpawnPatternModel\n     * @method isArrival\n     * @return {boolean}\n     */\n    isArrival() {\n        return this.category === FLIGHT_CATEGORY.ARRIVAL;\n    }\n\n    /**\n     * Used to determine if this spawn pattern is for an departing aircraft\n     *\n     * @for SpawnPatternModel\n     * @method isDeparture\n     * @return {boolean}\n     */\n    isDeparture() {\n        return this.category === FLIGHT_CATEGORY.DEPARTURE;\n    }\n\n    /**\n     * Used to determine if this spawn pattern is for an overflight\n     *\n     * @for SpawnPatternModel\n     * @method isOverflight\n     * @return {boolean}\n     */\n    isOverflight() {\n        return this.category === FLIGHT_CATEGORY.OVERFLIGHT;\n    }\n\n    /**\n     * Use the supplied aircraft controller to generate prespawned aircraft using this model\n     *\n     * @for SpawnPatternModel\n     * @method createPreSpawnAircraft\n     * @param aircraftController {AircraftController}\n     */\n    createPreSpawnAircraft(aircraftController) {\n        if (this.preSpawnAircraftList.length === 0) {\n            this.preSpawnAircraftList = this._buildPreSpawnAircraft(this);\n        }\n\n        if (this.isAirborneAtSpawn() && this.preSpawnAircraftList.length > 0) {\n            aircraftController.createPreSpawnAircraftWithSpawnPatternModel(this);\n        }\n    }\n\n    /**\n     *\n     *\n     * @for SpawnPatternModel\n     * @method _calculateSurgePatternInitialDelayValues\n     * @param spawnPatternJson {object}\n     * @private\n     */\n    _calculateSurgePatternInitialDelayValues(spawnPatternJson) {\n        if (spawnPatternJson.method !== SPAWN_METHOD.SURGE) {\n            return;\n        }\n\n        this._aircraftPerHourUp = this.speed / this.entrail[0];\n        this._aircraftPerHourDown = this.speed / this.entrail[1]; // to help the uptime calculation\n\n        // TODO: move this calculation out to a helper function or class method\n        this.uptime = (this.period * this.rate - this.period * this._aircraftPerHourDown) /\n            (this._aircraftPerHourUp - this._aircraftPerHourDown);\n        this.uptime -= this.uptime % (TIME.ONE_HOUR_IN_SECONDS / this._aircraftPerHourUp);\n\n        // TODO: abstract to helper\n        // adjust to maintain correct acph rate\n        const averageSpawnRate = this.rate * this.period * TIME.ONE_SECOND_IN_HOURS;\n        const elevatedSpawnRate = this._aircraftPerHourUp * this.uptime * TIME.ONE_SECOND_IN_HOURS;\n        const downTime = this.period - this.uptime;\n        const hoursSpentAtReducedSpawnRate = downTime * TIME.ONE_SECOND_IN_HOURS;\n        const reducedSpawnRate = (averageSpawnRate - elevatedSpawnRate) * hoursSpentAtReducedSpawnRate;\n\n        this._aircraftPerHourDown = reducedSpawnRate;\n\n        // TODO: abstract this if/else block to helper method\n        // Verify we can comply with the requested arrival rate based on entrail spacing\n        if (this.rate > this._aircraftPerHourUp) {\n            console.warn('TOO MANY ARRIVALS IN SURGE! Requested: ' +\n                `${this.rate} acph | Acceptable Range for requested entrail distance: ` +\n                `${Math.ceil(this._aircraftPerHourDown)} acph - ${Math.floor(this._aircraftPerHourUp)} acph`);\n\n            this.rate = this._aircraftPerHourUp;\n            this._aircraftPerHourDown = this._aircraftPerHourUp;\n        } else if (this.rate < this._aircraftPerHourDown) {\n            console.warn('TOO FEW ARRIVALS IN SURGE! Requested: ' +\n                `${this.rate} acph | Acceptable Range for requested entrail distance: ` +\n                `${Math.ceil(this._aircraftPerHourDown)} acph - ${Math.floor(this._aircraftPerHourUp)} acph`);\n\n            this.rate = this._aircraftPerHourDown;\n            this._aircraftPerHourUp = this._aircraftPerHourDown;\n        }\n    }\n\n    /**\n     *\n     *\n     * @for SpawnPatternModel\n     * @method _setCyclePeriodAndOffset\n     * @param spawnPatternJson {object}\n     * @private\n     */\n    _setCyclePeriodAndOffset(spawnPatternJson) {\n        const offset = _get(spawnPatternJson, 'offset', 0);\n        const period = _get(spawnPatternJson, 'period', null);\n\n        this.offset = convertMinutesToSeconds(offset);\n        this.period = period ?\n            convertMinutesToSeconds(period) :\n            this.period;\n        this.variation = _get(spawnPatternJson, 'variation', 0);\n    }\n\n    /**\n     * Sets `_minimumAltitude` and `_maximumAltitude` from a provided altitude.\n     *\n     * Altitude may be a single number or a range, expressed as: `[min, max]`.\n     * This method handles that variation and sets the instance properties with\n     * the correct values.\n     *\n     * @for SpawnPatternModel\n     * @method _setMinMaxAltitude\n     * @param altitude {array|number}\n     * @private\n     */\n    _setMinMaxAltitude(altitude) {\n        if (_isArray(altitude)) {\n            const [min, max] = altitude;\n\n            this._minimumAltitude = parseInt(min, DECIMAL_RADIX);\n            this._maximumAltitude = parseInt(max, DECIMAL_RADIX);\n\n            return;\n        }\n\n        this._minimumAltitude = parseInt(altitude, DECIMAL_RADIX);\n        this._maximumAltitude = parseInt(altitude, DECIMAL_RADIX);\n    }\n\n    /**\n     *\n     *\n     * @for SpawnPatternModel\n     * @method _calculateRandomDelayPeriod\n     * @return {number}\n     * @private\n     */\n    _calculateRandomDelayPeriod() {\n        const minimumDelay = this._calculateMinimumDelayFromSpeed();\n        const averageDelay = TIME.ONE_HOUR_IN_SECONDS / this.rate;\n\n        if (averageDelay < minimumDelay) {\n            console.error(`Too many aircraft requested on spawn pattern \"${this.routeString}\"`);\n\n            return minimumDelay;\n        }\n\n        const delayVariation = averageDelay - minimumDelay;\n        const maximumDelay = averageDelay + delayVariation;\n\n        return _random(minimumDelay, maximumDelay);\n    }\n\n    /**\n     * @for SpawnPatternModel\n     * @method _calculateMinimumDelayFromSpeed\n     * @return {number}  number to use as a delay period for the next delay\n     * @private\n     */\n    _calculateMinimumDelayFromSpeed() {\n        if (this.speed === 0) {\n            return 0;\n        }\n\n        return Math.floor(AIRPORT_CONSTANTS.MIN_ENTRAIL_DISTANCE_NM * (TIME.ONE_HOUR_IN_SECONDS / this.speed));\n    }\n\n    /**\n     * Calculates the correct delay period to create arrivals in a cyclic pattern.\n     *\n     * Rate at which the arrival rate increases or decreases remains constant throughout the cycle.\n     *\n     * |---o---------------o---------------o---------------o-----------| < - - - - - - max arrival rate\n     * | o   o           o   o           o   o           o   o         |   +variation\n     * o-------o-------o-------o-------o-------o-------o-------o-------o < - - - - - - avg arrival rate\n     * |         o   o |         o   o           o   o           o   o |   -variation\n     * |-----------o---|-----------o---------------o---------------o---| < - - - - - - min arrival rate\n     * |<---period---->|           |<---period---->|\n     *\n     *\n     * @for SpawnPatternModel\n     * @method _calculateNextCyclicDelayPeriod\n     * @param gameTime {number} current gameTime\n     * @return {number}         number to use as a delay period for the next delay\n     * @private\n     */\n    _calculateNextCyclicDelayPeriod(gameTime) {\n        const totalTime = gameTime - this.cycleStartTime;\n        const progressInPeriod = totalTime / (this.period / 4);\n\n        if (progressInPeriod >= 4) {\n            this.cycleStartTime += this.period;\n\n            return TIME.ONE_HOUR_IN_SECONDS / (this.rate + (progressInPeriod - 4) * this.variation);\n        }\n\n        if (progressInPeriod <= 1) {\n            return TIME.ONE_HOUR_IN_SECONDS / (this.rate + progressInPeriod * this.variation);\n        }\n\n        if (progressInPeriod <= 2) {\n            return TIME.ONE_HOUR_IN_SECONDS / (this.rate + (2 * (this.period - 2 * totalTime) / this.period) * this.variation);\n        }\n\n        if (progressInPeriod <= 3) {\n            return TIME.ONE_HOUR_IN_SECONDS / (this.rate - (progressInPeriod - 2) * this.variation);\n        }\n\n        if (progressInPeriod < 4) {\n            return TIME.ONE_HOUR_IN_SECONDS / (this.rate - (4 * (this.period - totalTime) / this.period) * this.variation);\n        }\n    }\n\n    /**\n     * Calculate a delay period that goes from very low and steeply increases to a\n     * sustained arrival surge of densely packed aircraft.\n     *\n     * Example airport: `EDDT - Berlin Tegel Airport`\n     *\n     * o o o o o o o o o o - - - - - - - - - - - o o o o o o o o o o-----+ < - - - max arrival rate ( *this.factor)\n     * o                 o                       o                 o     |\n     * o                 o                       o                 o     |   x(this.factor)\n     * o                 o                       o                 o     |\n     * o - - - - - - - - o o o o o o o o o o o o o - - - - - - - - o o o-+ < - - - min arrival rate (n)\n     * |<--- up time --->|<----- down time ----->|<--- up time --->|\n     *\n     * @for SpawnPatternModel\n     * @method _calculateNextSurgeDelayPeriod\n     * @param gameTime {number} current gameTime\n     * @return {number}         number to use as a delay period for the next delay\n     * @private\n     */\n    _calculateNextSurgeDelayPeriod(gameTime) {\n        const totalTime = gameTime - this.cycleStartTime;\n        const progressInPeriod = totalTime / this.period; // progress in period\n        const intervalUp = TIME.ONE_HOUR_IN_SECONDS / this._aircraftPerHourUp;\n        const intervalDown = TIME.ONE_HOUR_IN_SECONDS / this._aircraftPerHourDown;\n        // reduced spawn rate\n        const timeRemaining = this.period - totalTime;\n\n        if (progressInPeriod >= 1) {\n            this.cycleStartTime += this.period;\n\n            return intervalUp;\n        }\n\n        // elevated spawn rate\n        if (totalTime <= this.uptime) {\n            return intervalUp;\n        }\n\n        if (timeRemaining > intervalDown + intervalUp) {\n            // plenty of time until new period\n            return intervalDown;\n        }\n\n        if (timeRemaining > intervalDown) {\n            // next plane will delay the first arrival of the next period\n            return intervalDown - (totalTime + intervalDown + intervalUp - this.period);\n        }\n\n        // next plane is first of elevated spawn rate\n        this.cycleStartTime += this.period;\n\n        return intervalUp;\n    }\n\n    /**\n     * Calculate a delay period that will increase and decrease faster when changing between the lower/higher rates.\n     *\n     * ------------o-o-o---------------------------------------+-----------o-o < - - - - - max arrival rate\n     *        o             o                                  |      o      |       ^\n     *    o                     o                              |  o          |  +variation\n     *  o                         o                            |o            |       v\n     * o-------------------------- o---------------------------o-------------+ < - - - - - avg arrival rate\n     * |                            o                         o|             |       ^\n     * |                              o                     o  |             |  -variation\n     * |                                  o             o      |             |       v\n     * +---------------------------------------o-o-o-----------+-------------+ < - - - - - min arrival rate\n     * |                                                       |\n     * |<  -  -  -  -  -  -  -  - period -  -  -  -  -  -  -  >|\n     *\n     *\n     * @for SpawnPatternModel\n     * @method _calculateNextWaveDelayPeriod\n     * @param gameTime {number} current gameTime\n     * @return {number}         number to use as a delay period for the next delay\n     * @private\n     */\n    _calculateNextWaveDelayPeriod(gameTime) {\n        const t = gameTime - this.cycleStartTime;\n        const progressInPeriod = t / this.period;\n\n        if (progressInPeriod >= 1) {\n            this.cycleStartTime += this.period;\n        }\n\n        const rate = this.rate + this.variation * Math.sin(progressInPeriod * tau());\n\n        return TIME.ONE_HOUR_IN_SECONDS / rate;\n    }\n\n    /**\n     * Abstracted boolean logic used to determine if a category is valid.\n     *\n     * @for SpawnPatternModel\n     * @method _isValidCategory\n     * @param _isValidCategory {string}\n     * @return {boolean}\n     * @private\n     */\n    _isValidCategory(category) {\n        return category === FLIGHT_CATEGORY.ARRIVAL ||\n            category === FLIGHT_CATEGORY.DEPARTURE ||\n            category === FLIGHT_CATEGORY.OVERFLIGHT;\n    }\n\n    /**\n     * Returns a random index number for an array\n     *\n     * @for SpawnPatternModel\n     * @method _findRandomIndexForList\n     * @param list {array}\n     * @return {number}\n     * @private\n     */\n    _findRandomIndexForList(list) {\n        return _random(0, list.length - 1);\n    }\n\n    /**\n     * When `speed` is null, return 0 otherwise the specified speed value\n     *\n     * @for SpawnPatternModel\n     * @method _extractSpeedFromJson\n     * @param spawnPatternJson {object}\n     * @return {number}\n     */\n    _extractSpeedFromJson(spawnPatternJson) {\n        if (!spawnPatternJson.speed) {\n            return 0;\n        }\n\n        return parseInt(spawnPatternJson.speed, DECIMAL_RADIX);\n    }\n\n    /**\n     * Loops through defined airlines for the spawn pattern and transforms them from array values\n     * to an object with meaningful keys.\n     *\n     * The result is used internally to build the `weightedAirlineList`.\n     *\n     * In the future the assembled object could, itself, be a defined model object\n     *\n     * @for SpawnPatternModel\n     * @method _assembleAirlineNamesAndFrequencyForSpawn\n     * @param spawnPatternAirlines {array<array>}\n     * @return {array<object>}\n     * @private\n     */\n    _assembleAirlineNamesAndFrequencyForSpawn(spawnPatternAirlines) {\n        const spawnPatternAirlineModels = _map(spawnPatternAirlines, (spawnPatternAirline) => ({\n            name: spawnPatternAirline[0],\n            rate: spawnPatternAirline[1]\n        }));\n\n        return spawnPatternAirlineModels;\n    }\n\n    /**\n     * Build the values for `_weightedAirlineList`\n     *\n     * see doc block for `_weightedAirlineList` property for more information\n     * about what this method produces and why\n     *\n     * @for SpawnPatternModel\n     * @method _buildWeightedAirlineList\n     * @return {array<string>}\n     * @private\n     */\n    _buildWeightedAirlineList() {\n        const weightedAirlineList = [];\n\n        _forEach(this.airlines, (airline) => {\n            for (let i = 0; i < airline.rate; i++) {\n                weightedAirlineList.push(airline.name);\n            }\n        });\n\n        return weightedAirlineList;\n    }\n\n    /**\n     * Builds a list of objects used to create the initial aircraft\n     * that exist within the app onLoad or onAirportChange.\n     *\n     * @for SpawnPatternModel\n     * @method _buildPreSpawnAircraft\n     * @param spawnPatternJson {object}\n     */\n    _buildPreSpawnAircraft(spawnPatternJson) {\n        if (this.isDeparture()) {\n            // TODO: this may be dead, please remove if it is\n            const preSpawnDepartureAircraft = [{\n                type: 'departure'\n            }];\n\n            return preSpawnDepartureAircraft;\n        }\n\n        const preSpawnArrivalAircraftList = buildPreSpawnAircraft(\n            spawnPatternJson,\n            AirportController.current\n        );\n\n        return preSpawnArrivalAircraftList;\n    }\n\n    /**\n     * Calculate the initial heading and position for a spawning arrival.\n     *\n     * Sets `position` and `heading` properties.\n     *\n     * @for SpawnPatternModel\n     * @method _initializePositionAndHeadingForAirborneAircraft\n     * @param spawnPatternJson {object}\n     * @private\n     */\n    _initializePositionAndHeadingForAirborneAircraft(spawnPatternJson) {\n        if (spawnPatternJson.category === FLIGHT_CATEGORY.DEPARTURE) {\n            return;\n        }\n\n        this._positionModel = this._routeModel.waypoints[0].positionModel;\n        this.heading = this._calculateSpawnHeading();\n    }\n\n    /**\n     * Calculate the heading from the first waypoint to the second waypoint\n     *\n     * This is used to determine the heading of newly spawned aircraft\n     *\n     * @for SpawnPatternModel\n     * @method calculateSpawnHeading\n     * @return {number} heading, in radians\n     */\n    _calculateSpawnHeading() {\n        const firstWaypointPositionModel = this._routeModel.waypoints[0].positionModel;\n        const secondWaypointPositionModel = this._routeModel.waypoints[1].positionModel;\n        const heading = firstWaypointPositionModel.bearingToPosition(secondWaypointPositionModel);\n\n        return heading;\n    }\n\n    /**\n     *\n     * @for SpawnPatternModel\n     * @method _generateSelfReferencedAirportPositionModel\n     * @return {StaticPositionModel}\n     */\n    _generateSelfReferencedAirportPositionModel() {\n        const airportPosition = AirportController.airport_get().positionModel;\n        const selfReferencingPosition = new StaticPositionModel(\n            airportPosition.gps,\n            airportPosition,\n            airportPosition.magneticNorth\n        );\n\n        return selfReferencingPosition;\n    }\n}\n","import _forEach from 'lodash/forEach';\nimport SpawnPatternCollection from './SpawnPatternCollection';\nimport TimeKeeper from '../engine/TimeKeeper';\nimport GameController from '../game/GameController';\nimport { INVALID_NUMBER } from '../constants/globalConstants';\n\n/**\n * Used to create a game_timer for a `SpawnPatternModel` and provide\n * methods for re-creating a new timer on timer expiration.\n *\n * This is designed to be a stateless class.\n *\n * @class SpawnScheduler\n */\nclass SpawnScheduler {\n    /**\n     * @constructor\n     * @for SpawnScheduler\n     * @param aircraftController {AircraftController}\n     */\n    constructor() {\n        /**\n         * @property _aircraftController\n         * @type {AircraftController}\n         * @default null\n         * @private\n         */\n        this._aircraftController = null;\n    }\n\n    /**\n     * @for SpawnScheduler\n     * @method init\n     * @param aircraftController {AircraftController}\n     * @chainable\n     */\n    init(aircraftController) {\n        if (typeof aircraftController === 'undefined') {\n            throw new TypeError('Invalid parameter. SpawnScheduler requires aircraftController to be defined.');\n        }\n\n        this._aircraftController = aircraftController;\n\n        this.startScheduler();\n\n        return this;\n    }\n\n    /**\n     * Starts the scheduler and prespawns departures\n     *\n     * @for SpawnScheduler\n     * @method startScheduler\n     */\n    startScheduler() {\n        // TODO: rename to createSchedulesWithTimer\n        this.createSchedulesFromList();\n        // TODO: create getter on collection to get all preSpawn including departures\n        // TODO: create method `createPreSpawnDeparturesAndArrivals`\n        this.createPreSpawnDepartures();\n    }\n\n    /**\n     * Loop through each `SpawnPatternModel` and create a `game_timeout` for each\n     *\n     * @for SpawnScheduler\n     * @method createSchedulesFromList\n     */\n    createSchedulesFromList() {\n        _forEach(SpawnPatternCollection.spawnPatternModels, (spawnPatternModel) => {\n            // set the #cycleStartTime for this `spawnPatternModel` with current game time\n            spawnPatternModel.cycleStart(TimeKeeper.accumulatedDeltaTime);\n            spawnPatternModel.scheduleId = this.createNextSchedule(spawnPatternModel);\n            spawnPatternModel.createPreSpawnAircraft(this._aircraftController);\n        });\n    }\n\n    /**\n     * Loop through each airborne `SpawnPatternModel` and reset the spawned and preSpawned traffic.\n     *\n     * Used when resetting the traffic in the traffic settings panel.\n     *\n     * @for SpawnScheduler\n     * @method resetAirborneTraffic\n     */\n    resetAirborneTraffic() {\n        SpawnPatternCollection.spawnPatternModels.filter((s) => s.isAirborneAtSpawn()).forEach((spawnPatternModel) => {\n            spawnPatternModel.preSpawnAircraftList = [];\n            spawnPatternModel.createPreSpawnAircraft(this._aircraftController);\n            this.resetTimer(spawnPatternModel);\n        });\n    }\n\n    /**\n     * Send `SpawnPatternModel` objects off the the `AircraftController` to create\n     * new aircraft onLoad or onAirportChange.\n     *\n     * When starting a session there should always be at least one departure waiting\n     * to taxi. The logic for determining _which_ patterns to use, and how many,\n     * is handled within the `SpawnPatternCollection`. Here we simply get the\n     * result and loop through each `SpawnPatternModel`.\n     *\n     * @for SpawnScheduler\n     * @method createPreSpawnDepartures\n     */\n    createPreSpawnDepartures() {\n        const departureModelsToPreSpawn = SpawnPatternCollection.getDepartureModelsForPreSpawn();\n\n        for (let i = 0; i < departureModelsToPreSpawn.length; i++) {\n            const spawnPatternModel = departureModelsToPreSpawn[i];\n            this._aircraftController.createAircraftWithSpawnPatternModel(spawnPatternModel);\n        }\n    }\n\n    /**\n     * Registers a new timeout, its callback and callback arguments with the `GameController`\n     *\n     * @for SpawnScheduler\n     * @method createNextSchedule\n     * @param spawnPatternModel {SpawnPatternModel}\n     * @return {array}\n     */\n    createNextSchedule(spawnPatternModel) {\n        const delay = spawnPatternModel.getNextDelayValue(TimeKeeper.accumulatedDeltaTime);\n\n        return this._createTimeout(spawnPatternModel, delay);\n    }\n\n    /**\n     * Resets the timer for a specific spawn pattern\n     *\n     * @for SpawnScheduler\n     * @method resetTimer\n     * @param spawnPatternModel {SpawnPatternModel}\n     */\n    resetTimer(spawnPatternModel) {\n        let timePassed = 0;\n        const { scheduleId } = spawnPatternModel;\n\n        if (scheduleId && scheduleId !== INVALID_NUMBER) {\n            GameController.destroyTimer(spawnPatternModel.scheduleId);\n\n            const timerStart = spawnPatternModel.scheduleId[1] - spawnPatternModel.scheduleId[3];\n            timePassed = TimeKeeper.accumulatedDeltaTime - timerStart;\n            spawnPatternModel.scheduleId = null;\n        }\n\n        if (spawnPatternModel.rate <= 0) {\n            return;\n        }\n\n        let nextDelay = spawnPatternModel.getNextDelayValue(TimeKeeper.accumulatedDeltaTime);\n\n        if (timePassed < nextDelay) {\n            nextDelay -= timePassed;\n        } else {\n            this._aircraftController.createAircraftWithSpawnPatternModel(spawnPatternModel);\n        }\n\n        spawnPatternModel.scheduleId = this._createTimeout(spawnPatternModel, nextDelay);\n    }\n\n    /**\n     * Registers a new timeout, its callback and callback arguments with the `GameController`\n     *\n     * @for SpawnScheduler\n     * @method _createTimeout\n     * @param spawnPatternModel {SpawnPatternModel}\n     * @param delay {number} time in seconds\n     * @return {array}\n     */\n    _createTimeout(spawnPatternModel, delay) {\n        return GameController.game_timeout(\n            this.createAircraftAndRegisterNextTimeout,\n            // lifespan of timeout\n            delay,\n            // passing null only to match existing api\n            null,\n            // arguments sent to callback as it's first parameter. using array so multiple arg can be sent\n            [spawnPatternModel, this._aircraftController]\n        );\n    }\n\n    /**\n     * Method sent to `game_timeout` as the callback\n     *\n     * When fired, this method will call `createAircraftWithSpawnPatternModel` and then\n     * create a new time by calling `createNextSchedule`. Doing so will also result\n     * in calculating a new delay period.\n     *\n     * Accepts two arguments; `spawnPattern` and `aircraftController`.\n     *\n     * @for SpawnScheduler\n     * @method createAircraftAndRegisterNextTimeout\n     * @param args {*[]}\n     */\n    createAircraftAndRegisterNextTimeout = (...args) => {\n        const spawnPatternModel = args[0][0];\n        const aircraftController = args[0][1];\n\n        aircraftController.createAircraftWithSpawnPatternModel(spawnPatternModel);\n\n        spawnPatternModel.scheduleId = this.createNextSchedule(spawnPatternModel);\n    };\n}\n\n\nexport default new SpawnScheduler();\n","import _findIndex from 'lodash/findIndex';\nimport _floor from 'lodash/floor';\nimport _isArray from 'lodash/isArray';\nimport _isNil from 'lodash/isNil';\nimport _random from 'lodash/random';\nimport _without from 'lodash/without';\nimport AirportModel from '../airport/AirportModel';\nimport RouteModel from '../aircraft/FlightManagementSystem/RouteModel';\nimport { TIME } from '../constants/globalConstants';\nimport { nm } from '../utilities/unitConverters';\nimport { isEmptyOrNotObject } from '../utilities/validatorUtilities';\nimport { distance2d } from '../math/distance';\nimport { ENVIRONMENT } from '../constants/environmentConstants';\nimport { avg } from '../math/core';\n\n/**\n * Return an array whose indices directly mirror those of `waypointModelList`, except it\n * contains the distances along the route at which each waypoint lies from the spawn point\n *\n * @function _calculateOffsetsToEachWaypointInRoute\n * @param waypointModelList {array<WaypointModel>} array of all waypoints along the route\n * @return {array<number>} offset distance from spawn point to each waypoint\n */\nexport function _calculateOffsetsToEachWaypointInRoute(waypointModelList) {\n    // begin by storing the first fix's offset: a distance of 0 from the spawn point\n    const waypointOffsetMap = [0];\n    let totalDistanceTraveled = 0;\n\n    // continue with second waypoint, because first is already stored\n    for (let i = 1; i < waypointModelList.length; i++) {\n        if (waypointModelList[i].isVectorWaypoint || waypointModelList[i - 1].isVectorWaypoint) {\n            continue;\n        }\n\n        const previousWaypointModel = waypointModelList[i - 1];\n        const nextWaypointModel = waypointModelList[i];\n        const distanceToNextWaypoint = previousWaypointModel.calculateDistanceToWaypoint(nextWaypointModel);\n        totalDistanceTraveled += distanceToNextWaypoint;\n\n        waypointOffsetMap.push(totalDistanceTraveled);\n    }\n\n    return waypointOffsetMap;\n}\n\n/**\n * Create an array of the various altitude restrictions along the route, and the offset distances at which they exist\n *\n * Note that unlike the `waypointOffsetMap`, the altitude offset array DOES NOT mirror the indices\n * of the `waypointModelList`. Only offsets and altitudes of altitude-restricted waypoints are included.\n *\n * Also note that this is designed to retrieve bottom altitudes used in descent. It could probably\n * be reused for departures, just by doing a Math.max() instead of Math.min() below\n *\n * @function _calculateAltitudeOffsets\n * @param waypointModelList {array<WaypointModel>} array of all waypoints along the route\n * @param waypointOffsetMap {array<number>} offset distance from spawn point to each waypoint\n * @return {array<array<number>>} [[offsetDistance, altitude], [offsetDistance, altitude], ...]\n */\nexport function _calculateAltitudeOffsets(waypointModelList, waypointOffsetMap) {\n    const altitudeOffsets = [];\n\n    for (let i = 0; i < waypointModelList.length; i++) {\n        const waypointModel = waypointModelList[i];\n\n        if (!waypointModel.hasAltitudeRestriction) {\n            continue;\n        }\n\n        const altitudes = _without([waypointModel.altitudeMaximum, waypointModel.altitudeMinimum], -1);\n\n        altitudeOffsets.push([\n            waypointOffsetMap[i],\n            Math.min(...altitudes)\n        ]);\n    }\n\n    return altitudeOffsets;\n}\n\n/**\n * Calculate the interpolated altitude along the glidepath at the given distance along the route from the spawn point\n *\n * @function _calculateAltitudeAtOffset\n * @param altitudeOffsets {array<array<number>>} information about location of altitude restrictions\n * @param offsetDistance {number} distance along route at which we want to know the ideal spawn altitude\n * @return {number} ideal spawn altitude, in feet (rounded up to nearest thousand)\n */\nexport function _calculateAltitudeAtOffset(altitudeOffsets, offsetDistance) {\n    const indexOfDistance = 0;\n    const indexOfAltitude = 1;\n    const indexOfNextAltitudeRestriction = _findIndex(altitudeOffsets, (altitudeOffset) => {\n        return altitudeOffset[indexOfDistance] >= offsetDistance;\n    });\n    let indexOfPreviousAltitudeRestriction = indexOfNextAltitudeRestriction - 1;\n\n    if (indexOfPreviousAltitudeRestriction < -1) {\n        indexOfPreviousAltitudeRestriction = altitudeOffsets.length - 1;\n    }\n\n    if (indexOfNextAltitudeRestriction < 0) { // no restrictions ahead\n        if (indexOfPreviousAltitudeRestriction < 0) { // no restrictions ahead or behind\n            throw new TypeError('Expected altitude restrictions to calculate appropriate spawn altiude, but none were received.');\n        }\n\n        return altitudeOffsets[indexOfPreviousAltitudeRestriction][indexOfAltitude];\n    }\n\n    if (indexOfPreviousAltitudeRestriction < 0) { // have restrictions ahead, but none behind\n        return _floor(altitudeOffsets[indexOfNextAltitudeRestriction][indexOfAltitude], -3);\n    }\n\n    const previousAltitudeRestriction = altitudeOffsets[indexOfPreviousAltitudeRestriction];\n    const nextAltitudeRestriction = altitudeOffsets[indexOfNextAltitudeRestriction];\n    const distanceBetweenRestrictions = nextAltitudeRestriction[indexOfDistance] - previousAltitudeRestriction[indexOfDistance];\n    const altitudeBetweenRestrictions = nextAltitudeRestriction[indexOfAltitude] - previousAltitudeRestriction[indexOfAltitude];\n    const distanceFromPreviousRestrictionToOffsetDistance = offsetDistance - previousAltitudeRestriction[indexOfDistance];\n    const progressBetweenRestrictions = distanceFromPreviousRestrictionToOffsetDistance / distanceBetweenRestrictions;\n    const altitudeChangeFromPreviousRestriction = altitudeBetweenRestrictions * progressBetweenRestrictions;\n\n    return _floor(previousAltitudeRestriction[indexOfAltitude] + altitudeChangeFromPreviousRestriction, -3);\n}\n\n/**\n * Calculate the ideal spawn altitude at the given distance along the route from the spawn point\n *\n * @function _calculateIdealSpawnAltitudeAtOffset\n * @param altitudeOffsets {array<array<number>>} information about location of altitude restrictions\n * @param offsetDistance {number} distance along route at which we want to know the ideal spawn altitude\n * @param spawnSpeed {number} airspeed at which to spawn the aircraft\n * @param spawnAltitude {number|array<number>} altitude specified in the spawn pattern json\n * @param totalDistance {number} distance along route from spawn point to airspace boundary\n * @param airspaceCeiling {number} altitude of the top of our airspace\n * @return {number} ideal spawn altitude, in feet (rounded up to nearest thousand)\n */\nexport function _calculateIdealSpawnAltitudeAtOffset(\n    altitudeOffsets,\n    offsetDistance,\n    spawnSpeed,\n    spawnAltitude,\n    totalDistance,\n    airspaceCeiling\n) {\n    const indexOfDistance = 0;\n    const indexOfAltitude = 1;\n    let firstAltitudeRestriction = altitudeOffsets[0];\n\n    if (!firstAltitudeRestriction) { // no altitude restrictions at all\n        firstAltitudeRestriction = [totalDistance, airspaceCeiling];\n    }\n\n    if (offsetDistance >= firstAltitudeRestriction[indexOfDistance]) {\n        return _calculateAltitudeAtOffset(altitudeOffsets, offsetDistance);\n    }\n\n    const distanceToFirstAltitudeRestriction = firstAltitudeRestriction[indexOfDistance] - offsetDistance;\n    const minutesToFirstAltitudeRestriction = distanceToFirstAltitudeRestriction / spawnSpeed * TIME.ONE_HOUR_IN_MINUTES;\n    const assumedDescentRate = 1000;\n    const highestAcceptableAltitude = firstAltitudeRestriction[indexOfAltitude] +\n        (assumedDescentRate * minutesToFirstAltitudeRestriction);\n\n    if (_isArray(spawnAltitude)) {\n        spawnAltitude = _random(spawnAltitude[0] / 1000, spawnAltitude[1] / 1000) * 1000;\n    }\n\n    return Math.min(_floor(highestAcceptableAltitude, -3), spawnAltitude);\n}\n\n/**\n * Loop through `waypointModelList` and determine where along the route an\n * aircraft should spawn\n *\n * @function _calculateSpawnPositionsAndAltitudes\n * @param waypointModelList {array<WaypointModel>}\n * @param spawnOffsets {array}\n * @param spawnSpeed {number}\n * @param spawnAltitude {number}\n * @param totalDistance {number} distance along route from spawn point to airspace boundary\n * @return spawnPositions {array<number>} distances along route, in nm\n */\nfunction _calculateSpawnPositionsAndAltitudes(\n    waypointModelList,\n    spawnOffsets,\n    spawnSpeed,\n    spawnAltitude,\n    totalDistance,\n    airspaceCeiling\n) {\n    const spawnPositionsAndAltitudes = [];\n    const waypointOffsetMap = _calculateOffsetsToEachWaypointInRoute(waypointModelList);\n    const altitudeOffsets = _calculateAltitudeOffsets(waypointModelList, waypointOffsetMap);\n\n    // for each new aircraft\n    for (let i = 0; i < spawnOffsets.length; i++) {\n        const spawnOffset = spawnOffsets[i];\n        const nextWaypointIndex = _findIndex(waypointOffsetMap, (distanceToWaypoint) => {\n            // Purposefully using strict comparison:\n            // If we return true here when distanceToWaypoint is equal to spawnOffset,\n            // the previousWaypointModel and the nextWaypointModel will be the same for\n            // the last item (the spawn point) resulting in the incapacity to compute a\n            // heading.\n            return distanceToWaypoint > spawnOffset;\n        });\n        const nextWaypointModel = waypointModelList[nextWaypointIndex];\n        const previousWaypointIndex = Math.max(0, nextWaypointIndex - 1);\n        const previousWaypointModel = waypointModelList[previousWaypointIndex];\n        const distanceFromPreviousWaypointToSpawnPoint = spawnOffset - waypointOffsetMap[previousWaypointIndex];\n        const heading = previousWaypointModel.calculateBearingToWaypoint(nextWaypointModel);\n        const spawnPositionModel = previousWaypointModel.positionModel.generateDynamicPositionFromBearingAndDistance(\n            heading,\n            distanceFromPreviousWaypointToSpawnPoint\n        );\n        const altitude = _calculateIdealSpawnAltitudeAtOffset(\n            altitudeOffsets,\n            spawnOffset,\n            spawnSpeed,\n            spawnAltitude,\n            totalDistance,\n            airspaceCeiling\n        );\n\n        spawnPositionsAndAltitudes.push({\n            altitude,\n            heading,\n            nextFix: nextWaypointModel.name,\n            positionModel: spawnPositionModel\n        });\n    }\n\n    return spawnPositionsAndAltitudes;\n}\n\n/**\n * Calculate distances along spawn pattern route at which to prespawn aircraft\n *\n * To randomize the spawn locations, the interval between aircraft will vary, but should\n * average out to exactly the `entrailDistance`. The exception is if the `entrailDistance`\n * is less than the `smallestIntervalNm` defined below. In that case, aircraft will be\n * spawned at exactly the `entrailDistance` with no variation due to their proximity.\n *\n * NOTE: Provided there is at least `smallestIntervalNm` distance between them, an aircraft\n * will always be spawned right along the airspace boundary, and another at the first fix.\n *\n * For example, with `smallestIntervalNm = 15`:\n *   - If requesting 8MIT, will spawn exactly 8MIT\n *   - If requesting 30MIT, will spawn each a/c 15MIT-45MIT of the previous arrival\n *\n * @function _assembleSpawnOffsets\n * @param entrailDistance {number}\n * @param totalDistance {number}\n * @return spawnOffsets {array<number>} distances along route, in nm\n */\nconst _assembleSpawnOffsets = (entrailDistance, totalDistance = 0) => {\n    const offsetClosestToAirspace = totalDistance - 3;\n    // dont spawn aircraft closer than 6 MIT\n    const clampedEntrailDistance = Math.max(6, entrailDistance);\n    let smallestIntervalNm = 15;\n    // do not allow prespawned aircraft to have a spacing less than `minimumInTrailNm`\n    const largestIntervalNm = Math.max(clampedEntrailDistance, clampedEntrailDistance +\n        (clampedEntrailDistance - smallestIntervalNm));\n\n    if (clampedEntrailDistance < 8) {\n        console.error(`Too many aircraft requested, calculated MIT is ${entrailDistance}, limiting MIT to ${clampedEntrailDistance}`);\n    }\n\n    // if requesting less than `smallestIntervalNm`, spawn all AT `entrailDistance`\n    if (smallestIntervalNm > largestIntervalNm) {\n        smallestIntervalNm = largestIntervalNm;\n    }\n\n    const spawnOffsets = [offsetClosestToAirspace];\n    let distanceAlongRoute = offsetClosestToAirspace;\n\n    // distance between successive arrivals in nm\n    while (distanceAlongRoute > smallestIntervalNm) {\n        const interval = _random(smallestIntervalNm, largestIntervalNm, true);\n        distanceAlongRoute -= interval;\n\n        if (distanceAlongRoute < smallestIntervalNm) {\n            break;\n        }\n\n        spawnOffsets.push(distanceAlongRoute);\n    }\n\n    // spawn an aircraft at the first fix of the route\n    spawnOffsets.push(0);\n\n    return spawnOffsets;\n};\n\n/**\n * Returns the total distance from beginning to end of the provided route, along the route's course\n *\n * @function _calculateTotalDistanceAlongRoute\n * @param waypointModelList {array<WaypointModel>}\n * @param airport {AirportModel}\n * @return {number}\n */\nconst _calculateTotalDistanceAlongRoute = (waypointModelList, airport) => {\n    // find last fix along STAR that is outside of airspace, ie: next fix is within airspace\n    // distance between closest fix outside airspace and airspace border in nm\n    let totalDistance = 0;\n\n    // Iteration started at index 1 to ensure two elements are available. It is\n    // already an expectation that aircraft must have two waypoints, so this\n    // should not be a problem here.\n    for (let i = 1; i < waypointModelList.length; i++) {\n        const waypointModel = waypointModelList[i];\n        const previousWaypoint = waypointModelList[i - 1];\n\n        if (waypointModel.isVectorWaypoint || previousWaypoint.isVectorWaypoint) {\n            continue;\n        }\n\n        const distanceBetweenWaypoints = nm(distance2d(previousWaypoint.relativePosition, waypointModel.relativePosition));\n        let distanceToBoundary = Infinity;\n\n        for (let j = 0; j < airport.airspace.length; j++) {\n            const airspace = airport.airspace[j];\n\n            if (airspace.isPointInside2D(waypointModel.relativePosition)) {\n                const distanceToAirspace = airspace.distanceToBoundary(previousWaypoint.relativePosition);\n                // find shortest distance, since the waypoint might be inside multiple airspace polygons\n                distanceToBoundary = Math.min(distanceToBoundary, distanceToAirspace);\n            }\n        }\n\n        // if waypointModel is within any of our airspace\n        if (distanceToBoundary !== Infinity) {\n            totalDistance += distanceToBoundary;\n\n            break;\n        }\n\n        totalDistance += distanceBetweenWaypoints;\n    }\n\n    return totalDistance;\n};\n\n/**\n * Calculate heading, nextFix and position data to be used when creating an\n * `AircraftModel` along a route.\n *\n * @function _preSpawn\n * @param spawnPatternJson {object|SpawnPatternModel}\n * @param airport {AirportModel}\n * @return {array<object>}\n */\nconst _preSpawn = (spawnPatternJson, airport) => {\n    const spawnRate = spawnPatternJson.rate;\n\n    if (spawnRate <= 0) {\n        return [];\n    }\n\n    const airspaceCeiling = airport.maxAssignableAltitude;\n    const spawnSpeed = spawnPatternJson.speed;\n    const spawnAltitude = spawnPatternJson.altitude;\n    const spawnAvgAltitude = Array.isArray(spawnAltitude) ? avg(spawnAltitude) : spawnAltitude;\n    // convert IAS to TAS for better estimate\n    const trueAirspeedIncreaseFactor = spawnAvgAltitude * ENVIRONMENT.DENSITY_ALT_INCREASE_FACTOR_PER_FT;\n    const spawnEstTrueAirspeed = spawnSpeed * (1 + trueAirspeedIncreaseFactor);\n    // distance between each arriving aircraft, in nm.\n    const entrailDistance = spawnEstTrueAirspeed / spawnRate;\n    const routeModel = spawnPatternJson._routeModel ? spawnPatternJson._routeModel : new RouteModel(spawnPatternJson.route);\n    const waypointModelList = routeModel.waypoints;\n    const totalDistance = _calculateTotalDistanceAlongRoute(waypointModelList, airport);\n    // calculate number of offsets\n    const spawnOffsets = _assembleSpawnOffsets(entrailDistance, totalDistance);\n    // calculate heading, nextFix and position data to be used when creating an `AircraftModel` along a route\n    const spawnPositions = _calculateSpawnPositionsAndAltitudes(\n        waypointModelList,\n        spawnOffsets,\n        spawnSpeed,\n        spawnAltitude,\n        totalDistance,\n        airspaceCeiling\n    );\n\n    return spawnPositions;\n};\n\n/**\n * Backfill STAR routes with arrivals closer than the spawn point.\n *\n * Should be run only once on airport load.\n *\n * Aircraft spawn at the first point defined in the `arrivals` entry of the airport json file.\n * When that spawn point is very far from the airspace boundary, it obviously takes quite a\n * while for them to reach the airspace. This function spawns arrivals along the route, between\n * the spawn point and the airspace boundary, in order to ensure the player is not kept waiting\n * for their first arrival aircraft.\n *\n * @function buildPreSpawnAircraft\n * @param spawnPatternJson {object|SpawnPatternModel}\n * @param currentAirport {AirportModel}\n * @return {array<object>}\n */\nexport const buildPreSpawnAircraft = (spawnPatternJson, currentAirport) => {\n    if (_isNil(spawnPatternJson) || _isNil(currentAirport)) {\n        throw new TypeError('Invalid parameter(s) passed to buildPreSpawnAircraft. ' +\n            'Expected spawnPatternJson and currentAirport to be defined, ' +\n            `but received ${typeof spawnPatternJson} and ${typeof currentAirport}`);\n    }\n\n    if (isEmptyOrNotObject(spawnPatternJson)) {\n        throw new TypeError('Invalid spawnPatternJson passed to buildPreSpawnAircraft. ' +\n            `Expected a non-empty object, but received ${typeof spawnPatternJson}`);\n    }\n\n    if (!(currentAirport instanceof AirportModel)) {\n        throw new TypeError('Invalid currentAirport passed to buildPreSpawnAircraft. ' +\n            `Expected instance of AirportModel, but received ${typeof currentAirport}`);\n    }\n\n    return _preSpawn(spawnPatternJson, currentAirport);\n};\n","// istanbul ignore\nimport _difference from 'lodash/difference';\nimport _has from 'lodash/has';\nimport _keys from 'lodash/keys';\n\nconst ACCEPTED_KEYS = [\n    'destination',\n    'origin',\n    'category',\n    'route',\n    'altitude',\n    'method',\n    'rate',\n    'speed',\n    'airlines'\n];\n\nconst ACCEPTED_OPTIONAL_KEYS = [\n    'commands',\n    'offset',\n    'period',\n    'variation'\n];\n\nconst ALL_KEYS = [\n    ...ACCEPTED_KEYS,\n    ...ACCEPTED_OPTIONAL_KEYS\n];\n\n/**\n * Validates the presence of correct `SpawnPatternModel` keys.\n *\n * Expects a shape of one the following:\n *\n * ```javascript\n * // Departures\n * {\n *      \"origin\": \"KLAS\",\n *      \"destination\": \"\",\n *      \"category\": \"departure\",\n *      \"route\": \"KLAS.BOACH6.HEC\",\n *      \"altitude\": \"\",\n *      \"speed\": \"\"\n *      \"method\": \"random\",\n *      \"rate\": 5,\n *      \"airlines\": [\n *          [\"aal\", 10],\n *          [\"ual\", 10],\n *          [\"ual/long\", 3]\n *      ]\n *  }\n *\n *  // Arrivals\n *  {\n *      \"origin\": \"\",\n *      \"destination\": \"KLAS\",\n *      \"category\": \"arrival\",\n *      \"route\": \"BETHL.GRNPA1.KLAS\",\n *      \"altitude\": [30000, 40000],\n *      \"speed\": 320,\n *      \"method\": \"cyclic\",\n *      \"rate\": 17.5,\n *      \"period\": 75,\n *      \"offset\": 25,\n *      \"airlines\": [\n *          [\"aal\", 10],\n *          [\"ual\", 10],\n *          [\"ual/long\", 3]\n *      ]\n *  }\n *  ```\n *\n * @function spawnPatternModelJsonValidator\n * @param json {object}\n * @return isValid {boolean}\n */\n// istanbul ignore next\nexport const spawnPatternModelJsonValidator = (json) => {\n    let isValid = true;\n\n    for (let i = 0; i < ACCEPTED_KEYS.length; i++) {\n        const key = ACCEPTED_KEYS[i];\n\n        if ((key === 'altitude' || key === 'speed') && json.category === 'departure') {\n            continue;\n        }\n\n        if (key === 'origin' && json.category === 'arrival') {\n            continue;\n        }\n\n        if (!_has(json, key) && !_has(ACCEPTED_OPTIONAL_KEYS, key)) {\n            console.warn(`spawnPattern is missing a required key: ${key}`);\n\n            isValid = false;\n        }\n    }\n\n    const jsonKeys = _keys(json);\n    const unsupportedKeys = _difference(jsonKeys, ALL_KEYS);\n\n    if (unsupportedKeys.length > 0) {\n        console.warn(`Unsupported key(s) found in spawnPattern: ${unsupportedKeys.join(', ')}`);\n    }\n\n    return isValid;\n};\n","import $ from 'jquery';\nimport _forEach from 'lodash/forEach';\nimport _isNaN from 'lodash/isNaN';\nimport GameController from '../game/GameController';\nimport { SELECTORS } from '../constants/selectors';\n\n/**\n * @property UI_SETTINGS_MODAL_TEMPLATE\n * @type {string}\n * @final\n */\nconst UI_SETTINGS_MODAL_TEMPLATE = `\n    <div class=\"option-dialog dialog notSelectable\">\n        <p class=\"dialog-title\">Settings</p>\n        <div class=\"dialog-body nice-scrollbar\"></div>\n    </div>`;\n\n/**\n * @property UI_DIALOG_FOOTER_TEMPLATE\n * @type {string}\n * @final\n */\nconst UI_DIALOG_FOOTER_TEMPLATE = '<div class=\"dialog-footer\"></div>';\n\n/**\n * @property UI_OPTION_CONTAINER_TEMPLATE\n * @type {string}\n * @final\n */\nconst UI_OPTION_CONTAINER_TEMPLATE = '<div class=\"form-element\"></div>';\n\n/**\n * @property UI_OPTION_LABEL_TEMPLATE\n * @type {string}\n * @final\n */\nconst UI_OPTION_LABEL_TEMPLATE = '<span class=\"form-label\"></span>';\n\n/**\n * @property UI_OPTION_SELECTOR_TEMPLATE\n * @type {string}\n * @final\n */\nconst UI_OPTION_SELECTOR_TEMPLATE = '<span class=\"form-type-select\"></span>';\n\n// TODO: This class has no corresponding styles\n/**\n * @property UI_STATIC_TEXT_TEMPLATE\n * @type {string}\n * @final\n */\nconst UI_STATIC_TEXT_TEMPLATE = '<span class=\"option-static-text\"></span>';\n\n/**\n * @class SettingsController\n */\nexport default class SettingsController {\n    constructor($element) {\n        /**\n         * Root DOM element\n         *\n         * @property $element\n         * @type {jquery|HTML Element}\n         * @default $element\n         */\n        this.$element = $element;\n\n        /**\n         * Dialog DOM element\n         *\n         * @property $dialog\n         * @type {jquery|HTML Element}\n         * @default null\n         */\n        this.$dialog = null;\n\n        /**\n         * Dialog's body DOM element\n         *\n         * @property $dialogBody\n         * @type {jquery|HTML Element}\n         * @default null\n         */\n        this.$dialogBody = null;\n\n        this.init();\n    }\n\n    /**\n     *\n     * @for SettingsController\n     * @method init\n     * @chainable\n     */\n    init() {\n        this.$dialog = $(UI_SETTINGS_MODAL_TEMPLATE);\n        this.$dialogBody = this.$dialog.find(SELECTORS.DOM_SELECTORS.DIALOG_BODY);\n        const descriptions = GameController.game.option.getDescriptions();\n\n        _forEach(descriptions, (opt) => {\n            let $container = this._buildTextInputTemplate(opt);\n\n            if (opt.type === 'select') {\n                $container = this._buildSelectInputTemplate(opt);\n            }\n\n            this.$dialogBody.append($container);\n        });\n\n        const $version = this._buildVersionTemplate();\n\n        this.$dialog.append($version);\n        this.$element.append(this.$dialog);\n\n        return this;\n    }\n\n    /**\n     * Returns whether the airport selection dialog is open\n     *\n     * @for SettingsController\n     * @method isDialogOpen\n     * @return {boolean}\n     */\n    isDialogOpen() {\n        return this.$dialog.hasClass(SELECTORS.CLASSNAMES.OPEN);\n    }\n\n    /**\n    * @for SettingsController\n    * @method toggleDialog\n    */\n    toggleDialog() {\n        this.$dialog.toggleClass(SELECTORS.CLASSNAMES.OPEN);\n    }\n\n    /**\n     * Build the html for a game option and its corresponding value elements.\n     *\n     * @for SettingsController\n     * @method _buildSelectInputTemplate\n     * @param option {object}\n     * @return $container {jquery Element}\n     * @private\n     */\n    _buildSelectInputTemplate(option) {\n        const $container = $(UI_OPTION_CONTAINER_TEMPLATE);\n        const $label = $(UI_OPTION_LABEL_TEMPLATE);\n        const $optionSelector = $(UI_OPTION_SELECTOR_TEMPLATE);\n        const $selector = $(`<select name=\"${option.name}\"></select>`);\n        const selectedOption = GameController.game.option.getOptionByName(option.name);\n\n        $label.text(option.description);\n        $container.append($label);\n\n        // this could me done with a _map(), but verbosity here makes the code easier to read\n        for (let i = 0; i < option.optionList.length; i++) {\n            const $optionSelectTempalate = this._buildSelectOptionTemplate(option.optionList[i], selectedOption);\n\n            $selector.append($optionSelectTempalate);\n        }\n\n        // TODO: this should be moved to proper event handler method and only assigned here.\n        $selector.change((event) => {\n            const $currentTarget = $(event.currentTarget);\n\n            GameController.game.option.setOptionByName($currentTarget.attr('name'), $currentTarget.val());\n        });\n\n        $optionSelector.append($selector);\n        $container.append($optionSelector);\n\n        return $container;\n    }\n\n    /**\n     * Build the html for a select option.\n     *\n     * @for SettingsController\n     * @method _buildSelectOptionTemplate\n     * @param optionData {array<string>}\n     * @param selectedOption {string}\n     * @return optionSelectTempalate {HTML Element}\n     * @private\n     */\n    _buildSelectOptionTemplate(optionData, selectedOption) {\n        if (optionData.value === selectedOption) {\n            return `<option value=\"${optionData.value}\" selected>${optionData.displayLabel}</option>`;\n        }\n\n        return `<option value=\"${optionData.value}\">${optionData.displayLabel}</option>`;\n    }\n\n    /**\n     * Build text input form element\n     *\n     * @for SettingsController\n     * @method _buildTextInputTemplate\n     * @param option {object}\n     * @return $container {jquery Element}\n     */\n    _buildTextInputTemplate(option) {\n        const $container = $(UI_OPTION_CONTAINER_TEMPLATE);\n        const $label = $(UI_OPTION_LABEL_TEMPLATE);\n        const currentValue = GameController.game.option.getOptionByName(option.name);\n        const $selector = $(`<input class=\"form-input\" step=\"any\"\n                                    type=\"${option.type}\"\n                                    name=\"${option.name}\"\n                                    value=\"${currentValue}\">`);\n        const $unit = $(`<span class=\"form-value\">${option.unit}</span>`);\n\n        $label.text(option.description);\n        $container.append($label);\n\n        // TODO: this should be moved to proper event handler method and only assigned here.\n        $selector.change((event) => {\n            const $currentTarget = $(event.currentTarget);\n            const currentValue = $currentTarget.val();\n\n            if (!option.validationHandler(currentValue)) {\n                // User didn't enter a valid value, revert to the old value\n                $selector.val(currentValue);\n\n                return;\n            }\n\n            let nextValue = currentValue;\n            if (option.type === 'number') {\n                nextValue = parseFloat(nextValue);\n            }\n\n            GameController.game.option.setOptionByName($currentTarget.attr('name'), nextValue);\n        });\n\n        $container.append($selector);\n        $container.append($unit);\n\n        return $container;\n    }\n\n    /**\n     * Builds a static text information psuedo-option.\n     * Will display as such:\n     *\n     * `(settings menu)`\n     *\n     * `Text text text         Value value value`\n     *\n     * @for SettingsController\n     * @method _buildStaticTemplate\n     * @param {string} label\n     * @param {string} value (optional)\n     * @return {JQuery|HTML element}\n     */\n    _buildStaticTemplate(label, value = '') {\n        const $container = $(UI_OPTION_CONTAINER_TEMPLATE);\n        const $label = $(UI_OPTION_LABEL_TEMPLATE);\n        const $value = $(UI_STATIC_TEXT_TEMPLATE);\n\n        $container.append($label);\n        $container.append($value);\n        $label.text(label);\n        $value.text(value);\n\n        return $container;\n    }\n\n    /**\n     * Build the html for the simulator version psuedo-option.\n     *\n     * @for SettingsController\n     * @method _buildVersionTemplate\n     * @return {JQuery|HTML element}\n     */\n    _buildVersionTemplate() {\n        const simulatorVersion = window.GLOBAL.VERSION;\n        const $container = $(UI_DIALOG_FOOTER_TEMPLATE);\n\n        $container.text(`openScope ATC Simulator v${simulatorVersion}`);\n\n        return $container;\n    }\n}\n","import $ from 'jquery';\nimport _forEach from 'lodash/forEach';\nimport EventBus from '../lib/EventBus';\nimport EventTracker from '../EventTracker';\nimport SpawnPatternCollection from '../trafficGenerator/SpawnPatternCollection';\nimport SpawnScheduler from '../trafficGenerator/SpawnScheduler';\nimport { SELECTORS, CLASSNAMES } from '../constants/selectors';\nimport { FLIGHT_CATEGORY } from '../constants/aircraftConstants';\nimport { EVENT } from '../constants/eventNames';\nimport { REGEX } from '../constants/globalConstants';\nimport { TRACKABLE_EVENT } from '../constants/trackableEvents';\nimport AirportController from '../airport/AirportController';\nimport { radiansToDegrees } from '../utilities/unitConverters';\n\n/**\n * @property UI_SETTINGS_MODAL_TEMPLATE\n * @type {string}\n * @final\n */\nconst UI_TRAFFIC_MODAL_TEMPLATE = `\n    <div class=\"traffic-dialog dialog notSelectable\">\n        <p class=\"dialog-title\">Traffic rate</p>\n        <div class=\"dialog-body nice-scrollbar\"></div>\n        <div class=\"dialog-footer form-element\">\n            <button id=\"reset-button\" class=\"js-trafficDefaultButton button\">Default</button>\n            <button id=\"restart-button\" class=\"js-trafficRestartButton button\">Restart</button>\n        </div>\n    </div>`;\n\n/**\n * @class TrafficRateController\n */\nexport default class TrafficRateController {\n    constructor($element) {\n        /**\n         * @property EventBus\n         * @type {EventBus}\n         * @default EventBus\n         * @private\n         */\n        this._eventBus = EventBus;\n\n        /**\n         * Root DOM element\n         *\n         * @property $element\n         * @type {jquery|HTML Element}\n         * @default $element\n         */\n        this.$element = $element;\n\n        /**\n         * Dialog DOM element\n         *\n         * @property $dialog\n         * @type {jquery|HTML Element}\n         * @default null\n         */\n        this.$dialog = null;\n\n        /**\n         * Spawn rates by category or route\n         *\n         * @property _rates\n         * @type {object}\n         * @default null\n         */\n        this._rates = null;\n\n        /**\n         * Form elements by category\n         *\n         * @property _elements\n         * @type {array}\n         * @default null\n         */\n        this._elements = null;\n\n        /**\n         * Current wind\n         *\n         * @property _wind\n         * @type {object}\n         * @default null\n         */\n        this._wind = null;\n\n        this._setupHandlers()\n            .init()\n            .enable();\n    }\n\n    /**\n     *\n     * @for TrafficRateController\n     * @method init\n     * @chainable\n     */\n    init() {\n        this.$dialog = $(UI_TRAFFIC_MODAL_TEMPLATE);\n        this.$dialogBody = this.$dialog.find(`.${CLASSNAMES.DIALOG_BODY}`);\n\n        this._buildDialogBody();\n        this.$element.append(this.$dialog);\n        this.$dialog.find(SELECTORS.DOM_SELECTORS.TRAFFIC_DEFAULT_BUTTON).click(this._onFormResetHandler);\n        this.$dialog.find(SELECTORS.DOM_SELECTORS.TRAFFIC_RESTART_BUTTON).click(this._onTrafficResetHandler);\n\n        return this;\n    }\n\n    /**\n     * Create event handlers\n     *\n     * Should be run once only on instantiation\n     *\n     * @for TrafficRateController\n     * @method _setupHandlers\n     * @chainable\n     */\n    _setupHandlers() {\n        this._onAirportChangeHandler = this.onAirportChange.bind(this);\n        this._onChangeWindDirectionHandler = this.onChangeWindDirection.bind(this);\n        this._onChangeWindSpeedHandler = this.onChangeWindSpeed.bind(this);\n        this._onFormResetHandler = this.onFormReset.bind(this);\n        this._onTrafficResetHandler = this.onTrafficReset.bind(this);\n\n        return this;\n    }\n\n    /**\n     * Enable event handlers\n     *\n     * should be run only once on instantiation\n     *\n     * @for TrafficRateController\n     * @method enable\n     * @chainable\n     */\n    enable() {\n        this._eventBus.on(EVENT.AIRPORT_CHANGE, this._onAirportChangeHandler);\n\n        return this;\n    }\n\n    /**\n     * Disable event handlers\n     *\n     * @for TrafficRateController\n     * @method disable\n     * @chainable\n     */\n    disable() {\n        this._eventBus.off(EVENT.AIRPORT_CHANGE, this._onAirportChangeHandler);\n\n        return this;\n    }\n\n    /**\n     * Returns whether the airport selection dialog is open\n     *\n     * @for TrafficRateController\n     * @method isDialogOpen\n     * @return {boolean}\n     */\n    isDialogOpen() {\n        return this.$dialog.hasClass(SELECTORS.CLASSNAMES.OPEN);\n    }\n\n    /**\n    * @for TrafficRateController\n    * @method toggleDialog\n    */\n    toggleDialog() {\n        this.$dialog.toggleClass(SELECTORS.CLASSNAMES.OPEN);\n    }\n\n    /**\n     * Rebuilds the dialog body when the airport is changed.\n     *\n     * @for TrafficRateController\n     * @method onAirportChange\n     */\n    onAirportChange() {\n        this._buildDialogBody();\n    }\n\n    /**\n     * Resets the traffic dialog and spawn rates to default values\n     *\n     * @for TrafficRateController\n     * @method onFormReset\n     */\n    onFormReset() {\n        const airport = AirportController.airport_get();\n        this._wind = { speed: airport.defaultWind.speed, angle: Math.round(radiansToDegrees(airport.defaultWind.angle)) };\n\n        this._eventBus.trigger(EVENT.WIND_CHANGE, this._wind);\n        SpawnPatternCollection.resetRates();\n        this._buildDialogBody();\n    }\n\n    /**\n     * Resets the generated traffic using the current traffic values\n     *\n     * @for TrafficRateController\n     * @method onTrafficReset\n     */\n    onTrafficReset() {\n        this._eventBus.trigger(EVENT.TRAFFIC_RESET);\n    }\n\n    /**\n     * Builds the dialog body\n     *\n     * @for TrafficRateController\n     * @method _buildDialogBody\n     */\n    _buildDialogBody() {\n        this.$dialogBody.empty();\n        this._rates = {};\n        this._elements = {};\n\n        const airport = AirportController.airport_get();\n        this._wind = { speed: airport.wind.speed, angle: Math.round(radiansToDegrees(airport.wind.angle)) };\n\n        const $windDirSlider = this._buildWindDirectionSlider(this._wind.angle);\n        const $windSpdSlider = this._buildWindSpeedSlider(this._wind.speed);\n\n        this.$dialogBody.append($windDirSlider);\n        this.$dialogBody.append($windSpdSlider);\n        this.$dialogBody.append('<hr />');\n\n        for (const category of Object.values(FLIGHT_CATEGORY)) {\n            this._rates[category] = 1;\n            this._elements[category] = [];\n            const $formElement = this._buildSlider(category, category, category, this._onChangeFlightCategoryRate);\n\n            this.$dialogBody.append($formElement);\n        }\n\n        for (const category of Object.values(FLIGHT_CATEGORY)) {\n            const spawnPatterns = SpawnPatternCollection.findSpawnPatternsByCategory(category);\n\n            if (spawnPatterns.length > 0) {\n                this.$dialogBody.append('<hr />');\n            }\n\n            _forEach(spawnPatterns, (spawnPattern) => {\n                const label = spawnPattern.routeString.replace(REGEX.SINGLE_DOT, ' ');\n                this._rates[spawnPattern.id] = spawnPattern.rate;\n                const $formElement = this._buildInputField(spawnPattern.id, label, spawnPattern, this._onChangeSpawnPatternRate);\n\n                this.$dialogBody.append($formElement);\n                this._elements[category].push({ spawnPattern, $formElement });\n            });\n        }\n    }\n\n    /**\n     * Build form element\n     *\n     * @for TrafficRateController\n     * @method _buildSlider\n     * @param key {string}\n     * @param data {string|object} passed to the change handler\n     * @param onChangeMethod {function}\n     * @return {jquery|HTML Element}\n     */\n    _buildSlider(key, label, data, onChangeMethod) {\n        const rate = this._rates[key];\n        const template = `\n            <div class=\"form-element\">\n                <div class=\"form-label\">${label}</div>\n                <input class=\"form-slider\" type=\"range\" name=\"${key}\" value=\"${rate}\" min=\"0\" max=\"10\" step=\"0.5\" />\n                <span class=\"form-value\">${rate}</span>\n            </div>`;\n        const $element = $(template);\n        const onChangeHandler = onChangeMethod.bind(this);\n\n        $element.on('change', { rateKey: data }, onChangeHandler);\n\n        return $element;\n    }\n\n    /**\n     * Build form element\n     *\n     * @for TrafficRateController\n     * @method _buildWindDirectionSlider\n     *\n     * @return {jquery|HTML Element}\n     */\n    _buildWindDirectionSlider(value) {\n        const name = 'wind direction';\n        const template = `\n            <div class=\"form-element\">\n                <div class=\"form-label\">${name}</div>\n                <input class=\"form-slider\" type=\"range\" name=\"${name}\" value=\"${value}\" min=\"10\" max=\"360\" step=\"10\" />\n                <span class=\"form-value\">${value}</span>\n            </div>`;\n        const $element = $(template);\n\n        $element.on('change', this._onChangeWindDirectionHandler);\n\n        return $element;\n    }\n\n    /**\n     * Build form element\n     *\n     * @for TrafficRateController\n     * @method _buildWindSpeedSlider\n     * @param key {string}\n     * @param label {string}\n     * @param value {number} passed to the change handler\n     * @return {jquery|HTML Element}\n     */\n    _buildWindSpeedSlider(value) {\n        const name = 'wind speed';\n        const template = `\n            <div class=\"form-element\">\n                <div class=\"form-label\">${name}</div>\n                <input class=\"form-slider\" type=\"range\" name=\"${name}\" value=\"${value}\" min=\"0\" max=\"25\" step=\"1\" />\n                <span class=\"form-value\">${value}</span>\n            </div>`;\n        const $element = $(template);\n\n        $element.on('change', this._onChangeWindSpeedHandler);\n\n        return $element;\n    }\n\n    /**\n     * Build form element\n     *\n     * @for TrafficRateController\n     * @method _buildInputField\n     * @param key {string}\n     * @param data {string|object} passed to the change handler\n     * @param onChangeMethod {function}\n     * @return {jquery|HTML Element}\n     */\n    _buildInputField(key, label, data, onChangeMethod) {\n        const rate = this._rates[key];\n        const template = `\n            <div class=\"form-element\">\n                <div class=\"form-label\">${label}</div>\n                <input class=\"form-input\" type=\"number\" name=\"${key}\" value=\"${rate}\" min=\"0\" max=\"60\">\n                <span class=\"form-value\">${rate}</span>\n            </div>`;\n        const $element = $(template);\n        const onChangeHandler = onChangeMethod.bind(this);\n\n        $element.on('change', { rateKey: data }, onChangeHandler);\n\n        return $element;\n    }\n\n    /**\n     * Called when the wind direction is changed\n     *\n     * @for TrafficRateController\n     * @method onChangeWindDirection\n     * @param event\n     */\n    onChangeWindDirection(event) {\n        const $target = $(event.target);\n        const $nextDirection = $target.next(`.${CLASSNAMES.FORM_VALUE}`);\n        const value = $target.val();\n        this._wind.angle = Number(value);\n\n        $nextDirection.text(value);\n        this._eventBus.trigger(EVENT.WIND_CHANGE, this._wind);\n    }\n\n    /**\n     * Called when the wind speed is changed\n     *\n     * @for TrafficRateController\n     * @method onChangeWindSpeed\n     * @param event\n     */\n    onChangeWindSpeed(event) {\n        const $target = $(event.target);\n        const $nextSpeed = $target.next(`.${CLASSNAMES.FORM_VALUE}`);\n        const value = $target.val();\n        this._wind.speed = Number(value);\n\n        $nextSpeed.text(value);\n        this._eventBus.trigger(EVENT.WIND_CHANGE, this._wind);\n    }\n\n    /**\n     * Called when the rate for a flight category was changed\n     *\n     * @for TrafficRateController\n     * @method _onChangeFlightCategoryRate\n     * @param event\n     */\n    _onChangeFlightCategoryRate(event) {\n        const $target = $(event.target);\n        const $output = $target.next(`.${CLASSNAMES.FORM_VALUE}`);\n        const value = $target.val();\n        const category = event.data.rateKey;\n        const elements = this._elements[category];\n        const { airportIcao } = elements[0].spawnPattern;\n        this._rates[category] = parseFloat(value);\n\n        $output.text(value);\n        EventTracker.recordEvent(TRACKABLE_EVENT.CHANGE_SPAWN_PATTERN, 'flight-category', `${airportIcao}:${category}:${value}`);\n\n        for (const { spawnPattern, $formElement } of elements) {\n            const $childOutput = $formElement.children(`.${CLASSNAMES.FORM_VALUE}`);\n\n            this._updateRate(spawnPattern, $childOutput);\n        }\n    }\n\n    /**\n     * Called when the rate for a route was changed\n     *\n     * @for TrafficRateController\n     * @method _onChangeSpawnPatternRate\n     * @param event\n     */\n    _onChangeSpawnPatternRate(event) {\n        const $target = $(event.target);\n        const $output = $target.next(`.${CLASSNAMES.FORM_VALUE}`);\n        const value = $target.val();\n        const spawnPattern = event.data.rateKey;\n        const nextRate = parseFloat(value);\n        this._rates[spawnPattern.id] = nextRate;\n\n        EventTracker.recordEvent(\n            TRACKABLE_EVENT.CHANGE_SPAWN_PATTERN,\n            'spawn-pattern',\n            `${spawnPattern.airportIcao}:${spawnPattern.routeString}:${spawnPattern.rate}:${nextRate}`\n        );\n        this._updateRate(spawnPattern, $output);\n    }\n\n    /**\n     * Recalculate the rate for a spawn pattern\n     *\n     * @for TrafficRateController\n     * @method _updateRate\n     * @param spawnPattern {SpawnPatternModel}\n     * @param $output {jQuery element} text element to output the actual rate\n     */\n    _updateRate(spawnPattern, $output) {\n        const { category } = spawnPattern;\n        spawnPattern.rate = this._rates[category] * this._rates[spawnPattern.id];\n\n        $output.text(spawnPattern.rate);\n        SpawnScheduler.resetTimer(spawnPattern);\n    }\n}\n","import _get from 'lodash/get';\n\nconst INIT_POSITION_PADDING = [0, 0];\n\n/**\n * Model representing a single tutorial step.\n *\n * Consumed by tutorial.js\n *\n * @class TutorialStep\n */\nexport default class TutorialStep {\n    /**\n     * @for TutorialStep\n     * @constructor\n     */\n    constructor(options = {}) {\n        this.title = _get(options, 'title', '?');\n        this.text = _get(options, 'text', '?');\n        this.parse = _get(options, 'parse', null);\n        this.side = _get(options, 'side', 'none');\n        // TODO: Is this an actual `relativePosition`, or something else?\n        this.position = _get(options, 'position', INIT_POSITION_PADDING);\n        this.padding = _get(options, 'padding', INIT_POSITION_PADDING);\n    }\n\n    /**\n     * Replace tokens with values from current sim state\n     * or return simple text.\n     *\n     * @for TutorialStep\n     * @method getText\n     * @return {string}\n     */\n    getText() {\n        if (this.parse) {\n            return this.parse(this.text);\n        }\n\n        return this.text;\n    }\n}\n","/* eslint-disable max-len, indent, no-undef, prefer-destructuring */\nimport $ from 'jquery';\nimport _has from 'lodash/has';\nimport _flow from 'lodash/flow';\nimport AirportController from '../airport/AirportController';\nimport EventBus from '../lib/EventBus';\nimport EventTracker from '../EventTracker';\nimport TimeKeeper from '../engine/TimeKeeper';\nimport TutorialStep from './TutorialStep';\nimport { round, clamp } from '../math/core';\nimport { EVENT } from '../constants/eventNames';\nimport { STORAGE_KEY } from '../constants/storageKeys';\nimport { SELECTORS } from '../constants/selectors';\nimport { TRACKABLE_EVENT } from '../constants/trackableEvents';\n\nconst tutorial = {};\n\nconst TUTORIAL_TEMPLATE = '' +\n    '<div id=\"tutorial\" class=\"notSelectable\">' +\n    '   <h1></h1>' +\n    '   <main></main>' +\n    '   <div class=\"prev\"><img src=\"assets/images/prev.png\" title=\"Previous step\" /></div>' +\n    '   <div class=\"next\"><img src=\"assets/images/next.png\" title=\"Next step\" /></div>' +\n    '</div>';\n\n/**\n * @class TutorialView\n */\nexport default class TutorialView {\n    /**\n     * @constructor\n     */\n    constructor($element = null) {\n        /**\n         * @property EventBus\n         * @type {EventBus}\n         * @default EventBus\n         * @private\n         */\n        this._eventBus = EventBus;\n\n        /**\n         * @property tutorial\n         * @type {}\n         * @private\n         */\n        this.tutorial = null;\n\n        /**\n         * Root DOM element\n         *\n         * @property $element\n         * @type {jquery|HTML Element}\n         * @default $element\n         */\n        this.$element = $element;\n\n        /**\n         * Root tutorial DOM element\n         *\n         * @property $tutorialView\n         * @type {jquery|HTML Element}\n         * @default `#tutorial`\n         */\n        this.$tutorialView = null;\n\n        /**\n         * Previous tutorial step button\n         *\n         * @property $tutorialPrevious\n         * @type {jquery|HTML Element}\n         * @default `.prev`\n         */\n        this.$tutorialPrevious = null;\n\n        /**\n         * Next tutorial step button\n         *\n         * @property $tutorialNext\n         * @type {jquery|HTML Element}\n         * @default `.next`\n         */\n        this.$tutorialNext = null;\n\n\n        /**\n         * Command bar button to toggle the tutorial on/off\n         *\n         * @for TutorialView\n         * @property $toggleTutorial\n         * @type {jquery|HTML Element}\n         */\n        this.$toggleTutorial = null;\n\n        this._init()\n            ._setupHandlers()\n            .layout()\n            .enable();\n    }\n\n    /**\n     * Lifecycle method should be run once on application init.\n     *\n     * Caches selectors in variabls so they only need to be looked up one time.\n     *\n     * @for TutorialView\n     * @method _init\n     * @chainable\n     */\n    _init() {\n        this.$tutorialView = $(TUTORIAL_TEMPLATE);\n        this.$tutorialPrevious = this.$tutorialView.find(SELECTORS.DOM_SELECTORS.PREV);\n        this.$tutorialNext = this.$tutorialView.find(SELECTORS.DOM_SELECTORS.NEXT);\n        this.$toggleTutorial = $(SELECTORS.DOM_SELECTORS.TOGGLE_TUTORIAL);\n\n        this.tutorial = tutorial;\n        this.tutorial.steps = [];\n        this.tutorial.step = 0;\n        this.tutorial.liverefs = {};\n        this.tutorial.open = false;\n\n        return this;\n    }\n\n    /**\n     * Create event handlers\n     *\n     * Should be run once only on instantiation\n     *\n     * @for TutorialView\n     * @method _setupHandlers\n     * @chainable\n     */\n    _setupHandlers() {\n        this._onAirportChangeHandler = this.onAirportChange.bind(this);\n        this._onTutorialToggleHandler = this.tutorial_toggle.bind(this);\n\n        return this;\n    }\n\n    /**\n     * Lifecycle method should be run once on application init.\n     *\n     * Adds the TUTORIAL_TEMPLATE to the view\n     *\n     * @for TutorialView\n     * @method layout\n     * @chainable\n     */\n    layout() {\n        if (!this.$element) {\n            throw new Error('Expected $element to be defined. `body` tag does not exist in the DOM');\n        }\n\n        this.tutorial.html = this.$tutorialView;\n        this.$element.append(this.$tutorialView);\n\n        return this;\n    }\n\n    /**\n     * Lifecycle method should be run once on application init.\n     *\n     * @for TutorialView\n     * @method enable\n     * @chainable\n     */\n    enable() {\n        this._eventBus.on(EVENT.TOGGLE_TUTORIAL, this._onTutorialToggleHandler);\n        this._eventBus.on(EVENT.AIRPORT_CHANGE, this._onAirportChangeHandler);\n\n        this.$tutorialPrevious.on('click', (event) => this.tutorial_prev(event));\n        this.$tutorialNext.on('click', (event) => this.tutorial_next(event));\n\n        return this;\n    }\n\n    /**\n     * Disable any click handlers.\n     *\n     * @for TutorialView\n     * @method disable\n     * @chainable\n     */\n    disable() {\n        this._eventBus.off(EVENT.TOGGLE_TUTORIAL, this._onTutorialToggleHandler);\n        this._eventBus.off(EVENT.AIRPORT_CHANGE, this._onAirportChangeHandler);\n\n        this.$tutorialPrevious.off('click', (event) => this.tutorial_prev(event));\n        this.$tutorialNext.off('click', (event) => this.tutorial_next(event));\n\n        return this.destroy();\n    }\n\n    /**\n     * Tear down the view and unset any properties.\n     *\n     * @for TutorialView\n     * @method destroy\n     * @chainable\n     */\n    destroy() {\n        this.$tutorialView = null;\n        this.$tutorialPrevious = null;\n        this.$tutorialNext = null;\n        this.tutorial = {};\n        this.tutorial.steps = [];\n        this.tutorial.step = 0;\n        this.tutorial.liverefs = {};\n        this.tutorial.open = false;\n\n        return this;\n    }\n\n    /**\n     * Return whether the tutorial dialog is currently open\n     *\n     * @for TutorialView\n     * @method isTutorialDialogOpen\n     * @return {boolean}\n     */\n    isTutorialDialogOpen() {\n        return this.$tutorialView.hasClass(SELECTORS.CLASSNAMES.OPEN);\n    }\n\n    /**\n     * Refresh the tutorial text contents when the airport is changed.\n     *\n     * @for TutorialView\n     * @method onAirportChange\n     */\n    onAirportChange() {\n        this.tutorial_update_content();\n    }\n\n    /**\n     * @for TutorialView\n     * @method tutorial_init_pre\n     */\n    tutorial_init_pre() {\n        this.tutorial = {};\n        this.tutorial.steps = [];\n        this.tutorial.step = 0;\n\n        // these always get evaluated on-the-fly.\n        this.tutorial.liverefs = {\n            airport: function() {\n                return AirportController.airport_get();\n            },\n            departureAircraft: function() {\n                return prop.aircraft.list.filter((aircraftModel) => aircraftModel.isDeparture())[0];\n            }\n        };\n\n        zlsa.atc.loadAsset({ url: 'assets/tutorial/tutorial.json', immediate: true })\n            .done((response) => {\n                response.forEach((step) => {\n                    this._loadTutorialStep(step);\n                });\n            })\n            .fail((jqxhr, textStatus, error) => {\n                console.error(`Failed to load tutorial data: ${textStatus}, ${error}`);\n                this.tutorial_step({ title: 'Error', text: `The tutorial failed to load: ${textStatus}, ${error}` });\n            });\n    }\n\n    /**\n     * Load a single step of the tutorial data that was parsed from JSON\n     *\n     * @for TutorialView\n     * @method _loadTutorialStep\n     */\n    _loadTutorialStep(step) {\n        if (Array.isArray(step.replace)) {\n            // take each text replacement entry, configure corresponding text.replace() function call, wrapped with checks\n            step.replace.forEach((replacement) => {\n                const objFetcher = this.tutorial.liverefs[replacement.replaceWith.object];\n                if (!objFetcher) {\n                    // don't create replace function if 'object' config is not one of valid options in liverefs\n                    console.error(`Tutorial: ${step.title}: ${replacement.replaceWith.object} is not valid.`);\n                    return;\n                }\n                const propFetcher = this._getPropFetcher(replacement.replaceWith.propPath);\n                const replaceFunc = (t) => {\n                    const value = propFetcher(objFetcher());\n                    if (value == null) { // null or undefined; likely configured with incorrect property path\n                        console.warn(`Tutorial: ${step.title}: ${replacement.replaceWith.object}.${replacement.replaceWith.propPath} has ${value} value.`);\n                        return t;\n                    }\n                    return t.replace(replacement.findWhat, value);\n                };\n\n                if (Array.isArray(step.parse)) {\n                    step.parse.push(replaceFunc);\n                } else {\n                    step.parse = [replaceFunc];\n                }\n            });\n\n            // compose possibly multiple text replacement functions together into one\n            if (Array.isArray(step.parse)) {\n                step.parse = _flow(...step.parse);\n            }\n            // discard property not used by TutorialStep\n            delete step.replace;\n        }\n        this.tutorial_step(step);\n    }\n\n    /**\n     * Fetching descendent property of an object without using eval()\n     *\n     * Adapted from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval#accessing_member_properties\n     *\n     * @for TutorialView\n     * @method _getPropFetcher\n     * @return [{function}] A function that will fetch a given descendent property of an object without using eval()\n     */\n    _getPropFetcher(desc) {\n        return ((obj) => {\n            let result = obj;\n            const arr = desc.split('.');\n            while (arr.length) {\n                if (result == null) { // null or undefined, can drill down no further\n                    return result;\n                }\n                result = result[arr.shift()];\n            }\n            return result;\n        });\n    }\n\n    /**\n     * Open/close the tutorial modal\n     *\n     * This method may be triggered via `EventBus.trigger()`\n     *\n     * @for TutorialView\n     * @method tutorial_toggle\n     */\n    tutorial_toggle() {\n        if (this.isTutorialDialogOpen()) {\n            this.tutorial_close();\n\n            return;\n        }\n\n        this.tutorial_open();\n    }\n\n    /**\n     * @method tutorial_get\n     */\n    tutorial_get(step = null) {\n        if (!step) {\n            step = this.tutorial.step;\n        }\n\n        return this.tutorial.steps[step];\n    }\n\n    /**\n     * @method tutorial_move\n     */\n    tutorial_move() {\n        const step = this.tutorial_get();\n        const padding = [30, 10];\n        const left = step.position[0] * ($(window).width() - this.$tutorialView.outerWidth() - padding[0]);\n        let top = step.position[1] * ($(window).height());\n        top -= (this.$tutorialView.outerHeight() - padding[1]);\n\n    //  left += step.padding[0];\n    //  top  += step.padding[1];\n\n        this.$tutorialView.offset({\n            top: round(top),\n            left: round(left)\n        });\n    }\n\n    /**\n     * @method tutorial_step\n     */\n    tutorial_step(options) {\n        this.tutorial.steps.push(new TutorialStep(options));\n    }\n\n    /**\n     * @method tutorial_update_content\n     */\n    tutorial_update_content() {\n        const step = this.tutorial_get();\n\n        this.$tutorialView.find('h1').html(step.title);\n        this.$tutorialView.find('main').html(step.getText());\n        this.$tutorialView.removeClass('left right');\n\n        if (step.side === SELECTORS.CLASSNAMES.LEFT) {\n            this.$tutorialView.addClass(SELECTORS.CLASSNAMES.LEFT);\n        } else if (step.side === SELECTORS.CLASSNAMES.RIGHT) {\n            this.$tutorialView.addClass(SELECTORS.CLASSNAMES.RIGHT);\n        }\n\n        this.tutorial_move();\n    }\n\n    /**\n     * @method tutorial_open\n     */\n    tutorial_open() {\n        this.$tutorialView.addClass(SELECTORS.CLASSNAMES.OPEN);\n        this.$toggleTutorial.addClass(SELECTORS.CLASSNAMES.ACTIVE);\n\n        this.tutorial_update_content();\n    }\n\n    /**\n     * @method tutorial_close\n     */\n    tutorial_close() {\n        this.$tutorialView.removeClass(SELECTORS.CLASSNAMES.OPEN);\n        this.$toggleTutorial.removeClass(SELECTORS.CLASSNAMES.ACTIVE);\n\n        this.tutorial_move();\n    }\n\n    // TODO: this method never gets called anywhere else, remove\n    /**\n     * @method tutorial_complete\n     */\n    tutorial_complete() {\n        if (!_has(localStorage, STORAGE_KEY.FIRST_RUN_TIME)) {\n            this.tutorial_open();\n        }\n\n        localStorage[STORAGE_KEY.FIRST_RUN_TIME] = TimeKeeper.gameTimeInSeconds;\n    }\n\n    /**\n     * @method tutorial_next\n     */\n    tutorial_next() {\n        if (this.tutorial.step === this.tutorial.steps.length - 1) {\n            this.tutorial_close();\n\n            return;\n        }\n\n        this.tutorial.step = clamp(0, this.tutorial.step + 1, this.tutorial.steps.length - 1);\n\n        EventTracker.recordEvent(TRACKABLE_EVENT.TUTORIAL, 'next', `${this.tutorial.step}`);\n        this.tutorial_update_content();\n    }\n\n    /**\n     * @method tutorial_prev\n     */\n    tutorial_prev() {\n        this.tutorial.step = clamp(0, this.tutorial.step - 1, this.tutorial.steps.length - 1);\n\n        EventTracker.recordEvent(TRACKABLE_EVENT.TUTORIAL, 'prev', `${this.tutorial.step}`);\n        this.tutorial_update_content();\n    }\n}\n","import $ from 'jquery';\nimport _keys from 'lodash/keys';\nimport AirportController from '../airport/AirportController';\nimport EventBus from '../lib/EventBus';\nimport EventTracker from '../EventTracker';\nimport GameController from '../game/GameController';\nimport SettingsController from './SettingsController';\nimport TrafficRateController from './TrafficRateController';\nimport VideoMapController from './VideoMapController';\nimport TutorialView from './TutorialView';\nimport { speech_toggle } from '../speech';\nimport { EVENT } from '../constants/eventNames';\nimport { SELECTORS } from '../constants/selectors';\nimport { TRACKABLE_EVENT } from '../constants/trackableEvents';\n\n/**\n * Listens for events that occur in the UI and delegates work to the correct place\n *\n * @class UiController\n */\nclass UiController {\n    /**\n     * @constructor\n     */\n    constructor() {\n        /**\n         * Local reference to `EventBus` singleton\n         *\n         * @for UiController\n         * @property _eventBus\n         * @type {EventBus}\n         * @default null\n         */\n        this._eventBus = null;\n\n        /**\n         * @for UiController\n         * @property tutorialView\n         * @type {TutorialView}\n         * @default null\n         */\n        this.tutorialView = null;\n\n        /**\n         * @for UiController\n         * @property settingsController\n         * @type {SettingsController}\n         * @default null\n         */\n        this.settingsController = null;\n\n        /**\n         * @for UiController\n         * @property trafficRateController\n         * @type {TrafficRateController}\n         * @default null\n         */\n        this.trafficRateController = null;\n\n        /**\n         * @for UiController\n         * @property videoMapController\n         * @type {VideoMapController}\n         * @default null\n         */\n        this.videoMapController = null;\n\n        /**\n         * Root element used to find all other DOM elements needed by this class\n         *\n         * @for UiController\n         * @property $element\n         * @type {Jquery|Element}\n         * @default null\n         */\n        this.$element = null;\n\n        /**\n         * Element of the airport selection dialog\n         *\n         * @for UiController\n         * @property $airportDialog\n         * @type {Jquery|Element}\n         * @default null\n         */\n        this.$airportDialog = null;\n\n        /**\n         * Element of the body of the airport selection dialog\n         *\n         * @for UiController\n         * @property $airportDialogBody\n         * @type {Jquery|Element}\n         * @default null\n         */\n        this.$airportDialogBody = null;\n\n        /**\n         * Element of the airport guide dialog\n         *\n         * @for UiController\n         * @property $airportGuideDialog\n         * @type {Jquery|Element}\n         * @default null\n         */\n        this.$airportGuideDialog = null;\n\n\n        /**\n         * Element of the airport search bar\n         *\n         * @for UiController\n         * @property $airportSearch\n         * @type {Jquery|Element}\n         * @default null\n         */\n        this.$airportSearch = null;\n\n        /**\n         * Element of the changelog dialog\n         *\n         * @for UiController\n         * @property $changelogDialog\n         * @type {Jquery|Element}\n         * @default null\n         */\n        this.$changelogDialog = null;\n\n        /**\n         * Footer button element used to toggle fast-forward mode on/off\n         *\n         * @for UiController\n         * @property $fastForwards\n         * @type {Jquery|Element}\n         * @default null\n         */\n        this.$fastForwards = null;\n\n        /**\n         * Footer button element which opens the openScope github page in a new tab\n         *\n         * @for UiController\n         * @property $githubLinkElement\n         * @type {Jquery|Element}\n         * @default null\n         */\n        this.$githubLinkElement = null;\n\n        /**\n         * Element displaying log of readbacks and other messages\n         *\n         * @for UiController\n         * @property $log\n         * @type {Jquery|Element}\n         * @default null\n         */\n        this.$log = null;\n\n        /**\n         * Duration for chat log transmissions to remain visible in seconds\n         *\n         * @for UiController\n         * @property chatLogDuration\n         * @type number\n         * @default null\n         */\n        this.chatLogDuration = null;\n\n        /**\n         * Element in center of screen to unpause when paused\n         *\n         * @for UiController\n         * @property $pausedImg\n         * @type {Jquery|Element}\n         * @default null\n         */\n        this.$pausedImg = null;\n\n        /**\n         * Footer button element used to toggle the airport selection dialog on/off\n         *\n         * @for UiController\n         * @property $switchAirport\n         * @type {Jquery|Element}\n         * @default null\n         */\n        this.$switchAirport = null;\n\n        /**\n         * Footer button element used to toggle the airport guide on/off\n         *\n         * @for UiController\n         * @property $toggleAirportGuide\n         * @type {Jquery|Element}\n         * @default null\n         */\n        this.$toggleAirportGuide = null;\n\n        /**\n         * Footer button element used to toggle airspace on/off\n         *\n         * @for UiController\n         * @property $toggleAirspace\n         * @type {Jquery|Element}\n         * @default null\n         */\n        this.$toggleAirspace = null;\n\n        /**\n         * Footer button element used to toggle the changelog on/off\n         *\n         * @for UiController\n         * @property $toggleChangelog\n         * @type {Jquery|Element}\n         * @default null\n         */\n        this.$toggleChangelog = null;\n\n        /**\n         * Footer button element used to toggle fix and runway labels on/off\n         *\n         * @for UiController\n         * @property $toggleLabels\n         * @type {Jquery|Element}\n         * @default null\n         */\n        this.$toggleLabels = null;\n\n        /**\n         * Footer button element used to toggle the options menu on/off\n         *\n         * @for UiController\n         * @property $toggleOptions\n         * @type {Jquery|Element}\n         * @default null\n         */\n        this.$toggleOptions = null;\n\n        /**\n         * Footer button element used to pause when the sim is running\n         *\n         * @for UiController\n         * @property $togglePause\n         * @type {Jquery|Element}\n         * @default null\n         */\n        this.$togglePause = null;\n\n        /**\n         * Footer button element used to toggle restricted areas on/off\n         *\n         * @for UiController\n         * @property $toggleRestrictedAreas\n         * @type {Jquery|Element}\n         * @default null\n         */\n        this.$toggleRestrictedAreas = null;\n\n        /**\n         * Footer button element used to toggle SIDs on/off\n         *\n         * @for UiController\n         * @property $toggleSids\n         * @type {Jquery|Element}\n         * @default null\n         */\n        this.$toggleSids = null;\n\n        /**\n         * Footer button element used to toggle speech synthesis on/off\n         *\n         * @for UiController\n         * @property $toggleSpeech\n         * @type {Jquery|Element}\n         * @default null\n         */\n        this.$toggleSpeech = null;\n\n        /**\n         * Footer button element used to toggle STARs on/off\n         *\n         * @for UiController\n         * @property $toggleStars\n         * @type {Jquery|Element}\n         * @default null\n         */\n        this.$toggleStars = null;\n\n        /**\n         * Footer button element used to toggle terrain on/off\n         *\n         * @for UiController\n         * @property $toggleTerrain\n         * @type {Jquery|Element}\n         * @default null\n         */\n        this.$toggleTerrain = null;\n\n        /**\n         * Footer button element used to toggle the traffic rate menu on/off\n         *\n         * @for UiController\n         * @property $toggleTraffic\n         * @type {Jquery|Element}\n         * @default null\n         */\n        this.$toggleTraffic = null;\n\n        /**\n         * Footer button element used to toggle the tutorial on/off\n         *\n         * @for UiController\n         * @property $toggleTutorial\n         * @type {Jquery|Element}\n         * @default null\n         */\n        this.$toggleTutorial = null;\n\n        /**\n         * Footer button element used to toggle the video map on/off\n         *\n         * @for UiController\n         * @property $toggleVideoMap\n         * @type {Jquery|Element}\n         * @default null\n         */\n        this.$toggleVideoMap = null;\n\n        /**\n         * Element of the tutorial dialog\n         *\n         * @for UiController\n         * @property $tutorialDialog\n         * @type {Jquery|Element}\n         * @default null\n         */\n        this.$tutorialDialog = null;\n    }\n\n    /**\n     * Initialization method\n     *\n     * Called from the `AppController` after instantiation of the `AircraftController`\n     *\n     * @for UiController\n     * @method init\n     * @param $element {jQuery Element}\n     */\n    init($element) {\n        this._eventBus = EventBus;\n        this.tutorialView = new TutorialView($element);\n        this.settingsController = new SettingsController($element);\n        this.trafficRateController = new TrafficRateController($element);\n        this.videoMapController = new VideoMapController($element);\n\n        this.$element = $element;\n        this.$airportDialog = this.$element.find(SELECTORS.DOM_SELECTORS.AIRPORT_SWITCH);\n        this.$airportDialogBody = this.$airportDialog.find(SELECTORS.DOM_SELECTORS.DIALOG_BODY);\n        this.$airportGuideDialog = this.$element.find(SELECTORS.DOM_SELECTORS.AIRPORT_GUIDE_CONTAINER);\n        this.$airportSearch = this.$element.find(SELECTORS.DOM_SELECTORS.AIRPORT_SEARCH);\n        this.$changelogDialog = this.$element.find(SELECTORS.DOM_SELECTORS.CHANGELOG_CONTAINER);\n        this.$fastForwards = this.$element.find(SELECTORS.DOM_SELECTORS.FAST_FORWARDS);\n        this.$githubLinkElement = this.$element.find(SELECTORS.DOM_SELECTORS.GITHUB_EXTERNAL_LINK);\n        this.$log = this.$element.find(SELECTORS.DOM_SELECTORS.LOG);\n        this.$pausedImg = this.$element.find(`${SELECTORS.DOM_SELECTORS.PAUSED} img`);\n        this.$switchAirport = this.$element.find(SELECTORS.DOM_SELECTORS.SWITCH_AIRPORT);\n        this.$toggleAirportGuide = this.$element.find(SELECTORS.DOM_SELECTORS.TOGGLE_AIRPORT_GUIDE);\n        this.$toggleAirspace = this.$element.find(SELECTORS.DOM_SELECTORS.TOGGLE_AIRSPACE);\n        this.$toggleChangelog = this.$element.find(SELECTORS.DOM_SELECTORS.TOGGLE_CHANGELOG);\n        this.$toggleLabels = this.$element.find(SELECTORS.DOM_SELECTORS.TOGGLE_LABELS);\n        this.$toggleOptions = this.$element.find(SELECTORS.DOM_SELECTORS.TOGGLE_OPTIONS);\n        this.$togglePause = this.$element.find(SELECTORS.DOM_SELECTORS.TOGGLE_PAUSE);\n        this.$toggleRestrictedAreas = this.$element.find(SELECTORS.DOM_SELECTORS.TOGGLE_RESTRICTED_AREAS);\n        this.$toggleSids = this.$element.find(SELECTORS.DOM_SELECTORS.TOGGLE_SIDS);\n        this.$toggleSpeech = this.$element.find(SELECTORS.DOM_SELECTORS.TOGGLE_SPEECH);\n        this.$toggleStars = this.$element.find(SELECTORS.DOM_SELECTORS.TOGGLE_STARS);\n        this.$toggleTerrain = this.$element.find(SELECTORS.DOM_SELECTORS.TOGGLE_TERRAIN);\n        this.$toggleTraffic = this.$element.find(SELECTORS.DOM_SELECTORS.TOGGLE_TRAFFIC);\n        this.$toggleTutorial = this.$element.find(SELECTORS.DOM_SELECTORS.TOGGLE_TUTORIAL);\n        this.$toggleVideoMap = this.$element.find(SELECTORS.DOM_SELECTORS.TOGGLE_VIDEO_MAP);\n        this.$tutorialDialog = this.$element.find(SELECTORS.DOM_SELECTORS.TUTORIAL);\n        this.chatLogDuration = GameController.game.option.getOptionByName('chatLogDuration');\n\n        return this.setupHandlers()\n            .enable();\n    }\n\n    /**\n     * @for UiController\n     * @method setupHandlers\n     * @chainable\n     */\n    setupHandlers() {\n        this.onAirportChangeHandler = this.onAirportChange.bind(this);\n        this.onChatLogDurationChangeHandler = this.onChatLogDurationChange.bind(this);\n\n        return this;\n    }\n\n    /**\n     * Enable event handlers\n     *\n     * @for UiController\n     * @method enable\n     * @chainable\n     */\n    enable() {\n        this._eventBus.on(EVENT.AIRPORT_CHANGE, this.onAirportChangeHandler);\n        this._eventBus.on(EVENT.CHAT_LOG_DURATION_CHANGE, this.onChatLogDurationChangeHandler);\n\n        // TODO: move these to properly bound handler methods\n\n        // using keyup here because the search is based on the contents of the search bar\n        this.$airportSearch.on('keyup', (event) => this._onInitiateAirportSearch(event));\n        this.$fastForwards.on('click', (event) => GameController.game_timewarp_toggle(event));\n        this.$githubLinkElement.on('click', (event) => this.onClickGithubLink(event));\n        this.$pausedImg.on('click', (event) => GameController.game_unpause(event));\n        this.$switchAirport.on('click', (event) => this.onToggleAirportList(event));\n        this.$toggleAirportGuide.on('click', (event) => this.onToggleAirportGuide(event));\n        this.$toggleAirspace.on('click', (event) => this.onToggleAirspace(event));\n        this.$toggleChangelog.on('click', (event) => this.onToggleChangelog(event));\n        this.$toggleLabels.on('click', (event) => this.onToggleLabels(event));\n        this.$toggleOptions.on('click', (event) => this.onToggleOptions(event));\n        this.$togglePause.on('click', (event) => GameController.game_pause_toggle(event));\n        this.$toggleRestrictedAreas.on('click', (event) => this.onToggleRestrictedAreas(event));\n        this.$toggleSids.on('click', (event) => this.onToggleSids(event));\n        this.$toggleSpeech.on('click', (event) => speech_toggle(event));\n        this.$toggleStars.on('click', (event) => this.onToggleStars(event));\n        this.$toggleTerrain.on('click', (event) => this.onToggleTerrain(event));\n        this.$toggleTraffic.on('click', (event) => this.onToggleTraffic(event));\n        this.$toggleTutorial.on('click', (event) => this.onToggleTutorial(event));\n        this.$toggleVideoMap.on('click', (event) => this.onToggleVideoMap(event));\n\n        return this;\n    }\n\n    /**\n     * Disable event handlers\n     *\n     * @for UiController\n     * @method disable\n     * @chainable\n     */\n    disable() {\n        this._eventBus.off(EVENT.AIRPORT_CHANGE, this.onAirportChangeHandler);\n        this._eventBus.off(EVENT.CHAT_LOG_DURATION_CHANGE, this.onChatLogDurationChangeHandler);\n        this.$airportSearch.off('keyup', (event) => this._onInitiateAirportSearch(event));\n        this.$fastForwards.off('click', (event) => GameController.game_timewarp_toggle(event));\n        this.$githubLinkElement.off('click', (event) => this.onClickGithubLink(event));\n        this.$pausedImg.off('click', (event) => GameController.game_unpause(event));\n        this.$switchAirport.off('click', (event) => this.onToggleAirportList(event));\n        this.$toggleAirportGuide.off('click', (event) => this.onToggleAirportGuide(event));\n        this.$toggleAirspace.off('click', (event) => this.onToggleAirspace(event));\n        this.$toggleChangelog.off('click', (event) => this.onToggleChangelog(event));\n        this.$toggleLabels.off('click', (event) => this.onToggleLabels(event));\n        this.$toggleOptions.off('click', (event) => this.onToggleOptions(event));\n        this.$togglePause.off('click', (event) => GameController.game_pause_toggle(event));\n        this.$toggleRestrictedAreas.off('click', (event) => this.onToggleRestrictedAreas(event));\n        this.$toggleSids.off('click', (event) => this.onToggleSids(event));\n        this.$toggleSpeech.off('click', (event) => speech_toggle(event));\n        this.$toggleStars.off('click', (event) => this.onToggleStars(event));\n        this.$toggleTerrain.off('click', (event) => this.onToggleTerrain(event));\n        this.$toggleTraffic.off('click', (event) => this.onToggleTraffic(event));\n        this.$toggleTutorial.off('click', (event) => this.onToggleTutorial(event));\n        this.$toggleVideoMap.off('click', (event) => this.onToggleVideoMap(event));\n\n        return this();\n    }\n\n    /**\n     * Reset the instance\n     *\n     * @for UiController\n     * @method reset\n     */\n    reset() {\n        this.disable();\n\n        this._eventBus = null;\n        this.tutorialView = null;\n        this.settingsController = null;\n        this.trafficRateController = null;\n\n        this.$element = null;\n        this.$airportDialog = null;\n        this.$airportDialogBody = null;\n        this.$airportGuideDialog = null;\n        this.$airportSearch = null;\n        this.$changelogDialog = null;\n        this.$fastForwards = null;\n        this.$githubLinkElement = null;\n        this.$log = null;\n        this.chatLogDuration = null;\n        this.$pausedImg = null;\n        this.$switchAirport = null;\n        this.$toggleAirportGuide = null;\n        this.$toggleAirspace = null;\n        this.$toggleChangelog = null;\n        this.$toggleLabels = null;\n        this.$toggleOptions = null;\n        this.$togglePause = null;\n        this.$toggleRestrictedAreas = null;\n        this.$toggleSids = null;\n        this.$toggleSpeech = null;\n        this.$toggleStars = null;\n        this.$toggleTerrain = null;\n        this.$toggleTraffic = null;\n        this.$toggleTutorial = null;\n        this.$toggleVideoMap = null;\n        this.$tutorialDialog = null;\n\n        return this;\n    }\n\n    /**\n     * @for uiController\n     * @method ui_init\n     */\n    ui_init() {\n        this.tutorialView.tutorial_init_pre();\n        this.$fastForwards.prop('title', 'Set time warp to 2');\n    }\n\n    /**\n     * @for UiController\n     * @method ui_complete\n     */\n    ui_complete() {\n        this._buildAirportList();\n    }\n\n    /**\n     * @for UiController\n     * @method ui_log\n     */\n    ui_log(message, warn = false) {\n        const html = $(`<span class=\"item\"><span class=\"message\">${message}</span></span>`);\n\n        if (warn) {\n            html.addClass(SELECTORS.CLASSNAMES.WARN);\n            EventTracker.recordEvent(TRACKABLE_EVENT.UI_LOG, 'error', message);\n        }\n\n        this.$log.append(html);\n        this.$log.scrollTop(this.$log.get(0).scrollHeight);\n\n        GameController.game_timeout((uiLogView) => {\n            uiLogView.addClass(SELECTORS.CLASSNAMES.HIDDEN);\n\n            setTimeout(() => {\n                uiLogView.remove();\n            }, 10000);\n        }, this.chatLogDuration, window, html);\n    }\n\n    /**\n     * @for UiController\n     * @method onAirportChange\n     */\n    onAirportChange() {\n        this.$log.empty();\n    }\n\n    /**\n     * @for UiController\n     * @method onAirportChange\n     */\n    onChatLogDurationChange() {\n        this.chatLogDuration = GameController.game.option.getOptionByName('chatLogDuration');\n    }\n\n    /**\n     * Close all open dialogs and return focus to the command bar\n     *\n     * @for UiController\n     * @method closeAllDialogs\n     */\n    closeAllDialogs() {\n        if (this.isAirportGuideDialogOpen()) {\n            this.onToggleAirportGuide();\n        }\n\n        if (this.isAirportSelectionDialogOpen()) {\n            this.onToggleAirportList();\n        }\n\n        if (this.isChangelogDialogOpen()) {\n            this.onToggleChangelog();\n        }\n\n        if (this.settingsController.isDialogOpen()) {\n            this.onToggleOptions();\n        }\n\n        if (this.trafficRateController.isDialogOpen()) {\n            this.onToggleTraffic();\n        }\n\n        if (this.isTutorialDialogOpen()) {\n            this.onToggleTutorial();\n        }\n\n        if (this.videoMapController.isDialogOpen()) {\n            this.onToggleVideoMap();\n        }\n    }\n\n    /**\n     * Returns whether the airport guide dialog is open\n     *\n     * @for UiController\n     * @method isAirportGuideDialogOpen\n     * @return {boolean}\n     */\n    isAirportGuideDialogOpen() {\n        return this.$airportGuideDialog.hasClass(SELECTORS.CLASSNAMES.OPEN);\n    }\n\n    /**\n     * Returns whether the airport selection dialog is open\n     *\n     * @for UiController\n     * @method isAirportSelectionDialogOpen\n     * @return {boolean}\n     */\n    isAirportSelectionDialogOpen() {\n        return this.$airportDialog.hasClass(SELECTORS.CLASSNAMES.OPEN);\n    }\n\n    /**\n     * Returns whether the changelog dialog is open\n     *\n     * @for UiController\n     * @method isChangelogDialogOpen\n     * @return {boolean}\n     */\n    isChangelogDialogOpen() {\n        return this.$changelogDialog.hasClass(SELECTORS.CLASSNAMES.OPEN);\n    }\n\n    /**\n     * Returns whether the tutorial dialog is open\n     *\n     * @for UiController\n     * @method isTutorialDialogOpen\n     * @return {boolean}\n     */\n    isTutorialDialogOpen() {\n        return this.$tutorialDialog.hasClass(SELECTORS.CLASSNAMES.OPEN);\n    }\n\n    /**\n     * @for uiController\n     * @method onClickAirportListItemHandler\n     * @paam event {jquery event}\n     */\n    onClickAirportListItemHandler(event) {\n        if (event.data !== AirportController.airport_get().icao) {\n            AirportController.airport_set(event.data);\n            this._onClickCloseAirportDialog();\n        }\n    }\n\n    /**\n     * Loop through each airport defined in the `AirportController` and build\n     * a list item that can be appended to the #airport-list element.\n     *\n     * @for UiController\n     * @method _buildAirportList\n     * @private\n     */\n    _buildAirportList() {\n        // clear out the contents of this element\n        this.$airportDialogBody.empty();\n\n        const airports = _keys(AirportController.airports).sort();\n        let difficulty = '';\n\n        for (let i = 0; i < airports.length; i++) {\n            const { name, icao, level } = AirportController.airports[airports[i]];\n\n            difficulty = this._buildAirportListIconForDifficultyLevel(level);\n            const $airportListItem = $(this._buildAirportListItemTemplate(icao, difficulty, name));\n\n            // TODO: replace with an onClick() handler\n            $airportListItem.click(icao.toLowerCase(), (event) => {\n                if (event.data !== AirportController.airport_get().icao) {\n                    AirportController.airport_set(event.data);\n\n                    this._onClickCloseAirportDialog();\n                }\n            });\n\n            this.$airportDialogBody.append($airportListItem);\n        }\n    }\n\n    /**\n     * Given a `difficultyLevel`, create a string with the correct icon char code\n     * that can be used in the airport list\n     *\n     * @for UiController\n     * @method _buildAirportListIconForDifficultyLevel\n     * @param difficultyLevel {string}\n     * @return difficulty {string}\n     * @private\n     */\n    _buildAirportListIconForDifficultyLevel(difficultyLevel) {\n        let difficulty;\n        const icon = '&#9992;';\n\n        switch (difficultyLevel) {\n            case 'beginner':\n                difficulty = icon;\n                break;\n            case 'easy':\n                difficulty = icon.repeat(2);\n                break;\n            case 'medium':\n                difficulty = icon.repeat(3);\n                break;\n            case 'hard':\n                difficulty = icon.repeat(4);\n                break;\n            case 'expert':\n                difficulty = icon.repeat(5);\n                break;\n            default:\n                difficulty = '?';\n                break;\n        }\n\n        return difficulty;\n    }\n\n    /**\n     * @for uiController\n     * @method _buildAirportListItemTemplate\n     * @param icao {string}\n     * @param difficulty {string}\n     * @param name {string}\n     * @return {DOM element|string}\n     */\n    _buildAirportListItemTemplate(icao, difficulty, name) {\n        return `\n            <li class=\"airport-list-item\" data-icao=\"${icao.toLowerCase()}\">\n                <span style=\"font-size: 7pt\" class=\"difficulty\">${difficulty}</span>\n                <span class=\"icao\">${icao.toUpperCase()}</span>\n                <span class=\"name\">${name}</span>\n            </li>\n        `;\n    }\n\n    /**\n     * @for UiController\n     * @method _onClickOpenAirportDialog\n     */\n\n    _onClickOpenAirportDialog() {\n        EventTracker.recordEvent(TRACKABLE_EVENT.AIRPORTS, 'airport-switcher', 'open');\n        this.$airportDialog.addClass(SELECTORS.CLASSNAMES.OPEN);\n\n        const $previousActiveAirport = this.$airportDialogBody.find(SELECTORS.DOM_SELECTORS.AIRPORT_LIST_ITEM_IS_ACTIVE);\n\n        // Remove the active class from a no-longer-selected airport in the list.\n        if ($previousActiveAirport.length !== 0) {\n            $previousActiveAirport.removeClass(SELECTORS.CLASSNAMES.AIRPORT_LIST_ITEM_IS_ACTIVE);\n        }\n\n        const icao = AirportController.airport_get().icao.toLowerCase();\n        this.$airportDialogBody.find(`li[data-icao=\"${icao}\"]`).addClass(SELECTORS.CLASSNAMES.AIRPORT_LIST_ITEM_IS_ACTIVE);\n\n        this.$switchAirport.addClass(SELECTORS.CLASSNAMES.ACTIVE);\n    }\n\n\n    /**\n     * @for UiController\n     * @method _onInitiateAirportSearch\n     */\n    _onInitiateAirportSearch() {\n        EventTracker.recordEvent(TRACKABLE_EVENT.AIRPORTS, 'airport-search', 'start');\n\n        const value = this.$airportSearch.val().toLowerCase();\n\n        $('.dialog-body li').each(\n            function() {\n                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);\n            }\n        );\n    }\n\n    /**\n     * @for UiController\n     * @method _onClickCloseAirportDialog\n     * @private\n     */\n    _onClickCloseAirportDialog() {\n        EventTracker.recordEvent(TRACKABLE_EVENT.AIRPORTS, 'airport-switcher', 'close');\n        this.$airportDialog.removeClass(SELECTORS.CLASSNAMES.OPEN);\n        this.$switchAirport.removeClass(SELECTORS.CLASSNAMES.ACTIVE);\n        this.$airportSearch.val(null);\n        $('.dialog-body li').each(() => $(this).toggle(true));\n    }\n\n    /**\n     * @for UiController\n     * @method onToggleAirportList\n     */\n    onToggleAirportList() {\n        if (this.$airportDialog.hasClass(SELECTORS.CLASSNAMES.OPEN)) {\n            this._onClickCloseAirportDialog();\n\n            return;\n        }\n\n        this._onClickOpenAirportDialog();\n    }\n\n    /**\n     * @for UiController\n     * @method onToggleAirportGuide\n     */\n    onToggleAirportGuide() {\n        this.$toggleAirportGuide.toggleClass(SELECTORS.CLASSNAMES.ACTIVE);\n        EventTracker.recordEvent(\n            TRACKABLE_EVENT.OPTIONS,\n            'airport-guide',\n            `airport-guide:${this.$toggleAirportGuide.hasClass(SELECTORS.CLASSNAMES.ACTIVE)}`\n        );\n        this._eventBus.trigger(EVENT.TOGGLE_AIRPORT_GUIDE);\n    }\n\n    /**\n     * @for UiController\n     * @method onToggleAirspace\n     * @param event {jquery event}\n     */\n    onToggleAirspace(event) {\n        this.$toggleAirspace.toggleClass(SELECTORS.CLASSNAMES.ACTIVE);\n        EventTracker.recordEvent(\n            TRACKABLE_EVENT.OPTIONS,\n            'airspace',\n            `${this.$toggleAirspace.hasClass(SELECTORS.CLASSNAMES.ACTIVE)}`\n        );\n        this._eventBus.trigger(EVENT.TOGGLE_AIRSPACE);\n    }\n\n    /**\n     * @for UiController\n     * @method onToggleChangelog\n     */\n    onToggleChangelog() {\n        this._eventBus.trigger(EVENT.TOGGLE_CHANGELOG);\n    }\n\n    /**\n     * @for UiController\n     * @method onToggleLabels\n     * @param {jquery event}\n     */\n    onToggleLabels(event) {\n        this.$toggleLabels.toggleClass(SELECTORS.CLASSNAMES.ACTIVE);\n        EventTracker.recordEvent(\n            TRACKABLE_EVENT.OPTIONS,\n            'fix-runway-labels',\n            `${this.$toggleLabels.hasClass(SELECTORS.CLASSNAMES.ACTIVE)}`\n        );\n        this._eventBus.trigger(EVENT.TOGGLE_LABELS);\n    }\n\n    /**\n    * @for UiController\n    * @method onToggleOptions\n    */\n    onToggleOptions() {\n        this.$toggleOptions.toggleClass(SELECTORS.CLASSNAMES.ACTIVE);\n        EventTracker.recordEvent(\n            TRACKABLE_EVENT.SETTINGS,\n            'toggle-dialog',\n            `${this.$toggleOptions.hasClass(SELECTORS.CLASSNAMES.ACTIVE)}`\n        );\n        this.settingsController.toggleDialog();\n    }\n\n    /**\n     * @for UiController\n     * @method onToggleRestrictedAreas\n     */\n    onToggleRestrictedAreas(event) {\n        this.$toggleRestrictedAreas.toggleClass(`${SELECTORS.DOM_SELECTORS.WARNING_BUTTON} ${SELECTORS.CLASSNAMES.ACTIVE}`);\n        EventTracker.recordEvent(\n            TRACKABLE_EVENT.OPTIONS,\n            'restricted',\n            `${this.$toggleRestrictedAreas.hasClass(SELECTORS.CLASSNAMES.ACTIVE)}`\n        );\n        this._eventBus.trigger(EVENT.TOGGLE_RESTRICTED_AREAS);\n    }\n\n    /**\n     * @for UiController\n     * @method onToggleSids\n     * @param event {jquery event}\n     */\n    onToggleSids(event) {\n        this.$toggleSids.toggleClass(SELECTORS.CLASSNAMES.ACTIVE);\n        EventTracker.recordEvent(\n            TRACKABLE_EVENT.OPTIONS,\n            'sids',\n            `${this.$toggleSids.hasClass(SELECTORS.CLASSNAMES.ACTIVE)}`\n        );\n        this._eventBus.trigger(EVENT.TOGGLE_SID_MAP);\n    }\n\n    /**\n     * @for UiController\n     * @method onToggleStars\n     * @param event {jquery event}\n     */\n    onToggleStars(event) {\n        this.$toggleStars.toggleClass(SELECTORS.CLASSNAMES.ACTIVE);\n        EventTracker.recordEvent(\n            TRACKABLE_EVENT.OPTIONS,\n            'stars',\n            `${this.$toggleStars.hasClass(SELECTORS.CLASSNAMES.ACTIVE)}`\n        );\n        this._eventBus.trigger(EVENT.TOGGLE_STAR_MAP);\n    }\n\n    /**\n     * @for UiController\n     * @method onToggleTerrain\n     * @param event {jquery event}\n     */\n    onToggleTerrain(event) {\n        this.$toggleTerrain.toggleClass(SELECTORS.CLASSNAMES.ACTIVE);\n        EventTracker.recordEvent(\n            TRACKABLE_EVENT.OPTIONS,\n            'terrain',\n            `${this.$toggleTerrain.hasClass(SELECTORS.CLASSNAMES.ACTIVE)}`\n        );\n        this._eventBus.trigger(EVENT.TOGGLE_TERRAIN);\n    }\n\n    /**\n     * Handler for toggling the traffic volume view\n     *\n     * @for UiController\n     * @method onToggleTraffic\n     * @param event {jquery event}\n     */\n    onToggleTraffic(event) {\n        this.$toggleTraffic.toggleClass(SELECTORS.CLASSNAMES.ACTIVE);\n        EventTracker.recordEvent(\n            TRACKABLE_EVENT.OPTIONS,\n            'traffic',\n            `${this.$toggleTraffic.hasClass(SELECTORS.CLASSNAMES.ACTIVE)}`\n        );\n        this.trafficRateController.toggleDialog();\n    }\n\n    /**\n    * @for UiController\n    * @method onToggleTutorial\n    * @param event {jquery event}\n    */\n    onToggleTutorial(event) {\n        this._eventBus.trigger(EVENT.TOGGLE_TUTORIAL);\n        EventTracker.recordEvent(\n            TRACKABLE_EVENT.OPTIONS,\n            'tutorial',\n            `${this.$toggleTutorial.hasClass(SELECTORS.CLASSNAMES.ACTIVE)}`\n        );\n    }\n\n    /**\n     * Handler for selecting the current Video Maps\n     *\n     * @for UiController\n     * @method onToggleVideoMap\n     * @param event {jquery event}\n     */\n    onToggleVideoMap(event) {\n        this.$toggleVideoMap.toggleClass(SELECTORS.CLASSNAMES.ACTIVE);\n        EventTracker.recordEvent(\n            TRACKABLE_EVENT.OPTIONS,\n            'video-map',\n            `${this.$toggleVideoMap.hasClass(SELECTORS.CLASSNAMES.ACTIVE)}`\n        );\n        this.videoMapController.toggleDialog();\n    }\n\n    /**\n     * Provides a hook to track a click event for ga\n     *\n     * @for UiController\n     * @method onClickGithubLink\n     * @param event {jquery event}\n     */\n    onClickGithubLink(event) {\n        EventTracker.recordClickOnOutboundLink(event.target.href);\n    }\n}\n\nexport default new UiController();\n","import $ from 'jquery';\nimport EventBus from '../lib/EventBus';\nimport { SELECTORS, CLASSNAMES } from '../constants/selectors';\nimport { EVENT } from '../constants/eventNames';\nimport AirportController from '../airport/AirportController';\n\n/**\n * @property UI_SETTINGS_MODAL_TEMPLATE\n * @type {string}\n * @final\n */\nconst UI_MAP_MODAL_TEMPLATE = `\n    <div class=\"map-dialog dialog notSelectable\">\n        <p class=\"dialog-title\">Video Maps</p>\n        <div class=\"dialog-body nice-scrollbar\"></div>\n    </div>`;\n\n/**\n * @class VideoMapController\n */\nexport default class VideoMapController {\n    constructor($element) {\n        /**\n         * @property EventBus\n         * @type {EventBus}\n         * @default EventBus\n         * @private\n         */\n        this._eventBus = EventBus;\n\n        /**\n         * Root DOM element\n         *\n         * @property $element\n         * @type {jquery|HTML Element}\n         * @default $element\n         */\n        this.$element = $element;\n\n        /**\n         * Dialog DOM element\n         *\n         * @property $dialog\n         * @type {jquery|HTML Element}\n         * @default null\n         */\n        this.$dialog = null;\n\n        /**\n         * Currently selected maps, default to the one in the Airport file\n         *\n         * @property _selectedMaps\n         * @type {object}\n         * @default null\n         */\n        this._selectedMaps = null;\n\n\n        this._setupHandlers()\n            .init()\n            .enable();\n    }\n\n    /**\n     *\n     * @for VideoMapController\n     * @method init\n     * @chainable\n     */\n    init() {\n        this.$dialog = $(UI_MAP_MODAL_TEMPLATE);\n        this.$dialogBody = this.$dialog.find(`.${CLASSNAMES.DIALOG_BODY}`);\n\n        this._buildDialogBody();\n        this.$element.append(this.$dialog);\n\n        return this;\n    }\n\n    /**\n     * Create event handlers\n     *\n     * Should be run once only on instantiation\n     *\n     * @for VideoMapController\n     * @method _setupHandlers\n     * @chainable\n     */\n    _setupHandlers() {\n        this._onAirportChangeHandler = this.onAirportChange.bind(this);\n        this._onChangeSelectedMapsHandler = this.onChangeSelectedMaps.bind(this);\n\n        return this;\n    }\n\n    /**\n     * Enable event handlers\n     *\n     * should be run only once on instantiation\n     *\n     * @for VideoMapController\n     * @method enable\n     * @chainable\n     */\n    enable() {\n        this._eventBus.on(EVENT.AIRPORT_CHANGE, this._onAirportChangeHandler);\n\n        return this;\n    }\n\n    /**\n     * Disable event handlers\n     *\n     * @for VideoMapController\n     * @method disable\n     * @chainable\n     */\n    disable() {\n        this._eventBus.off(EVENT.AIRPORT_CHANGE, this._onAirportChangeHandler);\n\n        return this;\n    }\n\n    /**\n     * Returns whether the airport selection dialog is open\n     *\n     * @for VideoMapController\n     * @method isDialogOpen\n     * @return {boolean}\n     */\n    isDialogOpen() {\n        return this.$dialog.hasClass(SELECTORS.CLASSNAMES.OPEN);\n    }\n\n    /**\n    * @for VideoMapController\n    * @method toggleDialog\n    */\n    toggleDialog() {\n        this.$dialog.toggleClass(SELECTORS.CLASSNAMES.OPEN);\n    }\n\n    /**\n     * Rebuilds the dialog body when the airport is changed.\n     *\n     * @for VideoMapController\n     * @method onAirportChange\n     */\n    onAirportChange() {\n        this._buildDialogBody();\n    }\n\n    /**\n     * Builds the dialog body\n     *\n     * @for VideoMapController\n     * @method _buildDialogBody\n     */\n    _buildDialogBody() {\n        this.$dialogBody.empty();\n\n        const airportModel = AirportController.airport_get();\n        const mapNames = airportModel.mapCollection.getMapNames();\n        this._selectedMaps = airportModel.mapCollection.getVisibleMapNames();\n\n        for (const mapName of mapNames) {\n            const isChecked = this._selectedMaps.includes(mapName);\n            const $formElement = this._buildRow(mapName, mapName, isChecked);\n\n            this.$dialogBody.append($formElement);\n        }\n    }\n\n    /**\n     * Build form element\n     *\n     * @for VideoMapController\n     * @method _buildRow\n     * @param key {string}\n     * @param label {string}\n     * @param checked {boolean} initial value\n     * @param onChangeMethod {function}\n     * @return {jquery|HTML Element}\n     */\n    _buildRow(key, label, checked) {\n        const template = `\n            <div class=\"form-element\">\n                <input class=\"form-checkbox\" type=\"checkbox\" name=\"${key}\"/>\n                <label class=\"form-label\"> ${label}</label>\n            </div>`;\n        const $element = $(template);\n\n        $element.find('.form-checkbox').prop('checked', checked);\n        $element.on('change', { name: label }, this._onChangeSelectedMapsHandler);\n\n        return $element;\n    }\n\n    /**\n     * Called when the video map selection is changed\n     *\n     * @for VideoMapController\n     * @method onChangeSelectedMaps\n     * @param event\n     */\n    onChangeSelectedMaps(event) {\n        const $target = $(event.target);\n        const isChecked = $target.prop('checked');\n        const map = event.data.name;\n\n        if (!isChecked) {\n            this._removeMap(map);\n            return;\n        }\n\n        this._addMap(map);\n    }\n\n    /**\n     * Helper method to add a map to the list of selected maps\n     *\n     * @param map\n     * @private\n     */\n    _addMap(map) {\n        this._selectedMaps.push(map);\n        this._eventBus.trigger(EVENT.TOGGLE_VIDEO_MAP, this._selectedMaps);\n    }\n\n    /**\n     *  Helper method to remove a map from the list of selected maps\n     *\n     * @param map\n     * @private\n     */\n    _removeMap(map) {\n        const index = this._selectedMaps.indexOf(map);\n\n        if (index > -1) {\n            this._selectedMaps.splice(index, 1);\n        }\n\n        this._eventBus.trigger(EVENT.TOGGLE_VIDEO_MAP, this._selectedMaps);\n    }\n}\n","export const AUTOCOMPLETE_ARGUMENT_TEMPLATE = `\n<table>\n{{#each paramsets}}\n<tr class=\"{{validity}}\">\n    <td class=\"autocomplete-suggestion\">{{../command}} {{{example}}}</td>\n    <td class=\"autocomplete-param-explanation\">{{{explain}}}</td>\n</tr>\n{{else}}\n<tr class=\"{{validity}}\">\n    <td class=\"autocomplete-param-explanation\">This command does not accept arguments</td>\n</tr>\n{{/each}}\n</table>\n`;\n","export const AUTOCOMPLETE_COMMAND_TEMPLATE = `\n<table>\n{{#each this}}\n<tr data-command=\"{{command}}\">\n    <td class=\"autocomplete-suggestion\">{{command}}</td>\n    <td>{{{explanation}}}</td>\n</tr>\n{{else}}\n<tr>\n    <td>No matching commands</td>\n</tr>\n{{/each}}\n</table>\n`;\n","import $ from 'jquery';\nimport _isArray from 'lodash/isArray';\nimport _isEmpty from 'lodash/isEmpty';\nimport RegexGroup from './RegexGroup';\nimport {\n    AUTOCOMPLETE_COMMAND_TYPE,\n    AUTOCOMPLETE_STATE,\n    AUTOCOMPLETE_COMMAND_STATES,\n    AUTOCOMPLETE_INPUT_PLACEHOLDER,\n    AUTOCOMPLETE_PARAMS_VALIDITY,\n    AUTOCOMPLETE_REGEXP\n} from '../../constants/autocompleteConstants';\nimport {\n    KEY_CODES,\n    LEGACY_KEY_CODES,\n    MOUSE_EVENT_CODE\n} from '../../constants/inputConstants';\nimport { SELECTORS } from '../../constants/selectors';\nimport { AUTOCOMPLETE_COMMAND_TEMPLATE } from './AutocompleteCommandTemplate';\nimport { AUTOCOMPLETE_ARGUMENT_TEMPLATE } from './AutocompleteArgumentTemplate';\n\nconst Handlebars = require('handlebars');\n\n/**\n * @class AutocompleteController\n */\nexport default class AutocompleteController {\n    /**\n     * @constructor\n     * @param $element {JQuery|HTML Element}\n     * @param inputController {InputController}\n     * @param aircraftController {AircraftController}\n     */\n    constructor($element, inputController, aircraftController) {\n        this.$element = $element;\n        this.$autocomplete = null;\n        this.$autocompleteInput = null;\n        this.$autocompleteOutput = null;\n        this.$autocompleteSpacer = null;\n        this.$autocompleteSuggests = null;\n\n        this._inputController = inputController;\n        this._aircraftController = aircraftController;\n\n        this.commandDefs = {};\n        this.lookup = {};\n        this.ready = false;\n\n        this.active = false;\n        this.state = AUTOCOMPLETE_STATE.COMMANDS.NO_MATCHES;\n        this.commandType = AUTOCOMPLETE_COMMAND_TYPE.TRANSMIT;\n        this.initialRange = {};\n        this.targetRange = {};\n        this.highlighted = null;\n        this.inputRevert = null;\n        this.params = {};\n\n        this._init();\n    }\n\n    /**\n     * @for AutocompleteController\n     * @method _init\n     * @private\n     */\n    _init() {\n        this.$autocomplete = this.$element.find(SELECTORS.DOM_SELECTORS.AUTOCOMPLETE);\n        this.$autocompleteInput = this.$autocomplete.find(SELECTORS.DOM_SELECTORS.AUTOCOMPLETE_INPUT);\n        this.$autocompleteOutput = this.$autocomplete.find(SELECTORS.DOM_SELECTORS.AUTOCOMPLETE_OUTPUT);\n        this.$autocompleteSpacer = this.$autocomplete.find(SELECTORS.DOM_SELECTORS.AUTOCOMPLETE_SPACER);\n        this.$autocompleteSuggests = this.$autocomplete.find(SELECTORS.DOM_SELECTORS.AUTOCOMPLETE_SUGGESTS);\n\n        this.commandTemplate = Handlebars.compile(AUTOCOMPLETE_COMMAND_TEMPLATE);\n        this.argumentTemplate = Handlebars.compile(AUTOCOMPLETE_ARGUMENT_TEMPLATE);\n\n        return this._setupHandlers()._fetchConfig();\n    }\n\n    /**\n     * @for AutocompleteController\n     * @method _setupHandlers\n     * @chainable\n     * @private\n     */\n    _setupHandlers() {\n        this.onConfigFetchedHandler = this._onConfigFetched.bind(this);\n        this.onAutocompleteInputChangeHandler = this._onAutocompleteInputChange.bind(this);\n        this.onKeydownHandler = this._onKeydown.bind(this);\n        this.onSuggestionClickHandler = this._onSuggestionClick.bind(this);\n\n        return this;\n    }\n\n    /**\n     * Fetch JSON config file\n     *\n     * @for AutocompleteController\n     * @method _fetchConfig\n     * @private\n     */\n    _fetchConfig() {\n        $.getJSON('assets/autocomplete/commandAutocompleteConfig.json')\n            .done((response) => this.onConfigFetchedHandler(response))\n            .fail((jqXHR) => console.error(`Failed to load autocomplete configuration: ${jqXHR.status}: ${jqXHR.statusText}`));\n    }\n\n    /**\n     * Ingest data fetched from JSON config\n     *\n     * @for AutocompleteController\n     * @method _onConfigFetched\n     * @private\n     */\n    _onConfigFetched(data) {\n        this.commandDefs = data;\n\n        for (const commandType in data) {\n            this.lookup[commandType] = {};\n            data[commandType].forEach((commandDef) => {\n                // build lookup for fast access by command/alias\n                commandDef.variants.forEach((variant) => {\n                    variant.aliases.forEach((alias) => {\n                        this.lookup[commandType][alias] = commandDef;\n                    });\n                });\n\n                // setup regular expressions for parameter validation\n                commandDef.paramsets.forEach((paramset) => {\n                    paramset.candidate = this._buildRegexOrGroup(paramset.candidate, 'i');\n                    paramset.validate = this._buildRegexOrGroup(paramset.validate, 'i');\n                });\n            });\n        }\n\n        this.enable();\n        this.ready = true;\n    }\n\n    /**\n     * Build a single regex or group of regexes for parameter validation\n     *\n     * @for AutocompleteController\n     * @method _buildRegexOrGroup\n     * @param regexStrs {string|Array<string>}\n     * @param flags {string}\n     * @private\n     */\n    _buildRegexOrGroup(regexStrs, flags) {\n        if (_isArray(regexStrs)) {\n            return new RegexGroup(regexStrs, flags);\n        }\n\n        return new RegExp(regexStrs, flags);\n    }\n\n    /**\n     * Enable event handlers\n     *\n     * @for AutocompleteController\n     * @method enable\n     * @chainable\n     */\n    enable() {\n        this.$autocompleteInput.on('input', this.onAutocompleteInputChangeHandler);\n\n        return this;\n    }\n\n    /**\n     * Disable all event handlers\n     *\n     * @for AutocompleteController\n     * @method disable\n     * @chainable\n     */\n    disable() {\n        this.$autocompleteInput.off('input', this.onAutocompleteInputChangeHandler);\n\n        return this;\n    }\n\n    /**\n     * Destroy the instance\n     *\n     * @for AutocompleteController\n     * @method destroy\n     * @chainable\n     */\n    destroy() {\n        this.$element = null;\n        this.$autocomplete = null;\n        this.$autocompleteInput = null;\n        this.$autocompleteOutput = null;\n        this.$autocompleteSpacer = null;\n        this.$autocompleteSuggests = null;\n\n        this.commandDefs = {};\n        this.lookup = {};\n        this.ready = false;\n\n        this.initialRange = {};\n        this.targetRange = {};\n\n        return this;\n    }\n\n    /**\n     * Update the current state of the autocomplete UI\n     * The state is reflected as a class in the $autocomplete element\n     * This determines which keyboard control prompts are displayed\n     *\n     * @for AutocompleteController\n     * @method _updateState\n     * @param newState {string}\n     * @private\n     */\n    _updateState(newState) {\n        if (this.state === newState) {\n            return;\n        }\n\n        this.$autocomplete.removeClass(this.state);\n        this.state = newState;\n        this.$autocomplete.addClass(this.state);\n    }\n\n    /**\n     * Grow autocomplete target range to encompass whole token to the left\n     *\n     * @for AutocompleteController\n     * @method _growTargetRangeLeft\n     * @param cmdstr {string}\n     * @param targetRange {object}\n     * @private\n     */\n    _growTargetRangeLeft(cmdstr, targetRange) {\n        const reversePrefix = cmdstr.slice(0, targetRange.start).split('').reverse().join('');\n        targetRange.start -= AUTOCOMPLETE_REGEXP.TOKEN_END.exec(reversePrefix).index + 1;\n    }\n\n    /**\n     * Grow autocomplete target range to encompass whole token to the right\n     *\n     * @for AutocompleteController\n     * @method _growTargetRangeRight\n     * @param cmdstr {string}\n     * @param targetRange {object}\n     * @private\n     */\n    _growTargetRangeRight(cmdstr, targetRange) {\n        targetRange.end += AUTOCOMPLETE_REGEXP.TOKEN_END.exec(cmdstr.slice(targetRange.end)).index + 1;\n    }\n\n    /**\n     * Activate the autocomplete UI\n     * Starts in command search and suggest mode\n     *\n     * @for AutocompleteController\n     * @method activate\n     */\n    activate() {\n        if (!this.ready) {\n            return;\n        }\n\n        const cmdstr = this._inputController.$commandInput.val();\n        // remember initial selection/cursor state, in case of reset\n        this.initialRange = {\n            start: this._inputController.$commandInput.prop('selectionStart'),\n            end: this._inputController.$commandInput.prop('selectionEnd')\n        };\n        // target range of command input to ingest and replace\n        this.targetRange = Object.assign({}, this.initialRange);\n\n        // cursor/selection left boundary adjustment\n        if (this.targetRange.start > 0) { // guarantees index (start - 1) is valid\n            if (this.targetRange.start === this.targetRange.end) { // cursor\n                if (!AUTOCOMPLETE_REGEXP.WHITESPACE.test(cmdstr.charAt(this.targetRange.start - 1))) {\n                    // cursor at mid token or touching right edge of a token\n                    this._growTargetRangeLeft(cmdstr, this.targetRange);\n                }\n            } else { // selection, guarantees index (start + 1) is valid\n                const leftBoundary = cmdstr.slice(this.targetRange.start - 1, this.targetRange.start + 1);\n                if (AUTOCOMPLETE_REGEXP.TOKEN_MID.test(leftBoundary)) {\n                    // selection left boundary at mid token\n                    this._growTargetRangeLeft(cmdstr, this.targetRange);\n                } else if (AUTOCOMPLETE_REGEXP.TOKEN_END.exec(leftBoundary)?.index === 0) { // using test() gives spurious match\n                    // selection left boundary touching right edge of a token\n                    // exclude one space for UI aesthetics\n                    this.targetRange.start += 1;\n                }\n            }\n        }\n\n        // cursor/selection right boundary adjustment\n        if (this.targetRange.end < cmdstr.length && // guarantees index (end + 1) is valid\n            this.targetRange.start < this.targetRange.end && // guarantees index (end - 1) is valid; cursor start already moved\n            AUTOCOMPLETE_REGEXP.TOKEN_MID.test(cmdstr.slice(this.targetRange.end - 1, this.targetRange.end + 1))\n        ) {\n            // cursor/selection right boundary at mid token\n            this._growTargetRangeRight(cmdstr, this.targetRange);\n        }\n\n        // find first token in whole command string, if any\n        const { index: firstChar, 1: firstToken } = AUTOCOMPLETE_REGEXP.FIRST_TOKEN.exec(cmdstr) ?? {};\n\n        // is the first token an aircraft callsign?\n        const aircraft = this._aircraftController.findAircraftByCallsign(firstToken);\n\n        // if (aircraft) {\n        // TODO: if so, be clever and filter suggestions depending on departure/arrival and flight phase\n        // }\n\n        // may require additional space for correct positioning\n        let extraPad = '';\n\n        // determine command type to autocomplete\n        if (firstChar === undefined) {\n            // empty/blank command string\n            this.commandType = AUTOCOMPLETE_COMMAND_TYPE.SYSTEM;\n        } else if (this.targetRange.start <= firstChar) {\n            // cursor/selection before or includes first token\n            if (aircraft) {\n                // first token is callsign, exclude it\n                let startWithoutCallsign = firstChar + firstToken.length + 1;\n\n                // callsign not guaranteed to be followed by whitespace, i.e. cmdstr may match ^\\s*<callsign>$\n                if (startWithoutCallsign > cmdstr.length) {\n                    startWithoutCallsign = cmdstr.length;\n                    extraPad = ' ';\n                }\n\n                this.targetRange.start = startWithoutCallsign;\n                this.targetRange.end = Math.max(this.targetRange.start, this.targetRange.end);\n                this.commandType = AUTOCOMPLETE_COMMAND_TYPE.TRANSMIT;\n            } else {\n                // first token is not callsign\n                this.commandType = AUTOCOMPLETE_COMMAND_TYPE.SYSTEM;\n            }\n        } else {\n            // cursor/selection outside first token\n            this.commandType = AUTOCOMPLETE_COMMAND_TYPE.TRANSMIT;\n        }\n\n        this._updateState(AUTOCOMPLETE_STATE.COMMANDS.NO_MATCHES);\n        this.$autocompleteSpacer.text(cmdstr.slice(0, this.targetRange.start).concat(extraPad));\n        this.$autocompleteInput.val(cmdstr.slice(this.targetRange.start, this.targetRange.end));\n        this.$autocompleteInput.attr('placeholder', AUTOCOMPLETE_INPUT_PLACEHOLDER.COMMAND);\n        this.onAutocompleteInputChangeHandler();\n        this.$autocomplete.addClass('active');\n        this.$autocompleteInput.focus();\n        this.active = true;\n    }\n\n    /**\n     * Highlight previous suggested command\n     *\n     * @for AutocompleteController\n     * @method highlightPrev\n     */\n    highlightPrev() {\n        const $highlightOld = this.$autocompleteSuggests.find('tr.highlight');\n        let $highlightNew = this.$autocompleteSuggests.find('tr').last();\n\n        if ($highlightOld.length) {\n            $highlightOld.removeClass('highlight');\n            const $highlightOldPrev = $highlightOld.prev();\n\n            if ($highlightOldPrev.length) {\n                $highlightNew = $highlightOldPrev;\n            }\n        }\n\n        $highlightNew.addClass('highlight');\n        this.highlighted = $highlightNew.data('command');\n        this._updateState(AUTOCOMPLETE_STATE.COMMANDS.HIGHLIGHT);\n    }\n\n    /**\n     * Highlight next suggested command\n     *\n     * @for AutocompleteController\n     * @method highlightNext\n     */\n    highlightNext() {\n        const $highlightOld = this.$autocompleteSuggests.find('tr.highlight');\n        let $highlightNew = this.$autocompleteSuggests.find('tr').first();\n\n        if ($highlightOld.length) {\n            $highlightOld.removeClass('highlight');\n            const $highlightOldNext = $highlightOld.next();\n\n            if ($highlightOldNext.length) {\n                $highlightNew = $highlightOldNext;\n            }\n        }\n\n        $highlightNew.addClass('highlight');\n        this.highlighted = $highlightNew.data('command');\n        this._updateState(AUTOCOMPLETE_STATE.COMMANDS.HIGHLIGHT);\n    }\n\n    /**\n     * Quit out of the autocomplete UI while in\n     * command search and suggest mode\n     *\n     * @for AutocompleteController\n     * @method cancel\n     */\n    cancel() {\n        this._inputController.$commandInput.prop('selectionStart', this.initialRange.start);\n        this._inputController.$commandInput.prop('selectionEnd', this.initialRange.end);\n        this._inputController.$commandInput.focus();\n\n        this.initialRange = {};\n        this.targetRange = {};\n        this.highlighted = null;\n\n        this.$autocomplete.removeClass();\n        this.active = false;\n    }\n\n    /**\n     * Select the specified suggested command\n     * Proceed to parameter guidance and validation mode\n     *\n     * @for AutocompleteController\n     * @method selectCommand\n     * @param command {string}\n     */\n    selectCommand(command) {\n        // for revert purposes\n        this.inputRevert = this.$autocompleteInput.val();\n\n        const out = `${command} `;\n        this.$autocompleteOutput.val(out);\n        this.$autocompleteOutput.attr('size', out.length);\n\n        this.params = { command: command };\n        this.params.paramsets = this.lookup[this.commandType][command].paramsets;\n\n        this._updateState(AUTOCOMPLETE_STATE.PARAMS.INVALID);\n        this.$autocompleteInput.val('');\n        this.$autocompleteInput.attr('placeholder', AUTOCOMPLETE_INPUT_PLACEHOLDER.PARAM);\n        this.onAutocompleteInputChangeHandler();\n        this.$autocompleteInput.focus();\n    }\n\n    /**\n     * Revert back to command search and suggest mode\n     *\n     * @for AutocompleteController\n     * @method revert\n     */\n    revert() {\n        this.$autocompleteOutput.val('');\n        this.$autocompleteOutput.attr('size', 1);\n\n        this._updateState(AUTOCOMPLETE_STATE.COMMANDS.HIGHLIGHT);\n        this.$autocompleteInput.val(this.inputRevert);\n        this.$autocompleteInput.attr('placeholder', AUTOCOMPLETE_INPUT_PLACEHOLDER.COMMAND);\n        this.onAutocompleteInputChangeHandler();\n        this.$autocompleteInput.focus();\n\n        this.params = {};\n        this.inputRevert = null;\n    }\n\n    /**\n     * Commit a validated command to the command input\n     * This completes the autocomplete process\n     *\n     * @for AutocompleteController\n     * @method commit\n     */\n    commit() {\n        let cmdstr = this._inputController.$commandInput.val();\n        // consume whitespace immediately before start of target range\n        const before = cmdstr.slice(0, this.targetRange.start).trimRight();\n        // consume whitespace immediately after end of target range\n        const after = cmdstr.slice(this.targetRange.end).trimLeft();\n\n        let paramstr = this.$autocompleteInput.val().trim();\n\n        if (paramstr.length) {\n            paramstr = paramstr.replace(AUTOCOMPLETE_REGEXP.WHITESPACE, ' ').concat(' ');\n        }\n\n        cmdstr = before.concat((before.length > 0) ? ' ' : '', this.params.command, ' ', paramstr);\n        this._inputController.$commandInput.val(cmdstr + after);\n        this._inputController.$commandInput.prop('selectionStart', cmdstr.length);\n        this._inputController.$commandInput.prop('selectionEnd', cmdstr.length);\n        this._inputController.$commandInput.focus();\n\n        this.initialRange = {};\n        this.targetRange = {};\n        this.highlighted = null;\n        this.inputRevert = null;\n        this.params = {};\n\n        this.$autocomplete.removeClass();\n        this.active = false;\n    }\n\n    /**\n     * @for AutocompleteController\n     * @method _onKeydown\n     * @param event {jquery Event}\n     * @private\n     */\n    _onKeydown(event) {\n        let { code } = event.originalEvent;\n\n        if (code == null) {\n            // fallback for legacy browsers like IE/Edge\n            code = event.originalEvent.keyCode;\n        }\n\n        switch (code) {\n            // navigate through command suggestions\n            case KEY_CODES.UP_ARROW:\n            case LEGACY_KEY_CODES.UP_ARROW:\n                event.preventDefault();\n\n                if (this.state === AUTOCOMPLETE_STATE.COMMANDS.HIGHLIGHT || this.state === AUTOCOMPLETE_STATE.COMMANDS.MATCHES) {\n                    this.highlightPrev();\n                }\n\n                break;\n            case KEY_CODES.DOWN_ARROW:\n            case LEGACY_KEY_CODES.DOWN_ARROW:\n                event.preventDefault();\n\n                if (this.state === AUTOCOMPLETE_STATE.COMMANDS.HIGHLIGHT || this.state === AUTOCOMPLETE_STATE.COMMANDS.MATCHES) {\n                    this.highlightNext();\n                }\n\n                break;\n            case KEY_CODES.TAB:\n            case LEGACY_KEY_CODES.TAB:\n                event.preventDefault();\n\n                if (this.state === AUTOCOMPLETE_STATE.COMMANDS.HIGHLIGHT) {\n                    // replace with selected suggestion (command or alias)\n                    this.selectCommand(this.highlighted);\n                } else if (this.state === AUTOCOMPLETE_STATE.PARAMS.VALID) {\n                    // commit if valid command or alias + arguments\n                    this.commit();\n                }\n\n                break;\n            case KEY_CODES.ENTER:\n            case KEY_CODES.NUM_ENTER:\n            case LEGACY_KEY_CODES.ENTER:\n                if (this.state === AUTOCOMPLETE_STATE.PARAMS.VALID) {\n                    // shortcut to commit + submit immediately\n                    this.commit();\n                    this._inputController.processCommand();\n                }\n\n                break;\n            // cancel / revert\n            case KEY_CODES.ESCAPE:\n            case LEGACY_KEY_CODES.ESCAPE:\n                if (AUTOCOMPLETE_COMMAND_STATES.includes(this.state)) {\n                    this.cancel();\n                } else {\n                    this.revert();\n                }\n\n                break;\n            default:\n                this.$autocompleteInput.focus();\n        }\n    }\n\n    /**\n     * @for AutocompleteController\n     * @method _onSuggestionClick\n     * @param event {jquery Event}\n     */\n    _onSuggestionClick(event) {\n        if (event.which === MOUSE_EVENT_CODE.LEFT_PRESS) {\n            const command = $(event.currentTarget).data('command');\n\n            if (command) {\n                this.highlighted = command; // for revert purposes\n                this.selectCommand(command);\n            }\n        }\n    }\n\n    /**\n     * @for AutocompleteController\n     * @method _onAutocompleteInputChange\n     * @private\n     */\n    _onAutocompleteInputChange() {\n        const currentAutocompleteInputValue = this.$autocompleteInput.val();\n        const inputLength = currentAutocompleteInputValue.length;\n        this.$autocompleteInput.attr('size',\n            (inputLength === 0 ? this.$autocompleteInput.attr('placeholder').length : inputLength));\n\n        if (AUTOCOMPLETE_COMMAND_STATES.includes(this.state)) {\n            this._matchCommands(currentAutocompleteInputValue.trim().toLowerCase());\n        } else {\n            this._validateArgs(currentAutocompleteInputValue.trim());\n        }\n    }\n\n    /**\n     * @for AutocompleteController\n     * @method _matchCommands\n     * @param prefix {string} Partial command typed by user into autocomplete input\n     * @private\n     */\n    _matchCommands(prefix) {\n        let matches = {};\n\n        // empty / blank input:\n        // transmit: force no results, otherwise _findCandidateCommands will return *everything*!\n        //     TODO: provide smart suggestions based on aircraft category/flight phase?\n        // system: go ahead and show all commands, there aren't that many\n        if (prefix.length > 0 || this.commandType === AUTOCOMPLETE_COMMAND_TYPE.SYSTEM) {\n            matches = this._findCandidateCommands(prefix);\n        }\n\n        this.$autocompleteSuggests.html(this.commandTemplate(matches));\n        this.$autocompleteSuggests.find('tr').on('click', this.onSuggestionClickHandler);\n\n        if (_isEmpty(matches)) {\n            this._updateState(AUTOCOMPLETE_STATE.COMMANDS.NO_MATCHES);\n        } else {\n            // seek to retain highlight on previously highlighted entry if it still exists\n            let findAndHighlight = this.state === AUTOCOMPLETE_STATE.COMMANDS.HIGHLIGHT;\n\n            // pre-emptively highlight corresponding entry when input is exact match for a command or alias\n            if (Object.keys(this.lookup[this.commandType]).includes(prefix)) {\n                this.highlighted = prefix;\n                findAndHighlight = true;\n            }\n\n            if (findAndHighlight) {\n                const $highlight = this.$autocompleteSuggests.find(`tr[data-command=\"${this.highlighted}\"]`);\n\n                if ($highlight.length) {\n                    $highlight.addClass('highlight');\n                    this._updateState(AUTOCOMPLETE_STATE.COMMANDS.HIGHLIGHT);\n                    return;\n                }\n            }\n\n            this._updateState(AUTOCOMPLETE_STATE.COMMANDS.MATCHES);\n        }\n\n        this.highlighted = null;\n    }\n\n    /**\n     * Take user input from autocomplete input (distinct from simulator command input) and\n     * use it as a prefix to search for all potentially matching commands\n     *\n     * @for AutocompleteController\n     * @method _findCandidateCommands\n     * @param prefix {string} Partial command typed by user into autocomplete input\n     * @private\n     */\n    _findCandidateCommands(prefix) {\n        const matches = {};\n        for (const command of this.commandDefs[this.commandType]) {\n            for (const variant of command.variants) {\n                /* eslint-disable max-len, no-multi-spaces */\n                for (const alias of variant.aliases) {\n                    if (alias.startsWith(prefix) &&\n                        (typeof matches[command.id] === 'undefined' ||        // has not been matched yet\n                        matches[command.id].direct === false ||               // has only been matched indirectly (altkey match)\n                        alias.length < matches[command.id].command.length)) { // was matched directly for a longer variant of the command\n                        matches[command.id] = { direct: true, command: alias, explanation: variant.explain };\n                    }\n                }\n\n                // skip checking altkeys if there is already a direct hit for this commandDef\n                // includes direct hit on previously seen variants, even if the current one isn't one\n                if (typeof matches[command.id] !== 'undefined' && matches[command.id].direct === true) {\n                    continue;\n                }\n\n                if (variant.altkeys.some((alt) => alt.startsWith(prefix))) {\n                    const c = variant.aliases[0];\n\n                    if (typeof matches[command.id] === 'undefined' ||    // has not been matched yet\n                        c.length < matches[command.id].command.length) { // was matched indirectly for a longer variant of the command\n                        matches[command.id] = { direct: false, command: c, explanation: variant.explain };\n                    }\n                }\n            }\n        }\n\n        return matches;\n    }\n\n\n    /**\n     * @for AutocompleteController\n     * @method _validateArgs\n     * @param paramstr {string} Partial argument string typed by user into autocomplete input\n     * @private\n     */\n    _validateArgs(paramstr) {\n        if (this.params.paramsets.length === 0) {\n            if (paramstr.length === 0) {\n                this.params.validity = AUTOCOMPLETE_PARAMS_VALIDITY.VALID;\n                this._updateState(AUTOCOMPLETE_STATE.PARAMS.VALID);\n            } else {\n                this.params.validity = AUTOCOMPLETE_PARAMS_VALIDITY.INVALID;\n                this._updateState(AUTOCOMPLETE_STATE.PARAMS.INVALID);\n            }\n        } else {\n            this.params.paramsets.forEach((paramset) => {\n                if (paramset.validate.test(paramstr)) {\n                    paramset.validity = AUTOCOMPLETE_PARAMS_VALIDITY.VALID;\n                } else if (paramset.candidate.test(paramstr)) {\n                    paramset.validity = AUTOCOMPLETE_PARAMS_VALIDITY.CANDIDATE;\n                } else {\n                    paramset.validity = AUTOCOMPLETE_PARAMS_VALIDITY.INVALID;\n                }\n            });\n            if (this.params.paramsets.some((paramset) => paramset.validity === AUTOCOMPLETE_PARAMS_VALIDITY.VALID)) {\n                this._updateState(AUTOCOMPLETE_STATE.PARAMS.VALID);\n            } else {\n                this._updateState(AUTOCOMPLETE_STATE.PARAMS.INVALID);\n            }\n        }\n        this.$autocompleteSuggests.html(this.argumentTemplate(this.params));\n    }\n}\n","/**\n * @class RegexGroup\n */\nexport default class RegexGroup {\n    /**\n     * @constructor\n     * @param regexStrs {Array<string>}\n     * @param flags {string}\n     */\n    constructor(regexStrs, flags) {\n        this.regexes = [];\n        regexStrs.forEach((regexStr) => {\n            this.regexes.push(new RegExp(regexStr, flags));\n        });\n    }\n\n    /**\n     * Test if satisfies any regex in the group\n     *\n     * @for RegexGroup\n     * @method test\n     * @param str {string}\n     */\n    test(str) {\n        return this.regexes.some((regex) => regex.test(str));\n    }\n}\n","import { LOG } from './constants/logLevel';\n\n/**\n *\n * The functions contained in this file should be migrated over to the `math/`\n * files as soon as possible.\n *\n * These functions are all attached to the `window` and are global to the\n * entire app. This is a problem because it polutes the global namespace,\n * and files that don't need it have access to it. These functions should be imported\n * only as needed.\n *\n * These functions should also have corresponding tests.\n *\n */\n\nwindow.AudioContext = window.AudioContext || window.webkitAudioContext;\n\n/*eslint-disable*/\n\n// String repetition copied from http://stackoverflow.com/a/5450113\nif (!String.prototype.hasOwnProperty('repeat')) {\n    String.prototype.repeat = function(count) {\n        if (count < 1) {\n            return '';\n        }\n\n        let result = '';\n        let pattern = this.valueOf();\n\n        while (count > 1) {\n            if (count & 1) result += pattern;\n            count >>= 1, pattern += pattern;\n        }\n\n        return result + pattern;\n    };\n}\n\n/**\n * Necessary for Internet Explorer 11 (IE11) to not die while using String.fromCodePoint()\n * This function is not natively available in IE11, as noted on this MSDN page:\n * https://msdn.microsoft.com/en-us/library/dn890630(v=vs.94).aspx\n *\n * Apparently, it is fine with pre-Win8.1 MS Edge 11, but never okay in IE.\n * Here, the function is added to the String prototype to make later code usable.\n *\n * Solution from: http://xahlee.info/js/js_unicode_code_point.html\n*/\nif (!String.fromCodePoint) {\n    // ES6 Unicode Shims 0.1 , © 2012 Steven Levithan , MIT License\n    String.fromCodePoint = function fromCodePoint() {\n        const chars = [];\n        let point;\n        let offset;\n        let units;\n\n        for (let i = 0; i < arguments.length; i++) {\n            point = arguments[i];\n            offset = point - 0x10000;\n            units = point > 0xFFFF ? [0xD800 + (offset >> 10), 0xDC00 + (offset & 0x3FF)] : [point];\n            chars.push(String.fromCharCode.apply(null, units));\n        }\n\n        return chars.join('');\n    };\n}\n\nconst log = (message, level = LOG.INFO) => {\n    const logStrings = {\n        0: 'DEBUG',\n        1: 'INFO',\n        2: 'WARN',\n        3: 'ERROR',\n        4: 'FATAL'\n    };\n\n    if (prop.log <= level) {\n        const text = `[ ${logStrings[level]} ]`;\n\n        if (level >= LOG.WARNING) {\n            console.warn(text, message);\n        } else {\n            console.log(text, message);\n        }\n    }\n};\nwindow.log = log;\n","import _isArray from 'lodash/isArray';\n\n/**\n * Helper method to translate a unicode character into a readable string value\n *\n * @method unicodeToString\n * @param char {characterCode}\n * @return {string}\n */\nexport const unicodeToString = (char) => `\\\\u${char.charCodeAt(0).toString(16).toUpperCase()}`;\n\n/**\n *\n *\n * @function choose\n * @param list\n * @return\n */\nexport const choose = (list) => {\n    const randomIndexFromLength = Math.floor(Math.random() * list.length);\n\n    return list[randomIndexFromLength];\n};\n\n/**\n *\n *\n * @function choose_weight\n */\nexport const choose_weight = (l) => {\n    if (l.length === 0) {\n        return;\n    }\n\n    if (!_isArray(l[0])) {\n        return choose(l);\n    }\n\n    // l = [[item, weight], [item, weight] ... ];\n    let weight = 0;\n    for (let i = 0; i < l.length; i++) {\n        weight += l[i][1];\n    }\n\n    const randomWeight = Math.random() * weight;\n    weight = 0;\n\n    for (let i = 0; i < l.length; i++) {\n        weight += l[i][1];\n\n        if (weight > randomWeight) {\n            return l[i][0];\n        }\n    }\n\n\n    return null;\n};\n\n/**\n * Prepends zeros to front of str/num to make it the desired length\n *\n * @function leftPad\n * @param value {number|string}  original value\n * @param length {number}        total character length of return string\n * @return {string}              a string of the desired length prepended with zeros when `value` is < `length`\n */\nexport const leftPad = (value, length) => {\n    if (value.toString().length >= length) {\n        return value.toString();\n    }\n\n    const x = `0000000000000${value}`;\n\n    return x.substr(x.length - length, length);\n};\n","import { REGEX } from '../constants/globalConstants';\nimport { PROCEDURE_OR_AIRWAY_SEGMENT_DIVIDER } from '../constants/routeConstants';\n\n/**\n * Combine entry, procedure/airway name, and exit to form a correctly formatted procedural route string\n *\n * @function assembleProceduralRouteString\n * @param entryFix {string} ICAO identifier of fix where we enter the airway/procedure\n * @param procedureOrAirway {string} ICAO identifier of the airway/procedure\n * @param exitFix {string} ICAO identifier of fix where we exit the airway/procedure\n * @return {string} correctly formatted procedural route string\n */\nexport function assembleProceduralRouteString(entryFix, procedureOrAirway, exitFix) {\n    return `${entryFix}${PROCEDURE_OR_AIRWAY_SEGMENT_DIVIDER}${procedureOrAirway}` +\n        `${PROCEDURE_OR_AIRWAY_SEGMENT_DIVIDER}${exitFix}`;\n}\n\n/**\n * Parses the restriction string using the specfied regular expression\n *\n * @param restrictionText {string}\n * @param regex {RegExp}\n * @param multiplier {number}\n * @returns {array}\n */\nfunction _parseRestriction(restrictionText, regex, multiplier = 1) {\n    if (restrictionText == null) {\n        return [];\n    }\n\n    const match = restrictionText.match(regex);\n\n    if (match === null) {\n        return [];\n    }\n\n    const [, value, limit] = match;\n\n    return [parseInt(value, 10) * multiplier, limit];\n}\n\n/**\n * Parses an altitude restriction string in the form A80+ or A140- or A160\n * into a array containing the altitude and the optional limit symbol\n * eg. A80+  => [8000, '+']\n *     A140- => [14000, '-']\n *     A160  => [16000, '']\n *\n * @param restrictionText {string}\n * @returns {array} or an empty array if not valid\n */\nexport const parseAltitudeRestriction = (restrictionText) => {\n    return _parseRestriction(restrictionText, REGEX.ALTITUDE_RESTRICTION, 100);\n};\n\n/**\n * Parses a speed restriction string in the form S250+ or S220-\n * into a array containing the speed and the optional limit symbol\n * eg. S250+ => [250, '+']\n *     S220- => [220, '-']\n *     S230  => [230, '']\n *\n * @param restrictionText {string}\n * @returns {array} or an empty array if not valid\n */\nexport const parseSpeedRestriction = (restrictionText) => {\n    return _parseRestriction(restrictionText, REGEX.SPEED_RESTRICTION);\n};\n","import _clone from 'lodash/clone';\nimport _compact from 'lodash/compact';\nimport _map from 'lodash/map';\nimport { round } from '../math/core';\nimport { tau, radians_normalize } from '../math/circle';\n\n/**\n * @property CARDINAL_DIRECTION\n * @type {Array}\n * @final\n */\nconst CARDINAL_DIRECTION = [\n    'N',\n    'NE',\n    'E',\n    'SE',\n    'S',\n    'SW',\n    'W',\n    'NW',\n    'N'\n];\n\n/**\n * @property radio_names\n * @type {Object}\n * @final\n */\nexport const radio_names = {\n    0: 'zero',\n    1: 'one',\n    2: 'two',\n    3: 'three',\n    4: 'four',\n    5: 'five',\n    6: 'six',\n    7: 'seven',\n    8: 'eight',\n    9: 'niner',\n    10: 'ten',\n    11: 'eleven',\n    12: 'twelve',\n    13: 'thirteen',\n    14: 'fourteen',\n    15: 'fifteen',\n    16: 'sixteen',\n    17: 'seventeen',\n    18: 'eighteen',\n    19: 'nineteen',\n    20: 'twenty',\n    30: 'thirty',\n    40: 'fourty',\n    50: 'fifty',\n    60: 'sixty',\n    70: 'seventy',\n    80: 'eighty',\n    90: 'ninety',\n    a: 'alpha',\n    b: 'bravo',\n    c: 'charlie',\n    d: 'delta',\n    e: 'echo',\n    f: 'foxtrot',\n    g: 'golf',\n    h: 'hotel',\n    i: 'india',\n    j: 'juliet',\n    k: 'kilo',\n    l: 'lima',\n    m: 'mike',\n    n: 'november',\n    o: 'oscar',\n    p: 'papa',\n    q: 'quebec',\n    r: 'romeo',\n    s: 'sierra',\n    t: 'tango',\n    u: 'uniform',\n    v: 'victor',\n    w: 'whiskey',\n    x: 'x-ray',\n    y: 'yankee',\n    z: 'zulu',\n    '-': 'dash',\n    '.': 'point'\n};\n\n// TODO: this and CARDINAL_DIRECTION seem to be duplicating logic. look into smoothing that out by using\n// just this enum and `toUpperCase()` where necessary.\n/**\n * @property radio_cardinalDir_names\n * @type {Object}\n * @final\n */\nexport const radio_cardinalDir_names = {\n    n: 'north',\n    nw: 'northwest',\n    w: 'west',\n    sw: 'southwest',\n    s: 'south',\n    se: 'southeast',\n    e: 'east',\n    ne: 'northeast'\n};\n\n// TODO: probably do this with Object.assign\nexport const radio_runway_names = _clone(radio_names);\nradio_runway_names.l = 'left';\nradio_runway_names.c = 'center';\nradio_runway_names.r = 'right';\n\n// TODO: how is this different from lpad?\n// NOT IN USE\n/**\n * Force a number to a string with a specific # of digits\n *\n * If the rounded integer has more digits than requested, it will be returned\n * anyway, as chopping them off the end would change the value by orders of\n * magnitude, which is almost definitely going to be undesirable.\n *\n * @param number\n * @param digits\n * @truncate {boolean}\n * @return {string} with leading zeros to reach 'digits' places\n */\nexport const digits_integer = (number, digits, truncate = false) => {\n    if (truncate) {\n        number = Math.floor(number).toString();\n    } else {\n        number = Math.round(number).toString();\n    }\n\n    if (number.length > digits) {\n        return number;\n    }\n\n    // add leading zeros\n    while (number.length < digits) {\n        number = `0${number}`;\n    }\n\n    return number;\n};\n\n/**\n * Round a number to a specific # of digits after the decimal\n *\n * Also supports negative digits. Ex: '-2' would do 541.246 --> 500\n *\n * @param {boolean} force - (optional) Forces presence of trailing zeros.\n *                          Must be set to true if you want '3' to be able to go to '3.0', or\n *                          for '32.168420' to not be squished to '32.16842'. If true, fxn will\n *                          return a string, because otherwise, js removes all trailing zeros.\n * @param {boolean} truncate - (optional) Selects shortening method.\n *                          to truncate: 'true', to round: 'false' (default)\n * @return {number}         if !force\n * @return {string}         if force\n */\nexport const digits_decimal = (number, digits, force, truncate) => {\n    const shorten = (truncate) ? Math.floor : Math.round;\n\n    if (!force) {\n        return shorten(number * Math.pow(10, digits)) / Math.pow(10, digits);\n    }\n\n    // check if needs extra trailing zeros\n    if (digits <= 0) {\n        return (shorten(number * Math.pow(10, digits)) / Math.pow(10, digits)).toString();\n    }\n\n    number = number.toString();\n\n    for (let i = 0; i < number.length; i++) {\n        if (number[i] === '.') {\n            const trailingDigits = number.length - (i + 1);\n\n            if (trailingDigits === digits) {\n                return number.toString();\n            } else if (trailingDigits < digits) {\n                // add trailing zeros\n                return number + Array(digits - trailingDigits + 1).join('0');\n            } else if (trailingDigits > digits) {\n                if (truncate) {\n                    return number.substr(0, number.length - (trailingDigits - digits));\n                }\n\n                const len = number.length - (trailingDigits - digits + 1);\n                const part1 = number.substr(0, len);\n                const part2 = (digits === 0)\n                    ? ''\n                    : shorten(parseInt(number.substr(len, 2), 10) / 10).toString();\n\n                return part1 + part2;\n            }\n        }\n    }\n};\n\n/**\n *\n * @function getGrouping\n * @param groupable {array}\n * @return {string}\n */\nexport const getGrouping = (groupable) => {\n    const digit1 = groupable[0];\n    const digit2 = groupable[1];\n\n    if (digit1 === '0') {\n        if (digit2 === '0') {\n            return 'hundred';\n        }\n        // just digits (eg 'zero seven')\n        return `${radio_names[digit1]} ${radio_names[digit2]}`;\n    } else if (digit1 === '1') {\n        // exact number (eg 'seventeen')\n        return radio_names[groupable];\n    } else if (digit1 >= 2) {\n        const firstDigit = `${digit1}0`;\n\n        if (digit2 === '0') {\n            // to avoid 'five twenty zero'\n            return radio_names[firstDigit];\n        }\n        // combo number (eg 'fifty one')\n        return `${radio_names[firstDigit]} ${radio_names[digit2]}`;\n    }\n\n    return `${radio_names[digit1]} ${radio_names[digit2]}`;\n};\n\n// TODO: this needs to be simplified\n/**\n *\n * @function groupNumbers\n * @param callsign {string}\n * @param airline {string} (optional)\n * @return\n */\nexport const groupNumbers = (callsign, airline) => {\n    if (!/^\\d+$/.test(callsign)) {\n        // GA, eg '117KS' = 'one-one-seven-kilo-sierra')\n        if (airline === 'November') {\n            // callsign \"November\"\n            const s = [];\n\n            for (const k in callsign) {\n                // one after another (eg 'one one seven kilo sierra')\n                s.push(radio_names[callsign[k]]);\n            }\n\n            return s.join(' ');\n        }\n\n        // airline grouped, eg '3110A' = 'thirty-one-ten-alpha'\n        // divide callsign into alpha/numeric sections\n        const sections = [];\n        let cs = callsign;\n        let thisIsDigit;\n        let index = cs.length - 1;\n        let lastWasDigit = !isNaN(parseInt(cs[index], 10));\n        index--;\n\n        while (index >= 0) {\n            thisIsDigit = !isNaN(parseInt(cs[index], 10));\n\n            while (thisIsDigit === lastWasDigit) {\n                index--;\n                thisIsDigit = !isNaN(parseInt(cs[index], 10));\n\n                if (index < 0) {\n                    break;\n                }\n            }\n            sections.unshift(cs.substr(index + 1));\n            cs = cs.substr(0, index + 1);\n            lastWasDigit = thisIsDigit;\n        }\n\n        // build words, section by section\n        const s = [];\n\n        for (const i in sections) {\n            if (isNaN(parseInt(sections[i], 10))) {\n                // alpha section\n                s.push(radio_spellOut(sections[i]));\n            } else {\n                // numeric section\n                switch (sections[i].length) {\n                    case 0:\n                        s.push(sections[i]);\n                        break;\n                    case 1:\n                        s.push(radio_names[sections[i]]);\n                        break;\n                    case 2:\n                        s.push(getGrouping(sections[i]));\n                        break;\n                    case 3:\n                        s.push(`${radio_names[sections[i][0]]} ${getGrouping(sections[i].substr(1))}`);\n                        break;\n                    case 4:\n                        s.push(`${getGrouping(sections[i].substr(0, 2))} ${getGrouping(sections[i].substr(2))}`);\n                        break;\n                    default:\n                        s.push(radio_spellOut(sections[i]));\n                        break;\n                }\n            }\n        }\n\n        return s.join(' ');\n    } else {\n        // TODO: this block is unreachable\n        switch (callsign.length) {\n            case 0:\n                return callsign; break;\n            case 1:\n                return radio_names[callsign]; break;\n            case 2:\n                return getGrouping(callsign); break;\n            case 3:\n                return `${radio_names[callsign[0]]} ${getGrouping(callsign.substr(1))}`;\n                break;\n            case 4:\n                if (callsign[1] === '0' && callsign[2] === '0' && callsign[3] === '0') {\n                    return `${radio_names[callsign[0]]} thousand`;\n                }\n\n                return `${getGrouping(callsign.substr(0, 2))} ${getGrouping(callsign.substr(2))}`;\n                break;\n            default:\n                return callsign;\n        }\n    }\n};\n\n/**\n *\n * @funtion radio_runway\n * @param input {string}\n * @return\n */\nexport const radio_runway = (input) => {\n    input = `${input} `;\n    input = input.toLowerCase();\n\n    return _compact(_map(input, (letterOrNumber, i) => radio_runway_names[input[i]])).join(' ');\n};\n\n/**\n *\n * @function radio_heading\n * @param heading {string}\n * @return {string}\n */\nexport const radio_heading = (heading) => {\n    const str = heading.toString();\n\n    switch (str.length) {\n        case 1:\n            return `zero zero ${radio_names[str]}`;\n        case 2:\n            return `zero ${radio_names[str[0]]} ${radio_names[str[1]]}`;\n        default:\n            return `${radio_names[str[0]]} ${radio_names[str[1]]} ${radio_names[str[2]]}`;\n    }\n\n    return heading;\n};\n\n/**\n *\n * @function radio_spellOut\n * @param alphanumeric\n * @return\n */\nexport const radio_spellOut = (alphanumeric) => {\n    const str = alphanumeric.toString();\n    const arr = [];\n\n    if (!str) {\n        return;\n    }\n\n    // TODO: change to _map()\n    for (let i = 0; i < str.length; i++) {\n        arr.push(radio_names[str[i]]);\n    }\n\n    return arr.join(' ');\n};\n\n/**\n *\n * @function radio_altitude\n * @param altitude\n * @return\n */\nexport const radio_altitude = (altitude) => {\n    const alt_s = altitude.toString();\n    const s = [];\n\n    // TODO can this block be simplified?\n    if (altitude >= 18000) {\n        s.push('flight level', radio_names[alt_s[0]], radio_names[alt_s[1]], radio_names[alt_s[2]]);\n    } else if (altitude >= 10000) {\n        s.push(radio_names[alt_s[0]], radio_names[alt_s[1]], 'thousand');\n\n        if (!(altitude % (Math.floor(altitude / 1000) * 1000) === 0)) {\n            s.push(radio_names[alt_s[2]], 'hundred');\n        }\n    } else if (altitude >= 1000) {\n        s.push(radio_names[alt_s[0]], 'thousand');\n\n        if (!(altitude % (Math.floor(altitude / 1000) * 1000) === 0)) {\n            s.push(radio_names[alt_s[1]], 'hundred');\n        }\n    } else if (altitude >= 100) {\n        s.push(radio_names[alt_s[0]], 'hundred');\n    } else {\n        return altitude;\n    }\n\n    return s.join(' ');\n};\n\n/**\n * Return a portion of a control instruction (as a string) indicating the correct\n * direction of a change in assigned altitude or speed.\n *\n * @function radio_trend\n * @param category {string} either 'altitude' or 'speed'\n * @param currentValue {number} current altitude/speed of the aircraft\n * @param nextValue {number} the altitude/speed being assigned to the aircraft\n * @return {string}\n */\nexport const radio_trend = (category, currentValue, nextValue) => {\n    const CATEGORIES = {\n        altitude: ['descend and maintain', 'climb and maintain', 'maintain'],\n        speed: ['reduce speed to', 'increase speed to', 'maintain present speed of']\n    };\n\n    if (currentValue > nextValue) {\n        return CATEGORIES[category][0];\n    }\n\n    if (currentValue < nextValue) {\n        return CATEGORIES[category][1];\n    }\n\n    return CATEGORIES[category][2];\n};\n\n/**\n *\n * @function getCardinalDirection\n * @param angle\n * @return {string}\n */\nexport const getCardinalDirection = (angle) => {\n    return CARDINAL_DIRECTION[round(angle / tau() * 8)];\n};\n\n/**\n * Return a cardinalDirection when provided a heading\n *\n * @function getRadioCardinalDirectionNameForHeading\n * @param  heading {number}\n * @return {string}\n */\nexport const getRadioCardinalDirectionNameForHeading = (heading) => {\n    const cardinalDirection = getCardinalDirection(radians_normalize(heading + Math.PI)).toLowerCase();\n\n    return radio_cardinalDir_names[cardinalDirection];\n};\n","import { leftPad } from './generalUtilities';\nimport { randint } from '../math/core';\nimport { REGEX } from '../constants/globalConstants';\n\n/**\n * The highest decimal value allowed for a 4-digit\n * octal transponder code\n *\n * @property MAX_TRANSPONDER_CODE\n * @type {number}\n * @final\n */\nconst MAX_TRANSPONDER_CODE = 4095;\n\n/**\n * List of transponder codes that are reserved\n *\n * This enum should be used only during the generation of\n * `AircraftModel` objects.\n *\n * The codes listed should still be assignable at the\n * controler's discretion\n *\n * Source: https://en.wikipedia.org/wiki/List_of_transponder_codes\n *\n * @property TRANSPONDER_CODES\n * @type {array<object>}\n * @final\n */\nconst TRANSPONDER_CODES = [\n    {\n        // ICAO\n        prefix: null,\n        reserved: [\n        ]\n    },\n    {\n        // Europe\n        prefix: /^([elb])/,\n        reserved: [\n        ]\n    },\n    {\n        // Canda\n        prefix: /^c/,\n        reserved: [\n        ]\n    },\n    {\n        // Belgium\n        prefix: /^eb/,\n        reserved: [\n            // Assigned for VFR traffic under Flight Information Services (BXL FIC)\n            // 0041–0057\n            /^00(4[1-7]|5[0-7])$/,\n            // For testing stations\n            '7777'\n        ]\n    },\n    {\n        // Germany\n        prefix: /^e[dt]/,\n        reserved: [\n            // Parachute dropping\n            '0025',\n            // For testing stations\n            '7777'\n        ]\n    },\n    {\n        // Netherlands\n        prefix: /^eh/,\n        reserved: [\n            // For testing stations\n            '7777'\n        ]\n    },\n    {\n        // UK\n        prefix: /^eg/,\n        reserved: [\n            // Parachute drop\n            '0033',\n            // Sudden military climb out from low-level operations\n            '7001',\n            // Aerobatic & displays\n            '7004'\n        ]\n    },\n    {\n        // USA\n        prefix: /^k/,\n        reserved: [\n            // VFR - 12xx\n            /^12[0-7][0-7]$/,\n            // Reserved for use by SR-71, YF-12, U-2 and B-57, pressure suit flights,\n            // and aircraft operations above FL600. And many others\n            // 4400–4477\n            /^44[0-7]{2}$/,\n            // Reserved for use by Continental NORAD Region (CONR)\n            // 7501–7577\n            /^75(0[1-7]|[1-7][0-7])$/,\n            // Reserved for special use by FAA\n            // 7601–7607, 7701–7707\n            /^7[67]0[1-7]$/,\n            // External ARTCC subsets (Discrete codes of blocks only except for first primary\n            // block, which is used as the ARTCC's non-discrete code if all discrete codes are assigned)\n            // Not reserved as it implies they are useable\n            // 7610–7676, 7710–7776\n            // /^7[67]([1-6][0-7]|7[1-6])$/,\n            // Military & for testing stations\n            '7777'\n        ]\n    },\n    // {\n    //     // Washington DC\n    //     prefix: /^k/,\n    //     reserved: [\n    //         // Reserved for special use by Potomac TRACON\n    //         // 5061–5062\n    //         /^506[12]$/\n    //     ]\n    // },\n    {\n        // France\n        prefix: /^lf/,\n        reserved: [\n            // VFR\n            '7001'\n        ]\n    },\n    {\n        // Australia\n        prefix: /^y/,\n        reserved: [\n            // Civil flights engaged in littoral surveillance\n            '7615'\n        ]\n    }\n];\n\n/**\n * Gets the array of squawk code objects that match the specifed ICAO airport code\n *\n * @method _getCodes\n * @param icao {string}\n * @returns {array}\n * @private\n */\nfunction _getCodes(icao) {\n    return TRANSPONDER_CODES.filter((item) => {\n        return (item.prefix === null || item.prefix.test(icao)) &&\n            item.reserved.length !== 0;\n    });\n}\n\n/**\n * Helper used to test if the `transponderCode` matches the\n * String or RegExp in `against`\n *\n * @param transponderCode {string}\n * @param testAgainst {string|RegExp}\n * @private\n */\nfunction _isMatch(transponderCode, testAgainst) {\n    if (testAgainst instanceof RegExp) {\n        return testAgainst.test(transponderCode);\n    } else if (typeof testAgainst === 'string') {\n        return transponderCode === testAgainst;\n    }\n\n    throw new TypeError(\n        `Invalid parameter for testAgainst, expected string or RegExp, but got ${typeof testAgainst}`\n    );\n}\n\n/**\n * Helper used to determine if a given `transponderCode` is reserved\n * in the country or region of the specified `icao` airport code\n *\n * @method _isReserved\n * @param icao {string}\n * @param transponderCode {string}\n * @returns {boolean}\n * @private\n */\nfunction _isReserved(icao, transponderCode) {\n    return _getCodes(icao).some((item) => {\n        return item.reserved.some((test) => _isMatch(transponderCode, test));\n    });\n}\n\n/**\n * Helper used to generate a new 4 digit octal transponder code\n *\n * @returns {string}\n */\nexport const generateTransponderCode = () => {\n    const code = randint(0, MAX_TRANSPONDER_CODE).toString(8);\n    return leftPad(code, 4);\n};\n\n/**\n * Boolean helper used to determine if a given `transponderCode` is both\n * the correct length and an octal number.\n *\n * @method isValidTransponderCode\n * @param transponderCode {string}\n * @return {boolean}\n */\nexport const isValidTransponderCode = (transponderCode) => {\n    return REGEX.TRANSPONDER_CODE.test(transponderCode);\n};\n\n/**\n * Helper used to determine if a given `transponderCode` is both\n * valid and not reserved in the country or region of the\n * specified `icao` airport code\n *\n * @method isDiscreteTransponderCode\n * @param icao {string}\n * @param transponderCode {string}\n * @return {boolean}\n */\nexport const isDiscreteTransponderCode = (icao, transponderCode) => {\n    if (!isValidTransponderCode(transponderCode)) {\n        return false;\n    }\n\n    if (transponderCode.endsWith('00')) {\n        return false;\n    }\n\n    return !_isReserved(icao, transponderCode);\n};\n","import _includes from 'lodash/includes';\nimport _isNumber from 'lodash/isNumber';\nimport _startsWith from 'lodash/startsWith';\nimport { tau } from '../math/circle';\nimport { round, mod } from '../math/core';\nimport { TIME, REGEX } from '../constants/globalConstants';\n\n/**\n * @property DECIMAL_RADIX\n * @type {number}\n * @final\n */\nexport const DECIMAL_RADIX = 10;\n\n// TODO: This should be moved to its own file once it has been filled in a little more\n/**\n * @property UNIT_CONVERSION_CONSTANTS\n * @type {Object}\n */\nexport const UNIT_CONVERSION_CONSTANTS = {\n    /**\n    * nautical miles to feet\n    *\n    * @property NM_FT\n    * @type {Number}\n    * @final\n    */\n    NM_FT: 6076.115485564,\n    /**\n     * nautical mile per kilometer ratio\n     *\n     * @property NM_KM\n     * @type {number}\n     * @final\n     */\n    NM_KM: 1.852,\n    /**\n     * Meters to feet ratio\n     *\n     * @property M_FT\n     * @type {number}\n     * @final\n     */\n    M_FT: 0.3048,\n    /**\n     * kilometer per foot ratio\n     *\n     * @property KM_FT\n     * @type {number}\n     * @final\n     */\n    KM_FT: 0.0003048,\n    /**\n     * knots per m/s ratio\n     *\n     * @property KN_MS\n     * @type {number}\n     * @final\n     */\n    KN_MS: 0.51444444,\n    /**\n     * Number used to obtain altitude in feet from flight level\n     *\n     * @property FL_FT\n     * @type {number}\n     * @final\n     */\n    FL_FT: 100,\n    /**\n     * Number used to obtain flight level from altitude in feet\n     *\n     * @property FT_FL\n     * @type {number}\n     * @final\n     */\n    FT_FL: 0.01\n};\n\n// TODO: This should be moved to its own file once it has been filled in a little more\n/**\n * @property NUMBER_CONSTANTS\n * @type {Object}\n * @final\n */\nexport const NUMBER_CONSTANTS = {\n    /**\n     * Degrees in a circle\n     *\n     * @property FULL_CIRCLE_DEGREES\n     * @type {number}\n     * @final\n     */\n    FULL_CIRCLE_DEGREES: 360\n};\n\n/**\n * nautical miles --> kilometers\n *\n * @function km\n * @param nm {number}\n * @return {number}\n */\nexport const km = (nm = 0) => {\n    return nm * UNIT_CONVERSION_CONSTANTS.NM_KM;\n};\n\n/**\n * kilometers --> nautical miles\n *\n * @function nm\n * @param kilometers {number}\n * @return {number}\n */\nexport const nm = (kilometers = 0) => {\n    return kilometers / UNIT_CONVERSION_CONSTANTS.NM_KM;\n};\n\n/**\n * meters -> feet\n *\n * @function m_ft\n * @param {number} [meters=0]\n * @return {number}\n */\nexport const m_ft = (meters = 0) => {\n    return meters / UNIT_CONVERSION_CONSTANTS.M_FT;\n};\n\n/**\n * kilometers --> feet\n *\n * @function km_ft\n * @param kilometers {number}\n * @return {number}\n */\nexport const km_ft = (kilometers = 0) => {\n    return kilometers / UNIT_CONVERSION_CONSTANTS.KM_FT;\n};\n\n/**\n * feet --> kilometers\n *\n * @function ft_km\n * @param nm {number}\n * @return {number}\n */\nexport const ft_km = (ft = 0) => {\n    return ft * UNIT_CONVERSION_CONSTANTS.KM_FT;\n};\n\n/**\n * knots to m/s\n *\n * @function kn_ms\n * @param kn {number}\n * @return {number}\n */\nexport const kn_ms = (kn = 0) => {\n    return kn * UNIT_CONVERSION_CONSTANTS.KN_MS;\n};\n\n/**\n * nautical miles to feet\n *\n * @function nm_ft\n * @param nm {number}\n * @return {number}\n */\nexport const nm_ft = (nm) => {\n    return nm * UNIT_CONVERSION_CONSTANTS.NM_FT;\n};\n\n/**\n * convert radians to degrees\n *\n * @function radiansToDegrees\n * @param radians {number}\n * @return {number}\n */\nexport const radiansToDegrees = (radians) => {\n    return (radians / (tau())) * NUMBER_CONSTANTS.FULL_CIRCLE_DEGREES;\n};\n\n/**\n * convert degrees to radians\n *\n * @function degreesToRadians\n * @param degrees {number}\n * @return {number}\n */\nexport const degreesToRadians = (degrees) => {\n    return (degrees / NUMBER_CONSTANTS.FULL_CIRCLE_DEGREES) * (tau());\n};\n\n/**\n * @function convertMinutesToSeconds\n * @param minutes {number}\n * @return {number}\n */\nexport const convertMinutesToSeconds = (minutes) => minutes * 60;\n\n/**\n * Utility function to convert a number to thousands.\n *\n * Given a flightlevel FL180, this function outputs 18,000\n *\n * @function covertToThousands\n * @param  {number} value\n * @return {number}\n */\nexport const convertToThousands = (value) => parseInt(value, DECIMAL_RADIX) * UNIT_CONVERSION_CONSTANTS.FL_FT;\n\n/**\n * Attempt to convert a string to a number\n *\n * The implementor will have to handle the case where `parseInt` returns `NaN`\n *\n * @function convertStringToNumber\n * @param  value {string|*}\n * @return {number|NaN}\n */\nexport const convertStringToNumber = (value) => parseInt(value, DECIMAL_RADIX);\n\n/**\n * Convert a heading in radians to a 360 degree string\n *\n * @function heading_to_string\n * @param heading {string}  heading in radians\n * @return {string}\n */\nexport const heading_to_string = (heading) => {\n    heading = round(mod(radiansToDegrees(heading), 360)).toString();\n\n    if (heading === '0') {\n        heading = '360';\n    }\n\n    if (heading.length === 1) {\n        heading = `00${heading}`;\n    }\n\n    if (heading.length === 2) {\n        heading = `0${heading}`;\n    }\n\n    return heading;\n};\n\n/**\n * Accept a lat/long coordinate and return a value in decimal notation\n *\n * Latitude and Longitude numbers may be one of the following forms:\n *   Decimal degrees - 'N47.112388112'\n *   Decimal minutes - 'N38d38.109808'\n *   Decimal seconds - 'N58d27m12.138'\n *\n * @function parseCoordinate\n * @param coordinate {string}\n * @return transformedCoordinate {number}\n */\nexport const parseCoordinate = (coordinate) => {\n    const match = REGEX.LAT_LONG.exec(coordinate);\n\n    // If coordinate already in WGS84 ESPG:4326 form ('39.427618, -75.296011'), just return it as-is\n    if (match == null) {\n        return coordinate;\n    }\n\n    const degrees = parseFloat(match[2]);\n    let minutes = 0;\n    let seconds = 0;\n\n    // Gather minutes/seconds as decimal of a degree, if available\n    if (match[5] != null) {\n        minutes = (parseFloat(match[5]) * TIME.ONE_MINUTE_IN_HOURS);\n\n        if (match[8] != null) {\n            seconds = (parseFloat(match[8]) * TIME.ONE_SECOND_IN_HOURS);\n        }\n    }\n\n    let decimalDegrees = degrees + minutes + seconds;\n\n    // Apply negative to value if coordinate is \"South\" or \"West\"\n    if (REGEX.SW.test(match[1])) {\n        decimalDegrees *= -1;\n    }\n\n    return decimalDegrees;\n};\n\n/**\n * Accept a string elevation and return a number representing elevation in ft.\n *\n * @function parseElevation\n * @param elevation {string}    ex: 13.4ft, 3m, 5ft\n * @return {number}             elevation in feet\n */\nexport const parseElevation = (elevation) => {\n    // TODO: move to master REGEX constant\n    // this regex will catch the following: `-`, `m`, `ft`, `Infinity`, and is used to extract a number\n    // from a string containing these symbols.\n    const REGEX = /(-)|(m|ft|Infinity)/gi;\n\n    // if its a number, we're done here.\n    // This will catch whole numbers, floats, Infinity and -Infinity.\n    // This checks if strings are given will skip the regex and exit early\n    // Also stops the function from returning NaN\n    if (_isNumber(elevation) || elevation === 'Infinity' || elevation === '-Infinity') {\n        return parseFloat(elevation);\n    }\n\n    let parsedElevation = elevation.replace(REGEX, '');\n    const elevationUnit = elevation.match(REGEX);\n\n    // if its in meters, convert it to feet\n    if (_includes(elevationUnit, 'm')) {\n        parsedElevation = m_ft(parsedElevation);\n    }\n\n    // if it came in as a negative number,return it as a negative number\n    if (_startsWith(elevation, '-')) {\n        parsedElevation *= -1;\n    }\n\n    return parseFloat(parsedElevation);\n};\n","import _isArray from 'lodash/isArray';\nimport _isEmpty from 'lodash/isEmpty';\nimport _isObject from 'lodash/isObject';\n\n/**\n * This will return true if it is not an object or it is empty\n *\n * @funtion isEmptyOrNotObject\n * @param value {*}\n * @return {boolean}\n */\nexport const isEmptyOrNotObject = (value) => {\n    return !_isObject(value) || _isEmpty(value);\n};\n\n/**\n * This will return true if it is not an array or it is empty\n *\n * @funtion isEmptyOrNotArray\n * @param value {*}\n * @return {boolean}\n */\nexport const isEmptyOrNotArray = (value) => {\n    return !_isArray(value) || _isEmpty(value);\n};\n"]}